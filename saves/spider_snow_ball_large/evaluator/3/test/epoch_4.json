{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "ids, names, and ages of all visitors who visited more than 1 visit.", "remark": "positive", "label": "1", "score": "0.7599018812179565"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series are on TV channel A Love of a Lifetime?", "remark": "negative", "label": "0", "score": "0.5455173254013062"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "average horsepower of the cars produced before 1980?", "remark": "positive", "label": "1", "score": "0.8422185778617859"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member after 2010.", "remark": "negative", "label": "0", "score": "0.49795395135879517"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "is the model of the car with the largest number of cylinders and the largest number of horsepower?", "remark": "negative", "label": "0", "score": "0.49439823627471924"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids of templates whose type code is \"PS\" or whose type code is \"PT\"?", "remark": "negative", "label": "0", "score": "0.695660412311554"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "ids of airlines that have less than 200 flights.", "remark": "negative", "label": "0", "score": "0.764095664024353"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of airlines that have less than 200 number of flights.", "remark": "positive", "label": "1", "score": "0.6789153218269348"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of distinct winners of the tourney named Wta Championships.", "remark": "negative", "label": "0", "score": "0.7952077388763428"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the countries that have more than 3 models and have more than 3 manufacturers?", "remark": "negative", "label": "0", "score": "0.5506342649459839"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest bonus?", "remark": "positive", "label": "1", "score": "0.562839925289154"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "the ids of all students who have friends and likes.", "remark": "negative", "label": "0", "score": "0.8113850951194763"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the templates whose type code is \"PS\" or whose type code is \"PFT\".", "remark": "negative", "label": "0", "score": "0.7895315289497375"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and dislikes.", "remark": "negative", "label": "0", "score": "0.7425844073295593"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "number of distinct winners of the tourney named Wta championships with winner hand.", "remark": "negative", "label": "0", "score": "0.7734276056289673"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first names and last names of all players sorted by birth date?", "remark": "positive", "label": "1", "score": "0.5829571485519409"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest score in an evaluation.", "remark": "negative", "label": "0", "score": "0.14939813315868378"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of the students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.5873783826828003"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players ordered by birth date.", "remark": "positive", "label": "1", "score": "0.7447032332420349"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct names of the models that are made by either the manufacturer with full name 'General Motors' or have weight bigger than 3500.", "remark": "positive", "label": "1", "score": "0.794488787651062"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "country name and id of the country that has at least one car maker.", "remark": "positive", "label": "1", "score": "0.8320252895355225"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "number of distinct series name and content for tv channels.", "remark": "positive", "label": "1", "score": "0.7817510962486267"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "names of airlines with abbreviation \"AL\".", "remark": "negative", "label": "0", "score": "0.7954884767532349"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "id of the car that has the highest accelerate model?", "remark": "negative", "label": "0", "score": "0.4951031506061554"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that do not have any source flight from CV to apg?", "remark": "negative", "label": "0", "score": "0.5329284071922302"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "country code and first name of the players who won both the WTA championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.7082493901252747"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "the number of models made by the country \"USA\".", "remark": "positive", "label": "1", "score": "0.6744480133056641"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the number of flights operated by airlines with number less than 200.", "remark": "negative", "label": "0", "score": "0.7104568481445312"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in country Haiti and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.7255297303199768"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree with the most student enrolment?", "remark": "positive", "label": "1", "score": "0.5071077942848206"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "has the most number of cylinders produced before 1980?", "remark": "negative", "label": "0", "score": "0.27685248851776123"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries have a language that is official?", "remark": "negative", "label": "0", "score": "0.6043175458908081"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who like and like some friends.", "remark": "negative", "label": "0", "score": "0.732307493686676"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the airlines that are associated with flights that are not from CV but not from apg?", "remark": "negative", "label": "0", "score": "0.6515840888023376"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends and liked likes.", "remark": "negative", "label": "0", "score": "0.8137933611869812"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a pet of the type 'Dog' but not a cat.", "remark": "positive", "label": "1", "score": "0.6456795930862427"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents that have the type code PPT.", "remark": "positive", "label": "1", "score": "0.6408246755599976"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "are the airlines with abbreviationUAL?", "remark": "negative", "label": "0", "score": "0.8037437200546265"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest number of evaluations and gets the highest bonus.", "remark": "negative", "label": "0", "score": "0.7675526142120361"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of all the airlines that have both flights from CVO and APG but no flights from APG.", "remark": "negative", "label": "0", "score": "0.6303911209106445"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest total bonus?", "remark": "positive", "label": "1", "score": "0.13118508458137512"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers who are older than 20?", "remark": "positive", "label": "1", "score": "0.8194668292999268"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of all teachers and the number of courses arranged by each teacher?", "remark": "positive", "label": "1", "score": "0.385347843170166"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the most programs.", "remark": "negative", "label": "0", "score": "0.45505571365356445"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many languages are there in Afghanistan?", "remark": "negative", "label": "0", "score": "0.5996626615524292"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the least number of cylinders that was produced before 1980 or before 1980?", "remark": "negative", "label": "0", "score": "0.0858597606420517"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, last name, and last name of the student who left school on the earliest date?", "remark": "negative", "label": "0", "score": "0.42365264892578125"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "airline with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.8167496919631958"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "number of models that are produced by the country USA?", "remark": "positive", "label": "1", "score": "0.35885581374168396"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents that have the type code 'PPT'.", "remark": "positive", "label": "1", "score": "0.6265588998794556"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids for the templates whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.7220539450645447"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the death and the injured of ships with tonnage of t2.", "remark": "negative", "label": "0", "score": "0.13152433931827545"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who like and like some friends.", "remark": "negative", "label": "0", "score": "0.7323074340820312"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids of templates that have type code \"PS\" or type code \"Ppt\".", "remark": "negative", "label": "0", "score": "0.7892371416091919"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average horsepower for all cars that were built before 1980?", "remark": "negative", "label": "0", "score": "0.8680577278137207"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "the number of flights that go to the airport ato.", "remark": "positive", "label": "1", "score": "0.7773038744926453"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "is the id of the model that can accelerate the most?", "remark": "negative", "label": "0", "score": "0.6704460382461548"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest total bonus?", "remark": "positive", "label": "1", "score": "0.13118425011634827"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and the number of injured by ships with tonnage smaller than 't'.", "remark": "negative", "label": "0", "score": "0.042251601815223694"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "is the airline with abbreviation \"UAL\"?", "remark": "negative", "label": "0", "score": "0.8530810475349426"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the names of teachers and the number of courses they are involved in.", "remark": "positive", "label": "1", "score": "0.5516977310180664"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "all series from A Love of a Lifetime", "remark": "negative", "label": "0", "score": "0.3486194610595703"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "is the id of the template type described as \"Presentation\"?", "remark": "negative", "label": "0", "score": "0.7797141671180725"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers younger than 20?", "remark": "negative", "label": "0", "score": "0.16326367855072021"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are official Chinese cities in the \"continent\" of \"Asia\".", "remark": "negative", "label": "0", "score": "0.80143141746521"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "number of distinct winners of the WTA championships with winner hand L.", "remark": "positive", "label": "1", "score": "0.7570387721061707"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the names of countries whose population is greater than the population of all countries on the continent of \"Asia\".", "remark": "negative", "label": "0", "score": "0.8137502670288086"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent and the number of car makers from that continent", "remark": "negative", "label": "0", "score": "0.17445974051952362"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many different series are there on TV channels?", "remark": "negative", "label": "0", "score": "0.5400858521461487"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the names of countries whose population is greater than the population of all countries in the continent of \"Africa\".", "remark": "negative", "label": "0", "score": "0.8076778054237366"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program that has the most students enrolled?", "remark": "positive", "label": "1", "score": "0.5306552648544312"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "number of documents that have type code 'PPT'.", "remark": "positive", "label": "1", "score": "0.6396331191062927"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the names of teachers and the number of courses they teach.", "remark": "positive", "label": "1", "score": "0.4878387749195099"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id, middle name, last name, and id of the student who has the most enrollments.", "remark": "negative", "label": "0", "score": "0.6488892436027527"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series name of the channel that has an episode of \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.5506351590156555"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "Chinese cities in asia continent?", "remark": "negative", "label": "0", "score": "0.3437143862247467"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "number of flights operated by airline \"United Airlines\" and \"Asy\".", "remark": "negative", "label": "0", "score": "0.7135921120643616"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are not friends with any other student.", "remark": "positive", "label": "1", "score": "0.5896835923194885"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "the number of flights operated by airline \"United Airlines\" whose destination is \"USA\".", "remark": "negative", "label": "0", "score": "0.7217011451721191"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "country does the airline Jetblue Airlines belong to?", "remark": "negative", "label": "0", "score": "0.7952315807342529"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries are \"Afghanistan\" official?", "remark": "negative", "label": "0", "score": "0.6254928112030029"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name ordered by birth date.", "remark": "negative", "label": "0", "score": "0.6462458372116089"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "is the airline with abbreviation \"UAL\"?", "remark": "negative", "label": "0", "score": "0.8530809879302979"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "many flights are there from ashley airport in Aberdeen city?", "remark": "negative", "label": "0", "score": "0.6339961290359497"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "are the cylinders of the car with the model with the highest accelerate?", "remark": "negative", "label": "0", "score": "0.6877627968788147"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average horsepower for all cars that were built before 1980?", "remark": "negative", "label": "0", "score": "0.8680577278137207"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "all the countries that have singers older than 20?", "remark": "positive", "label": "1", "score": "0.6192306876182556"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "is the template type code that is not used by any document?", "remark": "negative", "label": "0", "score": "0.6636718511581421"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name of all players ordered by birth date?", "remark": "positive", "label": "1", "score": "0.5862078666687012"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.7451701760292053"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have both a friend and a student who has a friend.", "remark": "negative", "label": "0", "score": "0.7373576164245605"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and the first name of the player who won both the WTA Championships and the Australian Open?", "remark": "positive", "label": "1", "score": "0.5029329061508179"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff after opening year.", "remark": "negative", "label": "0", "score": "0.4496394395828247"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "is the id of the template type described by the description?", "remark": "negative", "label": "0", "score": "0.6966105699539185"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "country name and id of the country that has at least one car manufacturer?", "remark": "positive", "label": "1", "score": "0.8041362166404724"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the students who left school before any date.", "remark": "negative", "label": "0", "score": "0.0461544431746006"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "are the airports that have less than 200 flights?", "remark": "negative", "label": "0", "score": "0.19089482724666595"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car with the smallest data.", "remark": "negative", "label": "0", "score": "0.6306276917457581"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a pet with type 'dog' but not cat?", "remark": "positive", "label": "1", "score": "0.6362238526344299"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who like friends.", "remark": "negative", "label": "0", "score": "0.7084472179412842"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses they arrange.", "remark": "positive", "label": "1", "score": "0.5489435791969299"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "is the id of the car with the model name 'volvo' accelerating the most?", "remark": "negative", "label": "0", "score": "0.7087056040763855"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age for all visitors who made more than one visit?", "remark": "positive", "label": "1", "score": "0.6827868819236755"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age of the visitors who visited more than 1 place.", "remark": "negative", "label": "0", "score": "0.7428891658782959"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of the airlines that have both flights from CVO and flights from APG but no flights from APG?", "remark": "negative", "label": "0", "score": "0.46484994888305664"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template type described as \"Presentation\".", "remark": "positive", "label": "1", "score": "0.8099712133407593"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the most number of courses?", "remark": "negative", "label": "0", "score": "0.35419413447380066"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the template id and type code of the document with the most documents?", "remark": "negative", "label": "0", "score": "0.6513509154319763"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "the number of flights that originate in ashley and/or Aberdeen airports.", "remark": "negative", "label": "0", "score": "0.22169317305088043"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the most documents?", "remark": "positive", "label": "1", "score": "0.5329042673110962"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series names of the tv channels that have an episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.581983745098114"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the name of students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.5597303509712219"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "are the names and abbrevents of all airlines based in the country \"USA\"?", "remark": "negative", "label": "0", "score": "0.7945258021354675"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age of the visitors who visited more than 1 time.", "remark": "positive", "label": "1", "score": "0.7393990755081177"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "names of all the models that have either 'General Motors' or weight greater than 3500?", "remark": "negative", "label": "0", "score": "0.641123354434967"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who have likes and likes?", "remark": "negative", "label": "0", "score": "0.44960883259773254"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "each continent and the number of car makers on that continent.", "remark": "positive", "label": "1", "score": "0.6032075881958008"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current addresses of students?", "remark": "positive", "label": "1", "score": "0.6433516144752502"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "continents and the number of car makers on each continent.", "remark": "positive", "label": "1", "score": "0.5870915651321411"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first names and last names of all players in alphabetical order.", "remark": "negative", "label": "0", "score": "0.056480709463357925"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first name of students who live in country Haiti and whose cell phone number is '09700166582'.", "remark": "negative", "label": "0", "score": "0.7339502573013306"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type of the template that has the most documents?", "remark": "negative", "label": "0", "score": "0.5086448192596436"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct models of the cars whose full name is 'General Motors' or have weight greater than 3500?", "remark": "positive", "label": "1", "score": "0.7350344061851501"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the countries whose population is greater than the population of all countries in the continent \"Asia\".", "remark": "negative", "label": "0", "score": "0.7445080876350403"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct cities in China where the language is English and the language is Chinese and the continent is asia?", "remark": "negative", "label": "0", "score": "0.5543006658554077"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the name of countries that have a population larger than the largest country in Africa.", "remark": "negative", "label": "0", "score": "0.8172422051429749"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the names and id of the countries that have at least one vehicle", "remark": "negative", "label": "0", "score": "0.6915075778961182"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries that are official in Afghanistan?", "remark": "negative", "label": "0", "score": "0.515892744064331"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct models whose full name is General Motors or whose weight is greater than 3500;", "remark": "positive", "label": "1", "score": "0.6905617713928223"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and the number of people injured by ships of tonnage T2.", "remark": "negative", "label": "0", "score": "0.2092537134885788"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids for all students who have friends and liked.", "remark": "negative", "label": "0", "score": "0.79814213514328"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car whose data is the minimum year?", "remark": "positive", "label": "1", "score": "0.5821617841720581"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age for all the visitors who visited more than one time.", "remark": "positive", "label": "1", "score": "0.7725276350975037"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population", "remark": "negative", "label": "0", "score": "0.35984137654304504"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages in each country that have more than 2 languages.", "remark": "negative", "label": "0", "score": "0.7662416696548462"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are made by the country USA?", "remark": "negative", "label": "0", "score": "0.5021992921829224"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program with the most student enrolment?", "remark": "positive", "label": "1", "score": "0.5211617946624756"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages that are used by more than 2 countries.", "remark": "negative", "label": "0", "score": "0.7664104104042053"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the most programs?", "remark": "negative", "label": "0", "score": "0.2989663779735565"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the deaths and the injured of ships with tonnage of t2.", "remark": "negative", "label": "0", "score": "0.14095790684223175"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the id of the car with the name AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.6040817499160767"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "the mpg of the car with the cylinders equal to 8 or less before 1980?", "remark": "negative", "label": "0", "score": "0.2598094940185547"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars whose full name is 'General Motors' or have data greater than 3500?", "remark": "positive", "label": "1", "score": "0.5458375811576843"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights go to the airport ato?", "remark": "negative", "label": "0", "score": "0.7106578350067139"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the name and abbreviation of the airline whose country is \"USA\"?", "remark": "positive", "label": "1", "score": "0.7331459522247314"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights go to the airport ato?", "remark": "negative", "label": "0", "score": "0.7106578350067139"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "are the names of airlines that do not operate flights from CVO but not from apg?", "remark": "negative", "label": "0", "score": "0.649700939655304"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id, middle name, last name, and the number of students enrolled in the most courses?", "remark": "negative", "label": "0", "score": "0.32230016589164734"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.7557037472724915"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who have likes and likes?", "remark": "negative", "label": "0", "score": "0.44960877299308777"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "are the names and ids of countries that have at least one car manufacturer?", "remark": "negative", "label": "0", "score": "0.8265084624290466"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current address ids for students?", "remark": "positive", "label": "1", "score": "0.7897716164588928"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name and age of the visitor who visited more than 1 time.", "remark": "positive", "label": "1", "score": "0.7314196228981018"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "the model of the car with the most horsepower that has 4 cylinders.", "remark": "positive", "label": "1", "score": "0.7593438029289246"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have both a friend and a friend.", "remark": "negative", "label": "0", "score": "0.7489320635795593"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages that are used by more than 2 countries.", "remark": "negative", "label": "0", "score": "0.7664104700088501"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "mpg of the car with the cylinders equal to 8 or before 1980.", "remark": "positive", "label": "1", "score": "0.18687495589256287"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the students who have both a dog and a cat.", "remark": "negative", "label": "0", "score": "0.3137577176094055"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car that has the most accelerations?", "remark": "negative", "label": "0", "score": "0.562113881111145"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who have likes?", "remark": "negative", "label": "0", "score": "0.3981209099292755"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "is the id of the car with the model 'Volvo' that accelerates the most?", "remark": "negative", "label": "0", "score": "0.6935169696807861"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "all airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.8209354281425476"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the students who left school on the most recent date?", "remark": "negative", "label": "0", "score": "0.6008756160736084"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "number of flights that go to ato airport?", "remark": "positive", "label": "1", "score": "0.6014170050621033"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends and liked them.", "remark": "negative", "label": "0", "score": "0.8150015473365784"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of teachers and the number of courses arrange by each teacher.", "remark": "negative", "label": "0", "score": "0.48883238434791565"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured of ships with tonnage of T2.", "remark": "negative", "label": "0", "score": "0.2105574905872345"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "cities in China that have language 'T' and whose continent is asia", "remark": "negative", "label": "0", "score": "0.44187262654304504"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline name and abbreviation for airlines in country \"USA\".", "remark": "positive", "label": "1", "score": "0.8551638722419739"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "the number of models produced by the country named USA", "remark": "positive", "label": "1", "score": "0.2500009834766388"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who got the highest bonus.", "remark": "positive", "label": "1", "score": "0.6822826862335205"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff after opening year 2010.", "remark": "negative", "label": "0", "score": "0.6430188417434692"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries have official language in Afghanistan?", "remark": "negative", "label": "0", "score": "0.6034327149391174"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "many flights did Ashley have between Aberdeen and Aberdeen city?", "remark": "negative", "label": "0", "score": "0.5609537363052368"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does the airline JetBlue Airlines belong to?", "remark": "negative", "label": "0", "score": "0.7627352476119995"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type of the template that has been used the most times.", "remark": "positive", "label": "1", "score": "0.6820497512817383"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "are the make and year of the car that was used the smallest amount of data?", "remark": "negative", "label": "0", "score": "0.6565480828285217"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses arranged by that teacher.", "remark": "positive", "label": "1", "score": "0.5477526783943176"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series and content are there on tv channels?", "remark": "negative", "label": "0", "score": "0.7169079184532166"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of distinct series names and content.", "remark": "negative", "label": "0", "score": "0.7695439457893372"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average horsepower of all the cars produced before 1980", "remark": "negative", "label": "0", "score": "0.7764216661453247"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the id of the car whose name is AMC hornet sportabout (sw)", "remark": "negative", "label": "0", "score": "0.40125715732574463"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players, ordered by birth date.", "remark": "positive", "label": "1", "score": "0.7612496018409729"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the most popular document template?", "remark": "positive", "label": "1", "score": "0.5803260803222656"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "ids of airlines that do not have sourceairport CVO but not apg?", "remark": "negative", "label": "0", "score": "0.6419211030006409"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "me the model of the car with the largest number of cylinders and 4 horsepower.", "remark": "negative", "label": "0", "score": "0.7372137904167175"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of teachers and the corresponding number of courses offered by each teacher?", "remark": "positive", "label": "1", "score": "0.3649584650993347"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in the country 'Haiti' and have a cell phone number of '09700166582'.", "remark": "negative", "label": "0", "score": "0.6728552579879761"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "are the countries that have more than 3 models and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.6613052487373352"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "are the series names of the tv channels that have \"A Love of a Lifetime\"?", "remark": "negative", "label": "0", "score": "0.689944863319397"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "country with a population greater than the maximum in africa", "remark": "negative", "label": "0", "score": "0.3990193009376526"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "ids, names, and ages of all visitors who visited more than 1 place.", "remark": "negative", "label": "0", "score": "0.7482351660728455"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models that are not produced by the company whose weight is less than 3500 and whose full name is not 'Ford Motor Company'.", "remark": "negative", "label": "0", "score": "0.8140718936920166"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of teachers and the number of courses arrange by each teacher.", "remark": "negative", "label": "0", "score": "0.4888322055339813"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights operated by United Airlines with destination airport \"ASY\".", "remark": "negative", "label": "0", "score": "0.802636444568634"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "is the model of the car with the most horsepower, with the most cylinders?", "remark": "negative", "label": "0", "score": "0.4653880298137665"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are made by the country USA?", "remark": "negative", "label": "0", "score": "0.5021993517875671"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "are the names of the cars that were produced in the smallest year?", "remark": "negative", "label": "0", "score": "0.7144304513931274"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many different series names and content on TV channels.", "remark": "negative", "label": "0", "score": "0.8069987297058105"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id and summary name of the degree program that has the most student enrollments?", "remark": "positive", "label": "1", "score": "0.4358592927455902"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the names of museums that have more than one head of staff in the year before 2010.", "remark": "negative", "label": "0", "score": "0.05794958025217056"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent and the number of car makers in each continent?", "remark": "positive", "label": "1", "score": "0.3183458149433136"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first names and last names of all players in alphabetical order by birth date.", "remark": "positive", "label": "1", "score": "0.756870687007904"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "the number of flights from ashley airport to Aberdeen airport.", "remark": "negative", "label": "0", "score": "0.67131507396698"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average horsepower of all cars produced before 1980?", "remark": "negative", "label": "0", "score": "0.8636389374732971"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the largest number of courses.", "remark": "negative", "label": "0", "score": "0.5058562159538269"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "type code for all templates except those with documents.", "remark": "positive", "label": "1", "score": "0.7230967879295349"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses arranged by that teacher?", "remark": "positive", "label": "1", "score": "0.43284401297569275"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "number of flights operated by airlines \"United Airlines\" and \"Asy\".", "remark": "negative", "label": "0", "score": "0.7112076878547668"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of the cars produced before 1980.", "remark": "positive", "label": "1", "score": "0.8642625212669373"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players from both the WTA Championships and Australian Open?", "remark": "negative", "label": "0", "score": "0.4653911888599396"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the code of the template that does not have any documents?", "remark": "negative", "label": "0", "score": "0.5986152291297913"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that have never operated to CV but never to apg?", "remark": "negative", "label": "0", "score": "0.5693410038948059"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "first name and age of the students who have a pet with type 'Dog' but not a cat?", "remark": "positive", "label": "1", "score": "0.5903804302215576"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the id and type code of the template with most number of documents?", "remark": "negative", "label": "0", "score": "0.6401513814926147"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and the number of people injured by ships whose tonnage is 't'.", "remark": "positive", "label": "1", "score": "0.798944890499115"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and name of countries that have more than 3 car makers and have more than 3 models.", "remark": "negative", "label": "0", "score": "0.7209669351577759"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "the number of flights from airports in city \"Ashley\" and \"Aberdeen\".", "remark": "negative", "label": "0", "score": "0.7197692394256592"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member.", "remark": "negative", "label": "0", "score": "0.29144319891929626"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program with the most student enrollment?", "remark": "positive", "label": "1", "score": "0.531322181224823"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and injured by ships with tonnage 'T2'.", "remark": "negative", "label": "0", "score": "0.09765582531690598"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series names of tv channels that have an episode of \"A Love of a Lifetime \".", "remark": "positive", "label": "1", "score": "0.7746859192848206"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the code of the template type that is not used in any documents.", "remark": "positive", "label": "1", "score": "0.6005496382713318"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured number of ships with a tonnage of t2.", "remark": "negative", "label": "0", "score": "0.09964077919721603"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population in africa", "remark": "negative", "label": "0", "score": "0.36863914132118225"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "mpg of the car with cylinders equal to 8 or less than 1980.", "remark": "negative", "label": "0", "score": "0.1479329764842987"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the student with the most enrollments. List the student ID, first name, middle name, last name, and the number of enrollments.", "remark": "positive", "label": "1", "score": "0.677096426486969"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, and last name of the student who left school on the most recent date?", "remark": "negative", "label": "0", "score": "0.5623276829719543"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the names of museums that have a minuscule number of staff and opened after 2010.", "remark": "negative", "label": "0", "score": "0.7144648432731628"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name and age for all the visitors who made more than one visit?", "remark": "positive", "label": "1", "score": "0.6828600764274597"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "each country, how many cars are there in that country?", "remark": "negative", "label": "0", "score": "0.7072149515151978"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "number of flights operated by airline \"United Airlines\" from asy", "remark": "negative", "label": "0", "score": "0.40231940150260925"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "are the series names of the tv channels that have \"A Love of a Lifetime\"?", "remark": "negative", "label": "0", "score": "0.6899448037147522"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the names of museums that have more than one staff member after opening in year 2010.", "remark": "negative", "label": "0", "score": "0.6386783719062805"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name of all players ordered by birth date.", "remark": "positive", "label": "1", "score": "0.7131132483482361"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "are the names and abbrevents of all airlines based in the country \"USA\"?", "remark": "negative", "label": "0", "score": "0.7945255637168884"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and dislikes.", "remark": "negative", "label": "0", "score": "0.7425845861434937"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a dog but not a cat?", "remark": "positive", "label": "1", "score": "0.6258644461631775"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and name of countries that have more than 3 car makers and have more than 3 models.", "remark": "negative", "label": "0", "score": "0.7209668159484863"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the number of car manufacturers in each country.", "remark": "negative", "label": "0", "score": "0.6516502499580383"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of the players who won both the WTA Championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.7379710674285889"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "the model of the car that has the largest number of cylinders with 4 horsepower and the most number of wheels.", "remark": "negative", "label": "0", "score": "0.301351934671402"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students whose permanent address is in the country of 'haiti' and cell phone number is 09700166582?", "remark": "negative", "label": "0", "score": "0.22887128591537476"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "first name and age of the student who has a pet with type 'dog' but not a cat?", "remark": "positive", "label": "1", "score": "0.5971534252166748"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have any friend.", "remark": "positive", "label": "1", "score": "0.5789117813110352"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers older than 20.", "remark": "positive", "label": "1", "score": "0.8666417598724365"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id and type code of the template that has the most documents?", "remark": "negative", "label": "0", "score": "0.4563553035259247"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids for all students who have both friends and likes?", "remark": "negative", "label": "0", "score": "0.6663935780525208"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerate the car with id 'amc hornet sportabout'", "remark": "negative", "label": "0", "score": "0.38313886523246765"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template type described by the template type description.", "remark": "negative", "label": "0", "score": "0.7013421058654785"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "country name and id of the country that has at least 1 car maker?", "remark": "positive", "label": "1", "score": "0.778721272945404"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "is the number of documents with type code PPT?", "remark": "negative", "label": "0", "score": "0.5684432983398438"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and name of countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.6103342771530151"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a pet with type 'dog' but not a cat?", "remark": "positive", "label": "1", "score": "0.6108893752098083"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "country with a population greater than the largest continent in africa", "remark": "negative", "label": "0", "score": "0.42161324620246887"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are produced by car makers in the country named USA?", "remark": "negative", "label": "0", "score": "0.5727896690368652"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "the ids of all the students who have friends and likes.", "remark": "negative", "label": "0", "score": "0.8149815201759338"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents that have the type code 'PPT'.", "remark": "positive", "label": "1", "score": "0.6265586614608765"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car with the most horsepower?", "remark": "negative", "label": "0", "score": "0.3069828748703003"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "number of countries whose language is \"Afghanistan\".", "remark": "negative", "label": "0", "score": "0.6904416084289551"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent and the number of car makers in each continent?", "remark": "positive", "label": "1", "score": "0.31834569573402405"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.7932157516479492"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of friends who have likes and likes.", "remark": "negative", "label": "0", "score": "0.700445830821991"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "continents and the number of car makers on each continent?", "remark": "positive", "label": "1", "score": "0.3457680642604828"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the largest number of courses.", "remark": "negative", "label": "0", "score": "0.5058558583259583"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who are friends with some students?", "remark": "negative", "label": "0", "score": "0.33552470803260803"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does jetblue airways operate?", "remark": "negative", "label": "0", "score": "0.6495341658592224"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the id of the car with the name AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.6040815711021423"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct models whose weight is less than 3500 and whose full name is not 'Ford Motor Company';", "remark": "negative", "label": "0", "score": "0.7751120924949646"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "the accelerations of the cars that are involved in amc hornet sportabout?", "remark": "negative", "label": "0", "score": "0.5702988505363464"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the airline and the abbreviation for all flights from country \"USA\".", "remark": "negative", "label": "0", "score": "0.8412070274353027"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the students who do not have a dog or cat.", "remark": "negative", "label": "0", "score": "0.577908456325531"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the youngest student who left campus.", "remark": "negative", "label": "0", "score": "0.541338324546814"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff working after 2010.", "remark": "negative", "label": "0", "score": "0.42057114839553833"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "number of countries whose language is official is Afghanistan?", "remark": "negative", "label": "0", "score": "0.5169137120246887"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many car makers are in the USA?", "remark": "negative", "label": "0", "score": "0.414616197347641"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "cities in China that are official language and have continent asia?", "remark": "negative", "label": "0", "score": "0.4361251890659332"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages and names of countries that have more than 2 languages.", "remark": "positive", "label": "1", "score": "0.7283738851547241"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "are the names of museums that have a staff of more than the minimum number of staff for any museum opened after 2010?", "remark": "negative", "label": "0", "score": "0.8251113891601562"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does jetblue airways belong to?", "remark": "negative", "label": "0", "score": "0.7617188692092896"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "names of all the distinct models whose full name is General Motors or weight is above 3500?", "remark": "positive", "label": "1", "score": "0.6636843681335449"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.793215811252594"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airports that have both a CVO and a APG connection but do not have a CIS connection.", "remark": "negative", "label": "0", "score": "0.4854939877986908"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "the names of all airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.8323012590408325"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many distinct current address ids exist for students.", "remark": "negative", "label": "0", "score": "0.8935290575027466"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, last name for the student with the most students?", "remark": "negative", "label": "0", "score": "0.31053873896598816"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who do not have any friend.", "remark": "positive", "label": "1", "score": "0.5825380086898804"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left the institution the most recently?", "remark": "negative", "label": "0", "score": "0.6148505806922913"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "the number of flights operated by airline \"United Airlines\" and \"Asy\".", "remark": "negative", "label": "0", "score": "0.7143020629882812"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the airlines that have less than 200 flights.", "remark": "positive", "label": "1", "score": "0.759292721748352"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models that are not produced by the company whose weight is less than 3500 and whose full name is not 'ford motor company'.", "remark": "negative", "label": "0", "score": "0.7962833642959595"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "continents and the number of car makers from each continent.", "remark": "positive", "label": "1", "score": "0.620459258556366"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "the number of languages that the country Afghanistan is official in.", "remark": "positive", "label": "1", "score": "0.724972665309906"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id and summary name of the degree program that has the most student enrollment.", "remark": "positive", "label": "1", "score": "0.7132163047790527"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of the students who have friends who have likes.", "remark": "negative", "label": "0", "score": "0.7440272569656372"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of distinct winners of the tourney named 'Wta Championships' and the winner hand.", "remark": "negative", "label": "0", "score": "0.7941927909851074"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many series and series are on TV channels", "remark": "negative", "label": "0", "score": "0.40746432542800903"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the templates whose type code is \"PS\" or whose type code is \"PFT\".", "remark": "negative", "label": "0", "score": "0.7895312905311584"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids for the templates whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.7220541834831238"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players, ordered by their birth date.", "remark": "positive", "label": "1", "score": "0.7765709757804871"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car with the model model 'volvo' that accelerates the most", "remark": "negative", "label": "0", "score": "0.573049783706665"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "are all the countries of the flights operated by JetBlue Airways?", "remark": "negative", "label": "0", "score": "0.7386081218719482"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id, middle name, last name, and the number of students enrolled in the most courses?", "remark": "negative", "label": "0", "score": "0.3223004937171936"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the acceleration data of the car with the name AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.6958612203598022"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "country of the airline jetblue airways?", "remark": "positive", "label": "1", "score": "0.6496116518974304"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "names of airlines with abbreviation \"UAL\"", "remark": "positive", "label": "1", "score": "0.48494765162467957"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of airlines that have less than 200 number of flights.", "remark": "positive", "label": "1", "score": "0.6789155602455139"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current address ids of students.", "remark": "positive", "label": "1", "score": "0.8763798475265503"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "the number of distinct current address ids for students.", "remark": "positive", "label": "1", "score": "0.8687847256660461"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "number of distinct series names and the number of distinct content.", "remark": "negative", "label": "0", "score": "0.7635418772697449"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured number of ships with a tonnage of t2.", "remark": "negative", "label": "0", "score": "0.09964077919721603"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.5448455810546875"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the name of the vehicle that is made in the smallest year?", "remark": "negative", "label": "0", "score": "0.6244627237319946"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct models whose weight is less than 3500 and whose full name is not \"Ford Motor Company\".", "remark": "negative", "label": "0", "score": "0.8148712515830994"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "models whose weight is less than 3500 and whose full name is notford motor company.", "remark": "negative", "label": "0", "score": "0.7872077822685242"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "is the airline with the abbreviationUAL?", "remark": "negative", "label": "0", "score": "0.84859699010849"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "is the id of the template type described by the description?", "remark": "negative", "label": "0", "score": "0.6966105699539185"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first and last name of students who have both a dog and a cat as pets?", "remark": "negative", "label": "0", "score": "0.12956759333610535"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a pet of the type 'Dog' but not a cat.", "remark": "positive", "label": "1", "score": "0.6456795930862427"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the country names and ids of countries that have at least one car maker.", "remark": "positive", "label": "1", "score": "0.8272631764411926"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.7451701760292053"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages that are in more than 2 countries?", "remark": "negative", "label": "0", "score": "0.6575579047203064"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students whose permanent address is in country 'Haiti' and whose cell phone number is 09700166582?", "remark": "negative", "label": "0", "score": "0.3222225606441498"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages that are shared by more than two countries.", "remark": "negative", "label": "0", "score": "0.7652819156646729"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "number of models produced by the country named USA?", "remark": "positive", "label": "1", "score": "0.3393354117870331"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest bonus.", "remark": "positive", "label": "1", "score": "0.6766735315322876"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "ids of airlines that have less than 200 flights.", "remark": "negative", "label": "0", "score": "0.7640957832336426"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who won both the WTA Championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.7366470694541931"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "type codes that are not used by any document?", "remark": "positive", "label": "1", "score": "0.4976006746292114"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent and the number of car makers from that continent", "remark": "negative", "label": "0", "score": "0.17445966601371765"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars that have full name 'General Motors' or have weight greater than 3500.", "remark": "positive", "label": "1", "score": "0.7570067644119263"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "the number of flights made by aircraft from the city of Aberdeen and the airport of Aberdeen.", "remark": "negative", "label": "0", "score": "0.7257516980171204"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "airlines that do not have source flights in CV or apg?", "remark": "negative", "label": "0", "score": "0.5757027864456177"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the templates whose type code is \"PPT\" or whose type code is \"PPT\"?", "remark": "negative", "label": "0", "score": "0.733838677406311"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the most cylinders produced before 1980 or with the lowest mpg before 1980?", "remark": "negative", "label": "0", "score": "0.8116640448570251"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from ashley to Aberdeen?", "remark": "negative", "label": "0", "score": "0.28523093461990356"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline and abbreviation for airlines from usa?", "remark": "negative", "label": "0", "score": "0.627920925617218"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the names and ids of countries that have at least one car owner.", "remark": "negative", "label": "0", "score": "0.8105559349060059"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "names and ids of countries that have at least 1 car maker.", "remark": "positive", "label": "1", "score": "0.8173331618309021"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who participated in both the WTA Championships and the Australian Open.", "remark": "negative", "label": "0", "score": "0.7544084191322327"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.5735529661178589"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "data of the car with the model with the highest accelerate.", "remark": "negative", "label": "0", "score": "0.6687831878662109"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "names and ids of countries that have at least one car maker.", "remark": "positive", "label": "1", "score": "0.8289585709571838"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name of players ordered by birth date?", "remark": "positive", "label": "1", "score": "0.5600761771202087"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the name and id of the country that has at least one driver?", "remark": "negative", "label": "0", "score": "0.6959492564201355"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the name of the car that was made in the smallest year?", "remark": "negative", "label": "0", "score": "0.6244226098060608"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct models of the cars whose full name is 'General Motors' or have weight greater than 3500?", "remark": "positive", "label": "1", "score": "0.7350344657897949"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car that has the highest horsepower.", "remark": "negative", "label": "0", "score": "0.4431556165218353"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have any friend.", "remark": "positive", "label": "1", "score": "0.5789120197296143"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the oldest car data and the oldest car data.", "remark": "negative", "label": "0", "score": "0.5129770636558533"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who got the highest bonus.", "remark": "positive", "label": "1", "score": "0.6822826266288757"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "has the most number of cylinders in the fleet before 1980?", "remark": "negative", "label": "0", "score": "0.49429482221603394"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights with destination airport \"ATO\".", "remark": "negative", "label": "0", "score": "0.7807936668395996"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers who are older than 20.", "remark": "positive", "label": "1", "score": "0.879554808139801"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "id of the template whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.7236238718032837"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "names of airlines that do not have source flights in CV but not apg?", "remark": "negative", "label": "0", "score": "0.5073268413543701"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "code for templates that do not have any documents?", "remark": "negative", "label": "0", "score": "0.512553870677948"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "mpg of the car with cylinders equal to 8 or less before 1980?", "remark": "negative", "label": "0", "score": "0.2330043613910675"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "all the distinct models that are not made by the company Ford Motor Company.", "remark": "negative", "label": "0", "score": "0.3214610815048218"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights are operated by airline \"United Airlines\" from Asy airport?", "remark": "negative", "label": "0", "score": "0.6281470656394958"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "are the different models of cars that have either a full name 'General Motors' or a weight of more than 3500?", "remark": "negative", "label": "0", "score": "0.8040052652359009"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the names of teachers and the number of courses they have taught.", "remark": "positive", "label": "1", "score": "0.5089291334152222"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and template type of the template with the most documents.", "remark": "positive", "label": "1", "score": "0.6842893958091736"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the vehicle with model 'volvo' that accelerates the most.", "remark": "negative", "label": "0", "score": "0.7187262773513794"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents with type code PVT?", "remark": "negative", "label": "0", "score": "0.4331112504005432"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "ids of the templates that have description of presentation.", "remark": "positive", "label": "1", "score": "0.7413222193717957"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of friends and likes.", "remark": "negative", "label": "0", "score": "0.23505184054374695"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "the ids of students who have friends and likes.", "remark": "negative", "label": "0", "score": "0.8074506521224976"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers who are older than 20?", "remark": "positive", "label": "1", "score": "0.8194668292999268"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of the players who won both the WTA Championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.7379710078239441"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student has the most number of enrollments? List the student id, middle name, last name, and the number of enrollments.", "remark": "negative", "label": "0", "score": "0.5989932417869568"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "the number of flights from airport \"ATO\"", "remark": "negative", "label": "0", "score": "0.5258327126502991"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "id of the template whose type code code is \"PPS\" or whose type code is \"PS\".", "remark": "negative", "label": "0", "score": "0.7869380712509155"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the data of the car with the highest accelerate?", "remark": "negative", "label": "0", "score": "0.45038723945617676"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "the number of flights operated by airline \"United Airlines\" whose destination is \"USA\".", "remark": "negative", "label": "0", "score": "0.7217010855674744"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "Which airline does not have abbreviation 'UAL'?", "remark": "logic", "label": "0", "score": "0.052243951708078384"}
{"logic": "( the sum of ( tours ) ) , ( ranking date ) that belongs to ( rankings ) , grouped by ( ranking date )", "text": "How many average tour were there for each ranking date?", "remark": "logic", "label": "0", "score": "0.04013681784272194"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "List the different series names and contents in the TV Channel table.", "remark": "value col", "label": "0", "score": "0.8459337949752808"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( tv series )", "text": "What is the maximum and minimum share for the TV series?", "remark": "positive", "label": "1", "score": "0.9135692715644836"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "How many flights have destination ATO?", "remark": "positive", "label": "1", "score": "0.7282841801643372"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )", "text": "Show all template type codes with more than three templates.", "remark": "logic", "label": "0", "score": "0.0865086168050766"}
{"logic": "( document name of highschooler ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , that have ( ( template type code of likes ) equal to ( bk ) )", "text": "Show all document names using templates without template type code BK.", "remark": "logic", "label": "0", "score": "0.04075375199317932"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial of management ) equal to ( t ) ) ) ) )", "text": "Give the mean life expectancy of countries in which English is not the official language.", "remark": "positive", "label": "1", "score": "0.8567414879798889"}
{"logic": "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( chinese ) )", "text": "How many continents speak Chinese?", "remark": "positive", "label": "1", "score": "0.7906423807144165"}
{"logic": "( the average of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the average weight for each pet type.", "remark": "positive", "label": "1", "score": "0.8878886103630066"}
{"logic": "( distinct ( semester id of management ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of management ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))", "text": "Find the semester when both Master students and Bachelor students got enrolled in.", "remark": "positive", "label": "1", "score": "0.7522725462913513"}
{"logic": "( the number of ( all items ) ) that belongs to ( countries )", "text": "How many countries are listed?", "remark": "positive", "label": "1", "score": "0.8078071475028992"}
{"logic": "( zip postcode ) that belongs to ( addresses ) , that have ( ( city ) equal to ( 'port chelsea' ) )", "text": "What is the zip code for Port Chelsea?", "remark": "positive", "label": "1", "score": "0.8416589498519897"}
{"logic": "( transcript date ) , ( other details ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in ascending order ) , limited to the top ( 1 )", "text": "What is the earliest date of a transcript release, and what details can you tell me?", "remark": "positive", "label": "1", "score": "0.6111195087432861"}
{"logic": "( template type code ) , ( template type description ) that belongs to ( ref template types )", "text": "Show all template type codes and descriptions.", "remark": "positive", "label": "1", "score": "0.8144935369491577"}
{"logic": "( name of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , grouped by ( singer id of highschooler )", "text": "What are the names of the singers and number of distinct concerts for each person?", "remark": "logic", "label": "0", "score": "0.6216984391212463"}
{"logic": "( the average of ( ranking ) ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , grouped by ( first name of department )", "text": "What are the first names of all players, and their average rankings?", "remark": "positive", "label": "1", "score": "0.8398697972297668"}
{"logic": "( the average of ( weight ) ) , ( year ) that belongs to ( cars data ) , grouped by ( year )", "text": "What is the average weight and year for each year?", "remark": "positive", "label": "1", "score": "0.8767920732498169"}
{"logic": "( the number of ( all items ) ) that belongs to ( votes ) , that have ( ( ( state ) equal to ( 'ny' ) ) or ( ( state ) equal to ( 'ca' ) ) )", "text": "What are the number of votes from state 'NY' or 'CA'?", "remark": "positive", "label": "1", "score": "0.7612174153327942"}
{"logic": "( accelerate of likes ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( make of highschooler ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "What is the production year of the car make amc hornet sportabout (sw)?", "remark": "value col", "label": "0", "score": "0.05485382303595543"}
{"logic": "( document id ) , ( document name ) , ( document description ) that belongs to ( documents )", "text": "List document IDs, document names, and document descriptions for all documents.", "remark": "positive", "label": "1", "score": "0.8334953188896179"}
{"logic": "( name ) , ( birth date ) that belongs to ( people ) , ordered by ( ( name ) in ascending order )", "text": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "remark": "positive", "label": "1", "score": "0.6882368326187134"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order ) , limited to the top ( 1 )", "text": "List the name of the conductor with the most years of work.", "remark": "positive", "label": "1", "score": "0.7997223138809204"}
{"logic": "( distinct ( name of management ) ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( countrycode of management ) equal to ( code of department ) ) ) ) , that have ( ( ( continent of department ) equal to ( 'europe' ) ) and ( ( t1.name ) not in ( ( name of head ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of head ) equal to ( countrycode of trip ) ) ) ) , that have ( ( ( isofficial of trip ) equal to ( 't' ) ) and ( ( language of trip ) equal to ( 'english' ) ) ) ) ) )", "text": "Which cities are in European countries where English is not the official language?", "remark": "positive", "label": "1", "score": "0.5155871510505676"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )", "text": "find the package option of the tv channel that have cartoon directed by Ben Jones.", "remark": "logic", "label": "0", "score": "0.2743203639984131"}
{"logic": "( professional id of department ) , ( cell number of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "remark": "positive", "label": "1", "score": "0.792432963848114"}
{"logic": "( name of catalogs ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of catalogs ) equal to ( employee id of catalog structure ) ) ) ) , grouped by ( employee id of catalog structure ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "find the name of employee who was awarded the most times in the evaluation.", "remark": "positive", "label": "1", "score": "0.7351738214492798"}
{"logic": "( name ) , ( tonnage ) that belongs to ( ship ) , ordered by ( ( name ) in descending order )", "text": "List the name and tonnage ordered by in descending alphaetical order for the names.", "remark": "positive", "label": "1", "score": "0.7979720830917358"}
{"logic": "( series name of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( title of management ) equal to ( the rise of the blue beetle! ) )", "text": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "remark": "positive", "label": "1", "score": "0.8316248059272766"}
{"logic": "( the number of ( all items ) ) that belongs to ( airports )", "text": "How many airports do we have?", "remark": "positive", "label": "1", "score": "0.7840966582298279"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( french ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ))", "text": "What are the names of nations where English or French are official languages?", "remark": "logic", "label": "0", "score": "0.2743200957775116"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( ( city of highschooler ) equal to ( aberdeen ) ) or ( ( city of highschooler ) equal to ( abilene ) ) )", "text": "How many flights land in both Aberdeen and Abilene?", "remark": "logic", "label": "0", "score": "0.4597571790218353"}
{"logic": "( name ) , ( surfacearea ) , ( indepyear ) that belongs to ( country ) , ordered by ( ( population ) ) , limited to the top ( 1 )", "text": "Give the name, year of independence, and surface area of the country that has the lowest population.", "remark": "positive", "label": "1", "score": "0.765271782875061"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , that have ( ( the number of ( all items ) ) greater than ( 50 ) )", "text": "What are the codes of countries with more than 40 players?", "remark": "value int", "label": "0", "score": "0.04128916189074516"}
{"logic": "( the sum of ( ranking points ) ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , grouped by ( first name of department )", "text": "What are the first names of all players, and their total ranking points?", "remark": "positive", "label": "1", "score": "0.822760283946991"}
{"logic": "( countryname of management ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of department ) equal to ( countryid of management ) ) ) ) , grouped by ( country of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which of the countries has the most car makers? List the country name.", "remark": "positive", "label": "1", "score": "0.72817462682724"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "Give the flight numbers of flights leaving from APG.", "remark": "positive", "label": "1", "score": "0.8445959687232971"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "How many dogs have gone through any treatment?", "remark": "logic", "label": "0", "score": "0.1848180741071701"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler )", "text": "How many unique high schoolers are there?", "remark": "logic", "label": "0", "score": "0.6231010556221008"}
{"logic": "( grade ) that belongs to ( highschooler )", "text": "Show all the grades of the high schoolers.", "remark": "positive", "label": "1", "score": "0.8721319437026978"}
{"logic": "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity for the stadium with the highest average attendance?", "remark": "positive", "label": "1", "score": "0.8268954753875732"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( likes ) , grouped by ( student id )", "text": "How many likes correspond to each student id?", "remark": "positive", "label": "1", "score": "0.7633479833602905"}
{"logic": "( final table made ) , ( best finish ) that belongs to ( poker player )", "text": "What are the final tables made and best finishes for all poker players?", "remark": "positive", "label": "1", "score": "0.9018763303756714"}
{"logic": "all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial ) equal to ( t ) ) ) and all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( dutch ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "What are the countries where either French or Dutch is the official language?", "remark": "value str", "label": "0", "score": "0.1963590532541275"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of likes ) equal to ( uid of highschooler ) ) ) ) , that have ( ( airline of highschooler ) equal to ( jetblue airways ) )", "text": "What are the flights does airline 'JetBlue Airways' have?", "remark": "value col", "label": "0", "score": "0.7956292033195496"}
{"logic": "( pettype ) , ( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "What type of pet is the youngest animal, and how much does it weigh?", "remark": "positive", "label": "1", "score": "0.8420122265815735"}
{"logic": "( document id of department ) , ( document name of management ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , grouped by ( document id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the document id and name with greatest number of paragraphs?", "remark": "positive", "label": "1", "score": "0.7301430106163025"}
{"logic": "( section description ) that belongs to ( sections ) , that have ( ( section name ) equal to ( 'h' ) )", "text": "Describe the section h.", "remark": "positive", "label": "1", "score": "0.8499087691307068"}
{"logic": "( distinct ( maker of department ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) , and ( ( car names ) satisfied that ( ( model of management ) equal to ( model of head ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of head ) equal to ( id of trip ) ) ) ) , that have ( ( year of trip ) equal to ( '1970' ) )", "text": "Find the name of the makers that produced some cars in the year of 1970?", "remark": "positive", "label": "1", "score": "0.7285662293434143"}
{"logic": "( airportcode ) , ( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( anthony ) )", "text": "Give the airport code and airport name corresonding to the city Anthony.", "remark": "positive", "label": "1", "score": "0.8547552227973938"}
{"logic": "( the number of ( distinct ( dog id ) ) ) that belongs to ( treatments )", "text": "How many dogs not went through any treatments?", "remark": "logic", "label": "0", "score": "0.04167615622282028"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "How many airlines are from USA?", "remark": "positive", "label": "1", "score": "0.8263270854949951"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( shop_id ) not in ( ( shop id ) that belongs to ( hiring ) ) )", "text": "Which shops run with no employees? Find the shop names", "remark": "positive", "label": "1", "score": "0.41861361265182495"}
{"logic": "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )", "text": "What are the names of the teachers ordered by ascending age?", "remark": "positive", "label": "1", "score": "0.8727894425392151"}
{"logic": "( country ) that belongs to ( tv channel ), and except that ( ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( written by of highschooler ) equal to ( 'todd casey' ) ))", "text": "which countries' tv channels are  playing some cartoon written by Todd Casey?", "remark": "logic", "label": "0", "score": "0.19129616022109985"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches )", "text": "Count the number of matches.", "remark": "positive", "label": "1", "score": "0.8291294574737549"}
{"logic": "( name ) , ( result ) , ( bulgarian commander ) that belongs to ( battle ), and except that ( ( name of likes ) , ( result of likes ) , ( bulgarian commander of likes ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of likes ) equal to ( lost in battle of highschooler ) ) ) ) , that have ( ( location of highschooler ) equal to ( 'english channel' ) ))", "text": "Show names, and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "remark": "value col", "label": "0", "score": "0.7716876864433289"}
{"logic": "( note ) that belongs to ( death ) , that have ( ( note ) like ( '%east%' ) )", "text": "What are the notes of the death events which has substring 'South'?", "remark": "value str", "label": "0", "score": "0.2569906711578369"}
{"logic": "( name ) that belongs to ( stadium ) , that have ( ( stadium_id ) not in ( ( stadium id ) that belongs to ( concert ) ) )", "text": "Show the stadium names without any concert.", "remark": "positive", "label": "1", "score": "0.7210544943809509"}
{"logic": "( the number of ( language of management ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of department ) equal to ( aruba ) )", "text": "What is the total number of languages used in Aruba?", "remark": "positive", "label": "1", "score": "0.18436530232429504"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( horsepower ) greater than ( 150 ) )", "text": "What is the number of the cars with horsepower more than 150?", "remark": "positive", "label": "1", "score": "0.8571658134460449"}
{"logic": "( title ) that belongs to ( cartoon ) , ordered by ( ( title ) )", "text": "List the title of all cartoons in alphabetical order.", "remark": "positive", "label": "1", "score": "0.796339750289917"}
{"logic": "( name of likes ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of likes ) equal to ( conductor id of highschooler ) ) ) ) , grouped by ( conductor id of highschooler ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the names of conductors that have conducted more than two orchestras.", "remark": "value int", "label": "0", "score": "0.37741875648498535"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) equal to ( ako ) )", "text": "What is the airport name for airport 'APG\"'?", "remark": "value str", "label": "0", "score": "0.8508849143981934"}
{"logic": "( the maximum of ( area code ) ) , ( the minimum of ( area code ) ) that belongs to ( area code state )", "text": "What are the maximum and minimum values of area codes?", "remark": "positive", "label": "1", "score": "0.8694813847541809"}
{"logic": "( address id of department ) , ( line 1 of department ) , ( line 2 of department ) that belongs to ( ( addresses ) , and ( ( students ) satisfied that ( ( address id of department ) equal to ( current address id of management ) ) ) ) , grouped by ( address id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which address holds the most number of students currently? List the address id and all lines.", "remark": "positive", "label": "1", "score": "0.7038281559944153"}
{"logic": "( name ) that belongs to ( employee ) , ordered by ( ( age ) )", "text": "List the names of employees and sort in ascending order of age.", "remark": "positive", "label": "1", "score": "0.7941796183586121"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "How many different winners both participated in the WTA Championships and were left handed?", "remark": "positive", "label": "1", "score": "0.8318348526954651"}
{"logic": "( episode ) that belongs to ( tv series ) , ordered by ( ( rating ) )", "text": "What are all of the episodes not ordered by ratings?", "remark": "logic", "label": "0", "score": "0.04808979853987694"}
{"logic": "( horsepower of department ) that belongs to ( ( cars data ) ) , ordered by ( ( accelerate of department ) in descending order ) , limited to the top ( 1 )", "text": "What is the horsepower of the car with the greatest accelerate?", "remark": "positive", "label": "1", "score": "0.7892798185348511"}
{"logic": "( address id of department ) , ( line 1 of department ) , ( line 2 of department ) that belongs to ( ( addresses ) , and ( ( students ) satisfied that ( ( address id of department ) equal to ( current address id of management ) ) ) ) , grouped by ( address id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the id, line 1, and line 2 of the address with the most students?", "remark": "positive", "label": "1", "score": "0.7200853228569031"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )", "text": "What are the names of conductors, sorted descending by the number of years they have worked?", "remark": "positive", "label": "1", "score": "0.8559075593948364"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , grouped by ( conductor id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Show the name of the conductor that has conducted the most number of orchestras.", "remark": "positive", "label": "1", "score": "0.7065950036048889"}
{"logic": "( the number of ( distinct ( pettype ) ) ) that belongs to ( pets )", "text": "How many different types of pet are there?", "remark": "positive", "label": "1", "score": "0.8584862351417542"}
{"logic": "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the language that is not spoken in the most countries.", "remark": "logic", "label": "0", "score": "0.037208326160907745"}
{"logic": "( cost of treatment ) that belongs to ( treatments ) , ordered by ( ( date of treatment ) in descending order ) , limited to the top ( 1 )", "text": "Show me the cost of the least recently performed treatment.", "remark": "logic", "label": "0", "score": "0.659096360206604"}
{"logic": "( the number of ( all items ) ) , ( year ) that belongs to ( matches ) , grouped by ( year )", "text": "How many matches were played in each year?", "remark": "positive", "label": "1", "score": "0.7943537831306458"}
{"logic": "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "How much does the youngest dog weigh?", "remark": "positive", "label": "1", "score": "0.8228344321250916"}
{"logic": "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )", "text": "What is the first transcript release date?", "remark": "logic", "label": "0", "score": "0.7913939952850342"}
{"logic": "( the average of ( edispl of management ) ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( model of department ) equal to ( 'volvo' ) )", "text": "What is the average edispl for all volvos?", "remark": "positive", "label": "1", "score": "0.8650320172309875"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is name of the country that speaks the largest number of languages?", "remark": "positive", "label": "1", "score": "0.7138506770133972"}
{"logic": "( first name ) , ( birth date ) that belongs to ( players ) , that have ( ( country code ) equal to ( 'usa' ) )", "text": "What are the first names and birth dates of players from the USA?", "remark": "positive", "label": "1", "score": "0.8724671602249146"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights )", "text": "Return the number of flights.", "remark": "positive", "label": "1", "score": "0.7797406911849976"}
{"logic": "( student id of department ) , ( first name of department ) , ( middle name of department ) , ( last name of department ) , ( the number of ( all items ) ) , ( student id of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "remark": "positive", "label": "1", "score": "0.641292154788971"}
{"logic": "( country ) that belongs to ( singer ) , that have ( ( age ) greater than ( 40 ) ), and intersect with ( ( country ) that belongs to ( singer ) , that have ( ( age ) less than ( 30 ) ))", "text": "Show countries where a singer below age 40 and a singer above 30 are from.", "remark": "logic", "label": "0", "score": "0.7691432237625122"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( apg ) )", "text": "What are flight numbers of flights arriving at Airport \"APG\"?", "remark": "positive", "label": "1", "score": "0.8548576831817627"}
{"logic": "( manager name ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order ) , limited to the top ( 1 )", "text": "What are the manager name and district of the shop that sells the largest number of products?", "remark": "positive", "label": "1", "score": "0.8373769521713257"}
{"logic": "( name ) that belongs to ( employee ) , that have ( ( employee_id ) not in ( ( employee id ) that belongs to ( evaluation ) ) )", "text": "Find the names of employees who never won any award in the evaluation.", "remark": "positive", "label": "1", "score": "0.6281440854072571"}
{"logic": "( the number of ( all items ) ) that belongs to ( courses )", "text": "How many courses are there?", "remark": "positive", "label": "1", "score": "0.8382598757743835"}
{"logic": "( contid of department ) , ( continent of department ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of department ) equal to ( continent of management ) ) ) ) , grouped by ( contid of department )", "text": "For each continent, list its id, name, and how many countries it has?", "remark": "positive", "label": "1", "score": "0.253635436296463"}
{"logic": "( the average of ( loser age ) ) , ( the average of ( winner age ) ) that belongs to ( matches )", "text": "What are the maximum ages of losers and winners across matches?", "remark": "logic", "label": "0", "score": "0.05611279606819153"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , ordered by ( ( mpg of management ) in descending order ) , limited to the top ( 1 )", "text": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "remark": "positive", "label": "1", "score": "0.7212501168251038"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( singer id of management )", "text": "List singer names and number of concerts for each singer.", "remark": "positive", "label": "1", "score": "0.592239260673523"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of likes ) equal to ( document id of highschooler ) ) ) ) , that have ( ( document name of highschooler ) equal to ( 'summer show' ) )", "text": "Count the number of paragraphs in the document not named 'Summer Show'.", "remark": "logic", "label": "0", "score": "0.04007267206907272"}
{"logic": "( song name ) , ( song release year ) that belongs to ( singer ) , ordered by ( ( age ) ) , limited to the top ( 1 )", "text": "Show the name and the release year of the song by the youngest singer.", "remark": "positive", "label": "1", "score": "0.805706799030304"}
{"logic": "( template id of highschooler ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of likes ) equal to ( template type code of highschooler ) ) ) ) , that have ( ( template type description of likes ) equal to ( presentation ) )", "text": "What are the template ids without template type description \"Presentation\".", "remark": "logic", "label": "0", "score": "0.05308476835489273"}
{"logic": "( the maximum of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "List the maximum weight and type for each type of pet.", "remark": "positive", "label": "1", "score": "0.8616155385971069"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs ) , that have ( ( dog_id ) in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "Find the average age of the dogs who went through treatments.", "remark": "positive", "label": "1", "score": "0.8535001873970032"}
{"logic": "( the sum of ( population ) ) , ( the average of ( lifeexpectancy ) ) , ( continent ) that belongs to ( country ) , grouped by ( continent ) , that have ( ( the average of ( lifeexpectancy ) ) less than ( 72 ) )", "text": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?", "remark": "positive", "label": "1", "score": "0.8476675748825073"}
{"logic": "( the maximum of ( age ) ) that belongs to ( dogs )", "text": "What is the age of the oldest dog?", "remark": "positive", "label": "1", "score": "0.8498950004577637"}
{"logic": "( template type code of department ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( document name of management ) equal to ( data base ) )", "text": "What is the template type code of the template used by document with the name \"Data base\"?", "remark": "positive", "label": "1", "score": "0.8798359036445618"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , grouped by ( conductor id of management ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the names of conductors that have conducted more than one orchestras.", "remark": "positive", "label": "1", "score": "0.8074389100074768"}
{"logic": "( name of department ) , ( date of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) ) , that have ( ( name of management ) equal to ( 'lettice' ) ), and intersect with ( ( name of department ) , ( date of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) ) , that have ( ( name of management ) equal to ( 'hms atalanta' ) ))", "text": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "remark": "positive", "label": "1", "score": "0.4374658167362213"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2013 ) ), and intersect with ( ( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2016 ) ))", "text": "List the names of all winners who played in both 2013 and 2016.", "remark": "positive", "label": "1", "score": "0.806546688079834"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the grade that has the greatest number of high schoolers.", "remark": "positive", "label": "1", "score": "0.7656970620155334"}
{"logic": "( airportcode of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of department ) equal to ( destairport of management ) ) or ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) ) , grouped by ( airportcode of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the code of airport that has the highest number of flights?", "remark": "positive", "label": "1", "score": "0.6357312202453613"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( europe ) ) and ( ( population ) equal to ( 80000 ) ) )", "text": "What are the names of the countries that are in the continent of Europe and have a population of 80000?", "remark": "positive", "label": "1", "score": "0.8822336792945862"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( europe ) ) and ( ( population ) equal to ( 80000 ) ) )", "text": "Give the names of countries that are in Europe and have a population equal to 80000.", "remark": "positive", "label": "1", "score": "0.8831920027732849"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date first registered ) in ascending order ) , limited to the top ( 1 )", "text": "What is the first name of the first student to register?", "remark": "value col", "label": "0", "score": "0.1505800038576126"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( ( age ) equal to ( 32 ) ) or ( ( age ) equal to ( 33 ) ) )", "text": "What are the names of the teachers who are aged either 32 or 33?", "remark": "positive", "label": "1", "score": "0.870703935623169"}
{"logic": "( distinct ( first name of department ) ) , ( middle name of department ) , ( last name of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of management ) equal to ( degree program id of head ) ) ) ) , that have ( ( degree summary name of head ) equal to ( 'bachelor' ) )", "text": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "remark": "positive", "label": "1", "score": "0.666339635848999"}
{"logic": "( stuid ) that belongs to ( student ), and except that ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ))", "text": "Find the id of students who do not have a cat pet.", "remark": "positive", "label": "1", "score": "0.6666786670684814"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )", "text": "What are the full names of all left handed players, in order of birth date?", "remark": "positive", "label": "1", "score": "0.8359032273292542"}
{"logic": "( document id of department ) , ( document name of management ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , grouped by ( document id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the id and name of the document with the most paragraphs.", "remark": "positive", "label": "1", "score": "0.736236035823822"}
{"logic": "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of department ) , ( last name of department ) , ( cell number of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.", "remark": "positive", "label": "1", "score": "0.5496213436126709"}
{"logic": "( property type description of management ) that belongs to ( ( properties ) , and ( ( ref property types ) satisfied that ( ( property type code of department ) equal to ( property type code of management ) ) ) ) , grouped by ( property type code of department )", "text": "Show the property type descriptions of properties belonging to that code.", "remark": "positive", "label": "1", "score": "0.7810449004173279"}
{"logic": "( email address ) that belongs to ( professionals ) , that have ( ( ( state ) equal to ( 'hawaii' ) ) or ( ( state ) equal to ( 'wisconsin' ) ) )", "text": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?", "remark": "positive", "label": "1", "score": "0.8530125617980957"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , that have ( ( age of department ) greater than ( 20 ) )", "text": "Find number of pets owned by students who are older than 20.", "remark": "positive", "label": "1", "score": "0.7960479259490967"}
{"logic": "( the number of ( all items ) ) that belongs to ( conductor )", "text": "Count the number of conductors.", "remark": "positive", "label": "1", "score": "0.8297109007835388"}
{"logic": "( the number of ( all items ) ) that belongs to ( contestants ) , that have ( ( contestant_number ) not in ( ( contestant number ) that belongs to ( votes ) ) )", "text": "How many contestants did not get voted?", "remark": "positive", "label": "1", "score": "0.6907660961151123"}
{"logic": "( name ) , ( location ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order )", "text": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "remark": "positive", "label": "1", "score": "0.8079326748847961"}
{"logic": "( citizenship ) that belongs to ( singer ) , grouped by ( citizenship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the msot common singer citizenship?", "remark": "positive", "label": "1", "score": "0.7334035038948059"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the high schooler who has the greatest number of friends?", "remark": "positive", "label": "1", "score": "0.6968514919281006"}
{"logic": "( paragraph text of department ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( customer reviews ) )", "text": "What are the paragraph texts for the document with the name 'Customer reviews'?", "remark": "positive", "label": "1", "score": "0.8811625242233276"}
{"logic": "( the number of ( language of management ) ) , ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( name of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.", "remark": "positive", "label": "1", "score": "0.05347384512424469"}
{"logic": "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )", "text": "Return the version numbers and template type codes of templates with a version number greater than 5.", "remark": "positive", "label": "1", "score": "0.8782063722610474"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial of management ) equal to ( t ) ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( french ) ) and ( ( isofficial of management ) equal to ( t ) ) ))", "text": "Give the names of countries with English and French as official languages.", "remark": "positive", "label": "1", "score": "0.6980971097946167"}
{"logic": "( date arrived ) , ( date departed ) that belongs to ( dogs )", "text": "What are the arriving date and the departing date of all the dogs?", "remark": "positive", "label": "1", "score": "0.8534776568412781"}
{"logic": "( the number of ( all items ) ) that belongs to ( players )", "text": "Find the total number of players.", "remark": "positive", "label": "1", "score": "0.7560733556747437"}
{"logic": "( name of department ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( name of department ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the names of singers that have more than one song.", "remark": "positive", "label": "1", "score": "0.829723060131073"}
{"logic": "( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) less than ( 1945 ) ), and intersect with ( ( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) greater than ( 1955 ) ))", "text": "Show the citizenship shared by singers with birth year before 1845 and after 1965.", "remark": "value int", "label": "0", "score": "0.04117847606539726"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the country with the fewest number of TV Channels and how many does it have?", "remark": "logic", "label": "0", "score": "0.5047168731689453"}
{"logic": "( the average of ( ranking ) ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , grouped by ( first name of department )", "text": "Find the average ranking for each player and their first name.", "remark": "positive", "label": "1", "score": "0.8215893507003784"}
{"logic": "( the sum of ( population ) ) that belongs to ( city ) , that have ( ( district ) equal to ( gelderland ) )", "text": "How many people live in Gelderland district?", "remark": "positive", "label": "1", "score": "0.672541081905365"}
{"logic": "( song name ) , ( song release year ) that belongs to ( singer ) , ordered by ( ( age ) ) , limited to the top ( 1 )", "text": "Show the name of the song by the youngest singer.", "remark": "value col", "label": "0", "score": "0.16490481793880463"}
{"logic": "( feature type name of highschooler ) that belongs to ( ( other available features ) , and ( ( ref feature types ) satisfied that ( ( feature type code of likes ) equal to ( feature type code of highschooler ) ) ) ) , that have ( ( feature name of likes ) equal to ( aircon ) )", "text": "What is the feature type code of feature AirCon?", "remark": "value col", "label": "0", "score": "0.8521438241004944"}
{"logic": "( fname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ), and intersect with ( ( fname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'dog' ) ))", "text": "What are the students' first names who have both cats and dogs as pets?", "remark": "positive", "label": "1", "score": "0.7130587697029114"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "Show the names of high schoolers who have at least 3 friends.", "remark": "positive", "label": "1", "score": "0.8236952424049377"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) not in ( ( sourceairport ) that belongs to ( flights ) and ( destairport ) that belongs to ( flights ) ) )", "text": "Find the name of airports which do not have any flight in and out.", "remark": "positive", "label": "1", "score": "0.6372900605201721"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( dogs ) )", "text": "Count the number of dogs of an age above the average.", "remark": "logic", "label": "0", "score": "0.3247433304786682"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , grouped by ( conductor id of management ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are the names of conductors who have conducted at more than one orchestra?", "remark": "positive", "label": "1", "score": "0.7999858260154724"}
{"logic": "( the number of ( distinct ( loser name ) ) ) that belongs to ( matches )", "text": "Find the number of distinct name of losers.", "remark": "positive", "label": "1", "score": "0.8817996978759766"}
{"logic": "( name of area code state ) , ( course of highschooler ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of likes ) equal to ( teacher id of area code state ) ) ) )", "text": "What is the id of each teacher and what course they teach?", "remark": "value col", "label": "0", "score": "0.7297038435935974"}
{"logic": "( citizenship ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "For each citizenship, how many singers are from that country?", "remark": "positive", "label": "1", "score": "0.7710660696029663"}
{"logic": "( the average of ( edispl of highschooler ) ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( model of likes ) equal to ( 'volvo' ) )", "text": "What is the minimum edispl for all volvos?", "remark": "logic", "label": "0", "score": "0.06937481462955475"}
{"logic": "( template id ) , ( version number ) , ( template type code ) that belongs to ( templates )", "text": "Show template ids, version numbers, and template type codes for all templates.", "remark": "positive", "label": "1", "score": "0.8512030839920044"}
{"logic": "( owner id of likes ) , ( first name of highschooler ) , ( last name of highschooler ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the owner id, first name and last name of the owner who has the fewest dogs.", "remark": "logic", "label": "0", "score": "0.13866671919822693"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "Find all airlines that have at least 10 flights.", "remark": "positive", "label": "1", "score": "0.13701896369457245"}
{"logic": "( the number of ( distinct ( location ) ) ) that belongs to ( shop )", "text": "How many different store locations are there?", "remark": "positive", "label": "1", "score": "0.8721712827682495"}
{"logic": "( the number of ( all items ) ) , ( country code ) that belongs to ( players ) , grouped by ( country code )", "text": "How many players are from each country?", "remark": "positive", "label": "1", "score": "0.8149623274803162"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "find the name of the country where has the greatest number of players.", "remark": "value col", "label": "0", "score": "0.7640891075134277"}
{"logic": "( document id ) , ( the number of ( all items ) ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( document id ) )", "text": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id in descending order.", "remark": "logic", "label": "0", "score": "0.723531186580658"}
{"logic": "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))", "text": "Which states have neither owners nor professionals living there?", "remark": "logic", "label": "0", "score": "0.04543999210000038"}
{"logic": "( series name of department ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( episode of management ) equal to ( a love of a lifetime ) )", "text": "What is the name of the series that has the episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.8737393617630005"}
{"logic": "( mpg ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) ) , ordered by ( ( mpg ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?", "remark": "positive", "label": "1", "score": "0.0618584081530571"}
{"logic": "( hometown ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )", "text": "What is the hometown of the oldest teacher?", "remark": "logic", "label": "0", "score": "0.825466513633728"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial of management ) equal to ( t ) ) ) ) )", "text": "What is average life expectancy in the countries where English is not the official language?", "remark": "positive", "label": "1", "score": "0.8454161286354065"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of management ) ) ) ) , grouped by ( name of management )", "text": "Show names of teachers and the number of courses they teach.", "remark": "positive", "label": "1", "score": "0.6594182848930359"}
{"logic": "( name of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , grouped by ( singer id of highschooler )", "text": "List singer ages and number of concerts for each singer.", "remark": "value col", "label": "0", "score": "0.04244567081332207"}
{"logic": "( record company ) that belongs to ( orchestra ) , ordered by ( ( year of founded ) in descending order )", "text": "Return the record companies of orchestras, sorted ascending by the years in which they were founded.", "remark": "logic", "label": "0", "score": "0.06346702575683594"}
{"logic": "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of likes ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) ) )", "text": "What is the highest grade of students who have some friends?", "remark": "logic", "label": "0", "score": "0.37676557898521423"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( region ) equal to ( central africa ) )", "text": "What is the average expected life expectancy for countries in the region of Central Africa?", "remark": "positive", "label": "1", "score": "0.8813718557357788"}
{"logic": "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )", "text": "What is the number of template type descriptions for template type code \"AD\".", "remark": "logic", "label": "0", "score": "0.08899056166410446"}
{"logic": "( template id ) , ( version number ) , ( template type code ) that belongs to ( templates )", "text": "What are the ids, version numbers, and type codes for each template?", "remark": "positive", "label": "1", "score": "0.8754162788391113"}
{"logic": "( distinct ( fname of department ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pettype of head ) equal to ( 'cat' ) ) or ( ( pettype of head ) equal to ( 'dog' ) ) )", "text": "What are the first names of every student who has a cat or dog as a pet?", "remark": "positive", "label": "1", "score": "0.7384690642356873"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( age ) in ascending order )", "text": "What are the names of conductors, ordered by age?", "remark": "positive", "label": "1", "score": "0.8166480660438538"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( english ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( french ) ))", "text": "Give the names of nations that speak both Spanish and French.", "remark": "value str", "label": "0", "score": "0.6778091192245483"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs ) , that have ( ( dog_id ) in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "What is the average age of the dogs who have gone through any treatments?", "remark": "positive", "label": "1", "score": "0.8655351996421814"}
{"logic": "( episode of management ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( series name of department ) equal to ( sky radio ) )", "text": "What is the episode for the TV series named \"Sky Radio\"?", "remark": "positive", "label": "1", "score": "0.8723049759864807"}
{"logic": "( code ) that belongs to ( country ) , that have ( ( governmentform ) not equal to ( republic ) ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "Return the codes of countries that do not speak English and do not have Republics for governments.", "remark": "positive", "label": "1", "score": "0.6928699612617493"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "What is the first, middle, and last name of the earliest school graduate?", "remark": "positive", "label": "1", "score": "0.7258176803588867"}
{"logic": "( name of head ) , ( course of management ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) )", "text": "What is the name of each teacher and what course they teach?", "remark": "positive", "label": "1", "score": "0.7313542366027832"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "Return the number of flights departing from Aberdeen.", "remark": "positive", "label": "1", "score": "0.660674512386322"}
{"logic": "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of likes ) , ( role code of likes ) , ( email address of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ))", "text": "Give me the id, role and email of the professionals who did not perform any treatment on cats.", "remark": "value str", "label": "0", "score": "0.6089873909950256"}
{"logic": "( countryname of management ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of department ) equal to ( countryid of management ) ) ) ) , grouped by ( country of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the country with the most car makers?", "remark": "positive", "label": "1", "score": "0.7435600757598877"}
{"logic": "( first name of department ) , ( name of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , that have ( ( state of department ) equal to ( 'virginia' ) )", "text": "Find the first names of owners living in Virginia and the names of dogs they own.", "remark": "positive", "label": "1", "score": "0.8284880518913269"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( continent of department ) equal to ( asia ) ) , grouped by ( language of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the language that is used by the largest number of Asian nations?", "remark": "positive", "label": "1", "score": "0.7049243450164795"}
{"logic": "( the number of ( all items ) ) that belongs to ( tv channel ) , that have ( ( language ) equal to ( english ) )", "text": "How many TV Channel using language English?", "remark": "positive", "label": "1", "score": "0.8185909390449524"}
{"logic": "( distinct ( model of department ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of management ) equal to ( id of head ) ) ) ) , that have ( ( year of head ) greater than ( 1980 ) )", "text": "Which distinct car models are the produced after 1980?", "remark": "positive", "label": "1", "score": "0.7766788005828857"}
{"logic": "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )", "text": "What is the average, minimum, and maximum age for all French singers?", "remark": "positive", "label": "1", "score": "0.8797507286071777"}
{"logic": "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )", "text": "What is the id and weight of every pet who is older than 10?", "remark": "value int", "label": "0", "score": "0.04431458190083504"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "List the number of different series names and contents in the TV Channel table.", "remark": "positive", "label": "1", "score": "0.8531590700149536"}
{"logic": "( name ) , ( country ) , ( age ) that belongs to ( singer ) , ordered by ( ( age ) in descending order )", "text": "What are the names, countries, and ages for every singer in descending order of age?", "remark": "positive", "label": "1", "score": "0.8423610925674438"}
{"logic": "( money rank of management ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( height of department ) in descending order ) , limited to the top ( 1 )", "text": "What is the money rank of the tallest poker player?", "remark": "positive", "label": "1", "score": "0.8108173608779907"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )", "text": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".", "remark": "positive", "label": "1", "score": "0.8261674046516418"}
{"logic": "( the average of ( age ) ) that belongs to ( visitor ) , that have ( ( level of membership ) less than or equal to ( 4 ) )", "text": "What is the average age of the visitors whose membership level is not higher than 4?", "remark": "positive", "label": "1", "score": "0.8640725612640381"}
{"logic": "( first name of department ) , ( country code of department ) , ( birth date of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , ordered by ( ( winner rank points of management ) in descending order ) , limited to the top ( 1 )", "text": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "remark": "positive", "label": "1", "score": "0.7926848530769348"}
{"logic": "( the number of ( all items ) ) , ( year ) that belongs to ( matches ) , grouped by ( year )", "text": "Find the number of matches happened in each year.", "remark": "positive", "label": "1", "score": "0.8026133179664612"}
{"logic": "( owner id of likes ) , ( zip code of likes ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of highschooler ) equal to ( dog id of area code state ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the sum of ( cost of treatment of area code state ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner has paid the samllest amount of money in total for their dogs? Show the owner id and zip code.", "remark": "value col", "label": "0", "score": "0.7328751683235168"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of likes ) equal to ( id of highschooler ) ) ) , and ( ( countries ) satisfied that ( ( country of highschooler ) equal to ( countryid of area code state ) ) ) ) , that have ( ( countryname of area code state ) equal to ( 'usa' ) )", "text": "How many car models are produced in the China?", "remark": "value str", "label": "0", "score": "0.5141338109970093"}
{"logic": "( continent of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , grouped by ( continent of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which continent speaks the least languages?", "remark": "logic", "label": "0", "score": "0.412529855966568"}
{"logic": "( the number of ( all items ) ) that belongs to ( concert ) , that have ( ( ( year ) equal to ( 2014 ) ) or ( ( year ) equal to ( 2015 ) ) )", "text": "How many concerts occurred in 2014 or 2015?", "remark": "positive", "label": "1", "score": "0.76263028383255"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , that have ( ( earnings of management ) greater than ( 300000 ) )", "text": "What are the names of poker players whose earnings is higher than 300000?", "remark": "positive", "label": "1", "score": "0.8518552780151367"}
{"logic": "( cylinders of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( model of management ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of department ) in ascending order ) , limited to the top ( 1 )", "text": "For model volvo, how many cylinders does the car with the least accelerate have?", "remark": "positive", "label": "1", "score": "0.5344065427780151"}
{"logic": "( name ) that belongs to ( stadium ), and except that ( ( name of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2014 ) ))", "text": "What are the names of all stadiums that did not have a concert in 2014?", "remark": "positive", "label": "1", "score": "0.709215521812439"}
{"logic": "( continent of likes ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of likes ) equal to ( continent of highschooler ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of highschooler ) equal to ( country of area code state ) ) ) ) , grouped by ( continent of likes )", "text": "How many car makers are there in each continents? List the continent name.", "remark": "value col", "label": "0", "score": "0.26774439215660095"}
{"logic": "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ) ) )", "text": "Find the major and average age of students who have a cat pet.", "remark": "logic", "label": "0", "score": "0.0419079028069973"}
{"logic": "( semester name ) that belongs to ( semesters ) , that have ( ( semester_id ) not in ( ( ( semester id ) that belongs to ( student enrolment ) ) ) )", "text": "Which semesters do not have any student enrolled? List the semester name.", "remark": "positive", "label": "1", "score": "0.5350257754325867"}
{"logic": "( paragraph text of department ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( customer reviews ) )", "text": "Show all paragraph texts for the document \"Customer reviews\".", "remark": "positive", "label": "1", "score": "0.854891300201416"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "remark": "positive", "label": "1", "score": "0.8308355808258057"}
{"logic": "( population ) , ( region ) that belongs to ( country ) , that have ( ( name ) equal to ( angola ) )", "text": "What region does Angola belong to and what is its population?", "remark": "positive", "label": "1", "score": "0.8681037425994873"}
{"logic": "( title of management ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( series name of department ) equal to ( sky radio ) )", "text": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".", "remark": "positive", "label": "1", "score": "0.7991548180580139"}
{"logic": "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )", "text": "What is the minimum number of employees from each city?", "remark": "logic", "label": "0", "score": "0.05073438212275505"}
{"logic": "( template type code ) that belongs to ( ref template types ) , that have ( ( template type description ) equal to ( book ) )", "text": "Return the type code of the template type with the description \"Book\".", "remark": "positive", "label": "1", "score": "0.8881928324699402"}
{"logic": "( name ) that belongs to ( stadium ) , that have ( ( stadium_id ) not in ( ( stadium id ) that belongs to ( concert ) ) )", "text": "What are the names of the stadiums without any concerts?", "remark": "positive", "label": "1", "score": "0.7282261848449707"}
{"logic": "( the number of ( distinct ( dog id ) ) ) that belongs to ( treatments )", "text": "How many dogs went through any treatments?", "remark": "positive", "label": "1", "score": "0.7231556177139282"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , that have ( ( the number of ( all items ) ) greater than ( 50 ) )", "text": "Find the codes of countries that have more than 50 players.", "remark": "positive", "label": "1", "score": "0.8519651293754578"}
{"logic": "( the maximum of ( area code ) ) , ( the minimum of ( area code ) ) that belongs to ( area code state )", "text": "What are the maximum and average values of area codes?", "remark": "logic", "label": "0", "score": "0.04878905415534973"}
{"logic": "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the most common nationality of people?", "remark": "positive", "label": "1", "score": "0.7583985328674316"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ) ) )", "text": "What is average life expectancy in the countries where English is  the official language?", "remark": "logic", "label": "0", "score": "0.5825120210647583"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )", "text": "Show the name of singers whose birth year is neither 1948 nor 1949?", "remark": "logic", "label": "0", "score": "0.04054080322384834"}
{"logic": "( breed name of likes ) that belongs to ( ( breeds ) , and ( ( dogs ) satisfied that ( ( breed code of likes ) equal to ( breed code of highschooler ) ) ) ) , grouped by ( breed name of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which breed do the most cats have? Give me the breed name.", "remark": "value table", "label": "0", "score": "0.11320488899946213"}
{"logic": "( name of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of likes ) equal to ( teacher id of highschooler ) ) ) ) , grouped by ( name of highschooler )", "text": "What are the names of the students and how many courses do they have?", "remark": "value col", "label": "0", "score": "0.7156367301940918"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "How many flights arriving in Aberdeen city?", "remark": "positive", "label": "1", "score": "0.7527013421058655"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( people_id ) not in ( ( people id ) that belongs to ( poker player ) ) )", "text": "What are the names of people who do not play poker?", "remark": "positive", "label": "1", "score": "0.7349814176559448"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( teacher_id ) not in ( ( teacher id ) that belongs to ( course arrange ) ) )", "text": "What are the names of the teachers whose courses have not been arranged?", "remark": "positive", "label": "1", "score": "0.7466267347335815"}
{"logic": "( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the names of students who have at least 2 likes.", "remark": "positive", "label": "1", "score": "0.8489629626274109"}
{"logic": "( distinct ( model of likes ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of likes ) equal to ( model of highschooler ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of highschooler ) equal to ( id of area code state ) ) ) , and ( ( car makers ) satisfied that ( ( maker of likes ) equal to ( id of car makers ) ) ) ) , that have ( ( ( weight of area code state ) less than ( 3500 ) ) and ( ( fullname of car makers ) not equal to ( 'ford motor company' ) ) )", "text": "Which models are lighter than 3600 but not built by the 'Ford Motor Company'?", "remark": "value int", "label": "0", "score": "0.6946902275085449"}
{"logic": "( the sum of ( population ) ) , ( the maximum of ( gnp ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "How many people live in Asia, and what is the largest GNP among them?", "remark": "positive", "label": "1", "score": "0.7873005867004395"}
{"logic": "( name ) , ( date ) that belongs to ( battle )", "text": "List the name and result of each battle.", "remark": "value col", "label": "0", "score": "0.04030253738164902"}
{"logic": "( the maximum of ( created ) ) that belongs to ( votes ) , that have ( ( state ) equal to ( 'ca' ) )", "text": "What is last date created of votes from the state 'GA'?", "remark": "value str", "label": "0", "score": "0.13101159036159515"}
{"logic": "( line 1 ) , ( line 2 ) that belongs to ( addresses )", "text": "What is the first line for all addresses?", "remark": "value col", "label": "0", "score": "0.5834895968437195"}
{"logic": "( petid of highschooler ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) , that have ( ( lname of likes ) equal to ( 'smith' ) )", "text": "Find the id of the pet owned by student whose last name is not \u2018Smith\u2019.", "remark": "logic", "label": "0", "score": "0.03641514852643013"}
{"logic": "( first name of department ) , ( middle name of department ) , ( last name of department ) , ( student id of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )", "text": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "remark": "positive", "label": "1", "score": "0.7177413702011108"}
{"logic": "( the number of ( all items ) ) that belongs to ( countries )", "text": "How many countries exist?", "remark": "positive", "label": "1", "score": "0.8288571834564209"}
{"logic": "( fname of department ) , ( age of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pettype of head ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ) ) ) )", "text": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "remark": "positive", "label": "1", "score": "0.6456647515296936"}
{"logic": "( distinct ( fname of department ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pettype of head ) equal to ( 'cat' ) ) or ( ( pettype of head ) equal to ( 'dog' ) ) )", "text": "Find the first name of students who have cat or dog pet.", "remark": "positive", "label": "1", "score": "0.7277362942695618"}
{"logic": "( the number of ( all items ) ) , ( district ) that belongs to ( city ) , that have ( ( population ) greater than ( the average of ( population ) ) that belongs to ( city ) ) , grouped by ( district )", "text": "Find the number of cities in each district whose population is less than the average population of cities?", "remark": "logic", "label": "0", "score": "0.05229119956493378"}
{"logic": "( citizenship ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "Show different citizenship of singers and the number of singers of each citizenship.", "remark": "positive", "label": "1", "score": "0.7545045018196106"}
{"logic": "( first name ) , ( last name ) , ( email address ) that belongs to ( owners ) , that have ( ( state ) like ( '%north%' ) )", "text": "Return the first name, last name and email of the owners living in a state whose name contains the substring  'South'.", "remark": "value str", "label": "0", "score": "0.46705663204193115"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) )", "text": "What are the number of poker players?", "remark": "value col", "label": "0", "score": "0.109499491751194"}
{"logic": "( the average of ( attendance ) ) that belongs to ( show )", "text": "What is the average attendance of shows?", "remark": "positive", "label": "1", "score": "0.8782599568367004"}
{"logic": "( grade ) , ( the number of ( all items ) ) that belongs to ( highschooler ) , grouped by ( grade )", "text": "Show the number of high schoolers for each grade.", "remark": "positive", "label": "1", "score": "0.8178761601448059"}
{"logic": "( name ) , ( surfacearea ) , ( indepyear ) that belongs to ( country ) , ordered by ( ( population ) ) , limited to the top ( 1 )", "text": "Give the name, year of independence, and surface area of the country that has the largest population.", "remark": "logic", "label": "0", "score": "0.8130475282669067"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( name of likes ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "How many official languages does aruba have?", "remark": "value str", "label": "0", "score": "0.651553213596344"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "how many countries are in Asia?", "remark": "positive", "label": "1", "score": "0.5942261219024658"}
{"logic": "( continent of department ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of department ) equal to ( continent of management ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of management ) equal to ( country of head ) ) ) ) , grouped by ( continent of department )", "text": "How many car makers are there in each continents? List the continent name and the count.", "remark": "positive", "label": "1", "score": "0.5556904673576355"}
{"logic": "( distinct ( name of head ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) , and ( ( city ) satisfied that ( ( code of department ) equal to ( countrycode of head ) ) ) ) , that have ( ( ( isofficial of management ) equal to ( 't' ) ) and ( ( language of management ) equal to ( 'chinese' ) ) and ( ( continent of department ) equal to ( asia ) ) )", "text": "Whic`h unique cities are in  Asian countries where Chinese is the official language?", "remark": "positive", "label": "1", "score": "0.6879739165306091"}
{"logic": "( hometown ) , ( the number of ( all items ) ) that belongs to ( teacher ) , grouped by ( hometown )", "text": "For each hometown, how many teachers are there?", "remark": "positive", "label": "1", "score": "0.7843887209892273"}
{"logic": "( name of likes ) , ( the sum of ( sales of highschooler ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , grouped by ( name of likes )", "text": "For each singer name, what is the average sale for their songs?", "remark": "logic", "label": "0", "score": "0.0405958816409111"}
{"logic": "( department description ) that belongs to ( departments ) , that have ( ( department_name ) like ( '%computer%' ) )", "text": "What is the department description for the one whose name has the word computer?", "remark": "positive", "label": "1", "score": "0.8839917778968811"}
{"logic": "( song name ) that belongs to ( singer ) , that have ( ( age ) greater than ( the average of ( age ) ) that belongs to ( singer ) )", "text": "What are all the song names by singers who are older than average?", "remark": "positive", "label": "1", "score": "0.8744949698448181"}
{"logic": "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )", "text": "What is the template type descriptions for template type code \"AD\".", "remark": "positive", "label": "1", "score": "0.8883830904960632"}
{"logic": "( the maximum of ( final table made ) ) that belongs to ( poker player ) , that have ( ( earnings ) less than ( 200000 ) )", "text": "Return the maximum final tables made across all poker players who have earnings below 200000.", "remark": "positive", "label": "1", "score": "0.8858840465545654"}
{"logic": "( the maximum of ( age ) ) that belongs to ( dogs )", "text": "Tell me the age of the oldest dog.", "remark": "positive", "label": "1", "score": "0.8508040308952332"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( number products ) greater than ( the average of ( number products ) ) that belongs to ( shop ) )", "text": "Find the names of stores whose number products is more than the average number of products.", "remark": "positive", "label": "1", "score": "0.8671233057975769"}
{"logic": "( name of evaluation ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of employee ) equal to ( shop id of evaluation ) ) ) ) , grouped by ( shop id of employee ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the shop that is hiring the smallest number of employees?", "remark": "logic", "label": "0", "score": "0.6275046467781067"}
{"logic": "( name of head ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) , and ( ( highschooler ) satisfied that ( ( friend id of department ) equal to ( id of head ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "Return the names of friends of the high school student Kyle.", "remark": "positive", "label": "1", "score": "0.821907639503479"}
{"logic": "( hometown ) , ( the number of ( all items ) ) that belongs to ( teacher ) , grouped by ( hometown )", "text": "Show different hometown of teachers and the number of teachers from each hometown.", "remark": "positive", "label": "1", "score": "0.6985577940940857"}
{"logic": "( the number of ( language of management ) ) , ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( name of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?", "remark": "positive", "label": "1", "score": "0.8109661340713501"}
{"logic": "( the number of ( distinct ( template id ) ) ) that belongs to ( documents )", "text": "How many different templates do all document use?", "remark": "positive", "label": "1", "score": "0.8398683071136475"}
{"logic": "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of department ) , ( last name of department ) , ( cell number of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.", "remark": "positive", "label": "1", "score": "0.5511078238487244"}
{"logic": "( the number of ( all items ) ) , ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , grouped by ( stuid of department )", "text": "Find the number of pets for each student who has any pet and student id.", "remark": "positive", "label": "1", "score": "0.6071014404296875"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( ( city of highschooler ) equal to ( aberdeen ) ) or ( ( city of highschooler ) equal to ( abilene ) ) )", "text": "Find the number of flights landing in the city of Aberdeen and Abilene.", "remark": "logic", "label": "0", "score": "0.47439685463905334"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What is the Package Option of TV Channel without serial name \"Sky Radio\"?", "remark": "logic", "label": "0", "score": "0.042451243847608566"}
{"logic": "( the number of ( all items ) ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "What is the total number of countries where Spanish is spoken by the smallest percentage of people?", "remark": "logic", "label": "0", "score": "0.04603756591677666"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "How many flights arrive at 'APG'?", "remark": "value col", "label": "0", "score": "0.8466745018959045"}
{"logic": "( distinct ( state ) ) , ( created ) that belongs to ( votes )", "text": "What are the distinct states and create time of all votes?", "remark": "positive", "label": "1", "score": "0.04156741499900818"}
{"logic": "( distinct ( course name of likes ) ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) )", "text": "What are all the course names of the courses which never have students enrolled in?", "remark": "logic", "label": "0", "score": "0.044606149196624756"}
{"logic": "( contestant number ) , ( contestant name ) that belongs to ( contestants ) , ordered by ( ( contestant name ) in descending order )", "text": "List the contestant numbers and names, ordered by contestant name descending.", "remark": "positive", "label": "1", "score": "0.8046535849571228"}
{"logic": "( name of management ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) , and ( ( concert ) satisfied that ( ( concert id of department ) equal to ( concert id of head ) ) ) ) , that have ( ( year of head ) equal to ( 2014 ) )", "text": "List all singer names in concerts in year 2014.", "remark": "positive", "label": "1", "score": "0.8052237629890442"}
{"logic": "( orchestra ) that belongs to ( orchestra ) , that have ( ( orchestra_id ) not in ( ( orchestra id ) that belongs to ( performance ) ) )", "text": "What are the orchestras that do not have any performances?", "remark": "positive", "label": "1", "score": "0.7465407252311707"}
{"logic": "( name of highschooler ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the high schooler who has the lowest number of likes?", "remark": "logic", "label": "0", "score": "0.5350520014762878"}
{"logic": "( template id ) that belongs to ( templates ), and except that ( ( template id ) that belongs to ( documents ))", "text": "What are the ids for templates that are not used in any documents?", "remark": "positive", "label": "1", "score": "0.7332479953765869"}
{"logic": "( id ) that belongs to ( highschooler ), and except that ( ( student id ) that belongs to ( friend ))", "text": "Show ids of all students who have some friends.", "remark": "logic", "label": "0", "score": "0.07197153568267822"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "Give the flight numbers of flights leaving from Aberdeen.", "remark": "positive", "label": "1", "score": "0.7798765301704407"}
{"logic": "( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , that have ( ( tourney name of management ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , that have ( ( tourney name of management ) equal to ( 'australian open' ) ))", "text": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?", "remark": "positive", "label": "1", "score": "0.7728094458580017"}
{"logic": "( course name of department ) , ( course id of department ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) ) , grouped by ( course id of department ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "text": "What are the names and ids of every course with less than 2 sections?", "remark": "positive", "label": "1", "score": "0.5350919961929321"}
{"logic": "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )", "text": "what is the name and nation of the singer who have a song without 'Hey' in its name?", "remark": "logic", "label": "0", "score": "0.04598236829042435"}
{"logic": "( the number of ( all items ) ) , ( directed by ) that belongs to ( cartoon ) , grouped by ( directed by )", "text": "Find the number of cartoons directed by each of the listed directors.", "remark": "positive", "label": "1", "score": "0.8162711262702942"}
{"logic": "( feature type name of management ) that belongs to ( ( other available features ) , and ( ( ref feature types ) satisfied that ( ( feature type code of department ) equal to ( feature type code of management ) ) ) ) , that have ( ( feature name of department ) equal to ( aircon ) )", "text": "What is the feature type name of feature AirCon?", "remark": "positive", "label": "1", "score": "0.8323934078216553"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( number products ) greater than ( the average of ( number products ) ) that belongs to ( shop ) )", "text": "Which shops' number products is below the average? Give me the shop names.", "remark": "logic", "label": "0", "score": "0.10200463980436325"}
{"logic": "( the average of ( attendance ) ) that belongs to ( show )", "text": "Return the average attendance across all shows.", "remark": "positive", "label": "1", "score": "0.8517922759056091"}
{"logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) ) )", "text": "What is the average age for all students who own two pets?", "remark": "logic", "label": "0", "score": "0.38332599401474"}
{"logic": "( template type code ) , ( the number of ( all items ) ) that belongs to ( templates ) , grouped by ( template type code )", "text": "Show all template type codes and number of templates for each.", "remark": "positive", "label": "1", "score": "0.7078474760055542"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )", "text": "What are the names of the singers whose birth years are neither 1948 nor 1949?", "remark": "logic", "label": "0", "score": "0.04206360876560211"}
{"logic": "( citizenship ) that belongs to ( singer ) , grouped by ( citizenship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Please show the least common citizenship of singers.", "remark": "logic", "label": "0", "score": "0.383943647146225"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( museum_id ) not in ( ( museum id ) that belongs to ( visit ) ) )", "text": "What is the name of the museum that had no visitor yet?", "remark": "positive", "label": "1", "score": "0.815574049949646"}
{"logic": "( region ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of management ) equal to ( kabul ) )", "text": "What region is Kabul in?", "remark": "positive", "label": "1", "score": "0.8187013268470764"}
{"logic": "( contestant name ) that belongs to ( contestants ) , that have ( ( contestant_name ) like ( %al% ) )", "text": "Return the names the contestants whose names contain the substring 'Al'.", "remark": "positive", "label": "1", "score": "0.8640050888061523"}
{"logic": "( distinct ( model of department ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of management ) equal to ( id of head ) ) ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of trip ) ) ) ) , that have ( ( ( weight of head ) less than ( 3500 ) ) and ( ( fullname of trip ) not equal to ( 'ford motor company' ) ) )", "text": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "remark": "positive", "label": "1", "score": "0.8460080623626709"}
{"logic": "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )", "text": "What is the average miles per gallon of all the cards with 4 cylinders?", "remark": "positive", "label": "1", "score": "0.8774804472923279"}
{"logic": "( email address ) that belongs to ( professionals ) , that have ( ( ( state ) equal to ( 'hawaii' ) ) or ( ( state ) equal to ( 'wisconsin' ) ) )", "text": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.", "remark": "positive", "label": "1", "score": "0.8418358564376831"}
{"logic": "( museum id ) , ( name ) that belongs to ( museum ) , ordered by ( ( num of staff ) in descending order ) , limited to the top ( 1 )", "text": "Find the id and name of the museum that has the most staff members?", "remark": "positive", "label": "1", "score": "0.7714449763298035"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) )", "text": "Return the ids of all the poker players.", "remark": "value col", "label": "0", "score": "0.5983955264091492"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "remark": "positive", "label": "1", "score": "0.8413124084472656"}
{"logic": "( distinct ( name of area code state ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) , and ( ( city ) satisfied that ( ( code of likes ) equal to ( countrycode of area code state ) ) ) ) , that have ( ( ( isofficial of highschooler ) equal to ( 't' ) ) and ( ( language of highschooler ) equal to ( 'chinese' ) ) and ( ( continent of likes ) equal to ( asia ) ) )", "text": "Return the different names of cities that are in Asia and for which Chinese is not the official language.", "remark": "logic", "label": "0", "score": "0.03825179487466812"}
{"logic": "( countryid of department ) , ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of department ) , ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) , and ( ( model list ) satisfied that ( ( id of management ) equal to ( maker of head ) ) ) ) , that have ( ( model of head ) equal to ( 'fiat' ) )", "text": "What are the ids and names of all countries that either have more than 3 car makers or produce fiats?", "remark": "positive", "label": "1", "score": "0.6821428537368774"}
{"logic": "( the number of ( all items ) ) that belongs to ( singer )", "text": "How many singers do we have?", "remark": "positive", "label": "1", "score": "0.7920911908149719"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "What are the ids of templates with template type code neither PP nor PPT?", "remark": "logic", "label": "0", "score": "0.046725958585739136"}
{"logic": "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of department ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) ) )", "text": "Find the minimum grade of students who have no friends.", "remark": "positive", "label": "1", "score": "0.8039194345474243"}
{"logic": "( series name of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( title of management ) equal to ( the rise of the blue beetle! ) )", "text": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "remark": "positive", "label": "1", "score": "0.7756445407867432"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , ordered by ( ( horsepower of management ) in ascending order ) , limited to the top ( 1 )", "text": "Which model of the car has the minimum horsepower?", "remark": "positive", "label": "1", "score": "0.15187214314937592"}
{"logic": "( name ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( level of membership ) in descending order )", "text": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "remark": "positive", "label": "1", "score": "0.6625329256057739"}
{"logic": "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )", "text": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "remark": "positive", "label": "1", "score": "0.8803313374519348"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "What is the average horsepower of the cars before 1980?", "remark": "positive", "label": "1", "score": "0.8974506855010986"}
{"logic": "( the average of ( injured ) ) that belongs to ( death )", "text": "What is the average number of injuries caused each time?", "remark": "positive", "label": "1", "score": "0.8750407695770264"}
{"logic": "( email address ) , ( cell number ) , ( home phone ) that belongs to ( professionals )", "text": "What are the email, cell phone and home phone of each professional?", "remark": "positive", "label": "1", "score": "0.8707022666931152"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( governmentform ) equal to ( republic ) ) )", "text": "What is the maximum life expectancy in African countries that are republics?", "remark": "logic", "label": "0", "score": "0.048748016357421875"}
{"logic": "( killed of department ) , ( injured of department ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of department ) equal to ( id of management ) ) ) ) , that have ( ( tonnage of management ) equal to ( 't' ) )", "text": "What are the death and injury situations caused by the ship with tonnage 't'?", "remark": "positive", "label": "1", "score": "0.8354600667953491"}
{"logic": "( fname of likes ) , ( age of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( ( pettype of area code state ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ) ) ) )", "text": "What is the first name of every student who has a dog but have a cat?", "remark": "logic", "label": "0", "score": "0.33025914430618286"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )", "text": "What are the names of the singers whose birth years are either 1948 or 1949?", "remark": "positive", "label": "1", "score": "0.8829089403152466"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( europe ) ) and ( ( population ) equal to ( 80000 ) ) )", "text": "What are the names of the countries that are in the continent of Europe and have a population less than 80000?", "remark": "logic", "label": "0", "score": "0.05098564177751541"}
{"logic": "( citizenship ) , ( the maximum of ( net worth millions ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "Show different citizenships and the maximum net worth of singers of each citizenship.", "remark": "positive", "label": "1", "score": "0.8684679269790649"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) equal to ( ako ) )", "text": "What is the airport name for airport 'AKO'?", "remark": "positive", "label": "1", "score": "0.8816115260124207"}
{"logic": "( the number of ( all items ) ) , ( fullname of highschooler ) , ( id of highschooler ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( id of highschooler )", "text": "How many car models are produced by each maker? List the maker full name.", "remark": "value col", "label": "0", "score": "0.7685955166816711"}
{"logic": "( professional id of likes ) , ( role code of likes ) , ( first name of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ) , grouped by ( professional id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the id, role, and first name of the professionals who have performed two or less treatments?", "remark": "logic", "label": "0", "score": "0.049128226935863495"}
{"logic": "( the number of ( all items ) ) , ( student course id ) that belongs to ( transcript contents ) , grouped by ( student course id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "remark": "positive", "label": "1", "score": "0.04386857897043228"}
{"logic": "( distinct ( year of department ) ) that belongs to ( ( cars data ) ) , that have ( ( ( weight of department ) greater than ( 3000 ) ) and ( ( weight of department ) less than ( 4000 ) ) )", "text": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?", "remark": "positive", "label": "1", "score": "0.8735412359237671"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date first registered ) in ascending order ) , limited to the top ( 1 )", "text": "Who is the first student to register? List the first name, middle name and last name.", "remark": "positive", "label": "1", "score": "0.7546432018280029"}
{"logic": "( makeid of management ) , ( make of management ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( ( horsepower of department ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of department ) less than or equal to ( 3 ) ) )", "text": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "remark": "positive", "label": "1", "score": "0.33259451389312744"}
{"logic": "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the nationalities that are shared by at least two people?", "remark": "positive", "label": "1", "score": "0.8617927432060242"}
{"logic": "( section description ) that belongs to ( sections ) , that have ( ( section name ) equal to ( 'h' ) )", "text": "What is the description for the section named h?", "remark": "positive", "label": "1", "score": "0.8869647979736328"}
{"logic": "( property type description of highschooler ) that belongs to ( ( properties ) , and ( ( ref property types ) satisfied that ( ( property type code of likes ) equal to ( property type code of highschooler ) ) ) ) , grouped by ( property type code of likes )", "text": "Show the property type descriptions of properties.", "remark": "logic", "label": "0", "score": "0.7697241306304932"}
{"logic": "( name ) , ( age ) , ( weight ) that belongs to ( dogs ) , that have ( ( abandoned yn ) equal to ( 1 ) )", "text": "What are the dog name, age and weight of the dogs that were not abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "remark": "logic", "label": "0", "score": "0.04571899026632309"}
{"logic": "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )", "text": "Return the highest version number, along with its corresponding template type code.", "remark": "logic", "label": "0", "score": "0.10536593943834305"}
{"logic": "( first name ) that belongs to ( students ) , that have ( ( current address id ) not equal to ( permanent address id ) )", "text": "What is the first name of the student whose permanent address is different from his or her current one?", "remark": "positive", "label": "1", "score": "0.6633356809616089"}
{"logic": "( the average of ( earnings ) ) that belongs to ( poker player )", "text": "What is the total earnings of poker players?", "remark": "logic", "label": "0", "score": "0.05000774934887886"}
{"logic": "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )", "text": "How many different departments offer degrees?", "remark": "positive", "label": "1", "score": "0.8178485631942749"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "List the language used least number of TV Channel. List language and number of TV Channel.", "remark": "positive", "label": "1", "score": "0.4423511326313019"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the code of the country with the most players?", "remark": "positive", "label": "1", "score": "0.7740375995635986"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date first registered ) in ascending order ) , limited to the top ( 1 )", "text": "What is the first, middle, and last name of the first student to register?", "remark": "positive", "label": "1", "score": "0.7995545268058777"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( people_id ) not in ( ( people id ) that belongs to ( poker player ) ) )", "text": "List the names of people that are not poker players.", "remark": "positive", "label": "1", "score": "0.7028704285621643"}
{"logic": "( petid of management ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , that have ( ( lname of department ) equal to ( 'smith' ) )", "text": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.", "remark": "positive", "label": "1", "score": "0.8525055050849915"}
{"logic": "( department name of highschooler ) , ( department id of likes ) that belongs to ( ( degree programs ) , and ( ( departments ) satisfied that ( ( department id of likes ) equal to ( department id of highschooler ) ) ) ) , grouped by ( department id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "For each department id, what is the name of the department with the least number of degrees", "remark": "logic", "label": "0", "score": "0.22791223227977753"}
{"logic": "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the name and rank points of the winner who won the most times.", "remark": "positive", "label": "1", "score": "0.7864922881126404"}
{"logic": "( distinct ( course name of department ) ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) )", "text": "What are all the course names of the courses which ever have students enrolled in?", "remark": "positive", "label": "1", "score": "0.7175085544586182"}
{"logic": "( distinct ( first name of department ) ) , ( last name of department ) that belongs to ( ( professionals ) join ( ( treatments ) ) ) , that have ( ( cost of treatment ) less than ( the average of ( cost of treatment ) ) that belongs to ( treatments ) )", "text": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.", "remark": "positive", "label": "1", "score": "0.7628324627876282"}
{"logic": "( distinct ( fname of likes ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( ( pettype of area code state ) equal to ( 'cat' ) ) or ( ( pettype of area code state ) equal to ( 'dog' ) ) )", "text": "Find the first name of students who have cat or bird pet.", "remark": "value str", "label": "0", "score": "0.6277825236320496"}
{"logic": "( the number of ( all items ) ) that belongs to ( pets ) , that have ( ( weight ) greater than ( 10 ) )", "text": "How many pets have a greater weight than 10?", "remark": "positive", "label": "1", "score": "0.8722274303436279"}
{"logic": "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )", "text": "What are the names and areas of countries with the top 5 largest area?", "remark": "positive", "label": "1", "score": "0.8099343180656433"}
{"logic": "( course description ) that belongs to ( courses ) , that have ( ( course name ) equal to ( 'math' ) )", "text": "How is the math course described?", "remark": "positive", "label": "1", "score": "0.8602759838104248"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) between ( 1 ) and ( 2 ) )", "text": "What is the document id with 1 to 2 paragraphs?", "remark": "positive", "label": "1", "score": "0.7009115219116211"}
{"logic": "( the maximum of ( created ) ) that belongs to ( votes ) , that have ( ( state ) equal to ( 'ca' ) )", "text": "What is last date created of votes from the state 'CA'?", "remark": "positive", "label": "1", "score": "0.1252477467060089"}
{"logic": "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the winner who has won the least matches, and how many rank points does this player have?", "remark": "logic", "label": "0", "score": "0.6608625650405884"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "Find all airlines that have more than 200 flights.", "remark": "logic", "label": "0", "score": "0.09361076354980469"}
{"logic": "( distinct ( name of department ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , that have ( ( sales of management ) greater than ( 300000 ) )", "text": "what are the different names of the singers that have sales more than 300000?", "remark": "positive", "label": "1", "score": "0.8279662728309631"}
{"logic": "( owner id of likes ) , ( zip code of likes ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of highschooler ) equal to ( dog id of area code state ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the sum of ( cost of treatment of area code state ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the owner id and zip code of the owner who spent the least money in total for his or her dogs.", "remark": "logic", "label": "0", "score": "0.6856582760810852"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines )", "text": "What are the airlines that we have?", "remark": "logic", "label": "0", "score": "0.1558670997619629"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( people )", "text": "List distinct nationalities?", "remark": "value col", "label": "0", "score": "0.31403008103370667"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in ascending order ) , limited to the top ( 3 )", "text": "What are the names of the nations with the lowest populations?", "remark": "value int", "label": "0", "score": "0.20599088072776794"}
{"logic": "( the average of ( loser age ) ) , ( the average of ( winner age ) ) that belongs to ( matches )", "text": "Find the average age of losers and winners of all matches.", "remark": "positive", "label": "1", "score": "0.850486159324646"}
{"logic": "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ) ) )", "text": "Find the major and age of students who do not have a cat pet.", "remark": "positive", "label": "1", "score": "0.733979344367981"}
{"logic": "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity for the stadium with highest average attendance?", "remark": "positive", "label": "1", "score": "0.8280885219573975"}
{"logic": "( visitor id of catalog structure ) , ( name of catalogs ) , ( level of membership of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) ) , grouped by ( visitor id of catalog structure ) , ordered by ( ( the sum of ( total spent of catalog structure ) ) in descending order ) , limited to the top ( 1 )", "text": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "remark": "positive", "label": "1", "score": "0.76278156042099"}
{"logic": "( the number of ( all items ) ) , ( student course id ) that belongs to ( transcript contents ) , grouped by ( student course id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "remark": "positive", "label": "1", "score": "0.1526942402124405"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( teacher_id ) not in ( ( teacher id ) that belongs to ( course arrange ) ) )", "text": "List the names of teachers who have not been arranged to teach courses.", "remark": "positive", "label": "1", "score": "0.6598672270774841"}
{"logic": "( email address ) , ( cell number ) , ( home phone ) that belongs to ( professionals )", "text": "What are the email, and cell phone of each professional?", "remark": "value col", "label": "0", "score": "0.18052880465984344"}
{"logic": "( distinct ( model of likes ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of likes ) equal to ( model of highschooler ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of highschooler ) equal to ( id of area code state ) ) ) ) , that have ( ( year of area code state ) greater than ( 1980 ) )", "text": "Which distinct car models are the produced after 1970?", "remark": "value int", "label": "0", "score": "0.05051039904356003"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , that have ( ( the number of ( all items ) ) greater than ( 50 ) )", "text": "What are the codes of countries with more than 50 players?", "remark": "positive", "label": "1", "score": "0.831329345703125"}
{"logic": "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))", "text": "Show the document id with paragraph text 'Russia' and 'Ireland'.", "remark": "value str", "label": "0", "score": "0.18503153324127197"}
{"logic": "( countryid of department ) , ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of department ) , ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) , and ( ( model list ) satisfied that ( ( id of management ) equal to ( maker of head ) ) ) ) , that have ( ( model of head ) equal to ( 'fiat' ) )", "text": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "remark": "positive", "label": "1", "score": "0.5539385080337524"}
{"logic": "( id of likes ) , ( maker of likes ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of likes ) equal to ( maker of highschooler ) ) ) ) , grouped by ( id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( id of likes ) , ( maker of likes ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of likes ) equal to ( maker of highschooler ) ) ) , and ( ( car names ) satisfied that ( ( model of highschooler ) equal to ( model of area code state ) ) ) ) , grouped by ( id of likes ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ))", "text": "What are the ids and makers of all car makers that produce at least 1 models and make more than 4 cars?", "remark": "value int", "label": "0", "score": "0.057164233177900314"}
{"logic": "( the number of ( all items ) ) that belongs to ( other available features )", "text": "What are the available features are there in total?", "remark": "value col", "label": "0", "score": "0.8156511187553406"}
{"logic": "( the number of ( all items ) ) that belongs to ( conductor )", "text": "List the names of conductors.", "remark": "value col", "label": "0", "score": "0.043872103095054626"}
{"logic": "( the sum of ( tours ) ) , ( ranking date ) that belongs to ( rankings ) , grouped by ( ranking date )", "text": "Find the total number of tours for each ranking date.", "remark": "positive", "label": "1", "score": "0.8731182813644409"}
{"logic": "( city of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) , grouped by ( city of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city is the most frequent source airport?", "remark": "positive", "label": "1", "score": "0.7074813842773438"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( english ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( french ) ))", "text": "What are the names of nations speak both Spanish and French?", "remark": "value str", "label": "0", "score": "0.6429948210716248"}
{"logic": "( name of management ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of management ) ) ) ) , grouped by ( name of management ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show names of teachers that teach at least two courses.", "remark": "positive", "label": "1", "score": "0.814826250076294"}
{"logic": "( transcript date of management ) , ( transcript id of department ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of department ) equal to ( transcript id of management ) ) ) ) , grouped by ( transcript id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What is the date and id of the transcript with at least 2 courses listed?", "remark": "positive", "label": "1", "score": "0.8524592518806458"}
{"logic": "( the average of ( gnp ) ) , ( the sum of ( population ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( us territory ) )", "text": "Give the mean GNP and total population of nations which are considered US territory.", "remark": "positive", "label": "1", "score": "0.5531060099601746"}
{"logic": "( first name ) that belongs to ( students ) , that have ( ( current address id ) not equal to ( permanent address id ) )", "text": "Whose permanent address is different from his or her current address? List his or her first name.", "remark": "positive", "label": "1", "score": "0.15103521943092346"}
{"logic": "( fname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ), and intersect with ( ( fname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'dog' ) ))", "text": "Find the name of students who have both cat and dog pets.", "remark": "positive", "label": "1", "score": "0.7646220326423645"}
{"logic": "( the number of ( all items ) ) that belongs to ( poker player )", "text": "How many poker players are there?", "remark": "positive", "label": "1", "score": "0.8341509103775024"}
{"logic": "( song name ) , ( song release year ) that belongs to ( singer ) , ordered by ( ( age ) ) , limited to the top ( 1 )", "text": "What are the names and release years for all the songs of the youngest singer?", "remark": "positive", "label": "1", "score": "0.8423736095428467"}
{"logic": "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )", "text": "What is the number of distinct languages used around the world?", "remark": "positive", "label": "1", "score": "0.8164207339286804"}
{"logic": "( episode of highschooler ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( series name of likes ) equal to ( sky radio ) )", "text": "List the Episode of all  TV series showed on TV Channel without series name \"Sky Radio\".", "remark": "logic", "label": "0", "score": "0.04641326144337654"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( performance ) , that have ( ( type ) not equal to ( live final ) )", "text": "What are the maximum share of performances whose type is not \"Live final\".", "remark": "value col", "label": "0", "score": "0.8655568957328796"}
{"logic": "( name ) , ( population ) , ( headofstate ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "Give the name, population, and head of state for the country that has the largest area.", "remark": "positive", "label": "1", "score": "0.7364637851715088"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "Count the number of flights into ATO.", "remark": "positive", "label": "1", "score": "0.8232681751251221"}
{"logic": "( the sum of ( population ) ) , ( the average of ( lifeexpectancy ) ) , ( continent ) that belongs to ( country ) , grouped by ( continent ) , that have ( ( the average of ( lifeexpectancy ) ) less than ( 72 ) )", "text": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?", "remark": "positive", "label": "1", "score": "0.8330870270729065"}
{"logic": "( language ) , ( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , grouped by ( countrycode )", "text": "What is the language spoken by the smallest percentage of people in each country?", "remark": "logic", "label": "0", "score": "0.07780256867408752"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )", "text": "What are the names of conductors, sorted ascending by the number of years they have worked?", "remark": "logic", "label": "0", "score": "0.05109148472547531"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the name of the nation that uses the greatest amount of languages.", "remark": "positive", "label": "1", "score": "0.7145254015922546"}
{"logic": "( name ) that belongs to ( city ) , that have ( ( population ) between ( 160000 ) and ( 90000 ) )", "text": "Return the names of cities that have a population between 160000 and 900000.", "remark": "positive", "label": "1", "score": "0.04590565711259842"}
{"logic": "( the average of ( earnings of management ) ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , that have ( ( height of department ) greater than ( 200 ) )", "text": "Give average earnings of poker players who are taller than 200.", "remark": "positive", "label": "1", "score": "0.8252584934234619"}
{"logic": "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.8782402276992798"}
{"logic": "( the average of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( stadium )", "text": "What is the average and the maximum capacity of all stadiums?", "remark": "positive", "label": "1", "score": "0.8963470458984375"}
{"logic": "( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , ordered by ( ( tours of management ) in descending order ) , limited to the top ( 1 )", "text": "Find the first name and country code of the player who did the most number of tours.", "remark": "positive", "label": "1", "score": "0.7495118379592896"}
{"logic": "( airportcode ) , ( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( anthony ) )", "text": "List the airport code and name in the city of Anthony.", "remark": "positive", "label": "1", "score": "0.8576551079750061"}
{"logic": "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( chinese ) )", "text": "What is the number of distinct continents where English is spoken?", "remark": "value str", "label": "0", "score": "0.7919094562530518"}
{"logic": "( the number of ( all items ) ) that belongs to ( museum ) , that have ( ( ( open year ) greater than ( 2013 ) ) or ( ( open year ) less than ( 2008 ) ) )", "text": "How many museums were opened after 2013 or before 2008?", "remark": "positive", "label": "1", "score": "0.8213358521461487"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of department ) equal to ( countryid of management ) ) ) ) , that have ( ( countryname of management ) equal to ( 'france' ) )", "text": "How many car makers are there in france?", "remark": "positive", "label": "1", "score": "0.7717792391777039"}
{"logic": "( city ) that belongs to ( employee ) , that have ( ( age ) less than ( 30 ) ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Find the cities that have more than one employee under age 30.", "remark": "positive", "label": "1", "score": "0.8493115901947021"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , grouped by ( name of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the name of the nation that uses the smallest amount of languages.", "remark": "logic", "label": "0", "score": "0.3137664794921875"}
{"logic": "( the number of ( all items ) ) that belongs to ( teacher )", "text": "How many teachers are there?", "remark": "positive", "label": "1", "score": "0.8292310237884521"}
{"logic": "( the number of ( all items ) ) that belongs to ( owners ) , that have ( ( owner_id ) not in ( ( owner id ) that belongs to ( dogs ) ) )", "text": "Find the number of owners who do not own any dogs at this moment.", "remark": "positive", "label": "1", "score": "0.6282217502593994"}
{"logic": "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )", "text": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "remark": "positive", "label": "1", "score": "0.8479505181312561"}
{"logic": "( the maximum of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the average weight for each type of pet. List the average weight and pet type.", "remark": "value col", "label": "0", "score": "0.270452618598938"}
{"logic": "( name ) that belongs to ( city ) , that have ( ( population ) between ( 160000 ) and ( 90000 ) )", "text": "Return the names of cities that have a population between 180000 and 800000.", "remark": "value int", "label": "0", "score": "0.03818199411034584"}
{"logic": "( the number of ( all items ) ) that belongs to ( courses )", "text": "How many courses in average are listed?", "remark": "logic", "label": "0", "score": "0.04243679717183113"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "find the code of the country where has the greatest number of players.", "remark": "positive", "label": "1", "score": "0.7885571718215942"}
{"logic": "( the number of ( all items ) ) that belongs to ( employee )", "text": "Count the number of employees", "remark": "positive", "label": "1", "score": "0.556184709072113"}
{"logic": "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))", "text": "Find the last names that are used for professionals or owners but are not used as dog names.", "remark": "value col", "label": "0", "score": "0.7031083106994629"}
{"logic": "( earnings ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order )", "text": "List the earnings of poker players in ascending order.", "remark": "logic", "label": "0", "score": "0.04703020676970482"}
{"logic": "( city ) that belongs to ( employee ) , that have ( ( age ) less than ( 30 ) ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Find the cities that have more than one employee under age 25.", "remark": "value int", "label": "0", "score": "0.04318026080727577"}
{"logic": "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )", "text": "How many departments do not offer any degree?", "remark": "logic", "label": "0", "score": "0.043829940259456635"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( conductor )", "text": "How many conductors do we have?", "remark": "value col", "label": "0", "score": "0.147774800658226"}
{"logic": "( the number of ( all items ) ) that belongs to ( documents )", "text": "Count the number of distinct documents.", "remark": "logic", "label": "0", "score": "0.7942541837692261"}
{"logic": "( distinct ( maker of department ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) , and ( ( car names ) satisfied that ( ( model of management ) equal to ( model of head ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of head ) equal to ( id of trip ) ) ) ) , that have ( ( year of trip ) equal to ( '1970' ) )", "text": "What is the name of the different car makers who produced a car in 1970?", "remark": "positive", "label": "1", "score": "0.8337056636810303"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( english ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( dutch ) )) r\" )", "text": "What are the names of the countries speak both English and Dutch?", "remark": "value col", "label": "0", "score": "0.5137425661087036"}
{"logic": "( winner name ) , ( loser name ) that belongs to ( matches ) , ordered by ( ( minutes ) in descending order ) , limited to the top ( 1 )", "text": "What are the names of the winner and loser who played in the longest match?", "remark": "positive", "label": "1", "score": "0.22758029401302338"}
{"logic": "( name ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( level of membership ) in descending order )", "text": "Find the names of the visitors whose membership level is higher than 3, and order the results by the level from high to low.", "remark": "value int", "label": "0", "score": "0.050310853868722916"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "What are the ids of students who both have friends and are liked?", "remark": "positive", "label": "1", "score": "0.8383108973503113"}
{"logic": "( cost of treatment of department ) , ( treatment type description of management ) that belongs to ( ( treatments ) , and ( ( treatment types ) satisfied that ( ( treatment type code of department ) equal to ( treatment type code of management ) ) ) )", "text": "What are the cost and treatment type description of each treatment?", "remark": "positive", "label": "1", "score": "0.8030522465705872"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in ascending order )", "text": "List the name of singers in ascending order of net worth.", "remark": "positive", "label": "1", "score": "0.8540731072425842"}
{"logic": "( the number of ( distinct ( pettype ) ) ) that belongs to ( pets )", "text": "List different types of pet?", "remark": "value col", "label": "0", "score": "0.315586119890213"}
{"logic": "( citizenship ) that belongs to ( singer ) , grouped by ( citizenship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Please show the most common citizenship of singers.", "remark": "positive", "label": "1", "score": "0.7852655649185181"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( countryid of likes ) , ( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of likes ) equal to ( country of highschooler ) ) ) ) , grouped by ( countryid of likes ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) r\" )", "text": "What is the number of countries with more than 3 car makers?", "remark": "value int", "label": "0", "score": "0.044517338275909424"}
{"logic": "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )", "text": "What are the different departments offering degrees?", "remark": "value col", "label": "0", "score": "0.6900186538696289"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of department ) equal to ( department id of management ) ) ) ) , that have ( ( department name of department ) equal to ( 'engineer' ) )", "text": "How many degrees does the engineering department have?", "remark": "positive", "label": "1", "score": "0.767900288105011"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the winner with the least rank points who participated in the Australian Open tournament?", "remark": "logic", "label": "0", "score": "0.5946786403656006"}
{"logic": "( maker ) , ( model ) that belongs to ( model list )", "text": "What are the makers and models?", "remark": "positive", "label": "1", "score": "0.8566517233848572"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "What is the average horsepower for all cards produced before 1980?", "remark": "positive", "label": "1", "score": "0.8937162756919861"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the conductor who has worked the greatest number of years?", "remark": "positive", "label": "1", "score": "0.7910065054893494"}
{"logic": "( name ) that belongs to ( stadium ), and except that ( ( name of highschooler ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of likes ) equal to ( stadium id of highschooler ) ) ) ) , that have ( ( year of likes ) equal to ( 2014 ) ))", "text": "Show names for all stadiums except for stadiums having a concert before year 2014.", "remark": "logic", "label": "0", "score": "0.2204144448041916"}
{"logic": "( name ) , ( country ) , ( age ) that belongs to ( singer ) , ordered by ( ( age ) in descending order )", "text": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "remark": "positive", "label": "1", "score": "0.726538896560669"}
{"logic": "( the number of ( all items ) ) , ( fullname of management ) , ( id of management ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of management ) ) ) ) , grouped by ( id of management )", "text": "How many car models are produced by each maker? List the count and the maker full name.", "remark": "positive", "label": "1", "score": "0.7009915113449097"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "How many likes does Kyle have?", "remark": "positive", "label": "1", "score": "0.7536802291870117"}
{"logic": "( record company ) that belongs to ( orchestra ) , grouped by ( record company ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "List the record company shared by the most number of orchestras.", "remark": "positive", "label": "1", "score": "0.7586671113967896"}
{"logic": "( treatment type description of department ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of department ) equal to ( treatment type code of management ) ) ) ) , grouped by ( treatment type code of department ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )", "text": "Give me the description of the treatment type whose total cost is the lowest.", "remark": "positive", "label": "1", "score": "0.6581450700759888"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department )", "text": "What are the names of high schoolers who have likes, and how many likes does each have?", "remark": "positive", "label": "1", "score": "0.6839775443077087"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )", "text": "What are the full names of all right handed players, in order of birth date?", "remark": "value str", "label": "0", "score": "0.826582670211792"}
{"logic": "( transcript date ) , ( other details ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in ascending order ) , limited to the top ( 1 )", "text": "When is the first transcript released? List the date and details.", "remark": "positive", "label": "1", "score": "0.6763405799865723"}
{"logic": "( make of management ) , ( year of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( year of department ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "Find the make and production time of the cars that were produced in the earliest year?", "remark": "positive", "label": "1", "score": "0.15414562821388245"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "List the most common hometown of teachers.", "remark": "positive", "label": "1", "score": "0.7686824798583984"}
{"logic": "( the sum of ( population ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ) ) )", "text": "How many people live in countries that do not speak English?", "remark": "positive", "label": "1", "score": "0.46113690733909607"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )", "text": "How many friends in average does each student have?", "remark": "logic", "label": "0", "score": "0.044324636459350586"}
{"logic": "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )", "text": "Which city is the Alton airport at?", "remark": "value col", "label": "0", "score": "0.15276548266410828"}
{"logic": "( distinct ( model of management ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( car makers ) satisfied that ( ( maker of management ) equal to ( id of head ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of trip ) ) ) ) , that have ( ( ( fullname of head ) equal to ( 'general motors' ) ) or ( ( weight of trip ) greater than ( 3500 ) ) )", "text": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "remark": "positive", "label": "1", "score": "0.7740879058837891"}
{"logic": "( name of likes ) , ( date of likes ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of likes ) equal to ( lost in battle of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( 'lettice' ) ), and intersect with ( ( name of likes ) , ( date of likes ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of likes ) equal to ( lost in battle of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( 'hms atalanta' ) ))", "text": "List the name and date the battle that has lost the ship named 'Lettice' or the ship named 'HMS Atalanta'", "remark": "logic", "label": "0", "score": "0.09744533896446228"}
{"logic": "( song name ) that belongs to ( singer ) , that have ( ( age ) greater than ( the average of ( age ) ) that belongs to ( singer ) )", "text": "What are all the song names by singers who are younger than average?", "remark": "logic", "label": "0", "score": "0.3511311709880829"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "Show the ids of high schoolers who have friends but are not also liked by someone else.", "remark": "logic", "label": "0", "score": "0.04995499551296234"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( population ) less than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) ) )", "text": "What are the African countries that have a  population less than any country in Asia?", "remark": "positive", "label": "1", "score": "0.7445704340934753"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )", "text": "What are the titles of all cartoons directed by Ben Jones?", "remark": "value str", "label": "0", "score": "0.5429829359054565"}
{"logic": "( major record format ) that belongs to ( orchestra ) , grouped by ( major record format ) , ordered by ( ( the number of ( all items ) ) in ascending order )", "text": "Please show the record formats of orchestras in descending order of count.", "remark": "logic", "label": "0", "score": "0.03974580392241478"}
{"logic": "( name ) , ( birth date ) that belongs to ( people ) , ordered by ( ( name ) in ascending order )", "text": "List the names and birth dates of people in descending alphabetical order of name.", "remark": "logic", "label": "0", "score": "0.04028089717030525"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( country )", "text": "Show all countries and the number of singers in each country.", "remark": "positive", "label": "1", "score": "0.7795376181602478"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "How many different addresses do the students currently live?", "remark": "positive", "label": "1", "score": "0.8378488421440125"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "Which airlines have at least 10 flights?", "remark": "positive", "label": "1", "score": "0.27453064918518066"}
{"logic": "( lname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pet age of head ) equal to ( 3 ) ) and ( ( pettype of head ) equal to ( 'cat' ) ) )", "text": "What is the last name of the student who has a cat that is 3 years old?", "remark": "positive", "label": "1", "score": "0.854353129863739"}
{"logic": "( the average of ( num of ticket ) ) , ( the maximum of ( num of ticket ) ) that belongs to ( visit )", "text": "What are the average and maximum number of tickets bought in all visits?", "remark": "positive", "label": "1", "score": "0.862528383731842"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of highschooler ) equal to ( uid of likes ) ) ) ) , that have ( ( ( airline of likes ) equal to ( united airlines ) ) and ( ( sourceairport of highschooler ) equal to ( ahd ) ) )", "text": "How many 'JetBlue Airlines' flights depart from Airport 'AHD'?", "remark": "value col", "label": "0", "score": "0.813045084476471"}
{"logic": "( name ) , ( surfacearea ) , ( indepyear ) that belongs to ( country ) , ordered by ( ( population ) ) , limited to the top ( 1 )", "text": "What are the name, independence year, and surface area of the country with the smallest population?", "remark": "positive", "label": "1", "score": "0.7808133363723755"}
{"logic": "( weight ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 4 ) ) and ( ( year ) equal to ( 1974 ) ) ) , ordered by ( ( weight ) in ascending order ) , limited to the top ( 1 )", "text": "What is the maximum weight of the car with 8 cylinders produced in 1974?", "remark": "logic", "label": "0", "score": "0.04743780568242073"}
{"logic": "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "What are the name, population, and life expectancy of the largest Africa country by land?", "remark": "value str", "label": "0", "score": "0.12148578464984894"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( template type code of management ) equal to ( 'ppt' ) )", "text": "How many documents are using the template with type code 'PPT'?", "remark": "positive", "label": "1", "score": "0.8291240930557251"}
{"logic": "( the maximum of ( charge amount ) ) that belongs to ( charges )", "text": "How much does the most expensive charge type costs?", "remark": "positive", "label": "1", "score": "0.4628868103027344"}
{"logic": "( the average of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) in ( ( student id of department ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) ) )", "text": "Find the average grade of all students who have some friends.", "remark": "positive", "label": "1", "score": "0.820068359375"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )", "text": "What are the names of the singers who are not French citizens?", "remark": "positive", "label": "1", "score": "0.8733891844749451"}
{"logic": "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )", "text": "Find the id and weight of all pets whose age is older than 10.", "remark": "value int", "label": "0", "score": "0.04510410502552986"}
{"logic": "( document id ) , ( document name ) , ( document description ) that belongs to ( documents )", "text": "What are the ids, names, and descriptions for all documents?", "remark": "positive", "label": "1", "score": "0.8620381355285645"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )", "text": "What are the codes of template types that have more than 3 templates?", "remark": "logic", "label": "0", "score": "0.10232867300510406"}
{"logic": "( the number of ( all items ) ) that belongs to ( players )", "text": "Find the names of players.", "remark": "value col", "label": "0", "score": "0.042934026569128036"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( governmentform of department ) equal to ( republic ) ) , grouped by ( language of management ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "text": "Which languages are spoken by only one country in republic governments?", "remark": "positive", "label": "1", "score": "0.6096136569976807"}
{"logic": "( student id of department ) , ( first name of department ) , ( middle name of department ) , ( last name of department ) , ( the number of ( all items ) ) , ( student id of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "remark": "positive", "label": "1", "score": "0.647951602935791"}
{"logic": "( record company ) , ( the number of ( all items ) ) that belongs to ( orchestra ) , grouped by ( record company )", "text": "Please show the different record companies and the corresponding number of orchestras.", "remark": "positive", "label": "1", "score": "0.8098331689834595"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ), and intersect with ( ( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of department ) equal to ( id of management ) ) ) ))", "text": "Show name of all students who have some friends and also are liked by someone else.", "remark": "positive", "label": "1", "score": "0.7313921451568604"}
{"logic": "( the number of ( distinct ( degree summary name ) ) ) that belongs to ( degree programs )", "text": "How many different degree names are offered?", "remark": "positive", "label": "1", "score": "0.8188546299934387"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of management ) equal to ( uid of department ) ) ) ) , that have ( ( ( airline of department ) equal to ( united airlines ) ) and ( ( destairport of management ) equal to ( asy ) ) )", "text": "How many 'United Airlines' flights go to Airport 'ASY'?", "remark": "positive", "label": "1", "score": "0.8436551094055176"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( uid of management ) equal to ( airline of department ) ) ) ) , that have ( ( airline of management ) equal to ( united airlines ) )", "text": "Which flight numbers correspond to United Airlines flights?", "remark": "positive", "label": "1", "score": "0.7606417536735535"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , grouped by ( conductor id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the conductor who has conducted the most orchestras?", "remark": "positive", "label": "1", "score": "0.6877639293670654"}
{"logic": "( location ) , ( name ) that belongs to ( stadium ) , that have ( ( capacity ) between ( 5000 ) and ( 10000 ) )", "text": "What are the locations and names of all stations with capacity between 5000 and 10000?", "remark": "positive", "label": "1", "score": "0.8781113028526306"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( region ) equal to ( caribbean ) )", "text": "How much surface area do the countires in the Carribean cover together?", "remark": "positive", "label": "1", "score": "0.7135019898414612"}
{"logic": "( last name of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , that have ( ( age of management ) equal to ( the maximum of ( age ) ) that belongs to ( dogs ) )", "text": "List the last name of the owner owning the youngest dog.", "remark": "positive", "label": "1", "score": "0.1756829470396042"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "What are flight numbers of flights departing from City \"Aberdeen \"?", "remark": "positive", "label": "1", "score": "0.8270520567893982"}
{"logic": "( the number of ( all items ) ) that belongs to ( courses )", "text": "How many courses in total are listed?", "remark": "positive", "label": "1", "score": "0.8185812830924988"}
{"logic": "( fname of department ) , ( age of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pettype of head ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ) ) ) )", "text": "What is the first name of every student who has a dog but does not have a cat?", "remark": "positive", "label": "1", "score": "0.5342556834220886"}
{"logic": "( the number of ( distinct ( degree summary name ) ) ) that belongs to ( degree programs )", "text": "How many different degrees are offered?", "remark": "positive", "label": "1", "score": "0.8145284056663513"}
{"logic": "( grade ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "Return the grade for the high schooler named Kyle.", "remark": "positive", "label": "1", "score": "0.8782449960708618"}
{"logic": "( language ) , ( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , grouped by ( countrycode )", "text": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "remark": "positive", "label": "1", "score": "0.7563091516494751"}
{"logic": "( the number of ( all items ) ) that belongs to ( professionals ) , that have ( ( professional_id ) not in ( ( professional id ) that belongs to ( treatments ) ) )", "text": "How many professionals did not operate any treatment on dogs?", "remark": "positive", "label": "1", "score": "0.5827137231826782"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )", "text": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "remark": "positive", "label": "1", "score": "0.7435775995254517"}
{"logic": "( template type code of likes ) , ( the number of ( all items ) ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , grouped by ( template type code of likes )", "text": "What are the different template type codes, and how many documents use each type in average?", "remark": "logic", "label": "0", "score": "0.042709942907094955"}
{"logic": "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )", "text": "What is the continent name which Aruba belongs to?", "remark": "value str", "label": "0", "score": "0.8776957392692566"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )", "text": "List each language and the number of TV Channels using it.", "remark": "positive", "label": "1", "score": "0.8024830222129822"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( aberdeen ) )", "text": "What are airport names at City 'Aberdeen'?", "remark": "positive", "label": "1", "score": "0.8744420409202576"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( ( city of management ) equal to ( aberdeen ) ) or ( ( city of management ) equal to ( abilene ) ) )", "text": "Find the number of flights landing in the city of Aberdeen or Abilene.", "remark": "positive", "label": "1", "score": "0.7432248592376709"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( people )", "text": "How many distinct nationalities are there?", "remark": "positive", "label": "1", "score": "0.8594504594802856"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "remark": "positive", "label": "1", "score": "0.7343841791152954"}
{"logic": "( distinct ( breed code ) ) , ( size code ) that belongs to ( dogs )", "text": "What are all the possible breed type and size type combinations?", "remark": "positive", "label": "1", "score": "0.26643651723861694"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , ordered by ( ( capacity of management ) in descending order ) , limited to the top ( 1 )", "text": "Find the number of concerts happened in the stadium with the highest capacity.", "remark": "positive", "label": "1", "score": "0.7567023038864136"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( countryid of department ) , ( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) r\" )", "text": "How many countries has more than 2 car makers?", "remark": "positive", "label": "1", "score": "0.7773554921150208"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of department ) equal to ( aruba ) ) , ordered by ( ( percentage ) in descending order ) , limited to the top ( 1 )", "text": "What language is predominantly spoken in Aruba?", "remark": "positive", "label": "1", "score": "0.6897760629653931"}
{"logic": "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the average and maximum age for each type of pet.", "remark": "positive", "label": "1", "score": "0.8558115363121033"}
{"logic": "( mpg ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) ) , ordered by ( ( mpg ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?", "remark": "positive", "label": "1", "score": "0.075395867228508"}
{"logic": "( contestant name ) that belongs to ( contestants ) , that have ( ( contestant name ) not equal to ( 'jessie alloway' ) )", "text": "What are the names of the contestants whose names are not 'Jessie Alloway'", "remark": "positive", "label": "1", "score": "0.8551626801490784"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( french ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ))", "text": "Give the names of countries with English or French as official languages.", "remark": "logic", "label": "0", "score": "0.3351127505302429"}
{"logic": "( distinct ( model of highschooler ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of likes ) equal to ( model of highschooler ) ) ) , and ( ( car makers ) satisfied that ( ( maker of highschooler ) equal to ( id of area code state ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of car makers ) ) ) ) , that have ( ( ( fullname of area code state ) equal to ( 'general motors' ) ) or ( ( weight of car makers ) greater than ( 3500 ) ) )", "text": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 4500?", "remark": "value int", "label": "0", "score": "0.3274744749069214"}
{"logic": "( citizenship ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "For each citizenship, how many singers are not  from that country?", "remark": "logic", "label": "0", "score": "0.04247370734810829"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( headofstate of department ) equal to ( beatrix ) ) and ( ( isofficial of management ) equal to ( t ) ) )", "text": "What is the official language used in the country the name of whose head of state is Beatrix.", "remark": "positive", "label": "1", "score": "0.8685311079025269"}
{"logic": "( grade ) that belongs to ( highschooler )", "text": "What is the highest grade of high schooler?", "remark": "logic", "label": "0", "score": "0.506942093372345"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "List all airline names and their abbreviations in \"USA\".", "remark": "positive", "label": "1", "score": "0.853154718875885"}
{"logic": "( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , ordered by ( ( tours of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the first name and country code of the player with the most tours?", "remark": "positive", "label": "1", "score": "0.7800645232200623"}
{"logic": "( the number of ( all items ) ) that belongs to ( owners ) , that have ( ( owner_id ) not in ( ( owner id ) that belongs to ( dogs ) ) )", "text": "How many owners temporarily do not have any dogs?", "remark": "positive", "label": "1", "score": "0.6778649687767029"}
{"logic": "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "remark": "positive", "label": "1", "score": "0.7757493853569031"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( final table made of management ) )", "text": "List the names of poker players ordered by the final tables made in ascending order.", "remark": "positive", "label": "1", "score": "0.6979489922523499"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the singer with the lowest net worth?", "remark": "logic", "label": "0", "score": "0.6560194492340088"}
{"logic": "( name ) that belongs to ( highschooler ) , that have ( ( grade ) equal to ( 10 ) )", "text": "Show the names of all high schoolers in grade 10.", "remark": "positive", "label": "1", "score": "0.8856842517852783"}
{"logic": "( name of area code state ) , ( course of highschooler ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of likes ) equal to ( teacher id of area code state ) ) ) )", "text": "Show names of teachers and the courses they are not arranged to teach.", "remark": "logic", "label": "0", "score": "0.03989363834261894"}
{"logic": "( distinct ( template type code ) ) that belongs to ( templates )", "text": "Show all distinct template type codes for all templates.", "remark": "positive", "label": "1", "score": "0.8794251680374146"}
{"logic": "( the number of ( distinct ( language of highschooler ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) )", "text": "For the countries founded before 1920, what is the total number of distinct official languages?", "remark": "value int", "label": "0", "score": "0.04631365090608597"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) ) , that have ( ( earnings of highschooler ) greater than ( 300000 ) )", "text": "Give the names of poker players who have earnings above 200000.", "remark": "value int", "label": "0", "score": "0.037414565682411194"}
{"logic": "( document id of department ) , ( document name of management ) , ( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , grouped by ( document id of department )", "text": "What are the ids and names of each document, as well as the number of paragraphs in each?", "remark": "positive", "label": "1", "score": "0.7641248106956482"}
{"logic": "( the number of ( all items ) ) that belongs to ( transcripts )", "text": "How many transcripts are released?", "remark": "positive", "label": "1", "score": "0.7626699209213257"}
{"logic": "( the number of ( language of highschooler ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( name of likes ) equal to ( aruba ) )", "text": "What is the total number of languages used in Canada?", "remark": "value str", "label": "0", "score": "0.0973217636346817"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( headofstate of likes ) equal to ( beatrix ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) )", "text": "What is the official language used in the country the name of whose head of state is not Beatrix.", "remark": "logic", "label": "0", "score": "0.03188350051641464"}
{"logic": "( name ) , ( level of membership ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( age ) in descending order )", "text": "Find the name and membership level of the visitors whose membership level is higher than 5, and sort by their age from old to young.", "remark": "value int", "label": "0", "score": "0.050589535385370255"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )", "text": "List the first of all players who are left / L hand in the order of birth date.", "remark": "value col", "label": "0", "score": "0.6679713726043701"}
{"logic": "( weekly rank ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the TV Channel for the episode \"A Love of a Lifetime\"?", "remark": "value col", "label": "0", "score": "0.04044719412922859"}
{"logic": "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the nationality that is most common across all people.", "remark": "positive", "label": "1", "score": "0.7518038153648376"}
{"logic": "( date of treatment of likes ) , ( first name of highschooler ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) )", "text": "What are the date and the operating professional's last name of each treatment?", "remark": "value col", "label": "0", "score": "0.1836845576763153"}
{"logic": "( section name ) , ( section description ) that belongs to ( sections )", "text": "What are the names and descriptions for all the sections?", "remark": "positive", "label": "1", "score": "0.8686848282814026"}
{"logic": "( charge type ) , ( charge amount ) that belongs to ( charges )", "text": "List each charge type and its amount.", "remark": "positive", "label": "1", "score": "0.7790167927742004"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , ordered by ( ( horsepower of highschooler ) in ascending order ) , limited to the top ( 1 )", "text": "Which model of the car has the maximum horsepower?", "remark": "logic", "label": "0", "score": "0.7568103671073914"}
{"logic": "( the number of ( all items ) ) that belongs to ( owners ) , that have ( ( owner_id ) not in ( ( owner id ) that belongs to ( dogs ) ) )", "text": "Find the number of owners who own some dogs at this moment.", "remark": "logic", "label": "0", "score": "0.11536850035190582"}
{"logic": "( name ) , ( population ) , ( headofstate ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "What are the population, name and leader of the country with the largest area?", "remark": "positive", "label": "1", "score": "0.3031946122646332"}
{"logic": "( the number of ( all items ) ) that belongs to ( templates ) , that have ( ( template type code ) equal to ( cv ) )", "text": "How many templates have template type code CV?", "remark": "positive", "label": "1", "score": "0.8115962147712708"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )", "text": "Show the student IDs.", "remark": "value col", "label": "0", "score": "0.07979512214660645"}
{"logic": "( document name ) , ( template id ) that belongs to ( documents ) , that have ( ( document_description ) like ( %w% ) )", "text": "What is the document name and template id for document with description with the letter 'w' in it?", "remark": "positive", "label": "1", "score": "0.8977057933807373"}
{"logic": "( the sum of ( population ) ) , ( the average of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( north america ) ) and ( ( surfacearea ) greater than ( 3000 ) ) )", "text": "Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than 3000.", "remark": "positive", "label": "1", "score": "0.8730862140655518"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "What country is Jetblue Airways affiliated with?", "remark": "positive", "label": "1", "score": "0.8718013167381287"}
{"logic": "( distinct ( name of likes ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , that have ( ( sales of highschooler ) greater than ( 300000 ) )", "text": "Show distinct names of singers that have songs with sales less than 300000.", "remark": "logic", "label": "0", "score": "0.044830553233623505"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( lifeexpectancy ) ) , limited to the top ( 1 )", "text": "Give the name of the country in Asia with the highest life expectancy.", "remark": "logic", "label": "0", "score": "0.7751097083091736"}
{"logic": "( id ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "Show the ID of the high schooler named Kyle.", "remark": "positive", "label": "1", "score": "0.9003525376319885"}
{"logic": "( final table made ) , ( best finish ) that belongs to ( poker player )", "text": "List the final tables made and the best finishes of poker players.", "remark": "positive", "label": "1", "score": "0.8869119882583618"}
{"logic": "( population ) , ( region ) that belongs to ( country ) , that have ( ( name ) equal to ( angola ) )", "text": "What are the population of Angola?", "remark": "value col", "label": "0", "score": "0.17327316105365753"}
{"logic": "( treatment type description of department ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of department ) equal to ( treatment type code of management ) ) ) ) , grouped by ( treatment type code of department ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the description of the treatment type that costs the least money in total?", "remark": "positive", "label": "1", "score": "0.7064467072486877"}
{"logic": "( the average of ( weight ) ) , ( year ) that belongs to ( cars data ) , grouped by ( year )", "text": "What is the average weight of cars each year?", "remark": "positive", "label": "1", "score": "0.8794501423835754"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ))", "text": "What are the codes of template types that are used for some documents?", "remark": "logic", "label": "0", "score": "0.12377628684043884"}
{"logic": "( first name of department ) , ( name of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) )", "text": "What are each owner's first name and their dogs's name?", "remark": "positive", "label": "1", "score": "0.7700449824333191"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( earnings of management ) in descending order )", "text": "What are the names of poker players in descending order of earnings?", "remark": "positive", "label": "1", "score": "0.8317967653274536"}
{"logic": "( semester name of department ) , ( semester id of department ) that belongs to ( ( semesters ) , and ( ( student enrolment ) satisfied that ( ( semester id of department ) equal to ( semester id of management ) ) ) ) , grouped by ( semester id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the semester which most student registered in? Show both the name and the id.", "remark": "positive", "label": "1", "score": "0.6881299018859863"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( countryid of department ) , ( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) r\" )", "text": "What is the number of countries with more than 2 car makers?", "remark": "positive", "label": "1", "score": "0.7826746702194214"}
{"logic": "( id of department ) , ( maker of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( id of department ) , ( maker of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) , and ( ( car names ) satisfied that ( ( model of management ) equal to ( model of head ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ))", "text": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "remark": "positive", "label": "1", "score": "0.6949074864387512"}
{"logic": "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "What is the average and maximum age for each pet type?", "remark": "positive", "label": "1", "score": "0.8609662652015686"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of likes ) equal to ( uid of highschooler ) ) ) ) , that have ( ( airline of highschooler ) equal to ( jetblue airways ) )", "text": "Give the ids of Jetblue Airways flights.", "remark": "value col", "label": "0", "score": "0.735500693321228"}
{"logic": "( name of management ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of management ) ) ) ) , grouped by ( name of management ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the names of the teachers who teach at least two courses?", "remark": "positive", "label": "1", "score": "0.8546971678733826"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in ascending order )", "text": "What are the names of singers ordered by ascending net worth?", "remark": "positive", "label": "1", "score": "0.8586378693580627"}
{"logic": "( the maximum of ( accelerate ) ) , ( cylinders ) that belongs to ( cars data ) , grouped by ( cylinders )", "text": "What is the maximum accelerate for all the different cylinders?", "remark": "positive", "label": "1", "score": "0.878953218460083"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , that have ( ( sourceairport of highschooler ) equal to ( cvo ) ), and except that ( ( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , that have ( ( sourceairport of highschooler ) equal to ( apg ) ))", "text": "Find all uid of airlines that have flights from airport 'CVO' but not from 'APG'.", "remark": "value col", "label": "0", "score": "0.6445755362510681"}
{"logic": "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )", "text": "Count the number of employees for each city.", "remark": "positive", "label": "1", "score": "0.8340389132499695"}
{"logic": "( distinct ( model of likes ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of likes ) equal to ( model of highschooler ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of highschooler ) equal to ( id of area code state ) ) ) ) , that have ( ( year of area code state ) greater than ( 1980 ) )", "text": "What are the different models for the cards produced before 1980?", "remark": "logic", "label": "0", "score": "0.06262528151273727"}
{"logic": "( department description ) that belongs to ( departments ) , that have ( ( department_name ) like ( '%computer%' ) )", "text": "What is the department description for the one whose name does not have the word computer?", "remark": "logic", "label": "0", "score": "0.046029578894376755"}
{"logic": "( birth year ) , ( citizenship ) that belongs to ( singer )", "text": "What are the birth years and citizenships of the singers?", "remark": "positive", "label": "1", "score": "0.8821297883987427"}
{"logic": "( id of catalogs ) , ( name of catalogs ) , ( age of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) ) , grouped by ( id of catalogs ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "find the id, name and age for visitors who visited some museums more than once.", "remark": "positive", "label": "1", "score": "0.8006675243377686"}
{"logic": "( owner id of department ) , ( zip code of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of management ) equal to ( dog id of head ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the sum of ( cost of treatment of head ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "remark": "positive", "label": "1", "score": "0.7461140751838684"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( ( city of management ) equal to ( aberdeen ) ) or ( ( city of management ) equal to ( abilene ) ) )", "text": "How many flights land in Aberdeen or Abilene?", "remark": "positive", "label": "1", "score": "0.7236853241920471"}
{"logic": "( mpg ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) ) , ordered by ( ( mpg ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum miles per gallon of the car with 8 cylinders or produced after 1980?", "remark": "logic", "label": "0", "score": "0.06384162604808807"}
{"logic": "( date arrived ) , ( date departed ) that belongs to ( dogs )", "text": "List the departure date for all the dogs.", "remark": "value col", "label": "0", "score": "0.5457035303115845"}
{"logic": "( the number of ( all items ) ) , ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , grouped by ( stuid of department )", "text": "For students who have pets, how many pets does each student have?", "remark": "positive", "label": "1", "score": "0.7130692601203918"}
{"logic": "( package option ) , ( series name ) that belongs to ( tv channel ) , that have ( ( hight definition tv ) equal to ( yes ) )", "text": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "remark": "positive", "label": "1", "score": "0.8815690279006958"}
{"logic": "( the average of ( earnings ) ) that belongs to ( poker player )", "text": "Return the average earnings across all poker players.", "remark": "positive", "label": "1", "score": "0.8728104829788208"}
{"logic": "( section name ) that belongs to ( sections ) , ordered by ( ( section name ) in descending order )", "text": "What are the names of the sections in alphabetical order?", "remark": "logic", "label": "0", "score": "0.5349472165107727"}
{"logic": "( distinct ( first name of likes ) ) , ( treatment type description of area code state ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) , and ( ( treatment types ) satisfied that ( ( treatment type code of highschooler ) equal to ( treatment type code of area code state ) ) ) )", "text": "List the last name of all the professionals along with the description of the treatment they have done.", "remark": "value col", "label": "0", "score": "0.7913398146629333"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( hometown ) not equal to ( little lever urban distric ) )", "text": "What are the names of the teachers whose hometown is not \"Little Lever Urban District\"?", "remark": "positive", "label": "1", "score": "0.8832105994224548"}
{"logic": "( record company ) that belongs to ( orchestra ) , ordered by ( ( year of founded ) in descending order )", "text": "What are the record companies of orchestras in descending order of years in which they were founded?", "remark": "positive", "label": "1", "score": "0.8764973282814026"}
{"logic": "( note ) that belongs to ( death ) , that have ( ( note ) like ( '%east%' ) )", "text": "What are the notes of the death events which has substring 'East'?", "remark": "positive", "label": "1", "score": "0.8787710666656494"}
{"logic": "( id of department ) , ( name of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) , and ( ( death ) satisfied that ( ( id of management ) equal to ( caused by ship id of head ) ) ) ) , grouped by ( id of department ) , that have ( ( the sum of ( killed of head ) ) greater than ( 10 ) )", "text": "What are the ids and names of the battles that led to more than 10 people killed in total.", "remark": "positive", "label": "1", "score": "0.8005973100662231"}
{"logic": "( the maximum of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "remark": "positive", "label": "1", "score": "0.8483814001083374"}
{"logic": "( num of staff ) , ( open year ) that belongs to ( museum ) , that have ( ( name ) equal to ( 'plaza museum' ) )", "text": "What are the opening year of the museum named Plaza Museum?", "remark": "value col", "label": "0", "score": "0.15674209594726562"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department )", "text": "Show the names of high school students and their corresponding number of friends.", "remark": "positive", "label": "1", "score": "0.6813852190971375"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "What are the ids of students who have friends?", "remark": "logic", "label": "0", "score": "0.8173092007637024"}
{"logic": "( the number of ( all items ) ) , ( location ) that belongs to ( shop ) , grouped by ( location )", "text": "How many shops are there in each location?", "remark": "positive", "label": "1", "score": "0.7947400212287903"}
{"logic": "( name of department ) , ( orchestra of management ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) )", "text": "Show the names of conductors and the orchestras they have conducted.", "remark": "positive", "label": "1", "score": "0.7599449157714844"}
{"logic": "( first name of department ) , ( name of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , that have ( ( state of department ) equal to ( 'virginia' ) )", "text": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "remark": "positive", "label": "1", "score": "0.775854229927063"}
{"logic": "( name of highschooler ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of likes ) equal to ( teacher id of highschooler ) ) ) ) , grouped by ( name of highschooler ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show names of teachers that teach at most two courses.", "remark": "logic", "label": "0", "score": "0.26412415504455566"}
{"logic": "( episode ) , ( rating ) that belongs to ( tv series ) , ordered by ( ( rating ) in descending order ) , limited to the top ( 3 )", "text": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "remark": "positive", "label": "1", "score": "0.7904595136642456"}
{"logic": "( nationality ) , ( the number of ( all items ) ) that belongs to ( people ) , grouped by ( nationality )", "text": "What are different nationalities of people and the corresponding people from each nation?", "remark": "logic", "label": "0", "score": "0.19209031760692596"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ) ) )", "text": "Give the mean life expectancy of countries in which English is the official language.", "remark": "logic", "label": "0", "score": "0.5290536880493164"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )", "text": "For each language, list the number of TV Channels that not use it.", "remark": "logic", "label": "0", "score": "0.042602621018886566"}
{"logic": "( area code of head ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) , and ( ( area code state ) satisfied that ( ( state of management ) equal to ( state of head ) ) ) ) , that have ( ( contestant name of department ) equal to ( 'tabatha gehling' ) ), and intersect with ( ( area code of head ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) , and ( ( area code state ) satisfied that ( ( state of management ) equal to ( state of head ) ) ) ) , that have ( ( contestant name of department ) equal to ( 'kelly clauss' ) ))", "text": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.", "remark": "positive", "label": "1", "score": "0.7273554801940918"}
{"logic": "( title of management ) , ( name of department ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) )", "text": "What are the song titles and singer names?", "remark": "positive", "label": "1", "score": "0.7432726621627808"}
{"logic": "( the number of ( all items ) ) that belongs to ( employee )", "text": "What are the name of employees?", "remark": "value col", "label": "0", "score": "0.04161178693175316"}
{"logic": "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of likes ) , ( last name of likes ) , ( cell number of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ) , grouped by ( professional id of likes ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Find the id, last name and cell phone of the professionals who live in the state of Indiana and have performed more than two treatments.", "remark": "logic", "label": "0", "score": "0.7959784269332886"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "What are the names of high schoolers who have 3 or more friends?", "remark": "positive", "label": "1", "score": "0.7441058158874512"}
{"logic": "( distinct ( semester id of management ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of management ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))", "text": "What is the id of the semester that had both Masters and Bachelors students enrolled?", "remark": "positive", "label": "1", "score": "0.7583187818527222"}
{"logic": "( make of highschooler ) , ( year of likes ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( year of likes ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "What is the maker id of the carr produced in the earliest year and what year was it?", "remark": "value col", "label": "0", "score": "0.8092105984687805"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( continent of department ) equal to ( asia ) ) , grouped by ( language of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which language is the most popular on the Asian continent?", "remark": "positive", "label": "1", "score": "0.693442702293396"}
{"logic": "( flightno of likes ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( city of highschooler ) equal to ( aberdeen ) )", "text": "Give the flight numbers of flights leaving for Aberdeen.", "remark": "logic", "label": "0", "score": "0.7830105423927307"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department )", "text": "Show the names of high schoolers who have likes, and numbers of likes for each.", "remark": "positive", "label": "1", "score": "0.7119253277778625"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which airline has most number of flights?", "remark": "positive", "label": "1", "score": "0.699073851108551"}
{"logic": "( series name of likes ) , ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( directed by of highschooler ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of likes ) , ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( directed by of highschooler ) equal to ( 'ben jones' ) ))", "text": "Find the series name of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "remark": "value col", "label": "0", "score": "0.7468944787979126"}
{"logic": "( money rank of management ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( height of department ) in descending order ) , limited to the top ( 1 )", "text": "Return the money rank of the poker player with the greatest height.", "remark": "positive", "label": "1", "score": "0.7603964805603027"}
{"logic": "( document id ) , ( template id ) , ( document description ) that belongs to ( documents ) , that have ( ( document name ) equal to ( robbin cv ) )", "text": "Return the document id, template id, and description for the document with the name Robbin CV.", "remark": "positive", "label": "1", "score": "0.8606623411178589"}
{"logic": "( name of catalogs ) , ( age of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) ) , ordered by ( ( num of ticket of catalog structure ) in descending order ) , limited to the top ( 1 )", "text": "Find the name and age of the visitor who bought the most tickets at once.", "remark": "positive", "label": "1", "score": "0.7770686149597168"}
{"logic": "( name of catalog structure ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of catalogs ) equal to ( shop id of catalog structure ) ) ) ) , grouped by ( shop id of catalogs ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which shop has the most employees? Give me the shop name.", "remark": "positive", "label": "1", "score": "0.7059141397476196"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ))", "text": "Show names of all high school students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.527759850025177"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "How many flights depart from City Aberdeen?", "remark": "positive", "label": "1", "score": "0.7509756088256836"}
{"logic": "( first name of likes ) , ( middle name of likes ) , ( last name of likes ) , ( student id of likes ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of likes ) equal to ( student id of highschooler ) ) ) ) , grouped by ( student id of likes ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )", "text": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 3 degree programs in one semester?", "remark": "value int", "label": "0", "score": "0.09650134295225143"}
{"logic": "( name of catalogs ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of catalogs ) equal to ( employee id of catalog structure ) ) ) ) , ordered by ( ( bonus of catalog structure ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the employee who got the highest one time bonus.", "remark": "positive", "label": "1", "score": "0.784327507019043"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , ordered by ( ( horsepower of management ) in ascending order ) , limited to the top ( 1 )", "text": "What is the model of the car with the smallest amount of horsepower?", "remark": "positive", "label": "1", "score": "0.6988632678985596"}
{"logic": "( name of catalog structure ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of catalogs ) equal to ( shop id of catalog structure ) ) ) ) , grouped by ( shop id of catalogs ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the shop that is hiring the largest number of employees?", "remark": "positive", "label": "1", "score": "0.7506183981895447"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "What is the average horsepower for all cards produced before 1990?", "remark": "value int", "label": "0", "score": "0.04056437313556671"}
{"logic": "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))", "text": "Find the states where both owners and professionals live.", "remark": "positive", "label": "1", "score": "0.8249143958091736"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs )", "text": "What is the average age of all the dogs?", "remark": "positive", "label": "1", "score": "0.8991633653640747"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( french ) ))", "text": "Give the names of nations that speak both English and French.", "remark": "positive", "label": "1", "score": "0.7350307703018188"}
{"logic": "( the sum of ( population ) ) , ( the average of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( north america ) ) and ( ( surfacearea ) greater than ( 3000 ) ) )", "text": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000\uff1f", "remark": "positive", "label": "1", "score": "0.7761409878730774"}
{"logic": "( title of highschooler ) , ( name of likes ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) )", "text": "What are the song titles?", "remark": "value col", "label": "0", "score": "0.7807954549789429"}
{"logic": "( the number of ( all items ) ) , ( name of catalog structure ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of catalogs ) equal to ( shop id of catalog structure ) ) ) ) , grouped by ( name of catalog structure )", "text": "For each shop, return the number of employees working there and the name of the shop.", "remark": "positive", "label": "1", "score": "0.7594611048698425"}
{"logic": "( the number of ( all items ) ) that belongs to ( teacher )", "text": "What is the total count of teachers?", "remark": "positive", "label": "1", "score": "0.6935459971427917"}
{"logic": "( name of department ) , ( the sum of ( sales of management ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( name of department )", "text": "For each singer name, what is the total sales for their songs?", "remark": "positive", "label": "1", "score": "0.8116509318351746"}
{"logic": "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity for the stadium with the lowest average attendance?", "remark": "logic", "label": "0", "score": "0.8145936727523804"}
{"logic": "( course name of department ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) ) , grouped by ( course name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the course with the most students enrolled?", "remark": "positive", "label": "1", "score": "0.7410710453987122"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the winner who has the lowest rank points and participated in the Australian Open tourney.", "remark": "logic", "label": "0", "score": "0.719529390335083"}
{"logic": "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "Find the weight of the youngest dog.", "remark": "positive", "label": "1", "score": "0.8350979089736938"}
{"logic": "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "How much does the oldest dog weigh?", "remark": "logic", "label": "0", "score": "0.833953320980072"}
{"logic": "( nationality ) , ( the number of ( all items ) ) that belongs to ( people ) , grouped by ( nationality )", "text": "How many people are there of each nationality?", "remark": "positive", "label": "1", "score": "0.8158486485481262"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of management ) ) ) ) , grouped by ( name of management )", "text": "What are the names of the teachers and how many courses do they teach?", "remark": "positive", "label": "1", "score": "0.708513081073761"}
{"logic": "( distinct ( region of department ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) or ( ( language of management ) equal to ( dutch ) ) )", "text": "What are the regions that use English or Dutch?", "remark": "positive", "label": "1", "score": "0.7948564887046814"}
{"logic": "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )", "text": "What are the names of conductors whose nationalities are \"USA\"?", "remark": "logic", "label": "0", "score": "0.05817890167236328"}
{"logic": "( name ) , ( result ) , ( bulgarian commander ) that belongs to ( battle ), and except that ( ( name of department ) , ( result of department ) , ( bulgarian commander of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) ) , that have ( ( location of management ) equal to ( 'english channel' ) ))", "text": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "remark": "positive", "label": "1", "score": "0.7681571841239929"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the towns from which at least three teachers come from?", "remark": "value int", "label": "0", "score": "0.04958915710449219"}
{"logic": "( distinct ( model of management ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( car makers ) satisfied that ( ( maker of management ) equal to ( id of head ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of trip ) ) ) ) , that have ( ( ( fullname of head ) equal to ( 'general motors' ) ) or ( ( weight of trip ) greater than ( 3500 ) ) )", "text": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "remark": "positive", "label": "1", "score": "0.7663297057151794"}
{"logic": "( cylinders of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( model of management ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of department ) in ascending order ) , limited to the top ( 1 )", "text": "For a volvo model, how many cylinders does the version with least accelerate have?", "remark": "positive", "label": "1", "score": "0.45258188247680664"}
{"logic": "( name of management ) , ( capacity of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) greater than or equal to ( 2014 ) ) , grouped by ( stadium id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity of the stadium  with the most concerts after 2013?", "remark": "positive", "label": "1", "score": "0.37967419624328613"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) or ( ( continent ) equal to ( europe ) ) )", "text": "What is the total surface area of the continents Asia and Europe?", "remark": "positive", "label": "1", "score": "0.7281754016876221"}
{"logic": "( the number of ( distinct ( pettype ) ) ) that belongs to ( pets )", "text": "Find the number of distinct type of pets.", "remark": "positive", "label": "1", "score": "0.8796643018722534"}
{"logic": "( distinct ( countrycode ) ) that belongs to ( countrylanguage ) , that have ( ( language ) not equal to ( english ) )", "text": "What are the country codes of countries where people use languages other than English?", "remark": "positive", "label": "1", "score": "0.8550693988800049"}
{"logic": "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )", "text": "What the smallest version number and its template type code?", "remark": "positive", "label": "1", "score": "0.8929568529129028"}
{"logic": "( the number of ( all items ) ) that belongs to ( airports )", "text": "Return the number of  airports.", "remark": "positive", "label": "1", "score": "0.7833408117294312"}
{"logic": "( distinct ( semester id of highschooler ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of likes ) equal to ( degree program id of highschooler ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of highschooler ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of likes ) equal to ( degree program id of highschooler ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))", "text": "Find the semester when Master students got enrolled in.", "remark": "value col", "label": "0", "score": "0.7194448113441467"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of management ) equal to ( petid of head ) ) ) ) , that have ( ( ( sex of department ) equal to ( 'f' ) ) and ( ( pettype of head ) equal to ( 'dog' ) ) )", "text": "Find the number of dog pets that are raised by female students (with sex F).", "remark": "positive", "label": "1", "score": "0.7535523176193237"}
{"logic": "( template id ) that belongs to ( templates ), and except that ( ( template id ) that belongs to ( documents ))", "text": "What are the ids for templates that are used in documents?", "remark": "logic", "label": "0", "score": "0.10062047839164734"}
{"logic": "( name of employee ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of employee ) equal to ( employee id of evaluation ) ) ) ) , grouped by ( employee id of evaluation ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which employee received the fewest awards in evaluations? Give me the employee name.", "remark": "logic", "label": "0", "score": "0.3956487476825714"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) )", "text": "Return the names of all the poker players.", "remark": "positive", "label": "1", "score": "0.6560516953468323"}
{"logic": "( airportcode of likes ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of likes ) equal to ( destairport of highschooler ) ) or ( ( airportcode of likes ) equal to ( sourceairport of highschooler ) ) ) ) ) , grouped by ( airportcode of likes ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "What is the code of airport that has the most number of flights?", "remark": "logic", "label": "0", "score": "0.6318144202232361"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( lifeexpectancy ) ) , limited to the top ( 1 )", "text": "What is the name of country that has the shortest life expectancy in Asia?", "remark": "positive", "label": "1", "score": "0.6274675726890564"}
{"logic": "( the number of ( all items ) ) that belongs to ( pets ) , that have ( ( weight ) greater than ( 10 ) )", "text": "Find the number of pets whose weight is heavier than 10.", "remark": "positive", "label": "1", "score": "0.8650509715080261"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "Give the flight ids of flights leaving from APG.", "remark": "value col", "label": "0", "score": "0.7789691090583801"}
{"logic": "( distinct ( breed code ) ) , ( size code ) that belongs to ( dogs )", "text": "Find the distinct breed type and size type combinations for dogs.", "remark": "positive", "label": "1", "score": "0.7646703720092773"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "Count the number of friends Kyle has.", "remark": "positive", "label": "1", "score": "0.7286614179611206"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 6 ) )", "text": "What is the number of carsw ith over 6 cylinders?", "remark": "positive", "label": "1", "score": "0.8265649080276489"}
{"logic": "( the number of ( all items ) ) that belongs to ( countries )", "text": "What are the countries exist?", "remark": "value col", "label": "0", "score": "0.17414982616901398"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , that have ( ( fullname of department ) equal to ( 'american motor company' ) )", "text": "What is the number of car models created by the car maker American Motor Company?", "remark": "positive", "label": "1", "score": "0.8050813674926758"}
{"logic": "( region ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of management ) equal to ( kabul ) )", "text": "Which region is the city Kabul located in?", "remark": "positive", "label": "1", "score": "0.7894319295883179"}
{"logic": "( contestant name ) that belongs to ( contestants ) , that have ( ( contestant name ) not equal to ( 'jessie alloway' ) )", "text": "What are the names of the contestants whose names are 'Jessie Alloway'", "remark": "logic", "label": "0", "score": "0.09597127139568329"}
{"logic": "( the number of ( all items ) ) , ( directed by ) that belongs to ( cartoon ) , grouped by ( directed by )", "text": "Find the minimum number of cartoons directed by each of the listed directors.", "remark": "logic", "label": "0", "score": "0.0501791276037693"}
{"logic": "( first name ) , ( country code ) that belongs to ( players ) , ordered by ( ( birth date ) ) , limited to the top ( 1 )", "text": "Find the first name and country code of the youngest player.", "remark": "logic", "label": "0", "score": "0.8282835483551025"}
{"logic": "( name ) that belongs to ( stadium ) , that have ( ( stadium_id ) not in ( ( stadium id ) that belongs to ( concert ) ) )", "text": "What are the names of the stadiums with some concerts?", "remark": "logic", "label": "0", "score": "0.1236482635140419"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ))", "text": "What are the names of students who have no friends?", "remark": "positive", "label": "1", "score": "0.560872495174408"}
{"logic": "( countryname of department ) , ( countryid of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "What are the names and ids of all countries with at least one car maker?", "remark": "positive", "label": "1", "score": "0.8481792211532593"}
{"logic": "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )", "text": "Return the names of conductors that do not have the nationality \"USA\".", "remark": "positive", "label": "1", "score": "0.854444146156311"}
{"logic": "all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial ) equal to ( t ) ) ) and all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( dutch ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "What are the countries where either English or Dutch is the official language?", "remark": "positive", "label": "1", "score": "0.5597217679023743"}
{"logic": "( the sum of ( bonus ) ) that belongs to ( evaluation )", "text": "Find the total amount of bonus given in all the evaluations.", "remark": "positive", "label": "1", "score": "0.8895063400268555"}
{"logic": "( the number of ( all items ) ) that belongs to ( professionals ) , that have ( ( professional_id ) not in ( ( professional id ) that belongs to ( treatments ) ) )", "text": "Find the number of professionals who have not treated any dogs.", "remark": "positive", "label": "1", "score": "0.6412415504455566"}
{"logic": "( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( written by of highschooler ) equal to ( 'todd casey' ) )", "text": "What are the countries that have cartoons that were written by Todd Casey?", "remark": "logic", "label": "0", "score": "0.8696862459182739"}
{"logic": "( section name ) that belongs to ( sections ) , ordered by ( ( section name ) in descending order )", "text": "List the section_name in reversed lexicographical order.", "remark": "positive", "label": "1", "score": "0.7133480310440063"}
{"logic": "( year ) that belongs to ( matches ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the year that has the most number of matches.", "remark": "positive", "label": "1", "score": "0.7687000036239624"}
{"logic": "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )", "text": "Give the city and country not for the Alton airport.", "remark": "logic", "label": "0", "score": "0.03715498000383377"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "Return the ids of templates that have the code PP or PPT.", "remark": "positive", "label": "1", "score": "0.8189330697059631"}
{"logic": "( name ) , ( age ) , ( weight ) that belongs to ( dogs ) , that have ( ( abandoned yn ) equal to ( 1 ) )", "text": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "remark": "positive", "label": "1", "score": "0.09698927402496338"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( shop_id ) not in ( ( shop id ) that belongs to ( hiring ) ) )", "text": "Find the name of the shops that do not hire any employee.", "remark": "positive", "label": "1", "score": "0.6838619709014893"}
{"logic": "( episode ) , ( rating ) that belongs to ( tv series ) , ordered by ( ( rating ) in descending order ) , limited to the top ( 3 )", "text": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "remark": "positive", "label": "1", "score": "0.8440749049186707"}
{"logic": "( city of likes ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of likes ) equal to ( destairport of highschooler ) ) ) ) , grouped by ( city of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has least number of arriving flights?", "remark": "logic", "label": "0", "score": "0.1782797873020172"}
{"logic": "( the sum of ( population ) ) , ( the maximum of ( gnp ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "How many people live in America, and what is the largest GNP among them?", "remark": "value str", "label": "0", "score": "0.781711995601654"}
{"logic": "( the minimum of ( loser rank ) ) that belongs to ( matches )", "text": "What is the best rank of losers across all matches?", "remark": "positive", "label": "1", "score": "0.8533544540405273"}
{"logic": "( template type code ) , ( the number of ( all items ) ) that belongs to ( templates ) , grouped by ( template type code )", "text": "What are the different template type codes, and how many templates correspond to each?", "remark": "positive", "label": "1", "score": "0.7590970396995544"}
{"logic": "( countrycode ) that belongs to ( countrylanguage ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "Return the country codes for countries that do not speak Spanish.", "remark": "value str", "label": "0", "score": "0.5040719509124756"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "Show the ids of high schoolers who have friends and are also liked by someone else.", "remark": "positive", "label": "1", "score": "0.8138965368270874"}
{"logic": "( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( written by of management ) equal to ( 'todd casey' ) )", "text": "What are the countries that have cartoons on TV that were written by Todd Casey?", "remark": "positive", "label": "1", "score": "0.8708637356758118"}
{"logic": "( major record format ) that belongs to ( orchestra ) , grouped by ( major record format ) , ordered by ( ( the number of ( all items ) ) in ascending order )", "text": "Please show the record formats of orchestras in ascending order of count.", "remark": "positive", "label": "1", "score": "0.8396857976913452"}
{"logic": "( owner id of department ) , ( first name of management ) , ( last name of management ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner owns the most dogs? List the owner id, first name and last name.", "remark": "positive", "label": "1", "score": "0.743450939655304"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( apg ) ), and intersect with ( ( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( cvo ) ))", "text": "Which airlines have departing flights from both APG and CVO airports?", "remark": "positive", "label": "1", "score": "0.5608751773834229"}
{"logic": "( distinct ( id of department ) ) , ( name of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) ) , that have ( ( ship type of management ) equal to ( 'brig' ) )", "text": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "remark": "positive", "label": "1", "score": "0.3026856780052185"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( cvo ) ), and except that ( ( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( apg ) ))", "text": "Which airlines have departures from CVO but not from APG airports?", "remark": "positive", "label": "1", "score": "0.5976743698120117"}
{"logic": "( first name of likes ) , ( name of highschooler ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) ) , that have ( ( state of likes ) equal to ( 'virginia' ) )", "text": "Find the last names of owners living in Virginia and the names of dogs they own.", "remark": "value col", "label": "0", "score": "0.8315814137458801"}
{"logic": "( template id of likes ) , ( template type code of highschooler ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , grouped by ( template id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the id for the template used by the most documents?", "remark": "value col", "label": "0", "score": "0.464608758687973"}
{"logic": "( airportcode of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of department ) equal to ( destairport of management ) ) or ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) ) , grouped by ( airportcode of department ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "What is the code of airport that has fewest number of flights?", "remark": "positive", "label": "1", "score": "0.5068707466125488"}
{"logic": "( distinct ( name of department ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , that have ( ( sales of management ) greater than ( 300000 ) )", "text": "Show distinct names of singers that have songs with sales more than 300000.", "remark": "positive", "label": "1", "score": "0.8068810105323792"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( year ) equal to ( 1980 ) )", "text": "In 1980, how many cars were made?", "remark": "positive", "label": "1", "score": "0.7665651440620422"}
{"logic": "( template type code of department ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template type code of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which template type code is used by most number of documents?", "remark": "positive", "label": "1", "score": "0.7256836891174316"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( horsepower ) greater than ( 150 ) )", "text": "What is the number of cars with a horsepower greater than 150?", "remark": "positive", "label": "1", "score": "0.852026641368866"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( continent of likes ) equal to ( asia ) ) , grouped by ( language of highschooler ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the language that is used by the largest number of American nations?", "remark": "value str", "label": "0", "score": "0.7008057832717896"}
{"logic": "( the average of ( weight ) ) , ( year ) that belongs to ( cars data ) , grouped by ( year )", "text": "What is the maximum weight of cars each year?", "remark": "logic", "label": "0", "score": "0.04764724522829056"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( tv series )", "text": "What is minimum and maximum share of TV series?", "remark": "positive", "label": "1", "score": "0.8966038823127747"}
{"logic": "( professional id of likes ) , ( cell number of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ) , grouped by ( professional id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Which professionals have done at least three types of treatments? List the professional id and cell phone.", "remark": "value int", "label": "0", "score": "0.12353760004043579"}
{"logic": "( name ) that belongs to ( stadium ), and except that ( ( name of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2014 ) ))", "text": "Show names for all stadiums except for stadiums having a concert in year 2014.", "remark": "positive", "label": "1", "score": "0.7767891883850098"}
{"logic": "( airportcode of likes ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of likes ) equal to ( destairport of highschooler ) ) or ( ( airportcode of likes ) equal to ( sourceairport of highschooler ) ) ) ) ) , grouped by ( airportcode of likes ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "Give the code of the airport with the most flights.", "remark": "logic", "label": "0", "score": "0.6275057196617126"}
{"logic": "( birth year ) , ( citizenship ) that belongs to ( singer )", "text": "What are the birth year and citizenship of singers?", "remark": "positive", "label": "1", "score": "0.8872911930084229"}
{"logic": "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )", "text": "Return the template type description of the template type with the code BD.", "remark": "value str", "label": "0", "score": "0.7170220613479614"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines )", "text": "What are the names of airlines?", "remark": "value col", "label": "0", "score": "0.042940735816955566"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) , and ( ( airlines ) satisfied that ( ( uid of area code state ) equal to ( airline of likes ) ) ) ) , that have ( ( ( city of highschooler ) equal to ( aberdeen ) ) and ( ( airline of area code state ) equal to ( united airlines ) ) )", "text": "Count the number of United Airlines flights that depart from Aberdeen.", "remark": "logic", "label": "0", "score": "0.7673908472061157"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , that have ( ( template type code of highschooler ) equal to ( 'ppt' ) )", "text": "How many documents are using the template with type code 'AD'?", "remark": "value str", "label": "0", "score": "0.7850229740142822"}
{"logic": "( name of employee ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of employee ) equal to ( employee id of evaluation ) ) ) ) , ordered by ( ( bonus of evaluation ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the employee who got the lowest one time bonus.", "remark": "logic", "label": "0", "score": "0.7538357377052307"}
{"logic": "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "What is the average and average age for each pet type?", "remark": "value col", "label": "0", "score": "0.1550091803073883"}
{"logic": "( the number of ( distinct ( result ) ) ) that belongs to ( battle )", "text": "How many different results are there for the battles?", "remark": "positive", "label": "1", "score": "0.8761020302772522"}
{"logic": "( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( name ) equal to ( brazil ) )", "text": "Give me Brazil\u2019s population and life expectancies.", "remark": "positive", "label": "1", "score": "0.8213700652122498"}
{"logic": "( city of likes ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of likes ) equal to ( destairport of highschooler ) ) ) ) , grouped by ( city of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has the least frequent destination airport?", "remark": "logic", "label": "0", "score": "0.37604740262031555"}
{"logic": "( id ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "What is Kyle's id?", "remark": "positive", "label": "1", "score": "0.8514333963394165"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 4 ) )", "text": "What is the number of cars with more than 4 cylinders?", "remark": "positive", "label": "1", "score": "0.8664224147796631"}
{"logic": "( the number of ( all items ) ) , ( hand ) that belongs to ( players ) , grouped by ( hand )", "text": "Find the average age of players for each hand type.", "remark": "value col", "label": "0", "score": "0.040793001651763916"}
{"logic": "( the average of ( earnings of management ) ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , that have ( ( height of department ) greater than ( 200 ) )", "text": "What is the average earnings of poker players with height higher than 200?", "remark": "positive", "label": "1", "score": "0.8907390236854553"}
{"logic": "( the number of ( all items ) ) that belongs to ( area code state )", "text": "How many states are there?", "remark": "positive", "label": "1", "score": "0.8142884373664856"}
{"logic": "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )", "text": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy less than 72?", "remark": "logic", "label": "0", "score": "0.06467700749635696"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( uid of management ) equal to ( airline of department ) ) ) ) , that have ( ( airline of management ) equal to ( united airlines ) )", "text": "What are flight numbers of Airline \"United Airlines\"?", "remark": "positive", "label": "1", "score": "0.825240969657898"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )", "text": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.", "remark": "positive", "label": "1", "score": "0.8121477365493774"}
{"logic": "( owner id of likes ) , ( first name of highschooler ) , ( last name of highschooler ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner owns the least dogs? List the owner id, first name.", "remark": "logic", "label": "0", "score": "0.4697985351085663"}
{"logic": "( name of highschooler ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the name of the student with the least likes.", "remark": "logic", "label": "0", "score": "0.5481536984443665"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( apg ) ), and intersect with ( ( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( cvo ) ))", "text": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "remark": "positive", "label": "1", "score": "0.8041749596595764"}
{"logic": "( template id ) , ( the number of ( all items ) ) that belongs to ( documents ) , grouped by ( template id )", "text": "What are all different template ids used for documents, and how many times were each of them used?", "remark": "positive", "label": "1", "score": "0.7607108354568481"}
{"logic": "( template type code ) , ( template type description ) that belongs to ( ref template types )", "text": "What are the type codes and descriptions for all template types?", "remark": "positive", "label": "1", "score": "0.8582731485366821"}
{"logic": "( the number of ( all items ) ) that belongs to ( conductor )", "text": "How many conductors are there?", "remark": "positive", "label": "1", "score": "0.825172483921051"}
{"logic": "( owner id of department ) , ( first name of management ) , ( last name of management ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the owner id, first name and last name of the owner who has the most dogs.", "remark": "positive", "label": "1", "score": "0.7136741876602173"}
{"logic": "( semester name ) that belongs to ( semesters ) , that have ( ( semester_id ) not in ( ( ( semester id ) that belongs to ( student enrolment ) ) ) )", "text": "What is the name of the semester with no students enrolled?", "remark": "positive", "label": "1", "score": "0.7290343046188354"}
{"logic": "( birth year ) , ( citizenship ) that belongs to ( singer )", "text": "What are the birth years of the singers?", "remark": "value col", "label": "0", "score": "0.051904767751693726"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines )", "text": "How many airlines do we have?", "remark": "positive", "label": "1", "score": "0.7946394085884094"}
{"logic": "( citizenship ) , ( the maximum of ( net worth millions ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "For each citizenship, what is the maximum net worth?", "remark": "positive", "label": "1", "score": "0.8691693544387817"}
{"logic": "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )", "text": "Which continent is Anguilla in?", "remark": "positive", "label": "1", "score": "0.8511410355567932"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )", "text": "Show all template type codes with less than three templates.", "remark": "positive", "label": "1", "score": "0.8701481223106384"}
{"logic": "( template id of management ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of department ) equal to ( template type code of management ) ) ) ) , that have ( ( template type description of department ) equal to ( presentation ) )", "text": "What are the template ids with template type description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.8603097796440125"}
{"logic": "( paragraph id of department ) , ( paragraph text of department ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( 'welcome to ny' ) )", "text": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "remark": "positive", "label": "1", "score": "0.8459162712097168"}
{"logic": "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "Find the name, population and expected life length of American country with the largest area?", "remark": "value str", "label": "0", "score": "0.730516254901886"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( accelerate ) greater than ( accelerate ) that belongs to ( cars data ) , ordered by ( ( horsepower ) in descending order ) , limited to the top ( 1 ) )", "text": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "remark": "positive", "label": "1", "score": "0.8210968375205994"}
{"logic": "( name of employee ) , ( age of employee ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of employee ) equal to ( visitor id of evaluation ) ) ) ) , ordered by ( ( num of ticket of evaluation ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the visitor who bought the most tickets at once.", "remark": "value col", "label": "0", "score": "0.08842998743057251"}
{"logic": "( continent of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( continent of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which continent speaks the most languages?", "remark": "positive", "label": "1", "score": "0.7167558073997498"}
{"logic": "( name ) that belongs to ( highschooler ) , that have ( ( grade ) equal to ( 10 ) )", "text": "What are the names of all high schoolers in grade 10?", "remark": "positive", "label": "1", "score": "0.8821521401405334"}
{"logic": "( accelerate of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( make of management ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "What is the accelerate of the car make amc hornet sportabout (sw)?", "remark": "positive", "label": "1", "score": "0.8491748571395874"}
{"logic": "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))", "text": "Which first names are used for professionals or owners but are not used as dog names?", "remark": "positive", "label": "1", "score": "0.6615530848503113"}
{"logic": "( property name ) that belongs to ( properties ) , that have ( ( property type code ) equal to ( house ) ) and ( property name ) that belongs to ( properties ) , that have ( ( ( property type code ) equal to ( apartment ) ) and ( ( room count ) greater than ( 1 ) ) )", "text": "What are the names of properties that are either houses or apartments with more than 1 room?", "remark": "positive", "label": "1", "score": "0.8160145282745361"}
{"logic": "( name of likes ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , grouped by ( name of likes ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the names of singers that have more than three songs.", "remark": "value int", "label": "0", "score": "0.04609758406877518"}
{"logic": "( the number of ( distinct ( professional id ) ) ) that belongs to ( treatments )", "text": "Find the number of professionals who have ever treated dogs.", "remark": "positive", "label": "1", "score": "0.8098857402801514"}
{"logic": "( distinct ( first name of likes ) ) , ( middle name of likes ) , ( last name of likes ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of likes ) equal to ( student id of highschooler ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of highschooler ) equal to ( degree program id of area code state ) ) ) ) , that have ( ( degree summary name of area code state ) equal to ( 'bachelor' ) )", "text": "Who is enrolled in a Master's degree program? List the first name, middle name, last name.", "remark": "value str", "label": "0", "score": "0.692205011844635"}
{"logic": "( production code ) , ( channel ) that belongs to ( cartoon ) , ordered by ( ( original air date ) ) , limited to the top ( 1 )", "text": "Find the production code and channel of the most recently aired cartoon.", "remark": "positive", "label": "1", "score": "0.8460777401924133"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , ordered by ( ( mpg of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "Which model costs the most gasoline? That is to say, have the maximum miles per gallon.", "remark": "logic", "label": "0", "score": "0.6995295286178589"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( nationality ) not equal to ( russia ) )", "text": "Show names of people whose nationality is not \"Russia\".", "remark": "positive", "label": "1", "score": "0.8627643585205078"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) equal to ( ako ) )", "text": "Return the name of the airport with code 'AKO'.", "remark": "positive", "label": "1", "score": "0.8786432147026062"}
{"logic": "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the weekly rank of TV series with Episode \"A Love of a Lifetime\"?", "remark": "value col", "label": "0", "score": "0.03747822716832161"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) , that have ( ( age of likes ) greater than ( 20 ) )", "text": "Find number of pets owned by students who are older than 15.", "remark": "value int", "label": "0", "score": "0.040594812482595444"}
{"logic": "( year of founded ) that belongs to ( ( orchestra ) , and ( ( performance ) satisfied that ( ( orchestra id of department ) equal to ( orchestra id of management ) ) ) ) , grouped by ( orchestra id of management ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the years in which orchestras that have given more than one performance are founded.", "remark": "positive", "label": "1", "score": "0.8409731388092041"}
{"logic": "( abbreviation of department ) , ( country of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "Find the abbreviation and country of the airline that has fewest number of flights?", "remark": "positive", "label": "1", "score": "0.6088058352470398"}
{"logic": "( section name ) , ( section description ) that belongs to ( sections )", "text": "What are the names and descriptions of all the sections?", "remark": "positive", "label": "1", "score": "0.8683701753616333"}
{"logic": "( template type code of likes ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , that have ( ( document name of highschooler ) equal to ( data base ) )", "text": "What is the template type code of the template used by document without the name \"Data base\"?", "remark": "logic", "label": "0", "score": "0.04840909689664841"}
{"logic": "( name of highschooler ) , ( capacity of highschooler ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of likes ) equal to ( stadium id of highschooler ) ) ) ) , that have ( ( year of likes ) greater than or equal to ( 2014 ) ) , grouped by ( stadium id of highschooler ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Show the stadium name and capacity with most number of concerts in year 2010 or after.", "remark": "value int", "label": "0", "score": "0.03656693920493126"}
{"logic": "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )", "text": "What is the average, minimum, and maximum age of all singers not from France?", "remark": "logic", "label": "0", "score": "0.0421423502266407"}
{"logic": "( visitor id of evaluation ) , ( name of employee ) , ( level of membership of employee ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of employee ) equal to ( visitor id of evaluation ) ) ) ) , grouped by ( visitor id of evaluation ) , ordered by ( ( the sum of ( total spent of evaluation ) ) in descending order ) , limited to the top ( 1 )", "text": "What are the id of visitors who have spent the largest amount of money in total in all museum tickets?", "remark": "value col", "label": "0", "score": "0.24461820721626282"}
{"logic": "( grade ) that belongs to ( highschooler )", "text": "What is the grade of each high schooler?", "remark": "positive", "label": "1", "score": "0.8786327242851257"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( french ) ))", "text": "What are the names of nations speak both English and French?", "remark": "positive", "label": "1", "score": "0.7335956692695618"}
{"logic": "( year of founded ) that belongs to ( ( orchestra ) , and ( ( performance ) satisfied that ( ( orchestra id of likes ) equal to ( orchestra id of highschooler ) ) ) ) , grouped by ( orchestra id of highschooler ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are years of founding for orchestras that have had more than two performances?", "remark": "value int", "label": "0", "score": "0.21638944745063782"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights )", "text": "How many flights do we have?", "remark": "positive", "label": "1", "score": "0.8012794852256775"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( singer id of management )", "text": "What are the names of the singers and number of concerts for each person?", "remark": "positive", "label": "1", "score": "0.6608278155326843"}
{"logic": "( distinct ( first name of department ) ) , ( treatment type description of head ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) , and ( ( treatment types ) satisfied that ( ( treatment type code of management ) equal to ( treatment type code of head ) ) ) )", "text": "List the first name of all the professionals along with the description of the treatment they have done.", "remark": "positive", "label": "1", "score": "0.7795222997665405"}
{"logic": "( name of highschooler ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the names of students who have at most 2 likes.", "remark": "logic", "label": "0", "score": "0.13962872326374054"}
{"logic": "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))", "text": "Find the states where neither owners nor professionals live.", "remark": "logic", "label": "0", "score": "0.04096881300210953"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )", "text": "List the name of singers whose citizenship is not \"America\".", "remark": "value str", "label": "0", "score": "0.8184428811073303"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of department ) equal to ( uid of management ) ) ) ) , that have ( ( airline of management ) equal to ( jetblue airways ) )", "text": "How many flights does airline 'JetBlue Airways' have?", "remark": "positive", "label": "1", "score": "0.7769973874092102"}
{"logic": "( line 1 ) , ( line 2 ) that belongs to ( addresses )", "text": "What is the first and second line for all addresses?", "remark": "positive", "label": "1", "score": "0.878563642501831"}
{"logic": "( name of management ) , ( location of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2014 ) ), and intersect with ( ( name of management ) , ( location of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2015 ) ))", "text": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "remark": "positive", "label": "1", "score": "0.7792931795120239"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of department ) equal to ( aruba ) ) , ordered by ( ( percentage ) in descending order ) , limited to the top ( 1 )", "text": "Which language is the most popular in Aruba?", "remark": "positive", "label": "1", "score": "0.6959161162376404"}
{"logic": "( the maximum of ( final table made ) ) that belongs to ( poker player ) , that have ( ( earnings ) less than ( 200000 ) )", "text": "What is the maximum number of final tables made among poker players with earnings less than 300000?", "remark": "value int", "label": "0", "score": "0.057943861931562424"}
{"logic": "( the number of ( all items ) ) that belongs to ( templates )", "text": "How many templates do we have?", "remark": "positive", "label": "1", "score": "0.8251068592071533"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "Find the number of right handed winners who participated in the WTA Championships.", "remark": "value str", "label": "0", "score": "0.8321151733398438"}
{"logic": "( name of likes ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of likes ) equal to ( conductor id of highschooler ) ) ) ) , grouped by ( conductor id of highschooler ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the conductor who has conducted the least orchestras?", "remark": "logic", "label": "0", "score": "0.3217844069004059"}
{"logic": "( id ) that belongs to ( tv channel ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "What are the ids of all tv channels that have more than 2 TV channels?", "remark": "positive", "label": "1", "score": "0.21874336898326874"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ), and intersect with ( ( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of department ) equal to ( id of management ) ) ) ))", "text": "What are the names of high schoolers who both have friends and are liked?", "remark": "positive", "label": "1", "score": "0.7377873063087463"}
{"logic": "( grade ) , ( the number of ( all items ) ) that belongs to ( highschooler ) , grouped by ( grade )", "text": "How many high schoolers are in each grade?", "remark": "positive", "label": "1", "score": "0.8093788027763367"}
{"logic": "( song name ) that belongs to ( singer ) , that have ( ( age ) greater than ( the average of ( age ) ) that belongs to ( singer ) )", "text": "List all song names by singers above the average age.", "remark": "positive", "label": "1", "score": "0.8623594045639038"}
{"logic": "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "What is the abbreviation of Airline \"JetBlue Airways\"?", "remark": "positive", "label": "1", "score": "0.8665971159934998"}
{"logic": "( model ) that belongs to ( car names ) , grouped by ( model ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which model has the most version(make) of cars?", "remark": "positive", "label": "1", "score": "0.041265781968832016"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "Count the number of countries in Asia.", "remark": "positive", "label": "1", "score": "0.8209744691848755"}
{"logic": "( the average of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( stadium )", "text": "What is the average and minimum capacities for all stations?", "remark": "value col", "label": "0", "score": "0.04150183126330376"}
{"logic": "( title of management ) , ( name of department ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) )", "text": "Show titles of songs and names of singers.", "remark": "positive", "label": "1", "score": "0.6580336689949036"}
{"logic": "( the number of ( all items ) ) that belongs to ( teacher )", "text": "What are the ids of the teachers?", "remark": "value col", "label": "0", "score": "0.041239190846681595"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( 'summer show' ) )", "text": "How many paragraphs for the document with name 'Summer Show'?", "remark": "positive", "label": "1", "score": "0.7980769276618958"}
{"logic": "( the average of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "What is the average weight for each type of pet?", "remark": "positive", "label": "1", "score": "0.8898249864578247"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )", "text": "For each language, list the number of TV Channels that use it.", "remark": "positive", "label": "1", "score": "0.8260229229927063"}
{"logic": "( accelerate of likes ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( make of highschooler ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "How many cylinders does the car have that makes amc hornet sportabout (sw)?", "remark": "value col", "label": "0", "score": "0.05163240060210228"}
