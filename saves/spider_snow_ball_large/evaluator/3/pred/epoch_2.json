{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of cars produced before 1980?", "remark": "positive", "label": "1", "score": "0.8923320174217224"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series names of tv channels that have an episode \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.8762108683586121"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series names and distinct content for each tv channel?", "remark": "negative", "label": "0", "score": "0.829441487789154"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights does the airline \"United Airlines\" belong to?", "remark": "negative", "label": "0", "score": "0.7553497552871704"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "is the model of the car with the largest number of cylinders and 4 horsepower?", "remark": "negative", "label": "0", "score": "0.7982500195503235"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who like friends.", "remark": "negative", "label": "0", "score": "0.8056970834732056"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "the number of distinct current addresses of students.", "remark": "positive", "label": "1", "score": "0.8956141471862793"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have a friend.", "remark": "positive", "label": "1", "score": "0.5515869855880737"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "the distinct countries of singers who are older than 20.", "remark": "positive", "label": "1", "score": "0.927788496017456"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who are friends with some students?", "remark": "negative", "label": "0", "score": "0.5129187107086182"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of all students who live in the country of Haiti and have cell phone number '09700166582'?", "remark": "negative", "label": "0", "score": "0.5887826085090637"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that do not have source flights in CV or apg?", "remark": "negative", "label": "0", "score": "0.5543660521507263"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population", "remark": "negative", "label": "0", "score": "0.22580784559249878"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "are there more than two languages?", "remark": "negative", "label": "0", "score": "0.8510118126869202"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "is the airline with abbreviationUAL?", "remark": "negative", "label": "0", "score": "0.9096813797950745"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car that was used the most in the last year?", "remark": "negative", "label": "0", "score": "0.23207995295524597"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in the country of 'Haiti' and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.7265269756317139"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are official Chinese cities and are in the Asian region?", "remark": "negative", "label": "0", "score": "0.7526658773422241"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the id and summary name of the most popular degree?", "remark": "negative", "label": "0", "score": "0.754240870475769"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models whose weight is less than 3500 and whose full name is not 'ford motor company'.", "remark": "negative", "label": "0", "score": "0.8708415031433105"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline and abbreviation for all airlines in country \"USA\".", "remark": "negative", "label": "0", "score": "0.9119887948036194"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids for templates whose type code is \"PS\" or whose type code is \"pt\"?", "remark": "negative", "label": "0", "score": "0.8201117515563965"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct country of singers who are older than 20?", "remark": "positive", "label": "1", "score": "0.9028738141059875"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the most popular document template?", "remark": "positive", "label": "1", "score": "0.727690577507019"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends with likes.", "remark": "negative", "label": "0", "score": "0.8939050436019897"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights are operated from the airport ato?", "remark": "negative", "label": "0", "score": "0.7987006306648254"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "are all the series from A Love of a Lifetime on TV?", "remark": "negative", "label": "0", "score": "0.8449214100837708"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "is the model of the car with the most horsepower, with the most cylinders?", "remark": "negative", "label": "0", "score": "0.2270348221063614"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car that has the highest accelerate?", "remark": "negative", "label": "0", "score": "0.6520012617111206"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of different players who won matches with WTA Championships and winner with left hand.", "remark": "positive", "label": "1", "score": "0.847373366355896"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does jetblue airways operate?", "remark": "negative", "label": "0", "score": "0.7558854818344116"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "make and year of the car that has the smallest data data.", "remark": "negative", "label": "0", "score": "0.7594553232192993"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of airlines that have less than 200 flight hours.", "remark": "negative", "label": "0", "score": "0.7639846801757812"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models that are not produced by the company whose weight is less than 3500 and whose full name is not 'Ford Motor Company'.", "remark": "negative", "label": "0", "score": "0.8824571967124939"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the country name and id of the country that has at least 1 car maker.", "remark": "positive", "label": "1", "score": "0.8505452275276184"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from Ashley to Aberdeen?", "remark": "negative", "label": "0", "score": "0.38968604803085327"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the airline and the abbreviation of the airline whose country is \"USA\"?", "remark": "negative", "label": "0", "score": "0.8659989833831787"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree that has the most students enrolled.", "remark": "positive", "label": "1", "score": "0.8247520923614502"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who don't have any friend?", "remark": "positive", "label": "1", "score": "0.4931581914424896"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "names and ids of countries that have at least 1 car maker?", "remark": "positive", "label": "1", "score": "0.8376977443695068"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from ashley to Aberdeen", "remark": "negative", "label": "0", "score": "0.41822007298469543"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template that has the description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.8925967216491699"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are English-speaking and speak the language of country asia.", "remark": "negative", "label": "0", "score": "0.8528955578804016"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type of the template that has been used the most times.", "remark": "positive", "label": "1", "score": "0.799394428730011"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses they arrange.", "remark": "positive", "label": "1", "score": "0.41555503010749817"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countryid and name of the countries that have more than 3 car makers and have more than 3 models.", "remark": "negative", "label": "0", "score": "0.8116965889930725"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "the number of flights that are operated by United Airlines and end at an airport called \"ASY\".", "remark": "positive", "label": "1", "score": "0.9037310481071472"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "country code and first name of the players who won both the Wta Championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.5031594634056091"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that are associated with flights from CVO but not apg?", "remark": "positive", "label": "1", "score": "0.5847846269607544"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the number of flights for all airlines with less than 200.", "remark": "negative", "label": "0", "score": "0.808312714099884"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "all distinct countries that have singers older than 20?", "remark": "positive", "label": "1", "score": "0.8989689946174622"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "id, name, age for all visitors who visited more than 1.", "remark": "negative", "label": "0", "score": "0.8245097398757935"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "number of distinct winners of matches in the Wta championships with winner hand L.", "remark": "positive", "label": "1", "score": "0.851486325263977"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are English-speaking and speak the language of country asia.", "remark": "negative", "label": "0", "score": "0.8528955578804016"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "3 countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.5690535306930542"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the students who have a pet with type 'dog' but not cat?", "remark": "positive", "label": "1", "score": "0.6444031596183777"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents with type code PVT.", "remark": "negative", "label": "0", "score": "0.6067735552787781"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "id of the car whose name is AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.6303742527961731"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "are the names and id of the countries that have at least one vehicle?", "remark": "negative", "label": "0", "score": "0.8554001450538635"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "are the different models of cars whose weight is lower than 3500 and whose full name is not 'Ford Motor Company'?", "remark": "negative", "label": "0", "score": "0.8984753489494324"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "all airlines that have less than 200 flights.", "remark": "positive", "label": "1", "score": "0.8421254754066467"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "the number of flights that go to the airport ato.", "remark": "positive", "label": "1", "score": "0.8660612106323242"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "all the major cities in China that are official language of the language 'Chinese'.", "remark": "negative", "label": "0", "score": "0.7045863270759583"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left school most recently?", "remark": "negative", "label": "0", "score": "0.7421149611473083"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current addresses of students.", "remark": "positive", "label": "1", "score": "0.8999152779579163"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "number of flights operated by airline \"United Airlines\" and \"Asy Airlines\".", "remark": "negative", "label": "0", "score": "0.7912792563438416"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and country name of countries that have more than 3 models or have more than 3 models.", "remark": "negative", "label": "0", "score": "0.52653568983078"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, last name, and the number of students enrolled in the most programs?", "remark": "negative", "label": "0", "score": "0.3250775933265686"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "the countries where the airline JetBlue Airways is based.", "remark": "positive", "label": "1", "score": "0.8926268219947815"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "many car companies are there in each country?", "remark": "negative", "label": "0", "score": "0.7144444584846497"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "name and last name of all players ordered by birth date.", "remark": "negative", "label": "0", "score": "0.8568739891052246"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population in africa", "remark": "negative", "label": "0", "score": "0.24560709297657013"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "is the number of flights from airports in city Ashley and Aberdeen?", "remark": "negative", "label": "0", "score": "0.7426258325576782"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "number of flights that are from ato airport?", "remark": "negative", "label": "0", "score": "0.75971919298172"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "the number of students living in the same address.", "remark": "negative", "label": "0", "score": "0.8119345903396606"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the template type code \"PPT\" or \"PPT\".", "remark": "negative", "label": "0", "score": "0.8495419025421143"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left school most recently.", "remark": "negative", "label": "0", "score": "0.8029448986053467"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the type codes of templates that are not used by any document.", "remark": "positive", "label": "1", "score": "0.5053048729896545"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of all cars from before 1980.", "remark": "negative", "label": "0", "score": "0.9120373725891113"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the name of the car that was made in the smallest year of data.", "remark": "negative", "label": "0", "score": "0.8193857073783875"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "the country of the airline Jetblue Airlines?", "remark": "positive", "label": "1", "score": "0.8381445407867432"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of players who won both tourney name 'WTA Championships' and winner hand 'L'.", "remark": "positive", "label": "1", "score": "0.8348917365074158"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "is the employee who has the highest score in all evaluations?", "remark": "negative", "label": "0", "score": "0.07925981283187866"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of distinct winner names for all tourney names with winner 'L'.", "remark": "negative", "label": "0", "score": "0.7174874544143677"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the youngest student.", "remark": "negative", "label": "0", "score": "0.479074627161026"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and injured by ships caused by tonnage smaller than 't'?", "remark": "negative", "label": "0", "score": "0.030470890924334526"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countries that have more than 3 car makers and which have more than 3 models?", "remark": "negative", "label": "0", "score": "0.675931453704834"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights with destination airport \"ATO\"", "remark": "negative", "label": "0", "score": "0.6516119241714478"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the code of the template type that is not used in any documents.", "remark": "positive", "label": "1", "score": "0.5577695369720459"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "is the id of the car with the model 'Volvo' that accelerates the most?", "remark": "negative", "label": "0", "score": "0.8051574230194092"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents with type code 'PPT'", "remark": "positive", "label": "1", "score": "0.24534042179584503"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current address ids of students.", "remark": "positive", "label": "1", "score": "0.9247633814811707"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series names and distinct content for each tv channel?", "remark": "negative", "label": "0", "score": "0.829441487789154"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerations of the cars whose make is AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.6104816198348999"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first name of students who live in country Haiti and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.7702399492263794"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "mpg of the car with cylinders equal to 8 or before 1980.", "remark": "positive", "label": "1", "score": "0.1369735449552536"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "country of the airline JetBlue Airlines?", "remark": "positive", "label": "1", "score": "0.794866681098938"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights does United Airlines have?", "remark": "negative", "label": "0", "score": "0.655769944190979"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series names and content?", "remark": "negative", "label": "0", "score": "0.7867393493652344"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a dog but not a cat?", "remark": "positive", "label": "1", "score": "0.632670521736145"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline and abbreviation for airlines from country \"USA\".", "remark": "negative", "label": "0", "score": "0.9151569604873657"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "distinct names of cities that are official in the language of Chinese and continent asia?", "remark": "positive", "label": "1", "score": "0.5825023651123047"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "are the killed and injured of ships with tonnage T2?", "remark": "negative", "label": "0", "score": "0.04521520435810089"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, and last name has the least number of students left.", "remark": "negative", "label": "0", "score": "0.11053242534399033"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "distinct cities in China where the language is English and the continent is asia?", "remark": "negative", "label": "0", "score": "0.6206687688827515"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left school most recently.", "remark": "negative", "label": "0", "score": "0.8029448390007019"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of friends who have likes and likes.", "remark": "negative", "label": "0", "score": "0.8202863335609436"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "the series name of the channel that has an episode titled \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.8862323760986328"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct models whose weight is less than 3500 and whose full name is not 'Ford Motor Company'.", "remark": "negative", "label": "0", "score": "0.8766022324562073"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car that was used the most in the last year?", "remark": "negative", "label": "0", "score": "0.23207995295524597"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are official Chinese cities in the \"continent\".", "remark": "negative", "label": "0", "score": "0.8191788196563721"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car that has the highest horsepower?", "remark": "negative", "label": "0", "score": "0.18407265841960907"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program that has the most student enrolment.", "remark": "positive", "label": "1", "score": "0.822005569934845"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries are \"Afghanistan\" official?", "remark": "negative", "label": "0", "score": "0.7418183088302612"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "me the mpg of the car with 8 or more wheels in 1980, which is the highest mpg before 1980.", "remark": "negative", "label": "0", "score": "0.5907294750213623"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages that are used by more than 2 countries.", "remark": "negative", "label": "0", "score": "0.8454829454421997"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights to ashley and Aberdeen?", "remark": "negative", "label": "0", "score": "0.3849900960922241"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "are the cylinders of the car with the model with the highest accelerate?", "remark": "negative", "label": "0", "score": "0.8007839918136597"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players, ordered by birth date.", "remark": "positive", "label": "1", "score": "0.8810406923294067"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name and age of the visitor who made more than one visit.", "remark": "positive", "label": "1", "score": "0.8448168635368347"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "are the names of airlines that have more than 200 flights?", "remark": "negative", "label": "0", "score": "0.07443781197071075"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerate of the car with make AMC hornet sportabout (sw).", "remark": "positive", "label": "1", "score": "0.7982526421546936"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many different addresses do students live in?", "remark": "negative", "label": "0", "score": "0.8454046249389648"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who are living in country 'Haiti' and have cell phone number '09700166582'?", "remark": "negative", "label": "0", "score": "0.6310840249061584"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "all the major cities in China that are official language of the language 'Chinese'.", "remark": "negative", "label": "0", "score": "0.704586386680603"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "the accelerate data of the car named AMC hornet sportabout (sw).", "remark": "positive", "label": "1", "score": "0.8704283833503723"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the number of cars produced by each country", "remark": "negative", "label": "0", "score": "0.31952181458473206"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct addresses of students?", "remark": "negative", "label": "0", "score": "0.618190586566925"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of the students who have friends who have likes.", "remark": "positive", "label": "1", "score": "0.8425480723381042"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the names of cities that are official Chinese cities in the \"continent\" of Asia.", "remark": "negative", "label": "0", "score": "0.8861129283905029"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the average gas mileage of the car with 8 or more cylinders in the year before 1980?", "remark": "negative", "label": "0", "score": "0.03457408770918846"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the cylinders equal to 8 or less after 1980?", "remark": "negative", "label": "0", "score": "0.302204966545105"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left the school most recently?", "remark": "negative", "label": "0", "score": "0.7170926928520203"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "country code and first name of players who won both the WTA Championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.49105241894721985"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the template that has been used the most.", "remark": "positive", "label": "1", "score": "0.8075577616691589"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of teachers and the number of courses they arrange.", "remark": "positive", "label": "1", "score": "0.25127819180488586"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program that has the most student enrolment?", "remark": "positive", "label": "1", "score": "0.6987987160682678"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member working after 2010.", "remark": "negative", "label": "0", "score": "0.3791600167751312"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players, ordered by their birth date.", "remark": "positive", "label": "1", "score": "0.8889672756195068"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car with the most horsepower?", "remark": "negative", "label": "0", "score": "0.17362581193447113"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program with the most student enrolment.", "remark": "positive", "label": "1", "score": "0.819130003452301"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses arranged by that teacher.", "remark": "positive", "label": "1", "score": "0.3726317286491394"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages in each country and name of country that has more than 2 languages.", "remark": "positive", "label": "1", "score": "0.8588007092475891"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the acceleration data of the car with the name AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.8274998664855957"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are produced in the country ofusa", "remark": "negative", "label": "0", "score": "0.4821738600730896"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest bonus.", "remark": "positive", "label": "1", "score": "0.7720804810523987"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "number of distinct winners of the tourney named 'Wta championships'.", "remark": "negative", "label": "0", "score": "0.8515710234642029"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of the player who won both the WTA Championships and the Australian Open?", "remark": "positive", "label": "1", "score": "0.6688585877418518"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who don't have any friends.", "remark": "positive", "label": "1", "score": "0.4608425796031952"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest number of evaluations and gets the highest bonus.", "remark": "negative", "label": "0", "score": "0.851446270942688"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "the ids of all students who have friends who have likes?", "remark": "negative", "label": "0", "score": "0.8545267581939697"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "number of documents that have type code 'PPT'?", "remark": "positive", "label": "1", "score": "0.33904385566711426"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models that are not produced by the company whose weight is less than 3500 and whose full name is not 'Ford Motor Company'.", "remark": "negative", "label": "0", "score": "0.8824571967124939"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights does the airline \"United Airlines\" belong to?", "remark": "negative", "label": "0", "score": "0.7553496956825256"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents that have the type code 'PPT'?", "remark": "positive", "label": "1", "score": "0.3470660448074341"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of distinct series and the number of different content.", "remark": "negative", "label": "0", "score": "0.8474493026733398"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average number of horsepower of the cars produced before 1980", "remark": "negative", "label": "0", "score": "0.840838611125946"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are made by the country of origin?", "remark": "negative", "label": "0", "score": "0.608738899230957"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars whose full name is 'General Motors' or have a weight greater than 3500?", "remark": "positive", "label": "1", "score": "0.81968754529953"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "the mpg of the car with the cylinders equal to 8 or less before 1980?", "remark": "negative", "label": "0", "score": "0.19850096106529236"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "the number of distinct students' current addresses.", "remark": "positive", "label": "1", "score": "0.8897488117218018"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "are the make and year of the car that was used the most in the car data?", "remark": "negative", "label": "0", "score": "0.2490658015012741"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct names of the models whose weight is below 3500 and whose full name is not \"Ford Motor Company\".", "remark": "negative", "label": "0", "score": "0.8813163638114929"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the airline name and abbreviation for all flights from country \"USA\".", "remark": "negative", "label": "0", "score": "0.9169855713844299"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "are the killed and injured of ships with tonnage T2?", "remark": "negative", "label": "0", "score": "0.045215167105197906"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have any friends?", "remark": "positive", "label": "1", "score": "0.5529829859733582"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many languages does Afghanistan have?", "remark": "negative", "label": "0", "score": "0.6749208569526672"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member.", "remark": "negative", "label": "0", "score": "0.10086570680141449"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.8542510867118835"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in the country of Haiti and have cell phone number 09700166582?", "remark": "negative", "label": "0", "score": "0.20721662044525146"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.4917849600315094"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id and type code of the template that has the most documents?", "remark": "negative", "label": "0", "score": "0.5928649306297302"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of all teachers and the number of courses arranged by each teacher.", "remark": "positive", "label": "1", "score": "0.3969278037548065"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and number of students enrolled in the largest number of programs.", "remark": "negative", "label": "0", "score": "0.4790440797805786"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "are the names of museums that have a staff of more than the minimum number of staff for any museum opened after 2010?", "remark": "negative", "label": "0", "score": "0.89884352684021"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "type codes that do not belong to any document.", "remark": "positive", "label": "1", "score": "0.5043736696243286"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the type code of the template that is not used in any document.", "remark": "positive", "label": "1", "score": "0.571485698223114"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "models whose weight is less than 3500 and whose full name is not 'Ford Motor Company'?", "remark": "negative", "label": "0", "score": "0.8065847754478455"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template type described as Presentation?", "remark": "positive", "label": "1", "score": "0.7939291000366211"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "distinct names of cities that are official in the language of Chinese and continent asia.", "remark": "positive", "label": "1", "score": "0.8659219145774841"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who won both the WTA Championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.8363823294639587"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "airlines that have less than 200 flights.", "remark": "positive", "label": "1", "score": "0.8019357323646545"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "number of countries that have an official language?", "remark": "negative", "label": "0", "score": "0.5519475936889648"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars that have full name 'General Motors' or have weight greater than 3500?", "remark": "positive", "label": "1", "score": "0.7956457734107971"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name and age of the visitor who made more than one visit?", "remark": "positive", "label": "1", "score": "0.7909213304519653"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerate of the cars whose name is AMC hornet sportabout (sw)?", "remark": "positive", "label": "1", "score": "0.585686206817627"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does jetblue airways belong to?", "remark": "negative", "label": "0", "score": "0.8544114232063293"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of distinct series name and the number of distinct content.", "remark": "negative", "label": "0", "score": "0.8536321520805359"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the student with the most enrollments. List the student ID, middle name, last name, and the number of enrollments.", "remark": "negative", "label": "0", "score": "0.7927576899528503"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "program id and summary name for the degree with the most student enrolment?", "remark": "positive", "label": "1", "score": "0.5832177400588989"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "average horsepower of cars built before 1980.", "remark": "positive", "label": "1", "score": "0.915219783782959"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the airports that have both a CVO and a APG flight but no APG flight.", "remark": "negative", "label": "0", "score": "0.6284518241882324"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the names of museums that have more than one staff member after opening year.", "remark": "negative", "label": "0", "score": "0.4472235441207886"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct models of cars whose weight is less than 3500 and whose full name is not \"ford motor company\".", "remark": "negative", "label": "0", "score": "0.8788101077079773"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who won both the Wta Championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.625366747379303"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "are the countries of the airlines JetBlue Airways?", "remark": "negative", "label": "0", "score": "0.8897743821144104"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "the acceleration times of all the cars that are involved in the amc hornet sportabout.", "remark": "negative", "label": "0", "score": "0.8457015752792358"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "names of all airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.9017763137817383"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "the number of languages that are official in Afghanistan.", "remark": "positive", "label": "1", "score": "0.7914599180221558"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.5060335397720337"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "country code and first name of the players who won both the WTA championships and Australian open.", "remark": "positive", "label": "1", "score": "0.8130158185958862"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id, middle name, last name, and the number of students enrolled in the school.", "remark": "negative", "label": "0", "score": "0.5361504554748535"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the template type code \"PPT\" or type code \"PPT\"?", "remark": "negative", "label": "0", "score": "0.7898902297019958"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of the cars that were produced before 1980.", "remark": "positive", "label": "1", "score": "0.9178901314735413"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many languages are there in Afghanistan and is official?", "remark": "negative", "label": "0", "score": "0.7686282992362976"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the id and type code of the most popular document?", "remark": "negative", "label": "0", "score": "0.7921615839004517"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "the country of the airline Jetblue Airlines?", "remark": "positive", "label": "1", "score": "0.8381442427635193"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "name of each teacher and the number of courses arranged by each teacher.", "remark": "positive", "label": "1", "score": "0.36580926179885864"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "number of documents that have the type code 'PPT'.", "remark": "positive", "label": "1", "score": "0.5517196655273438"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of different series and series and the number of different content.", "remark": "negative", "label": "0", "score": "0.8410443067550659"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car with the most horsepower.", "remark": "negative", "label": "0", "score": "0.23210163414478302"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids for friends and liked ids.", "remark": "negative", "label": "0", "score": "0.266802579164505"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the name of museums that have more than one staff member and which have more than one staff member.", "remark": "negative", "label": "0", "score": "0.11474957317113876"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "the model of the car with the most horsepower in cylinders?", "remark": "negative", "label": "0", "score": "0.20981372892856598"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population of asia", "remark": "negative", "label": "0", "score": "0.2723205089569092"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of all cars that were produced before 1980.", "remark": "positive", "label": "1", "score": "0.9190145134925842"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "country does jetblue airways belong to?", "remark": "negative", "label": "0", "score": "0.8738687634468079"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct models of cars that have either a full name 'General Motors' or a weight of more than 3500.", "remark": "positive", "label": "1", "score": "0.8708277344703674"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age for all visitors who visited more than one time.", "remark": "positive", "label": "1", "score": "0.8550627827644348"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "models that are either 'General Motors' or have weight greater than 3500?", "remark": "negative", "label": "0", "score": "0.769723117351532"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the type codes of the templates that are not used by any document", "remark": "positive", "label": "1", "score": "0.5522512197494507"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from ashley to Aberdeen.", "remark": "negative", "label": "0", "score": "0.7565147280693054"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are not friends with any other student.", "remark": "positive", "label": "1", "score": "0.5335550308227539"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "many documents have the type code 'PPT' in them?", "remark": "negative", "label": "0", "score": "0.6718277335166931"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "many documents have the type code 'PPT' in them?", "remark": "negative", "label": "0", "score": "0.671826958656311"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights go to the ato airport?", "remark": "negative", "label": "0", "score": "0.7884353399276733"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest number of bonuses?", "remark": "positive", "label": "1", "score": "0.7302432060241699"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from Ashley to Aberdeen?", "remark": "negative", "label": "0", "score": "0.38968604803085327"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "the number of models produced by the country named USA", "remark": "positive", "label": "1", "score": "0.3055191934108734"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the number of flights for all airlines with number less than 200?", "remark": "negative", "label": "0", "score": "0.7502268552780151"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the template with the most documents?", "remark": "positive", "label": "1", "score": "0.6837615966796875"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers older than 20?", "remark": "positive", "label": "1", "score": "0.8886163830757141"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first name of students who live in country 'haiti' and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.7390772700309753"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "ids of the templates that have type description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.8888565897941589"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have both a friend and a student who has a friend.", "remark": "negative", "label": "0", "score": "0.8424795269966125"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "many distinct winners of the tourney named Wta championships?", "remark": "negative", "label": "0", "score": "0.7519998550415039"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countries have more than 3 car makers and have more than 3 models? List the countryid and name.", "remark": "negative", "label": "0", "score": "0.7881596684455872"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries that have singers older than 20?", "remark": "positive", "label": "1", "score": "0.8884263634681702"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids of templates whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.8279962539672852"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age of the visitors who visited more than 1 place.", "remark": "negative", "label": "0", "score": "0.836557924747467"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "many languages are there in the country that has more than 2 languages?", "remark": "negative", "label": "0", "score": "0.8419945240020752"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured of ships with tonnage T2.", "remark": "negative", "label": "0", "score": "0.08903464674949646"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series are on TV Channel A Love of a Lifetime?", "remark": "negative", "label": "0", "score": "0.716613233089447"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and dislikes.", "remark": "negative", "label": "0", "score": "0.8419725894927979"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car that has the highest accelerate?", "remark": "negative", "label": "0", "score": "0.6520013809204102"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages that are used by more than one country.", "remark": "negative", "label": "0", "score": "0.7166341543197632"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who have likes?", "remark": "negative", "label": "0", "score": "0.5291133522987366"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the country name and id of the country that has at least 1 car maker.", "remark": "positive", "label": "1", "score": "0.8505449891090393"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of airlines that have more than 200 flights.", "remark": "negative", "label": "0", "score": "0.06325314939022064"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "ids of the templates described as presentation.", "remark": "positive", "label": "1", "score": "0.855404257774353"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program with the most student enrolment?", "remark": "positive", "label": "1", "score": "0.6815268993377686"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "the series name of the channel that has an episode titled \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.886232316493988"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers who are older than 20.", "remark": "positive", "label": "1", "score": "0.9279565215110779"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the code of the template type that is not used in any document", "remark": "positive", "label": "1", "score": "0.5360717177391052"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent of countries and the number of car makers on each continent.", "remark": "negative", "label": "0", "score": "0.7481058835983276"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the least number of cylinders that was produced before 1980 or before 1980?", "remark": "negative", "label": "0", "score": "0.0571369044482708"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the country with more than 3 models and the country with more than 3 models", "remark": "negative", "label": "0", "score": "0.4764496982097626"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "all countries that have a singer older than 20.", "remark": "positive", "label": "1", "score": "0.8139960765838623"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerates the cars that are involved in amc hornet sportabout (sw).", "remark": "negative", "label": "0", "score": "0.8094704747200012"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "many languages are there in the country that has more than 2 languages?", "remark": "negative", "label": "0", "score": "0.8419945240020752"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the employee who has the highest total score in all evaluations?", "remark": "negative", "label": "0", "score": "0.03627448529005051"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "the series names of the channels that have an episode \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.8627672791481018"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who are friends but not friends?", "remark": "negative", "label": "0", "score": "0.5990839004516602"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "each continent and the number of car makers on that continent.", "remark": "positive", "label": "1", "score": "0.7550655007362366"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "many players have won both the WTA Championships and the WTA Championships?", "remark": "negative", "label": "0", "score": "0.7362726926803589"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many distinct current address ids exist for students.", "remark": "negative", "label": "0", "score": "0.9342263340950012"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that have never operated to CV but never to apg?", "remark": "negative", "label": "0", "score": "0.61067795753479"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "the distinct countries that have singers older than 20?", "remark": "positive", "label": "1", "score": "0.9091942310333252"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "the number of models made in the country ofusa.", "remark": "negative", "label": "0", "score": "0.8070263266563416"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of distinct winners of the tourney named 'Wta Championships' and the winner hand.", "remark": "negative", "label": "0", "score": "0.874851405620575"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "the accelerate data of the car named AMC hornet sportabout (sw).", "remark": "positive", "label": "1", "score": "0.8704284429550171"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many students live there?", "remark": "negative", "label": "0", "score": "0.6962904334068298"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "the model of the car with the most horsepower that has 4 cylinders.", "remark": "positive", "label": "1", "score": "0.8572577834129333"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of different winner names of the matches held in the WTA Championships.", "remark": "negative", "label": "0", "score": "0.856971800327301"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of all airlines that have less than 200 flights.", "remark": "positive", "label": "1", "score": "0.8443469405174255"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in country Haiti and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.7642244696617126"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and dislikes.", "remark": "negative", "label": "0", "score": "0.8419724702835083"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids for all students who have both friends and likes.", "remark": "negative", "label": "0", "score": "0.8733561635017395"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template that has the description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.8925966620445251"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age of the visitors who visited more than 1 time.", "remark": "positive", "label": "1", "score": "0.8306557536125183"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "id of the templates that have the description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.8973568081855774"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the names and ids of countries that have at least one car manufacturer.", "remark": "positive", "label": "1", "score": "0.8558700084686279"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "first names of students who live in country 'Haiti' and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.7312536239624023"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and the first name of the player who won both the WTA Championships and the Australian Open?", "remark": "positive", "label": "1", "score": "0.6677749752998352"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights are operated by airline \"United Airlines\" from Asy airport?", "remark": "negative", "label": "0", "score": "0.7990314960479736"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the template type codes that are not used by any documents?", "remark": "positive", "label": "1", "score": "0.564454197883606"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "ids and ages of students who have pet type 'dog' but not cat?", "remark": "negative", "label": "0", "score": "0.5648504495620728"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.8542510867118835"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many students live in the district?", "remark": "negative", "label": "0", "score": "0.43148306012153625"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline name and abbreviation for airlines in country \"USA\"?", "remark": "positive", "label": "1", "score": "0.8633456230163574"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name of all players ordered by birth date.", "remark": "positive", "label": "1", "score": "0.8654239773750305"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline name and abbreviation for all airlines in the country \"USA\".", "remark": "positive", "label": "1", "score": "0.9168587923049927"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of friends and likes.", "remark": "negative", "label": "0", "score": "0.1666869968175888"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type of the template with the most documents?", "remark": "positive", "label": "1", "score": "0.6721251606941223"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who do not have a friend.", "remark": "positive", "label": "1", "score": "0.5424574017524719"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car with the smallest data.", "remark": "negative", "label": "0", "score": "0.7481650710105896"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students whose permanent address is in country 'Haiti' and whose cell phone number is 09700166582?", "remark": "negative", "label": "0", "score": "0.3441222310066223"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the name of countries that are larger than the largest country in africa.", "remark": "negative", "label": "0", "score": "0.8489970564842224"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the id and summary name of the degree that has the most number of students enrolled?", "remark": "negative", "label": "0", "score": "0.7768748998641968"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the name of countries that have a larger population than the largest country in africa", "remark": "negative", "label": "0", "score": "0.7394170165061951"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "are the names of airlines that do not operate flights from CVO but not from apg?", "remark": "negative", "label": "0", "score": "0.693527340888977"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have friends who have likes and likes.", "remark": "negative", "label": "0", "score": "0.8356032967567444"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the cylinders equal to 8 or less after 1980?", "remark": "negative", "label": "0", "score": "0.3022075295448303"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "type codes for all templates except those with documents.", "remark": "positive", "label": "1", "score": "0.7272683382034302"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "number of documents that have the type code 'ppt'.", "remark": "positive", "label": "1", "score": "0.45594722032546997"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars that have either 'General Motors' or weight greater than 3500?", "remark": "negative", "label": "0", "score": "0.771888256072998"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "many flights are there from ashley airport in Aberdeen city?", "remark": "negative", "label": "0", "score": "0.7809433937072754"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "the names of all airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.9051157236099243"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car with the smallest data.", "remark": "negative", "label": "0", "score": "0.7481650114059448"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the students who have both a pet type dog and a pet type cat?", "remark": "negative", "label": "0", "score": "0.13652484118938446"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "program id and summary name for the degree that has the most student enrollment?", "remark": "positive", "label": "1", "score": "0.6010058522224426"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series names and content?", "remark": "negative", "label": "0", "score": "0.7867390513420105"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countries have more than 3 car makers and have more than 3 models? List the countryid and name.", "remark": "negative", "label": "0", "score": "0.7881597280502319"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who won both the WTA championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.634039044380188"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member after 2010.", "remark": "negative", "label": "0", "score": "0.39854875206947327"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.8542510867118835"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "make and year of the car that has the smallest data.", "remark": "negative", "label": "0", "score": "0.7269943356513977"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights go to the ato airport?", "remark": "negative", "label": "0", "score": "0.7884353399276733"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the templates described as \"Presentation\".", "remark": "positive", "label": "1", "score": "0.8812161087989807"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline name and abbreviation for all airlines in the country \"USA\".", "remark": "positive", "label": "1", "score": "0.9168587923049927"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the students who left school before any date.", "remark": "negative", "label": "0", "score": "0.04386017099022865"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the name and abbreviation of the airline whose country is \"USA\"?", "remark": "positive", "label": "1", "score": "0.8885043859481812"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models belong to the country ofusa", "remark": "negative", "label": "0", "score": "0.4352324604988098"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "number of models produced by the country named USA?", "remark": "positive", "label": "1", "score": "0.5038669109344482"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured of ships with tonnage of T2.", "remark": "negative", "label": "0", "score": "0.1330232322216034"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "the countries of the airlines \"JetBlue Airways\".", "remark": "positive", "label": "1", "score": "0.8890378475189209"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest bonus evaluation?", "remark": "positive", "label": "1", "score": "0.7317730784416199"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "ids of the templates that have type description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.8888566493988037"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "the number of languages that are English in Afghanistan.", "remark": "negative", "label": "0", "score": "0.28838759660720825"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of all cars that were produced before 1980.", "remark": "positive", "label": "1", "score": "0.9190145134925842"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have both a friend and a friend.", "remark": "negative", "label": "0", "score": "0.8492811322212219"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the airline name and abbreviation for all aircrafts whose country is \"USA\".", "remark": "negative", "label": "0", "score": "0.9216235280036926"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, last name for the student with the most students left?", "remark": "negative", "label": "0", "score": "0.6687704920768738"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model has the most horsepower in cars?", "remark": "negative", "label": "0", "score": "0.26854029297828674"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "number of flights that go to the ato Airport", "remark": "positive", "label": "1", "score": "0.5947960019111633"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are produced by the country \"USA\"?", "remark": "negative", "label": "0", "score": "0.6768949031829834"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct names of the models whose full name is General Motors or whose weight is above 3500 kg.", "remark": "positive", "label": "1", "score": "0.8373873233795166"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "first name and age of the student who has a pet with type 'dog' but not a cat?", "remark": "positive", "label": "1", "score": "0.622528612613678"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car with model 'volvo' that accelerates the most.", "remark": "negative", "label": "0", "score": "0.7951508164405823"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "are the different models of cars whose weight is lower than 3500 and whose full name is not 'Ford Motor Company'?", "remark": "negative", "label": "0", "score": "0.8984753489494324"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "many documents have the type code PPT?", "remark": "negative", "label": "0", "score": "0.6732622385025024"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends who have likes?", "remark": "negative", "label": "0", "score": "0.8465848565101624"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players in alphabetical order of birth date.", "remark": "positive", "label": "1", "score": "0.8651403188705444"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "number of flights that go to ato airport.", "remark": "positive", "label": "1", "score": "0.83610999584198"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "continents and the number of car makers on each continent", "remark": "positive", "label": "1", "score": "0.19082815945148468"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "many languages are there in more than two countries?", "remark": "negative", "label": "0", "score": "0.8402648568153381"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids for all the templates with type code \"PP\" or \"PPT\"?", "remark": "positive", "label": "1", "score": "0.8492799997329712"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "many distinct winners of the tourney named Wta championships?", "remark": "negative", "label": "0", "score": "0.7519999742507935"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "many flights are there from ashley airport in Aberdeen city?", "remark": "negative", "label": "0", "score": "0.7809433937072754"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the type code of the template that is not used in any document.", "remark": "positive", "label": "1", "score": "0.5714864730834961"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many times does United Airlines have a flight with destination airportASY?", "remark": "negative", "label": "0", "score": "0.8106823563575745"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "the number of flights that go to the airport named \"ATO\".", "remark": "positive", "label": "1", "score": "0.8854070901870728"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many languages does Afghanistan have?", "remark": "negative", "label": "0", "score": "0.6749204397201538"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "ids, names, and ages of all visitors who visited more than 1 place.", "remark": "negative", "label": "0", "score": "0.8397837281227112"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages that are used by more than 2 countries", "remark": "negative", "label": "0", "score": "0.6841077208518982"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "is the id of the template type described as Presentation?", "remark": "negative", "label": "0", "score": "0.8627485036849976"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and name of countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.7221613526344299"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "average horsepower of the cars produced before 1980.", "remark": "positive", "label": "1", "score": "0.919532299041748"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "are the series names of the tv series \"A Love of a Lifetime\"", "remark": "negative", "label": "0", "score": "0.6693844199180603"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and injured by ships caused by tonnage smaller than t.", "remark": "negative", "label": "0", "score": "0.02995300106704235"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "the distinct countries of singers who are older than 20.", "remark": "positive", "label": "1", "score": "0.9277886152267456"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids of templates whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.8279962539672852"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the countries whose population is greater than the population of all countries in \"Asia\".", "remark": "negative", "label": "0", "score": "0.7741824984550476"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "the airline names of all flights with the abbreviationUAL.", "remark": "negative", "label": "0", "score": "0.9071546792984009"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends and liked them.", "remark": "negative", "label": "0", "score": "0.8886852264404297"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of the cars produced before 1980?", "remark": "positive", "label": "1", "score": "0.9031664133071899"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest score in all evaluations?", "remark": "negative", "label": "0", "score": "0.09821784496307373"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the students whose cell phone number is '09700166582'", "remark": "negative", "label": "0", "score": "0.35046058893203735"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "the series name of the channel that has an episode \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.8611330389976501"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of different winner names of the matches held in the WTA Championships.", "remark": "negative", "label": "0", "score": "0.856971800327301"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of series names and the number of content on TV channels.", "remark": "positive", "label": "1", "score": "0.8836062550544739"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with a population greater than the largest country in africa", "remark": "negative", "label": "0", "score": "0.46478989720344543"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages in each country that have more than 2 languages.", "remark": "negative", "label": "0", "score": "0.8519369959831238"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled.", "remark": "negative", "label": "0", "score": "0.7180503010749817"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have friends who have likes and likes.", "remark": "negative", "label": "0", "score": "0.8356032967567444"}
{"logic": "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( age ) less than ( 30 ) )", "text": "How many visitors above age 30 are there?", "remark": "logic", "label": "0", "score": "0.07050801068544388"}
{"logic": "( first name of department ) , ( last name of department ) , ( size code of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) )", "text": "What are each owner's first name, last name, and the size of their dog?", "remark": "positive", "label": "1", "score": "0.8382049798965454"}
{"logic": "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ) ) )", "text": "What major is every student who does own a cat as a pet, and also how old are they?", "remark": "logic", "label": "0", "score": "0.09390553086996078"}
{"logic": "( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( name ) equal to ( brazil ) )", "text": "What are the population and life expectancies in Japan?", "remark": "value str", "label": "0", "score": "0.2716521620750427"}
{"logic": "( date arrived ) , ( date departed ) that belongs to ( dogs )", "text": "List the arrival date and the departure date for all the dogs.", "remark": "positive", "label": "1", "score": "0.9156031608581543"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , ordered by ( ( mpg of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the car wmodel with the highest mpg?", "remark": "positive", "label": "1", "score": "0.8533456325531006"}
{"logic": "( name of department ) , ( population of department ) that belongs to ( ( city ) , and ( ( countrylanguage ) satisfied that ( ( countrycode of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ) , ordered by ( ( population of department ) in descending order ) , limited to the top ( 1 )", "text": "Find the city with the largest population that uses English.", "remark": "positive", "label": "1", "score": "0.8196975588798523"}
{"logic": "( the number of ( all items ) ) that belongs to ( other available features )", "text": "How many available features are there in total?", "remark": "positive", "label": "1", "score": "0.9058498740196228"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( indepyear ) greater than ( 1950 ) )", "text": "What are the names of all the countries that became independent after 1950?", "remark": "positive", "label": "1", "score": "0.826071560382843"}
{"logic": "( first name ) that belongs to ( students ) , that have ( ( current address id ) not equal to ( permanent address id ) )", "text": "Whose permanent address is different from his or her current address? List his or her last name.", "remark": "value col", "label": "0", "score": "0.08179589360952377"}
{"logic": "( killed of likes ) , ( injured of likes ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( tonnage of highschooler ) equal to ( 't' ) )", "text": "What are the death and injury situations caused by the ship with tonnage 'f'?", "remark": "value str", "label": "0", "score": "0.9081441164016724"}
{"logic": "( the maximum of ( accelerate ) ) , ( cylinders ) that belongs to ( cars data ) , grouped by ( cylinders )", "text": "What is the maximum accelerate for different number of cylinders?", "remark": "positive", "label": "1", "score": "0.920459508895874"}
{"logic": "( num of staff ) , ( open year ) that belongs to ( museum ) , that have ( ( name ) equal to ( 'plaza museum' ) )", "text": "What are the opening year and staff number of the museum named Plaza Museum?", "remark": "positive", "label": "1", "score": "0.928703248500824"}
{"logic": "( lname of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( ( pet age of area code state ) equal to ( 3 ) ) and ( ( pettype of area code state ) equal to ( 'cat' ) ) )", "text": "Find the last name of the student who has a cat that is age 4.", "remark": "value int", "label": "0", "score": "0.03628476336598396"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( performance ) , that have ( ( type ) not equal to ( live final ) )", "text": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "remark": "positive", "label": "1", "score": "0.9348130226135254"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( ahd ) )", "text": "What are airlines that have some flight departing from airport 'AHD'?", "remark": "positive", "label": "1", "score": "0.8936051726341248"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( singer_id ) not in ( ( singer id ) that belongs to ( song ) ) )", "text": "What is the sname of every sing that does not have any song?", "remark": "positive", "label": "1", "score": "0.02884044125676155"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the country with the most number of TV Channels and how many does it have?", "remark": "positive", "label": "1", "score": "0.8459948897361755"}
{"logic": "( the average of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) less than ( 2009 ) )", "text": "Find the average number of staff working for the museums that were open before 2009.", "remark": "positive", "label": "1", "score": "0.9389931559562683"}
{"logic": "( the average of ( edispl of management ) ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( model of department ) equal to ( 'volvo' ) )", "text": "What is the average edispl of the cars of model volvo?", "remark": "positive", "label": "1", "score": "0.9197103381156921"}
{"logic": "( record company ) that belongs to ( orchestra ) , grouped by ( record company ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "List the record company shared by the least number of orchestras.", "remark": "logic", "label": "0", "score": "0.2909995913505554"}
{"logic": "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )", "text": "When was the last transcript released?", "remark": "positive", "label": "1", "score": "0.8281399607658386"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( ( age ) equal to ( 32 ) ) or ( ( age ) equal to ( 33 ) ) )", "text": "Show the name of teachers aged either 32 or 33?", "remark": "positive", "label": "1", "score": "0.9007521867752075"}
{"logic": "( template id of department ) , ( template type code of management ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the id and type code for the template used by the most documents?", "remark": "positive", "label": "1", "score": "0.8636292815208435"}
{"logic": "( the sum of ( total spent of catalog structure ) ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) ) , that have ( ( level of membership of catalogs ) equal to ( 1 ) )", "text": "What is the total ticket expense of the visitors whose membership level is 1?", "remark": "positive", "label": "1", "score": "0.8751084804534912"}
{"logic": "( cost of treatment ) that belongs to ( treatments ) , ordered by ( ( date of treatment ) in descending order ) , limited to the top ( 1 )", "text": "How much does the most recent treatment cost?", "remark": "positive", "label": "1", "score": "0.8574509620666504"}
{"logic": "( name of management ) , ( capacity of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) greater than or equal to ( 2014 ) ) , grouped by ( stadium id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "remark": "positive", "label": "1", "score": "0.8672063946723938"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( nationality ) not equal to ( russia ) )", "text": "Show names of people whose nationality is \"Russia\".", "remark": "logic", "label": "0", "score": "0.03350559622049332"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( surfacearea ) greater than ( the minimum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( europe ) ) )", "text": "What are the countries that have greater surface area than any country in Europe?", "remark": "positive", "label": "1", "score": "0.19123318791389465"}
{"logic": "( record company ) , ( the number of ( all items ) ) that belongs to ( orchestra ) , grouped by ( record company )", "text": "How many orchestras does each record company manage?", "remark": "positive", "label": "1", "score": "0.6655640602111816"}
{"logic": "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( id ) not in ( ( visitor id of catalog structure ) that belongs to ( ( museum ) , and ( ( visit ) satisfied that ( ( museum id of catalogs ) equal to ( museum id of catalog structure ) ) ) ) , that have ( ( open year of catalogs ) greater than ( 2010 ) ) ) )", "text": "Find the number of visitors who did not visit any museum opened after 2010.", "remark": "positive", "label": "1", "score": "0.8145734071731567"}
{"logic": "( area code of department ) that belongs to ( ( area code state ) , and ( ( votes ) satisfied that ( ( state of department ) equal to ( state of management ) ) ) ) , grouped by ( area code of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the area code in which the most voters voted?", "remark": "positive", "label": "1", "score": "0.833966076374054"}
{"logic": "( name ) , ( grade ) that belongs to ( highschooler )", "text": "Show the names and grades of each high schooler.", "remark": "positive", "label": "1", "score": "0.9321511387825012"}
{"logic": "( distinct ( template type code ) ) that belongs to ( templates )", "text": "What are the different template type codes?", "remark": "positive", "label": "1", "score": "0.9408917427062988"}
{"logic": "( paragraph id of department ) , ( paragraph text of department ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( 'welcome to ny' ) )", "text": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "remark": "positive", "label": "1", "score": "0.9073065519332886"}
{"logic": "( distinct ( first name of department ) ) , ( treatment type description of head ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) , and ( ( treatment types ) satisfied that ( ( treatment type code of management ) equal to ( treatment type code of head ) ) ) )", "text": "What are each professional's first name and description of the treatment they have performed?", "remark": "positive", "label": "1", "score": "0.8833211660385132"}
{"logic": "( the number of ( all items ) ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "remark": "positive", "label": "1", "score": "0.08653394132852554"}
{"logic": "( the average of ( loser age ) ) , ( the average of ( winner age ) ) that belongs to ( matches )", "text": "What are the average ages of losers and winners across matches?", "remark": "positive", "label": "1", "score": "0.9099414348602295"}
{"logic": "( title ) that belongs to ( cartoon ) , ordered by ( ( title ) )", "text": "What are the titles of the TV series sorted alphabetically?", "remark": "value table", "label": "0", "score": "0.8532782196998596"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in descending order ) , limited to the top ( 3 )", "text": "Return the names of the 3 most populated countries.", "remark": "positive", "label": "1", "score": "0.894519031047821"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) or ( ( continent ) equal to ( europe ) ) )", "text": "Give the total surface area covered by countries in Asia or South America.", "remark": "value str", "label": "0", "score": "0.8783156275749207"}
{"logic": "( orchestra ) that belongs to ( orchestra ) , that have ( ( orchestra_id ) not in ( ( orchestra id ) that belongs to ( performance ) ) )", "text": "List the names of orchestras that have no performance.", "remark": "positive", "label": "1", "score": "0.4729987382888794"}
{"logic": "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( id ) not in ( ( visitor id of evaluation ) that belongs to ( ( museum ) , and ( ( visit ) satisfied that ( ( museum id of employee ) equal to ( museum id of evaluation ) ) ) ) , that have ( ( open year of employee ) greater than ( 2010 ) ) ) )", "text": "Find the number of visitors who did not visit any museum opened after 2011.", "remark": "value int", "label": "0", "score": "0.03127201646566391"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches )", "text": "List the dates of matches.", "remark": "value col", "label": "0", "score": "0.03372533246874809"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( governmentform ) equal to ( republic ) ) )", "text": "Give the average life expectancy for countries in Africa which are republics?", "remark": "positive", "label": "1", "score": "0.8839468359947205"}
{"logic": "( treatment type description of likes ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of likes ) equal to ( treatment type code of highschooler ) ) ) ) , grouped by ( treatment type code of likes ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the description of the treatment type that costs the most money in total?", "remark": "logic", "label": "0", "score": "0.85776686668396"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "How many dogs have not gone through any treatment?", "remark": "positive", "label": "1", "score": "0.6537452340126038"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the hometowns shared by at least two teachers.", "remark": "positive", "label": "1", "score": "0.9220874905586243"}
{"logic": "( location ) , ( name ) that belongs to ( stadium ) , that have ( ( capacity ) between ( 5000 ) and ( 10000 ) )", "text": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "remark": "positive", "label": "1", "score": "0.9292593598365784"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( region ) equal to ( central africa ) )", "text": "How long is the people\u2019s average life expectancy in Central Africa?", "remark": "positive", "label": "1", "score": "0.9028230905532837"}
{"logic": "( language ) , ( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , grouped by ( countrycode )", "text": "What is the language spoken by the largest percentage of people in each country?", "remark": "positive", "label": "1", "score": "0.8810453414916992"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( headofstate of likes ) equal to ( beatrix ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) )", "text": "How many official languages are spoken in the country whose head of state is Beatrix?", "remark": "value col", "label": "0", "score": "0.8809736967086792"}
{"logic": "( distinct ( first name of department ) ) , ( middle name of department ) , ( last name of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of management ) equal to ( degree program id of head ) ) ) ) , that have ( ( degree summary name of head ) equal to ( 'bachelor' ) )", "text": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "remark": "positive", "label": "1", "score": "0.8578905463218689"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of department ) equal to ( department id of management ) ) ) ) , that have ( ( department name of department ) equal to ( 'engineer' ) )", "text": "How many degrees does the engineering department offer?", "remark": "positive", "label": "1", "score": "0.8299223780632019"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in descending order ) , limited to the top ( 3 )", "text": "What are names of countries with the top 3 smallest population?", "remark": "logic", "label": "0", "score": "0.8815014958381653"}
{"logic": "( pettype ) , ( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "Find the type and weight of the youngest pet.", "remark": "positive", "label": "1", "score": "0.8925122022628784"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of highschooler ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ))", "text": "What are the names of students who have friends?", "remark": "logic", "label": "0", "score": "0.06889757513999939"}
{"logic": "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))", "text": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?", "remark": "positive", "label": "1", "score": "0.8605189323425293"}
{"logic": "( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( name ) equal to ( brazil ) )", "text": "What are the population and life expectancies in Brazil?", "remark": "positive", "label": "1", "score": "0.910328209400177"}
{"logic": "( distinct ( region of likes ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) or ( ( language of highschooler ) equal to ( dutch ) ) )", "text": "Which regions speak neither Dutch nor English?", "remark": "logic", "label": "0", "score": "0.2972390651702881"}
{"logic": "( distinct ( model of department ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of management ) equal to ( id of head ) ) ) ) , that have ( ( year of head ) greater than ( 1980 ) )", "text": "What are the different models for the cards produced after 1980?", "remark": "positive", "label": "1", "score": "0.848539412021637"}
{"logic": "( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "remark": "positive", "label": "1", "score": "0.8769155144691467"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( ( age ) equal to ( 32 ) ) or ( ( age ) equal to ( 33 ) ) )", "text": "What are the names of the teachers who are aged either 32 or 35?", "remark": "value int", "label": "0", "score": "0.033686909824609756"}
{"logic": "( age ) , ( hometown ) that belongs to ( teacher )", "text": "What are the age of teachers?", "remark": "value col", "label": "0", "score": "0.03934188932180405"}
{"logic": "( horsepower of department ) that belongs to ( ( cars data ) ) , ordered by ( ( accelerate of department ) in descending order ) , limited to the top ( 1 )", "text": "What is the horsepower of the car with the largest accelerate?", "remark": "positive", "label": "1", "score": "0.8431563377380371"}
{"logic": "( the number of ( all items ) ) that belongs to ( templates )", "text": "Count the number of templates.", "remark": "positive", "label": "1", "score": "0.9044849872589111"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( dogs ) )", "text": "How many dogs have an age below the average?", "remark": "positive", "label": "1", "score": "0.896418035030365"}
{"logic": "( document name of management ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( template type code of department ) equal to ( bk ) )", "text": "Show all document names using templates with template type code BK.", "remark": "positive", "label": "1", "score": "0.9147499203681946"}
{"logic": "( series name of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( title of highschooler ) equal to ( the rise of the blue beetle! ) )", "text": "What is the id of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "remark": "value col", "label": "0", "score": "0.8736362457275391"}
{"logic": "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )", "text": "Return the names and surface areas of the 5 largest countries.", "remark": "positive", "label": "1", "score": "0.864550769329071"}
{"logic": "( title of management ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( series name of department ) equal to ( sky radio ) )", "text": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "remark": "positive", "label": "1", "score": "0.9002737998962402"}
{"logic": "( section description ) that belongs to ( sections ) , that have ( ( section name ) equal to ( 'h' ) )", "text": "Describe the section r.", "remark": "value str", "label": "0", "score": "0.6891351342201233"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "Return the number of airlines in the USA.", "remark": "positive", "label": "1", "score": "0.8748635053634644"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "How many same addresses do the students currently live?", "remark": "logic", "label": "0", "score": "0.9026070833206177"}
{"logic": "( owner id of likes ) , ( last name of likes ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of highschooler ) equal to ( dog id of area code state ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner has paid for the fewest treatments on his or her dogs? List the owner id and last name.", "remark": "logic", "label": "0", "score": "0.42295581102371216"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "What are the ids of templates with template type code PP or PPT?", "remark": "positive", "label": "1", "score": "0.896895706653595"}
{"logic": "( abbreviation of department ) , ( country of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "remark": "positive", "label": "1", "score": "0.5281713604927063"}
{"logic": "( name of employee ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of employee ) equal to ( employee id of evaluation ) ) ) ) , grouped by ( employee id of evaluation ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "find the name of employee who was awarded the least times in the evaluation.", "remark": "logic", "label": "0", "score": "0.20095223188400269"}
{"logic": "( document name ) , ( template id ) that belongs to ( documents ) , that have ( ( document_description ) like ( %w% ) )", "text": "Return the names and template ids for documents that contain the letter w in their description.", "remark": "positive", "label": "1", "score": "0.9380319714546204"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of department ) equal to ( countryid of management ) ) ) ) , that have ( ( countryname of management ) equal to ( 'france' ) )", "text": "What is the number of makers of care in France?", "remark": "positive", "label": "1", "score": "0.6543318629264832"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( republic ) )", "text": "How many countries do not have a republic as their form of government?", "remark": "logic", "label": "0", "score": "0.03804133087396622"}
{"logic": "( distinct ( first name of likes ) ) , ( middle name of likes ) , ( last name of likes ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of likes ) equal to ( student id of highschooler ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of highschooler ) equal to ( degree program id of area code state ) ) ) ) , that have ( ( degree summary name of area code state ) equal to ( 'bachelor' ) )", "text": "What are the last names for everybody enrolled in a Bachelors program?", "remark": "value col", "label": "0", "score": "0.8491675853729248"}
{"logic": "( the number of ( all items ) ) that belongs to ( employee )", "text": "Find the employees.", "remark": "logic", "label": "0", "score": "0.21016854047775269"}
{"logic": "( course name of likes ) , ( course id of likes ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) ) , grouped by ( course id of likes ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "text": "What are the names and id of courses having at least 2 sections?", "remark": "logic", "label": "0", "score": "0.09278430044651031"}
{"logic": "( name ) that belongs to ( battle ) , that have ( ( ( bulgarian commander ) equal to ( 'kaloyan' ) ) and ( ( latin commander ) equal to ( 'baldwin i' ) ) )", "text": "What are the distinct battle names which is bulgarian commander 'Kaloyan' or latin commander 'Baldwin I'?", "remark": "logic", "label": "0", "score": "0.6592786908149719"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "What are the addresses that have students living there?", "remark": "logic", "label": "0", "score": "0.21403862535953522"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( horsepower ) greater than ( 150 ) )", "text": "What is the number of the cars with horsepower more than 100?", "remark": "value int", "label": "0", "score": "0.036480214446783066"}
{"logic": "( created of highschooler ) , ( state of highschooler ) , ( phone number of highschooler ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) ) , that have ( ( contestant name of likes ) equal to ( 'tabatha gehling' ) )", "text": "What are the create dates, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "remark": "value col", "label": "0", "score": "0.11915430426597595"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , that have ( ( year of founded ) greater than ( 2008 ) )", "text": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "remark": "positive", "label": "1", "score": "0.8387930989265442"}
{"logic": "( template type code of department ) , ( the number of ( all items ) ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template type code of department )", "text": "What are the different template type codes, and how many documents use each type?", "remark": "positive", "label": "1", "score": "0.832953929901123"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What are the names of the TV Channels whose series names are Sky Radio?", "remark": "value col", "label": "0", "score": "0.0397229865193367"}
{"logic": "( horsepower of likes ) that belongs to ( ( cars data ) ) , ordered by ( ( accelerate of likes ) in descending order ) , limited to the top ( 1 )", "text": "What is the horsepower of the car with the smallest accelerate?", "remark": "logic", "label": "0", "score": "0.7671309113502502"}
{"logic": "( name ) , ( location ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order )", "text": "Return the name, location and district of all shops in descending order of number of products.", "remark": "positive", "label": "1", "score": "0.8875570893287659"}
{"logic": "( title ) , ( directed by ) that belongs to ( cartoon ) , ordered by ( ( original air date ) )", "text": "What is the name and directors of all the cartoons that are ordered by air date?", "remark": "positive", "label": "1", "score": "0.9134065508842468"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( age ) in ascending order )", "text": "List the names of conductors in descending order of age.", "remark": "logic", "label": "0", "score": "0.03522605821490288"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "How many airlines are not from USA?", "remark": "logic", "label": "0", "score": "0.03221346437931061"}
{"logic": "( id ) that belongs to ( highschooler ), and except that ( ( student id ) that belongs to ( friend ))", "text": "What are the ids of high school students who do not have friends?", "remark": "positive", "label": "1", "score": "0.813511312007904"}
{"logic": "( other student details ) that belongs to ( students ) , ordered by ( ( other student details ) in descending order )", "text": "What other details can you tell me about students in reverse alphabetical order?", "remark": "positive", "label": "1", "score": "0.6840676069259644"}
{"logic": "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "When did the episode \"A Love of a Lifetime\" air?", "remark": "positive", "label": "1", "score": "0.9038794636726379"}
{"logic": "( template id ) that belongs to ( documents ) , grouped by ( template id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are the template ids of any templates used in more than a single document?", "remark": "positive", "label": "1", "score": "0.9233479499816895"}
{"logic": "( model ) that belongs to ( car names ) , grouped by ( model ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What model has the most different versions?", "remark": "positive", "label": "1", "score": "0.037732336670160294"}
{"logic": "( city of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) , grouped by ( city of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has most number of departing flights?", "remark": "positive", "label": "1", "score": "0.2554120123386383"}
{"logic": "( countryname ) that belongs to ( countries ), and except that ( ( countryname of likes ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of likes ) equal to ( country of highschooler ) ) ) ))", "text": "What are the name of the countries where there is a single car maker?", "remark": "logic", "label": "0", "score": "0.062344685196876526"}
{"logic": "( id ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "What is Kyle's grade?", "remark": "value col", "label": "0", "score": "0.033638328313827515"}
{"logic": "( fname of department ) , ( sex of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , grouped by ( stuid of department ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Find the first name and gender of student who have more than one pet.", "remark": "positive", "label": "1", "score": "0.8562867641448975"}
{"logic": "( id of employee ) , ( name of employee ) , ( age of employee ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of employee ) equal to ( visitor id of evaluation ) ) ) ) , grouped by ( id of employee ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "find the id, name and age for visitors who visited some museums less than once.", "remark": "logic", "label": "0", "score": "0.036877281963825226"}
{"logic": "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "Find the name, population and expected life length of asian country with the largest area?", "remark": "positive", "label": "1", "score": "0.7034762501716614"}
{"logic": "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )", "text": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "remark": "positive", "label": "1", "score": "0.9112403392791748"}
{"logic": "( record company ) , ( the number of ( all items ) ) that belongs to ( orchestra ) , grouped by ( record company )", "text": "How many record company are there?", "remark": "value col", "label": "0", "score": "0.8765689730644226"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( year ) equal to ( 1980 ) )", "text": "In 1981, how many cars were made?", "remark": "value int", "label": "0", "score": "0.03416135534644127"}
{"logic": "( the number of ( all items ) ) that belongs to ( documents )", "text": "Count the number of documents.", "remark": "positive", "label": "1", "score": "0.9055206179618835"}
{"logic": "( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the names of students who have 2 or more likes?", "remark": "positive", "label": "1", "score": "0.857024073600769"}
{"logic": "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of likes ) , ( role code of likes ) , ( email address of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ))", "text": "Which professional operate at least one treatment on dogs? List the professional's id, role and email.", "remark": "logic", "label": "0", "score": "0.07849287241697311"}
{"logic": "( concert name of management ) , ( theme of management ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( concert ) satisfied that ( ( concert id of department ) equal to ( concert id of management ) ) ) ) , grouped by ( concert id of management )", "text": "Show the name and theme for all concerts and the number of singers in each concert.", "remark": "positive", "label": "1", "score": "0.5164344310760498"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , that have ( ( year of founded ) greater than ( 2008 ) )", "text": "What are the names of conductors who have conducted orchestras founded after the year 2008?", "remark": "positive", "label": "1", "score": "0.79032301902771"}
{"logic": "( document id ) , ( the number of ( all items ) ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( document id ) )", "text": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "remark": "positive", "label": "1", "score": "0.8619989156723022"}
{"logic": "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )", "text": "Count the total number of employees of all cities.", "remark": "value col", "label": "0", "score": "0.8867920637130737"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( ben jones ) )", "text": "What are the names of all cartoons directed by Ben Jones?", "remark": "positive", "label": "1", "score": "0.9292235374450684"}
{"logic": "( horsepower of management ) , ( make of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( cylinders of management ) equal to ( 3 ) ) , ordered by ( ( horsepower of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "remark": "positive", "label": "1", "score": "0.44246214628219604"}
{"logic": "( grade ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "What school is Kyle in?", "remark": "value col", "label": "0", "score": "0.0476849190890789"}
{"logic": "( countryname of department ) , ( countryid of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "What are the countries having at least one car maker? List name and id.", "remark": "positive", "label": "1", "score": "0.8379138112068176"}
{"logic": "( distinct ( name of likes ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , that have ( ( sales of highschooler ) greater than ( 300000 ) )", "text": "what are the different names of the singers that have sales more than 400000?", "remark": "value int", "label": "0", "score": "0.030307745561003685"}
{"logic": "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )", "text": "List the names of teachers in descending order of age.", "remark": "logic", "label": "0", "score": "0.03526570275425911"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( cylinders of management ) equal to ( 4 ) ) , ordered by ( ( horsepower of management ) in descending order ) , limited to the top ( 1 )", "text": "For the cars with 4 cylinders, which model has the largest horsepower?", "remark": "positive", "label": "1", "score": "0.8369097113609314"}
{"logic": "( the number of ( all items ) ) that belongs to ( orchestra ) , that have ( ( ( major record format ) equal to ( cd ) ) or ( ( major record format ) equal to ( dvd ) ) )", "text": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "remark": "positive", "label": "1", "score": "0.8617586493492126"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the ids of documents that have 2 or more paragraphs?", "remark": "positive", "label": "1", "score": "0.9011549353599548"}
{"logic": "( breed name of department ) that belongs to ( ( breeds ) , and ( ( dogs ) satisfied that ( ( breed code of department ) equal to ( breed code of management ) ) ) ) , grouped by ( breed name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the breed with the most dogs?", "remark": "positive", "label": "1", "score": "0.8253398537635803"}
{"logic": "( country ) that belongs to ( tv channel ), and except that ( ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( written by of highschooler ) equal to ( 'todd casey' ) ))", "text": "What are the countries that are playing cartoons written by Todd Casey?", "remark": "logic", "label": "0", "score": "0.08525684475898743"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of management ) equal to ( uid of department ) ) ) ) , that have ( ( ( airline of department ) equal to ( united airlines ) ) and ( ( sourceairport of management ) equal to ( ahd ) ) )", "text": "Return the number of United Airlines flights leaving from AHD Airport.", "remark": "positive", "label": "1", "score": "0.8307557106018066"}
{"logic": "( series name of department ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( episode of management ) equal to ( a love of a lifetime ) )", "text": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.", "remark": "positive", "label": "1", "score": "0.8972824811935425"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of highschooler ) equal to ( petid of area code state ) ) ) ) , that have ( ( ( sex of likes ) equal to ( 'f' ) ) and ( ( pettype of area code state ) equal to ( 'dog' ) ) )", "text": "Find the number of dog pets that are raised by male students (with sex M).", "remark": "value str", "label": "0", "score": "0.5790814161300659"}
{"logic": "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of likes ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) ) )", "text": "Find the average grade of students who have no friends.", "remark": "value col", "label": "0", "score": "0.037316661328077316"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )", "text": "List the name of singers whose citizenship is not \"France\".", "remark": "positive", "label": "1", "score": "0.9245945811271667"}
{"logic": "( the average of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) in ( ( student id of likes ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) ) )", "text": "Find the average grade of all students who do not have any friends.", "remark": "logic", "label": "0", "score": "0.03077022358775139"}
{"logic": "( semester name of department ) , ( semester id of department ) that belongs to ( ( semesters ) , and ( ( student enrolment ) satisfied that ( ( semester id of department ) equal to ( semester id of management ) ) ) ) , grouped by ( semester id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "For each semester, what is the name and id of the one with the most students registered?", "remark": "positive", "label": "1", "score": "0.7749203443527222"}
{"logic": "( date of treatment of likes ) , ( first name of highschooler ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) )", "text": "List the date of each treatment, together with the first name of the professional who do not operated it.", "remark": "logic", "label": "0", "score": "0.03174609690904617"}
{"logic": "( cost of treatment of department ) , ( treatment type description of management ) that belongs to ( ( treatments ) , and ( ( treatment types ) satisfied that ( ( treatment type code of department ) equal to ( treatment type code of management ) ) ) )", "text": "List the cost of each treatment and the corresponding treatment type description.", "remark": "positive", "label": "1", "score": "0.8757984638214111"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches )", "text": "Find the total number of matches.", "remark": "positive", "label": "1", "score": "0.8764522075653076"}
{"logic": "( owner id of department ) , ( zip code of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of management ) equal to ( dog id of head ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the sum of ( cost of treatment of head ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "remark": "positive", "label": "1", "score": "0.8383209109306335"}
{"logic": "( money rank ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order ) , limited to the top ( 1 )", "text": "Return the money rank of the player with the greatest earnings.", "remark": "positive", "label": "1", "score": "0.8789393901824951"}
{"logic": "( series name of department ) , ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( directed by of management ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of department ) , ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( directed by of management ) equal to ( 'ben jones' ) ))", "text": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "remark": "positive", "label": "1", "score": "0.8506246209144592"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of management ) ) ) , and ( ( countries ) satisfied that ( ( country of management ) equal to ( countryid of head ) ) ) ) , that have ( ( countryname of head ) equal to ( 'usa' ) )", "text": "What is the count of the car models produced in the United States?", "remark": "positive", "label": "1", "score": "0.8598421812057495"}
{"logic": "( the number of ( all items ) ) that belongs to ( singer )", "text": "What is the count of singers?", "remark": "positive", "label": "1", "score": "0.8970571160316467"}
{"logic": "( weekly rank ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.9328646659851074"}
{"logic": "( semester name of likes ) , ( semester id of likes ) that belongs to ( ( semesters ) , and ( ( student enrolment ) satisfied that ( ( semester id of likes ) equal to ( semester id of highschooler ) ) ) ) , grouped by ( semester id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "For each semester, what is the name of the one with the most students registered?", "remark": "value col", "label": "0", "score": "0.8324346542358398"}
{"logic": "( production code ) , ( channel ) that belongs to ( cartoon ) , ordered by ( ( original air date ) ) , limited to the top ( 1 )", "text": "What is the produdction code and channel of the most recent cartoon?", "remark": "positive", "label": "1", "score": "0.6136549711227417"}
{"logic": "( concert name of management ) , ( theme of management ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( concert ) satisfied that ( ( concert id of department ) equal to ( concert id of management ) ) ) ) , grouped by ( concert id of management )", "text": "What are the names, themes, and number of singers for each and every concert?", "remark": "positive", "label": "1", "score": "0.5146654844284058"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , grouped by ( name of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is name of the country that speaks the smallest number of languages?", "remark": "logic", "label": "0", "score": "0.3411148488521576"}
{"logic": "( the sum of ( population ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ) ) )", "text": "What is the total number of people living in the nations that do not use English?", "remark": "positive", "label": "1", "score": "0.6175900101661682"}
{"logic": "( orchestra ) that belongs to ( orchestra ) , that have ( ( orchestra_id ) not in ( ( orchestra id ) that belongs to ( performance ) ) )", "text": "List the names of orchestras that have performance.", "remark": "logic", "label": "0", "score": "0.036652516573667526"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , that have ( ( age of department ) greater than ( 20 ) )", "text": "How many pets are owned by students that have an age greater than 20?", "remark": "positive", "label": "1", "score": "0.8658655881881714"}
{"logic": "( name of department ) , ( population of department ) that belongs to ( ( city ) , and ( ( countrylanguage ) satisfied that ( ( countrycode of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ) , ordered by ( ( population of department ) in descending order ) , limited to the top ( 1 )", "text": "What is the most populace city that speaks English?", "remark": "positive", "label": "1", "score": "0.8212902545928955"}
{"logic": "( last name of department ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( current address id of department ) equal to ( address id of management ) ) ) ) , that have ( ( state province county of management ) equal to ( 'northcarolina' ) ), and except that ( ( distinct ( last name of head ) ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of head ) equal to ( student id of trip ) ) ) ))", "text": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "remark": "positive", "label": "1", "score": "0.6000353693962097"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( shop_id ) not in ( ( shop id ) that belongs to ( hiring ) ) )", "text": "Which shops run with employees? Find the shop names", "remark": "logic", "label": "0", "score": "0.05834114924073219"}
{"logic": "( course name of department ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) ) , grouped by ( course name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What's the name of the course with most number of enrollments?", "remark": "positive", "label": "1", "score": "0.8188536763191223"}
{"logic": "( template type code ) that belongs to ( ref template types ) , that have ( ( template type description ) equal to ( book ) )", "text": "Return the type name of the template type with the description \"Book\".", "remark": "value col", "label": "0", "score": "0.8299258351325989"}
{"logic": "( name of department ) , ( orchestra of management ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) )", "text": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "remark": "positive", "label": "1", "score": "0.850322961807251"}
{"logic": "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )", "text": "What is the average, minimum, and maximum age of all singers from France?", "remark": "positive", "label": "1", "score": "0.9282763600349426"}
{"logic": "( first name of department ) , ( last name of department ) , ( size code of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) )", "text": "List each owner's first name, last name, and the size of his for her dog.", "remark": "positive", "label": "1", "score": "0.8565382361412048"}
{"logic": "( the number of ( all items ) ) , ( district ) that belongs to ( city ) , that have ( ( population ) greater than ( the average of ( population ) ) that belongs to ( city ) ) , grouped by ( district )", "text": "Find the number of cities in each district whose population is greater than the average population of cities?", "remark": "positive", "label": "1", "score": "0.9045675992965698"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which grade has the most high schoolers?", "remark": "positive", "label": "1", "score": "0.8299275636672974"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( year ) equal to ( 1980 ) )", "text": "how many cars were produced in 1980?", "remark": "positive", "label": "1", "score": "0.7207011580467224"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "How many flights depart from 'APG'?", "remark": "positive", "label": "1", "score": "0.8960949182510376"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "Tell me the number of dogs that have received any treatment.", "remark": "positive", "label": "1", "score": "0.062021542340517044"}
{"logic": "( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) less than ( 1945 ) ), and intersect with ( ( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) greater than ( 1955 ) ))", "text": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "remark": "positive", "label": "1", "score": "0.8867264986038208"}
{"logic": "( the number of ( all items ) ) that belongs to ( pets ) , that have ( ( weight ) greater than ( 10 ) )", "text": "How many pets have a smaller weight than 10?", "remark": "logic", "label": "0", "score": "0.03332183137536049"}
{"logic": "( distinct ( template type description of likes ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of likes ) equal to ( template type code of highschooler ) ) ) , and ( ( documents ) satisfied that ( ( template id of highschooler ) equal to ( template id of area code state ) ) ) )", "text": "Return the different descriptions for templates that have not been used in a document.", "remark": "logic", "label": "0", "score": "0.0359746590256691"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "List all document ids with at least two paragraphs.", "remark": "positive", "label": "1", "score": "0.9258493185043335"}
{"logic": "( template type code of department ) , ( the number of ( all items ) ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template type code of department )", "text": "Show all template type codes and the number of documents using each type.", "remark": "positive", "label": "1", "score": "0.826786994934082"}
{"logic": "( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( written by of management ) equal to ( 'todd casey' ) )", "text": "which countries' tv channels are playing some cartoon written by Todd Casey?", "remark": "positive", "label": "1", "score": "0.8909448385238647"}
{"logic": "( document id of department ) , ( document name of management ) , ( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , grouped by ( document id of department )", "text": "Show all document ids, names and the number of paragraphs in each document.", "remark": "positive", "label": "1", "score": "0.8693606853485107"}
{"logic": "( template type code ) , ( the number of ( all items ) ) that belongs to ( templates ) , grouped by ( template type code )", "text": "What are the different template type codes, and how many templates in average correspond to each?", "remark": "logic", "label": "0", "score": "0.03264756128191948"}
{"logic": "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )", "text": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "remark": "positive", "label": "1", "score": "0.923821747303009"}
{"logic": "( the sum of ( population ) ) that belongs to ( city ) , that have ( ( district ) equal to ( gelderland ) )", "text": "What is the total population of Gelderland district?", "remark": "positive", "label": "1", "score": "0.9153640866279602"}
{"logic": "( transcript date of highschooler ) , ( transcript id of likes ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of likes ) equal to ( transcript id of highschooler ) ) ) ) , grouped by ( transcript id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the date and id of the transcript with at least 3 course results.", "remark": "value int", "label": "0", "score": "0.03737829998135567"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "What are  the different countries with singers above age 20?", "remark": "positive", "label": "1", "score": "0.9372705817222595"}
{"logic": "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))", "text": "What are the ids of the TV channels that do have any cartoons directed by Ben Jones?", "remark": "logic", "label": "0", "score": "0.1707480102777481"}
{"logic": "( city ) that belongs to ( employee ) , that have ( ( age ) less than ( 30 ) ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Which cities do more than one employee under age 30 come from?", "remark": "positive", "label": "1", "score": "0.8651561141014099"}
{"logic": "( the number of ( all items ) ) that belongs to ( battle ) , that have ( ( id ) not in ( ( lost in battle ) that belongs to ( ship ) , that have ( ( tonnage ) equal to ( '225' ) ) ) )", "text": "How many battles did not lose any ship with tonnage '225'?", "remark": "positive", "label": "1", "score": "0.654707133769989"}
{"logic": "( museum id of catalog structure ) , ( name of catalogs ) that belongs to ( ( museum ) , and ( ( visit ) satisfied that ( ( museum id of catalogs ) equal to ( museum id of catalog structure ) ) ) ) , grouped by ( museum id of catalog structure ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What are the id and name of the museum visited most times?", "remark": "positive", "label": "1", "score": "0.8414545059204102"}
{"logic": "( department description ) that belongs to ( departments ) , that have ( ( department_name ) like ( '%computer%' ) )", "text": "What is the description of the department whose name has the substring the computer?", "remark": "positive", "label": "1", "score": "0.9280386567115784"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "Find all airlines that have fewer than 200 flights.", "remark": "positive", "label": "1", "score": "0.8768004775047302"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( region ) equal to ( caribbean ) )", "text": "What is the total surface area of the countries in the Caribbean region?", "remark": "positive", "label": "1", "score": "0.927571713924408"}
{"logic": "( fullname of department ) , ( id of department ) , ( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department )", "text": "What is the full name of each car maker, along with its id and how many models it produces?", "remark": "positive", "label": "1", "score": "0.8633365035057068"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( performance ) , that have ( ( type ) not equal to ( live final ) )", "text": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "remark": "positive", "label": "1", "score": "0.9516839981079102"}
{"logic": "( the average of ( gnp ) ) , ( the sum of ( population ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( us territory ) )", "text": "What is the average GNP and total population in all nations whose government is US territory?", "remark": "positive", "label": "1", "score": "0.9184858202934265"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which country has the least of TV Channels? List the country and number of TV Channels it has.", "remark": "logic", "label": "0", "score": "0.5610568523406982"}
{"logic": "( the maximum of ( charge amount ) ) that belongs to ( charges )", "text": "What is the charge amount of the most expensive charge type?", "remark": "positive", "label": "1", "score": "0.9035126566886902"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( likes ) , grouped by ( student id )", "text": "Count the number of likes for each student id.", "remark": "positive", "label": "1", "score": "0.8943138122558594"}
{"logic": "( airportcode of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of department ) equal to ( destairport of management ) ) or ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) ) , grouped by ( airportcode of department ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "Give the code of the airport with the least flights.", "remark": "positive", "label": "1", "score": "0.5199792385101318"}
{"logic": "( created of management ) , ( state of management ) , ( phone number of management ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) ) , that have ( ( contestant name of department ) equal to ( 'tabatha gehling' ) )", "text": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "remark": "positive", "label": "1", "score": "0.8058047294616699"}
{"logic": "( last name of likes ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( current address id of likes ) equal to ( address id of highschooler ) ) ) ) , that have ( ( state province county of highschooler ) equal to ( 'northcarolina' ) ), and except that ( ( distinct ( last name of area code state ) ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of area code state ) equal to ( student id of car makers ) ) ) ))", "text": "What are the first name of the students who live in North Carolina but have not registered in any degree programs?", "remark": "value col", "label": "0", "score": "0.3666972815990448"}
{"logic": "( cell mobile number ) that belongs to ( students ) , that have ( ( ( first name ) equal to ( 'timmothy' ) ) and ( ( last name ) equal to ( 'ward' ) ) )", "text": "What is the phone number of the man with the first name Timmothy and the last name Ward?", "remark": "positive", "label": "1", "score": "0.9256027340888977"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "remark": "positive", "label": "1", "score": "0.8897848725318909"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( weight of management ) less than ( the average of ( weight ) ) that belongs to ( cars data ) )", "text": "Find the model of the car whose weight is below the average weight.", "remark": "positive", "label": "1", "score": "0.8982992768287659"}
{"logic": "( distinct ( name of area code state ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) , and ( ( city ) satisfied that ( ( code of likes ) equal to ( countrycode of area code state ) ) ) ) , that have ( ( ( isofficial of highschooler ) equal to ( 't' ) ) and ( ( language of highschooler ) equal to ( 'chinese' ) ) and ( ( continent of likes ) equal to ( asia ) ) )", "text": "Whic`h unique cities are in  Asian countries where Janpanese is the official language?", "remark": "value str", "label": "0", "score": "0.8023098111152649"}
{"logic": "( name of head ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) ) , that have ( ( course of management ) equal to ( math ) )", "text": "Show the name of the teacher for the math course.", "remark": "positive", "label": "1", "score": "0.8991474509239197"}
{"logic": "( name ) , ( tonnage ) that belongs to ( ship ) , ordered by ( ( name ) in descending order )", "text": "List the name and tonnage ordered by in ascending alphabetical order for the names.", "remark": "logic", "label": "0", "score": "0.03724854066967964"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "Which country does Airline \"JetBlue Airways\" belong to?", "remark": "positive", "label": "1", "score": "0.9220733046531677"}
{"logic": "( countrycode ) that belongs to ( countrylanguage ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "What are the country codes for countries that do not speak English?", "remark": "positive", "label": "1", "score": "0.5559490919113159"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( grade of management ) greater than ( 5 ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the names of students who have a grade higher than 5 and have at least 2 friends.", "remark": "positive", "label": "1", "score": "0.8856377005577087"}
{"logic": "( region ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( kabul ) )", "text": "Which region is the city Beijing located in?", "remark": "value str", "label": "0", "score": "0.6127631664276123"}
{"logic": "( earnings ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order )", "text": "List the earnings of poker players in descending order.", "remark": "positive", "label": "1", "score": "0.9066234827041626"}
{"logic": "( the maximum of ( final table made ) ) that belongs to ( poker player ) , that have ( ( earnings ) less than ( 200000 ) )", "text": "What is the maximum number of final tables made among poker players with earnings less than 200000?", "remark": "positive", "label": "1", "score": "0.9426093697547913"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of management ) equal to ( uid of department ) ) ) ) , that have ( ( ( airline of department ) equal to ( united airlines ) ) and ( ( destairport of management ) equal to ( asy ) ) )", "text": "Count the number of United Airlines flights arriving in ASY Airport.", "remark": "positive", "label": "1", "score": "0.8819451332092285"}
{"logic": "( cost of treatment ) that belongs to ( treatments ) , ordered by ( ( date of treatment ) in descending order ) , limited to the top ( 1 )", "text": "Show me the cost of the most recently performed treatment.", "remark": "positive", "label": "1", "score": "0.8850469589233398"}
{"logic": "( distinct ( name of head ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) , and ( ( city ) satisfied that ( ( code of department ) equal to ( countrycode of head ) ) ) ) , that have ( ( ( isofficial of management ) equal to ( 't' ) ) and ( ( language of management ) equal to ( 'chinese' ) ) and ( ( continent of department ) equal to ( asia ) ) )", "text": "Return the different names of cities that are in Asia and for which Chinese is the official language.", "remark": "positive", "label": "1", "score": "0.8515371084213257"}
{"logic": "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of department ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) ) )", "text": "What is the lowest grade of students who do not have any friends?", "remark": "positive", "label": "1", "score": "0.8148558139801025"}
{"logic": "( the sum of ( ranking points ) ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , grouped by ( first name of department )", "text": "Find the total ranking points for each player and their first name.", "remark": "positive", "label": "1", "score": "0.8650408983230591"}
{"logic": "( the number of ( all items ) ) that belongs to ( ship ) , that have ( ( disposition of ship ) equal to ( 'captured' ) )", "text": "How many ships ended up being 'Captured'?", "remark": "positive", "label": "1", "score": "0.466959148645401"}
{"logic": "( the number of ( all items ) ) that belongs to ( cartoon ) , that have ( ( written by ) equal to ( joseph kuhr ) )", "text": "How many cartoons were not written by \"Joseph Kuhr\"?", "remark": "logic", "label": "0", "score": "0.034998707473278046"}
{"logic": "( email address ) , ( cell number ) , ( home phone ) that belongs to ( professionals )", "text": "List the email, cell phone and home phone of all the professionals.", "remark": "positive", "label": "1", "score": "0.925130307674408"}
{"logic": "( first name ) , ( last name ) , ( email address ) that belongs to ( owners ) , that have ( ( state ) like ( '%north%' ) )", "text": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "remark": "positive", "label": "1", "score": "0.9248025417327881"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the document id with least number of paragraphs?", "remark": "positive", "label": "1", "score": "0.678141176700592"}
{"logic": "( the number of ( distinct ( country code ) ) ) that belongs to ( players )", "text": "find the number of distinct country codes of all players.", "remark": "positive", "label": "1", "score": "0.9360699653625488"}
{"logic": "( stuid ) that belongs to ( student ), and except that ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ))", "text": "What are the ids of the students who do not own dogs as pets?", "remark": "value str", "label": "0", "score": "0.6132779717445374"}
{"logic": "( winner name ) , ( loser name ) that belongs to ( matches ) , ordered by ( ( minutes ) in descending order ) , limited to the top ( 1 )", "text": "find the names of loser who played in the match with greatest number of minutes.", "remark": "value col", "label": "0", "score": "0.8446735143661499"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of head ) ) ) ) , that have ( ( ( city of management ) equal to ( ashley ) ) and ( ( city of head ) equal to ( aberdeen ) ) )", "text": "How many flights fly from Aberdeen to Ashley?", "remark": "positive", "label": "1", "score": "0.8605477213859558"}
{"logic": "( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "Return the codes of countries for which Spanish is the predominantly spoken language.", "remark": "positive", "label": "1", "score": "0.11314414441585541"}
{"logic": "( the number of ( all items ) ) , ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) , grouped by ( stuid of likes )", "text": "For students who have pets, how many pets does in total the students have?", "remark": "logic", "label": "0", "score": "0.842353105545044"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( governmentform ) equal to ( republic ) ) )", "text": "What is the average life expectancy in African countries that are republics?", "remark": "positive", "label": "1", "score": "0.9060518145561218"}
{"logic": "( cell mobile number ) that belongs to ( students ) , that have ( ( ( first name ) equal to ( 'timmothy' ) ) and ( ( last name ) equal to ( 'ward' ) ) )", "text": "What is the mobile phone number of the student named Timothy Ward?", "remark": "positive", "label": "1", "score": "0.9390400052070618"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) between ( 1 ) and ( 2 ) )", "text": "Give the ids of documents that have between one and two paragraphs.", "remark": "positive", "label": "1", "score": "0.9156237840652466"}
{"logic": "( record company ) that belongs to ( orchestra ) , grouped by ( record company ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the record company used by the greatest number of orchestras?", "remark": "positive", "label": "1", "score": "0.8576216101646423"}
{"logic": "( birth date of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( earnings of management ) in ascending order ) , limited to the top ( 1 )", "text": "Return the birth date of the poker player with the lowest earnings.", "remark": "positive", "label": "1", "score": "0.45989954471588135"}
{"logic": "( transcript date of management ) , ( transcript id of department ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of department ) equal to ( transcript id of management ) ) ) ) , grouped by ( transcript id of department ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "Show the date of the transcript which shows the least number of results, also list the id.", "remark": "positive", "label": "1", "score": "0.19744427502155304"}
{"logic": "( the number of ( distinct ( location ) ) ) that belongs to ( shop )", "text": "Count the number of distinct store locations.", "remark": "positive", "label": "1", "score": "0.9235842227935791"}
{"logic": "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )", "text": "Find the id and weight of all pets whose age is older than 1.", "remark": "positive", "label": "1", "score": "0.9435473680496216"}
{"logic": "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )", "text": "What are the names of distinct languages used around the world?", "remark": "value col", "label": "0", "score": "0.08575018495321274"}
{"logic": "( stuid ) that belongs to ( student ), and except that ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ))", "text": "What are the ids of the students who do not own cats as pets?", "remark": "positive", "label": "1", "score": "0.6067949533462524"}
{"logic": "( distinct ( year of department ) ) that belongs to ( ( cars data ) ) , that have ( ( ( weight of department ) greater than ( 3000 ) ) and ( ( weight of department ) less than ( 4000 ) ) )", "text": "In which years cars were produced weighing no less than 3000 and no more than 4000?", "remark": "positive", "label": "1", "score": "0.16359642148017883"}
{"logic": "( the number of ( distinct ( loser name ) ) ) that belongs to ( matches )", "text": "How many different loser names are there?", "remark": "positive", "label": "1", "score": "0.9327630996704102"}
{"logic": "( the maximum of ( age ) ) that belongs to ( dogs )", "text": "What is the age of the oldest cat?", "remark": "value table", "label": "0", "score": "0.07948663085699081"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the conductor who has worked the fewest number of years?", "remark": "logic", "label": "0", "score": "0.5923455953598022"}
{"logic": "( the number of ( all items ) ) that belongs to ( transcripts )", "text": "How many transcripts are not released?", "remark": "logic", "label": "0", "score": "0.03805772587656975"}
{"logic": "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )", "text": "What is the average, minimum, and total age for all French singers?", "remark": "logic", "label": "0", "score": "0.4770720601081848"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( apg ) )", "text": "Give the flight numbers of flights landing at APG.", "remark": "positive", "label": "1", "score": "0.9107297658920288"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2013 ) ), and intersect with ( ( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2016 ) ))", "text": "What are the names of players who won in both 2013 and 2016?", "remark": "positive", "label": "1", "score": "0.8878293633460999"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , grouped by ( stadium id of department )", "text": "Show the stadium name and the number of concerts in each stadium.", "remark": "positive", "label": "1", "score": "0.8238487243652344"}
{"logic": "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )", "text": "Return the names of conductors that do not have the nationality \"China\".", "remark": "value str", "label": "0", "score": "0.556202232837677"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , ordered by ( ( capacity of management ) in descending order ) , limited to the top ( 1 )", "text": "What are the number of concerts that occurred in the stadium with the largest capacity?", "remark": "positive", "label": "1", "score": "0.800796627998352"}
{"logic": "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of likes ) , ( last name of likes ) , ( cell number of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ) , grouped by ( professional id of likes ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Which professionals live in the state of Indiana or have done treatment on less than 2 treatments? List his or her id, last name and cell phone.", "remark": "logic", "label": "0", "score": "0.04289623722434044"}
{"logic": "( code ) that belongs to ( country ) , that have ( ( governmentform ) not equal to ( republic ) ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "What are the codes of the countries that do not speak English and whose government forms are not Republic?", "remark": "positive", "label": "1", "score": "0.6689023375511169"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( surfacearea ) greater than ( the minimum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( europe ) ) )", "text": "Which countries have greater area than that of any country in Europe?", "remark": "positive", "label": "1", "score": "0.22921741008758545"}
{"logic": "( template id of management ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of department ) equal to ( template type code of management ) ) ) ) , that have ( ( template type description of department ) equal to ( presentation ) )", "text": "Return the ids corresponding to templates with the description 'Presentation'.", "remark": "positive", "label": "1", "score": "0.9145669341087341"}
{"logic": "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )", "text": "What are the names of conductors whose nationalities are not \"USA\"?", "remark": "positive", "label": "1", "score": "0.9355654120445251"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the hometowns shared by at least three teachers.", "remark": "value int", "label": "0", "score": "0.09251220524311066"}
{"logic": "( the number of ( all items ) ) that belongs to ( transcripts )", "text": "How many transcripts are listed?", "remark": "positive", "label": "1", "score": "0.896336019039154"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( hometown ) not equal to ( little lever urban distric ) )", "text": "List the id of teachers whose hometown is not \"Little Lever Urban District\".", "remark": "value col", "label": "0", "score": "0.039063941687345505"}
{"logic": "( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "Return the codes of countries for which Spanish is not the predominantly spoken language.", "remark": "logic", "label": "0", "score": "0.032340191304683685"}
{"logic": "( the number of ( all items ) ) , ( name of catalog structure ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of catalogs ) equal to ( shop id of catalog structure ) ) ) ) , grouped by ( name of catalog structure )", "text": "Find the number of employees hired in each shop; show the shop name as well.", "remark": "positive", "label": "1", "score": "0.8463741540908813"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , grouped by ( stadium id of department )", "text": "For each stadium, how many concerts play there?", "remark": "positive", "label": "1", "score": "0.7654719352722168"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( country )", "text": "How many singers are from each country?", "remark": "positive", "label": "1", "score": "0.8838295340538025"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( conductor )", "text": "Count the number of different nationalities of conductors.", "remark": "positive", "label": "1", "score": "0.9311169981956482"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of department ) equal to ( uid of management ) ) ) ) , that have ( ( airline of management ) equal to ( jetblue airways ) )", "text": "Give the number of Jetblue Airways flights.", "remark": "positive", "label": "1", "score": "0.8496595621109009"}
{"logic": "( the number of ( all items ) ) that belongs to ( continents )", "text": "What is the number of continents?", "remark": "positive", "label": "1", "score": "0.8979805111885071"}
{"logic": "( accelerate of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( make of management ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "remark": "positive", "label": "1", "score": "0.8473331332206726"}
{"logic": "( horsepower of management ) , ( make of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( cylinders of management ) equal to ( 3 ) ) , ordered by ( ( horsepower of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "remark": "positive", "label": "1", "score": "0.7792013883590698"}
{"logic": "( name of department ) , ( the sum of ( sales of management ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( name of department )", "text": "Show the names of singers and the total sales of their songs.", "remark": "positive", "label": "1", "score": "0.8812817335128784"}
{"logic": "( the number of ( distinct ( loser name ) ) ) that belongs to ( matches )", "text": "How many loser names are there?", "remark": "logic", "label": "0", "score": "0.9112175107002258"}
{"logic": "( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) less than ( 2003 ) ), and intersect with ( ( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) greater than ( 2003 ) ))", "text": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?", "remark": "positive", "label": "1", "score": "0.8755385875701904"}
{"logic": "( the sum of ( population ) ) , ( the average of ( lifeexpectancy ) ) , ( continent ) that belongs to ( country ) , grouped by ( continent ) , that have ( ( the average of ( lifeexpectancy ) ) less than ( 72 ) )", "text": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 82?", "remark": "value int", "label": "0", "score": "0.02810080163180828"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( accelerate ) greater than ( accelerate ) that belongs to ( cars data ) , ordered by ( ( horsepower ) in descending order ) , limited to the top ( 1 ) )", "text": "How many cars have a larger accelerate than the car with the largest horsepower?", "remark": "positive", "label": "1", "score": "0.8479214310646057"}
{"logic": "( template id ) that belongs to ( documents ) , grouped by ( template id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show ids for all templates that are used by more than one document.", "remark": "positive", "label": "1", "score": "0.9166954755783081"}
{"logic": "( countrycode ) that belongs to ( countrylanguage ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "Return the country codes for countries that do not speak English.", "remark": "positive", "label": "1", "score": "0.6400663256645203"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( region ) equal to ( caribbean ) )", "text": "What is the average surface area of the countries in the Caribbean region?", "remark": "logic", "label": "0", "score": "0.03642452508211136"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "What are the airline names and abbreviations for airlines in the USA?", "remark": "positive", "label": "1", "score": "0.9230071306228638"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )", "text": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?", "remark": "positive", "label": "1", "score": "0.8849610686302185"}
{"logic": "( template id ) that belongs to ( templates ), and except that ( ( template id ) that belongs to ( documents ))", "text": "Show ids for all templates not used by any document.", "remark": "positive", "label": "1", "score": "0.8753178715705872"}
{"logic": "( the number of ( all items ) ) that belongs to ( templates ) , that have ( ( template type code ) equal to ( cv ) )", "text": "Count the number of templates of the type CV.", "remark": "positive", "label": "1", "score": "0.9058024287223816"}
{"logic": "( the number of ( all items ) ) that belongs to ( poker player )", "text": "Count the number of poker players.", "remark": "positive", "label": "1", "score": "0.9052943587303162"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the name of the high school student with the most friends.", "remark": "positive", "label": "1", "score": "0.8174916505813599"}
{"logic": "( first name of department ) , ( middle name of department ) , ( last name of department ) , ( student id of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )", "text": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "remark": "positive", "label": "1", "score": "0.8422555923461914"}
{"logic": "( tourney name ) that belongs to ( matches ) , grouped by ( tourney name ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "Find the name of tourney that has more than 10 matches.", "remark": "positive", "label": "1", "score": "0.9171024560928345"}
{"logic": "( weekly rank ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.9350787997245789"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of likes ) equal to ( stadium id of highschooler ) ) ) ) , ordered by ( ( capacity of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "Find the number of concerts happened in the stadium with the lowest capacity.", "remark": "logic", "label": "0", "score": "0.6031747460365295"}
{"logic": "( name of catalogs ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of catalogs ) equal to ( employee id of catalog structure ) ) ) ) , grouped by ( employee id of catalog structure ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which employee received the most awards in evaluations? Give me the employee name.", "remark": "positive", "label": "1", "score": "0.8395879864692688"}
{"logic": "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )", "text": "How many languages are spoken in the world?", "remark": "logic", "label": "0", "score": "0.7594969272613525"}
{"logic": "( first name ) , ( last name ) , ( email address ) that belongs to ( owners ) , that have ( ( state ) like ( '%north%' ) )", "text": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "remark": "positive", "label": "1", "score": "0.9121517539024353"}
{"logic": "( continent of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( continent of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which continent has the most diverse languages?", "remark": "positive", "label": "1", "score": "0.758630633354187"}
{"logic": "( degree summary name of department ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , grouped by ( degree summary name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the degree summary name that has the most number of students enrolled?", "remark": "positive", "label": "1", "score": "0.8353593945503235"}
{"logic": "( year ) that belongs to ( matches ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which year had the most matches?", "remark": "positive", "label": "1", "score": "0.8105589151382446"}
{"logic": "( makeid of highschooler ) , ( make of highschooler ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( ( horsepower of likes ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of likes ) less than or equal to ( 3 ) ) )", "text": "Among the cars with more than lowest horsepower, which ones do have more than 3 cylinders? List the car makeid and make name.", "remark": "logic", "label": "0", "score": "0.278923362493515"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( earnings of management ) in descending order )", "text": "Return the names of poker players sorted by their earnings descending.", "remark": "positive", "label": "1", "score": "0.8523982763290405"}
{"logic": "( fname of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ), and intersect with ( ( fname of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'dog' ) ))", "text": "What are the students' first names who have either cats or dogs as pets?", "remark": "logic", "label": "0", "score": "0.7702572345733643"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "Give the flight numbers of flights arriving in Aberdeen.", "remark": "positive", "label": "1", "score": "0.8681012988090515"}
{"logic": "( pixel aspect ratio par ) , ( country ) that belongs to ( tv channel ) , that have ( ( language ) not equal to ( 'english' ) )", "text": "find the pixel aspect ratio and nation of the tv channels that do not use Spanish.", "remark": "value str", "label": "0", "score": "0.6438668966293335"}
{"logic": "( country ) that belongs to ( tv channel ), and except that ( ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( written by of management ) equal to ( 'todd casey' ) ))", "text": "which countries' tv channels are not playing any cartoon written by Todd Casey?", "remark": "positive", "label": "1", "score": "0.7107067704200745"}
{"logic": "( the number of ( all items ) ) , ( hand ) that belongs to ( players ) , grouped by ( hand )", "text": "Find the number of players for each hand type.", "remark": "positive", "label": "1", "score": "0.6558416485786438"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )", "text": "List each language and the number of TV Channels not using it.", "remark": "logic", "label": "0", "score": "0.03219790384173393"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( dogs ) )", "text": "Count the number of dogs of an age below the average.", "remark": "positive", "label": "1", "score": "0.8991422653198242"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( name of department ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "How many official languages are spoken in Afghanistan?", "remark": "positive", "label": "1", "score": "0.8183057904243469"}
{"logic": "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )", "text": "What are the names and areas of countries with the top 5 smallest area?", "remark": "logic", "label": "0", "score": "0.8419221043586731"}
{"logic": "( title ) that belongs to ( cartoon ) , ordered by ( ( title ) )", "text": "What are the titles of the cartoons sorted alphabetically?", "remark": "positive", "label": "1", "score": "0.9049365520477295"}
{"logic": "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which language is spoken by the largest number of countries?", "remark": "positive", "label": "1", "score": "0.40820199251174927"}
{"logic": "( episode of management ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( series name of department ) equal to ( sky radio ) )", "text": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".", "remark": "positive", "label": "1", "score": "0.8844273090362549"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "Return the number of flights arriving in Aberdeen.", "remark": "positive", "label": "1", "score": "0.7744486927986145"}
{"logic": "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )", "text": "How many departments offer any degree?", "remark": "positive", "label": "1", "score": "0.8267470002174377"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the singer with the largest net worth?", "remark": "positive", "label": "1", "score": "0.8804471492767334"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( cylinders of management ) equal to ( 4 ) ) , ordered by ( ( horsepower of management ) in descending order ) , limited to the top ( 1 )", "text": "For all of the 4 cylinder cars, which model has the most horsepower?", "remark": "positive", "label": "1", "score": "0.8243044018745422"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( conductor )", "text": "How many different nationalities do conductors have?", "remark": "positive", "label": "1", "score": "0.9145557284355164"}
{"logic": "( petid of management ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , that have ( ( lname of department ) equal to ( 'smith' ) )", "text": "What is the id of the pet owned by the student whose last name is 'Smith'?", "remark": "positive", "label": "1", "score": "0.9256525635719299"}
{"logic": "( first name of likes ) , ( country code of likes ) , ( birth date of likes ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of likes ) equal to ( winner id of highschooler ) ) ) ) , ordered by ( ( winner rank points of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "What is the last name, country code, and birth date of the player with the most winner rank points across all matches?", "remark": "value col", "label": "0", "score": "0.8883453011512756"}
{"logic": "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )", "text": "What is the version number and template type code for the template with version number earlier than 5?", "remark": "logic", "label": "0", "score": "0.07257772982120514"}
{"logic": "( makeid of highschooler ) , ( make of highschooler ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( ( horsepower of likes ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of likes ) less than or equal to ( 3 ) ) )", "text": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 3 cylinders?", "remark": "value int", "label": "0", "score": "0.10746816545724869"}
{"logic": "( id of highschooler ) , ( name of highschooler ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( id of highschooler ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the ship id and name that caused fewest total injuries?", "remark": "logic", "label": "0", "score": "0.08743397891521454"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in ascending order ) , limited to the top ( 3 )", "text": "Return the names of the 3 countries with the fewest people.", "remark": "positive", "label": "1", "score": "0.858613133430481"}
{"logic": "( document name of management ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( template type code of department ) equal to ( bk ) )", "text": "What are the names of documents that use templates with the code BK?", "remark": "positive", "label": "1", "score": "0.9006205797195435"}
{"logic": "( charge type ) , ( charge amount ) that belongs to ( charges )", "text": "How much does each charge type costs? List both charge type and amount.", "remark": "positive", "label": "1", "score": "0.8990476131439209"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the type code of the template type that the most templates belong to.", "remark": "positive", "label": "1", "score": "0.8635345101356506"}
{"logic": "( title ) , ( directed by ) that belongs to ( cartoon ) , ordered by ( ( original air date ) )", "text": "list all cartoon titles and their directors ordered by their air date", "remark": "positive", "label": "1", "score": "0.8505189418792725"}
{"logic": "( name of management ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) , and ( ( concert ) satisfied that ( ( concert id of department ) equal to ( concert id of head ) ) ) ) , that have ( ( year of head ) equal to ( 2014 ) )", "text": "What are the names of the singers who performed in a concert in 2014?", "remark": "positive", "label": "1", "score": "0.8982500433921814"}
{"logic": "( section name ) , ( section description ) that belongs to ( sections )", "text": "What are the descriptions for all the sections?", "remark": "value col", "label": "0", "score": "0.8489019274711609"}
{"logic": "( year ) that belongs to ( matches ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which month had the most matches?", "remark": "value col", "label": "0", "score": "0.2694331407546997"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( weight of highschooler ) less than ( the average of ( weight ) ) that belongs to ( cars data ) )", "text": "What is the name for the car with a weight smaller than the average?", "remark": "value col", "label": "0", "score": "0.534624457359314"}
{"logic": "( other details ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'korea' ) )", "text": "What are the details for the paragraph that includes the text 'Korea'?", "remark": "positive", "label": "1", "score": "0.8923296332359314"}
{"logic": "( name of management ) , ( location of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2014 ) ), and intersect with ( ( name of management ) , ( location of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2015 ) ))", "text": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "remark": "positive", "label": "1", "score": "0.8532892465591431"}
{"logic": "( distinct ( template type description of department ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of department ) equal to ( template type code of management ) ) ) , and ( ( documents ) satisfied that ( ( template id of management ) equal to ( template id of head ) ) ) )", "text": "What are the distinct template type descriptions for the templates ever used by any document?", "remark": "positive", "label": "1", "score": "0.8162830471992493"}
{"logic": "( year of founded ) that belongs to ( ( orchestra ) , and ( ( performance ) satisfied that ( ( orchestra id of department ) equal to ( orchestra id of management ) ) ) ) , grouped by ( orchestra id of management ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are years of founding for orchestras that have had more than a single performance?", "remark": "positive", "label": "1", "score": "0.8655446767807007"}
{"logic": "( course name of department ) , ( course id of department ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) ) , grouped by ( course id of department ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "text": "What are the names and id of courses having at most 2 sections?", "remark": "positive", "label": "1", "score": "0.8970592021942139"}
{"logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) ) )", "text": "What is the average age for all students who do not own any pets?", "remark": "positive", "label": "1", "score": "0.8081291913986206"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) or ( ( continent ) equal to ( europe ) ) )", "text": "Give the total surface area covered by countries in Asia or Europe.", "remark": "positive", "label": "1", "score": "0.8878759741783142"}
{"logic": "( countryname of department ) that belongs to ( ( countries ) , and ( ( continents ) satisfied that ( ( continent of department ) equal to ( contid of management ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of head ) ) ) ) , that have ( ( continent of management ) equal to ( 'europe' ) ) , grouped by ( countryname of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "Which countries in europe have at least 3 car manufacturers?", "remark": "positive", "label": "1", "score": "0.8078466057777405"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 4 ) )", "text": "How many cars have more than 4 cylinders?", "remark": "positive", "label": "1", "score": "0.906989574432373"}
{"logic": "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )", "text": "What is the name and country of origin of every singer who has a song without the word 'Hey' in its title?", "remark": "logic", "label": "0", "score": "0.03510984033346176"}
{"logic": "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ) ) )", "text": "What major is every student who does not own a cat as a pet, and also how old are they?", "remark": "positive", "label": "1", "score": "0.7814640402793884"}
{"logic": "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "What is the number of the flights of Airline \"JetBlue Airways\"?", "remark": "logic", "label": "0", "score": "0.0605817586183548"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( surfacearea ) greater than ( the minimum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( europe ) ) )", "text": "What are the countries that have smaller surface area than any country in Europe?", "remark": "logic", "label": "0", "score": "0.15420198440551758"}
{"logic": "( the sum of ( tours ) ) , ( ranking date ) that belongs to ( rankings ) , grouped by ( ranking date )", "text": "How many total tours were there for each ranking date?", "remark": "positive", "label": "1", "score": "0.9223511219024658"}
{"logic": "( weight ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 4 ) ) and ( ( year ) equal to ( 1974 ) ) ) , ordered by ( ( weight ) in ascending order ) , limited to the top ( 1 )", "text": "What is the smallest weight of the car produced with 8 cylinders on 1974?", "remark": "positive", "label": "1", "score": "0.03589856997132301"}
{"logic": "( name ) , ( age ) , ( weight ) that belongs to ( dogs ) , that have ( ( abandoned yn ) equal to ( 1 ) )", "text": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "remark": "positive", "label": "1", "score": "0.07100485265254974"}
{"logic": "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))", "text": "What are the ids of documents that contain the paragraph text 'Brazil' or 'Ireland'?", "remark": "logic", "label": "0", "score": "0.42454060912132263"}
{"logic": "( hometown ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )", "text": "What is the hometown of the youngest teacher?", "remark": "positive", "label": "1", "score": "0.8581534028053284"}
{"logic": "( money rank ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order ) , limited to the top ( 1 )", "text": "Return the money rank of the player with the lowest earnings.", "remark": "logic", "label": "0", "score": "0.7899563908576965"}
{"logic": "( fullname of department ) , ( id of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )", "text": "What are the names and ids of all makers with more than 3 models?", "remark": "positive", "label": "1", "score": "0.9044762253761292"}
{"logic": "( fullname of likes ) , ( id of likes ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of likes ) equal to ( maker of highschooler ) ) ) ) , grouped by ( id of likes ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )", "text": "Which makers designed more than 4 car models? List full name and the id.", "remark": "value int", "label": "0", "score": "0.03754433989524841"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 4 ) )", "text": "Which grades have 4 or more high schoolers?", "remark": "positive", "label": "1", "score": "0.8846628665924072"}
{"logic": "( name of department ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( name of department ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are the names of the singers that have more than one songs?", "remark": "positive", "label": "1", "score": "0.8578742146492004"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( city of highschooler ) equal to ( aberdeen ) )", "text": "How many flights arriving in Mexico city?", "remark": "value str", "label": "0", "score": "0.8362463712692261"}
{"logic": "( year ) that belongs to ( concert ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which year has most number of concerts?", "remark": "positive", "label": "1", "score": "0.8134866952896118"}
{"logic": "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )", "text": "What is the version number and template type code for the template with version number later than 5?", "remark": "positive", "label": "1", "score": "0.6984787583351135"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which template type code has most number of templates?", "remark": "positive", "label": "1", "score": "0.8152925968170166"}
{"logic": "( the average of ( winner rank ) ) that belongs to ( matches )", "text": "What is the total rank for winners in all matches?", "remark": "logic", "label": "0", "score": "0.041999153792858124"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) ) , ordered by ( ( final table made of highschooler ) )", "text": "List the names of poker players ordered by the final tables made in descending order.", "remark": "logic", "label": "0", "score": "0.8827058672904968"}
{"logic": "( district ) that belongs to ( shop ) , that have ( ( number products ) less than ( 3000 ) ), and intersect with ( ( district ) that belongs to ( shop ) , that have ( ( number products ) greater than ( 10000 ) ))", "text": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "remark": "positive", "label": "1", "score": "0.9181602597236633"}
{"logic": "( distinct ( model of department ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of management ) equal to ( id of head ) ) ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of trip ) ) ) ) , that have ( ( ( weight of head ) less than ( 3500 ) ) and ( ( fullname of trip ) not equal to ( 'ford motor company' ) ) )", "text": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "remark": "positive", "label": "1", "score": "0.8472752571105957"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( population ) less than ( the minimum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) ) )", "text": "Which African countries have a larger population than that of any country in Asia?", "remark": "logic", "label": "0", "score": "0.0691860243678093"}
{"logic": "( the number of ( all items ) ) that belongs to ( area code state )", "text": "How many different states are there?", "remark": "logic", "label": "0", "score": "0.8937721252441406"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( dutch ) )) r\" )", "text": "What is the number of nations that use English and Dutch?", "remark": "positive", "label": "1", "score": "0.7799169421195984"}
{"logic": "( the number of ( all items ) ) that belongs to ( tv channel ) , that have ( ( language ) equal to ( english ) )", "text": "How many TV Channels use the English language?", "remark": "positive", "label": "1", "score": "0.8865761756896973"}
{"logic": "( name of highschooler ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the name of the high school student with the least friends.", "remark": "logic", "label": "0", "score": "0.49454012513160706"}
{"logic": "( the number of ( all items ) ) that belongs to ( employee )", "text": "How many employees are there?", "remark": "positive", "label": "1", "score": "0.8930437564849854"}
{"logic": "( maker ) , ( model ) that belongs to ( model list )", "text": "What are all the makers?", "remark": "value col", "label": "0", "score": "0.7890243530273438"}
{"logic": "( the number of ( all items ) ) , ( hand ) that belongs to ( players ) , grouped by ( hand )", "text": "How many players are there for each hand type?", "remark": "positive", "label": "1", "score": "0.7079776525497437"}
{"logic": "( name of head ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) ) , that have ( ( course of management ) equal to ( math ) )", "text": "What are the names of the people who teach math courses?", "remark": "positive", "label": "1", "score": "0.8717930316925049"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( teacher_id ) not in ( ( teacher id ) that belongs to ( course arrange ) ) )", "text": "List the names of teachers who have been arranged to teach courses.", "remark": "logic", "label": "0", "score": "0.044355783611536026"}
{"logic": "( countryname ) that belongs to ( countries ), and except that ( ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ))", "text": "What are the name of the countries where there is not a single car maker?", "remark": "positive", "label": "1", "score": "0.6211289167404175"}
{"logic": "( stuid ) that belongs to ( student ), and except that ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ))", "text": "Find the id of students who do not have a dog pet.", "remark": "value str", "label": "0", "score": "0.7070872187614441"}
{"logic": "( the number of ( distinct ( language of management ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of management ) equal to ( t ) ) )", "text": "What is the total number of unique official languages spoken in the countries that are founded before 1930?", "remark": "positive", "label": "1", "score": "0.3328196406364441"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines )", "text": "What is the total number of airlines?", "remark": "positive", "label": "1", "score": "0.8635199666023254"}
{"logic": "( the number of ( distinct ( language of highschooler ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) )", "text": "What is the total number of unique official languages spoken in the countries that are founded before 1940?", "remark": "value int", "label": "0", "score": "0.03329437971115112"}
{"logic": "( name of head ) , ( course of management ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) )", "text": "Show names of teachers and the courses they are arranged to teach.", "remark": "positive", "label": "1", "score": "0.8454894423484802"}
{"logic": "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "Find the weight of the oldest dog.", "remark": "logic", "label": "0", "score": "0.9058972001075745"}
{"logic": "( name of catalogs ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of catalogs ) equal to ( employee id of catalog structure ) ) ) ) , ordered by ( ( bonus of catalog structure ) in descending order ) , limited to the top ( 1 )", "text": "Which employee received the biggest bonus? Give me the employee name.", "remark": "positive", "label": "1", "score": "0.8460658192634583"}
{"logic": "( first name of department ) , ( country code of department ) , ( birth date of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , ordered by ( ( winner rank points of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "remark": "positive", "label": "1", "score": "0.8812638521194458"}
{"logic": "( the number of ( all items ) ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "Count the number of countries for which Spanish is the predominantly spoken language.", "remark": "positive", "label": "1", "score": "0.05401824414730072"}
{"logic": "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))", "text": "Which states have both owners and professionals living there?", "remark": "positive", "label": "1", "score": "0.8937756419181824"}
{"logic": "( the average of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) less than ( 2009 ) )", "text": "Find the average number of staff working for the museums that were open after 2009.", "remark": "logic", "label": "0", "score": "0.4625365436077118"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in descending order ) , limited to the top ( 3 )", "text": "What are names of countries with the top 3 largest population?", "remark": "positive", "label": "1", "score": "0.8992660045623779"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs )", "text": "What is the maximum age of all the dogs?", "remark": "value col", "label": "0", "score": "0.037783242762088776"}
{"logic": "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Return the nationalities for which there are two or more people.", "remark": "positive", "label": "1", "score": "0.8935517072677612"}
{"logic": "( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) less than ( 1945 ) ), and intersect with ( ( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) greater than ( 1955 ) ))", "text": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?", "remark": "positive", "label": "1", "score": "0.8883723616600037"}
{"logic": "( template type code ) , ( template type description ) that belongs to ( ref template types )", "text": "Show all template type codes.", "remark": "value col", "label": "0", "score": "0.05709707364439964"}
{"logic": "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )", "text": "How many unique languages are spoken in the world?", "remark": "positive", "label": "1", "score": "0.8690351843833923"}
{"logic": "( city of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of department ) equal to ( destairport of management ) ) ) ) , grouped by ( city of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has the most frequent destination airport?", "remark": "positive", "label": "1", "score": "0.7908082604408264"}
{"logic": "( the average of ( winner rank ) ) that belongs to ( matches )", "text": "What is the average rank for winners in all matches?", "remark": "positive", "label": "1", "score": "0.9420678019523621"}
{"logic": "( the average of ( earnings ) ) that belongs to ( poker player )", "text": "What is the average earnings of poker players?", "remark": "positive", "label": "1", "score": "0.9398313760757446"}
{"logic": "( name of likes ) , ( orchestra of highschooler ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of likes ) equal to ( conductor id of highschooler ) ) ) )", "text": "What are the id of conductors as well as the corresonding orchestras that they have conducted?", "remark": "value col", "label": "0", "score": "0.8226910829544067"}
{"logic": "( abbreviation of likes ) , ( country of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "Find the abbreviation and country of the airline that has most number of flights?", "remark": "logic", "label": "0", "score": "0.8494646549224854"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "What are the different addresses that have students living there?", "remark": "positive", "label": "1", "score": "0.7175516486167908"}
{"logic": "( flightno of likes ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( uid of highschooler ) equal to ( airline of likes ) ) ) ) , that have ( ( airline of highschooler ) equal to ( united airlines ) )", "text": "What are flight numbers of Airline \"jetblue airways\"?", "remark": "value str", "label": "0", "score": "0.8946468830108643"}
{"logic": "( course description ) that belongs to ( courses ) , that have ( ( course name ) equal to ( 'math' ) )", "text": "What are the descriptions for all the math courses?", "remark": "positive", "label": "1", "score": "0.9119181036949158"}
{"logic": "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the id of episode \"A Love of a Lifetime\"?", "remark": "value col", "label": "0", "score": "0.03554748743772507"}
{"logic": "( distinct ( name of highschooler ) ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( countrycode of highschooler ) equal to ( code of likes ) ) ) ) , that have ( ( ( continent of likes ) equal to ( 'europe' ) ) and ( ( t1.name ) not in ( ( name of area code state ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of area code state ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( isofficial of car makers ) equal to ( 't' ) ) and ( ( language of car makers ) equal to ( 'english' ) ) ) ) ) )", "text": "What are the names of cities in America for which English is not the official language?", "remark": "value str", "label": "0", "score": "0.5605454444885254"}
{"logic": "( degree program id of department ) , ( degree summary name of department ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , grouped by ( degree program id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the program id and the summary of the degree that has the most students enrolled?", "remark": "positive", "label": "1", "score": "0.779850423336029"}
{"logic": "( episode ) that belongs to ( tv series ) , ordered by ( ( rating ) )", "text": "List the Episode of all TV series sorted by rating.", "remark": "positive", "label": "1", "score": "0.9134382605552673"}
{"logic": "( name of head ) , ( course of management ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) ) , ordered by ( ( name of head ) )", "text": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "remark": "positive", "label": "1", "score": "0.7954829335212708"}
{"logic": "( the number of ( all items ) ) that belongs to ( countries )", "text": "What are the names of the listed countries?", "remark": "logic", "label": "0", "score": "0.041138287633657455"}
{"logic": "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )", "text": "List the names of teachers in ascending order of age.", "remark": "positive", "label": "1", "score": "0.9134899973869324"}
{"logic": "( the number of ( distinct ( template id ) ) ) that belongs to ( documents )", "text": "Count the names of different templates used for documents.", "remark": "value col", "label": "0", "score": "0.8134906888008118"}
{"logic": "( degree summary name of department ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , grouped by ( degree summary name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the kind of program which most number of students are enrolled in?", "remark": "positive", "label": "1", "score": "0.8082104921340942"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( people )", "text": "Count the number of different nationalities.", "remark": "positive", "label": "1", "score": "0.9267051219940186"}
{"logic": "( name of department ) , ( date of treatment of management ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of department ) equal to ( dog id of management ) ) ) ) , that have ( ( breed code of department ) equal to ( breed code ) that belongs to ( dogs ) , grouped by ( breed code ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 ) )", "text": "Which dogs are of the rarest breed? Show their names and treatment dates.", "remark": "positive", "label": "1", "score": "0.5490347743034363"}
{"logic": "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))", "text": "find the id of tv channels that do not play any cartoon directed by Ben Jones.", "remark": "positive", "label": "1", "score": "0.8707323670387268"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "List the language used most number of TV Channel. List language and number of TV Channel.", "remark": "logic", "label": "0", "score": "0.7876626253128052"}
{"logic": "( distinct ( template type description of department ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of department ) equal to ( template type code of management ) ) ) , and ( ( documents ) satisfied that ( ( template id of management ) equal to ( template id of head ) ) ) )", "text": "Return the different descriptions for templates that have been used in a document.", "remark": "positive", "label": "1", "score": "0.8271609544754028"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "What are all distinct countries where singers above age 30 are from?", "remark": "value int", "label": "0", "score": "0.033597540110349655"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( number products ) greater than ( the average of ( number products ) ) that belongs to ( shop ) )", "text": "Which shops' number products is above the average? Give me the shop names.", "remark": "positive", "label": "1", "score": "0.8945004343986511"}
{"logic": "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )", "text": "Find the government form name and total population for each government form whose average life expectancy is longer than 69.", "remark": "value int", "label": "0", "score": "0.028112689033150673"}
{"logic": "( first name of department ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of department ) equal to ( address id of management ) ) ) ) , that have ( ( country of management ) equal to ( 'haiti' ) ) and ( first name ) that belongs to ( students ) , that have ( ( cell mobile number ) equal to ( '09700166582' ) )", "text": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.", "remark": "positive", "label": "1", "score": "0.22621910274028778"}
{"logic": "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )", "text": "Return the names and surface areas of the 6 largest countries.", "remark": "value int", "label": "0", "score": "0.580681562423706"}
{"logic": "( the number of ( all items ) ) , ( location ) that belongs to ( shop ) , grouped by ( location )", "text": "Find the number of shops in each location.", "remark": "positive", "label": "1", "score": "0.8892731666564941"}
{"logic": "( country ) that belongs to ( singer ) , that have ( ( age ) greater than ( 40 ) ), and intersect with ( ( country ) that belongs to ( singer ) , that have ( ( age ) less than ( 30 ) ))", "text": "Show countries where a singer above age 40 and a singer below 30 are from.", "remark": "positive", "label": "1", "score": "0.8806487321853638"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "Give the airline with abbreviation 'UAL'.", "remark": "positive", "label": "1", "score": "0.9301626682281494"}
{"logic": "( date of treatment of department ) , ( first name of management ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) )", "text": "What are the date and the operating professional's first name of each treatment?", "remark": "positive", "label": "1", "score": "0.7717704176902771"}
{"logic": "( cell mobile number ) that belongs to ( students ) , that have ( ( ( first name ) equal to ( 'timmothy' ) ) and ( ( last name ) equal to ( 'ward' ) ) )", "text": "What is the mobile phone number of the student whose first name is Timothy?", "remark": "logic", "label": "0", "score": "0.9323602914810181"}
{"logic": "( name of highschooler ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the id of the high schooler who has the greatest number of friends?", "remark": "value col", "label": "0", "score": "0.7995375990867615"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )", "text": "List names of conductors in descending order of years of work.", "remark": "positive", "label": "1", "score": "0.9086378216743469"}
{"logic": "( year ) that belongs to ( concert ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the year that had the most concerts?", "remark": "positive", "label": "1", "score": "0.8431187868118286"}
{"logic": "( first name ) , ( country code ) that belongs to ( players ) , ordered by ( ( birth date ) ) , limited to the top ( 1 )", "text": "Find the first name and country code of the oldest player.", "remark": "positive", "label": "1", "score": "0.8984102010726929"}
{"logic": "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which language is spoken by the least number of countries?", "remark": "logic", "label": "0", "score": "0.13258333504199982"}
{"logic": "( the number of ( all items ) ) that belongs to ( paragraphs )", "text": "Find the names of paragraphs.", "remark": "value col", "label": "0", "score": "0.03382622450590134"}
{"logic": "( document id ) , ( template id ) , ( document description ) that belongs to ( documents ) , that have ( ( document name ) equal to ( robbin cv ) )", "text": "What is the document id, template id and description for document named \"Robbin CV\"?", "remark": "positive", "label": "1", "score": "0.9291812181472778"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the code of the country with the least players?", "remark": "logic", "label": "0", "score": "0.649313747882843"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of likes ) equal to ( department id of highschooler ) ) ) ) , that have ( ( department name of likes ) equal to ( 'engineer' ) )", "text": "How many degrees does the computer department offer?", "remark": "value str", "label": "0", "score": "0.2531519830226898"}
{"logic": "( district ) that belongs to ( shop ) , that have ( ( number products ) less than ( 3000 ) ), and intersect with ( ( district ) that belongs to ( shop ) , that have ( ( number products ) greater than ( 10000 ) ))", "text": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "remark": "positive", "label": "1", "score": "0.9154144525527954"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )", "text": "What are the names of the singers who are French citizens?", "remark": "logic", "label": "0", "score": "0.032088980078697205"}
{"logic": "( the number of ( all items ) ) that belongs to ( poker player )", "text": "List the names of poker players.", "remark": "value col", "label": "0", "score": "0.03608551621437073"}
{"logic": "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )", "text": "When was the first transcript released?", "remark": "logic", "label": "0", "score": "0.842526912689209"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( kyle ) )", "text": "What are the likes that Kyle have?", "remark": "logic", "label": "0", "score": "0.8882697224617004"}
{"logic": "( the number of ( distinct ( governmentform ) ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) )", "text": "How many different forms of governments are there in Africa?", "remark": "positive", "label": "1", "score": "0.909235954284668"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , that have ( ( fullname of department ) equal to ( 'american motor company' ) )", "text": "How many car models were produced by the maker with full name American Motor Company?", "remark": "positive", "label": "1", "score": "0.8696215152740479"}
{"logic": "( degree program id of department ) , ( degree summary name of department ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , grouped by ( degree program id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the program which most number of students are enrolled in. List both the id and the summary.", "remark": "positive", "label": "1", "score": "0.7996770739555359"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) ) , that have ( ( earnings of highschooler ) greater than ( 300000 ) )", "text": "What are the names of poker players whose earnings is higher than 400000?", "remark": "value int", "label": "0", "score": "0.0354309156537056"}
{"logic": "( the number of ( all items ) ) , ( district ) that belongs to ( city ) , that have ( ( population ) greater than ( the average of ( population ) ) that belongs to ( city ) ) , grouped by ( district )", "text": "How many cities in each district have a population that is above the average population across all cities?", "remark": "positive", "label": "1", "score": "0.9016909003257751"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( weight of management ) less than ( the average of ( weight ) ) that belongs to ( cars data ) )", "text": "What is the model for the car with a weight smaller than the average?", "remark": "positive", "label": "1", "score": "0.9214937090873718"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( countryid of likes ) , ( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of likes ) equal to ( country of highschooler ) ) ) ) , grouped by ( countryid of likes ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) r\" )", "text": "How many countries has more than 3 car makers?", "remark": "value int", "label": "0", "score": "0.037986740469932556"}
{"logic": "( template type code ) , ( template type description ) that belongs to ( ref template types )", "text": "What are the type codes for all template types?", "remark": "value col", "label": "0", "score": "0.04478012025356293"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "What are flight numbers of flights arriving at Airport \"APG\"?", "remark": "value col", "label": "0", "score": "0.9195156693458557"}
{"logic": "( distinct ( semester id of highschooler ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of likes ) equal to ( degree program id of highschooler ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of highschooler ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of likes ) equal to ( degree program id of highschooler ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))", "text": "What is the id of the semester that had neither Masters nor Bachelors students enrolled?", "remark": "logic", "label": "0", "score": "0.04495592042803764"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "What are all distinct countries where singers above age 20 are from?", "remark": "positive", "label": "1", "score": "0.9342698454856873"}
{"logic": "( transcript date of management ) , ( transcript id of department ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of department ) equal to ( transcript id of management ) ) ) ) , grouped by ( transcript id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the date and id of the transcript with at least 2 course results.", "remark": "positive", "label": "1", "score": "0.8699235320091248"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( grade of management ) greater than ( 5 ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?", "remark": "positive", "label": "1", "score": "0.8179288506507874"}
{"logic": "( the number of ( all items ) ) that belongs to ( airports )", "text": "List the airports we have?", "remark": "value col", "label": "0", "score": "0.7191455960273743"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( final table made of management ) )", "text": "What are the names of poker players, ordered ascending by the number of final tables they have made?", "remark": "positive", "label": "1", "score": "0.8529443740844727"}
{"logic": "( the average of ( earnings ) ) that belongs to ( poker player )", "text": "Return the maximum earnings across all poker players.", "remark": "value col", "label": "0", "score": "0.04009832441806793"}
{"logic": "( name ) that belongs to ( battle ) , that have ( ( ( bulgarian commander ) equal to ( 'kaloyan' ) ) and ( ( latin commander ) equal to ( 'baldwin i' ) ) )", "text": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "remark": "positive", "label": "1", "score": "0.9022517204284668"}
{"logic": "( name of head ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) , and ( ( highschooler ) satisfied that ( ( friend id of department ) equal to ( id of head ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "Show the names of all of the high schooler Kyle's friends.", "remark": "positive", "label": "1", "score": "0.9063504934310913"}
{"logic": "( the number of ( distinct ( country code ) ) ) that belongs to ( players )", "text": "How many distinct countries do players come from?", "remark": "positive", "label": "1", "score": "0.8994261622428894"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( cvo ) ), and except that ( ( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( apg ) ))", "text": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "remark": "positive", "label": "1", "score": "0.6502076983451843"}
{"logic": "( the number of ( language of management ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of department ) equal to ( aruba ) )", "text": "How many languages are spoken in Aruba?", "remark": "positive", "label": "1", "score": "0.8545713424682617"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( kyle ) )", "text": "Return the number of likes that the high schooler named James has.", "remark": "value str", "label": "0", "score": "0.5058817267417908"}
{"logic": "( distinct ( date arrived of department ) ) , ( date departed of department ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of department ) equal to ( dog id of management ) ) ) )", "text": "Find the arriving date and the departing date of the dogs that received a treatment.", "remark": "positive", "label": "1", "score": "0.8376457095146179"}
{"logic": "( the number of ( all items ) ) that belongs to ( singer )", "text": "What is the total number of singers?", "remark": "positive", "label": "1", "score": "0.8534480929374695"}
{"logic": "( first name of likes ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of likes ) equal to ( address id of highschooler ) ) ) ) , that have ( ( country of highschooler ) equal to ( 'haiti' ) ) and ( first name ) that belongs to ( students ) , that have ( ( cell mobile number ) equal to ( '09700166582' ) )", "text": "What are the last names of the students who live in Haiti permanently or have the cell phone number 09700166582?", "remark": "value col", "label": "0", "score": "0.04042087867856026"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )", "text": "List the title of all TV Series directed by \"Ben Jones\" or \"Brandon Vietti\".", "remark": "value col", "label": "0", "score": "0.8863007426261902"}
{"logic": "( the number of ( all items ) ) that belongs to ( cartoon ) , that have ( ( written by ) equal to ( joseph kuhr ) )", "text": "What is the number of cartoones written by Joseph Kuhr?", "remark": "positive", "label": "1", "score": "0.8996238112449646"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What airline serves the most flights?", "remark": "positive", "label": "1", "score": "0.8254889249801636"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )", "text": "What are the package options of all tv channels that are playing some cartoons directed by Ben Jones?", "remark": "logic", "label": "0", "score": "0.05089721456170082"}
{"logic": "( id ) that belongs to ( tv channel ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "find id of the tv channels that from the countries where have more than three tv channels.", "remark": "value int", "label": "0", "score": "0.0389561802148819"}
{"logic": "( owner id of department ) , ( last name of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of management ) equal to ( dog id of head ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "remark": "positive", "label": "1", "score": "0.7670296430587769"}
{"logic": "( template id ) , ( the number of ( all items ) ) that belongs to ( documents ) , grouped by ( template id )", "text": "Show all template ids and number of documents using each template.", "remark": "positive", "label": "1", "score": "0.8853108286857605"}
{"logic": "( content ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What is the content of the series Sky Radio?", "remark": "positive", "label": "1", "score": "0.9375871419906616"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs )", "text": "Compute the average age of all the dogs.", "remark": "positive", "label": "1", "score": "0.9405074715614319"}
{"logic": "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "Which abbreviation corresponds to China Airways?", "remark": "value str", "label": "0", "score": "0.32381319999694824"}
{"logic": "( name ) , ( level of membership ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( age ) in descending order )", "text": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "remark": "positive", "label": "1", "score": "0.8783222436904907"}
{"logic": "( the number of ( all items ) ) that belongs to ( museum ) , that have ( ( ( open year ) greater than ( 2013 ) ) or ( ( open year ) less than ( 2008 ) ) )", "text": "How many museums were opened before 2013 and after 2008?", "remark": "logic", "label": "0", "score": "0.7982208728790283"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( republic ) )", "text": "How many countries have governments that are republics?", "remark": "positive", "label": "1", "score": "0.8840935230255127"}
{"logic": "( the number of ( all items ) ) , ( directed by ) that belongs to ( cartoon ) , grouped by ( directed by )", "text": "How many cartoons did each director create?", "remark": "positive", "label": "1", "score": "0.8653894066810608"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ))", "text": "Show all template type codes that are not used by any document.", "remark": "positive", "label": "1", "score": "0.6551032662391663"}
{"logic": "( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the name of the student with the most likes.", "remark": "positive", "label": "1", "score": "0.83709317445755"}
{"logic": "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))", "text": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "remark": "positive", "label": "1", "score": "0.9064702391624451"}
{"logic": "( area code of likes ) that belongs to ( ( area code state ) , and ( ( votes ) satisfied that ( ( state of likes ) equal to ( state of highschooler ) ) ) ) , grouped by ( area code of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the area name in which the most voters voted?", "remark": "value col", "label": "0", "score": "0.8124092221260071"}
{"logic": "( course name of likes ) , ( course id of likes ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) ) , grouped by ( course id of likes ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "text": "What are the names and ids of every course with less than three sections?", "remark": "value int", "label": "0", "score": "0.034607164561748505"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 4 ) )", "text": "Show me all grades that have at least 4 students.", "remark": "positive", "label": "1", "score": "0.9245126247406006"}
{"logic": "( the number of ( all items ) ) , ( country code ) that belongs to ( players ) , grouped by ( country code )", "text": "How many players are from each country in average?", "remark": "logic", "label": "0", "score": "0.035867780447006226"}
{"logic": "( owner id of department ) , ( last name of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of management ) equal to ( dog id of head ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "remark": "positive", "label": "1", "score": "0.7078732252120972"}
{"logic": "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( age ) less than ( 30 ) )", "text": "How many visitors below age 30 are there?", "remark": "positive", "label": "1", "score": "0.8943809270858765"}
{"logic": "( distinct ( name of management ) ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( countrycode of management ) equal to ( code of department ) ) ) ) , that have ( ( ( continent of department ) equal to ( 'europe' ) ) and ( ( t1.name ) not in ( ( name of head ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of head ) equal to ( countrycode of trip ) ) ) ) , that have ( ( ( isofficial of trip ) equal to ( 't' ) ) and ( ( language of trip ) equal to ( 'english' ) ) ) ) ) )", "text": "What are the names of cities in Europe for which English is not the official language?", "remark": "positive", "label": "1", "score": "0.44253796339035034"}
{"logic": "( fullname of department ) , ( id of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )", "text": "Which makers designed more than 3 car models? List full name and the id.", "remark": "positive", "label": "1", "score": "0.8439507484436035"}
{"logic": "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( chinese ) )", "text": "What is the number of distinct continents where Chinese is spoken?", "remark": "positive", "label": "1", "score": "0.89640212059021"}
{"logic": "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )", "text": "Which city and country is the Alton airport at?", "remark": "positive", "label": "1", "score": "0.931277334690094"}
{"logic": "( treatment type description of likes ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of likes ) equal to ( treatment type code of highschooler ) ) ) ) , grouped by ( treatment type code of likes ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )", "text": "Give me the description of the treatment type whose total cost is the highest.", "remark": "logic", "label": "0", "score": "0.8409847021102905"}
{"logic": "( code ) that belongs to ( country ) , that have ( ( governmentform ) not equal to ( republic ) ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "Return the codes of countries that do not speak Spanish and do not have Republics for governments.", "remark": "value str", "label": "0", "score": "0.5933980345726013"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the towns from which at least two teachers come from?", "remark": "positive", "label": "1", "score": "0.9085968136787415"}
{"logic": "( the number of ( all items ) ) that belongs to ( ship ) , that have ( ( disposition of ship ) equal to ( 'captured' ) )", "text": "What are the ships ended up being 'Captured'?", "remark": "value col", "label": "0", "score": "0.6390532851219177"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )", "text": "What are the codes of template types that have fewer than 3 templates?", "remark": "positive", "label": "1", "score": "0.9206110835075378"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler )", "text": "How many high schoolers are there?", "remark": "positive", "label": "1", "score": "0.8934850692749023"}
{"logic": "( country ) that belongs to ( tv channel ), and except that ( ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( written by of management ) equal to ( 'todd casey' ) ))", "text": "What are the countries that are not playing cartoons written by Todd Casey?", "remark": "positive", "label": "1", "score": "0.7041257619857788"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "Return the id of the document with the fewest paragraphs.", "remark": "positive", "label": "1", "score": "0.7286562919616699"}
{"logic": "( the sum of ( population ) ) , ( the average of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( north america ) ) and ( ( surfacearea ) greater than ( 3000 ) ) )", "text": "What is the total population and average area of countries in the continent of North America whose area is bigger than 1000\uff1f", "remark": "value int", "label": "0", "score": "0.03166689723730087"}
{"logic": "( age ) , ( hometown ) that belongs to ( teacher )", "text": "What are the age and hometown of teachers?", "remark": "positive", "label": "1", "score": "0.936500608921051"}
{"logic": "( episode ) that belongs to ( tv series ) , ordered by ( ( rating ) )", "text": "What are all of the episodes ordered by ratings?", "remark": "positive", "label": "1", "score": "0.92652428150177"}
{"logic": "( name of likes ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of likes ) equal to ( conductor id of highschooler ) ) ) ) , grouped by ( conductor id of highschooler ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are the names of conductors who have conducted at less than one orchestra?", "remark": "logic", "label": "0", "score": "0.03437439724802971"}
{"logic": "( template type code ) that belongs to ( ref template types ) , that have ( ( template type description ) equal to ( book ) )", "text": "What is the template type code for template type description \"Book\".", "remark": "positive", "label": "1", "score": "0.9373703598976135"}
{"logic": "( distinct ( countrycode ) ) that belongs to ( countrylanguage ) , that have ( ( language ) not equal to ( english ) )", "text": "What are the country codes of countries where people use languages other than Chinese?", "remark": "value str", "label": "0", "score": "0.8665725588798523"}
{"logic": "( last name of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , that have ( ( age of management ) equal to ( the maximum of ( age ) ) that belongs to ( dogs ) )", "text": "Who owns the youngest dog? Give me his or her last name.", "remark": "positive", "label": "1", "score": "0.40429702401161194"}
{"logic": "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )", "text": "What is the average miles per gallon of all the cards with 5 cylinders?", "remark": "value int", "label": "0", "score": "0.032355163246393204"}
{"logic": "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )", "text": "What are the names of the teachers ordered by descending age?", "remark": "logic", "label": "0", "score": "0.03184434399008751"}
{"logic": "( the number of ( distinct ( language of management ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of management ) equal to ( t ) ) )", "text": "For the countries founded before 1930, what is the total number of distinct official languages?", "remark": "positive", "label": "1", "score": "0.4842557907104492"}
{"logic": "( name ) , ( result ) that belongs to ( battle ) , that have ( ( bulgarian commander ) not equal to ( 'boril' ) )", "text": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "remark": "positive", "label": "1", "score": "0.9431901574134827"}
{"logic": "( airportcode of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of department ) equal to ( destairport of management ) ) or ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) ) , grouped by ( airportcode of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the airport code of the airport with the most flights?", "remark": "positive", "label": "1", "score": "0.6558300256729126"}
{"logic": "( series name of likes ) , ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( directed by of highschooler ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of likes ) , ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( directed by of highschooler ) equal to ( 'ben jones' ) ))", "text": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones or cartoons directed by Michael Chang?", "remark": "logic", "label": "0", "score": "0.41138479113578796"}
{"logic": "( distinct ( first name of likes ) ) , ( last name of likes ) that belongs to ( ( professionals ) join ( ( treatments ) ) ) , that have ( ( cost of treatment ) less than ( the average of ( cost of treatment ) ) that belongs to ( treatments ) )", "text": "What are the first name and last name of the professionals who have done treatment with cost above average?", "remark": "logic", "label": "0", "score": "0.29666703939437866"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( governmentform of likes ) equal to ( republic ) ) , grouped by ( language of highschooler ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "text": "Which languages are spoken by at least one country in republic governments?", "remark": "logic", "label": "0", "score": "0.22604793310165405"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in ascending order ) , limited to the top ( 3 )", "text": "What are the names of the nations with the 3 lowest populations?", "remark": "positive", "label": "1", "score": "0.8537846207618713"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( ben jones ) )", "text": "List all cartoon directed by \"Ben Jones\".", "remark": "positive", "label": "1", "score": "0.8808796405792236"}
{"logic": "( name of highschooler ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "What are the names of high schoolers who have 3 or fewer friends?", "remark": "logic", "label": "0", "score": "0.03563539683818817"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of head ) ) ) ) , that have ( ( ( city of management ) equal to ( ashley ) ) and ( ( city of head ) equal to ( aberdeen ) ) )", "text": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "remark": "positive", "label": "1", "score": "0.8386396765708923"}
{"logic": "( name ) that belongs to ( employee ) , that have ( ( employee_id ) not in ( ( employee id ) that belongs to ( evaluation ) ) )", "text": "What are the names of the employees who never received any evaluation?", "remark": "positive", "label": "1", "score": "0.6978963613510132"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the most commmon hometowns for teachers?", "remark": "positive", "label": "1", "score": "0.632457435131073"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )", "text": "List the first and last name of all players who are left / L hand in the order of birth date.", "remark": "positive", "label": "1", "score": "0.8893370628356934"}
{"logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) ) )", "text": "Find the average age of students who do not have any pet.", "remark": "positive", "label": "1", "score": "0.840036153793335"}
{"logic": "( countryname ) that belongs to ( countries ), and except that ( ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ))", "text": "What are the names of the countries with no car makers?", "remark": "positive", "label": "1", "score": "0.6141059994697571"}
{"logic": "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )", "text": "What is the number of employees from each city?", "remark": "positive", "label": "1", "score": "0.9020453691482544"}
{"logic": "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of department ) , ( role code of department ) , ( email address of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ))", "text": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "remark": "positive", "label": "1", "score": "0.48556801676750183"}
{"logic": "( the average of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) in ( ( student id of department ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) ) )", "text": "What is the average grade of students who have friends?", "remark": "positive", "label": "1", "score": "0.809684157371521"}
{"logic": "( title of highschooler ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( series name of likes ) equal to ( sky radio ) )", "text": "List the title of all  TV Series showed on TV Channel with series name \"Sky Radio\".", "remark": "value col", "label": "0", "score": "0.8827401995658875"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "remark": "positive", "label": "1", "score": "0.7348960041999817"}
{"logic": "( distinct ( course name of department ) ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) )", "text": "What are the names of all courses that have some students enrolled?", "remark": "positive", "label": "1", "score": "0.7068790197372437"}
{"logic": "( the minimum of ( number products ) ) , ( the maximum of ( number products ) ) that belongs to ( shop )", "text": "find the minimum and maximum number of products of all stores.", "remark": "positive", "label": "1", "score": "0.9308300614356995"}
{"logic": "( the maximum of ( killed ) ) , ( the minimum of ( killed ) ) that belongs to ( death )", "text": "What is maximum and minimum death toll caused each time?", "remark": "positive", "label": "1", "score": "0.9124437570571899"}
{"logic": "( contestant number of department ) , ( contestant name of department ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) ) , grouped by ( contestant number of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the contestant numbers and names of the contestants who had at least two votes?", "remark": "positive", "label": "1", "score": "0.8131672143936157"}
{"logic": "( first name of likes ) , ( last name of likes ) , ( size code of highschooler ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) )", "text": "What are each owner's first name, last name, and the number of their dog?", "remark": "value col", "label": "0", "score": "0.06894956529140472"}
{"logic": "( district ) that belongs to ( shop ) , that have ( ( number products ) less than ( 3000 ) ), and intersect with ( ( district ) that belongs to ( shop ) , that have ( ( number products ) greater than ( 10000 ) ))", "text": "SELECT district FROM shop WHERE Number_products  <  2000 INTERSECT SELECT district FROM shop WHERE Number_products  >  11000", "remark": "value int", "label": "0", "score": "0.050973810255527496"}
{"logic": "( name ) that belongs to ( highschooler ) , that have ( ( grade ) equal to ( 10 ) )", "text": "Show the names of all high schoolers in grade 9.", "remark": "value int", "label": "0", "score": "0.034716229885816574"}
{"logic": "( distinct ( fname of department ) ) , ( age of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) )", "text": "Find the first name and age of students who have a pet.", "remark": "positive", "label": "1", "score": "0.8208552598953247"}
{"logic": "( makeid of management ) , ( make of management ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( ( horsepower of department ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of department ) less than or equal to ( 3 ) ) )", "text": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 4 cylinders?", "remark": "positive", "label": "1", "score": "0.03753918781876564"}
{"logic": "( template type code of department ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( document name of management ) equal to ( data base ) )", "text": "Return the template type code of the template that is used by a document named Data base.", "remark": "positive", "label": "1", "score": "0.9246479868888855"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( lifeexpectancy ) ) , limited to the top ( 1 )", "text": "Give the name of the country in Asia with the lowest life expectancy.", "remark": "positive", "label": "1", "score": "0.8005995750427246"}
{"logic": "( fullname of likes ) , ( id of likes ) , ( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of likes ) equal to ( maker of highschooler ) ) ) ) , grouped by ( id of likes )", "text": "What is the full name of each car maker, and how many models it produces?", "remark": "value col", "label": "0", "score": "0.8799775838851929"}
{"logic": "( distinct ( first name of department ) ) , ( last name of department ) that belongs to ( ( professionals ) join ( ( treatments ) ) ) , that have ( ( cost of treatment ) less than ( the average of ( cost of treatment ) ) that belongs to ( treatments ) )", "text": "What are the first name and last name of the professionals who have done treatment with cost below average?", "remark": "positive", "label": "1", "score": "0.8957856297492981"}
{"logic": "( name ) , ( grade ) that belongs to ( highschooler )", "text": "What are the names and grades for each high schooler?", "remark": "positive", "label": "1", "score": "0.935932457447052"}
{"logic": "( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) less than ( 2003 ) ), and intersect with ( ( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) greater than ( 2003 ) ))", "text": "Show the record companies shared by orchestras founded before 2003 and after 2003.", "remark": "positive", "label": "1", "score": "0.8658303618431091"}
{"logic": "( the number of ( all items ) ) , ( fullname of management ) , ( id of management ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of management ) ) ) ) , grouped by ( id of management )", "text": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "remark": "positive", "label": "1", "score": "0.725401759147644"}
{"logic": "( year ) that belongs to ( concert ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which year has least number of concerts?", "remark": "logic", "label": "0", "score": "0.5733457207679749"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( hometown ) not equal to ( little lever urban distric ) )", "text": "List the name of teachers whose hometown is not \"Little Lever Urban District\".", "remark": "positive", "label": "1", "score": "0.93278568983078"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of management ) equal to ( uid of department ) ) ) ) , that have ( ( ( airline of department ) equal to ( united airlines ) ) and ( ( sourceairport of management ) equal to ( ahd ) ) )", "text": "How many 'United Airlines' flights depart from Airport 'AHD'?", "remark": "positive", "label": "1", "score": "0.8906897902488708"}
{"logic": "( document id ) , ( the number of ( all items ) ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( document id ) )", "text": "Show all document ids and the number of paragraphs in each document. Order by document id.", "remark": "positive", "label": "1", "score": "0.843898355960846"}
{"logic": "( the sum of ( population ) ) , ( the maximum of ( gnp ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "What is the total population and maximum GNP in Asia?", "remark": "positive", "label": "1", "score": "0.9013085961341858"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( destairport of management ) equal to ( ahd ) )", "text": "What are airlines that have flights arriving at airport 'AHD'?", "remark": "positive", "label": "1", "score": "0.8985163569450378"}
{"logic": "( continent of department ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of department ) equal to ( continent of management ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of management ) equal to ( country of head ) ) ) ) , grouped by ( continent of department )", "text": "What is the name of each continent and how many car makers are there in each one?", "remark": "positive", "label": "1", "score": "0.713582456111908"}
{"logic": "( countryname of department ) that belongs to ( ( countries ) , and ( ( continents ) satisfied that ( ( continent of department ) equal to ( contid of management ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of head ) ) ) ) , that have ( ( continent of management ) equal to ( 'europe' ) ) , grouped by ( countryname of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "What are the names of all European countries with at least 3 manufacturers?", "remark": "positive", "label": "1", "score": "0.8354679942131042"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department )", "text": "What are the names of the high schoolers and how many friends does each have?", "remark": "positive", "label": "1", "score": "0.8167312145233154"}
{"logic": "( the average of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( stadium )", "text": "What is the average and maximum capacities for all stations?", "remark": "positive", "label": "1", "score": "0.8572110533714294"}
{"logic": "( contid of department ) , ( continent of department ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of department ) equal to ( continent of management ) ) ) ) , grouped by ( contid of department )", "text": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "remark": "positive", "label": "1", "score": "0.469465047121048"}
{"logic": "all items that belongs to ( hiring )", "text": "What is all the information about hiring?", "remark": "positive", "label": "1", "score": "0.9432876706123352"}
{"logic": "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )", "text": "What the largest version number and its template type code?", "remark": "logic", "label": "0", "score": "0.07758253812789917"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What airline serves the least flights?", "remark": "logic", "label": "0", "score": "0.13517844676971436"}
{"logic": "( first name of likes ) , ( last name of likes ) , ( size code of highschooler ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) )", "text": "List each owner's first name, and the size of his for her dog.", "remark": "value col", "label": "0", "score": "0.8897461891174316"}
{"logic": "( first name of department ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of department ) equal to ( address id of management ) ) ) ) , that have ( ( country of management ) equal to ( 'haiti' ) ) and ( first name ) that belongs to ( students ) , that have ( ( cell mobile number ) equal to ( '09700166582' ) )", "text": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?", "remark": "positive", "label": "1", "score": "0.03968334570527077"}
{"logic": "( name ) that belongs to ( city ) , that have ( ( population ) between ( 160000 ) and ( 900000 ) )", "text": "What are the cities whose population is between 160000 and 900000?", "remark": "positive", "label": "1", "score": "0.711884617805481"}
{"logic": "( money rank ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order ) , limited to the top ( 1 )", "text": "What is the money rank of the poker player with the highest earnings?", "remark": "positive", "label": "1", "score": "0.8870308995246887"}
{"logic": "( the number of ( distinct ( template id ) ) ) that belongs to ( documents )", "text": "Count the number of different templates used for documents.", "remark": "positive", "label": "1", "score": "0.9270480871200562"}
{"logic": "( template id of department ) , ( template type code of management ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the id and type code of the template that is used for the greatest number of documents.", "remark": "positive", "label": "1", "score": "0.8502633571624756"}
{"logic": "( the sum of ( population ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( english ) ) ) )", "text": "What is the total number of people living in the nations that do not use Japanese?", "remark": "value int", "label": "0", "score": "0.6917853355407715"}
{"logic": "( hometown ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )", "text": "Where is the youngest teacher from?", "remark": "positive", "label": "1", "score": "0.8008994460105896"}
{"logic": "( name of head ) , ( course of management ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) ) , ordered by ( ( name of head ) )", "text": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "remark": "positive", "label": "1", "score": "0.8004712462425232"}
{"logic": "( id ) that belongs to ( tv channel ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "find id of the tv channels that from the countries where have more than two tv channels.", "remark": "positive", "label": "1", "score": "0.9355037808418274"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "Return the number of likes that the high schooler named Kyle has.", "remark": "positive", "label": "1", "score": "0.8265255689620972"}
{"logic": "( professional id of department ) , ( role code of department ) , ( first name of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "remark": "positive", "label": "1", "score": "0.7971134185791016"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )", "text": "Show the name of singers whose birth year is either 1948 or 1949?", "remark": "positive", "label": "1", "score": "0.9216028451919556"}
{"logic": "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )", "text": "Return the lowest version number, along with its corresponding template type code.", "remark": "positive", "label": "1", "score": "0.9389931559562683"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( template type code of management ) equal to ( 'ppt' ) )", "text": "Count the number of documents that use the PPT template type.", "remark": "positive", "label": "1", "score": "0.8695550560951233"}
{"logic": "( the number of ( all items ) ) that belongs to ( documents )", "text": "How many documents do we have?", "remark": "positive", "label": "1", "score": "0.890178918838501"}
{"logic": "( the number of ( distinct ( governmentform ) ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) )", "text": "How many type of governments are in Africa?", "remark": "positive", "label": "1", "score": "0.8624652624130249"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler )", "text": "Count the number of high schoolers.", "remark": "positive", "label": "1", "score": "0.9041863679885864"}
{"logic": "( distinct ( countrycode ) ) that belongs to ( countrylanguage ) , that have ( ( language ) not equal to ( english ) )", "text": "Give the country codes for countries in which people speak langauges that are not English.", "remark": "positive", "label": "1", "score": "0.9188252687454224"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) not in ( ( sourceairport ) that belongs to ( flights ) and ( destairport ) that belongs to ( flights ) ) )", "text": "Which airports do not have departing or arriving flights?", "remark": "positive", "label": "1", "score": "0.0384100005030632"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "Which airlines have less than 200 flights?", "remark": "positive", "label": "1", "score": "0.8899608254432678"}
{"logic": "( other details ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'korea' ) )", "text": "Show paragraph details for paragraph with text 'Korea'.", "remark": "positive", "label": "1", "score": "0.8506908416748047"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( 'summer show' ) )", "text": "Count the number of paragraphs in the document named 'Summer Show'.", "remark": "positive", "label": "1", "score": "0.8928999900817871"}
{"logic": "( the number of ( all items ) ) that belongs to ( players )", "text": "How many players are there?", "remark": "positive", "label": "1", "score": "0.8895085453987122"}
{"logic": "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )", "text": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "remark": "positive", "label": "1", "score": "0.9154444336891174"}
{"logic": "( the maximum of ( charge amount ) ) that belongs to ( charges )", "text": "How much does the least expensive charge type costs?", "remark": "logic", "label": "0", "score": "0.03774048760533333"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) not in ( ( sourceairport ) that belongs to ( flights ) and ( destairport ) that belongs to ( flights ) ) )", "text": "Which airports do have departing or arriving flights?", "remark": "logic", "label": "0", "score": "0.03744695335626602"}
{"logic": "( the number of ( all items ) ) that belongs to ( paragraphs )", "text": "Count the number of paragraphs.", "remark": "positive", "label": "1", "score": "0.9038532972335815"}
{"logic": "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the average and minimum age for each type of pet.", "remark": "logic", "label": "0", "score": "0.03373439982533455"}
{"logic": "( the number of ( all items ) ) that belongs to ( cartoon ) , that have ( ( written by ) equal to ( joseph kuhr ) )", "text": "How many cartoons were written by \"Joseph Kuhr\"?", "remark": "positive", "label": "1", "score": "0.895611584186554"}
{"logic": "( maker ) , ( model ) that belongs to ( model list )", "text": "What are all the makers and models?", "remark": "positive", "label": "1", "score": "0.926433801651001"}
{"logic": "( student id of likes ) , ( first name of likes ) , ( middle name of likes ) , ( last name of likes ) , ( the number of ( all items ) ) , ( student id of likes ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of likes ) equal to ( student id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which student has enrolled for the least times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "remark": "logic", "label": "0", "score": "0.3605205714702606"}
{"logic": "( fullname of department ) , ( id of department ) , ( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department )", "text": "How many models does each car maker produce? List maker full name, id and the number.", "remark": "positive", "label": "1", "score": "0.7569512128829956"}
{"logic": "( date of treatment of department ) , ( first name of management ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) )", "text": "List the date of each treatment, together with the first name of the professional who operated it.", "remark": "positive", "label": "1", "score": "0.8902961611747742"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "What are flight numbers of flights departing from Airport \"APG\"?", "remark": "positive", "label": "1", "score": "0.9141735434532166"}
{"logic": "( zip postcode ) that belongs to ( addresses ) , that have ( ( city ) equal to ( 'port chelsea' ) )", "text": "What is the zip code of the address in the city Port Chelsea?", "remark": "positive", "label": "1", "score": "0.9275718331336975"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of management ) ) ) , and ( ( countries ) satisfied that ( ( country of management ) equal to ( countryid of head ) ) ) ) , that have ( ( countryname of head ) equal to ( 'usa' ) )", "text": "How many car models are produced in the usa?", "remark": "positive", "label": "1", "score": "0.8488120436668396"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?", "remark": "positive", "label": "1", "score": "0.4790055751800537"}
{"logic": "( charge type ) , ( charge amount ) that belongs to ( charges )", "text": "How much does each charge type costs? List charge type.", "remark": "value col", "label": "0", "score": "0.8483245372772217"}
{"logic": "( document id of likes ) , ( document name of highschooler ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of likes ) equal to ( document id of highschooler ) ) ) ) , grouped by ( document id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the document id with smallest number of paragraphs?", "remark": "value col", "label": "0", "score": "0.4636390209197998"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches ) , that have ( ( ( year ) equal to ( 2013 ) ) or ( ( year ) equal to ( 2016 ) ) )", "text": "List the number of all matches who played in years of 2013 or 2016.", "remark": "positive", "label": "1", "score": "0.8798161745071411"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "Find all airlines that have at most 10 flights.", "remark": "logic", "label": "0", "score": "0.0446336530148983"}
{"logic": "( other student details ) that belongs to ( students ) , ordered by ( ( other student details ) in descending order )", "text": "List all the student details in reversed lexicographical order.", "remark": "positive", "label": "1", "score": "0.7934396862983704"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , that have ( ( destairport of highschooler ) equal to ( ahd ) )", "text": "Which airlines have a flight with departure airport AHD?", "remark": "value col", "label": "0", "score": "0.8867917060852051"}
{"logic": "( content ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What is the content of TV Channel with serial name \"Sky Radio\"?", "remark": "positive", "label": "1", "score": "0.8856542706489563"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "Which airline has abbreviation 'UAL'?", "remark": "positive", "label": "1", "score": "0.9374552369117737"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of management ) equal to ( petid of head ) ) ) ) , that have ( ( ( sex of department ) equal to ( 'f' ) ) and ( ( pettype of head ) equal to ( 'dog' ) ) )", "text": "How many dog pets are raised by female students?", "remark": "positive", "label": "1", "score": "0.8408990502357483"}
{"logic": "( distinct ( template type description of likes ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of likes ) equal to ( template type code of highschooler ) ) ) , and ( ( documents ) satisfied that ( ( template id of highschooler ) equal to ( template id of area code state ) ) ) )", "text": "What are the template type descriptions for the templates ever used by any document?", "remark": "logic", "label": "0", "score": "0.43085095286369324"}
{"logic": "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )", "text": "What is the id and weight of every pet who is older than 1?", "remark": "positive", "label": "1", "score": "0.9435406923294067"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ))", "text": "What are the codes of template types that are not used for any document?", "remark": "positive", "label": "1", "score": "0.5501024723052979"}
{"logic": "( name of department ) , ( date of treatment of management ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of department ) equal to ( dog id of management ) ) ) ) , that have ( ( breed code of department ) equal to ( breed code ) that belongs to ( dogs ) , grouped by ( breed code ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 ) )", "text": "List the names of the dogs of the rarest breed and the treatment dates of them.", "remark": "positive", "label": "1", "score": "0.7497456073760986"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( singer_id ) not in ( ( singer id ) that belongs to ( song ) ) )", "text": "List the name of singers that have two songs.", "remark": "value int", "label": "0", "score": "0.043351151049137115"}
{"logic": "( distinct ( date arrived of department ) ) , ( date departed of department ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of department ) equal to ( dog id of management ) ) ) )", "text": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "remark": "positive", "label": "1", "score": "0.8199085593223572"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )", "text": "Show the student IDs and numbers of friends corresponding to each.", "remark": "positive", "label": "1", "score": "0.8560701012611389"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the minimum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "What are the Asian countries which have a population larger than that of any country in Africa?", "remark": "positive", "label": "1", "score": "0.42416414618492126"}
{"logic": "( contestant number of department ) , ( contestant name of department ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) ) , grouped by ( contestant number of department ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "remark": "positive", "label": "1", "score": "0.49797889590263367"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , ordered by ( ( mpg of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "What is the car wmodel with the lowest mpg?", "remark": "logic", "label": "0", "score": "0.7315069437026978"}
{"logic": "( id of management ) , ( name of management ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of department ) equal to ( id of management ) ) ) ) , grouped by ( id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the ship id and name that caused most total injuries?", "remark": "positive", "label": "1", "score": "0.2103659063577652"}
{"logic": "( breed name of department ) that belongs to ( ( breeds ) , and ( ( dogs ) satisfied that ( ( breed code of department ) equal to ( breed code of management ) ) ) ) , grouped by ( breed name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which breed do the most dogs have? Give me the breed name.", "remark": "positive", "label": "1", "score": "0.780371367931366"}
{"logic": "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of department ) , ( role code of department ) , ( email address of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ))", "text": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "remark": "positive", "label": "1", "score": "0.4352383315563202"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "Return the ids of templates that do not have the code PP or PPT.", "remark": "logic", "label": "0", "score": "0.034016482532024384"}
{"logic": "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "Which abbreviation corresponds to Jetblue Airways?", "remark": "positive", "label": "1", "score": "0.9086503982543945"}
{"logic": "( age ) , ( hometown ) that belongs to ( teacher )", "text": "What is the age and hometown of every teacher?", "remark": "positive", "label": "1", "score": "0.9431344866752625"}
{"logic": "( vote id ) , ( phone number ) , ( state ) that belongs to ( votes )", "text": "List the vote ids, phone numbers and states of all votes.", "remark": "positive", "label": "1", "score": "0.9211142659187317"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) , and ( ( airlines ) satisfied that ( ( uid of head ) equal to ( airline of department ) ) ) ) , that have ( ( ( city of management ) equal to ( aberdeen ) ) and ( ( airline of head ) equal to ( united airlines ) ) )", "text": "How many United Airlines flights go to City 'Aberdeen'?", "remark": "positive", "label": "1", "score": "0.8833971619606018"}
{"logic": "( citizenship ) , ( the maximum of ( net worth millions ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "For each citizenship, what is the minimum net worth?", "remark": "logic", "label": "0", "score": "0.04071540758013725"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , that have ( ( earnings of management ) greater than ( 300000 ) )", "text": "Give the names of poker players who have earnings above 300000.", "remark": "positive", "label": "1", "score": "0.8624188899993896"}
{"logic": "( pixel aspect ratio par ) , ( country ) that belongs to ( tv channel ) , that have ( ( language ) not equal to ( 'english' ) )", "text": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "remark": "positive", "label": "1", "score": "0.8800499439239502"}
{"logic": "( line 1 ) , ( line 2 ) that belongs to ( addresses )", "text": "what are all the addresses including line 1 and line 2?", "remark": "positive", "label": "1", "score": "0.9210125207901001"}
{"logic": "( transcript date of management ) , ( transcript id of department ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of department ) equal to ( transcript id of management ) ) ) ) , grouped by ( transcript id of department ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the date and id of the transcript with the least number of results?", "remark": "positive", "label": "1", "score": "0.15327581763267517"}
{"logic": "( title ) , ( directed by ) that belongs to ( cartoon ) , ordered by ( ( original air date ) )", "text": "What is the name of all the cartoons that are ordered by air date?", "remark": "value col", "label": "0", "score": "0.041993629187345505"}
{"logic": "( contestant number ) , ( contestant name ) that belongs to ( contestants ) , ordered by ( ( contestant name ) in descending order )", "text": "List the contestant numbers and names, ordered by contestant name ascending.", "remark": "logic", "label": "0", "score": "0.045299362391233444"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( indepyear ) greater than ( 1950 ) )", "text": "Give the names of the nations that were founded after 1950.", "remark": "positive", "label": "1", "score": "0.8705282807350159"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of likes ) equal to ( department id of highschooler ) ) ) ) , that have ( ( department name of likes ) equal to ( 'engineer' ) )", "text": "How many degrees does each department has?", "remark": "logic", "label": "0", "score": "0.8268468976020813"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler ) , that have ( ( ( grade ) equal to ( 9 ) ) or ( ( grade ) equal to ( 10 ) ) )", "text": "How many high schoolers are there in grade 9 or 10?", "remark": "positive", "label": "1", "score": "0.8814775943756104"}
{"logic": "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )", "text": "Which professionals live in a city containing the substring 'South'? List his or her role, street, city and state.", "remark": "value str", "label": "0", "score": "0.8952556252479553"}
{"logic": "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))", "text": "find the names of tv channels that do not play any cartoon directed by Ben Jones.", "remark": "value col", "label": "0", "score": "0.4952170252799988"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) between ( 1 ) and ( 2 ) )", "text": "Give the ids of documents that have except one and two paragraphs.", "remark": "logic", "label": "0", "score": "0.03364552929997444"}
{"logic": "( last name of department ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( current address id of department ) equal to ( address id of management ) ) ) ) , that have ( ( state province county of management ) equal to ( 'northcarolina' ) ), and except that ( ( distinct ( last name of head ) ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of head ) equal to ( student id of trip ) ) ) ))", "text": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "remark": "positive", "label": "1", "score": "0.5513855218887329"}
{"logic": "( name of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes )", "text": "Show the names of high schoolers who have likes.", "remark": "logic", "label": "0", "score": "0.8626658320426941"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler ) , that have ( ( ( grade ) equal to ( 9 ) ) or ( ( grade ) equal to ( 10 ) ) )", "text": "Count the number of high schoolers in grades 9 or 10.", "remark": "positive", "label": "1", "score": "0.8837772011756897"}
{"logic": "( concert name of highschooler ) , ( theme of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( concert ) satisfied that ( ( concert id of likes ) equal to ( concert id of highschooler ) ) ) ) , grouped by ( concert id of highschooler )", "text": "Show the name for all concerts and the number of singers in each concert.", "remark": "value col", "label": "0", "score": "0.05639030784368515"}
{"logic": "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )", "text": "What is the average miles per gallon(mpg) of the cars with 8 cylinders?", "remark": "value int", "label": "0", "score": "0.0364500992000103"}
{"logic": "all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial ) equal to ( t ) ) ) and all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( dutch ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "Which countries have either English or Dutch as an official language?", "remark": "positive", "label": "1", "score": "0.7844029068946838"}
{"logic": "( name ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( ( dog id ) that belongs to ( treatments ) , grouped by ( dog id ) , that have ( ( the sum of ( cost of treatment ) ) greater than ( 1000 ) ) ) ) )", "text": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.", "remark": "positive", "label": "1", "score": "0.42130953073501587"}
{"logic": "( first name ) , ( birth date ) that belongs to ( players ) , that have ( ( country code ) equal to ( 'usa' ) )", "text": "List the first name and birth date of all players from the country with code USA.", "remark": "positive", "label": "1", "score": "0.9366936683654785"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "How many friends does the high school student Kyle have?", "remark": "positive", "label": "1", "score": "0.82131028175354"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( nationality ) not equal to ( russia ) )", "text": "What are the names of people who are not from Russia?", "remark": "positive", "label": "1", "score": "0.9300752282142639"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) , and ( ( airlines ) satisfied that ( ( uid of head ) equal to ( airline of department ) ) ) ) , that have ( ( ( city of management ) equal to ( aberdeen ) ) and ( ( airline of head ) equal to ( united airlines ) ) )", "text": "Count the number of United Airlines flights that arrive in Aberdeen.", "remark": "positive", "label": "1", "score": "0.8672671914100647"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "Count the number of flights departing from 'APG'.", "remark": "positive", "label": "1", "score": "0.8909108638763428"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( governmentform of department ) equal to ( republic ) ) , grouped by ( language of management ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "text": "What languages are only used by a single country with a republic government?", "remark": "positive", "label": "1", "score": "0.8763930201530457"}
{"logic": "( department name of management ) , ( department id of department ) that belongs to ( ( degree programs ) , and ( ( departments ) satisfied that ( ( department id of department ) equal to ( department id of management ) ) ) ) , grouped by ( department id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which department offers the most number of degrees? List department name and id.", "remark": "positive", "label": "1", "score": "0.8280497789382935"}
{"logic": "( first name ) , ( country code ) that belongs to ( players ) , ordered by ( ( birth date ) ) , limited to the top ( 1 )", "text": "What is the first name and country code of the oldest player?", "remark": "positive", "label": "1", "score": "0.9032711982727051"}
{"logic": "( other student details ) that belongs to ( students ) , ordered by ( ( other student details ) in descending order )", "text": "What other details can you tell me about students in alphabetical order?", "remark": "logic", "label": "0", "score": "0.6936248540878296"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "remark": "positive", "label": "1", "score": "0.8845441341400146"}
{"logic": "( section name ) that belongs to ( sections ) , ordered by ( ( section name ) in descending order )", "text": "What are the names of the sections in reverse alphabetical order?", "remark": "positive", "label": "1", "score": "0.5434707999229431"}
{"logic": "( record company ) that belongs to ( orchestra ) , ordered by ( ( year of founded ) in descending order )", "text": "Return the record companies of orchestras, sorted descending by the years in which they were founded.", "remark": "positive", "label": "1", "score": "0.9125725626945496"}
{"logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) ) )", "text": "Find the average age of students who have some pets.", "remark": "logic", "label": "0", "score": "0.12698160111904144"}
{"logic": "( the average of ( ranking ) ) , ( first name of likes ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of likes ) equal to ( player id of highschooler ) ) ) ) , grouped by ( first name of likes )", "text": "What are the first names of all players?", "remark": "value col", "label": "0", "score": "0.0541745088994503"}
{"logic": "( name ) that belongs to ( employee ) , ordered by ( ( age ) )", "text": "Sort employee names by their age in ascending order.", "remark": "positive", "label": "1", "score": "0.8911086320877075"}
{"logic": "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))", "text": "Which first names are used for professionals or owners but also used as dog names?", "remark": "logic", "label": "0", "score": "0.11725237220525742"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs ) , that have ( ( dog_id ) in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "Find the average age of the dogs who went through treatments.", "remark": "value table", "label": "0", "score": "0.9103015661239624"}
{"logic": "( the average of ( transcript date ) ) that belongs to ( transcripts )", "text": "What is the average transcript date?", "remark": "positive", "label": "1", "score": "0.9420766830444336"}
{"logic": "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))", "text": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "remark": "positive", "label": "1", "score": "0.8948155045509338"}
{"logic": "( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , that have ( ( tourney name of management ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , that have ( ( tourney name of management ) equal to ( 'australian open' ) ))", "text": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.86910080909729"}
{"logic": "( the number of ( distinct ( governmentform ) ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) )", "text": "How many type of governments are in Europe?", "remark": "value col", "label": "0", "score": "0.8609381914138794"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "What are the full names of all players, sorted by birth date?", "remark": "positive", "label": "1", "score": "0.9084468483924866"}
{"logic": "( the number of ( distinct ( professional id ) ) ) that belongs to ( treatments )", "text": "How many professionals have performed any treatment to dogs?", "remark": "positive", "label": "1", "score": "0.882916271686554"}
{"logic": "( name ) , ( country ) , ( age ) that belongs to ( singer ) , ordered by ( ( age ) in descending order )", "text": "Show name, country, age for all singers ordered by age from the yongest to the oldest.", "remark": "logic", "label": "0", "score": "0.8042446374893188"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( population ) less than ( the minimum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) ) )", "text": "Which African countries have a smaller population than that of any country in Asia?", "remark": "positive", "label": "1", "score": "0.33138999342918396"}
{"logic": "( birth date of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( earnings of management ) in ascending order ) , limited to the top ( 1 )", "text": "What is the birth date of the poker player with the lowest earnings?", "remark": "positive", "label": "1", "score": "0.5863437056541443"}
{"logic": "( the minimum of ( loser rank ) ) that belongs to ( matches )", "text": "Find the average rank of losers in all matches.", "remark": "logic", "label": "0", "score": "0.038828685879707336"}
{"logic": "( the number of ( all items ) ) that belongs to ( orchestra ) , that have ( ( ( major record format ) equal to ( cd ) ) or ( ( major record format ) equal to ( dvd ) ) )", "text": "Count the number of orchestras that have CD or DVD as their record format.", "remark": "positive", "label": "1", "score": "0.8621970415115356"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( dutch ) )) r\" )", "text": "How many countries speak both English and Dutch?", "remark": "positive", "label": "1", "score": "0.7953063249588013"}
{"logic": "( the number of ( all items ) ) that belongs to ( continents )", "text": "How many continents are there?", "remark": "positive", "label": "1", "score": "0.9015259742736816"}
{"logic": "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )", "text": "Return the template type description of the template type with the code AD.", "remark": "positive", "label": "1", "score": "0.9361703991889954"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( indepyear ) greater than ( 1950 ) )", "text": "What are the names of all the countries that became independent after 1949?", "remark": "value int", "label": "0", "score": "0.03191731870174408"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( age ) in ascending order )", "text": "List the names of conductors in ascending order of age.", "remark": "positive", "label": "1", "score": "0.9155935645103455"}
{"logic": "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "What are the name, population, and life expectancy of the largest Asian country by land?", "remark": "positive", "label": "1", "score": "0.05325744301080704"}
{"logic": "( cost of treatment of likes ) , ( treatment type description of highschooler ) that belongs to ( ( treatments ) , and ( ( treatment types ) satisfied that ( ( treatment type code of likes ) equal to ( treatment type code of highschooler ) ) ) )", "text": "List the cost of each treatment and the corresponding treatment type code.", "remark": "value col", "label": "0", "score": "0.8275030851364136"}
{"logic": "( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the high schooler who has the greatest number of likes?", "remark": "positive", "label": "1", "score": "0.8228656649589539"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 6 ) )", "text": "How many cars has over 6 cylinders?", "remark": "positive", "label": "1", "score": "0.8298683762550354"}
{"logic": "( the average of ( transcript date ) ) that belongs to ( transcripts )", "text": "On average, when were the transcripts printed?", "remark": "positive", "label": "1", "score": "0.8872130513191223"}
{"logic": "( professional id of department ) , ( role code of department ) , ( first name of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "remark": "positive", "label": "1", "score": "0.8322541117668152"}
{"logic": "( manager name ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order ) , limited to the top ( 1 )", "text": "Find the manager name and district of the shop whose number of products is the largest.", "remark": "positive", "label": "1", "score": "0.8972352147102356"}
{"logic": "( lname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pet age of head ) equal to ( 3 ) ) and ( ( pettype of head ) equal to ( 'cat' ) ) )", "text": "Find the last name of the student who has a cat that is age 3.", "remark": "positive", "label": "1", "score": "0.9157159328460693"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( ben jones ) )", "text": "What are the names of all cartoons not directed by Ben Jones?", "remark": "logic", "label": "0", "score": "0.03297048062086105"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) , and ( ( airlines ) satisfied that ( ( uid of area code state ) equal to ( airline of likes ) ) ) ) , that have ( ( ( city of highschooler ) equal to ( aberdeen ) ) and ( ( airline of area code state ) equal to ( united airlines ) ) )", "text": "How many United Airlines flights come from City 'Aberdeen'?", "remark": "value col", "label": "0", "score": "0.8860119581222534"}
{"logic": "( model ) that belongs to ( car names ) , grouped by ( model ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What model has the least different versions?", "remark": "logic", "label": "0", "score": "0.03278982266783714"}
{"logic": "( the minimum of ( number products ) ) , ( the maximum of ( number products ) ) that belongs to ( shop )", "text": "What are the minimum and maximum number of products across all the shops?", "remark": "positive", "label": "1", "score": "0.9339754581451416"}
{"logic": "( name ) , ( birth date ) that belongs to ( people ) , ordered by ( ( name ) in ascending order )", "text": "List the names and birth dates of people in ascending alphabetical order of name.", "remark": "positive", "label": "1", "score": "0.9040808081626892"}
{"logic": "( nationality ) , ( the number of ( all items ) ) that belongs to ( people ) , grouped by ( nationality )", "text": "What are different nationalities of people and the corresponding number of people from each nation?", "remark": "positive", "label": "1", "score": "0.8734739422798157"}
{"logic": "( id of department ) , ( maker of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( id of department ) , ( maker of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) , and ( ( car names ) satisfied that ( ( model of management ) equal to ( model of head ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ))", "text": "Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker.", "remark": "positive", "label": "1", "score": "0.5698492527008057"}
{"logic": "( name ) , ( population ) , ( headofstate ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "What are the population of the country with the largest area?", "remark": "value col", "label": "0", "score": "0.03270568698644638"}
{"logic": "( template id ) that belongs to ( documents ) , grouped by ( template id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show ids for all templates that are used by more than three document.", "remark": "value int", "label": "0", "score": "0.03573295846581459"}
{"logic": "( the average of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the maximum weight for each pet type.", "remark": "logic", "label": "0", "score": "0.04019434005022049"}
{"logic": "( package option ) , ( series name ) that belongs to ( tv channel ) , that have ( ( hight definition tv ) equal to ( yes ) )", "text": "Find the package choice and series name of the TV channel that has high definition TV.", "remark": "positive", "label": "1", "score": "0.9159367680549622"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( cylinders of highschooler ) equal to ( 4 ) ) , ordered by ( ( horsepower of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "For all of the 8 cylinder cars, which model has the most horsepower?", "remark": "value int", "label": "0", "score": "0.041866663843393326"}
{"logic": "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the name and rank points of the winner who won the least times.", "remark": "logic", "label": "0", "score": "0.7002074122428894"}
{"logic": "( the minimum of ( loser rank ) ) that belongs to ( matches )", "text": "Find the highest rank of losers in all matches.", "remark": "positive", "label": "1", "score": "0.3137822449207306"}
{"logic": "( transcript date of highschooler ) , ( transcript id of likes ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of likes ) equal to ( transcript id of highschooler ) ) ) ) , grouped by ( transcript id of likes ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the date and id of the transcript with the most number of results?", "remark": "logic", "label": "0", "score": "0.8125843405723572"}
{"logic": "( the number of ( all items ) ) that belongs to ( singer )", "text": "How many singers are there?", "remark": "positive", "label": "1", "score": "0.8829459547996521"}
{"logic": "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )", "text": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "remark": "positive", "label": "1", "score": "0.9328027963638306"}
{"logic": "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )", "text": "Return the version numbers and template type codes of templates with a version number greater than 10.", "remark": "value int", "label": "0", "score": "0.03243480622768402"}
{"logic": "( weight ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 4 ) ) and ( ( year ) equal to ( 1974 ) ) ) , ordered by ( ( weight ) in ascending order ) , limited to the top ( 1 )", "text": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1985 ORDER BY Weight ASC LIMIT 1;", "remark": "value int", "label": "0", "score": "0.059549421072006226"}
{"logic": "( contestant number of likes ) , ( contestant name of likes ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) ) , grouped by ( contestant number of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the contestant numbers and names of the contestants who had at least three votes?", "remark": "value int", "label": "0", "score": "0.05228026211261749"}
{"logic": "( the average of ( winner rank ) ) that belongs to ( matches )", "text": "Find the average rank of winners in all matches.", "remark": "positive", "label": "1", "score": "0.9393783211708069"}
{"logic": "( make of management ) , ( year of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( year of department ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "What is the maker of the carr produced in the earliest year and what year was it?", "remark": "positive", "label": "1", "score": "0.8671825528144836"}
{"logic": "( the number of ( all items ) ) , ( country code ) that belongs to ( players ) , grouped by ( country code )", "text": "find the number of players for each country.", "remark": "positive", "label": "1", "score": "0.8964293003082275"}
{"logic": "( airportcode ) , ( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( anthony ) )", "text": "Give the airport code and airport name that is not corresponding to the city Anthony.", "remark": "logic", "label": "0", "score": "0.02923230268061161"}
{"logic": "( template type code of department ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template type code of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the code of the template type that is most commonly used in documents.", "remark": "positive", "label": "1", "score": "0.811060905456543"}
{"logic": "( area code of area code state ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) , and ( ( area code state ) satisfied that ( ( state of highschooler ) equal to ( state of area code state ) ) ) ) , that have ( ( contestant name of likes ) equal to ( 'tabatha gehling' ) ), and intersect with ( ( area code of area code state ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) , and ( ( area code state ) satisfied that ( ( state of highschooler ) equal to ( state of area code state ) ) ) ) , that have ( ( contestant name of likes ) equal to ( 'kelly clauss' ) ))", "text": "List the area codes in which voters voted neither for the contestant 'Tabatha Gehling'  nor the contestant 'Kelly Clauss'.", "remark": "logic", "label": "0", "score": "0.0661633089184761"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( republic ) )", "text": "How many countries have a republic as their form of government?", "remark": "positive", "label": "1", "score": "0.8838390111923218"}
{"logic": "( winner name ) , ( loser name ) that belongs to ( matches ) , ordered by ( ( minutes ) in descending order ) , limited to the top ( 1 )", "text": "find the names of loser and winner who played in the match with greatest number of minutes.", "remark": "positive", "label": "1", "score": "0.8839967250823975"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "How many different series and contents are listed in the TV Channel table?", "remark": "positive", "label": "1", "score": "0.8799818158149719"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) )", "text": "What are the names of poker players?", "remark": "positive", "label": "1", "score": "0.5923716425895691"}
{"logic": "( series name of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( title of highschooler ) equal to ( the rise of the blue beetle! ) )", "text": "What is the TV Channel that not shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "remark": "logic", "label": "0", "score": "0.04267892241477966"}
{"logic": "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )", "text": "What is the last transcript release date?", "remark": "positive", "label": "1", "score": "0.8648723363876343"}
{"logic": "( first name of department ) , ( name of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) )", "text": "List pairs of the owner's first name and the dogs's name.", "remark": "positive", "label": "1", "score": "0.8668524026870728"}
{"logic": "( mpg ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) ) , ordered by ( ( mpg ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum mpg of the cars that had 7 cylinders or that were produced before 1980?", "remark": "value int", "label": "0", "score": "0.03349684178829193"}
{"logic": "( contestant number of likes ) , ( contestant name of likes ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) ) , grouped by ( contestant number of likes ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "Of all the contestants who got voted, what is the name of the contestant who got most votes?", "remark": "logic", "label": "0", "score": "0.8529695868492126"}
{"logic": "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity for the stadium with lowest average attendance?", "remark": "logic", "label": "0", "score": "0.8639074563980103"}
{"logic": "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the language that is spoken in the most countries.", "remark": "positive", "label": "1", "score": "0.8085917830467224"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( singer_id ) not in ( ( singer id ) that belongs to ( song ) ) )", "text": "List the name of singers that do not have any song.", "remark": "positive", "label": "1", "score": "0.7989913821220398"}
{"logic": "( earnings ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order )", "text": "What are the earnings of poker players, ordered descending by value?", "remark": "positive", "label": "1", "score": "0.8229891061782837"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( aberdeen ) )", "text": "What are the names of airports in Aberdeen?", "remark": "positive", "label": "1", "score": "0.9181876182556152"}
{"logic": "( weight ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 4 ) ) and ( ( year ) equal to ( 1974 ) ) ) , ordered by ( ( weight ) in ascending order ) , limited to the top ( 1 )", "text": "What is the minimu weight of the car with 8 cylinders produced in 1974?", "remark": "positive", "label": "1", "score": "0.0381634384393692"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "Find the number of left handed winners who participated in the WTA Championships.", "remark": "positive", "label": "1", "score": "0.8953150510787964"}
{"logic": "( production code ) , ( channel ) that belongs to ( cartoon ) , ordered by ( ( original air date ) ) , limited to the top ( 1 )", "text": "Find the production code and channel of the most recently aired TV Series.", "remark": "value col", "label": "0", "score": "0.9067696928977966"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( headofstate of department ) equal to ( beatrix ) ) and ( ( isofficial of management ) equal to ( t ) ) )", "text": "What is the official language spoken in the country whose head of state is Beatrix?", "remark": "positive", "label": "1", "score": "0.914503812789917"}
{"logic": "( major record format ) that belongs to ( orchestra ) , grouped by ( major record format ) , ordered by ( ( the number of ( all items ) ) in ascending order )", "text": "What are the major record formats of orchestras, sorted by their frequency?", "remark": "positive", "label": "1", "score": "0.09278145432472229"}
{"logic": "( distinct ( winner name ) ) , ( winner rank ) that belongs to ( matches ) , ordered by ( ( winner age ) ) , limited to the top ( 3 )", "text": "What are the names and ranks of the three youngest winners across all matches?", "remark": "positive", "label": "1", "score": "0.8975157737731934"}
{"logic": "( the number of ( all items ) ) that belongs to ( paragraphs )", "text": "How many paragraphs in total?", "remark": "positive", "label": "1", "score": "0.8964473009109497"}
{"logic": "( id ) that belongs to ( highschooler ), and except that ( ( student id ) that belongs to ( friend ))", "text": "Show ids of all students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.8413177132606506"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( ahd ) )", "text": "Which airlines have a flight with source airport AHD?", "remark": "positive", "label": "1", "score": "0.8837876319885254"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( destairport of management ) equal to ( ahd ) )", "text": "Which airlines have a flight with destination airport AHD?", "remark": "positive", "label": "1", "score": "0.882384717464447"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 4 ) )", "text": "Which grades have 4 or less high schoolers?", "remark": "logic", "label": "0", "score": "0.036309029906988144"}
{"logic": "( the number of ( all items ) ) that belongs to ( votes ) , that have ( ( ( state ) equal to ( 'ny' ) ) or ( ( state ) equal to ( 'ca' ) ) )", "text": "What are the number of votes not from state 'NY' or 'CA'?", "remark": "logic", "label": "0", "score": "0.032370444387197495"}
{"logic": "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )", "text": "What is the continent name which Anguilla belongs to?", "remark": "positive", "label": "1", "score": "0.9381036162376404"}
{"logic": "( name ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( ( dog id ) that belongs to ( treatments ) , grouped by ( dog id ) , that have ( ( the sum of ( cost of treatment ) ) greater than ( 1000 ) ) ) ) )", "text": "What are the names of the dogs for which the owner spent more than 1000 for treatment?", "remark": "positive", "label": "1", "score": "0.06440558284521103"}
{"logic": "( distinct ( fname of department ) ) , ( age of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) )", "text": "What are the different first names and ages of the students who do have pets?", "remark": "positive", "label": "1", "score": "0.7607064247131348"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( city of highschooler ) equal to ( aberdeen ) )", "text": "Return the number of flights arriving in Aberdeen.", "remark": "logic", "label": "0", "score": "0.7905787229537964"}
{"logic": "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )", "text": "Give the city and country for the Alton airport.", "remark": "positive", "label": "1", "score": "0.9143525958061218"}
{"logic": "( department name of management ) , ( department id of department ) that belongs to ( ( degree programs ) , and ( ( departments ) satisfied that ( ( department id of department ) equal to ( department id of management ) ) ) ) , grouped by ( department id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "For each department id, what is the name of the department with the most number of degrees?", "remark": "positive", "label": "1", "score": "0.8610002398490906"}
{"logic": "( distinct ( fname of likes ) ) , ( age of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) )", "text": "Find the first name of students who have a pet.", "remark": "value col", "label": "0", "score": "0.10676027834415436"}
{"logic": "( pixel aspect ratio par ) , ( country ) that belongs to ( tv channel ) , that have ( ( language ) not equal to ( 'english' ) )", "text": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "remark": "positive", "label": "1", "score": "0.8035305142402649"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )", "text": "How many friends does each student have?", "remark": "positive", "label": "1", "score": "0.8293098211288452"}
{"logic": "( population ) , ( region ) that belongs to ( country ) , that have ( ( name ) equal to ( angola ) )", "text": "What are the region and population of Angola?", "remark": "positive", "label": "1", "score": "0.9211724400520325"}
{"logic": "( distinct ( region of department ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) or ( ( language of management ) equal to ( dutch ) ) )", "text": "Which regions speak Dutch or English?", "remark": "positive", "label": "1", "score": "0.793071985244751"}
{"logic": "( distinct ( winner name ) ) , ( winner rank ) that belongs to ( matches ) , ordered by ( ( winner age ) ) , limited to the top ( 3 )", "text": "Find the name and rank of the 3 youngest winners across all matches.", "remark": "positive", "label": "1", "score": "0.908551812171936"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches ) , that have ( ( ( year ) equal to ( 2013 ) ) or ( ( year ) equal to ( 2016 ) ) )", "text": "How many matches were played in 2013 or 2016?", "remark": "positive", "label": "1", "score": "0.8526869416236877"}
{"logic": "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( chinese ) )", "text": "How many continents do not speak Chinese?", "remark": "logic", "label": "0", "score": "0.027811069041490555"}
{"logic": "( name of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) , and ( ( museum ) satisfied that ( ( museum id of border info ) equal to ( museum id of catalog structure ) ) ) ) , that have ( ( open year of border info ) less than ( 2009 ) ), and intersect with ( ( name of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) , and ( ( museum ) satisfied that ( ( museum id of border info ) equal to ( museum id of catalog structure ) ) ) ) , that have ( ( open year of border info ) greater than ( 2011 ) ))", "text": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "remark": "positive", "label": "1", "score": "0.8018091320991516"}
{"logic": "( fname of department ) , ( sex of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , grouped by ( stuid of department ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What is the first name and gender of the all the students who have more than one pet?", "remark": "positive", "label": "1", "score": "0.8678567409515381"}
{"logic": "( tourney name ) that belongs to ( matches ) , grouped by ( tourney name ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "What are the names of tournaments that have more than 10 matches?", "remark": "positive", "label": "1", "score": "0.8986756801605225"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "List the first and last name of all players in the order of birth date.", "remark": "positive", "label": "1", "score": "0.9082193374633789"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( likes ) , grouped by ( student id )", "text": "Count the number of likes for each student name.", "remark": "value col", "label": "0", "score": "0.0396670401096344"}
{"logic": "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )", "text": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.", "remark": "positive", "label": "1", "score": "0.8815668225288391"}
{"logic": "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )", "text": "Which continent is USA in?", "remark": "value str", "label": "0", "score": "0.8240243792533875"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( name of department ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "How many official languages does Afghanistan have?", "remark": "positive", "label": "1", "score": "0.8018038272857666"}
{"logic": "( the number of ( all items ) ) , ( year ) that belongs to ( matches ) , grouped by ( year )", "text": "How many matches in average were played in each year?", "remark": "logic", "label": "0", "score": "0.033167872577905655"}
{"logic": "( city of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of department ) equal to ( destairport of management ) ) ) ) , grouped by ( city of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has most number of arriving flights?", "remark": "positive", "label": "1", "score": "0.35551685094833374"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "Which Asian countries have a population that is larger than any country in Africa?", "remark": "positive", "label": "1", "score": "0.6199591755867004"}
{"logic": "( the number of ( all items ) ) that belongs to ( concert ) , that have ( ( ( year ) equal to ( 2014 ) ) or ( ( year ) equal to ( 2015 ) ) )", "text": "How many concerts are there in year 2014 or 2015?", "remark": "positive", "label": "1", "score": "0.845240592956543"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "What are the languages used by the least number of TV Channels and how many channels use it?", "remark": "positive", "label": "1", "score": "0.5050686001777649"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the singer who is worth the most?", "remark": "positive", "label": "1", "score": "0.8578071594238281"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( governmentform of likes ) equal to ( republic ) ) , grouped by ( language of highschooler ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "text": "What languages are only used by two countries with a republic government?", "remark": "value int", "label": "0", "score": "0.1359783560037613"}
{"logic": "( countryname of likes ) , ( countryid of likes ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of likes ) equal to ( country of highschooler ) ) ) ) , grouped by ( countryid of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "What are the countries having at most one car maker? List name and id.", "remark": "logic", "label": "0", "score": "0.3328353464603424"}
{"logic": "( grade ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "What grade is Kyle in?", "remark": "positive", "label": "1", "score": "0.9196590781211853"}
{"logic": "( the number of ( all items ) ) that belongs to ( orchestra ) , that have ( ( ( major record format ) equal to ( cd ) ) or ( ( major record format ) equal to ( dvd ) ) )", "text": "Count the number of orchestras that have CD as their record format.", "remark": "value str", "label": "0", "score": "0.7360476851463318"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "Which airlines have less than 100 flights?", "remark": "value int", "label": "0", "score": "0.036900557577610016"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )", "text": "List names of conductors in ascending order of years of work.", "remark": "logic", "label": "0", "score": "0.03561418130993843"}
{"logic": "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )", "text": "Find the role, street, city and state of the professionals living in a city that does not contain the substring 'West'.", "remark": "logic", "label": "0", "score": "0.029777798801660538"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "remark": "positive", "label": "1", "score": "0.9433079957962036"}
{"logic": "( professional id of department ) , ( cell number of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "remark": "positive", "label": "1", "score": "0.8101846575737"}
{"logic": "( series name of department ) , ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( directed by of management ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of department ) , ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( directed by of management ) equal to ( 'ben jones' ) ))", "text": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?", "remark": "positive", "label": "1", "score": "0.8794821500778198"}
{"logic": "( name ) , ( date ) that belongs to ( battle )", "text": "List the name, date and result of each battle.", "remark": "positive", "label": "1", "score": "0.08542332053184509"}
{"logic": "( document id ) , ( template id ) , ( document description ) that belongs to ( documents ) , that have ( ( document name ) equal to ( robbin cv ) )", "text": "What is the document id, template id and description for document not named \"Robbin CV\"?", "remark": "logic", "label": "0", "score": "0.03446195647120476"}
{"logic": "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))", "text": "Find the first names that are used for professionals or owners but are not used as dog names.", "remark": "positive", "label": "1", "score": "0.7807788848876953"}
{"logic": "( the number of ( all items ) ) that belongs to ( transcripts )", "text": "What are transcripts listed?", "remark": "logic", "label": "0", "score": "0.3080598711967468"}
{"logic": "( package option ) , ( series name ) that belongs to ( tv channel ) , that have ( ( hight definition tv ) equal to ( yes ) )", "text": "Find the package choice and series name of the TV channel that does not have high definition TV.", "remark": "logic", "label": "0", "score": "0.029230359941720963"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "Who is the latest graduate of the school? List the first name, middle name and last name.", "remark": "logic", "label": "0", "score": "0.849530041217804"}
{"logic": "( the average of ( injured ) ) that belongs to ( death )", "text": "What is the minimum number of injuries caused each time?", "remark": "value col", "label": "0", "score": "0.039899684488773346"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial of management ) equal to ( t ) ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( french ) ) and ( ( isofficial of management ) equal to ( t ) ) ))", "text": "What are the names of nations where both English and French are official languages?", "remark": "positive", "label": "1", "score": "0.774435818195343"}
{"logic": "all items that belongs to ( hiring )", "text": "Give me all the information about hiring.", "remark": "positive", "label": "1", "score": "0.9337232708930969"}
{"logic": "( the number of ( distinct ( dog id ) ) ) that belongs to ( treatments )", "text": "Count the number of dogs that went through a treatment.", "remark": "positive", "label": "1", "score": "0.8346650004386902"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler ) , that have ( ( ( grade ) equal to ( 9 ) ) or ( ( grade ) equal to ( 10 ) ) )", "text": "Count the number of high schoolers in grades 8 or 10.", "remark": "value int", "label": "0", "score": "0.03023448958992958"}
{"logic": "( the sum of ( bonus ) ) that belongs to ( evaluation )", "text": "What is total bonus given in all evaluations?", "remark": "positive", "label": "1", "score": "0.9359285831451416"}
