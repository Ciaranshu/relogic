{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of cars produced before 1980?", "remark": "positive", "label": "1", "score": "0.4414791166782379"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series names of tv channels that have an episode \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.5219554305076599"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series names and distinct content for each tv channel?", "remark": "negative", "label": "0", "score": "0.4292602837085724"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights does the airline \"United Airlines\" belong to?", "remark": "negative", "label": "0", "score": "0.40684372186660767"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "is the model of the car with the largest number of cylinders and 4 horsepower?", "remark": "negative", "label": "0", "score": "0.4226100444793701"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who like friends.", "remark": "negative", "label": "0", "score": "0.5037623047828674"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "the number of distinct current addresses of students.", "remark": "positive", "label": "1", "score": "0.4266757071018219"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have a friend.", "remark": "positive", "label": "1", "score": "0.5141313076019287"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "the distinct countries of singers who are older than 20.", "remark": "positive", "label": "1", "score": "0.42874693870544434"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who are friends with some students?", "remark": "negative", "label": "0", "score": "0.4725642502307892"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of all students who live in the country of Haiti and have cell phone number '09700166582'?", "remark": "negative", "label": "0", "score": "0.47694870829582214"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that do not have source flights in CV or apg?", "remark": "negative", "label": "0", "score": "0.519935667514801"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population", "remark": "negative", "label": "0", "score": "0.37560999393463135"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "are there more than two languages?", "remark": "negative", "label": "0", "score": "0.3435567021369934"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "is the airline with abbreviationUAL?", "remark": "negative", "label": "0", "score": "0.43924206495285034"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car that was used the most in the last year?", "remark": "negative", "label": "0", "score": "0.4833458364009857"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in the country of 'Haiti' and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.5304667353630066"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are official Chinese cities and are in the Asian region?", "remark": "negative", "label": "0", "score": "0.45163553953170776"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the id and summary name of the most popular degree?", "remark": "negative", "label": "0", "score": "0.3986035883426666"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models whose weight is less than 3500 and whose full name is not 'ford motor company'.", "remark": "negative", "label": "0", "score": "0.5364720225334167"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline and abbreviation for all airlines in country \"USA\".", "remark": "negative", "label": "0", "score": "0.4888850152492523"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids for templates whose type code is \"PS\" or whose type code is \"pt\"?", "remark": "negative", "label": "0", "score": "0.53212970495224"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct country of singers who are older than 20?", "remark": "positive", "label": "1", "score": "0.43402475118637085"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the most popular document template?", "remark": "positive", "label": "1", "score": "0.4679202139377594"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends with likes.", "remark": "negative", "label": "0", "score": "0.4710805118083954"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights are operated from the airport ato?", "remark": "negative", "label": "0", "score": "0.4683452844619751"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "are all the series from A Love of a Lifetime on TV?", "remark": "negative", "label": "0", "score": "0.4095873534679413"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "is the model of the car with the most horsepower, with the most cylinders?", "remark": "negative", "label": "0", "score": "0.4265437722206116"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car that has the highest accelerate?", "remark": "negative", "label": "0", "score": "0.4597942531108856"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of different players who won matches with WTA Championships and winner with left hand.", "remark": "positive", "label": "1", "score": "0.5036866068840027"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does jetblue airways operate?", "remark": "negative", "label": "0", "score": "0.4208680987358093"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "make and year of the car that has the smallest data data.", "remark": "negative", "label": "0", "score": "0.5175123810768127"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of airlines that have less than 200 flight hours.", "remark": "negative", "label": "0", "score": "0.4829278290271759"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models that are not produced by the company whose weight is less than 3500 and whose full name is not 'Ford Motor Company'.", "remark": "negative", "label": "0", "score": "0.5209219455718994"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the country name and id of the country that has at least 1 car maker.", "remark": "positive", "label": "1", "score": "0.4977729916572571"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from Ashley to Aberdeen?", "remark": "negative", "label": "0", "score": "0.5028724074363708"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the airline and the abbreviation of the airline whose country is \"USA\"?", "remark": "negative", "label": "0", "score": "0.46473968029022217"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree that has the most students enrolled.", "remark": "positive", "label": "1", "score": "0.497290700674057"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who don't have any friend?", "remark": "positive", "label": "1", "score": "0.5225006341934204"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "names and ids of countries that have at least 1 car maker?", "remark": "positive", "label": "1", "score": "0.4621879756450653"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from ashley to Aberdeen", "remark": "negative", "label": "0", "score": "0.4846201539039612"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template that has the description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.523616373538971"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are English-speaking and speak the language of country asia.", "remark": "negative", "label": "0", "score": "0.49906125664711"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type of the template that has been used the most times.", "remark": "positive", "label": "1", "score": "0.5156940817832947"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses they arrange.", "remark": "positive", "label": "1", "score": "0.5165544748306274"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countryid and name of the countries that have more than 3 car makers and have more than 3 models.", "remark": "negative", "label": "0", "score": "0.5370489954948425"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "the number of flights that are operated by United Airlines and end at an airport called \"ASY\".", "remark": "positive", "label": "1", "score": "0.48881641030311584"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "country code and first name of the players who won both the Wta Championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.5225648880004883"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that are associated with flights from CVO but not apg?", "remark": "positive", "label": "1", "score": "0.5322858691215515"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the number of flights for all airlines with less than 200.", "remark": "negative", "label": "0", "score": "0.49126192927360535"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "all distinct countries that have singers older than 20?", "remark": "positive", "label": "1", "score": "0.42807477712631226"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "id, name, age for all visitors who visited more than 1.", "remark": "negative", "label": "0", "score": "0.5035730600357056"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "number of distinct winners of matches in the Wta championships with winner hand L.", "remark": "positive", "label": "1", "score": "0.5255569815635681"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are English-speaking and speak the language of country asia.", "remark": "negative", "label": "0", "score": "0.49906107783317566"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "3 countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.4898379445075989"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the students who have a pet with type 'dog' but not cat?", "remark": "positive", "label": "1", "score": "0.4885484278202057"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents with type code PVT.", "remark": "negative", "label": "0", "score": "0.4829312264919281"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "id of the car whose name is AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.5170985460281372"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "are the names and id of the countries that have at least one vehicle?", "remark": "negative", "label": "0", "score": "0.39184921979904175"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "are the different models of cars whose weight is lower than 3500 and whose full name is not 'Ford Motor Company'?", "remark": "negative", "label": "0", "score": "0.417605459690094"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "all airlines that have less than 200 flights.", "remark": "positive", "label": "1", "score": "0.4878618121147156"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "the number of flights that go to the airport ato.", "remark": "positive", "label": "1", "score": "0.5146008729934692"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "all the major cities in China that are official language of the language 'Chinese'.", "remark": "negative", "label": "0", "score": "0.5190914273262024"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left school most recently?", "remark": "negative", "label": "0", "score": "0.48884040117263794"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current addresses of students.", "remark": "positive", "label": "1", "score": "0.4379430413246155"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "number of flights operated by airline \"United Airlines\" and \"Asy Airlines\".", "remark": "negative", "label": "0", "score": "0.48836371302604675"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and country name of countries that have more than 3 models or have more than 3 models.", "remark": "negative", "label": "0", "score": "0.5235992670059204"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, last name, and the number of students enrolled in the most programs?", "remark": "negative", "label": "0", "score": "0.4471636712551117"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "the countries where the airline JetBlue Airways is based.", "remark": "positive", "label": "1", "score": "0.4871135652065277"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "many car companies are there in each country?", "remark": "negative", "label": "0", "score": "0.41517943143844604"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "name and last name of all players ordered by birth date.", "remark": "negative", "label": "0", "score": "0.5562384128570557"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population in africa", "remark": "negative", "label": "0", "score": "0.4364926218986511"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "is the number of flights from airports in city Ashley and Aberdeen?", "remark": "negative", "label": "0", "score": "0.42562225461006165"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "number of flights that are from ato airport?", "remark": "negative", "label": "0", "score": "0.47366440296173096"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "the number of students living in the same address.", "remark": "negative", "label": "0", "score": "0.44083136320114136"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the template type code \"PPT\" or \"PPT\".", "remark": "negative", "label": "0", "score": "0.5294679403305054"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left school most recently.", "remark": "negative", "label": "0", "score": "0.5356602668762207"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the type codes of templates that are not used by any document.", "remark": "positive", "label": "1", "score": "0.4821460247039795"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of all cars from before 1980.", "remark": "negative", "label": "0", "score": "0.44714927673339844"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the name of the car that was made in the smallest year of data.", "remark": "negative", "label": "0", "score": "0.5137460231781006"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "the country of the airline Jetblue Airlines?", "remark": "positive", "label": "1", "score": "0.46982836723327637"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of players who won both tourney name 'WTA Championships' and winner hand 'L'.", "remark": "positive", "label": "1", "score": "0.5128120183944702"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "is the employee who has the highest score in all evaluations?", "remark": "negative", "label": "0", "score": "0.40129193663597107"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of distinct winner names for all tourney names with winner 'L'.", "remark": "negative", "label": "0", "score": "0.5247488617897034"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the youngest student.", "remark": "negative", "label": "0", "score": "0.49828487634658813"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and injured by ships caused by tonnage smaller than 't'?", "remark": "negative", "label": "0", "score": "0.4467189908027649"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countries that have more than 3 car makers and which have more than 3 models?", "remark": "negative", "label": "0", "score": "0.5005324482917786"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights with destination airport \"ATO\"", "remark": "negative", "label": "0", "score": "0.5496845841407776"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the code of the template type that is not used in any documents.", "remark": "positive", "label": "1", "score": "0.5303289294242859"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "is the id of the car with the model 'Volvo' that accelerates the most?", "remark": "negative", "label": "0", "score": "0.4317915439605713"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents with type code 'PPT'", "remark": "positive", "label": "1", "score": "0.5330790877342224"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current address ids of students.", "remark": "positive", "label": "1", "score": "0.4518010914325714"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series names and distinct content for each tv channel?", "remark": "negative", "label": "0", "score": "0.4292602837085724"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerations of the cars whose make is AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.517972469329834"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first name of students who live in country Haiti and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.5284954309463501"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "mpg of the car with cylinders equal to 8 or before 1980.", "remark": "positive", "label": "1", "score": "0.5306850075721741"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "country of the airline JetBlue Airlines?", "remark": "positive", "label": "1", "score": "0.4841301441192627"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights does United Airlines have?", "remark": "negative", "label": "0", "score": "0.42812904715538025"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series names and content?", "remark": "negative", "label": "0", "score": "0.4308573305606842"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a dog but not a cat?", "remark": "positive", "label": "1", "score": "0.4934642016887665"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline and abbreviation for airlines from country \"USA\".", "remark": "negative", "label": "0", "score": "0.48693904280662537"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "distinct names of cities that are official in the language of Chinese and continent asia?", "remark": "positive", "label": "1", "score": "0.48364099860191345"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "are the killed and injured of ships with tonnage T2?", "remark": "negative", "label": "0", "score": "0.379527747631073"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, and last name has the least number of students left.", "remark": "negative", "label": "0", "score": "0.5091310143470764"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "distinct cities in China where the language is English and the continent is asia?", "remark": "negative", "label": "0", "score": "0.46701085567474365"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left school most recently.", "remark": "negative", "label": "0", "score": "0.5356602072715759"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of friends who have likes and likes.", "remark": "negative", "label": "0", "score": "0.49834489822387695"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "the series name of the channel that has an episode titled \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.5144330859184265"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct models whose weight is less than 3500 and whose full name is not 'Ford Motor Company'.", "remark": "negative", "label": "0", "score": "0.5257909893989563"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car that was used the most in the last year?", "remark": "negative", "label": "0", "score": "0.4833459258079529"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are official Chinese cities in the \"continent\".", "remark": "negative", "label": "0", "score": "0.5157932639122009"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car that has the highest horsepower?", "remark": "negative", "label": "0", "score": "0.4883407950401306"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program that has the most student enrolment.", "remark": "positive", "label": "1", "score": "0.493187814950943"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries are \"Afghanistan\" official?", "remark": "negative", "label": "0", "score": "0.43958908319473267"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "me the mpg of the car with 8 or more wheels in 1980, which is the highest mpg before 1980.", "remark": "negative", "label": "0", "score": "0.5713111758232117"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages that are used by more than 2 countries.", "remark": "negative", "label": "0", "score": "0.4528980255126953"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights to ashley and Aberdeen?", "remark": "negative", "label": "0", "score": "0.4910453259944916"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "are the cylinders of the car with the model with the highest accelerate?", "remark": "negative", "label": "0", "score": "0.41248753666877747"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players, ordered by birth date.", "remark": "positive", "label": "1", "score": "0.5376028418540955"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name and age of the visitor who made more than one visit.", "remark": "positive", "label": "1", "score": "0.509965181350708"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "are the names of airlines that have more than 200 flights?", "remark": "negative", "label": "0", "score": "0.3835838735103607"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerate of the car with make AMC hornet sportabout (sw).", "remark": "positive", "label": "1", "score": "0.5962195992469788"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many different addresses do students live in?", "remark": "negative", "label": "0", "score": "0.4052131474018097"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who are living in country 'Haiti' and have cell phone number '09700166582'?", "remark": "negative", "label": "0", "score": "0.4980402886867523"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "all the major cities in China that are official language of the language 'Chinese'.", "remark": "negative", "label": "0", "score": "0.5190914869308472"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "the accelerate data of the car named AMC hornet sportabout (sw).", "remark": "positive", "label": "1", "score": "0.5639321208000183"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the number of cars produced by each country", "remark": "negative", "label": "0", "score": "0.4046347737312317"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct addresses of students?", "remark": "negative", "label": "0", "score": "0.43574702739715576"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of the students who have friends who have likes.", "remark": "positive", "label": "1", "score": "0.49499061703681946"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the names of cities that are official Chinese cities in the \"continent\" of Asia.", "remark": "negative", "label": "0", "score": "0.5090407133102417"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the average gas mileage of the car with 8 or more cylinders in the year before 1980?", "remark": "negative", "label": "0", "score": "0.425519198179245"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the cylinders equal to 8 or less after 1980?", "remark": "negative", "label": "0", "score": "0.43209123611450195"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left the school most recently?", "remark": "negative", "label": "0", "score": "0.4963555932044983"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "country code and first name of players who won both the WTA Championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.5174075365066528"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the template that has been used the most.", "remark": "positive", "label": "1", "score": "0.5274128913879395"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of teachers and the number of courses they arrange.", "remark": "positive", "label": "1", "score": "0.5278114676475525"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program that has the most student enrolment?", "remark": "positive", "label": "1", "score": "0.4515068829059601"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member working after 2010.", "remark": "negative", "label": "0", "score": "0.5264282822608948"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players, ordered by their birth date.", "remark": "positive", "label": "1", "score": "0.5368108153343201"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car with the most horsepower?", "remark": "negative", "label": "0", "score": "0.49316298961639404"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program with the most student enrolment.", "remark": "positive", "label": "1", "score": "0.49167484045028687"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses arranged by that teacher.", "remark": "positive", "label": "1", "score": "0.5279638767242432"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages in each country and name of country that has more than 2 languages.", "remark": "positive", "label": "1", "score": "0.47011831402778625"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the acceleration data of the car with the name AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.4496653079986572"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are produced in the country ofusa", "remark": "negative", "label": "0", "score": "0.4903453290462494"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest bonus.", "remark": "positive", "label": "1", "score": "0.529331386089325"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "number of distinct winners of the tourney named 'Wta championships'.", "remark": "negative", "label": "0", "score": "0.5331459045410156"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of the player who won both the WTA Championships and the Australian Open?", "remark": "positive", "label": "1", "score": "0.5180785059928894"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who don't have any friends.", "remark": "positive", "label": "1", "score": "0.5332666635513306"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest number of evaluations and gets the highest bonus.", "remark": "negative", "label": "0", "score": "0.5389475226402283"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "the ids of all students who have friends who have likes?", "remark": "negative", "label": "0", "score": "0.4492013454437256"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "number of documents that have type code 'PPT'?", "remark": "positive", "label": "1", "score": "0.45739516615867615"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models that are not produced by the company whose weight is less than 3500 and whose full name is not 'Ford Motor Company'.", "remark": "negative", "label": "0", "score": "0.5209219455718994"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights does the airline \"United Airlines\" belong to?", "remark": "negative", "label": "0", "score": "0.4068438708782196"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents that have the type code 'PPT'?", "remark": "positive", "label": "1", "score": "0.47611305117607117"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of distinct series and the number of different content.", "remark": "negative", "label": "0", "score": "0.46189871430397034"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average number of horsepower of the cars produced before 1980", "remark": "negative", "label": "0", "score": "0.40582871437072754"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are made by the country of origin?", "remark": "negative", "label": "0", "score": "0.41239988803863525"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars whose full name is 'General Motors' or have a weight greater than 3500?", "remark": "positive", "label": "1", "score": "0.493710994720459"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "the mpg of the car with the cylinders equal to 8 or less before 1980?", "remark": "negative", "label": "0", "score": "0.5028719902038574"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "the number of distinct students' current addresses.", "remark": "positive", "label": "1", "score": "0.4245878756046295"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "are the make and year of the car that was used the most in the car data?", "remark": "negative", "label": "0", "score": "0.4074811637401581"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct names of the models whose weight is below 3500 and whose full name is not \"Ford Motor Company\".", "remark": "negative", "label": "0", "score": "0.5052171945571899"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the airline name and abbreviation for all flights from country \"USA\".", "remark": "negative", "label": "0", "score": "0.4950243830680847"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "are the killed and injured of ships with tonnage T2?", "remark": "negative", "label": "0", "score": "0.3795276880264282"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have any friends?", "remark": "positive", "label": "1", "score": "0.4890159070491791"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many languages does Afghanistan have?", "remark": "negative", "label": "0", "score": "0.457364946603775"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member.", "remark": "negative", "label": "0", "score": "0.5045195817947388"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.47222983837127686"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in the country of Haiti and have cell phone number 09700166582?", "remark": "negative", "label": "0", "score": "0.45814743638038635"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.5357047319412231"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id and type code of the template that has the most documents?", "remark": "negative", "label": "0", "score": "0.46641042828559875"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of all teachers and the number of courses arranged by each teacher.", "remark": "positive", "label": "1", "score": "0.5421145558357239"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and number of students enrolled in the largest number of programs.", "remark": "negative", "label": "0", "score": "0.4813632071018219"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "are the names of museums that have a staff of more than the minimum number of staff for any museum opened after 2010?", "remark": "negative", "label": "0", "score": "0.39865633845329285"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "type codes that do not belong to any document.", "remark": "positive", "label": "1", "score": "0.5153356790542603"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the type code of the template that is not used in any document.", "remark": "positive", "label": "1", "score": "0.5225101709365845"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "models whose weight is less than 3500 and whose full name is not 'Ford Motor Company'?", "remark": "negative", "label": "0", "score": "0.48439404368400574"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template type described as Presentation?", "remark": "positive", "label": "1", "score": "0.47522374987602234"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "distinct names of cities that are official in the language of Chinese and continent asia.", "remark": "positive", "label": "1", "score": "0.5464253425598145"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who won both the WTA Championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.5679383873939514"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "airlines that have less than 200 flights.", "remark": "positive", "label": "1", "score": "0.4826186001300812"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "number of countries that have an official language?", "remark": "negative", "label": "0", "score": "0.43645983934402466"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars that have full name 'General Motors' or have weight greater than 3500?", "remark": "positive", "label": "1", "score": "0.4832954704761505"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name and age of the visitor who made more than one visit?", "remark": "positive", "label": "1", "score": "0.4760581851005554"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerate of the cars whose name is AMC hornet sportabout (sw)?", "remark": "positive", "label": "1", "score": "0.5583789348602295"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does jetblue airways belong to?", "remark": "negative", "label": "0", "score": "0.40592360496520996"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of distinct series name and the number of distinct content.", "remark": "negative", "label": "0", "score": "0.472868412733078"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the student with the most enrollments. List the student ID, middle name, last name, and the number of enrollments.", "remark": "negative", "label": "0", "score": "0.5709875226020813"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "program id and summary name for the degree with the most student enrolment?", "remark": "positive", "label": "1", "score": "0.45327049493789673"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "average horsepower of cars built before 1980.", "remark": "positive", "label": "1", "score": "0.482347309589386"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the airports that have both a CVO and a APG flight but no APG flight.", "remark": "negative", "label": "0", "score": "0.5404968857765198"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the names of museums that have more than one staff member after opening year.", "remark": "negative", "label": "0", "score": "0.49846917390823364"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct models of cars whose weight is less than 3500 and whose full name is not \"ford motor company\".", "remark": "negative", "label": "0", "score": "0.517585277557373"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who won both the Wta Championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.512879490852356"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "are the countries of the airlines JetBlue Airways?", "remark": "negative", "label": "0", "score": "0.43402042984962463"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "the acceleration times of all the cars that are involved in the amc hornet sportabout.", "remark": "negative", "label": "0", "score": "0.4918743371963501"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "names of all airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.47442564368247986"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "the number of languages that are official in Afghanistan.", "remark": "positive", "label": "1", "score": "0.4840322434902191"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.5058830976486206"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "country code and first name of the players who won both the WTA championships and Australian open.", "remark": "positive", "label": "1", "score": "0.5809599757194519"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id, middle name, last name, and the number of students enrolled in the school.", "remark": "negative", "label": "0", "score": "0.49278515577316284"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the template type code \"PPT\" or type code \"PPT\"?", "remark": "negative", "label": "0", "score": "0.47969797253608704"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of the cars that were produced before 1980.", "remark": "positive", "label": "1", "score": "0.4411770701408386"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many languages are there in Afghanistan and is official?", "remark": "negative", "label": "0", "score": "0.45188993215560913"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the id and type code of the most popular document?", "remark": "negative", "label": "0", "score": "0.4088077247142792"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "the country of the airline Jetblue Airlines?", "remark": "positive", "label": "1", "score": "0.4698285162448883"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "name of each teacher and the number of courses arranged by each teacher.", "remark": "positive", "label": "1", "score": "0.5469452738761902"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "number of documents that have the type code 'PPT'.", "remark": "positive", "label": "1", "score": "0.5088204145431519"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of different series and series and the number of different content.", "remark": "negative", "label": "0", "score": "0.4633629620075226"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car with the most horsepower.", "remark": "negative", "label": "0", "score": "0.5269383788108826"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids for friends and liked ids.", "remark": "negative", "label": "0", "score": "0.45378777384757996"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the name of museums that have more than one staff member and which have more than one staff member.", "remark": "negative", "label": "0", "score": "0.5097158551216125"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "the model of the car with the most horsepower in cylinders?", "remark": "negative", "label": "0", "score": "0.4878902733325958"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population of asia", "remark": "negative", "label": "0", "score": "0.46342065930366516"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of all cars that were produced before 1980.", "remark": "positive", "label": "1", "score": "0.4366942346096039"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "country does jetblue airways belong to?", "remark": "negative", "label": "0", "score": "0.42275962233543396"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct models of cars that have either a full name 'General Motors' or a weight of more than 3500.", "remark": "positive", "label": "1", "score": "0.512513279914856"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age for all visitors who visited more than one time.", "remark": "positive", "label": "1", "score": "0.505646824836731"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "models that are either 'General Motors' or have weight greater than 3500?", "remark": "negative", "label": "0", "score": "0.4952339231967926"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the type codes of the templates that are not used by any document", "remark": "positive", "label": "1", "score": "0.3982475697994232"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from ashley to Aberdeen.", "remark": "negative", "label": "0", "score": "0.5273544788360596"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are not friends with any other student.", "remark": "positive", "label": "1", "score": "0.5149015188217163"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "many documents have the type code 'PPT' in them?", "remark": "negative", "label": "0", "score": "0.43997493386268616"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "many documents have the type code 'PPT' in them?", "remark": "negative", "label": "0", "score": "0.439974844455719"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights go to the ato airport?", "remark": "negative", "label": "0", "score": "0.4771827757358551"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest number of bonuses?", "remark": "positive", "label": "1", "score": "0.49768123030662537"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from Ashley to Aberdeen?", "remark": "negative", "label": "0", "score": "0.5028722286224365"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "the number of models produced by the country named USA", "remark": "positive", "label": "1", "score": "0.42473965883255005"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the number of flights for all airlines with number less than 200?", "remark": "negative", "label": "0", "score": "0.46577149629592896"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the template with the most documents?", "remark": "positive", "label": "1", "score": "0.4793562591075897"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers older than 20?", "remark": "positive", "label": "1", "score": "0.4263947904109955"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first name of students who live in country 'haiti' and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.5480293035507202"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "ids of the templates that have type description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.5282894372940063"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have both a friend and a student who has a friend.", "remark": "negative", "label": "0", "score": "0.4719969928264618"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "many distinct winners of the tourney named Wta championships?", "remark": "negative", "label": "0", "score": "0.4860968291759491"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countries have more than 3 car makers and have more than 3 models? List the countryid and name.", "remark": "negative", "label": "0", "score": "0.5498024821281433"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries that have singers older than 20?", "remark": "positive", "label": "1", "score": "0.423029363155365"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids of templates whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.5289769768714905"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age of the visitors who visited more than 1 place.", "remark": "negative", "label": "0", "score": "0.5053874850273132"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "many languages are there in the country that has more than 2 languages?", "remark": "negative", "label": "0", "score": "0.380176305770874"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured of ships with tonnage T2.", "remark": "negative", "label": "0", "score": "0.47048625349998474"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series are on TV Channel A Love of a Lifetime?", "remark": "negative", "label": "0", "score": "0.48732149600982666"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and dislikes.", "remark": "negative", "label": "0", "score": "0.47278156876564026"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car that has the highest accelerate?", "remark": "negative", "label": "0", "score": "0.4597942531108856"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages that are used by more than one country.", "remark": "negative", "label": "0", "score": "0.4486427903175354"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who have likes?", "remark": "negative", "label": "0", "score": "0.49879857897758484"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the country name and id of the country that has at least 1 car maker.", "remark": "positive", "label": "1", "score": "0.49777305126190186"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of airlines that have more than 200 flights.", "remark": "negative", "label": "0", "score": "0.49277839064598083"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "ids of the templates described as presentation.", "remark": "positive", "label": "1", "score": "0.5331366062164307"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program with the most student enrolment?", "remark": "positive", "label": "1", "score": "0.449933797121048"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "the series name of the channel that has an episode titled \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.5144332647323608"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers who are older than 20.", "remark": "positive", "label": "1", "score": "0.42407500743865967"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the code of the template type that is not used in any document", "remark": "positive", "label": "1", "score": "0.4584309458732605"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent of countries and the number of car makers on each continent.", "remark": "negative", "label": "0", "score": "0.4883206784725189"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the least number of cylinders that was produced before 1980 or before 1980?", "remark": "negative", "label": "0", "score": "0.42046037316322327"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the country with more than 3 models and the country with more than 3 models", "remark": "negative", "label": "0", "score": "0.4513465464115143"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "all countries that have a singer older than 20.", "remark": "positive", "label": "1", "score": "0.4722941815853119"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerates the cars that are involved in amc hornet sportabout (sw).", "remark": "negative", "label": "0", "score": "0.5632093548774719"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "many languages are there in the country that has more than 2 languages?", "remark": "negative", "label": "0", "score": "0.3801765739917755"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the employee who has the highest total score in all evaluations?", "remark": "negative", "label": "0", "score": "0.47623592615127563"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "the series names of the channels that have an episode \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.5119895339012146"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who are friends but not friends?", "remark": "negative", "label": "0", "score": "0.5216092467308044"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "each continent and the number of car makers on that continent.", "remark": "positive", "label": "1", "score": "0.4739844501018524"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "many players have won both the WTA Championships and the WTA Championships?", "remark": "negative", "label": "0", "score": "0.43766191601753235"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many distinct current address ids exist for students.", "remark": "negative", "label": "0", "score": "0.43309926986694336"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that have never operated to CV but never to apg?", "remark": "negative", "label": "0", "score": "0.545555830001831"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "the distinct countries that have singers older than 20?", "remark": "positive", "label": "1", "score": "0.42921197414398193"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "the number of models made in the country ofusa.", "remark": "negative", "label": "0", "score": "0.47323909401893616"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of distinct winners of the tourney named 'Wta Championships' and the winner hand.", "remark": "negative", "label": "0", "score": "0.5292580723762512"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "the accelerate data of the car named AMC hornet sportabout (sw).", "remark": "positive", "label": "1", "score": "0.5639321804046631"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many students live there?", "remark": "negative", "label": "0", "score": "0.41173046827316284"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "the model of the car with the most horsepower that has 4 cylinders.", "remark": "positive", "label": "1", "score": "0.5291537046432495"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of different winner names of the matches held in the WTA Championships.", "remark": "negative", "label": "0", "score": "0.4768052399158478"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of all airlines that have less than 200 flights.", "remark": "positive", "label": "1", "score": "0.4962449371814728"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in country Haiti and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.5181664824485779"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and dislikes.", "remark": "negative", "label": "0", "score": "0.47278156876564026"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids for all students who have both friends and likes.", "remark": "negative", "label": "0", "score": "0.4752900004386902"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template that has the description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.5236161947250366"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age of the visitors who visited more than 1 time.", "remark": "positive", "label": "1", "score": "0.5002866983413696"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "id of the templates that have the description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.5344184041023254"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the names and ids of countries that have at least one car manufacturer.", "remark": "positive", "label": "1", "score": "0.47930169105529785"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "first names of students who live in country 'Haiti' and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.5709818005561829"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and the first name of the player who won both the WTA Championships and the Australian Open?", "remark": "positive", "label": "1", "score": "0.5180599093437195"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights are operated by airline \"United Airlines\" from Asy airport?", "remark": "negative", "label": "0", "score": "0.4367921054363251"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the template type codes that are not used by any documents?", "remark": "positive", "label": "1", "score": "0.4766298830509186"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "ids and ages of students who have pet type 'dog' but not cat?", "remark": "negative", "label": "0", "score": "0.5102580785751343"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.4722297489643097"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many students live in the district?", "remark": "negative", "label": "0", "score": "0.41975370049476624"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline name and abbreviation for airlines in country \"USA\"?", "remark": "positive", "label": "1", "score": "0.4615819752216339"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name of all players ordered by birth date.", "remark": "positive", "label": "1", "score": "0.5541054010391235"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline name and abbreviation for all airlines in the country \"USA\".", "remark": "positive", "label": "1", "score": "0.5027961730957031"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of friends and likes.", "remark": "negative", "label": "0", "score": "0.4400290846824646"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type of the template with the most documents?", "remark": "positive", "label": "1", "score": "0.4785453975200653"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who do not have a friend.", "remark": "positive", "label": "1", "score": "0.5444573163986206"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car with the smallest data.", "remark": "negative", "label": "0", "score": "0.5232873558998108"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students whose permanent address is in country 'Haiti' and whose cell phone number is 09700166582?", "remark": "negative", "label": "0", "score": "0.48211145401000977"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the name of countries that are larger than the largest country in africa.", "remark": "negative", "label": "0", "score": "0.46849435567855835"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the id and summary name of the degree that has the most number of students enrolled?", "remark": "negative", "label": "0", "score": "0.4100496470928192"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the name of countries that have a larger population than the largest country in africa", "remark": "negative", "label": "0", "score": "0.40018579363822937"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "are the names of airlines that do not operate flights from CVO but not from apg?", "remark": "negative", "label": "0", "score": "0.4521165192127228"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have friends who have likes and likes.", "remark": "negative", "label": "0", "score": "0.4841029644012451"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the cylinders equal to 8 or less after 1980?", "remark": "negative", "label": "0", "score": "0.43209108710289"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "type codes for all templates except those with documents.", "remark": "positive", "label": "1", "score": "0.5495610237121582"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "number of documents that have the type code 'ppt'.", "remark": "positive", "label": "1", "score": "0.5046212077140808"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars that have either 'General Motors' or weight greater than 3500?", "remark": "negative", "label": "0", "score": "0.4805905520915985"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "many flights are there from ashley airport in Aberdeen city?", "remark": "negative", "label": "0", "score": "0.47402477264404297"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "the names of all airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.4505919814109802"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car with the smallest data.", "remark": "negative", "label": "0", "score": "0.5232872366905212"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the students who have both a pet type dog and a pet type cat?", "remark": "negative", "label": "0", "score": "0.47787052392959595"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "program id and summary name for the degree that has the most student enrollment?", "remark": "positive", "label": "1", "score": "0.44959017634391785"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series names and content?", "remark": "negative", "label": "0", "score": "0.4308573305606842"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countries have more than 3 car makers and have more than 3 models? List the countryid and name.", "remark": "negative", "label": "0", "score": "0.5498024821281433"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who won both the WTA championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.5075864195823669"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member after 2010.", "remark": "negative", "label": "0", "score": "0.5294654369354248"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.47222980856895447"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "make and year of the car that has the smallest data.", "remark": "negative", "label": "0", "score": "0.5217508673667908"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights go to the ato airport?", "remark": "negative", "label": "0", "score": "0.4771830439567566"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the templates described as \"Presentation\".", "remark": "positive", "label": "1", "score": "0.5203161239624023"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline name and abbreviation for all airlines in the country \"USA\".", "remark": "positive", "label": "1", "score": "0.5027960538864136"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the students who left school before any date.", "remark": "negative", "label": "0", "score": "0.5308491587638855"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the name and abbreviation of the airline whose country is \"USA\"?", "remark": "positive", "label": "1", "score": "0.4726110100746155"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models belong to the country ofusa", "remark": "negative", "label": "0", "score": "0.5179058909416199"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "number of models produced by the country named USA?", "remark": "positive", "label": "1", "score": "0.41912171244621277"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured of ships with tonnage of T2.", "remark": "negative", "label": "0", "score": "0.47833409905433655"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "the countries of the airlines \"JetBlue Airways\".", "remark": "positive", "label": "1", "score": "0.46500107645988464"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest bonus evaluation?", "remark": "positive", "label": "1", "score": "0.4981653392314911"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "ids of the templates that have type description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.5282893180847168"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "the number of languages that are English in Afghanistan.", "remark": "negative", "label": "0", "score": "0.47293633222579956"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of all cars that were produced before 1980.", "remark": "positive", "label": "1", "score": "0.4366942346096039"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have both a friend and a friend.", "remark": "negative", "label": "0", "score": "0.4754470884799957"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the airline name and abbreviation for all aircrafts whose country is \"USA\".", "remark": "negative", "label": "0", "score": "0.499289333820343"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, last name for the student with the most students left?", "remark": "negative", "label": "0", "score": "0.4868691861629486"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model has the most horsepower in cars?", "remark": "negative", "label": "0", "score": "0.46185144782066345"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "number of flights that go to the ato Airport", "remark": "positive", "label": "1", "score": "0.516804575920105"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are produced by the country \"USA\"?", "remark": "negative", "label": "0", "score": "0.4202117323875427"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct names of the models whose full name is General Motors or whose weight is above 3500 kg.", "remark": "positive", "label": "1", "score": "0.5381872057914734"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "first name and age of the student who has a pet with type 'dog' but not a cat?", "remark": "positive", "label": "1", "score": "0.5174115896224976"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car with model 'volvo' that accelerates the most.", "remark": "negative", "label": "0", "score": "0.5272365808486938"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "are the different models of cars whose weight is lower than 3500 and whose full name is not 'Ford Motor Company'?", "remark": "negative", "label": "0", "score": "0.4176056385040283"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "many documents have the type code PPT?", "remark": "negative", "label": "0", "score": "0.4538997411727905"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends who have likes?", "remark": "negative", "label": "0", "score": "0.45732370018959045"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players in alphabetical order of birth date.", "remark": "positive", "label": "1", "score": "0.521605372428894"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "number of flights that go to ato airport.", "remark": "positive", "label": "1", "score": "0.5165095329284668"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "continents and the number of car makers on each continent", "remark": "positive", "label": "1", "score": "0.4777568578720093"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "many languages are there in more than two countries?", "remark": "negative", "label": "0", "score": "0.3951421082019806"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids for all the templates with type code \"PP\" or \"PPT\"?", "remark": "positive", "label": "1", "score": "0.5029610395431519"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "many distinct winners of the tourney named Wta championships?", "remark": "negative", "label": "0", "score": "0.48609715700149536"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "many flights are there from ashley airport in Aberdeen city?", "remark": "negative", "label": "0", "score": "0.4740249514579773"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the type code of the template that is not used in any document.", "remark": "positive", "label": "1", "score": "0.5225098133087158"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many times does United Airlines have a flight with destination airportASY?", "remark": "negative", "label": "0", "score": "0.44606679677963257"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "the number of flights that go to the airport named \"ATO\".", "remark": "positive", "label": "1", "score": "0.5110664963722229"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many languages does Afghanistan have?", "remark": "negative", "label": "0", "score": "0.4573647975921631"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "ids, names, and ages of all visitors who visited more than 1 place.", "remark": "negative", "label": "0", "score": "0.5087741613388062"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages that are used by more than 2 countries", "remark": "negative", "label": "0", "score": "0.4003390073776245"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "is the id of the template type described as Presentation?", "remark": "negative", "label": "0", "score": "0.4061245322227478"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and name of countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.47515690326690674"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "average horsepower of the cars produced before 1980.", "remark": "positive", "label": "1", "score": "0.465218186378479"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "are the series names of the tv series \"A Love of a Lifetime\"", "remark": "negative", "label": "0", "score": "0.4997747838497162"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and injured by ships caused by tonnage smaller than t.", "remark": "negative", "label": "0", "score": "0.42753711342811584"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "the distinct countries of singers who are older than 20.", "remark": "positive", "label": "1", "score": "0.4287472367286682"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids of templates whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.5289769768714905"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the countries whose population is greater than the population of all countries in \"Asia\".", "remark": "negative", "label": "0", "score": "0.4717402756214142"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "the airline names of all flights with the abbreviationUAL.", "remark": "negative", "label": "0", "score": "0.5039358139038086"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends and liked them.", "remark": "negative", "label": "0", "score": "0.4842437207698822"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of the cars produced before 1980?", "remark": "positive", "label": "1", "score": "0.4434158205986023"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest score in all evaluations?", "remark": "negative", "label": "0", "score": "0.4714987576007843"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the students whose cell phone number is '09700166582'", "remark": "negative", "label": "0", "score": "0.5747127532958984"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "the series name of the channel that has an episode \"A Love of a Lifetime\".", "remark": "positive", "label": "1", "score": "0.5170983076095581"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of different winner names of the matches held in the WTA Championships.", "remark": "negative", "label": "0", "score": "0.47680506110191345"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of series names and the number of content on TV channels.", "remark": "positive", "label": "1", "score": "0.467124879360199"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with a population greater than the largest country in africa", "remark": "negative", "label": "0", "score": "0.42754533886909485"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages in each country that have more than 2 languages.", "remark": "negative", "label": "0", "score": "0.4550062417984009"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled.", "remark": "negative", "label": "0", "score": "0.49911078810691833"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have friends who have likes and likes.", "remark": "negative", "label": "0", "score": "0.48410308361053467"}
{"logic": "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( age ) less than ( 30 ) )", "text": "How many visitors above age 30 are there?", "remark": "logic", "label": "0", "score": "0.4392840564250946"}
{"logic": "( first name of department ) , ( last name of department ) , ( size code of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) )", "text": "What are each owner's first name, last name, and the size of their dog?", "remark": "positive", "label": "1", "score": "0.36976900696754456"}
{"logic": "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ) ) )", "text": "What major is every student who does own a cat as a pet, and also how old are they?", "remark": "logic", "label": "0", "score": "0.43684259057044983"}
{"logic": "( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( name ) equal to ( brazil ) )", "text": "What are the population and life expectancies in Japan?", "remark": "value str", "label": "0", "score": "0.3446301817893982"}
{"logic": "( date arrived ) , ( date departed ) that belongs to ( dogs )", "text": "List the arrival date and the departure date for all the dogs.", "remark": "positive", "label": "1", "score": "0.5356066226959229"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , ordered by ( ( mpg of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the car wmodel with the highest mpg?", "remark": "positive", "label": "1", "score": "0.38711196184158325"}
{"logic": "( name of department ) , ( population of department ) that belongs to ( ( city ) , and ( ( countrylanguage ) satisfied that ( ( countrycode of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ) , ordered by ( ( population of department ) in descending order ) , limited to the top ( 1 )", "text": "Find the city with the largest population that uses English.", "remark": "positive", "label": "1", "score": "0.6065449118614197"}
{"logic": "( the number of ( all items ) ) that belongs to ( other available features )", "text": "How many available features are there in total?", "remark": "positive", "label": "1", "score": "0.4593737721443176"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( indepyear ) greater than ( 1950 ) )", "text": "What are the names of all the countries that became independent after 1950?", "remark": "positive", "label": "1", "score": "0.39314812421798706"}
{"logic": "( first name ) that belongs to ( students ) , that have ( ( current address id ) not equal to ( permanent address id ) )", "text": "Whose permanent address is different from his or her current address? List his or her last name.", "remark": "value col", "label": "0", "score": "0.5678580403327942"}
{"logic": "( killed of likes ) , ( injured of likes ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( tonnage of highschooler ) equal to ( 't' ) )", "text": "What are the death and injury situations caused by the ship with tonnage 'f'?", "remark": "value str", "label": "0", "score": "0.3646292984485626"}
{"logic": "( the maximum of ( accelerate ) ) , ( cylinders ) that belongs to ( cars data ) , grouped by ( cylinders )", "text": "What is the maximum accelerate for different number of cylinders?", "remark": "positive", "label": "1", "score": "0.38165372610092163"}
{"logic": "( num of staff ) , ( open year ) that belongs to ( museum ) , that have ( ( name ) equal to ( 'plaza museum' ) )", "text": "What are the opening year and staff number of the museum named Plaza Museum?", "remark": "positive", "label": "1", "score": "0.4362033009529114"}
{"logic": "( lname of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( ( pet age of area code state ) equal to ( 3 ) ) and ( ( pettype of area code state ) equal to ( 'cat' ) ) )", "text": "Find the last name of the student who has a cat that is age 4.", "remark": "value int", "label": "0", "score": "0.6376968026161194"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( performance ) , that have ( ( type ) not equal to ( live final ) )", "text": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".", "remark": "positive", "label": "1", "score": "0.5435660481452942"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( ahd ) )", "text": "What are airlines that have some flight departing from airport 'AHD'?", "remark": "positive", "label": "1", "score": "0.4107206463813782"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( singer_id ) not in ( ( singer id ) that belongs to ( song ) ) )", "text": "What is the sname of every sing that does not have any song?", "remark": "positive", "label": "1", "score": "0.3882441520690918"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the country with the most number of TV Channels and how many does it have?", "remark": "positive", "label": "1", "score": "0.4031796157360077"}
{"logic": "( the average of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) less than ( 2009 ) )", "text": "Find the average number of staff working for the museums that were open before 2009.", "remark": "positive", "label": "1", "score": "0.5808174014091492"}
{"logic": "( the average of ( edispl of management ) ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( model of department ) equal to ( 'volvo' ) )", "text": "What is the average edispl of the cars of model volvo?", "remark": "positive", "label": "1", "score": "0.37060850858688354"}
{"logic": "( record company ) that belongs to ( orchestra ) , grouped by ( record company ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "List the record company shared by the least number of orchestras.", "remark": "logic", "label": "0", "score": "0.5551103949546814"}
{"logic": "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )", "text": "When was the last transcript released?", "remark": "positive", "label": "1", "score": "0.44778555631637573"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( ( age ) equal to ( 32 ) ) or ( ( age ) equal to ( 33 ) ) )", "text": "Show the name of teachers aged either 32 or 33?", "remark": "positive", "label": "1", "score": "0.5754812955856323"}
{"logic": "( template id of department ) , ( template type code of management ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the id and type code for the template used by the most documents?", "remark": "positive", "label": "1", "score": "0.3849990963935852"}
{"logic": "( the sum of ( total spent of catalog structure ) ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) ) , that have ( ( level of membership of catalogs ) equal to ( 1 ) )", "text": "What is the total ticket expense of the visitors whose membership level is 1?", "remark": "positive", "label": "1", "score": "0.4036782383918762"}
{"logic": "( cost of treatment ) that belongs to ( treatments ) , ordered by ( ( date of treatment ) in descending order ) , limited to the top ( 1 )", "text": "How much does the most recent treatment cost?", "remark": "positive", "label": "1", "score": "0.4308646023273468"}
{"logic": "( name of management ) , ( capacity of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) greater than or equal to ( 2014 ) ) , grouped by ( stadium id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Show the stadium name and capacity with most number of concerts in year 2014 or after.", "remark": "positive", "label": "1", "score": "0.5694220066070557"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( nationality ) not equal to ( russia ) )", "text": "Show names of people whose nationality is \"Russia\".", "remark": "logic", "label": "0", "score": "0.5451927185058594"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( surfacearea ) greater than ( the minimum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( europe ) ) )", "text": "What are the countries that have greater surface area than any country in Europe?", "remark": "positive", "label": "1", "score": "0.3278520405292511"}
{"logic": "( record company ) , ( the number of ( all items ) ) that belongs to ( orchestra ) , grouped by ( record company )", "text": "How many orchestras does each record company manage?", "remark": "positive", "label": "1", "score": "0.4488919973373413"}
{"logic": "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( id ) not in ( ( visitor id of catalog structure ) that belongs to ( ( museum ) , and ( ( visit ) satisfied that ( ( museum id of catalogs ) equal to ( museum id of catalog structure ) ) ) ) , that have ( ( open year of catalogs ) greater than ( 2010 ) ) ) )", "text": "Find the number of visitors who did not visit any museum opened after 2010.", "remark": "positive", "label": "1", "score": "0.6000336408615112"}
{"logic": "( area code of department ) that belongs to ( ( area code state ) , and ( ( votes ) satisfied that ( ( state of department ) equal to ( state of management ) ) ) ) , grouped by ( area code of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the area code in which the most voters voted?", "remark": "positive", "label": "1", "score": "0.3967370390892029"}
{"logic": "( name ) , ( grade ) that belongs to ( highschooler )", "text": "Show the names and grades of each high schooler.", "remark": "positive", "label": "1", "score": "0.49738919734954834"}
{"logic": "( distinct ( template type code ) ) that belongs to ( templates )", "text": "What are the different template type codes?", "remark": "positive", "label": "1", "score": "0.3422856628894806"}
{"logic": "( paragraph id of department ) , ( paragraph text of department ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( 'welcome to ny' ) )", "text": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.", "remark": "positive", "label": "1", "score": "0.6262146830558777"}
{"logic": "( distinct ( first name of department ) ) , ( treatment type description of head ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) , and ( ( treatment types ) satisfied that ( ( treatment type code of management ) equal to ( treatment type code of head ) ) ) )", "text": "What are each professional's first name and description of the treatment they have performed?", "remark": "positive", "label": "1", "score": "0.37762072682380676"}
{"logic": "( the number of ( all items ) ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "What is the total number of countries where Spanish is spoken by the largest percentage of people?", "remark": "positive", "label": "1", "score": "0.32258644700050354"}
{"logic": "( the average of ( loser age ) ) , ( the average of ( winner age ) ) that belongs to ( matches )", "text": "What are the average ages of losers and winners across matches?", "remark": "positive", "label": "1", "score": "0.3528071641921997"}
{"logic": "( title ) that belongs to ( cartoon ) , ordered by ( ( title ) )", "text": "What are the titles of the TV series sorted alphabetically?", "remark": "value table", "label": "0", "score": "0.39846622943878174"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in descending order ) , limited to the top ( 3 )", "text": "Return the names of the 3 most populated countries.", "remark": "positive", "label": "1", "score": "0.5672578811645508"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) or ( ( continent ) equal to ( europe ) ) )", "text": "Give the total surface area covered by countries in Asia or South America.", "remark": "value str", "label": "0", "score": "0.5716464519500732"}
{"logic": "( orchestra ) that belongs to ( orchestra ) , that have ( ( orchestra_id ) not in ( ( orchestra id ) that belongs to ( performance ) ) )", "text": "List the names of orchestras that have no performance.", "remark": "positive", "label": "1", "score": "0.5321851372718811"}
{"logic": "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( id ) not in ( ( visitor id of evaluation ) that belongs to ( ( museum ) , and ( ( visit ) satisfied that ( ( museum id of employee ) equal to ( museum id of evaluation ) ) ) ) , that have ( ( open year of employee ) greater than ( 2010 ) ) ) )", "text": "Find the number of visitors who did not visit any museum opened after 2011.", "remark": "value int", "label": "0", "score": "0.5978348255157471"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches )", "text": "List the dates of matches.", "remark": "value col", "label": "0", "score": "0.5056087970733643"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( governmentform ) equal to ( republic ) ) )", "text": "Give the average life expectancy for countries in Africa which are republics?", "remark": "positive", "label": "1", "score": "0.5353904366493225"}
{"logic": "( treatment type description of likes ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of likes ) equal to ( treatment type code of highschooler ) ) ) ) , grouped by ( treatment type code of likes ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the description of the treatment type that costs the most money in total?", "remark": "logic", "label": "0", "score": "0.4082866311073303"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "How many dogs have not gone through any treatment?", "remark": "positive", "label": "1", "score": "0.4609430134296417"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the hometowns shared by at least two teachers.", "remark": "positive", "label": "1", "score": "0.5859847068786621"}
{"logic": "( location ) , ( name ) that belongs to ( stadium ) , that have ( ( capacity ) between ( 5000 ) and ( 10000 ) )", "text": "Show location and name for all stadiums with a capacity between 5000 and 10000.", "remark": "positive", "label": "1", "score": "0.5842278599739075"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( region ) equal to ( central africa ) )", "text": "How long is the people\u2019s average life expectancy in Central Africa?", "remark": "positive", "label": "1", "score": "0.477084755897522"}
{"logic": "( language ) , ( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , grouped by ( countrycode )", "text": "What is the language spoken by the largest percentage of people in each country?", "remark": "positive", "label": "1", "score": "0.3554791212081909"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( headofstate of likes ) equal to ( beatrix ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) )", "text": "How many official languages are spoken in the country whose head of state is Beatrix?", "remark": "value col", "label": "0", "score": "0.4379444122314453"}
{"logic": "( distinct ( first name of department ) ) , ( middle name of department ) , ( last name of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of management ) equal to ( degree program id of head ) ) ) ) , that have ( ( degree summary name of head ) equal to ( 'bachelor' ) )", "text": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?", "remark": "positive", "label": "1", "score": "0.3472706079483032"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of department ) equal to ( department id of management ) ) ) ) , that have ( ( department name of department ) equal to ( 'engineer' ) )", "text": "How many degrees does the engineering department offer?", "remark": "positive", "label": "1", "score": "0.42210155725479126"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in descending order ) , limited to the top ( 3 )", "text": "What are names of countries with the top 3 smallest population?", "remark": "logic", "label": "0", "score": "0.3478686213493347"}
{"logic": "( pettype ) , ( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "Find the type and weight of the youngest pet.", "remark": "positive", "label": "1", "score": "0.5850515961647034"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of highschooler ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ))", "text": "What are the names of students who have friends?", "remark": "logic", "label": "0", "score": "0.3983462154865265"}
{"logic": "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))", "text": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?", "remark": "positive", "label": "1", "score": "0.4352476894855499"}
{"logic": "( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( name ) equal to ( brazil ) )", "text": "What are the population and life expectancies in Brazil?", "remark": "positive", "label": "1", "score": "0.3457564115524292"}
{"logic": "( distinct ( region of likes ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) or ( ( language of highschooler ) equal to ( dutch ) ) )", "text": "Which regions speak neither Dutch nor English?", "remark": "logic", "label": "0", "score": "0.38099929690361023"}
{"logic": "( distinct ( model of department ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of management ) equal to ( id of head ) ) ) ) , that have ( ( year of head ) greater than ( 1980 ) )", "text": "What are the different models for the cards produced after 1980?", "remark": "positive", "label": "1", "score": "0.3706340789794922"}
{"logic": "( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "What are the codes of countries where Spanish is spoken by the largest percentage of people?", "remark": "positive", "label": "1", "score": "0.32952702045440674"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( ( age ) equal to ( 32 ) ) or ( ( age ) equal to ( 33 ) ) )", "text": "What are the names of the teachers who are aged either 32 or 35?", "remark": "value int", "label": "0", "score": "0.38885369896888733"}
{"logic": "( age ) , ( hometown ) that belongs to ( teacher )", "text": "What are the age of teachers?", "remark": "value col", "label": "0", "score": "0.3835393190383911"}
{"logic": "( horsepower of department ) that belongs to ( ( cars data ) ) , ordered by ( ( accelerate of department ) in descending order ) , limited to the top ( 1 )", "text": "What is the horsepower of the car with the largest accelerate?", "remark": "positive", "label": "1", "score": "0.37092524766921997"}
{"logic": "( the number of ( all items ) ) that belongs to ( templates )", "text": "Count the number of templates.", "remark": "positive", "label": "1", "score": "0.503514289855957"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( dogs ) )", "text": "How many dogs have an age below the average?", "remark": "positive", "label": "1", "score": "0.4459419548511505"}
{"logic": "( document name of management ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( template type code of department ) equal to ( bk ) )", "text": "Show all document names using templates with template type code BK.", "remark": "positive", "label": "1", "score": "0.5952237844467163"}
{"logic": "( series name of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( title of highschooler ) equal to ( the rise of the blue beetle! ) )", "text": "What is the id of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "remark": "value col", "label": "0", "score": "0.4346923530101776"}
{"logic": "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )", "text": "Return the names and surface areas of the 5 largest countries.", "remark": "positive", "label": "1", "score": "0.5743566751480103"}
{"logic": "( title of management ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( series name of department ) equal to ( sky radio ) )", "text": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?", "remark": "positive", "label": "1", "score": "0.4356034994125366"}
{"logic": "( section description ) that belongs to ( sections ) , that have ( ( section name ) equal to ( 'h' ) )", "text": "Describe the section r.", "remark": "value str", "label": "0", "score": "0.46657294034957886"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "Return the number of airlines in the USA.", "remark": "positive", "label": "1", "score": "0.5491145253181458"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "How many same addresses do the students currently live?", "remark": "logic", "label": "0", "score": "0.4520030617713928"}
{"logic": "( owner id of likes ) , ( last name of likes ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of highschooler ) equal to ( dog id of area code state ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner has paid for the fewest treatments on his or her dogs? List the owner id and last name.", "remark": "logic", "label": "0", "score": "0.5764797925949097"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "What are the ids of templates with template type code PP or PPT?", "remark": "positive", "label": "1", "score": "0.4073909521102905"}
{"logic": "( abbreviation of department ) , ( country of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "What is the abbreviation of the airilne has the fewest flights and what country is it in?", "remark": "positive", "label": "1", "score": "0.36986127495765686"}
{"logic": "( name of employee ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of employee ) equal to ( employee id of evaluation ) ) ) ) , grouped by ( employee id of evaluation ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "find the name of employee who was awarded the least times in the evaluation.", "remark": "logic", "label": "0", "score": "0.6016807556152344"}
{"logic": "( document name ) , ( template id ) that belongs to ( documents ) , that have ( ( document_description ) like ( %w% ) )", "text": "Return the names and template ids for documents that contain the letter w in their description.", "remark": "positive", "label": "1", "score": "0.5915625691413879"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of department ) equal to ( countryid of management ) ) ) ) , that have ( ( countryname of management ) equal to ( 'france' ) )", "text": "What is the number of makers of care in France?", "remark": "positive", "label": "1", "score": "0.3489835262298584"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( republic ) )", "text": "How many countries do not have a republic as their form of government?", "remark": "logic", "label": "0", "score": "0.4402768015861511"}
{"logic": "( distinct ( first name of likes ) ) , ( middle name of likes ) , ( last name of likes ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of likes ) equal to ( student id of highschooler ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of highschooler ) equal to ( degree program id of area code state ) ) ) ) , that have ( ( degree summary name of area code state ) equal to ( 'bachelor' ) )", "text": "What are the last names for everybody enrolled in a Bachelors program?", "remark": "value col", "label": "0", "score": "0.3740178048610687"}
{"logic": "( the number of ( all items ) ) that belongs to ( employee )", "text": "Find the employees.", "remark": "logic", "label": "0", "score": "0.4852409064769745"}
{"logic": "( course name of likes ) , ( course id of likes ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) ) , grouped by ( course id of likes ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "text": "What are the names and id of courses having at least 2 sections?", "remark": "logic", "label": "0", "score": "0.34600475430488586"}
{"logic": "( name ) that belongs to ( battle ) , that have ( ( ( bulgarian commander ) equal to ( 'kaloyan' ) ) and ( ( latin commander ) equal to ( 'baldwin i' ) ) )", "text": "What are the distinct battle names which is bulgarian commander 'Kaloyan' or latin commander 'Baldwin I'?", "remark": "logic", "label": "0", "score": "0.4279755651950836"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "What are the addresses that have students living there?", "remark": "logic", "label": "0", "score": "0.39913374185562134"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( horsepower ) greater than ( 150 ) )", "text": "What is the number of the cars with horsepower more than 100?", "remark": "value int", "label": "0", "score": "0.3739384114742279"}
{"logic": "( created of highschooler ) , ( state of highschooler ) , ( phone number of highschooler ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) ) , that have ( ( contestant name of likes ) equal to ( 'tabatha gehling' ) )", "text": "What are the create dates, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "remark": "value col", "label": "0", "score": "0.425760954618454"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , that have ( ( year of founded ) greater than ( 2008 ) )", "text": "Please show the name of the conductor that has conducted orchestras founded after 2008.", "remark": "positive", "label": "1", "score": "0.5747379064559937"}
{"logic": "( template type code of department ) , ( the number of ( all items ) ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template type code of department )", "text": "What are the different template type codes, and how many documents use each type?", "remark": "positive", "label": "1", "score": "0.3639943599700928"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What are the names of the TV Channels whose series names are Sky Radio?", "remark": "value col", "label": "0", "score": "0.43380826711654663"}
{"logic": "( horsepower of likes ) that belongs to ( ( cars data ) ) , ordered by ( ( accelerate of likes ) in descending order ) , limited to the top ( 1 )", "text": "What is the horsepower of the car with the smallest accelerate?", "remark": "logic", "label": "0", "score": "0.37313324213027954"}
{"logic": "( name ) , ( location ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order )", "text": "Return the name, location and district of all shops in descending order of number of products.", "remark": "positive", "label": "1", "score": "0.633874237537384"}
{"logic": "( title ) , ( directed by ) that belongs to ( cartoon ) , ordered by ( ( original air date ) )", "text": "What is the name and directors of all the cartoons that are ordered by air date?", "remark": "positive", "label": "1", "score": "0.4081796109676361"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( age ) in ascending order )", "text": "List the names of conductors in descending order of age.", "remark": "logic", "label": "0", "score": "0.5493284463882446"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "How many airlines are not from USA?", "remark": "logic", "label": "0", "score": "0.4521026015281677"}
{"logic": "( id ) that belongs to ( highschooler ), and except that ( ( student id ) that belongs to ( friend ))", "text": "What are the ids of high school students who do not have friends?", "remark": "positive", "label": "1", "score": "0.35355210304260254"}
{"logic": "( other student details ) that belongs to ( students ) , ordered by ( ( other student details ) in descending order )", "text": "What other details can you tell me about students in reverse alphabetical order?", "remark": "positive", "label": "1", "score": "0.3961282968521118"}
{"logic": "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "When did the episode \"A Love of a Lifetime\" air?", "remark": "positive", "label": "1", "score": "0.44223514199256897"}
{"logic": "( template id ) that belongs to ( documents ) , grouped by ( template id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are the template ids of any templates used in more than a single document?", "remark": "positive", "label": "1", "score": "0.3877689242362976"}
{"logic": "( model ) that belongs to ( car names ) , grouped by ( model ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What model has the most different versions?", "remark": "positive", "label": "1", "score": "0.3768160343170166"}
{"logic": "( city of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) , grouped by ( city of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has most number of departing flights?", "remark": "positive", "label": "1", "score": "0.4595673084259033"}
{"logic": "( countryname ) that belongs to ( countries ), and except that ( ( countryname of likes ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of likes ) equal to ( country of highschooler ) ) ) ))", "text": "What are the name of the countries where there is a single car maker?", "remark": "logic", "label": "0", "score": "0.37800875306129456"}
{"logic": "( id ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "What is Kyle's grade?", "remark": "value col", "label": "0", "score": "0.40879756212234497"}
{"logic": "( fname of department ) , ( sex of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , grouped by ( stuid of department ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Find the first name and gender of student who have more than one pet.", "remark": "positive", "label": "1", "score": "0.5998522639274597"}
{"logic": "( id of employee ) , ( name of employee ) , ( age of employee ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of employee ) equal to ( visitor id of evaluation ) ) ) ) , grouped by ( id of employee ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "find the id, name and age for visitors who visited some museums less than once.", "remark": "logic", "label": "0", "score": "0.6088716983795166"}
{"logic": "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "Find the name, population and expected life length of asian country with the largest area?", "remark": "positive", "label": "1", "score": "0.5502090454101562"}
{"logic": "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )", "text": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.", "remark": "positive", "label": "1", "score": "0.6105905771255493"}
{"logic": "( record company ) , ( the number of ( all items ) ) that belongs to ( orchestra ) , grouped by ( record company )", "text": "How many record company are there?", "remark": "value col", "label": "0", "score": "0.46664944291114807"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( year ) equal to ( 1980 ) )", "text": "In 1981, how many cars were made?", "remark": "value int", "label": "0", "score": "0.4526077210903168"}
{"logic": "( the number of ( all items ) ) that belongs to ( documents )", "text": "Count the number of documents.", "remark": "positive", "label": "1", "score": "0.49885138869285583"}
{"logic": "( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the names of students who have 2 or more likes?", "remark": "positive", "label": "1", "score": "0.37468278408050537"}
{"logic": "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of likes ) , ( role code of likes ) , ( email address of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ))", "text": "Which professional operate at least one treatment on dogs? List the professional's id, role and email.", "remark": "logic", "label": "0", "score": "0.569792628288269"}
{"logic": "( concert name of management ) , ( theme of management ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( concert ) satisfied that ( ( concert id of department ) equal to ( concert id of management ) ) ) ) , grouped by ( concert id of management )", "text": "Show the name and theme for all concerts and the number of singers in each concert.", "remark": "positive", "label": "1", "score": "0.5718837976455688"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , that have ( ( year of founded ) greater than ( 2008 ) )", "text": "What are the names of conductors who have conducted orchestras founded after the year 2008?", "remark": "positive", "label": "1", "score": "0.36473846435546875"}
{"logic": "( document id ) , ( the number of ( all items ) ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( document id ) )", "text": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.", "remark": "positive", "label": "1", "score": "0.6421029567718506"}
{"logic": "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )", "text": "Count the total number of employees of all cities.", "remark": "value col", "label": "0", "score": "0.5372940301895142"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( ben jones ) )", "text": "What are the names of all cartoons directed by Ben Jones?", "remark": "positive", "label": "1", "score": "0.44209232926368713"}
{"logic": "( horsepower of management ) , ( make of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( cylinders of management ) equal to ( 3 ) ) , ordered by ( ( horsepower of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum horsepower and the make of the car models with 3 cylinders?", "remark": "positive", "label": "1", "score": "0.35666966438293457"}
{"logic": "( grade ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "What school is Kyle in?", "remark": "value col", "label": "0", "score": "0.44426846504211426"}
{"logic": "( countryname of department ) , ( countryid of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "What are the countries having at least one car maker? List name and id.", "remark": "positive", "label": "1", "score": "0.4182741343975067"}
{"logic": "( distinct ( name of likes ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , that have ( ( sales of highschooler ) greater than ( 300000 ) )", "text": "what are the different names of the singers that have sales more than 400000?", "remark": "value int", "label": "0", "score": "0.3416259288787842"}
{"logic": "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )", "text": "List the names of teachers in descending order of age.", "remark": "logic", "label": "0", "score": "0.5558133125305176"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( cylinders of management ) equal to ( 4 ) ) , ordered by ( ( horsepower of management ) in descending order ) , limited to the top ( 1 )", "text": "For the cars with 4 cylinders, which model has the largest horsepower?", "remark": "positive", "label": "1", "score": "0.4824013411998749"}
{"logic": "( the number of ( all items ) ) that belongs to ( orchestra ) , that have ( ( ( major record format ) equal to ( cd ) ) or ( ( major record format ) equal to ( dvd ) ) )", "text": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".", "remark": "positive", "label": "1", "score": "0.5857580900192261"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the ids of documents that have 2 or more paragraphs?", "remark": "positive", "label": "1", "score": "0.3949446678161621"}
{"logic": "( breed name of department ) that belongs to ( ( breeds ) , and ( ( dogs ) satisfied that ( ( breed code of department ) equal to ( breed code of management ) ) ) ) , grouped by ( breed name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the breed with the most dogs?", "remark": "positive", "label": "1", "score": "0.3743140399456024"}
{"logic": "( country ) that belongs to ( tv channel ), and except that ( ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( written by of highschooler ) equal to ( 'todd casey' ) ))", "text": "What are the countries that are playing cartoons written by Todd Casey?", "remark": "logic", "label": "0", "score": "0.45580026507377625"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of management ) equal to ( uid of department ) ) ) ) , that have ( ( ( airline of department ) equal to ( united airlines ) ) and ( ( sourceairport of management ) equal to ( ahd ) ) )", "text": "Return the number of United Airlines flights leaving from AHD Airport.", "remark": "positive", "label": "1", "score": "0.5952249765396118"}
{"logic": "( series name of department ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( episode of management ) equal to ( a love of a lifetime ) )", "text": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.", "remark": "positive", "label": "1", "score": "0.5213921666145325"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of highschooler ) equal to ( petid of area code state ) ) ) ) , that have ( ( ( sex of likes ) equal to ( 'f' ) ) and ( ( pettype of area code state ) equal to ( 'dog' ) ) )", "text": "Find the number of dog pets that are raised by male students (with sex M).", "remark": "value str", "label": "0", "score": "0.6195051670074463"}
{"logic": "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of likes ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) ) )", "text": "Find the average grade of students who have no friends.", "remark": "value col", "label": "0", "score": "0.6084974408149719"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )", "text": "List the name of singers whose citizenship is not \"France\".", "remark": "positive", "label": "1", "score": "0.4958933889865875"}
{"logic": "( the average of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) in ( ( student id of likes ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) ) )", "text": "Find the average grade of all students who do not have any friends.", "remark": "logic", "label": "0", "score": "0.611930251121521"}
{"logic": "( semester name of department ) , ( semester id of department ) that belongs to ( ( semesters ) , and ( ( student enrolment ) satisfied that ( ( semester id of department ) equal to ( semester id of management ) ) ) ) , grouped by ( semester id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "For each semester, what is the name and id of the one with the most students registered?", "remark": "positive", "label": "1", "score": "0.45427605509757996"}
{"logic": "( date of treatment of likes ) , ( first name of highschooler ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) )", "text": "List the date of each treatment, together with the first name of the professional who do not operated it.", "remark": "logic", "label": "0", "score": "0.6167543530464172"}
{"logic": "( cost of treatment of department ) , ( treatment type description of management ) that belongs to ( ( treatments ) , and ( ( treatment types ) satisfied that ( ( treatment type code of department ) equal to ( treatment type code of management ) ) ) )", "text": "List the cost of each treatment and the corresponding treatment type description.", "remark": "positive", "label": "1", "score": "0.5914870500564575"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches )", "text": "Find the total number of matches.", "remark": "positive", "label": "1", "score": "0.4864451289176941"}
{"logic": "( owner id of department ) , ( zip code of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of management ) equal to ( dog id of head ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the sum of ( cost of treatment of head ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.", "remark": "positive", "label": "1", "score": "0.6480809450149536"}
{"logic": "( money rank ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order ) , limited to the top ( 1 )", "text": "Return the money rank of the player with the greatest earnings.", "remark": "positive", "label": "1", "score": "0.5741403698921204"}
{"logic": "( series name of department ) , ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( directed by of management ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of department ) , ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( directed by of management ) equal to ( 'ben jones' ) ))", "text": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "remark": "positive", "label": "1", "score": "0.6497353911399841"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of management ) ) ) , and ( ( countries ) satisfied that ( ( country of management ) equal to ( countryid of head ) ) ) ) , that have ( ( countryname of head ) equal to ( 'usa' ) )", "text": "What is the count of the car models produced in the United States?", "remark": "positive", "label": "1", "score": "0.34387344121932983"}
{"logic": "( the number of ( all items ) ) that belongs to ( singer )", "text": "What is the count of singers?", "remark": "positive", "label": "1", "score": "0.3728097975254059"}
{"logic": "( weekly rank ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the weekly rank for the episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.41256025433540344"}
{"logic": "( semester name of likes ) , ( semester id of likes ) that belongs to ( ( semesters ) , and ( ( student enrolment ) satisfied that ( ( semester id of likes ) equal to ( semester id of highschooler ) ) ) ) , grouped by ( semester id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "For each semester, what is the name of the one with the most students registered?", "remark": "value col", "label": "0", "score": "0.46123984456062317"}
{"logic": "( production code ) , ( channel ) that belongs to ( cartoon ) , ordered by ( ( original air date ) ) , limited to the top ( 1 )", "text": "What is the produdction code and channel of the most recent cartoon?", "remark": "positive", "label": "1", "score": "0.41369518637657166"}
{"logic": "( concert name of management ) , ( theme of management ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( concert ) satisfied that ( ( concert id of department ) equal to ( concert id of management ) ) ) ) , grouped by ( concert id of management )", "text": "What are the names, themes, and number of singers for each and every concert?", "remark": "positive", "label": "1", "score": "0.3449167013168335"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , grouped by ( name of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is name of the country that speaks the smallest number of languages?", "remark": "logic", "label": "0", "score": "0.39303621649742126"}
{"logic": "( the sum of ( population ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ) ) )", "text": "What is the total number of people living in the nations that do not use English?", "remark": "positive", "label": "1", "score": "0.3410031497478485"}
{"logic": "( orchestra ) that belongs to ( orchestra ) , that have ( ( orchestra_id ) not in ( ( orchestra id ) that belongs to ( performance ) ) )", "text": "List the names of orchestras that have performance.", "remark": "logic", "label": "0", "score": "0.5255610942840576"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , that have ( ( age of department ) greater than ( 20 ) )", "text": "How many pets are owned by students that have an age greater than 20?", "remark": "positive", "label": "1", "score": "0.4131978154182434"}
{"logic": "( name of department ) , ( population of department ) that belongs to ( ( city ) , and ( ( countrylanguage ) satisfied that ( ( countrycode of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ) , ordered by ( ( population of department ) in descending order ) , limited to the top ( 1 )", "text": "What is the most populace city that speaks English?", "remark": "positive", "label": "1", "score": "0.37700313329696655"}
{"logic": "( last name of department ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( current address id of department ) equal to ( address id of management ) ) ) ) , that have ( ( state province county of management ) equal to ( 'northcarolina' ) ), and except that ( ( distinct ( last name of head ) ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of head ) equal to ( student id of trip ) ) ) ))", "text": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.", "remark": "positive", "label": "1", "score": "0.6419076323509216"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( shop_id ) not in ( ( shop id ) that belongs to ( hiring ) ) )", "text": "Which shops run with employees? Find the shop names", "remark": "logic", "label": "0", "score": "0.45013388991355896"}
{"logic": "( course name of department ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) ) , grouped by ( course name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What's the name of the course with most number of enrollments?", "remark": "positive", "label": "1", "score": "0.37480849027633667"}
{"logic": "( template type code ) that belongs to ( ref template types ) , that have ( ( template type description ) equal to ( book ) )", "text": "Return the type name of the template type with the description \"Book\".", "remark": "value col", "label": "0", "score": "0.5989210605621338"}
{"logic": "( name of department ) , ( orchestra of management ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) )", "text": "What are the names of conductors as well as the corresonding orchestras that they have conducted?", "remark": "positive", "label": "1", "score": "0.3894772529602051"}
{"logic": "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )", "text": "What is the average, minimum, and maximum age of all singers from France?", "remark": "positive", "label": "1", "score": "0.32310280203819275"}
{"logic": "( first name of department ) , ( last name of department ) , ( size code of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) )", "text": "List each owner's first name, last name, and the size of his for her dog.", "remark": "positive", "label": "1", "score": "0.592939555644989"}
{"logic": "( the number of ( all items ) ) , ( district ) that belongs to ( city ) , that have ( ( population ) greater than ( the average of ( population ) ) that belongs to ( city ) ) , grouped by ( district )", "text": "Find the number of cities in each district whose population is greater than the average population of cities?", "remark": "positive", "label": "1", "score": "0.5715931057929993"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which grade has the most high schoolers?", "remark": "positive", "label": "1", "score": "0.4102698266506195"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( year ) equal to ( 1980 ) )", "text": "how many cars were produced in 1980?", "remark": "positive", "label": "1", "score": "0.4410747289657593"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "How many flights depart from 'APG'?", "remark": "positive", "label": "1", "score": "0.4845912456512451"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "Tell me the number of dogs that have received any treatment.", "remark": "positive", "label": "1", "score": "0.5215152502059937"}
{"logic": "( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) less than ( 1945 ) ), and intersect with ( ( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) greater than ( 1955 ) ))", "text": "Show the citizenship shared by singers with birth year before 1945 and after 1955.", "remark": "positive", "label": "1", "score": "0.5686690807342529"}
{"logic": "( the number of ( all items ) ) that belongs to ( pets ) , that have ( ( weight ) greater than ( 10 ) )", "text": "How many pets have a smaller weight than 10?", "remark": "logic", "label": "0", "score": "0.46164995431900024"}
{"logic": "( distinct ( template type description of likes ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of likes ) equal to ( template type code of highschooler ) ) ) , and ( ( documents ) satisfied that ( ( template id of highschooler ) equal to ( template id of area code state ) ) ) )", "text": "Return the different descriptions for templates that have not been used in a document.", "remark": "logic", "label": "0", "score": "0.5899863839149475"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "List all document ids with at least two paragraphs.", "remark": "positive", "label": "1", "score": "0.5847799181938171"}
{"logic": "( template type code of department ) , ( the number of ( all items ) ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template type code of department )", "text": "Show all template type codes and the number of documents using each type.", "remark": "positive", "label": "1", "score": "0.5771992206573486"}
{"logic": "( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( written by of management ) equal to ( 'todd casey' ) )", "text": "which countries' tv channels are playing some cartoon written by Todd Casey?", "remark": "positive", "label": "1", "score": "0.5030680298805237"}
{"logic": "( document id of department ) , ( document name of management ) , ( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , grouped by ( document id of department )", "text": "Show all document ids, names and the number of paragraphs in each document.", "remark": "positive", "label": "1", "score": "0.6007902026176453"}
{"logic": "( template type code ) , ( the number of ( all items ) ) that belongs to ( templates ) , grouped by ( template type code )", "text": "What are the different template type codes, and how many templates in average correspond to each?", "remark": "logic", "label": "0", "score": "0.3756466209888458"}
{"logic": "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )", "text": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?", "remark": "positive", "label": "1", "score": "0.40203291177749634"}
{"logic": "( the sum of ( population ) ) that belongs to ( city ) , that have ( ( district ) equal to ( gelderland ) )", "text": "What is the total population of Gelderland district?", "remark": "positive", "label": "1", "score": "0.37034645676612854"}
{"logic": "( transcript date of highschooler ) , ( transcript id of likes ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of likes ) equal to ( transcript id of highschooler ) ) ) ) , grouped by ( transcript id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the date and id of the transcript with at least 3 course results.", "remark": "value int", "label": "0", "score": "0.578105628490448"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "What are  the different countries with singers above age 20?", "remark": "positive", "label": "1", "score": "0.3648955821990967"}
{"logic": "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))", "text": "What are the ids of the TV channels that do have any cartoons directed by Ben Jones?", "remark": "logic", "label": "0", "score": "0.4345894753932953"}
{"logic": "( city ) that belongs to ( employee ) , that have ( ( age ) less than ( 30 ) ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Which cities do more than one employee under age 30 come from?", "remark": "positive", "label": "1", "score": "0.41457757353782654"}
{"logic": "( the number of ( all items ) ) that belongs to ( battle ) , that have ( ( id ) not in ( ( lost in battle ) that belongs to ( ship ) , that have ( ( tonnage ) equal to ( '225' ) ) ) )", "text": "How many battles did not lose any ship with tonnage '225'?", "remark": "positive", "label": "1", "score": "0.46420449018478394"}
{"logic": "( museum id of catalog structure ) , ( name of catalogs ) that belongs to ( ( museum ) , and ( ( visit ) satisfied that ( ( museum id of catalogs ) equal to ( museum id of catalog structure ) ) ) ) , grouped by ( museum id of catalog structure ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What are the id and name of the museum visited most times?", "remark": "positive", "label": "1", "score": "0.4233865737915039"}
{"logic": "( department description ) that belongs to ( departments ) , that have ( ( department_name ) like ( '%computer%' ) )", "text": "What is the description of the department whose name has the substring the computer?", "remark": "positive", "label": "1", "score": "0.4105497896671295"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "Find all airlines that have fewer than 200 flights.", "remark": "positive", "label": "1", "score": "0.6114877462387085"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( region ) equal to ( caribbean ) )", "text": "What is the total surface area of the countries in the Caribbean region?", "remark": "positive", "label": "1", "score": "0.3490363359451294"}
{"logic": "( fullname of department ) , ( id of department ) , ( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department )", "text": "What is the full name of each car maker, along with its id and how many models it produces?", "remark": "positive", "label": "1", "score": "0.3769831657409668"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( performance ) , that have ( ( type ) not equal to ( live final ) )", "text": "What are the maximum and minimum share of performances whose type is not \"Live final\".", "remark": "positive", "label": "1", "score": "0.3026050925254822"}
{"logic": "( the average of ( gnp ) ) , ( the sum of ( population ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( us territory ) )", "text": "What is the average GNP and total population in all nations whose government is US territory?", "remark": "positive", "label": "1", "score": "0.39219316840171814"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which country has the least of TV Channels? List the country and number of TV Channels it has.", "remark": "logic", "label": "0", "score": "0.5360965132713318"}
{"logic": "( the maximum of ( charge amount ) ) that belongs to ( charges )", "text": "What is the charge amount of the most expensive charge type?", "remark": "positive", "label": "1", "score": "0.38376814126968384"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( likes ) , grouped by ( student id )", "text": "Count the number of likes for each student id.", "remark": "positive", "label": "1", "score": "0.5117152333259583"}
{"logic": "( airportcode of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of department ) equal to ( destairport of management ) ) or ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) ) , grouped by ( airportcode of department ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "Give the code of the airport with the least flights.", "remark": "positive", "label": "1", "score": "0.5934434533119202"}
{"logic": "( created of management ) , ( state of management ) , ( phone number of management ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) ) , that have ( ( contestant name of department ) equal to ( 'tabatha gehling' ) )", "text": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?", "remark": "positive", "label": "1", "score": "0.41025641560554504"}
{"logic": "( last name of likes ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( current address id of likes ) equal to ( address id of highschooler ) ) ) ) , that have ( ( state province county of highschooler ) equal to ( 'northcarolina' ) ), and except that ( ( distinct ( last name of area code state ) ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of area code state ) equal to ( student id of car makers ) ) ) ))", "text": "What are the first name of the students who live in North Carolina but have not registered in any degree programs?", "remark": "value col", "label": "0", "score": "0.4081662893295288"}
{"logic": "( cell mobile number ) that belongs to ( students ) , that have ( ( ( first name ) equal to ( 'timmothy' ) ) and ( ( last name ) equal to ( 'ward' ) ) )", "text": "What is the phone number of the man with the first name Timmothy and the last name Ward?", "remark": "positive", "label": "1", "score": "0.4939134418964386"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?", "remark": "positive", "label": "1", "score": "0.38130757212638855"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( weight of management ) less than ( the average of ( weight ) ) that belongs to ( cars data ) )", "text": "Find the model of the car whose weight is below the average weight.", "remark": "positive", "label": "1", "score": "0.6198154091835022"}
{"logic": "( distinct ( name of area code state ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) , and ( ( city ) satisfied that ( ( code of likes ) equal to ( countrycode of area code state ) ) ) ) , that have ( ( ( isofficial of highschooler ) equal to ( 't' ) ) and ( ( language of highschooler ) equal to ( 'chinese' ) ) and ( ( continent of likes ) equal to ( asia ) ) )", "text": "Whic`h unique cities are in  Asian countries where Janpanese is the official language?", "remark": "value str", "label": "0", "score": "0.48523709177970886"}
{"logic": "( name of head ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) ) , that have ( ( course of management ) equal to ( math ) )", "text": "Show the name of the teacher for the math course.", "remark": "positive", "label": "1", "score": "0.5942743420600891"}
{"logic": "( name ) , ( tonnage ) that belongs to ( ship ) , ordered by ( ( name ) in descending order )", "text": "List the name and tonnage ordered by in ascending alphabetical order for the names.", "remark": "logic", "label": "0", "score": "0.5909255743026733"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "Which country does Airline \"JetBlue Airways\" belong to?", "remark": "positive", "label": "1", "score": "0.4298802614212036"}
{"logic": "( countrycode ) that belongs to ( countrylanguage ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "What are the country codes for countries that do not speak English?", "remark": "positive", "label": "1", "score": "0.36635443568229675"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( grade of management ) greater than ( 5 ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the names of students who have a grade higher than 5 and have at least 2 friends.", "remark": "positive", "label": "1", "score": "0.558463990688324"}
{"logic": "( region ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( kabul ) )", "text": "Which region is the city Beijing located in?", "remark": "value str", "label": "0", "score": "0.4685969948768616"}
{"logic": "( earnings ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order )", "text": "List the earnings of poker players in descending order.", "remark": "positive", "label": "1", "score": "0.5355488061904907"}
{"logic": "( the maximum of ( final table made ) ) that belongs to ( poker player ) , that have ( ( earnings ) less than ( 200000 ) )", "text": "What is the maximum number of final tables made among poker players with earnings less than 200000?", "remark": "positive", "label": "1", "score": "0.3772592544555664"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of management ) equal to ( uid of department ) ) ) ) , that have ( ( ( airline of department ) equal to ( united airlines ) ) and ( ( destairport of management ) equal to ( asy ) ) )", "text": "Count the number of United Airlines flights arriving in ASY Airport.", "remark": "positive", "label": "1", "score": "0.5388046503067017"}
{"logic": "( cost of treatment ) that belongs to ( treatments ) , ordered by ( ( date of treatment ) in descending order ) , limited to the top ( 1 )", "text": "Show me the cost of the most recently performed treatment.", "remark": "positive", "label": "1", "score": "0.5669121146202087"}
{"logic": "( distinct ( name of head ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) , and ( ( city ) satisfied that ( ( code of department ) equal to ( countrycode of head ) ) ) ) , that have ( ( ( isofficial of management ) equal to ( 't' ) ) and ( ( language of management ) equal to ( 'chinese' ) ) and ( ( continent of department ) equal to ( asia ) ) )", "text": "Return the different names of cities that are in Asia and for which Chinese is the official language.", "remark": "positive", "label": "1", "score": "0.6238054037094116"}
{"logic": "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of department ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) ) )", "text": "What is the lowest grade of students who do not have any friends?", "remark": "positive", "label": "1", "score": "0.34637898206710815"}
{"logic": "( the sum of ( ranking points ) ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , grouped by ( first name of department )", "text": "Find the total ranking points for each player and their first name.", "remark": "positive", "label": "1", "score": "0.5982834100723267"}
{"logic": "( the number of ( all items ) ) that belongs to ( ship ) , that have ( ( disposition of ship ) equal to ( 'captured' ) )", "text": "How many ships ended up being 'Captured'?", "remark": "positive", "label": "1", "score": "0.47504010796546936"}
{"logic": "( the number of ( all items ) ) that belongs to ( cartoon ) , that have ( ( written by ) equal to ( joseph kuhr ) )", "text": "How many cartoons were not written by \"Joseph Kuhr\"?", "remark": "logic", "label": "0", "score": "0.49138301610946655"}
{"logic": "( email address ) , ( cell number ) , ( home phone ) that belongs to ( professionals )", "text": "List the email, cell phone and home phone of all the professionals.", "remark": "positive", "label": "1", "score": "0.5644444227218628"}
{"logic": "( first name ) , ( last name ) , ( email address ) that belongs to ( owners ) , that have ( ( state ) like ( '%north%' ) )", "text": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.", "remark": "positive", "label": "1", "score": "0.6262131333351135"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the document id with least number of paragraphs?", "remark": "positive", "label": "1", "score": "0.39772292971611023"}
{"logic": "( the number of ( distinct ( country code ) ) ) that belongs to ( players )", "text": "find the number of distinct country codes of all players.", "remark": "positive", "label": "1", "score": "0.5062080025672913"}
{"logic": "( stuid ) that belongs to ( student ), and except that ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ))", "text": "What are the ids of the students who do not own dogs as pets?", "remark": "value str", "label": "0", "score": "0.39774253964424133"}
{"logic": "( winner name ) , ( loser name ) that belongs to ( matches ) , ordered by ( ( minutes ) in descending order ) , limited to the top ( 1 )", "text": "find the names of loser who played in the match with greatest number of minutes.", "remark": "value col", "label": "0", "score": "0.5747002363204956"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of head ) ) ) ) , that have ( ( ( city of management ) equal to ( ashley ) ) and ( ( city of head ) equal to ( aberdeen ) ) )", "text": "How many flights fly from Aberdeen to Ashley?", "remark": "positive", "label": "1", "score": "0.45371565222740173"}
{"logic": "( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "Return the codes of countries for which Spanish is the predominantly spoken language.", "remark": "positive", "label": "1", "score": "0.5905573964118958"}
{"logic": "( the number of ( all items ) ) , ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) , grouped by ( stuid of likes )", "text": "For students who have pets, how many pets does in total the students have?", "remark": "logic", "label": "0", "score": "0.4947362244129181"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( governmentform ) equal to ( republic ) ) )", "text": "What is the average life expectancy in African countries that are republics?", "remark": "positive", "label": "1", "score": "0.3647087812423706"}
{"logic": "( cell mobile number ) that belongs to ( students ) , that have ( ( ( first name ) equal to ( 'timmothy' ) ) and ( ( last name ) equal to ( 'ward' ) ) )", "text": "What is the mobile phone number of the student named Timothy Ward?", "remark": "positive", "label": "1", "score": "0.47329673171043396"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) between ( 1 ) and ( 2 ) )", "text": "Give the ids of documents that have between one and two paragraphs.", "remark": "positive", "label": "1", "score": "0.5896589756011963"}
{"logic": "( record company ) that belongs to ( orchestra ) , grouped by ( record company ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the record company used by the greatest number of orchestras?", "remark": "positive", "label": "1", "score": "0.3755075931549072"}
{"logic": "( birth date of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( earnings of management ) in ascending order ) , limited to the top ( 1 )", "text": "Return the birth date of the poker player with the lowest earnings.", "remark": "positive", "label": "1", "score": "0.5966252684593201"}
{"logic": "( transcript date of management ) , ( transcript id of department ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of department ) equal to ( transcript id of management ) ) ) ) , grouped by ( transcript id of department ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "Show the date of the transcript which shows the least number of results, also list the id.", "remark": "positive", "label": "1", "score": "0.5909916758537292"}
{"logic": "( the number of ( distinct ( location ) ) ) that belongs to ( shop )", "text": "Count the number of distinct store locations.", "remark": "positive", "label": "1", "score": "0.4941866099834442"}
{"logic": "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )", "text": "Find the id and weight of all pets whose age is older than 1.", "remark": "positive", "label": "1", "score": "0.5513900518417358"}
{"logic": "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )", "text": "What are the names of distinct languages used around the world?", "remark": "value col", "label": "0", "score": "0.36257877945899963"}
{"logic": "( stuid ) that belongs to ( student ), and except that ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ))", "text": "What are the ids of the students who do not own cats as pets?", "remark": "positive", "label": "1", "score": "0.4012611210346222"}
{"logic": "( distinct ( year of department ) ) that belongs to ( ( cars data ) ) , that have ( ( ( weight of department ) greater than ( 3000 ) ) and ( ( weight of department ) less than ( 4000 ) ) )", "text": "In which years cars were produced weighing no less than 3000 and no more than 4000?", "remark": "positive", "label": "1", "score": "0.40112778544425964"}
{"logic": "( the number of ( distinct ( loser name ) ) ) that belongs to ( matches )", "text": "How many different loser names are there?", "remark": "positive", "label": "1", "score": "0.42040297389030457"}
{"logic": "( the maximum of ( age ) ) that belongs to ( dogs )", "text": "What is the age of the oldest cat?", "remark": "value table", "label": "0", "score": "0.4084412455558777"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the conductor who has worked the fewest number of years?", "remark": "logic", "label": "0", "score": "0.4050023853778839"}
{"logic": "( the number of ( all items ) ) that belongs to ( transcripts )", "text": "How many transcripts are not released?", "remark": "logic", "label": "0", "score": "0.44552212953567505"}
{"logic": "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )", "text": "What is the average, minimum, and total age for all French singers?", "remark": "logic", "label": "0", "score": "0.3078123927116394"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( apg ) )", "text": "Give the flight numbers of flights landing at APG.", "remark": "positive", "label": "1", "score": "0.5940077900886536"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2013 ) ), and intersect with ( ( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2016 ) ))", "text": "What are the names of players who won in both 2013 and 2016?", "remark": "positive", "label": "1", "score": "0.3599020540714264"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , grouped by ( stadium id of department )", "text": "Show the stadium name and the number of concerts in each stadium.", "remark": "positive", "label": "1", "score": "0.5879098176956177"}
{"logic": "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )", "text": "Return the names of conductors that do not have the nationality \"China\".", "remark": "value str", "label": "0", "score": "0.5765713453292847"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , ordered by ( ( capacity of management ) in descending order ) , limited to the top ( 1 )", "text": "What are the number of concerts that occurred in the stadium with the largest capacity?", "remark": "positive", "label": "1", "score": "0.32989510893821716"}
{"logic": "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of likes ) , ( last name of likes ) , ( cell number of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ) , grouped by ( professional id of likes ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Which professionals live in the state of Indiana or have done treatment on less than 2 treatments? List his or her id, last name and cell phone.", "remark": "logic", "label": "0", "score": "0.6011497974395752"}
{"logic": "( code ) that belongs to ( country ) , that have ( ( governmentform ) not equal to ( republic ) ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "What are the codes of the countries that do not speak English and whose government forms are not Republic?", "remark": "positive", "label": "1", "score": "0.37317153811454773"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( surfacearea ) greater than ( the minimum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( europe ) ) )", "text": "Which countries have greater area than that of any country in Europe?", "remark": "positive", "label": "1", "score": "0.3910178542137146"}
{"logic": "( template id of management ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of department ) equal to ( template type code of management ) ) ) ) , that have ( ( template type description of department ) equal to ( presentation ) )", "text": "Return the ids corresponding to templates with the description 'Presentation'.", "remark": "positive", "label": "1", "score": "0.6012834906578064"}
{"logic": "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )", "text": "What are the names of conductors whose nationalities are not \"USA\"?", "remark": "positive", "label": "1", "score": "0.37071871757507324"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the hometowns shared by at least three teachers.", "remark": "value int", "label": "0", "score": "0.5894217491149902"}
{"logic": "( the number of ( all items ) ) that belongs to ( transcripts )", "text": "How many transcripts are listed?", "remark": "positive", "label": "1", "score": "0.46485963463783264"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( hometown ) not equal to ( little lever urban distric ) )", "text": "List the id of teachers whose hometown is not \"Little Lever Urban District\".", "remark": "value col", "label": "0", "score": "0.560847282409668"}
{"logic": "( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "Return the codes of countries for which Spanish is not the predominantly spoken language.", "remark": "logic", "label": "0", "score": "0.5884954333305359"}
{"logic": "( the number of ( all items ) ) , ( name of catalog structure ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of catalogs ) equal to ( shop id of catalog structure ) ) ) ) , grouped by ( name of catalog structure )", "text": "Find the number of employees hired in each shop; show the shop name as well.", "remark": "positive", "label": "1", "score": "0.674809992313385"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , grouped by ( stadium id of department )", "text": "For each stadium, how many concerts play there?", "remark": "positive", "label": "1", "score": "0.4959767758846283"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( country )", "text": "How many singers are from each country?", "remark": "positive", "label": "1", "score": "0.43836110830307007"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( conductor )", "text": "Count the number of different nationalities of conductors.", "remark": "positive", "label": "1", "score": "0.48123520612716675"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of department ) equal to ( uid of management ) ) ) ) , that have ( ( airline of management ) equal to ( jetblue airways ) )", "text": "Give the number of Jetblue Airways flights.", "remark": "positive", "label": "1", "score": "0.5743584036827087"}
{"logic": "( the number of ( all items ) ) that belongs to ( continents )", "text": "What is the number of continents?", "remark": "positive", "label": "1", "score": "0.4010254144668579"}
{"logic": "( accelerate of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( make of management ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "How much does the car accelerate that makes amc hornet sportabout (sw)?", "remark": "positive", "label": "1", "score": "0.4452972710132599"}
{"logic": "( horsepower of management ) , ( make of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( cylinders of management ) equal to ( 3 ) ) , ordered by ( ( horsepower of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?", "remark": "positive", "label": "1", "score": "0.37112295627593994"}
{"logic": "( name of department ) , ( the sum of ( sales of management ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( name of department )", "text": "Show the names of singers and the total sales of their songs.", "remark": "positive", "label": "1", "score": "0.5656812191009521"}
{"logic": "( the number of ( distinct ( loser name ) ) ) that belongs to ( matches )", "text": "How many loser names are there?", "remark": "logic", "label": "0", "score": "0.4326390326023102"}
{"logic": "( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) less than ( 2003 ) ), and intersect with ( ( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) greater than ( 2003 ) ))", "text": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?", "remark": "positive", "label": "1", "score": "0.34614813327789307"}
{"logic": "( the sum of ( population ) ) , ( the average of ( lifeexpectancy ) ) , ( continent ) that belongs to ( country ) , grouped by ( continent ) , that have ( ( the average of ( lifeexpectancy ) ) less than ( 72 ) )", "text": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 82?", "remark": "value int", "label": "0", "score": "0.5487668514251709"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( accelerate ) greater than ( accelerate ) that belongs to ( cars data ) , ordered by ( ( horsepower ) in descending order ) , limited to the top ( 1 ) )", "text": "How many cars have a larger accelerate than the car with the largest horsepower?", "remark": "positive", "label": "1", "score": "0.454732745885849"}
{"logic": "( template id ) that belongs to ( documents ) , grouped by ( template id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show ids for all templates that are used by more than one document.", "remark": "positive", "label": "1", "score": "0.583491861820221"}
{"logic": "( countrycode ) that belongs to ( countrylanguage ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "Return the country codes for countries that do not speak English.", "remark": "positive", "label": "1", "score": "0.5728644728660583"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( region ) equal to ( caribbean ) )", "text": "What is the average surface area of the countries in the Caribbean region?", "remark": "logic", "label": "0", "score": "0.3495643138885498"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "What are the airline names and abbreviations for airlines in the USA?", "remark": "positive", "label": "1", "score": "0.38216632604599"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )", "text": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?", "remark": "positive", "label": "1", "score": "0.45369985699653625"}
{"logic": "( template id ) that belongs to ( templates ), and except that ( ( template id ) that belongs to ( documents ))", "text": "Show ids for all templates not used by any document.", "remark": "positive", "label": "1", "score": "0.5423970222473145"}
{"logic": "( the number of ( all items ) ) that belongs to ( templates ) , that have ( ( template type code ) equal to ( cv ) )", "text": "Count the number of templates of the type CV.", "remark": "positive", "label": "1", "score": "0.5620219707489014"}
{"logic": "( the number of ( all items ) ) that belongs to ( poker player )", "text": "Count the number of poker players.", "remark": "positive", "label": "1", "score": "0.4975336790084839"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the name of the high school student with the most friends.", "remark": "positive", "label": "1", "score": "0.602209210395813"}
{"logic": "( first name of department ) , ( middle name of department ) , ( last name of department ) , ( student id of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )", "text": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?", "remark": "positive", "label": "1", "score": "0.3547099530696869"}
{"logic": "( tourney name ) that belongs to ( matches ) , grouped by ( tourney name ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "Find the name of tourney that has more than 10 matches.", "remark": "positive", "label": "1", "score": "0.6151590943336487"}
{"logic": "( weekly rank ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.40612053871154785"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of likes ) equal to ( stadium id of highschooler ) ) ) ) , ordered by ( ( capacity of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "Find the number of concerts happened in the stadium with the lowest capacity.", "remark": "logic", "label": "0", "score": "0.5786985158920288"}
{"logic": "( name of catalogs ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of catalogs ) equal to ( employee id of catalog structure ) ) ) ) , grouped by ( employee id of catalog structure ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which employee received the most awards in evaluations? Give me the employee name.", "remark": "positive", "label": "1", "score": "0.5203437209129333"}
{"logic": "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )", "text": "How many languages are spoken in the world?", "remark": "logic", "label": "0", "score": "0.41460248827934265"}
{"logic": "( first name ) , ( last name ) , ( email address ) that belongs to ( owners ) , that have ( ( state ) like ( '%north%' ) )", "text": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.", "remark": "positive", "label": "1", "score": "0.6210781335830688"}
{"logic": "( continent of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( continent of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which continent has the most diverse languages?", "remark": "positive", "label": "1", "score": "0.4002882242202759"}
{"logic": "( degree summary name of department ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , grouped by ( degree summary name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the degree summary name that has the most number of students enrolled?", "remark": "positive", "label": "1", "score": "0.3561032712459564"}
{"logic": "( year ) that belongs to ( matches ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which year had the most matches?", "remark": "positive", "label": "1", "score": "0.4275537431240082"}
{"logic": "( makeid of highschooler ) , ( make of highschooler ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( ( horsepower of likes ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of likes ) less than or equal to ( 3 ) ) )", "text": "Among the cars with more than lowest horsepower, which ones do have more than 3 cylinders? List the car makeid and make name.", "remark": "logic", "label": "0", "score": "0.5652564167976379"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( earnings of management ) in descending order )", "text": "Return the names of poker players sorted by their earnings descending.", "remark": "positive", "label": "1", "score": "0.6348076462745667"}
{"logic": "( fname of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ), and intersect with ( ( fname of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'dog' ) ))", "text": "What are the students' first names who have either cats or dogs as pets?", "remark": "logic", "label": "0", "score": "0.4289853572845459"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "Give the flight numbers of flights arriving in Aberdeen.", "remark": "positive", "label": "1", "score": "0.6187353134155273"}
{"logic": "( pixel aspect ratio par ) , ( country ) that belongs to ( tv channel ) , that have ( ( language ) not equal to ( 'english' ) )", "text": "find the pixel aspect ratio and nation of the tv channels that do not use Spanish.", "remark": "value str", "label": "0", "score": "0.5488556623458862"}
{"logic": "( country ) that belongs to ( tv channel ), and except that ( ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( written by of management ) equal to ( 'todd casey' ) ))", "text": "which countries' tv channels are not playing any cartoon written by Todd Casey?", "remark": "positive", "label": "1", "score": "0.4902421534061432"}
{"logic": "( the number of ( all items ) ) , ( hand ) that belongs to ( players ) , grouped by ( hand )", "text": "Find the number of players for each hand type.", "remark": "positive", "label": "1", "score": "0.5355323553085327"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )", "text": "List each language and the number of TV Channels not using it.", "remark": "logic", "label": "0", "score": "0.5442466139793396"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( dogs ) )", "text": "Count the number of dogs of an age below the average.", "remark": "positive", "label": "1", "score": "0.5409668684005737"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( name of department ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "How many official languages are spoken in Afghanistan?", "remark": "positive", "label": "1", "score": "0.46261468529701233"}
{"logic": "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )", "text": "What are the names and areas of countries with the top 5 smallest area?", "remark": "logic", "label": "0", "score": "0.3263384699821472"}
{"logic": "( title ) that belongs to ( cartoon ) , ordered by ( ( title ) )", "text": "What are the titles of the cartoons sorted alphabetically?", "remark": "positive", "label": "1", "score": "0.3873293995857239"}
{"logic": "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which language is spoken by the largest number of countries?", "remark": "positive", "label": "1", "score": "0.41492584347724915"}
{"logic": "( episode of management ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( series name of department ) equal to ( sky radio ) )", "text": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".", "remark": "positive", "label": "1", "score": "0.5979952216148376"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "Return the number of flights arriving in Aberdeen.", "remark": "positive", "label": "1", "score": "0.6301655173301697"}
{"logic": "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )", "text": "How many departments offer any degree?", "remark": "positive", "label": "1", "score": "0.4088500142097473"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the singer with the largest net worth?", "remark": "positive", "label": "1", "score": "0.3678267002105713"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( cylinders of management ) equal to ( 4 ) ) , ordered by ( ( horsepower of management ) in descending order ) , limited to the top ( 1 )", "text": "For all of the 4 cylinder cars, which model has the most horsepower?", "remark": "positive", "label": "1", "score": "0.4790685474872589"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( conductor )", "text": "How many different nationalities do conductors have?", "remark": "positive", "label": "1", "score": "0.4015868008136749"}
{"logic": "( petid of management ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , that have ( ( lname of department ) equal to ( 'smith' ) )", "text": "What is the id of the pet owned by the student whose last name is 'Smith'?", "remark": "positive", "label": "1", "score": "0.4550701379776001"}
{"logic": "( first name of likes ) , ( country code of likes ) , ( birth date of likes ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of likes ) equal to ( winner id of highschooler ) ) ) ) , ordered by ( ( winner rank points of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "What is the last name, country code, and birth date of the player with the most winner rank points across all matches?", "remark": "value col", "label": "0", "score": "0.3884626626968384"}
{"logic": "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )", "text": "What is the version number and template type code for the template with version number earlier than 5?", "remark": "logic", "label": "0", "score": "0.40611550211906433"}
{"logic": "( makeid of highschooler ) , ( make of highschooler ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( ( horsepower of likes ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of likes ) less than or equal to ( 3 ) ) )", "text": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 3 cylinders?", "remark": "value int", "label": "0", "score": "0.4123266339302063"}
{"logic": "( id of highschooler ) , ( name of highschooler ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( id of highschooler ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the ship id and name that caused fewest total injuries?", "remark": "logic", "label": "0", "score": "0.3676110506057739"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in ascending order ) , limited to the top ( 3 )", "text": "Return the names of the 3 countries with the fewest people.", "remark": "positive", "label": "1", "score": "0.5666677355766296"}
{"logic": "( document name of management ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( template type code of department ) equal to ( bk ) )", "text": "What are the names of documents that use templates with the code BK?", "remark": "positive", "label": "1", "score": "0.38857966661453247"}
{"logic": "( charge type ) , ( charge amount ) that belongs to ( charges )", "text": "How much does each charge type costs? List both charge type and amount.", "remark": "positive", "label": "1", "score": "0.5348795056343079"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the type code of the template type that the most templates belong to.", "remark": "positive", "label": "1", "score": "0.6132304668426514"}
{"logic": "( title ) , ( directed by ) that belongs to ( cartoon ) , ordered by ( ( original air date ) )", "text": "list all cartoon titles and their directors ordered by their air date", "remark": "positive", "label": "1", "score": "0.587390124797821"}
{"logic": "( name of management ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) , and ( ( concert ) satisfied that ( ( concert id of department ) equal to ( concert id of head ) ) ) ) , that have ( ( year of head ) equal to ( 2014 ) )", "text": "What are the names of the singers who performed in a concert in 2014?", "remark": "positive", "label": "1", "score": "0.35730043053627014"}
{"logic": "( section name ) , ( section description ) that belongs to ( sections )", "text": "What are the descriptions for all the sections?", "remark": "value col", "label": "0", "score": "0.3876892030239105"}
{"logic": "( year ) that belongs to ( matches ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which month had the most matches?", "remark": "value col", "label": "0", "score": "0.4350026249885559"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( weight of highschooler ) less than ( the average of ( weight ) ) that belongs to ( cars data ) )", "text": "What is the name for the car with a weight smaller than the average?", "remark": "value col", "label": "0", "score": "0.3781889081001282"}
{"logic": "( other details ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'korea' ) )", "text": "What are the details for the paragraph that includes the text 'Korea'?", "remark": "positive", "label": "1", "score": "0.41924726963043213"}
{"logic": "( name of management ) , ( location of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2014 ) ), and intersect with ( ( name of management ) , ( location of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2015 ) ))", "text": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?", "remark": "positive", "label": "1", "score": "0.40716612339019775"}
{"logic": "( distinct ( template type description of department ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of department ) equal to ( template type code of management ) ) ) , and ( ( documents ) satisfied that ( ( template id of management ) equal to ( template id of head ) ) ) )", "text": "What are the distinct template type descriptions for the templates ever used by any document?", "remark": "positive", "label": "1", "score": "0.3714665174484253"}
{"logic": "( year of founded ) that belongs to ( ( orchestra ) , and ( ( performance ) satisfied that ( ( orchestra id of department ) equal to ( orchestra id of management ) ) ) ) , grouped by ( orchestra id of management ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are years of founding for orchestras that have had more than a single performance?", "remark": "positive", "label": "1", "score": "0.3686995208263397"}
{"logic": "( course name of department ) , ( course id of department ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) ) , grouped by ( course id of department ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "text": "What are the names and id of courses having at most 2 sections?", "remark": "positive", "label": "1", "score": "0.3576204180717468"}
{"logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) ) )", "text": "What is the average age for all students who do not own any pets?", "remark": "positive", "label": "1", "score": "0.37606552243232727"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) or ( ( continent ) equal to ( europe ) ) )", "text": "Give the total surface area covered by countries in Asia or Europe.", "remark": "positive", "label": "1", "score": "0.5661338567733765"}
{"logic": "( countryname of department ) that belongs to ( ( countries ) , and ( ( continents ) satisfied that ( ( continent of department ) equal to ( contid of management ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of head ) ) ) ) , that have ( ( continent of management ) equal to ( 'europe' ) ) , grouped by ( countryname of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "Which countries in europe have at least 3 car manufacturers?", "remark": "positive", "label": "1", "score": "0.3808511793613434"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 4 ) )", "text": "How many cars have more than 4 cylinders?", "remark": "positive", "label": "1", "score": "0.44704386591911316"}
{"logic": "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )", "text": "What is the name and country of origin of every singer who has a song without the word 'Hey' in its title?", "remark": "logic", "label": "0", "score": "0.3901406526565552"}
{"logic": "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ) ) )", "text": "What major is every student who does not own a cat as a pet, and also how old are they?", "remark": "positive", "label": "1", "score": "0.42983683943748474"}
{"logic": "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "What is the number of the flights of Airline \"JetBlue Airways\"?", "remark": "logic", "label": "0", "score": "0.42983701825141907"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( surfacearea ) greater than ( the minimum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( europe ) ) )", "text": "What are the countries that have smaller surface area than any country in Europe?", "remark": "logic", "label": "0", "score": "0.3268025815486908"}
{"logic": "( the sum of ( tours ) ) , ( ranking date ) that belongs to ( rankings ) , grouped by ( ranking date )", "text": "How many total tours were there for each ranking date?", "remark": "positive", "label": "1", "score": "0.4301224648952484"}
{"logic": "( weight ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 4 ) ) and ( ( year ) equal to ( 1974 ) ) ) , ordered by ( ( weight ) in ascending order ) , limited to the top ( 1 )", "text": "What is the smallest weight of the car produced with 8 cylinders on 1974?", "remark": "positive", "label": "1", "score": "0.385346919298172"}
{"logic": "( name ) , ( age ) , ( weight ) that belongs to ( dogs ) , that have ( ( abandoned yn ) equal to ( 1 ) )", "text": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "remark": "positive", "label": "1", "score": "0.4265856146812439"}
{"logic": "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))", "text": "What are the ids of documents that contain the paragraph text 'Brazil' or 'Ireland'?", "remark": "logic", "label": "0", "score": "0.3903498947620392"}
{"logic": "( hometown ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )", "text": "What is the hometown of the youngest teacher?", "remark": "positive", "label": "1", "score": "0.41029709577560425"}
{"logic": "( money rank ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order ) , limited to the top ( 1 )", "text": "Return the money rank of the player with the lowest earnings.", "remark": "logic", "label": "0", "score": "0.5683853030204773"}
{"logic": "( fullname of department ) , ( id of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )", "text": "What are the names and ids of all makers with more than 3 models?", "remark": "positive", "label": "1", "score": "0.3435329496860504"}
{"logic": "( fullname of likes ) , ( id of likes ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of likes ) equal to ( maker of highschooler ) ) ) ) , grouped by ( id of likes ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )", "text": "Which makers designed more than 4 car models? List full name and the id.", "remark": "value int", "label": "0", "score": "0.5079425573348999"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 4 ) )", "text": "Which grades have 4 or more high schoolers?", "remark": "positive", "label": "1", "score": "0.4158135652542114"}
{"logic": "( name of department ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( name of department ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are the names of the singers that have more than one songs?", "remark": "positive", "label": "1", "score": "0.3374040424823761"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( city of highschooler ) equal to ( aberdeen ) )", "text": "How many flights arriving in Mexico city?", "remark": "value str", "label": "0", "score": "0.4664041996002197"}
{"logic": "( year ) that belongs to ( concert ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which year has most number of concerts?", "remark": "positive", "label": "1", "score": "0.4074355661869049"}
{"logic": "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )", "text": "What is the version number and template type code for the template with version number later than 5?", "remark": "positive", "label": "1", "score": "0.3998952805995941"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which template type code has most number of templates?", "remark": "positive", "label": "1", "score": "0.45697835087776184"}
{"logic": "( the average of ( winner rank ) ) that belongs to ( matches )", "text": "What is the total rank for winners in all matches?", "remark": "logic", "label": "0", "score": "0.36755526065826416"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) ) , ordered by ( ( final table made of highschooler ) )", "text": "List the names of poker players ordered by the final tables made in descending order.", "remark": "logic", "label": "0", "score": "0.6204314827919006"}
{"logic": "( district ) that belongs to ( shop ) , that have ( ( number products ) less than ( 3000 ) ), and intersect with ( ( district ) that belongs to ( shop ) , that have ( ( number products ) greater than ( 10000 ) ))", "text": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.", "remark": "positive", "label": "1", "score": "0.6085878610610962"}
{"logic": "( distinct ( model of department ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of management ) equal to ( id of head ) ) ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of trip ) ) ) ) , that have ( ( ( weight of head ) less than ( 3500 ) ) and ( ( fullname of trip ) not equal to ( 'ford motor company' ) ) )", "text": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?", "remark": "positive", "label": "1", "score": "0.4253593981266022"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( population ) less than ( the minimum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) ) )", "text": "Which African countries have a larger population than that of any country in Asia?", "remark": "logic", "label": "0", "score": "0.40332895517349243"}
{"logic": "( the number of ( all items ) ) that belongs to ( area code state )", "text": "How many different states are there?", "remark": "logic", "label": "0", "score": "0.43931493163108826"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( dutch ) )) r\" )", "text": "What is the number of nations that use English and Dutch?", "remark": "positive", "label": "1", "score": "0.361507385969162"}
{"logic": "( the number of ( all items ) ) that belongs to ( tv channel ) , that have ( ( language ) equal to ( english ) )", "text": "How many TV Channels use the English language?", "remark": "positive", "label": "1", "score": "0.451711505651474"}
{"logic": "( name of highschooler ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the name of the high school student with the least friends.", "remark": "logic", "label": "0", "score": "0.602733850479126"}
{"logic": "( the number of ( all items ) ) that belongs to ( employee )", "text": "How many employees are there?", "remark": "positive", "label": "1", "score": "0.4663357436656952"}
{"logic": "( maker ) , ( model ) that belongs to ( model list )", "text": "What are all the makers?", "remark": "value col", "label": "0", "score": "0.43461334705352783"}
{"logic": "( the number of ( all items ) ) , ( hand ) that belongs to ( players ) , grouped by ( hand )", "text": "How many players are there for each hand type?", "remark": "positive", "label": "1", "score": "0.43544286489486694"}
{"logic": "( name of head ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) ) , that have ( ( course of management ) equal to ( math ) )", "text": "What are the names of the people who teach math courses?", "remark": "positive", "label": "1", "score": "0.3739652633666992"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( teacher_id ) not in ( ( teacher id ) that belongs to ( course arrange ) ) )", "text": "List the names of teachers who have been arranged to teach courses.", "remark": "logic", "label": "0", "score": "0.5654410123825073"}
{"logic": "( countryname ) that belongs to ( countries ), and except that ( ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ))", "text": "What are the name of the countries where there is not a single car maker?", "remark": "positive", "label": "1", "score": "0.362203985452652"}
{"logic": "( stuid ) that belongs to ( student ), and except that ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ))", "text": "Find the id of students who do not have a dog pet.", "remark": "value str", "label": "0", "score": "0.6125980019569397"}
{"logic": "( the number of ( distinct ( language of management ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of management ) equal to ( t ) ) )", "text": "What is the total number of unique official languages spoken in the countries that are founded before 1930?", "remark": "positive", "label": "1", "score": "0.3534269332885742"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines )", "text": "What is the total number of airlines?", "remark": "positive", "label": "1", "score": "0.39071589708328247"}
{"logic": "( the number of ( distinct ( language of highschooler ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) )", "text": "What is the total number of unique official languages spoken in the countries that are founded before 1940?", "remark": "value int", "label": "0", "score": "0.35673847794532776"}
{"logic": "( name of head ) , ( course of management ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) )", "text": "Show names of teachers and the courses they are arranged to teach.", "remark": "positive", "label": "1", "score": "0.6087160110473633"}
{"logic": "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "Find the weight of the oldest dog.", "remark": "logic", "label": "0", "score": "0.5788515210151672"}
{"logic": "( name of catalogs ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of catalogs ) equal to ( employee id of catalog structure ) ) ) ) , ordered by ( ( bonus of catalog structure ) in descending order ) , limited to the top ( 1 )", "text": "Which employee received the biggest bonus? Give me the employee name.", "remark": "positive", "label": "1", "score": "0.541869580745697"}
{"logic": "( first name of department ) , ( country code of department ) , ( birth date of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , ordered by ( ( winner rank points of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?", "remark": "positive", "label": "1", "score": "0.3697432577610016"}
{"logic": "( the number of ( all items ) ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "Count the number of countries for which Spanish is the predominantly spoken language.", "remark": "positive", "label": "1", "score": "0.5381516814231873"}
{"logic": "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))", "text": "Which states have both owners and professionals living there?", "remark": "positive", "label": "1", "score": "0.4084763824939728"}
{"logic": "( the average of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) less than ( 2009 ) )", "text": "Find the average number of staff working for the museums that were open after 2009.", "remark": "logic", "label": "0", "score": "0.5775924324989319"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in descending order ) , limited to the top ( 3 )", "text": "What are names of countries with the top 3 largest population?", "remark": "positive", "label": "1", "score": "0.3492339253425598"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs )", "text": "What is the maximum age of all the dogs?", "remark": "value col", "label": "0", "score": "0.3794640302658081"}
{"logic": "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Return the nationalities for which there are two or more people.", "remark": "positive", "label": "1", "score": "0.6056905388832092"}
{"logic": "( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) less than ( 1945 ) ), and intersect with ( ( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) greater than ( 1955 ) ))", "text": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?", "remark": "positive", "label": "1", "score": "0.35926955938339233"}
{"logic": "( template type code ) , ( template type description ) that belongs to ( ref template types )", "text": "Show all template type codes.", "remark": "value col", "label": "0", "score": "0.49511244893074036"}
{"logic": "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )", "text": "How many unique languages are spoken in the world?", "remark": "positive", "label": "1", "score": "0.4168259799480438"}
{"logic": "( city of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of department ) equal to ( destairport of management ) ) ) ) , grouped by ( city of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has the most frequent destination airport?", "remark": "positive", "label": "1", "score": "0.46025168895721436"}
{"logic": "( the average of ( winner rank ) ) that belongs to ( matches )", "text": "What is the average rank for winners in all matches?", "remark": "positive", "label": "1", "score": "0.372217059135437"}
{"logic": "( the average of ( earnings ) ) that belongs to ( poker player )", "text": "What is the average earnings of poker players?", "remark": "positive", "label": "1", "score": "0.35306796431541443"}
{"logic": "( name of likes ) , ( orchestra of highschooler ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of likes ) equal to ( conductor id of highschooler ) ) ) )", "text": "What are the id of conductors as well as the corresonding orchestras that they have conducted?", "remark": "value col", "label": "0", "score": "0.3941625654697418"}
{"logic": "( abbreviation of likes ) , ( country of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "Find the abbreviation and country of the airline that has most number of flights?", "remark": "logic", "label": "0", "score": "0.5941017866134644"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "What are the different addresses that have students living there?", "remark": "positive", "label": "1", "score": "0.386147141456604"}
{"logic": "( flightno of likes ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( uid of highschooler ) equal to ( airline of likes ) ) ) ) , that have ( ( airline of highschooler ) equal to ( united airlines ) )", "text": "What are flight numbers of Airline \"jetblue airways\"?", "remark": "value str", "label": "0", "score": "0.3794226050376892"}
{"logic": "( course description ) that belongs to ( courses ) , that have ( ( course name ) equal to ( 'math' ) )", "text": "What are the descriptions for all the math courses?", "remark": "positive", "label": "1", "score": "0.3782831132411957"}
{"logic": "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the id of episode \"A Love of a Lifetime\"?", "remark": "value col", "label": "0", "score": "0.40344905853271484"}
{"logic": "( distinct ( name of highschooler ) ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( countrycode of highschooler ) equal to ( code of likes ) ) ) ) , that have ( ( ( continent of likes ) equal to ( 'europe' ) ) and ( ( t1.name ) not in ( ( name of area code state ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of area code state ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( isofficial of car makers ) equal to ( 't' ) ) and ( ( language of car makers ) equal to ( 'english' ) ) ) ) ) )", "text": "What are the names of cities in America for which English is not the official language?", "remark": "value str", "label": "0", "score": "0.4081861078739166"}
{"logic": "( degree program id of department ) , ( degree summary name of department ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , grouped by ( degree program id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the program id and the summary of the degree that has the most students enrolled?", "remark": "positive", "label": "1", "score": "0.384830504655838"}
{"logic": "( episode ) that belongs to ( tv series ) , ordered by ( ( rating ) )", "text": "List the Episode of all TV series sorted by rating.", "remark": "positive", "label": "1", "score": "0.5273935794830322"}
{"logic": "( name of head ) , ( course of management ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) ) , ordered by ( ( name of head ) )", "text": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?", "remark": "positive", "label": "1", "score": "0.36957183480262756"}
{"logic": "( the number of ( all items ) ) that belongs to ( countries )", "text": "What are the names of the listed countries?", "remark": "logic", "label": "0", "score": "0.3854518234729767"}
{"logic": "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )", "text": "List the names of teachers in ascending order of age.", "remark": "positive", "label": "1", "score": "0.5614927411079407"}
{"logic": "( the number of ( distinct ( template id ) ) ) that belongs to ( documents )", "text": "Count the names of different templates used for documents.", "remark": "value col", "label": "0", "score": "0.4916538596153259"}
{"logic": "( degree summary name of department ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , grouped by ( degree summary name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the kind of program which most number of students are enrolled in?", "remark": "positive", "label": "1", "score": "0.5706722140312195"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( people )", "text": "Count the number of different nationalities.", "remark": "positive", "label": "1", "score": "0.47268742322921753"}
{"logic": "( name of department ) , ( date of treatment of management ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of department ) equal to ( dog id of management ) ) ) ) , that have ( ( breed code of department ) equal to ( breed code ) that belongs to ( dogs ) , grouped by ( breed code ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 ) )", "text": "Which dogs are of the rarest breed? Show their names and treatment dates.", "remark": "positive", "label": "1", "score": "0.5250781774520874"}
{"logic": "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))", "text": "find the id of tv channels that do not play any cartoon directed by Ben Jones.", "remark": "positive", "label": "1", "score": "0.6370255351066589"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "List the language used most number of TV Channel. List language and number of TV Channel.", "remark": "logic", "label": "0", "score": "0.5842360854148865"}
{"logic": "( distinct ( template type description of department ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of department ) equal to ( template type code of management ) ) ) , and ( ( documents ) satisfied that ( ( template id of management ) equal to ( template id of head ) ) ) )", "text": "Return the different descriptions for templates that have been used in a document.", "remark": "positive", "label": "1", "score": "0.5789278745651245"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "What are all distinct countries where singers above age 30 are from?", "remark": "value int", "label": "0", "score": "0.34647899866104126"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( number products ) greater than ( the average of ( number products ) ) that belongs to ( shop ) )", "text": "Which shops' number products is above the average? Give me the shop names.", "remark": "positive", "label": "1", "score": "0.5686723589897156"}
{"logic": "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )", "text": "Find the government form name and total population for each government form whose average life expectancy is longer than 69.", "remark": "value int", "label": "0", "score": "0.57137531042099"}
{"logic": "( first name of department ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of department ) equal to ( address id of management ) ) ) ) , that have ( ( country of management ) equal to ( 'haiti' ) ) and ( first name ) that belongs to ( students ) , that have ( ( cell mobile number ) equal to ( '09700166582' ) )", "text": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.", "remark": "positive", "label": "1", "score": "0.5998792052268982"}
{"logic": "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )", "text": "Return the names and surface areas of the 6 largest countries.", "remark": "value int", "label": "0", "score": "0.575968325138092"}
{"logic": "( the number of ( all items ) ) , ( location ) that belongs to ( shop ) , grouped by ( location )", "text": "Find the number of shops in each location.", "remark": "positive", "label": "1", "score": "0.5595677495002747"}
{"logic": "( country ) that belongs to ( singer ) , that have ( ( age ) greater than ( 40 ) ), and intersect with ( ( country ) that belongs to ( singer ) , that have ( ( age ) less than ( 30 ) ))", "text": "Show countries where a singer above age 40 and a singer below 30 are from.", "remark": "positive", "label": "1", "score": "0.5403257608413696"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "Give the airline with abbreviation 'UAL'.", "remark": "positive", "label": "1", "score": "0.5316861867904663"}
{"logic": "( date of treatment of department ) , ( first name of management ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) )", "text": "What are the date and the operating professional's first name of each treatment?", "remark": "positive", "label": "1", "score": "0.3890063166618347"}
{"logic": "( cell mobile number ) that belongs to ( students ) , that have ( ( ( first name ) equal to ( 'timmothy' ) ) and ( ( last name ) equal to ( 'ward' ) ) )", "text": "What is the mobile phone number of the student whose first name is Timothy?", "remark": "logic", "label": "0", "score": "0.45495009422302246"}
{"logic": "( name of highschooler ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the id of the high schooler who has the greatest number of friends?", "remark": "value col", "label": "0", "score": "0.41168880462646484"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )", "text": "List names of conductors in descending order of years of work.", "remark": "positive", "label": "1", "score": "0.5592142939567566"}
{"logic": "( year ) that belongs to ( concert ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the year that had the most concerts?", "remark": "positive", "label": "1", "score": "0.3375127613544464"}
{"logic": "( first name ) , ( country code ) that belongs to ( players ) , ordered by ( ( birth date ) ) , limited to the top ( 1 )", "text": "Find the first name and country code of the oldest player.", "remark": "positive", "label": "1", "score": "0.6108835935592651"}
{"logic": "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which language is spoken by the least number of countries?", "remark": "logic", "label": "0", "score": "0.41278523206710815"}
{"logic": "( the number of ( all items ) ) that belongs to ( paragraphs )", "text": "Find the names of paragraphs.", "remark": "value col", "label": "0", "score": "0.49322250485420227"}
{"logic": "( document id ) , ( template id ) , ( document description ) that belongs to ( documents ) , that have ( ( document name ) equal to ( robbin cv ) )", "text": "What is the document id, template id and description for document named \"Robbin CV\"?", "remark": "positive", "label": "1", "score": "0.46343401074409485"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the code of the country with the least players?", "remark": "logic", "label": "0", "score": "0.3848932981491089"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of likes ) equal to ( department id of highschooler ) ) ) ) , that have ( ( department name of likes ) equal to ( 'engineer' ) )", "text": "How many degrees does the computer department offer?", "remark": "value str", "label": "0", "score": "0.45705947279930115"}
{"logic": "( district ) that belongs to ( shop ) , that have ( ( number products ) less than ( 3000 ) ), and intersect with ( ( district ) that belongs to ( shop ) , that have ( ( number products ) greater than ( 10000 ) ))", "text": "Which district has both stores with less than 3000 products and stores with more than 10000 products?", "remark": "positive", "label": "1", "score": "0.4451649487018585"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )", "text": "What are the names of the singers who are French citizens?", "remark": "logic", "label": "0", "score": "0.35399189591407776"}
{"logic": "( the number of ( all items ) ) that belongs to ( poker player )", "text": "List the names of poker players.", "remark": "value col", "label": "0", "score": "0.5110120177268982"}
{"logic": "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )", "text": "When was the first transcript released?", "remark": "logic", "label": "0", "score": "0.43768009543418884"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( kyle ) )", "text": "What are the likes that Kyle have?", "remark": "logic", "label": "0", "score": "0.4397852420806885"}
{"logic": "( the number of ( distinct ( governmentform ) ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) )", "text": "How many different forms of governments are there in Africa?", "remark": "positive", "label": "1", "score": "0.42033612728118896"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , that have ( ( fullname of department ) equal to ( 'american motor company' ) )", "text": "How many car models were produced by the maker with full name American Motor Company?", "remark": "positive", "label": "1", "score": "0.40518882870674133"}
{"logic": "( degree program id of department ) , ( degree summary name of department ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , grouped by ( degree program id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the program which most number of students are enrolled in. List both the id and the summary.", "remark": "positive", "label": "1", "score": "0.5989951491355896"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) ) , that have ( ( earnings of highschooler ) greater than ( 300000 ) )", "text": "What are the names of poker players whose earnings is higher than 400000?", "remark": "value int", "label": "0", "score": "0.37058761715888977"}
{"logic": "( the number of ( all items ) ) , ( district ) that belongs to ( city ) , that have ( ( population ) greater than ( the average of ( population ) ) that belongs to ( city ) ) , grouped by ( district )", "text": "How many cities in each district have a population that is above the average population across all cities?", "remark": "positive", "label": "1", "score": "0.4750397801399231"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( weight of management ) less than ( the average of ( weight ) ) that belongs to ( cars data ) )", "text": "What is the model for the car with a weight smaller than the average?", "remark": "positive", "label": "1", "score": "0.38286876678466797"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( countryid of likes ) , ( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of likes ) equal to ( country of highschooler ) ) ) ) , grouped by ( countryid of likes ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) r\" )", "text": "How many countries has more than 3 car makers?", "remark": "value int", "label": "0", "score": "0.4195800721645355"}
{"logic": "( template type code ) , ( template type description ) that belongs to ( ref template types )", "text": "What are the type codes for all template types?", "remark": "value col", "label": "0", "score": "0.3681984841823578"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "What are flight numbers of flights arriving at Airport \"APG\"?", "remark": "value col", "label": "0", "score": "0.4109736979007721"}
{"logic": "( distinct ( semester id of highschooler ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of likes ) equal to ( degree program id of highschooler ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of highschooler ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of likes ) equal to ( degree program id of highschooler ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))", "text": "What is the id of the semester that had neither Masters nor Bachelors students enrolled?", "remark": "logic", "label": "0", "score": "0.38401612639427185"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "What are all distinct countries where singers above age 20 are from?", "remark": "positive", "label": "1", "score": "0.34506088495254517"}
{"logic": "( transcript date of management ) , ( transcript id of department ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of department ) equal to ( transcript id of management ) ) ) ) , grouped by ( transcript id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the date and id of the transcript with at least 2 course results.", "remark": "positive", "label": "1", "score": "0.5954941511154175"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( grade of management ) greater than ( 5 ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?", "remark": "positive", "label": "1", "score": "0.3601444661617279"}
{"logic": "( the number of ( all items ) ) that belongs to ( airports )", "text": "List the airports we have?", "remark": "value col", "label": "0", "score": "0.5307955145835876"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( final table made of management ) )", "text": "What are the names of poker players, ordered ascending by the number of final tables they have made?", "remark": "positive", "label": "1", "score": "0.4263947904109955"}
{"logic": "( the average of ( earnings ) ) that belongs to ( poker player )", "text": "Return the maximum earnings across all poker players.", "remark": "value col", "label": "0", "score": "0.4517141282558441"}
{"logic": "( name ) that belongs to ( battle ) , that have ( ( ( bulgarian commander ) equal to ( 'kaloyan' ) ) and ( ( latin commander ) equal to ( 'baldwin i' ) ) )", "text": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?", "remark": "positive", "label": "1", "score": "0.4323957860469818"}
{"logic": "( name of head ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) , and ( ( highschooler ) satisfied that ( ( friend id of department ) equal to ( id of head ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "Show the names of all of the high schooler Kyle's friends.", "remark": "positive", "label": "1", "score": "0.6066306233406067"}
{"logic": "( the number of ( distinct ( country code ) ) ) that belongs to ( players )", "text": "How many distinct countries do players come from?", "remark": "positive", "label": "1", "score": "0.40952742099761963"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( cvo ) ), and except that ( ( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( apg ) ))", "text": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.", "remark": "positive", "label": "1", "score": "0.6510035395622253"}
{"logic": "( the number of ( language of management ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of department ) equal to ( aruba ) )", "text": "How many languages are spoken in Aruba?", "remark": "positive", "label": "1", "score": "0.42422249913215637"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( kyle ) )", "text": "Return the number of likes that the high schooler named James has.", "remark": "value str", "label": "0", "score": "0.6103379726409912"}
{"logic": "( distinct ( date arrived of department ) ) , ( date departed of department ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of department ) equal to ( dog id of management ) ) ) )", "text": "Find the arriving date and the departing date of the dogs that received a treatment.", "remark": "positive", "label": "1", "score": "0.624547004699707"}
{"logic": "( the number of ( all items ) ) that belongs to ( singer )", "text": "What is the total number of singers?", "remark": "positive", "label": "1", "score": "0.364451140165329"}
{"logic": "( first name of likes ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of likes ) equal to ( address id of highschooler ) ) ) ) , that have ( ( country of highschooler ) equal to ( 'haiti' ) ) and ( first name ) that belongs to ( students ) , that have ( ( cell mobile number ) equal to ( '09700166582' ) )", "text": "What are the last names of the students who live in Haiti permanently or have the cell phone number 09700166582?", "remark": "value col", "label": "0", "score": "0.4101769030094147"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )", "text": "List the title of all TV Series directed by \"Ben Jones\" or \"Brandon Vietti\".", "remark": "value col", "label": "0", "score": "0.62006014585495"}
{"logic": "( the number of ( all items ) ) that belongs to ( cartoon ) , that have ( ( written by ) equal to ( joseph kuhr ) )", "text": "What is the number of cartoones written by Joseph Kuhr?", "remark": "positive", "label": "1", "score": "0.46320974826812744"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What airline serves the most flights?", "remark": "positive", "label": "1", "score": "0.46048519015312195"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )", "text": "What are the package options of all tv channels that are playing some cartoons directed by Ben Jones?", "remark": "logic", "label": "0", "score": "0.4668087959289551"}
{"logic": "( id ) that belongs to ( tv channel ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "find id of the tv channels that from the countries where have more than three tv channels.", "remark": "value int", "label": "0", "score": "0.5820258259773254"}
{"logic": "( owner id of department ) , ( last name of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of management ) equal to ( dog id of head ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.", "remark": "positive", "label": "1", "score": "0.5819918513298035"}
{"logic": "( template id ) , ( the number of ( all items ) ) that belongs to ( documents ) , grouped by ( template id )", "text": "Show all template ids and number of documents using each template.", "remark": "positive", "label": "1", "score": "0.5683193802833557"}
{"logic": "( content ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What is the content of the series Sky Radio?", "remark": "positive", "label": "1", "score": "0.38867148756980896"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs )", "text": "Compute the average age of all the dogs.", "remark": "positive", "label": "1", "score": "0.4644981324672699"}
{"logic": "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "Which abbreviation corresponds to China Airways?", "remark": "value str", "label": "0", "score": "0.4246686100959778"}
{"logic": "( name ) , ( level of membership ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( age ) in descending order )", "text": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "remark": "positive", "label": "1", "score": "0.6419392824172974"}
{"logic": "( the number of ( all items ) ) that belongs to ( museum ) , that have ( ( ( open year ) greater than ( 2013 ) ) or ( ( open year ) less than ( 2008 ) ) )", "text": "How many museums were opened before 2013 and after 2008?", "remark": "logic", "label": "0", "score": "0.4872770607471466"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( republic ) )", "text": "How many countries have governments that are republics?", "remark": "positive", "label": "1", "score": "0.43626081943511963"}
{"logic": "( the number of ( all items ) ) , ( directed by ) that belongs to ( cartoon ) , grouped by ( directed by )", "text": "How many cartoons did each director create?", "remark": "positive", "label": "1", "score": "0.43609243631362915"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ))", "text": "Show all template type codes that are not used by any document.", "remark": "positive", "label": "1", "score": "0.5914243459701538"}
{"logic": "( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the name of the student with the most likes.", "remark": "positive", "label": "1", "score": "0.5760693550109863"}
{"logic": "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))", "text": "Show the document id with paragraph text 'Brazil' and 'Ireland'.", "remark": "positive", "label": "1", "score": "0.5949724912643433"}
{"logic": "( area code of likes ) that belongs to ( ( area code state ) , and ( ( votes ) satisfied that ( ( state of likes ) equal to ( state of highschooler ) ) ) ) , grouped by ( area code of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the area name in which the most voters voted?", "remark": "value col", "label": "0", "score": "0.39539796113967896"}
{"logic": "( course name of likes ) , ( course id of likes ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) ) , grouped by ( course id of likes ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "text": "What are the names and ids of every course with less than three sections?", "remark": "value int", "label": "0", "score": "0.34560367465019226"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 4 ) )", "text": "Show me all grades that have at least 4 students.", "remark": "positive", "label": "1", "score": "0.5721378326416016"}
{"logic": "( the number of ( all items ) ) , ( country code ) that belongs to ( players ) , grouped by ( country code )", "text": "How many players are from each country in average?", "remark": "logic", "label": "0", "score": "0.43291810154914856"}
{"logic": "( owner id of department ) , ( last name of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of management ) equal to ( dog id of head ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.", "remark": "positive", "label": "1", "score": "0.5689858794212341"}
{"logic": "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( age ) less than ( 30 ) )", "text": "How many visitors below age 30 are there?", "remark": "positive", "label": "1", "score": "0.43425697088241577"}
{"logic": "( distinct ( name of management ) ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( countrycode of management ) equal to ( code of department ) ) ) ) , that have ( ( ( continent of department ) equal to ( 'europe' ) ) and ( ( t1.name ) not in ( ( name of head ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of head ) equal to ( countrycode of trip ) ) ) ) , that have ( ( ( isofficial of trip ) equal to ( 't' ) ) and ( ( language of trip ) equal to ( 'english' ) ) ) ) ) )", "text": "What are the names of cities in Europe for which English is not the official language?", "remark": "positive", "label": "1", "score": "0.38978758454322815"}
{"logic": "( fullname of department ) , ( id of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )", "text": "Which makers designed more than 3 car models? List full name and the id.", "remark": "positive", "label": "1", "score": "0.5106581449508667"}
{"logic": "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( chinese ) )", "text": "What is the number of distinct continents where Chinese is spoken?", "remark": "positive", "label": "1", "score": "0.36063358187675476"}
{"logic": "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )", "text": "Which city and country is the Alton airport at?", "remark": "positive", "label": "1", "score": "0.43896567821502686"}
{"logic": "( treatment type description of likes ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of likes ) equal to ( treatment type code of highschooler ) ) ) ) , grouped by ( treatment type code of likes ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )", "text": "Give me the description of the treatment type whose total cost is the highest.", "remark": "logic", "label": "0", "score": "0.5793324708938599"}
{"logic": "( code ) that belongs to ( country ) , that have ( ( governmentform ) not equal to ( republic ) ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "Return the codes of countries that do not speak Spanish and do not have Republics for governments.", "remark": "value str", "label": "0", "score": "0.5675856471061707"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the towns from which at least two teachers come from?", "remark": "positive", "label": "1", "score": "0.4157189130783081"}
{"logic": "( the number of ( all items ) ) that belongs to ( ship ) , that have ( ( disposition of ship ) equal to ( 'captured' ) )", "text": "What are the ships ended up being 'Captured'?", "remark": "value col", "label": "0", "score": "0.4184139370918274"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )", "text": "What are the codes of template types that have fewer than 3 templates?", "remark": "positive", "label": "1", "score": "0.37029802799224854"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler )", "text": "How many high schoolers are there?", "remark": "positive", "label": "1", "score": "0.43367713689804077"}
{"logic": "( country ) that belongs to ( tv channel ), and except that ( ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( written by of management ) equal to ( 'todd casey' ) ))", "text": "What are the countries that are not playing cartoons written by Todd Casey?", "remark": "positive", "label": "1", "score": "0.4442903995513916"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "Return the id of the document with the fewest paragraphs.", "remark": "positive", "label": "1", "score": "0.6091812252998352"}
{"logic": "( the sum of ( population ) ) , ( the average of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( north america ) ) and ( ( surfacearea ) greater than ( 3000 ) ) )", "text": "What is the total population and average area of countries in the continent of North America whose area is bigger than 1000\uff1f", "remark": "value int", "label": "0", "score": "0.4675973057746887"}
{"logic": "( age ) , ( hometown ) that belongs to ( teacher )", "text": "What are the age and hometown of teachers?", "remark": "positive", "label": "1", "score": "0.3739668130874634"}
{"logic": "( episode ) that belongs to ( tv series ) , ordered by ( ( rating ) )", "text": "What are all of the episodes ordered by ratings?", "remark": "positive", "label": "1", "score": "0.3851759433746338"}
{"logic": "( name of likes ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of likes ) equal to ( conductor id of highschooler ) ) ) ) , grouped by ( conductor id of highschooler ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are the names of conductors who have conducted at less than one orchestra?", "remark": "logic", "label": "0", "score": "0.3430793583393097"}
{"logic": "( template type code ) that belongs to ( ref template types ) , that have ( ( template type description ) equal to ( book ) )", "text": "What is the template type code for template type description \"Book\".", "remark": "positive", "label": "1", "score": "0.39658787846565247"}
{"logic": "( distinct ( countrycode ) ) that belongs to ( countrylanguage ) , that have ( ( language ) not equal to ( english ) )", "text": "What are the country codes of countries where people use languages other than Chinese?", "remark": "value str", "label": "0", "score": "0.37090811133384705"}
{"logic": "( last name of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , that have ( ( age of management ) equal to ( the maximum of ( age ) ) that belongs to ( dogs ) )", "text": "Who owns the youngest dog? Give me his or her last name.", "remark": "positive", "label": "1", "score": "0.5545895099639893"}
{"logic": "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )", "text": "What is the average miles per gallon of all the cards with 5 cylinders?", "remark": "value int", "label": "0", "score": "0.38719645142555237"}
{"logic": "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )", "text": "What are the names of the teachers ordered by descending age?", "remark": "logic", "label": "0", "score": "0.38507479429244995"}
{"logic": "( the number of ( distinct ( language of management ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of management ) equal to ( t ) ) )", "text": "For the countries founded before 1930, what is the total number of distinct official languages?", "remark": "positive", "label": "1", "score": "0.43218955397605896"}
{"logic": "( name ) , ( result ) that belongs to ( battle ) , that have ( ( bulgarian commander ) not equal to ( 'boril' ) )", "text": "What are the name and results of the battles when the bulgarian commander is not 'Boril'", "remark": "positive", "label": "1", "score": "0.44095906615257263"}
{"logic": "( airportcode of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of department ) equal to ( destairport of management ) ) or ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) ) , grouped by ( airportcode of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the airport code of the airport with the most flights?", "remark": "positive", "label": "1", "score": "0.4241401255130768"}
{"logic": "( series name of likes ) , ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( directed by of highschooler ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of likes ) , ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( directed by of highschooler ) equal to ( 'ben jones' ) ))", "text": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones or cartoons directed by Michael Chang?", "remark": "logic", "label": "0", "score": "0.4926009476184845"}
{"logic": "( distinct ( first name of likes ) ) , ( last name of likes ) that belongs to ( ( professionals ) join ( ( treatments ) ) ) , that have ( ( cost of treatment ) less than ( the average of ( cost of treatment ) ) that belongs to ( treatments ) )", "text": "What are the first name and last name of the professionals who have done treatment with cost above average?", "remark": "logic", "label": "0", "score": "0.3994145691394806"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( governmentform of likes ) equal to ( republic ) ) , grouped by ( language of highschooler ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "text": "Which languages are spoken by at least one country in republic governments?", "remark": "logic", "label": "0", "score": "0.36925220489501953"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in ascending order ) , limited to the top ( 3 )", "text": "What are the names of the nations with the 3 lowest populations?", "remark": "positive", "label": "1", "score": "0.3563385605812073"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( ben jones ) )", "text": "List all cartoon directed by \"Ben Jones\".", "remark": "positive", "label": "1", "score": "0.5271331071853638"}
{"logic": "( name of highschooler ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "What are the names of high schoolers who have 3 or fewer friends?", "remark": "logic", "label": "0", "score": "0.3808867931365967"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of head ) ) ) ) , that have ( ( ( city of management ) equal to ( ashley ) ) and ( ( city of head ) equal to ( aberdeen ) ) )", "text": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?", "remark": "positive", "label": "1", "score": "0.47551167011260986"}
{"logic": "( name ) that belongs to ( employee ) , that have ( ( employee_id ) not in ( ( employee id ) that belongs to ( evaluation ) ) )", "text": "What are the names of the employees who never received any evaluation?", "remark": "positive", "label": "1", "score": "0.3902704119682312"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the most commmon hometowns for teachers?", "remark": "positive", "label": "1", "score": "0.38557448983192444"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )", "text": "List the first and last name of all players who are left / L hand in the order of birth date.", "remark": "positive", "label": "1", "score": "0.6152709722518921"}
{"logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) ) )", "text": "Find the average age of students who do not have any pet.", "remark": "positive", "label": "1", "score": "0.6068809032440186"}
{"logic": "( countryname ) that belongs to ( countries ), and except that ( ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ))", "text": "What are the names of the countries with no car makers?", "remark": "positive", "label": "1", "score": "0.3797425925731659"}
{"logic": "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )", "text": "What is the number of employees from each city?", "remark": "positive", "label": "1", "score": "0.38534820079803467"}
{"logic": "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of department ) , ( role code of department ) , ( email address of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ))", "text": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.", "remark": "positive", "label": "1", "score": "0.615437924861908"}
{"logic": "( the average of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) in ( ( student id of department ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) ) )", "text": "What is the average grade of students who have friends?", "remark": "positive", "label": "1", "score": "0.38638463616371155"}
{"logic": "( title of highschooler ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( series name of likes ) equal to ( sky radio ) )", "text": "List the title of all  TV Series showed on TV Channel with series name \"Sky Radio\".", "remark": "value col", "label": "0", "score": "0.5976740717887878"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "Who is the earliest graduate of the school? List the first name, middle name and last name.", "remark": "positive", "label": "1", "score": "0.5449526309967041"}
{"logic": "( distinct ( course name of department ) ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) )", "text": "What are the names of all courses that have some students enrolled?", "remark": "positive", "label": "1", "score": "0.35378167033195496"}
{"logic": "( the minimum of ( number products ) ) , ( the maximum of ( number products ) ) that belongs to ( shop )", "text": "find the minimum and maximum number of products of all stores.", "remark": "positive", "label": "1", "score": "0.5554987788200378"}
{"logic": "( the maximum of ( killed ) ) , ( the minimum of ( killed ) ) that belongs to ( death )", "text": "What is maximum and minimum death toll caused each time?", "remark": "positive", "label": "1", "score": "0.3412700593471527"}
{"logic": "( contestant number of department ) , ( contestant name of department ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) ) , grouped by ( contestant number of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the contestant numbers and names of the contestants who had at least two votes?", "remark": "positive", "label": "1", "score": "0.363038033246994"}
{"logic": "( first name of likes ) , ( last name of likes ) , ( size code of highschooler ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) )", "text": "What are each owner's first name, last name, and the number of their dog?", "remark": "value col", "label": "0", "score": "0.3901212215423584"}
{"logic": "( district ) that belongs to ( shop ) , that have ( ( number products ) less than ( 3000 ) ), and intersect with ( ( district ) that belongs to ( shop ) , that have ( ( number products ) greater than ( 10000 ) ))", "text": "SELECT district FROM shop WHERE Number_products  <  2000 INTERSECT SELECT district FROM shop WHERE Number_products  >  11000", "remark": "value int", "label": "0", "score": "0.5595494508743286"}
{"logic": "( name ) that belongs to ( highschooler ) , that have ( ( grade ) equal to ( 10 ) )", "text": "Show the names of all high schoolers in grade 9.", "remark": "value int", "label": "0", "score": "0.5229113101959229"}
{"logic": "( distinct ( fname of department ) ) , ( age of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) )", "text": "Find the first name and age of students who have a pet.", "remark": "positive", "label": "1", "score": "0.6004624962806702"}
{"logic": "( makeid of management ) , ( make of management ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( ( horsepower of department ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of department ) less than or equal to ( 3 ) ) )", "text": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 4 cylinders?", "remark": "positive", "label": "1", "score": "0.4008253812789917"}
{"logic": "( template type code of department ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( document name of management ) equal to ( data base ) )", "text": "Return the template type code of the template that is used by a document named Data base.", "remark": "positive", "label": "1", "score": "0.6000208258628845"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( lifeexpectancy ) ) , limited to the top ( 1 )", "text": "Give the name of the country in Asia with the lowest life expectancy.", "remark": "positive", "label": "1", "score": "0.5552421808242798"}
{"logic": "( fullname of likes ) , ( id of likes ) , ( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of likes ) equal to ( maker of highschooler ) ) ) ) , grouped by ( id of likes )", "text": "What is the full name of each car maker, and how many models it produces?", "remark": "value col", "label": "0", "score": "0.3901071846485138"}
{"logic": "( distinct ( first name of department ) ) , ( last name of department ) that belongs to ( ( professionals ) join ( ( treatments ) ) ) , that have ( ( cost of treatment ) less than ( the average of ( cost of treatment ) ) that belongs to ( treatments ) )", "text": "What are the first name and last name of the professionals who have done treatment with cost below average?", "remark": "positive", "label": "1", "score": "0.39265957474708557"}
{"logic": "( name ) , ( grade ) that belongs to ( highschooler )", "text": "What are the names and grades for each high schooler?", "remark": "positive", "label": "1", "score": "0.37257853150367737"}
{"logic": "( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) less than ( 2003 ) ), and intersect with ( ( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) greater than ( 2003 ) ))", "text": "Show the record companies shared by orchestras founded before 2003 and after 2003.", "remark": "positive", "label": "1", "score": "0.5699523091316223"}
{"logic": "( the number of ( all items ) ) , ( fullname of management ) , ( id of management ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of management ) ) ) ) , grouped by ( id of management )", "text": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?", "remark": "positive", "label": "1", "score": "0.3487730920314789"}
{"logic": "( year ) that belongs to ( concert ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which year has least number of concerts?", "remark": "logic", "label": "0", "score": "0.405345618724823"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( hometown ) not equal to ( little lever urban distric ) )", "text": "List the name of teachers whose hometown is not \"Little Lever Urban District\".", "remark": "positive", "label": "1", "score": "0.5609841346740723"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of management ) equal to ( uid of department ) ) ) ) , that have ( ( ( airline of department ) equal to ( united airlines ) ) and ( ( sourceairport of management ) equal to ( ahd ) ) )", "text": "How many 'United Airlines' flights depart from Airport 'AHD'?", "remark": "positive", "label": "1", "score": "0.46864452958106995"}
{"logic": "( document id ) , ( the number of ( all items ) ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( document id ) )", "text": "Show all document ids and the number of paragraphs in each document. Order by document id.", "remark": "positive", "label": "1", "score": "0.6313233375549316"}
{"logic": "( the sum of ( population ) ) , ( the maximum of ( gnp ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "What is the total population and maximum GNP in Asia?", "remark": "positive", "label": "1", "score": "0.37245556712150574"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( destairport of management ) equal to ( ahd ) )", "text": "What are airlines that have flights arriving at airport 'AHD'?", "remark": "positive", "label": "1", "score": "0.4153033494949341"}
{"logic": "( continent of department ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of department ) equal to ( continent of management ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of management ) equal to ( country of head ) ) ) ) , grouped by ( continent of department )", "text": "What is the name of each continent and how many car makers are there in each one?", "remark": "positive", "label": "1", "score": "0.35279229283332825"}
{"logic": "( countryname of department ) that belongs to ( ( countries ) , and ( ( continents ) satisfied that ( ( continent of department ) equal to ( contid of management ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of head ) ) ) ) , that have ( ( continent of management ) equal to ( 'europe' ) ) , grouped by ( countryname of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "What are the names of all European countries with at least 3 manufacturers?", "remark": "positive", "label": "1", "score": "0.3461351692676544"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department )", "text": "What are the names of the high schoolers and how many friends does each have?", "remark": "positive", "label": "1", "score": "0.38589951395988464"}
{"logic": "( the average of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( stadium )", "text": "What is the average and maximum capacities for all stations?", "remark": "positive", "label": "1", "score": "0.362210750579834"}
{"logic": "( contid of department ) , ( continent of department ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of department ) equal to ( continent of management ) ) ) ) , grouped by ( contid of department )", "text": "How many countries does each continent have? List the continent id, continent name and the number of countries.", "remark": "positive", "label": "1", "score": "0.5452407002449036"}
{"logic": "all items that belongs to ( hiring )", "text": "What is all the information about hiring?", "remark": "positive", "label": "1", "score": "0.42817720770835876"}
{"logic": "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )", "text": "What the largest version number and its template type code?", "remark": "logic", "label": "0", "score": "0.43058380484580994"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What airline serves the least flights?", "remark": "logic", "label": "0", "score": "0.46243104338645935"}
{"logic": "( first name of likes ) , ( last name of likes ) , ( size code of highschooler ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) )", "text": "List each owner's first name, and the size of his for her dog.", "remark": "value col", "label": "0", "score": "0.592078447341919"}
{"logic": "( first name of department ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of department ) equal to ( address id of management ) ) ) ) , that have ( ( country of management ) equal to ( 'haiti' ) ) and ( first name ) that belongs to ( students ) , that have ( ( cell mobile number ) equal to ( '09700166582' ) )", "text": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?", "remark": "positive", "label": "1", "score": "0.3873165249824524"}
{"logic": "( name ) that belongs to ( city ) , that have ( ( population ) between ( 160000 ) and ( 900000 ) )", "text": "What are the cities whose population is between 160000 and 900000?", "remark": "positive", "label": "1", "score": "0.3851276934146881"}
{"logic": "( money rank ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order ) , limited to the top ( 1 )", "text": "What is the money rank of the poker player with the highest earnings?", "remark": "positive", "label": "1", "score": "0.3783992528915405"}
{"logic": "( the number of ( distinct ( template id ) ) ) that belongs to ( documents )", "text": "Count the number of different templates used for documents.", "remark": "positive", "label": "1", "score": "0.4903724789619446"}
{"logic": "( template id of department ) , ( template type code of management ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the id and type code of the template that is used for the greatest number of documents.", "remark": "positive", "label": "1", "score": "0.5921080112457275"}
{"logic": "( the sum of ( population ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( english ) ) ) )", "text": "What is the total number of people living in the nations that do not use Japanese?", "remark": "value int", "label": "0", "score": "0.35490599274635315"}
{"logic": "( hometown ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )", "text": "Where is the youngest teacher from?", "remark": "positive", "label": "1", "score": "0.45358312129974365"}
{"logic": "( name of head ) , ( course of management ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) ) , ordered by ( ( name of head ) )", "text": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.", "remark": "positive", "label": "1", "score": "0.620766282081604"}
{"logic": "( id ) that belongs to ( tv channel ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "find id of the tv channels that from the countries where have more than two tv channels.", "remark": "positive", "label": "1", "score": "0.5802455544471741"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "Return the number of likes that the high schooler named Kyle has.", "remark": "positive", "label": "1", "score": "0.6166759133338928"}
{"logic": "( professional id of department ) , ( role code of department ) , ( first name of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Which professionals have done at least two treatments? List the professional's id, role, and first name.", "remark": "positive", "label": "1", "score": "0.5276963710784912"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )", "text": "Show the name of singers whose birth year is either 1948 or 1949?", "remark": "positive", "label": "1", "score": "0.5981212258338928"}
{"logic": "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )", "text": "Return the lowest version number, along with its corresponding template type code.", "remark": "positive", "label": "1", "score": "0.5535029172897339"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( template type code of management ) equal to ( 'ppt' ) )", "text": "Count the number of documents that use the PPT template type.", "remark": "positive", "label": "1", "score": "0.5477086305618286"}
{"logic": "( the number of ( all items ) ) that belongs to ( documents )", "text": "How many documents do we have?", "remark": "positive", "label": "1", "score": "0.48897626996040344"}
{"logic": "( the number of ( distinct ( governmentform ) ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) )", "text": "How many type of governments are in Africa?", "remark": "positive", "label": "1", "score": "0.43075498938560486"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler )", "text": "Count the number of high schoolers.", "remark": "positive", "label": "1", "score": "0.4686140716075897"}
{"logic": "( distinct ( countrycode ) ) that belongs to ( countrylanguage ) , that have ( ( language ) not equal to ( english ) )", "text": "Give the country codes for countries in which people speak langauges that are not English.", "remark": "positive", "label": "1", "score": "0.5420571565628052"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) not in ( ( sourceairport ) that belongs to ( flights ) and ( destairport ) that belongs to ( flights ) ) )", "text": "Which airports do not have departing or arriving flights?", "remark": "positive", "label": "1", "score": "0.4660327434539795"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "Which airlines have less than 200 flights?", "remark": "positive", "label": "1", "score": "0.42114749550819397"}
{"logic": "( other details ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'korea' ) )", "text": "Show paragraph details for paragraph with text 'Korea'.", "remark": "positive", "label": "1", "score": "0.6079652309417725"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( 'summer show' ) )", "text": "Count the number of paragraphs in the document named 'Summer Show'.", "remark": "positive", "label": "1", "score": "0.571410059928894"}
{"logic": "( the number of ( all items ) ) that belongs to ( players )", "text": "How many players are there?", "remark": "positive", "label": "1", "score": "0.4738425016403198"}
{"logic": "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )", "text": "what is the name and nation of the singer who have a song having 'Hey' in its name?", "remark": "positive", "label": "1", "score": "0.40854164958000183"}
{"logic": "( the maximum of ( charge amount ) ) that belongs to ( charges )", "text": "How much does the least expensive charge type costs?", "remark": "logic", "label": "0", "score": "0.4214278757572174"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) not in ( ( sourceairport ) that belongs to ( flights ) and ( destairport ) that belongs to ( flights ) ) )", "text": "Which airports do have departing or arriving flights?", "remark": "logic", "label": "0", "score": "0.46791893243789673"}
{"logic": "( the number of ( all items ) ) that belongs to ( paragraphs )", "text": "Count the number of paragraphs.", "remark": "positive", "label": "1", "score": "0.5047385692596436"}
{"logic": "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the average and minimum age for each type of pet.", "remark": "logic", "label": "0", "score": "0.5874541997909546"}
{"logic": "( the number of ( all items ) ) that belongs to ( cartoon ) , that have ( ( written by ) equal to ( joseph kuhr ) )", "text": "How many cartoons were written by \"Joseph Kuhr\"?", "remark": "positive", "label": "1", "score": "0.5003733038902283"}
{"logic": "( maker ) , ( model ) that belongs to ( model list )", "text": "What are all the makers and models?", "remark": "positive", "label": "1", "score": "0.40646982192993164"}
{"logic": "( student id of likes ) , ( first name of likes ) , ( middle name of likes ) , ( last name of likes ) , ( the number of ( all items ) ) , ( student id of likes ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of likes ) equal to ( student id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which student has enrolled for the least times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "remark": "logic", "label": "0", "score": "0.5287752151489258"}
{"logic": "( fullname of department ) , ( id of department ) , ( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department )", "text": "How many models does each car maker produce? List maker full name, id and the number.", "remark": "positive", "label": "1", "score": "0.5010448694229126"}
{"logic": "( date of treatment of department ) , ( first name of management ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) )", "text": "List the date of each treatment, together with the first name of the professional who operated it.", "remark": "positive", "label": "1", "score": "0.6265336871147156"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "What are flight numbers of flights departing from Airport \"APG\"?", "remark": "positive", "label": "1", "score": "0.4091443121433258"}
{"logic": "( zip postcode ) that belongs to ( addresses ) , that have ( ( city ) equal to ( 'port chelsea' ) )", "text": "What is the zip code of the address in the city Port Chelsea?", "remark": "positive", "label": "1", "score": "0.44771096110343933"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of management ) ) ) , and ( ( countries ) satisfied that ( ( country of management ) equal to ( countryid of head ) ) ) ) , that have ( ( countryname of head ) equal to ( 'usa' ) )", "text": "How many car models are produced in the usa?", "remark": "positive", "label": "1", "score": "0.42292341589927673"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?", "remark": "positive", "label": "1", "score": "0.43412312865257263"}
{"logic": "( charge type ) , ( charge amount ) that belongs to ( charges )", "text": "How much does each charge type costs? List charge type.", "remark": "value col", "label": "0", "score": "0.5498589873313904"}
{"logic": "( document id of likes ) , ( document name of highschooler ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of likes ) equal to ( document id of highschooler ) ) ) ) , grouped by ( document id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the document id with smallest number of paragraphs?", "remark": "value col", "label": "0", "score": "0.39213404059410095"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches ) , that have ( ( ( year ) equal to ( 2013 ) ) or ( ( year ) equal to ( 2016 ) ) )", "text": "List the number of all matches who played in years of 2013 or 2016.", "remark": "positive", "label": "1", "score": "0.5758445262908936"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "Find all airlines that have at most 10 flights.", "remark": "logic", "label": "0", "score": "0.6440279483795166"}
{"logic": "( other student details ) that belongs to ( students ) , ordered by ( ( other student details ) in descending order )", "text": "List all the student details in reversed lexicographical order.", "remark": "positive", "label": "1", "score": "0.5317655801773071"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , that have ( ( destairport of highschooler ) equal to ( ahd ) )", "text": "Which airlines have a flight with departure airport AHD?", "remark": "value col", "label": "0", "score": "0.4618304967880249"}
{"logic": "( content ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What is the content of TV Channel with serial name \"Sky Radio\"?", "remark": "positive", "label": "1", "score": "0.409781277179718"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "Which airline has abbreviation 'UAL'?", "remark": "positive", "label": "1", "score": "0.41293784976005554"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of management ) equal to ( petid of head ) ) ) ) , that have ( ( ( sex of department ) equal to ( 'f' ) ) and ( ( pettype of head ) equal to ( 'dog' ) ) )", "text": "How many dog pets are raised by female students?", "remark": "positive", "label": "1", "score": "0.4105476140975952"}
{"logic": "( distinct ( template type description of likes ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of likes ) equal to ( template type code of highschooler ) ) ) , and ( ( documents ) satisfied that ( ( template id of highschooler ) equal to ( template id of area code state ) ) ) )", "text": "What are the template type descriptions for the templates ever used by any document?", "remark": "logic", "label": "0", "score": "0.38762593269348145"}
{"logic": "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )", "text": "What is the id and weight of every pet who is older than 1?", "remark": "positive", "label": "1", "score": "0.3711882531642914"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ))", "text": "What are the codes of template types that are not used for any document?", "remark": "positive", "label": "1", "score": "0.3588973879814148"}
{"logic": "( name of department ) , ( date of treatment of management ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of department ) equal to ( dog id of management ) ) ) ) , that have ( ( breed code of department ) equal to ( breed code ) that belongs to ( dogs ) , grouped by ( breed code ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 ) )", "text": "List the names of the dogs of the rarest breed and the treatment dates of them.", "remark": "positive", "label": "1", "score": "0.5709986686706543"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( singer_id ) not in ( ( singer id ) that belongs to ( song ) ) )", "text": "List the name of singers that have two songs.", "remark": "value int", "label": "0", "score": "0.5217574238777161"}
{"logic": "( distinct ( date arrived of department ) ) , ( date departed of department ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of department ) equal to ( dog id of management ) ) ) )", "text": "What are the arriving date and the departing date of the dogs who have gone through a treatment?", "remark": "positive", "label": "1", "score": "0.40120211243629456"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )", "text": "Show the student IDs and numbers of friends corresponding to each.", "remark": "positive", "label": "1", "score": "0.5517655611038208"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the minimum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "What are the Asian countries which have a population larger than that of any country in Africa?", "remark": "positive", "label": "1", "score": "0.3737879693508148"}
{"logic": "( contestant number of department ) , ( contestant name of department ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) ) , grouped by ( contestant number of department ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?", "remark": "positive", "label": "1", "score": "0.4284863770008087"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , ordered by ( ( mpg of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "What is the car wmodel with the lowest mpg?", "remark": "logic", "label": "0", "score": "0.3783228397369385"}
{"logic": "( id of management ) , ( name of management ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of department ) equal to ( id of management ) ) ) ) , grouped by ( id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the ship id and name that caused most total injuries?", "remark": "positive", "label": "1", "score": "0.3676266074180603"}
{"logic": "( breed name of department ) that belongs to ( ( breeds ) , and ( ( dogs ) satisfied that ( ( breed code of department ) equal to ( breed code of management ) ) ) ) , grouped by ( breed name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which breed do the most dogs have? Give me the breed name.", "remark": "positive", "label": "1", "score": "0.5124836564064026"}
{"logic": "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of department ) , ( role code of department ) , ( email address of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ))", "text": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.", "remark": "positive", "label": "1", "score": "0.5707637071609497"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "Return the ids of templates that do not have the code PP or PPT.", "remark": "logic", "label": "0", "score": "0.6083028316497803"}
{"logic": "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "Which abbreviation corresponds to Jetblue Airways?", "remark": "positive", "label": "1", "score": "0.4234094023704529"}
{"logic": "( age ) , ( hometown ) that belongs to ( teacher )", "text": "What is the age and hometown of every teacher?", "remark": "positive", "label": "1", "score": "0.3948200047016144"}
{"logic": "( vote id ) , ( phone number ) , ( state ) that belongs to ( votes )", "text": "List the vote ids, phone numbers and states of all votes.", "remark": "positive", "label": "1", "score": "0.5430899262428284"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) , and ( ( airlines ) satisfied that ( ( uid of head ) equal to ( airline of department ) ) ) ) , that have ( ( ( city of management ) equal to ( aberdeen ) ) and ( ( airline of head ) equal to ( united airlines ) ) )", "text": "How many United Airlines flights go to City 'Aberdeen'?", "remark": "positive", "label": "1", "score": "0.47408607602119446"}
{"logic": "( citizenship ) , ( the maximum of ( net worth millions ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "For each citizenship, what is the minimum net worth?", "remark": "logic", "label": "0", "score": "0.4021742045879364"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , that have ( ( earnings of management ) greater than ( 300000 ) )", "text": "Give the names of poker players who have earnings above 300000.", "remark": "positive", "label": "1", "score": "0.586003839969635"}
{"logic": "( pixel aspect ratio par ) , ( country ) that belongs to ( tv channel ) , that have ( ( language ) not equal to ( 'english' ) )", "text": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?", "remark": "positive", "label": "1", "score": "0.36705824732780457"}
{"logic": "( line 1 ) , ( line 2 ) that belongs to ( addresses )", "text": "what are all the addresses including line 1 and line 2?", "remark": "positive", "label": "1", "score": "0.42698368430137634"}
{"logic": "( transcript date of management ) , ( transcript id of department ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of department ) equal to ( transcript id of management ) ) ) ) , grouped by ( transcript id of department ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the date and id of the transcript with the least number of results?", "remark": "positive", "label": "1", "score": "0.35406994819641113"}
{"logic": "( title ) , ( directed by ) that belongs to ( cartoon ) , ordered by ( ( original air date ) )", "text": "What is the name of all the cartoons that are ordered by air date?", "remark": "value col", "label": "0", "score": "0.4199533760547638"}
{"logic": "( contestant number ) , ( contestant name ) that belongs to ( contestants ) , ordered by ( ( contestant name ) in descending order )", "text": "List the contestant numbers and names, ordered by contestant name ascending.", "remark": "logic", "label": "0", "score": "0.5969501733779907"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( indepyear ) greater than ( 1950 ) )", "text": "Give the names of the nations that were founded after 1950.", "remark": "positive", "label": "1", "score": "0.5499464869499207"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of likes ) equal to ( department id of highschooler ) ) ) ) , that have ( ( department name of likes ) equal to ( 'engineer' ) )", "text": "How many degrees does each department has?", "remark": "logic", "label": "0", "score": "0.4467201828956604"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler ) , that have ( ( ( grade ) equal to ( 9 ) ) or ( ( grade ) equal to ( 10 ) ) )", "text": "How many high schoolers are there in grade 9 or 10?", "remark": "positive", "label": "1", "score": "0.4470749795436859"}
{"logic": "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )", "text": "Which professionals live in a city containing the substring 'South'? List his or her role, street, city and state.", "remark": "value str", "label": "0", "score": "0.6076403856277466"}
{"logic": "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))", "text": "find the names of tv channels that do not play any cartoon directed by Ben Jones.", "remark": "value col", "label": "0", "score": "0.6282405257225037"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) between ( 1 ) and ( 2 ) )", "text": "Give the ids of documents that have except one and two paragraphs.", "remark": "logic", "label": "0", "score": "0.5948114395141602"}
{"logic": "( last name of department ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( current address id of department ) equal to ( address id of management ) ) ) ) , that have ( ( state province county of management ) equal to ( 'northcarolina' ) ), and except that ( ( distinct ( last name of head ) ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of head ) equal to ( student id of trip ) ) ) ))", "text": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?", "remark": "positive", "label": "1", "score": "0.404817134141922"}
{"logic": "( name of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes )", "text": "Show the names of high schoolers who have likes.", "remark": "logic", "label": "0", "score": "0.5653861165046692"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler ) , that have ( ( ( grade ) equal to ( 9 ) ) or ( ( grade ) equal to ( 10 ) ) )", "text": "Count the number of high schoolers in grades 9 or 10.", "remark": "positive", "label": "1", "score": "0.5470578074455261"}
{"logic": "( concert name of highschooler ) , ( theme of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( concert ) satisfied that ( ( concert id of likes ) equal to ( concert id of highschooler ) ) ) ) , grouped by ( concert id of highschooler )", "text": "Show the name for all concerts and the number of singers in each concert.", "remark": "value col", "label": "0", "score": "0.5639041066169739"}
{"logic": "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )", "text": "What is the average miles per gallon(mpg) of the cars with 8 cylinders?", "remark": "value int", "label": "0", "score": "0.3688602149486542"}
{"logic": "all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial ) equal to ( t ) ) ) and all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( dutch ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "Which countries have either English or Dutch as an official language?", "remark": "positive", "label": "1", "score": "0.37203916907310486"}
{"logic": "( name ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( ( dog id ) that belongs to ( treatments ) , grouped by ( dog id ) , that have ( ( the sum of ( cost of treatment ) ) greater than ( 1000 ) ) ) ) )", "text": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.", "remark": "positive", "label": "1", "score": "0.5327677726745605"}
{"logic": "( first name ) , ( birth date ) that belongs to ( players ) , that have ( ( country code ) equal to ( 'usa' ) )", "text": "List the first name and birth date of all players from the country with code USA.", "remark": "positive", "label": "1", "score": "0.5539780855178833"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "How many friends does the high school student Kyle have?", "remark": "positive", "label": "1", "score": "0.4923587739467621"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( nationality ) not equal to ( russia ) )", "text": "What are the names of people who are not from Russia?", "remark": "positive", "label": "1", "score": "0.38262754678726196"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) , and ( ( airlines ) satisfied that ( ( uid of head ) equal to ( airline of department ) ) ) ) , that have ( ( ( city of management ) equal to ( aberdeen ) ) and ( ( airline of head ) equal to ( united airlines ) ) )", "text": "Count the number of United Airlines flights that arrive in Aberdeen.", "remark": "positive", "label": "1", "score": "0.5656357407569885"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "Count the number of flights departing from 'APG'.", "remark": "positive", "label": "1", "score": "0.5794015526771545"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( governmentform of department ) equal to ( republic ) ) , grouped by ( language of management ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "text": "What languages are only used by a single country with a republic government?", "remark": "positive", "label": "1", "score": "0.3554379940032959"}
{"logic": "( department name of management ) , ( department id of department ) that belongs to ( ( degree programs ) , and ( ( departments ) satisfied that ( ( department id of department ) equal to ( department id of management ) ) ) ) , grouped by ( department id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which department offers the most number of degrees? List department name and id.", "remark": "positive", "label": "1", "score": "0.5059333443641663"}
{"logic": "( first name ) , ( country code ) that belongs to ( players ) , ordered by ( ( birth date ) ) , limited to the top ( 1 )", "text": "What is the first name and country code of the oldest player?", "remark": "positive", "label": "1", "score": "0.3996769189834595"}
{"logic": "( other student details ) that belongs to ( students ) , ordered by ( ( other student details ) in descending order )", "text": "What other details can you tell me about students in alphabetical order?", "remark": "logic", "label": "0", "score": "0.3987174332141876"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.", "remark": "positive", "label": "1", "score": "0.6285403966903687"}
{"logic": "( section name ) that belongs to ( sections ) , ordered by ( ( section name ) in descending order )", "text": "What are the names of the sections in reverse alphabetical order?", "remark": "positive", "label": "1", "score": "0.37808704376220703"}
{"logic": "( record company ) that belongs to ( orchestra ) , ordered by ( ( year of founded ) in descending order )", "text": "Return the record companies of orchestras, sorted descending by the years in which they were founded.", "remark": "positive", "label": "1", "score": "0.5900856256484985"}
{"logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) ) )", "text": "Find the average age of students who have some pets.", "remark": "logic", "label": "0", "score": "0.6088610291481018"}
{"logic": "( the average of ( ranking ) ) , ( first name of likes ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of likes ) equal to ( player id of highschooler ) ) ) ) , grouped by ( first name of likes )", "text": "What are the first names of all players?", "remark": "value col", "label": "0", "score": "0.3621838390827179"}
{"logic": "( name ) that belongs to ( employee ) , ordered by ( ( age ) )", "text": "Sort employee names by their age in ascending order.", "remark": "positive", "label": "1", "score": "0.5332658290863037"}
{"logic": "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))", "text": "Which first names are used for professionals or owners but also used as dog names?", "remark": "logic", "label": "0", "score": "0.40916207432746887"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs ) , that have ( ( dog_id ) in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "Find the average age of the dogs who went through treatments.", "remark": "value table", "label": "0", "score": "0.5993307828903198"}
{"logic": "( the average of ( transcript date ) ) that belongs to ( transcripts )", "text": "What is the average transcript date?", "remark": "positive", "label": "1", "score": "0.3814123570919037"}
{"logic": "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))", "text": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?", "remark": "positive", "label": "1", "score": "0.38981983065605164"}
{"logic": "( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , that have ( ( tourney name of management ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , that have ( ( tourney name of management ) equal to ( 'australian open' ) ))", "text": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?", "remark": "positive", "label": "1", "score": "0.4140572249889374"}
{"logic": "( the number of ( distinct ( governmentform ) ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) )", "text": "How many type of governments are in Europe?", "remark": "value col", "label": "0", "score": "0.4076671600341797"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "What are the full names of all players, sorted by birth date?", "remark": "positive", "label": "1", "score": "0.3840569853782654"}
{"logic": "( the number of ( distinct ( professional id ) ) ) that belongs to ( treatments )", "text": "How many professionals have performed any treatment to dogs?", "remark": "positive", "label": "1", "score": "0.4290107190608978"}
{"logic": "( name ) , ( country ) , ( age ) that belongs to ( singer ) , ordered by ( ( age ) in descending order )", "text": "Show name, country, age for all singers ordered by age from the yongest to the oldest.", "remark": "logic", "label": "0", "score": "0.5392351150512695"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( population ) less than ( the minimum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) ) )", "text": "Which African countries have a smaller population than that of any country in Asia?", "remark": "positive", "label": "1", "score": "0.4009089767932892"}
{"logic": "( birth date of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( earnings of management ) in ascending order ) , limited to the top ( 1 )", "text": "What is the birth date of the poker player with the lowest earnings?", "remark": "positive", "label": "1", "score": "0.36985841393470764"}
{"logic": "( the minimum of ( loser rank ) ) that belongs to ( matches )", "text": "Find the average rank of losers in all matches.", "remark": "logic", "label": "0", "score": "0.46939143538475037"}
{"logic": "( the number of ( all items ) ) that belongs to ( orchestra ) , that have ( ( ( major record format ) equal to ( cd ) ) or ( ( major record format ) equal to ( dvd ) ) )", "text": "Count the number of orchestras that have CD or DVD as their record format.", "remark": "positive", "label": "1", "score": "0.5460671186447144"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( dutch ) )) r\" )", "text": "How many countries speak both English and Dutch?", "remark": "positive", "label": "1", "score": "0.4183441698551178"}
{"logic": "( the number of ( all items ) ) that belongs to ( continents )", "text": "How many continents are there?", "remark": "positive", "label": "1", "score": "0.4777904450893402"}
{"logic": "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )", "text": "Return the template type description of the template type with the code AD.", "remark": "positive", "label": "1", "score": "0.5790601372718811"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( indepyear ) greater than ( 1950 ) )", "text": "What are the names of all the countries that became independent after 1949?", "remark": "value int", "label": "0", "score": "0.39692026376724243"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( age ) in ascending order )", "text": "List the names of conductors in ascending order of age.", "remark": "positive", "label": "1", "score": "0.5520737171173096"}
{"logic": "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "What are the name, population, and life expectancy of the largest Asian country by land?", "remark": "positive", "label": "1", "score": "0.35138484835624695"}
{"logic": "( cost of treatment of likes ) , ( treatment type description of highschooler ) that belongs to ( ( treatments ) , and ( ( treatment types ) satisfied that ( ( treatment type code of likes ) equal to ( treatment type code of highschooler ) ) ) )", "text": "List the cost of each treatment and the corresponding treatment type code.", "remark": "value col", "label": "0", "score": "0.59322190284729"}
{"logic": "( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the high schooler who has the greatest number of likes?", "remark": "positive", "label": "1", "score": "0.3981037437915802"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 6 ) )", "text": "How many cars has over 6 cylinders?", "remark": "positive", "label": "1", "score": "0.4554031491279602"}
{"logic": "( the average of ( transcript date ) ) that belongs to ( transcripts )", "text": "On average, when were the transcripts printed?", "remark": "positive", "label": "1", "score": "0.4539561867713928"}
{"logic": "( professional id of department ) , ( role code of department ) , ( first name of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the id, role, and first name of the professionals who have performed two or more treatments?", "remark": "positive", "label": "1", "score": "0.38234004378318787"}
{"logic": "( manager name ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order ) , limited to the top ( 1 )", "text": "Find the manager name and district of the shop whose number of products is the largest.", "remark": "positive", "label": "1", "score": "0.6378529667854309"}
{"logic": "( lname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pet age of head ) equal to ( 3 ) ) and ( ( pettype of head ) equal to ( 'cat' ) ) )", "text": "Find the last name of the student who has a cat that is age 3.", "remark": "positive", "label": "1", "score": "0.6164348721504211"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( ben jones ) )", "text": "What are the names of all cartoons not directed by Ben Jones?", "remark": "logic", "label": "0", "score": "0.4299737513065338"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) , and ( ( airlines ) satisfied that ( ( uid of area code state ) equal to ( airline of likes ) ) ) ) , that have ( ( ( city of highschooler ) equal to ( aberdeen ) ) and ( ( airline of area code state ) equal to ( united airlines ) ) )", "text": "How many United Airlines flights come from City 'Aberdeen'?", "remark": "value col", "label": "0", "score": "0.46956828236579895"}
{"logic": "( model ) that belongs to ( car names ) , grouped by ( model ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What model has the least different versions?", "remark": "logic", "label": "0", "score": "0.37460950016975403"}
{"logic": "( the minimum of ( number products ) ) , ( the maximum of ( number products ) ) that belongs to ( shop )", "text": "What are the minimum and maximum number of products across all the shops?", "remark": "positive", "label": "1", "score": "0.3870159983634949"}
{"logic": "( name ) , ( birth date ) that belongs to ( people ) , ordered by ( ( name ) in ascending order )", "text": "List the names and birth dates of people in ascending alphabetical order of name.", "remark": "positive", "label": "1", "score": "0.5801827907562256"}
{"logic": "( nationality ) , ( the number of ( all items ) ) that belongs to ( people ) , grouped by ( nationality )", "text": "What are different nationalities of people and the corresponding number of people from each nation?", "remark": "positive", "label": "1", "score": "0.3789301812648773"}
{"logic": "( id of department ) , ( maker of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( id of department ) , ( maker of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) , and ( ( car names ) satisfied that ( ( model of management ) equal to ( model of head ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ))", "text": "Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker.", "remark": "positive", "label": "1", "score": "0.5252599120140076"}
{"logic": "( name ) , ( population ) , ( headofstate ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "What are the population of the country with the largest area?", "remark": "value col", "label": "0", "score": "0.34032538533210754"}
{"logic": "( template id ) that belongs to ( documents ) , grouped by ( template id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show ids for all templates that are used by more than three document.", "remark": "value int", "label": "0", "score": "0.5904500484466553"}
{"logic": "( the average of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the maximum weight for each pet type.", "remark": "logic", "label": "0", "score": "0.5123101472854614"}
{"logic": "( package option ) , ( series name ) that belongs to ( tv channel ) , that have ( ( hight definition tv ) equal to ( yes ) )", "text": "Find the package choice and series name of the TV channel that has high definition TV.", "remark": "positive", "label": "1", "score": "0.6212127804756165"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( cylinders of highschooler ) equal to ( 4 ) ) , ordered by ( ( horsepower of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "For all of the 8 cylinder cars, which model has the most horsepower?", "remark": "value int", "label": "0", "score": "0.49215322732925415"}
{"logic": "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the name and rank points of the winner who won the least times.", "remark": "logic", "label": "0", "score": "0.6175885796546936"}
{"logic": "( the minimum of ( loser rank ) ) that belongs to ( matches )", "text": "Find the highest rank of losers in all matches.", "remark": "positive", "label": "1", "score": "0.47235989570617676"}
{"logic": "( transcript date of highschooler ) , ( transcript id of likes ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of likes ) equal to ( transcript id of highschooler ) ) ) ) , grouped by ( transcript id of likes ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the date and id of the transcript with the most number of results?", "remark": "logic", "label": "0", "score": "0.3652329742908478"}
{"logic": "( the number of ( all items ) ) that belongs to ( singer )", "text": "How many singers are there?", "remark": "positive", "label": "1", "score": "0.4718090295791626"}
{"logic": "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )", "text": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?", "remark": "positive", "label": "1", "score": "0.3576282262802124"}
{"logic": "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )", "text": "Return the version numbers and template type codes of templates with a version number greater than 10.", "remark": "value int", "label": "0", "score": "0.5809656977653503"}
{"logic": "( weight ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 4 ) ) and ( ( year ) equal to ( 1974 ) ) ) , ordered by ( ( weight ) in ascending order ) , limited to the top ( 1 )", "text": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1985 ORDER BY Weight ASC LIMIT 1;", "remark": "value int", "label": "0", "score": "0.6007432341575623"}
{"logic": "( contestant number of likes ) , ( contestant name of likes ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) ) , grouped by ( contestant number of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the contestant numbers and names of the contestants who had at least three votes?", "remark": "value int", "label": "0", "score": "0.36117491126060486"}
{"logic": "( the average of ( winner rank ) ) that belongs to ( matches )", "text": "Find the average rank of winners in all matches.", "remark": "positive", "label": "1", "score": "0.4664691984653473"}
{"logic": "( make of management ) , ( year of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( year of department ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "What is the maker of the carr produced in the earliest year and what year was it?", "remark": "positive", "label": "1", "score": "0.4305068254470825"}
{"logic": "( the number of ( all items ) ) , ( country code ) that belongs to ( players ) , grouped by ( country code )", "text": "find the number of players for each country.", "remark": "positive", "label": "1", "score": "0.5378317832946777"}
{"logic": "( airportcode ) , ( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( anthony ) )", "text": "Give the airport code and airport name that is not corresponding to the city Anthony.", "remark": "logic", "label": "0", "score": "0.6102626323699951"}
{"logic": "( template type code of department ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template type code of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the code of the template type that is most commonly used in documents.", "remark": "positive", "label": "1", "score": "0.596011221408844"}
{"logic": "( area code of area code state ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) , and ( ( area code state ) satisfied that ( ( state of highschooler ) equal to ( state of area code state ) ) ) ) , that have ( ( contestant name of likes ) equal to ( 'tabatha gehling' ) ), and intersect with ( ( area code of area code state ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) , and ( ( area code state ) satisfied that ( ( state of highschooler ) equal to ( state of area code state ) ) ) ) , that have ( ( contestant name of likes ) equal to ( 'kelly clauss' ) ))", "text": "List the area codes in which voters voted neither for the contestant 'Tabatha Gehling'  nor the contestant 'Kelly Clauss'.", "remark": "logic", "label": "0", "score": "0.5746917724609375"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( republic ) )", "text": "How many countries have a republic as their form of government?", "remark": "positive", "label": "1", "score": "0.44754308462142944"}
{"logic": "( winner name ) , ( loser name ) that belongs to ( matches ) , ordered by ( ( minutes ) in descending order ) , limited to the top ( 1 )", "text": "find the names of loser and winner who played in the match with greatest number of minutes.", "remark": "positive", "label": "1", "score": "0.5765801072120667"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "How many different series and contents are listed in the TV Channel table?", "remark": "positive", "label": "1", "score": "0.4446631669998169"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) )", "text": "What are the names of poker players?", "remark": "positive", "label": "1", "score": "0.4117419421672821"}
{"logic": "( series name of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( title of highschooler ) equal to ( the rise of the blue beetle! ) )", "text": "What is the TV Channel that not shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "remark": "logic", "label": "0", "score": "0.5286266207695007"}
{"logic": "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )", "text": "What is the last transcript release date?", "remark": "positive", "label": "1", "score": "0.39209046959877014"}
{"logic": "( first name of department ) , ( name of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) )", "text": "List pairs of the owner's first name and the dogs's name.", "remark": "positive", "label": "1", "score": "0.5473653078079224"}
{"logic": "( mpg ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) ) , ordered by ( ( mpg ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum mpg of the cars that had 7 cylinders or that were produced before 1980?", "remark": "value int", "label": "0", "score": "0.3905264437198639"}
{"logic": "( contestant number of likes ) , ( contestant name of likes ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of likes ) equal to ( contestant number of highschooler ) ) ) ) , grouped by ( contestant number of likes ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "Of all the contestants who got voted, what is the name of the contestant who got most votes?", "remark": "logic", "label": "0", "score": "0.4448182284832001"}
{"logic": "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity for the stadium with lowest average attendance?", "remark": "logic", "label": "0", "score": "0.35934722423553467"}
{"logic": "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the language that is spoken in the most countries.", "remark": "positive", "label": "1", "score": "0.5388453602790833"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( singer_id ) not in ( ( singer id ) that belongs to ( song ) ) )", "text": "List the name of singers that do not have any song.", "remark": "positive", "label": "1", "score": "0.532447874546051"}
{"logic": "( earnings ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order )", "text": "What are the earnings of poker players, ordered descending by value?", "remark": "positive", "label": "1", "score": "0.3796503245830536"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( aberdeen ) )", "text": "What are the names of airports in Aberdeen?", "remark": "positive", "label": "1", "score": "0.40240636467933655"}
{"logic": "( weight ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 4 ) ) and ( ( year ) equal to ( 1974 ) ) ) , ordered by ( ( weight ) in ascending order ) , limited to the top ( 1 )", "text": "What is the minimu weight of the car with 8 cylinders produced in 1974?", "remark": "positive", "label": "1", "score": "0.38294732570648193"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "Find the number of left handed winners who participated in the WTA Championships.", "remark": "positive", "label": "1", "score": "0.6071693301200867"}
{"logic": "( production code ) , ( channel ) that belongs to ( cartoon ) , ordered by ( ( original air date ) ) , limited to the top ( 1 )", "text": "Find the production code and channel of the most recently aired TV Series.", "remark": "value col", "label": "0", "score": "0.58903568983078"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( headofstate of department ) equal to ( beatrix ) ) and ( ( isofficial of management ) equal to ( t ) ) )", "text": "What is the official language spoken in the country whose head of state is Beatrix?", "remark": "positive", "label": "1", "score": "0.40332818031311035"}
{"logic": "( major record format ) that belongs to ( orchestra ) , grouped by ( major record format ) , ordered by ( ( the number of ( all items ) ) in ascending order )", "text": "What are the major record formats of orchestras, sorted by their frequency?", "remark": "positive", "label": "1", "score": "0.3407251238822937"}
{"logic": "( distinct ( winner name ) ) , ( winner rank ) that belongs to ( matches ) , ordered by ( ( winner age ) ) , limited to the top ( 3 )", "text": "What are the names and ranks of the three youngest winners across all matches?", "remark": "positive", "label": "1", "score": "0.36259034276008606"}
{"logic": "( the number of ( all items ) ) that belongs to ( paragraphs )", "text": "How many paragraphs in total?", "remark": "positive", "label": "1", "score": "0.5072113275527954"}
{"logic": "( id ) that belongs to ( highschooler ), and except that ( ( student id ) that belongs to ( friend ))", "text": "Show ids of all students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.5267812013626099"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( ahd ) )", "text": "Which airlines have a flight with source airport AHD?", "remark": "positive", "label": "1", "score": "0.4743240177631378"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( destairport of management ) equal to ( ahd ) )", "text": "Which airlines have a flight with destination airport AHD?", "remark": "positive", "label": "1", "score": "0.46106624603271484"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 4 ) )", "text": "Which grades have 4 or less high schoolers?", "remark": "logic", "label": "0", "score": "0.4118812680244446"}
{"logic": "( the number of ( all items ) ) that belongs to ( votes ) , that have ( ( ( state ) equal to ( 'ny' ) ) or ( ( state ) equal to ( 'ca' ) ) )", "text": "What are the number of votes not from state 'NY' or 'CA'?", "remark": "logic", "label": "0", "score": "0.4112720489501953"}
{"logic": "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )", "text": "What is the continent name which Anguilla belongs to?", "remark": "positive", "label": "1", "score": "0.38381722569465637"}
{"logic": "( name ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( ( dog id ) that belongs to ( treatments ) , grouped by ( dog id ) , that have ( ( the sum of ( cost of treatment ) ) greater than ( 1000 ) ) ) ) )", "text": "What are the names of the dogs for which the owner spent more than 1000 for treatment?", "remark": "positive", "label": "1", "score": "0.415959894657135"}
{"logic": "( distinct ( fname of department ) ) , ( age of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) )", "text": "What are the different first names and ages of the students who do have pets?", "remark": "positive", "label": "1", "score": "0.39287295937538147"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( city of highschooler ) equal to ( aberdeen ) )", "text": "Return the number of flights arriving in Aberdeen.", "remark": "logic", "label": "0", "score": "0.6250891089439392"}
{"logic": "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )", "text": "Give the city and country for the Alton airport.", "remark": "positive", "label": "1", "score": "0.5826926827430725"}
{"logic": "( department name of management ) , ( department id of department ) that belongs to ( ( degree programs ) , and ( ( departments ) satisfied that ( ( department id of department ) equal to ( department id of management ) ) ) ) , grouped by ( department id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "For each department id, what is the name of the department with the most number of degrees?", "remark": "positive", "label": "1", "score": "0.44966477155685425"}
{"logic": "( distinct ( fname of likes ) ) , ( age of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) )", "text": "Find the first name of students who have a pet.", "remark": "value col", "label": "0", "score": "0.5984890460968018"}
{"logic": "( pixel aspect ratio par ) , ( country ) that belongs to ( tv channel ) , that have ( ( language ) not equal to ( 'english' ) )", "text": "find the pixel aspect ratio and nation of the tv channels that do not use English.", "remark": "positive", "label": "1", "score": "0.5537459254264832"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )", "text": "How many friends does each student have?", "remark": "positive", "label": "1", "score": "0.4506867527961731"}
{"logic": "( population ) , ( region ) that belongs to ( country ) , that have ( ( name ) equal to ( angola ) )", "text": "What are the region and population of Angola?", "remark": "positive", "label": "1", "score": "0.3564111292362213"}
{"logic": "( distinct ( region of department ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) or ( ( language of management ) equal to ( dutch ) ) )", "text": "Which regions speak Dutch or English?", "remark": "positive", "label": "1", "score": "0.3934818208217621"}
{"logic": "( distinct ( winner name ) ) , ( winner rank ) that belongs to ( matches ) , ordered by ( ( winner age ) ) , limited to the top ( 3 )", "text": "Find the name and rank of the 3 youngest winners across all matches.", "remark": "positive", "label": "1", "score": "0.598943829536438"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches ) , that have ( ( ( year ) equal to ( 2013 ) ) or ( ( year ) equal to ( 2016 ) ) )", "text": "How many matches were played in 2013 or 2016?", "remark": "positive", "label": "1", "score": "0.4365217685699463"}
{"logic": "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( chinese ) )", "text": "How many continents do not speak Chinese?", "remark": "logic", "label": "0", "score": "0.44784021377563477"}
{"logic": "( name of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) , and ( ( museum ) satisfied that ( ( museum id of border info ) equal to ( museum id of catalog structure ) ) ) ) , that have ( ( open year of border info ) less than ( 2009 ) ), and intersect with ( ( name of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) , and ( ( museum ) satisfied that ( ( museum id of border info ) equal to ( museum id of catalog structure ) ) ) ) , that have ( ( open year of border info ) greater than ( 2011 ) ))", "text": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "remark": "positive", "label": "1", "score": "0.44645628333091736"}
{"logic": "( fname of department ) , ( sex of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , grouped by ( stuid of department ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What is the first name and gender of the all the students who have more than one pet?", "remark": "positive", "label": "1", "score": "0.3797365725040436"}
{"logic": "( tourney name ) that belongs to ( matches ) , grouped by ( tourney name ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "What are the names of tournaments that have more than 10 matches?", "remark": "positive", "label": "1", "score": "0.3612307906150818"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "List the first and last name of all players in the order of birth date.", "remark": "positive", "label": "1", "score": "0.5832223296165466"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( likes ) , grouped by ( student id )", "text": "Count the number of likes for each student name.", "remark": "value col", "label": "0", "score": "0.5181716084480286"}
{"logic": "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )", "text": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.", "remark": "positive", "label": "1", "score": "0.5736055970191956"}
{"logic": "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )", "text": "Which continent is USA in?", "remark": "value str", "label": "0", "score": "0.41635677218437195"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( name of department ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "How many official languages does Afghanistan have?", "remark": "positive", "label": "1", "score": "0.47756436467170715"}
{"logic": "( the number of ( all items ) ) , ( year ) that belongs to ( matches ) , grouped by ( year )", "text": "How many matches in average were played in each year?", "remark": "logic", "label": "0", "score": "0.4247101843357086"}
{"logic": "( city of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of department ) equal to ( destairport of management ) ) ) ) , grouped by ( city of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has most number of arriving flights?", "remark": "positive", "label": "1", "score": "0.458183616399765"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "Which Asian countries have a population that is larger than any country in Africa?", "remark": "positive", "label": "1", "score": "0.4140307903289795"}
{"logic": "( the number of ( all items ) ) that belongs to ( concert ) , that have ( ( ( year ) equal to ( 2014 ) ) or ( ( year ) equal to ( 2015 ) ) )", "text": "How many concerts are there in year 2014 or 2015?", "remark": "positive", "label": "1", "score": "0.45391523838043213"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "What are the languages used by the least number of TV Channels and how many channels use it?", "remark": "positive", "label": "1", "score": "0.3622707426548004"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the singer who is worth the most?", "remark": "positive", "label": "1", "score": "0.37741467356681824"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( governmentform of likes ) equal to ( republic ) ) , grouped by ( language of highschooler ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "text": "What languages are only used by two countries with a republic government?", "remark": "value int", "label": "0", "score": "0.35618939995765686"}
{"logic": "( countryname of likes ) , ( countryid of likes ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of likes ) equal to ( country of highschooler ) ) ) ) , grouped by ( countryid of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "What are the countries having at most one car maker? List name and id.", "remark": "logic", "label": "0", "score": "0.4092186689376831"}
{"logic": "( grade ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "What grade is Kyle in?", "remark": "positive", "label": "1", "score": "0.4242329001426697"}
{"logic": "( the number of ( all items ) ) that belongs to ( orchestra ) , that have ( ( ( major record format ) equal to ( cd ) ) or ( ( major record format ) equal to ( dvd ) ) )", "text": "Count the number of orchestras that have CD as their record format.", "remark": "value str", "label": "0", "score": "0.5423518419265747"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "Which airlines have less than 100 flights?", "remark": "value int", "label": "0", "score": "0.4551045000553131"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )", "text": "List names of conductors in ascending order of years of work.", "remark": "logic", "label": "0", "score": "0.56166011095047"}
{"logic": "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )", "text": "Find the role, street, city and state of the professionals living in a city that does not contain the substring 'West'.", "remark": "logic", "label": "0", "score": "0.6061882376670837"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What are the Package Options of the TV Channels whose series names are Sky Radio?", "remark": "positive", "label": "1", "score": "0.4322480261325836"}
{"logic": "( professional id of department ) , ( cell number of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Which professionals have done at least two types of treatments? List the professional id and cell phone.", "remark": "positive", "label": "1", "score": "0.5271480679512024"}
{"logic": "( series name of department ) , ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( directed by of management ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of department ) , ( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( directed by of management ) equal to ( 'ben jones' ) ))", "text": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?", "remark": "positive", "label": "1", "score": "0.48100996017456055"}
{"logic": "( name ) , ( date ) that belongs to ( battle )", "text": "List the name, date and result of each battle.", "remark": "positive", "label": "1", "score": "0.5437849164009094"}
{"logic": "( document id ) , ( template id ) , ( document description ) that belongs to ( documents ) , that have ( ( document name ) equal to ( robbin cv ) )", "text": "What is the document id, template id and description for document not named \"Robbin CV\"?", "remark": "logic", "label": "0", "score": "0.45526355504989624"}
{"logic": "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))", "text": "Find the first names that are used for professionals or owners but are not used as dog names.", "remark": "positive", "label": "1", "score": "0.5868666768074036"}
{"logic": "( the number of ( all items ) ) that belongs to ( transcripts )", "text": "What are transcripts listed?", "remark": "logic", "label": "0", "score": "0.39257290959358215"}
{"logic": "( package option ) , ( series name ) that belongs to ( tv channel ) , that have ( ( hight definition tv ) equal to ( yes ) )", "text": "Find the package choice and series name of the TV channel that does not have high definition TV.", "remark": "logic", "label": "0", "score": "0.6283869743347168"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "Who is the latest graduate of the school? List the first name, middle name and last name.", "remark": "logic", "label": "0", "score": "0.5426880121231079"}
{"logic": "( the average of ( injured ) ) that belongs to ( death )", "text": "What is the minimum number of injuries caused each time?", "remark": "value col", "label": "0", "score": "0.3460829555988312"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial of management ) equal to ( t ) ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( french ) ) and ( ( isofficial of management ) equal to ( t ) ) ))", "text": "What are the names of nations where both English and French are official languages?", "remark": "positive", "label": "1", "score": "0.32837972044944763"}
{"logic": "all items that belongs to ( hiring )", "text": "Give me all the information about hiring.", "remark": "positive", "label": "1", "score": "0.46597522497177124"}
{"logic": "( the number of ( distinct ( dog id ) ) ) that belongs to ( treatments )", "text": "Count the number of dogs that went through a treatment.", "remark": "positive", "label": "1", "score": "0.5091739892959595"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler ) , that have ( ( ( grade ) equal to ( 9 ) ) or ( ( grade ) equal to ( 10 ) ) )", "text": "Count the number of high schoolers in grades 8 or 10.", "remark": "value int", "label": "0", "score": "0.545497715473175"}
{"logic": "( the sum of ( bonus ) ) that belongs to ( evaluation )", "text": "What is total bonus given in all evaluations?", "remark": "positive", "label": "1", "score": "0.39259132742881775"}
