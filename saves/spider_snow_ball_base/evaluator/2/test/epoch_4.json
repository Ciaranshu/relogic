{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "ids, names, and ages of all visitors who visited more than 1 visit.", "remark": "positive", "label": "1", "score": "0.5376920104026794"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series are on TV channel A Love of a Lifetime?", "remark": "negative", "label": "0", "score": "0.49882593750953674"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "average horsepower of the cars produced before 1980?", "remark": "positive", "label": "1", "score": "0.4771296977996826"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member after 2010.", "remark": "negative", "label": "0", "score": "0.5418829321861267"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "is the model of the car with the largest number of cylinders and the largest number of horsepower?", "remark": "negative", "label": "0", "score": "0.46705999970436096"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids of templates whose type code is \"PS\" or whose type code is \"PT\"?", "remark": "negative", "label": "0", "score": "0.519360363483429"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "ids of airlines that have less than 200 flights.", "remark": "negative", "label": "0", "score": "0.5037266612052917"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of airlines that have less than 200 number of flights.", "remark": "positive", "label": "1", "score": "0.5220707654953003"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of distinct winners of the tourney named Wta Championships.", "remark": "negative", "label": "0", "score": "0.5341038703918457"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the countries that have more than 3 models and have more than 3 manufacturers?", "remark": "negative", "label": "0", "score": "0.4913526773452759"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest bonus?", "remark": "positive", "label": "1", "score": "0.5156185030937195"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "the ids of all students who have friends and likes.", "remark": "negative", "label": "0", "score": "0.5176052451133728"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the templates whose type code is \"PS\" or whose type code is \"PFT\".", "remark": "negative", "label": "0", "score": "0.5749678015708923"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and dislikes.", "remark": "negative", "label": "0", "score": "0.5225321054458618"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "number of distinct winners of the tourney named Wta championships with winner hand.", "remark": "negative", "label": "0", "score": "0.5719294548034668"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first names and last names of all players sorted by birth date?", "remark": "positive", "label": "1", "score": "0.4871518015861511"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest score in an evaluation.", "remark": "negative", "label": "0", "score": "0.5569238662719727"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of the students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.5372430682182312"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players ordered by birth date.", "remark": "positive", "label": "1", "score": "0.560881495475769"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct names of the models that are made by either the manufacturer with full name 'General Motors' or have weight bigger than 3500.", "remark": "positive", "label": "1", "score": "0.5257470607757568"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "country name and id of the country that has at least one car maker.", "remark": "positive", "label": "1", "score": "0.5480355024337769"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "number of distinct series name and content for tv channels.", "remark": "positive", "label": "1", "score": "0.5346509218215942"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "names of airlines with abbreviation \"AL\".", "remark": "negative", "label": "0", "score": "0.5416474342346191"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "id of the car that has the highest accelerate model?", "remark": "negative", "label": "0", "score": "0.44566312432289124"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that do not have any source flight from CV to apg?", "remark": "negative", "label": "0", "score": "0.5227026343345642"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "country code and first name of the players who won both the WTA championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.5855727791786194"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "the number of models made by the country \"USA\".", "remark": "positive", "label": "1", "score": "0.5283479690551758"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the number of flights operated by airlines with number less than 200.", "remark": "negative", "label": "0", "score": "0.5039004683494568"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in country Haiti and have cell phone number '09700166582'.", "remark": "negative", "label": "0", "score": "0.5513330101966858"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree with the most student enrolment?", "remark": "positive", "label": "1", "score": "0.4801429510116577"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "has the most number of cylinders produced before 1980?", "remark": "negative", "label": "0", "score": "0.43920043110847473"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries have a language that is official?", "remark": "negative", "label": "0", "score": "0.4289858937263489"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who like and like some friends.", "remark": "negative", "label": "0", "score": "0.5560030341148376"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the airlines that are associated with flights that are not from CV but not from apg?", "remark": "negative", "label": "0", "score": "0.517894983291626"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends and liked likes.", "remark": "negative", "label": "0", "score": "0.4960617125034332"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a pet of the type 'Dog' but not a cat.", "remark": "positive", "label": "1", "score": "0.5592460036277771"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents that have the type code PPT.", "remark": "positive", "label": "1", "score": "0.4879146218299866"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "are the airlines with abbreviationUAL?", "remark": "negative", "label": "0", "score": "0.38619282841682434"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who has the highest number of evaluations and gets the highest bonus.", "remark": "negative", "label": "0", "score": "0.5711683630943298"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of all the airlines that have both flights from CVO and APG but no flights from APG.", "remark": "negative", "label": "0", "score": "0.6129789352416992"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest total bonus?", "remark": "positive", "label": "1", "score": "0.5130009055137634"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers who are older than 20?", "remark": "positive", "label": "1", "score": "0.41127094626426697"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of all teachers and the number of courses arranged by each teacher?", "remark": "positive", "label": "1", "score": "0.5132796168327332"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the most programs.", "remark": "negative", "label": "0", "score": "0.5227287411689758"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many languages are there in Afghanistan?", "remark": "negative", "label": "0", "score": "0.4433745741844177"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the least number of cylinders that was produced before 1980 or before 1980?", "remark": "negative", "label": "0", "score": "0.45020899176597595"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, last name, and last name of the student who left school on the earliest date?", "remark": "negative", "label": "0", "score": "0.5278664231300354"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "airline with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.5143538117408752"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "number of models that are produced by the country USA?", "remark": "positive", "label": "1", "score": "0.44407495856285095"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents that have the type code 'PPT'.", "remark": "positive", "label": "1", "score": "0.5175694823265076"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids for the templates whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.5365160703659058"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the death and the injured of ships with tonnage of t2.", "remark": "negative", "label": "0", "score": "0.5133424401283264"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who like and like some friends.", "remark": "negative", "label": "0", "score": "0.5560029745101929"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids of templates that have type code \"PS\" or type code \"Ppt\".", "remark": "negative", "label": "0", "score": "0.5508496761322021"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average horsepower for all cars that were built before 1980?", "remark": "negative", "label": "0", "score": "0.42704808712005615"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "the number of flights that go to the airport ato.", "remark": "positive", "label": "1", "score": "0.5376198291778564"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "is the id of the model that can accelerate the most?", "remark": "negative", "label": "0", "score": "0.4322752058506012"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest total bonus?", "remark": "positive", "label": "1", "score": "0.513001024723053"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and the number of injured by ships with tonnage smaller than 't'.", "remark": "negative", "label": "0", "score": "0.5092056393623352"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "is the airline with abbreviation \"UAL\"?", "remark": "negative", "label": "0", "score": "0.41988277435302734"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the names of teachers and the number of courses they are involved in.", "remark": "positive", "label": "1", "score": "0.5418322086334229"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "all series from A Love of a Lifetime", "remark": "negative", "label": "0", "score": "0.5124291777610779"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "is the id of the template type described as \"Presentation\"?", "remark": "negative", "label": "0", "score": "0.46495720744132996"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers younger than 20?", "remark": "negative", "label": "0", "score": "0.40375688672065735"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct names of cities that are official Chinese cities in the \"continent\" of \"Asia\".", "remark": "negative", "label": "0", "score": "0.5546549558639526"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "number of distinct winners of the WTA championships with winner hand L.", "remark": "positive", "label": "1", "score": "0.5206494331359863"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the names of countries whose population is greater than the population of all countries on the continent of \"Asia\".", "remark": "negative", "label": "0", "score": "0.5339412689208984"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent and the number of car makers from that continent", "remark": "negative", "label": "0", "score": "0.4283928871154785"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many different series are there on TV channels?", "remark": "negative", "label": "0", "score": "0.4249194264411926"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the names of countries whose population is greater than the population of all countries in the continent of \"Africa\".", "remark": "negative", "label": "0", "score": "0.5347111821174622"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program that has the most students enrolled?", "remark": "positive", "label": "1", "score": "0.4854223132133484"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "number of documents that have type code 'PPT'.", "remark": "positive", "label": "1", "score": "0.5085701942443848"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the names of teachers and the number of courses they teach.", "remark": "positive", "label": "1", "score": "0.5477839112281799"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id, middle name, last name, and id of the student who has the most enrollments.", "remark": "negative", "label": "0", "score": "0.5237616300582886"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series name of the channel that has an episode of \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.5063511729240417"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "Chinese cities in asia continent?", "remark": "negative", "label": "0", "score": "0.5165234804153442"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "number of flights operated by airline \"United Airlines\" and \"Asy\".", "remark": "negative", "label": "0", "score": "0.5453152656555176"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are not friends with any other student.", "remark": "positive", "label": "1", "score": "0.5390710234642029"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "the number of flights operated by airline \"United Airlines\" whose destination is \"USA\".", "remark": "negative", "label": "0", "score": "0.5547110438346863"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "country does the airline Jetblue Airlines belong to?", "remark": "negative", "label": "0", "score": "0.44850999116897583"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries are \"Afghanistan\" official?", "remark": "negative", "label": "0", "score": "0.4356403052806854"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name ordered by birth date.", "remark": "negative", "label": "0", "score": "0.5536866784095764"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "is the airline with abbreviation \"UAL\"?", "remark": "negative", "label": "0", "score": "0.41988277435302734"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "many flights are there from ashley airport in Aberdeen city?", "remark": "negative", "label": "0", "score": "0.4768456816673279"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "are the cylinders of the car with the model with the highest accelerate?", "remark": "negative", "label": "0", "score": "0.43972641229629517"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average horsepower for all cars that were built before 1980?", "remark": "negative", "label": "0", "score": "0.42704808712005615"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "all the countries that have singers older than 20?", "remark": "positive", "label": "1", "score": "0.4341880977153778"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "is the template type code that is not used by any document?", "remark": "negative", "label": "0", "score": "0.43432965874671936"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name of all players ordered by birth date?", "remark": "positive", "label": "1", "score": "0.4914621412754059"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.5455577373504639"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have both a friend and a student who has a friend.", "remark": "negative", "label": "0", "score": "0.524856686592102"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and the first name of the player who won both the WTA Championships and the Australian Open?", "remark": "positive", "label": "1", "score": "0.5109227895736694"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff after opening year.", "remark": "negative", "label": "0", "score": "0.5394858121871948"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "is the id of the template type described by the description?", "remark": "negative", "label": "0", "score": "0.4467652440071106"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "country name and id of the country that has at least one car manufacturer?", "remark": "positive", "label": "1", "score": "0.48075735569000244"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the students who left school before any date.", "remark": "negative", "label": "0", "score": "0.567301332950592"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "are the airports that have less than 200 flights?", "remark": "negative", "label": "0", "score": "0.4155259430408478"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car with the smallest data.", "remark": "negative", "label": "0", "score": "0.51936274766922"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a pet with type 'dog' but not cat?", "remark": "positive", "label": "1", "score": "0.5014259219169617"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who like friends.", "remark": "negative", "label": "0", "score": "0.5492405295372009"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses they arrange.", "remark": "positive", "label": "1", "score": "0.5539448261260986"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "is the id of the car with the model name 'volvo' accelerating the most?", "remark": "negative", "label": "0", "score": "0.45616620779037476"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age for all visitors who made more than one visit?", "remark": "positive", "label": "1", "score": "0.48181724548339844"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age of the visitors who visited more than 1 place.", "remark": "negative", "label": "0", "score": "0.5425623059272766"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of the airlines that have both flights from CVO and flights from APG but no flights from APG?", "remark": "negative", "label": "0", "score": "0.5491064190864563"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template type described as \"Presentation\".", "remark": "positive", "label": "1", "score": "0.5468114614486694"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the most number of courses?", "remark": "negative", "label": "0", "score": "0.4564853608608246"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the template id and type code of the document with the most documents?", "remark": "negative", "label": "0", "score": "0.44667908549308777"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "the number of flights that originate in ashley and/or Aberdeen airports.", "remark": "negative", "label": "0", "score": "0.5564606785774231"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the most documents?", "remark": "positive", "label": "1", "score": "0.47041353583335876"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series names of the tv channels that have an episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.5082414150238037"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the name of students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.52997225522995"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "are the names and abbrevents of all airlines based in the country \"USA\"?", "remark": "negative", "label": "0", "score": "0.476643443107605"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age of the visitors who visited more than 1 time.", "remark": "positive", "label": "1", "score": "0.5373867750167847"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "names of all the models that have either 'General Motors' or weight greater than 3500?", "remark": "negative", "label": "0", "score": "0.5199293494224548"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who have likes and likes?", "remark": "negative", "label": "0", "score": "0.5185234546661377"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "each continent and the number of car makers on that continent.", "remark": "positive", "label": "1", "score": "0.510886549949646"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current addresses of students?", "remark": "positive", "label": "1", "score": "0.44644972681999207"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "continents and the number of car makers on each continent.", "remark": "positive", "label": "1", "score": "0.5176587104797363"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first names and last names of all players in alphabetical order.", "remark": "negative", "label": "0", "score": "0.5525330305099487"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first name of students who live in country Haiti and whose cell phone number is '09700166582'.", "remark": "negative", "label": "0", "score": "0.563625156879425"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type of the template that has the most documents?", "remark": "negative", "label": "0", "score": "0.47649484872817993"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct models of the cars whose full name is 'General Motors' or have weight greater than 3500?", "remark": "positive", "label": "1", "score": "0.49679815769195557"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the countries whose population is greater than the population of all countries in the continent \"Asia\".", "remark": "negative", "label": "0", "score": "0.5192885398864746"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "the distinct cities in China where the language is English and the language is Chinese and the continent is asia?", "remark": "negative", "label": "0", "score": "0.47223687171936035"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the name of countries that have a population larger than the largest country in Africa.", "remark": "negative", "label": "0", "score": "0.5015323162078857"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the names and id of the countries that have at least one vehicle", "remark": "negative", "label": "0", "score": "0.385267972946167"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries that are official in Afghanistan?", "remark": "negative", "label": "0", "score": "0.4622298777103424"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct models whose full name is General Motors or whose weight is greater than 3500;", "remark": "positive", "label": "1", "score": "0.5723305940628052"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and the number of people injured by ships of tonnage T2.", "remark": "negative", "label": "0", "score": "0.49741077423095703"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids for all students who have friends and liked.", "remark": "negative", "label": "0", "score": "0.5077667832374573"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the car whose data is the minimum year?", "remark": "positive", "label": "1", "score": "0.4859127998352051"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name, and age for all the visitors who visited more than one time.", "remark": "positive", "label": "1", "score": "0.5646421909332275"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population", "remark": "negative", "label": "0", "score": "0.3777505159378052"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages in each country that have more than 2 languages.", "remark": "negative", "label": "0", "score": "0.5036501884460449"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are made by the country USA?", "remark": "negative", "label": "0", "score": "0.4379066526889801"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program with the most student enrolment?", "remark": "positive", "label": "1", "score": "0.4814460873603821"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages that are used by more than 2 countries.", "remark": "negative", "label": "0", "score": "0.4926382005214691"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the most programs?", "remark": "negative", "label": "0", "score": "0.4563916027545929"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the deaths and the injured of ships with tonnage of t2.", "remark": "negative", "label": "0", "score": "0.5066317915916443"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the id of the car with the name AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.4802764356136322"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "the mpg of the car with the cylinders equal to 8 or less before 1980?", "remark": "negative", "label": "0", "score": "0.4955471456050873"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars whose full name is 'General Motors' or have data greater than 3500?", "remark": "positive", "label": "1", "score": "0.4893776476383209"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights go to the airport ato?", "remark": "negative", "label": "0", "score": "0.46108636260032654"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the name and abbreviation of the airline whose country is \"USA\"?", "remark": "positive", "label": "1", "score": "0.5117038488388062"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights go to the airport ato?", "remark": "negative", "label": "0", "score": "0.4610861837863922"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "are the names of airlines that do not operate flights from CVO but not from apg?", "remark": "negative", "label": "0", "score": "0.49661335349082947"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id, middle name, last name, and the number of students enrolled in the most courses?", "remark": "negative", "label": "0", "score": "0.45302265882492065"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.5195133686065674"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who have likes and likes?", "remark": "negative", "label": "0", "score": "0.5185233950614929"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "are the names and ids of countries that have at least one car manufacturer?", "remark": "negative", "label": "0", "score": "0.42601141333580017"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current address ids for students?", "remark": "positive", "label": "1", "score": "0.4485446810722351"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name and age of the visitor who visited more than 1 time.", "remark": "positive", "label": "1", "score": "0.5458698272705078"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "the model of the car with the most horsepower that has 4 cylinders.", "remark": "positive", "label": "1", "score": "0.5625361204147339"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who have both a friend and a friend.", "remark": "negative", "label": "0", "score": "0.5278254151344299"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages that are used by more than 2 countries.", "remark": "negative", "label": "0", "score": "0.49263808131217957"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "mpg of the car with the cylinders equal to 8 or before 1980.", "remark": "positive", "label": "1", "score": "0.5313934087753296"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the students who have both a dog and a cat.", "remark": "negative", "label": "0", "score": "0.5565019249916077"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car that has the most accelerations?", "remark": "negative", "label": "0", "score": "0.44178545475006104"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who have likes?", "remark": "negative", "label": "0", "score": "0.5181465148925781"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "is the id of the car with the model 'Volvo' that accelerates the most?", "remark": "negative", "label": "0", "score": "0.454946368932724"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "all airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.5200782418251038"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the students who left school on the most recent date?", "remark": "negative", "label": "0", "score": "0.5104168653488159"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "number of flights that go to ato airport?", "remark": "positive", "label": "1", "score": "0.475496381521225"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of students who have friends and liked them.", "remark": "negative", "label": "0", "score": "0.4996335804462433"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of teachers and the number of courses arrange by each teacher.", "remark": "negative", "label": "0", "score": "0.5694704055786133"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured of ships with tonnage of T2.", "remark": "negative", "label": "0", "score": "0.5155561566352844"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "cities in China that have language 'T' and whose continent is asia", "remark": "negative", "label": "0", "score": "0.5573042631149292"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline name and abbreviation for airlines in country \"USA\".", "remark": "positive", "label": "1", "score": "0.5551568865776062"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "the number of models produced by the country named USA", "remark": "positive", "label": "1", "score": "0.45102205872535706"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who got the highest bonus.", "remark": "positive", "label": "1", "score": "0.5685713887214661"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff after opening year 2010.", "remark": "negative", "label": "0", "score": "0.5483556985855103"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "many countries have official language in Afghanistan?", "remark": "negative", "label": "0", "score": "0.4629654884338379"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "many flights did Ashley have between Aberdeen and Aberdeen city?", "remark": "negative", "label": "0", "score": "0.49141067266464233"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does the airline JetBlue Airlines belong to?", "remark": "negative", "label": "0", "score": "0.43802645802497864"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type of the template that has been used the most times.", "remark": "positive", "label": "1", "score": "0.5441789031028748"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "are the make and year of the car that was used the smallest amount of data?", "remark": "negative", "label": "0", "score": "0.41518551111221313"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses arranged by that teacher.", "remark": "positive", "label": "1", "score": "0.5624881386756897"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many distinct series and content are there on tv channels?", "remark": "negative", "label": "0", "score": "0.42339807748794556"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "the number of distinct series names and content.", "remark": "negative", "label": "0", "score": "0.5116948485374451"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average horsepower of all the cars produced before 1980", "remark": "negative", "label": "0", "score": "0.4860995411872864"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the id of the car whose name is AMC hornet sportabout (sw)", "remark": "negative", "label": "0", "score": "0.561622142791748"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players, ordered by birth date.", "remark": "positive", "label": "1", "score": "0.561435341835022"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and type code of the most popular document template?", "remark": "positive", "label": "1", "score": "0.4737754762172699"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "ids of airlines that do not have sourceairport CVO but not apg?", "remark": "negative", "label": "0", "score": "0.5025867819786072"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "me the model of the car with the largest number of cylinders and 4 horsepower.", "remark": "negative", "label": "0", "score": "0.5993985533714294"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of teachers and the corresponding number of courses offered by each teacher?", "remark": "positive", "label": "1", "score": "0.5102224946022034"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students who live in the country 'Haiti' and have a cell phone number of '09700166582'.", "remark": "negative", "label": "0", "score": "0.5560334324836731"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "are the countries that have more than 3 models and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.44709712266921997"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "are the series names of the tv channels that have \"A Love of a Lifetime\"?", "remark": "negative", "label": "0", "score": "0.4633638858795166"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "country with a population greater than the maximum in africa", "remark": "negative", "label": "0", "score": "0.5065487623214722"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "ids, names, and ages of all visitors who visited more than 1 place.", "remark": "negative", "label": "0", "score": "0.5415374636650085"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models that are not produced by the company whose weight is less than 3500 and whose full name is not 'Ford Motor Company'.", "remark": "negative", "label": "0", "score": "0.5207828283309937"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "names of teachers and the number of courses arrange by each teacher.", "remark": "negative", "label": "0", "score": "0.5694703459739685"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights operated by United Airlines with destination airport \"ASY\".", "remark": "negative", "label": "0", "score": "0.5744454264640808"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "is the model of the car with the most horsepower, with the most cylinders?", "remark": "negative", "label": "0", "score": "0.4603912830352783"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are made by the country USA?", "remark": "negative", "label": "0", "score": "0.43790656328201294"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "are the names of the cars that were produced in the smallest year?", "remark": "negative", "label": "0", "score": "0.45370402932167053"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many different series names and content on TV channels.", "remark": "negative", "label": "0", "score": "0.5112246870994568"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id and summary name of the degree program that has the most student enrollments?", "remark": "positive", "label": "1", "score": "0.473808228969574"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the names of museums that have more than one head of staff in the year before 2010.", "remark": "negative", "label": "0", "score": "0.5496701598167419"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent and the number of car makers in each continent?", "remark": "positive", "label": "1", "score": "0.46911749243736267"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first names and last names of all players in alphabetical order by birth date.", "remark": "positive", "label": "1", "score": "0.5526143908500671"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "the number of flights from ashley airport to Aberdeen airport.", "remark": "negative", "label": "0", "score": "0.5641002655029297"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "is the average horsepower of all cars produced before 1980?", "remark": "negative", "label": "0", "score": "0.4322730004787445"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the largest number of courses.", "remark": "negative", "label": "0", "score": "0.5251460671424866"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "type code for all templates except those with documents.", "remark": "positive", "label": "1", "score": "0.5701277852058411"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the name of each teacher and the number of courses arranged by that teacher?", "remark": "positive", "label": "1", "score": "0.4953634738922119"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "number of flights operated by airlines \"United Airlines\" and \"Asy\".", "remark": "negative", "label": "0", "score": "0.5421180129051208"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "the average horsepower of the cars produced before 1980.", "remark": "positive", "label": "1", "score": "0.4942895770072937"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players from both the WTA Championships and Australian Open?", "remark": "negative", "label": "0", "score": "0.5013762712478638"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the code of the template that does not have any documents?", "remark": "negative", "label": "0", "score": "0.5284909605979919"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airlines that have never operated to CV but never to apg?", "remark": "negative", "label": "0", "score": "0.5579285025596619"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "first name and age of the students who have a pet with type 'Dog' but not a cat?", "remark": "positive", "label": "1", "score": "0.5101919770240784"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "is the id and type code of the template with most number of documents?", "remark": "negative", "label": "0", "score": "0.4484296143054962"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and the number of people injured by ships whose tonnage is 't'.", "remark": "positive", "label": "1", "score": "0.5162599086761475"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and name of countries that have more than 3 car makers and have more than 3 models.", "remark": "negative", "label": "0", "score": "0.5386992692947388"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "the number of flights from airports in city \"Ashley\" and \"Aberdeen\".", "remark": "negative", "label": "0", "score": "0.572725236415863"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff member.", "remark": "negative", "label": "0", "score": "0.5143879652023315"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and summary name of the degree program with the most student enrollment?", "remark": "positive", "label": "1", "score": "0.4794418513774872"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the number of people killed and injured by ships with tonnage 'T2'.", "remark": "negative", "label": "0", "score": "0.5168442130088806"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "series names of tv channels that have an episode of \"A Love of a Lifetime \".", "remark": "positive", "label": "1", "score": "0.5316720008850098"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "the code of the template type that is not used in any documents.", "remark": "positive", "label": "1", "score": "0.5442713499069214"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured number of ships with a tonnage of t2.", "remark": "negative", "label": "0", "score": "0.5118629336357117"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "the country with the largest population in africa", "remark": "negative", "label": "0", "score": "0.4602329134941101"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "mpg of the car with cylinders equal to 8 or less than 1980.", "remark": "negative", "label": "0", "score": "0.5146171450614929"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the student with the most enrollments. List the student ID, first name, middle name, last name, and the number of enrollments.", "remark": "positive", "label": "1", "score": "0.6188235282897949"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, and last name of the student who left school on the most recent date?", "remark": "negative", "label": "0", "score": "0.5175002217292786"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the names of museums that have a minuscule number of staff and opened after 2010.", "remark": "negative", "label": "0", "score": "0.551533043384552"}
{"logic": "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of addresses ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "the id, name and age for all the visitors who made more than one visit?", "remark": "positive", "label": "1", "score": "0.49429893493652344"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "each country, how many cars are there in that country?", "remark": "negative", "label": "0", "score": "0.4644601345062256"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "number of flights operated by airline \"United Airlines\" from asy", "remark": "negative", "label": "0", "score": "0.5473936200141907"}
{"logic": "( series name of countries ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of countries ) equal to ( channel of car makers ) ) ) ) , that have ( ( episode of car makers ) equal to ( a love of a lifetime ) )", "text": "are the series names of the tv channels that have \"A Love of a Lifetime\"?", "remark": "negative", "label": "0", "score": "0.463363915681839"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "the names of museums that have more than one staff member after opening in year 2010.", "remark": "negative", "label": "0", "score": "0.5467706918716431"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name of all players ordered by birth date.", "remark": "positive", "label": "1", "score": "0.5714591145515442"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "are the names and abbrevents of all airlines based in the country \"USA\"?", "remark": "negative", "label": "0", "score": "0.476643443107605"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who are friends with both likes and dislikes.", "remark": "negative", "label": "0", "score": "0.522532045841217"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a dog but not a cat?", "remark": "positive", "label": "1", "score": "0.4985533058643341"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and name of countries that have more than 3 car makers and have more than 3 models.", "remark": "negative", "label": "0", "score": "0.5386994481086731"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the number of car manufacturers in each country.", "remark": "negative", "label": "0", "score": "0.5125511884689331"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of the players who won both the WTA Championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.5807507634162903"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "the model of the car that has the largest number of cylinders with 4 horsepower and the most number of wheels.", "remark": "negative", "label": "0", "score": "0.5641197562217712"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students whose permanent address is in the country of 'haiti' and cell phone number is 09700166582?", "remark": "negative", "label": "0", "score": "0.4701001048088074"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "first name and age of the student who has a pet with type 'dog' but not a cat?", "remark": "positive", "label": "1", "score": "0.5121569037437439"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have any friend.", "remark": "positive", "label": "1", "score": "0.5343926548957825"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers older than 20.", "remark": "positive", "label": "1", "score": "0.45729726552963257"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id and type code of the template that has the most documents?", "remark": "negative", "label": "0", "score": "0.4783029854297638"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids for all students who have both friends and likes?", "remark": "negative", "label": "0", "score": "0.4438653290271759"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "accelerate the car with id 'amc hornet sportabout'", "remark": "negative", "label": "0", "score": "0.624333918094635"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "the id of the template type described by the template type description.", "remark": "negative", "label": "0", "score": "0.5490322709083557"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "country name and id of the country that has at least 1 car maker?", "remark": "positive", "label": "1", "score": "0.4827270805835724"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "is the number of documents with type code PPT?", "remark": "negative", "label": "0", "score": "0.434891939163208"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the id and name of countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.4672904312610626"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a pet with type 'dog' but not a cat?", "remark": "positive", "label": "1", "score": "0.500372588634491"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )", "text": "country with a population greater than the largest continent in africa", "remark": "negative", "label": "0", "score": "0.48899954557418823"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many models are produced by car makers in the country named USA?", "remark": "negative", "label": "0", "score": "0.44074398279190063"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "the ids of all the students who have friends and likes.", "remark": "negative", "label": "0", "score": "0.5272558331489563"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents that have the type code 'PPT'.", "remark": "positive", "label": "1", "score": "0.5175694823265076"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car with the most horsepower?", "remark": "negative", "label": "0", "score": "0.5053094625473022"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "number of countries whose language is \"Afghanistan\".", "remark": "negative", "label": "0", "score": "0.5266268253326416"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent and the number of car makers in each continent?", "remark": "positive", "label": "1", "score": "0.4691174328327179"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.5066865086555481"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of friends who have likes and likes.", "remark": "negative", "label": "0", "score": "0.5369774699211121"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "continents and the number of car makers on each continent?", "remark": "positive", "label": "1", "score": "0.4629332423210144"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student id, middle name, last name, and the number of students enrolled in the largest number of courses.", "remark": "negative", "label": "0", "score": "0.5251458287239075"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of friends who are friends with some students?", "remark": "negative", "label": "0", "score": "0.5150617957115173"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does jetblue airways operate?", "remark": "negative", "label": "0", "score": "0.41296854615211487"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the id of the car with the name AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.4802764356136322"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct models whose weight is less than 3500 and whose full name is not 'Ford Motor Company';", "remark": "negative", "label": "0", "score": "0.5373029112815857"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "the accelerations of the cars that are involved in amc hornet sportabout?", "remark": "negative", "label": "0", "score": "0.4591037631034851"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "the airline and the abbreviation for all flights from country \"USA\".", "remark": "negative", "label": "0", "score": "0.5448649525642395"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the students who do not have a dog or cat.", "remark": "negative", "label": "0", "score": "0.538725733757019"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the youngest student who left campus.", "remark": "negative", "label": "0", "score": "0.5661082863807678"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "names of museums that have more than one staff working after 2010.", "remark": "negative", "label": "0", "score": "0.5450323820114136"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "number of countries whose language is official is Afghanistan?", "remark": "negative", "label": "0", "score": "0.475699245929718"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "many car makers are in the USA?", "remark": "negative", "label": "0", "score": "0.43910396099090576"}
{"logic": "( distinct ( name of city ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of addresses ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of city ) ) ) ) , that have ( ( ( isofficial of addresses ) equal to ( 't' ) ) and ( ( language of addresses ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )", "text": "cities in China that are official language and have continent asia?", "remark": "negative", "label": "0", "score": "0.5113752484321594"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages and names of countries that have more than 2 languages.", "remark": "positive", "label": "1", "score": "0.5013554096221924"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "are the names of museums that have a staff of more than the minimum number of staff for any museum opened after 2010?", "remark": "negative", "label": "0", "score": "0.4466550052165985"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "countries does jetblue airways belong to?", "remark": "negative", "label": "0", "score": "0.40425464510917664"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "names of all the distinct models whose full name is General Motors or weight is above 3500?", "remark": "positive", "label": "1", "score": "0.5262618660926819"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.5066866278648376"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "the names of airports that have both a CVO and a APG connection but do not have a CIS connection.", "remark": "negative", "label": "0", "score": "0.5783520340919495"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "the names of all airlines with abbreviation \"UAL\".", "remark": "positive", "label": "1", "score": "0.5302727818489075"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "many distinct current address ids exist for students.", "remark": "negative", "label": "0", "score": "0.4796966016292572"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "first name, middle name, last name for the student with the most students?", "remark": "negative", "label": "0", "score": "0.4967362880706787"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who do not have any friend.", "remark": "positive", "label": "1", "score": "0.5490437150001526"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "the first name, middle name, and last name of the student who left the institution the most recently?", "remark": "negative", "label": "0", "score": "0.5266247391700745"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "the number of flights operated by airline \"United Airlines\" and \"Asy\".", "remark": "negative", "label": "0", "score": "0.5386930704116821"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the airlines that have less than 200 flights.", "remark": "positive", "label": "1", "score": "0.49978670477867126"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "distinct models that are not produced by the company whose weight is less than 3500 and whose full name is not 'ford motor company'.", "remark": "negative", "label": "0", "score": "0.5265591740608215"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "continents and the number of car makers from each continent.", "remark": "positive", "label": "1", "score": "0.5209987759590149"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( name of countries ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "the number of languages that the country Afghanistan is official in.", "remark": "positive", "label": "1", "score": "0.5430625677108765"}
{"logic": "( degree program id of countries ) , ( degree summary name of countries ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of countries ) equal to ( degree program id of car makers ) ) ) ) , grouped by ( degree program id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id and summary name of the degree program that has the most student enrollment.", "remark": "positive", "label": "1", "score": "0.5456984043121338"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of the students who have friends who have likes.", "remark": "negative", "label": "0", "score": "0.5373906493186951"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "the number of distinct winners of the tourney named 'Wta Championships' and the winner hand.", "remark": "negative", "label": "0", "score": "0.5420616269111633"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "many series and series are on TV channels", "remark": "negative", "label": "0", "score": "0.465851366519928"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the templates whose type code is \"PS\" or whose type code is \"PFT\".", "remark": "negative", "label": "0", "score": "0.5749676823616028"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "ids for the templates whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.5365160703659058"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "the first name and last name of all players, ordered by their birth date.", "remark": "positive", "label": "1", "score": "0.5600556135177612"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the car with the model model 'volvo' that accelerates the most", "remark": "negative", "label": "0", "score": "0.4017109274864197"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "are all the countries of the flights operated by JetBlue Airways?", "remark": "negative", "label": "0", "score": "0.4580884873867035"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "id, middle name, last name, and the number of students enrolled in the most courses?", "remark": "negative", "label": "0", "score": "0.45302265882492065"}
{"logic": "( accelerate of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( make of car makers ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "is the acceleration data of the car with the name AMC hornet sportabout (sw)?", "remark": "negative", "label": "0", "score": "0.4797852635383606"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "country of the airline jetblue airways?", "remark": "positive", "label": "1", "score": "0.468452125787735"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "names of airlines with abbreviation \"UAL\"", "remark": "positive", "label": "1", "score": "0.5449243187904358"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "the names of airlines that have less than 200 number of flights.", "remark": "positive", "label": "1", "score": "0.5220708847045898"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "number of distinct current address ids of students.", "remark": "positive", "label": "1", "score": "0.4993691146373749"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "the number of distinct current address ids for students.", "remark": "positive", "label": "1", "score": "0.502170741558075"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "number of distinct series names and the number of distinct content.", "remark": "negative", "label": "0", "score": "0.5310284495353699"}
{"logic": "( killed of countries ) , ( injured of countries ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( tonnage of car makers ) equal to ( 't' ) )", "text": "the killed and injured number of ships with a tonnage of t2.", "remark": "negative", "label": "0", "score": "0.5118629336357117"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.4827093482017517"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the name of the vehicle that is made in the smallest year?", "remark": "negative", "label": "0", "score": "0.49004295468330383"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "the distinct models whose weight is less than 3500 and whose full name is not \"Ford Motor Company\".", "remark": "negative", "label": "0", "score": "0.5267731547355652"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "models whose weight is less than 3500 and whose full name is notford motor company.", "remark": "negative", "label": "0", "score": "0.539104700088501"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "is the airline with the abbreviationUAL?", "remark": "negative", "label": "0", "score": "0.411577433347702"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "is the id of the template type described by the description?", "remark": "negative", "label": "0", "score": "0.4467651844024658"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first and last name of students who have both a dog and a cat as pets?", "remark": "negative", "label": "0", "score": "0.48294034600257874"}
{"logic": "( fname of countries ) , ( age of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of countries ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of countries ) equal to ( stuid of car makers ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of car makers ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )", "text": "the first name and age of the student who has a pet of the type 'Dog' but not a cat.", "remark": "positive", "label": "1", "score": "0.5592460036277771"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the country names and ids of countries that have at least one car maker.", "remark": "positive", "label": "1", "score": "0.5299351811408997"}
{"logic": "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ), and intersect with ( ( name of car makers ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of countries ) equal to ( id of car makers ) ) ) ))", "text": "names of students who are friends with both likes and likes.", "remark": "negative", "label": "0", "score": "0.5455577373504639"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "number of languages that are in more than 2 countries?", "remark": "negative", "label": "0", "score": "0.44296449422836304"}
{"logic": "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of addresses ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )", "text": "the first names of students whose permanent address is in country 'Haiti' and whose cell phone number is 09700166582?", "remark": "negative", "label": "0", "score": "0.4665331244468689"}
{"logic": "( the number of ( language of car makers ) ) , ( name of countries ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of countries ) equal to ( countrycode of car makers ) ) ) ) , grouped by ( name of countries ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "the number of languages that are shared by more than two countries.", "remark": "negative", "label": "0", "score": "0.4921747148036957"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of car makers ) ) ) , and ( ( countries ) satisfied that ( ( country of car makers ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )", "text": "number of models produced by the country named USA?", "remark": "positive", "label": "1", "score": "0.45603811740875244"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "name of the employee who has the highest bonus.", "remark": "positive", "label": "1", "score": "0.5779744386672974"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , grouped by ( airline of countries ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "ids of airlines that have less than 200 flights.", "remark": "negative", "label": "0", "score": "0.5037267804145813"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who won both the WTA Championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.5830742716789246"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "type codes that are not used by any document?", "remark": "positive", "label": "1", "score": "0.4661518633365631"}
{"logic": "( continent of countries ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of countries ) equal to ( continent of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of car makers ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of countries )", "text": "the continent and the number of car makers from that continent", "remark": "negative", "label": "0", "score": "0.4283931255340576"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "distinct models of cars that have full name 'General Motors' or have weight greater than 3500.", "remark": "positive", "label": "1", "score": "0.5361638069152832"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "the number of flights made by aircraft from the city of Aberdeen and the airport of Aberdeen.", "remark": "negative", "label": "0", "score": "0.5811092853546143"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "airlines that do not have source flights in CV or apg?", "remark": "negative", "label": "0", "score": "0.5180417895317078"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "the id of the templates whose type code is \"PPT\" or whose type code is \"PPT\"?", "remark": "negative", "label": "0", "score": "0.5192590355873108"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "is the mpg of the car with the most cylinders produced before 1980 or with the lowest mpg before 1980?", "remark": "negative", "label": "0", "score": "0.4372645914554596"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of countries ) equal to ( airportcode of car makers ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of countries ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of car makers ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )", "text": "number of flights from ashley to Aberdeen?", "remark": "negative", "label": "0", "score": "0.5121187567710876"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "airline and abbreviation for airlines from usa?", "remark": "negative", "label": "0", "score": "0.4732668697834015"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the names and ids of countries that have at least one car owner.", "remark": "negative", "label": "0", "score": "0.5362534523010254"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "names and ids of countries that have at least 1 car maker.", "remark": "positive", "label": "1", "score": "0.5363703370094299"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of players who participated in both the WTA Championships and the Australian Open.", "remark": "negative", "label": "0", "score": "0.5817316770553589"}
{"logic": "( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of countries ) , ( countryname of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) , and ( ( model list ) satisfied that ( ( id of car makers ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )", "text": "the countries that have more than 3 car makers and have more than 3 models?", "remark": "negative", "label": "0", "score": "0.47699490189552307"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "data of the car with the model with the highest accelerate.", "remark": "negative", "label": "0", "score": "0.550629734992981"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "names and ids of countries that have at least one car maker.", "remark": "positive", "label": "1", "score": "0.5360973477363586"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )", "text": "first name and last name of players ordered by birth date?", "remark": "positive", "label": "1", "score": "0.491134911775589"}
{"logic": "( countryname of countries ) , ( countryid of countries ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of countries ) equal to ( country of car makers ) ) ) ) , grouped by ( countryid of countries ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "the name and id of the country that has at least one driver?", "remark": "negative", "label": "0", "score": "0.47407814860343933"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the name of the car that was made in the smallest year?", "remark": "negative", "label": "0", "score": "0.4960798919200897"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "the distinct models of the cars whose full name is 'General Motors' or have weight greater than 3500?", "remark": "positive", "label": "1", "score": "0.49679815769195557"}
{"logic": "( model of countries ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of car makers ) ) ) ) , that have ( ( cylinders of car makers ) equal to ( 4 ) ) , ordered by ( ( horsepower of car makers ) in descending order ) , limited to the top ( 1 )", "text": "model of the car that has the highest horsepower.", "remark": "negative", "label": "0", "score": "0.552646815776825"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of countries ) equal to ( id of car makers ) ) ) ))", "text": "the names of students who do not have any friend.", "remark": "positive", "label": "1", "score": "0.5343924164772034"}
{"logic": "( make of car makers ) , ( year of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( year of countries ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "the make and year of the oldest car data and the oldest car data.", "remark": "negative", "label": "0", "score": "0.52556312084198"}
{"logic": "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of addresses ) ) ) ) , ordered by ( ( bonus of addresses ) in descending order ) , limited to the top ( 1 )", "text": "the name of the employee who got the highest bonus.", "remark": "positive", "label": "1", "score": "0.5685713291168213"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "has the most number of cylinders in the fleet before 1980?", "remark": "negative", "label": "0", "score": "0.46683937311172485"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "many flights with destination airport \"ATO\".", "remark": "negative", "label": "0", "score": "0.5479530692100525"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers who are older than 20.", "remark": "positive", "label": "1", "score": "0.46661674976348877"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "id of the template whose type code is \"PS\" or whose type code is \"Ppt\"?", "remark": "negative", "label": "0", "score": "0.5270894765853882"}
{"logic": "( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( cvo ) ), and except that ( ( airline of countries ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of countries ) equal to ( airline of car makers ) ) ) ) , that have ( ( sourceairport of car makers ) equal to ( apg ) ))", "text": "names of airlines that do not have source flights in CV but not apg?", "remark": "negative", "label": "0", "score": "0.5605244040489197"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ))", "text": "code for templates that do not have any documents?", "remark": "negative", "label": "0", "score": "0.5285427570343018"}
{"logic": "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )", "text": "mpg of the car with cylinders equal to 8 or less before 1980?", "remark": "negative", "label": "0", "score": "0.4872596859931946"}
{"logic": "( distinct ( model of countries ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of cars data ) not equal to ( 'ford motor company' ) ) )", "text": "all the distinct models that are not made by the company Ford Motor Company.", "remark": "negative", "label": "0", "score": "0.5239685773849487"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "many flights are operated by airline \"United Airlines\" from Asy airport?", "remark": "negative", "label": "0", "score": "0.47655320167541504"}
{"logic": "( distinct ( model of car makers ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of countries ) equal to ( model of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of car makers ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of countries ) equal to ( id of cars data ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of cars data ) greater than ( 3500 ) ) )", "text": "are the different models of cars that have either a full name 'General Motors' or a weight of more than 3500?", "remark": "negative", "label": "0", "score": "0.4329993426799774"}
{"logic": "( name of car makers ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of countries ) equal to ( teacher id of car makers ) ) ) ) , grouped by ( name of car makers )", "text": "the names of teachers and the number of courses they have taught.", "remark": "positive", "label": "1", "score": "0.5548424124717712"}
{"logic": "( template id of countries ) , ( template type code of car makers ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , grouped by ( template id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "the id and template type of the template with the most documents.", "remark": "positive", "label": "1", "score": "0.5412545800209045"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the id of the vehicle with model 'volvo' that accelerates the most.", "remark": "negative", "label": "0", "score": "0.5487480163574219"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of countries ) equal to ( template id of car makers ) ) ) ) , that have ( ( template type code of car makers ) equal to ( 'ppt' ) )", "text": "the number of documents with type code PVT?", "remark": "negative", "label": "0", "score": "0.4715877175331116"}
{"logic": "( template id of car makers ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of countries ) equal to ( template type code of car makers ) ) ) ) , that have ( ( template type description of countries ) equal to ( presentation ) )", "text": "ids of the templates that have description of presentation.", "remark": "positive", "label": "1", "score": "0.5544875860214233"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "ids of friends and likes.", "remark": "negative", "label": "0", "score": "0.47267070412635803"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "the ids of students who have friends and likes.", "remark": "negative", "label": "0", "score": "0.4968327283859253"}
{"logic": "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )", "text": "distinct countries of singers who are older than 20?", "remark": "positive", "label": "1", "score": "0.41127118468284607"}
{"logic": "( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of countries ) , ( first name of countries ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of countries ) equal to ( winner id of car makers ) ) ) ) , that have ( ( tourney name of car makers ) equal to ( 'australian open' ) ))", "text": "the country code and first name of the players who won both the WTA Championships and Australian Open.", "remark": "positive", "label": "1", "score": "0.5807507634162903"}
{"logic": "( student id of countries ) , ( first name of countries ) , ( middle name of countries ) , ( last name of countries ) , ( the number of ( all items ) ) , ( student id of countries ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of countries ) equal to ( student id of car makers ) ) ) ) , grouped by ( student id of countries ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "student has the most number of enrollments? List the student id, middle name, last name, and the number of enrollments.", "remark": "negative", "label": "0", "score": "0.5755357146263123"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "the number of flights from airport \"ATO\"", "remark": "negative", "label": "0", "score": "0.5385991930961609"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "id of the template whose type code code is \"PPS\" or whose type code is \"PS\".", "remark": "negative", "label": "0", "score": "0.5830948948860168"}
{"logic": "( cylinders of countries ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of countries ) equal to ( makeid of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of countries ) in ascending order ) , limited to the top ( 1 )", "text": "the data of the car with the highest accelerate?", "remark": "negative", "label": "0", "score": "0.4809698164463043"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of car makers ) equal to ( uid of countries ) ) ) ) , that have ( ( ( airline of countries ) equal to ( united airlines ) ) and ( ( destairport of car makers ) equal to ( asy ) ) )", "text": "the number of flights operated by airline \"United Airlines\" whose destination is \"USA\".", "remark": "negative", "label": "0", "score": "0.5547110438346863"}
{"logic": "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )", "text": "Which airline does not have abbreviation 'UAL'?", "remark": "logic", "label": "0", "score": "0.439983993768692"}
{"logic": "( the sum of ( tours ) ) , ( ranking date ) that belongs to ( rankings ) , grouped by ( ranking date )", "text": "How many average tour were there for each ranking date?", "remark": "logic", "label": "0", "score": "0.4521958827972412"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "List the different series names and contents in the TV Channel table.", "remark": "value col", "label": "0", "score": "0.6321215629577637"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( tv series )", "text": "What is the maximum and minimum share for the TV series?", "remark": "positive", "label": "1", "score": "0.37816765904426575"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "How many flights have destination ATO?", "remark": "positive", "label": "1", "score": "0.48771345615386963"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )", "text": "Show all template type codes with more than three templates.", "remark": "logic", "label": "0", "score": "0.6021232604980469"}
{"logic": "( document name of highschooler ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , that have ( ( template type code of likes ) equal to ( bk ) )", "text": "Show all document names using templates without template type code BK.", "remark": "logic", "label": "0", "score": "0.6005344986915588"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial of management ) equal to ( t ) ) ) ) )", "text": "Give the mean life expectancy of countries in which English is not the official language.", "remark": "positive", "label": "1", "score": "0.5955615043640137"}
{"logic": "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( chinese ) )", "text": "How many continents speak Chinese?", "remark": "positive", "label": "1", "score": "0.4605858623981476"}
{"logic": "( the average of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the average weight for each pet type.", "remark": "positive", "label": "1", "score": "0.568956732749939"}
{"logic": "( distinct ( semester id of management ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of management ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))", "text": "Find the semester when both Master students and Bachelor students got enrolled in.", "remark": "positive", "label": "1", "score": "0.6378742456436157"}
{"logic": "( the number of ( all items ) ) that belongs to ( countries )", "text": "How many countries are listed?", "remark": "positive", "label": "1", "score": "0.49453866481781006"}
{"logic": "( zip postcode ) that belongs to ( addresses ) , that have ( ( city ) equal to ( 'port chelsea' ) )", "text": "What is the zip code for Port Chelsea?", "remark": "positive", "label": "1", "score": "0.4473602771759033"}
{"logic": "( transcript date ) , ( other details ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in ascending order ) , limited to the top ( 1 )", "text": "What is the earliest date of a transcript release, and what details can you tell me?", "remark": "positive", "label": "1", "score": "0.42356622219085693"}
{"logic": "( template type code ) , ( template type description ) that belongs to ( ref template types )", "text": "Show all template type codes and descriptions.", "remark": "positive", "label": "1", "score": "0.5958359241485596"}
{"logic": "( name of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , grouped by ( singer id of highschooler )", "text": "What are the names of the singers and number of distinct concerts for each person?", "remark": "logic", "label": "0", "score": "0.40417158603668213"}
{"logic": "( the average of ( ranking ) ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , grouped by ( first name of department )", "text": "What are the first names of all players, and their average rankings?", "remark": "positive", "label": "1", "score": "0.40535932779312134"}
{"logic": "( the average of ( weight ) ) , ( year ) that belongs to ( cars data ) , grouped by ( year )", "text": "What is the average weight and year for each year?", "remark": "positive", "label": "1", "score": "0.3818210959434509"}
{"logic": "( the number of ( all items ) ) that belongs to ( votes ) , that have ( ( ( state ) equal to ( 'ny' ) ) or ( ( state ) equal to ( 'ca' ) ) )", "text": "What are the number of votes from state 'NY' or 'CA'?", "remark": "positive", "label": "1", "score": "0.46370643377304077"}
{"logic": "( accelerate of likes ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( make of highschooler ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "What is the production year of the car make amc hornet sportabout (sw)?", "remark": "value col", "label": "0", "score": "0.45504799485206604"}
{"logic": "( document id ) , ( document name ) , ( document description ) that belongs to ( documents )", "text": "List document IDs, document names, and document descriptions for all documents.", "remark": "positive", "label": "1", "score": "0.59332674741745"}
{"logic": "( name ) , ( birth date ) that belongs to ( people ) , ordered by ( ( name ) in ascending order )", "text": "What are the names and birth dates of people, ordered by their names in alphabetical order?", "remark": "positive", "label": "1", "score": "0.44124042987823486"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order ) , limited to the top ( 1 )", "text": "List the name of the conductor with the most years of work.", "remark": "positive", "label": "1", "score": "0.63678377866745"}
{"logic": "( distinct ( name of management ) ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( countrycode of management ) equal to ( code of department ) ) ) ) , that have ( ( ( continent of department ) equal to ( 'europe' ) ) and ( ( t1.name ) not in ( ( name of head ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of head ) equal to ( countrycode of trip ) ) ) ) , that have ( ( ( isofficial of trip ) equal to ( 't' ) ) and ( ( language of trip ) equal to ( 'english' ) ) ) ) ) )", "text": "Which cities are in European countries where English is not the official language?", "remark": "positive", "label": "1", "score": "0.4417068362236023"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )", "text": "find the package option of the tv channel that have cartoon directed by Ben Jones.", "remark": "logic", "label": "0", "score": "0.6799448728561401"}
{"logic": "( professional id of department ) , ( cell number of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Find the id and cell phone of the professionals who operate two or more types of treatments.", "remark": "positive", "label": "1", "score": "0.6543585658073425"}
{"logic": "( name of catalogs ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of catalogs ) equal to ( employee id of catalog structure ) ) ) ) , grouped by ( employee id of catalog structure ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "find the name of employee who was awarded the most times in the evaluation.", "remark": "positive", "label": "1", "score": "0.6381763815879822"}
{"logic": "( name ) , ( tonnage ) that belongs to ( ship ) , ordered by ( ( name ) in descending order )", "text": "List the name and tonnage ordered by in descending alphaetical order for the names.", "remark": "positive", "label": "1", "score": "0.6244433522224426"}
{"logic": "( series name of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( title of management ) equal to ( the rise of the blue beetle! ) )", "text": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?", "remark": "positive", "label": "1", "score": "0.4926939308643341"}
{"logic": "( the number of ( all items ) ) that belongs to ( airports )", "text": "How many airports do we have?", "remark": "positive", "label": "1", "score": "0.5036306977272034"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( french ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ))", "text": "What are the names of nations where English or French are official languages?", "remark": "logic", "label": "0", "score": "0.4012529253959656"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( ( city of highschooler ) equal to ( aberdeen ) ) or ( ( city of highschooler ) equal to ( abilene ) ) )", "text": "How many flights land in both Aberdeen and Abilene?", "remark": "logic", "label": "0", "score": "0.48065802454948425"}
{"logic": "( name ) , ( surfacearea ) , ( indepyear ) that belongs to ( country ) , ordered by ( ( population ) ) , limited to the top ( 1 )", "text": "Give the name, year of independence, and surface area of the country that has the lowest population.", "remark": "positive", "label": "1", "score": "0.6019439697265625"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , that have ( ( the number of ( all items ) ) greater than ( 50 ) )", "text": "What are the codes of countries with more than 40 players?", "remark": "value int", "label": "0", "score": "0.38279905915260315"}
{"logic": "( the sum of ( ranking points ) ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , grouped by ( first name of department )", "text": "What are the first names of all players, and their total ranking points?", "remark": "positive", "label": "1", "score": "0.4030948281288147"}
{"logic": "( countryname of management ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of department ) equal to ( countryid of management ) ) ) ) , grouped by ( country of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which of the countries has the most car makers? List the country name.", "remark": "positive", "label": "1", "score": "0.6008378863334656"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "Give the flight numbers of flights leaving from APG.", "remark": "positive", "label": "1", "score": "0.6464276909828186"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "How many dogs have gone through any treatment?", "remark": "logic", "label": "0", "score": "0.44630035758018494"}
{"logic": "( the number of ( all items ) ) that belongs to ( highschooler )", "text": "How many unique high schoolers are there?", "remark": "logic", "label": "0", "score": "0.4231640696525574"}
{"logic": "( grade ) that belongs to ( highschooler )", "text": "Show all the grades of the high schoolers.", "remark": "positive", "label": "1", "score": "0.629133403301239"}
{"logic": "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity for the stadium with the highest average attendance?", "remark": "positive", "label": "1", "score": "0.4145648181438446"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( likes ) , grouped by ( student id )", "text": "How many likes correspond to each student id?", "remark": "positive", "label": "1", "score": "0.42241033911705017"}
{"logic": "( final table made ) , ( best finish ) that belongs to ( poker player )", "text": "What are the final tables made and best finishes for all poker players?", "remark": "positive", "label": "1", "score": "0.4193936586380005"}
{"logic": "all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial ) equal to ( t ) ) ) and all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( dutch ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "What are the countries where either French or Dutch is the official language?", "remark": "value str", "label": "0", "score": "0.3834613859653473"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of likes ) equal to ( uid of highschooler ) ) ) ) , that have ( ( airline of highschooler ) equal to ( jetblue airways ) )", "text": "What are the flights does airline 'JetBlue Airways' have?", "remark": "value col", "label": "0", "score": "0.4538341462612152"}
{"logic": "( pettype ) , ( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "What type of pet is the youngest animal, and how much does it weigh?", "remark": "positive", "label": "1", "score": "0.42687326669692993"}
{"logic": "( document id of department ) , ( document name of management ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , grouped by ( document id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the document id and name with greatest number of paragraphs?", "remark": "positive", "label": "1", "score": "0.42296332120895386"}
{"logic": "( section description ) that belongs to ( sections ) , that have ( ( section name ) equal to ( 'h' ) )", "text": "Describe the section h.", "remark": "positive", "label": "1", "score": "0.5371127128601074"}
{"logic": "( distinct ( maker of department ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) , and ( ( car names ) satisfied that ( ( model of management ) equal to ( model of head ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of head ) equal to ( id of trip ) ) ) ) , that have ( ( year of trip ) equal to ( '1970' ) )", "text": "Find the name of the makers that produced some cars in the year of 1970?", "remark": "positive", "label": "1", "score": "0.6127561330795288"}
{"logic": "( airportcode ) , ( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( anthony ) )", "text": "Give the airport code and airport name corresonding to the city Anthony.", "remark": "positive", "label": "1", "score": "0.6131538152694702"}
{"logic": "( the number of ( distinct ( dog id ) ) ) that belongs to ( treatments )", "text": "How many dogs not went through any treatments?", "remark": "logic", "label": "0", "score": "0.41180703043937683"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "How many airlines are from USA?", "remark": "positive", "label": "1", "score": "0.4777182340621948"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( shop_id ) not in ( ( shop id ) that belongs to ( hiring ) ) )", "text": "Which shops run with no employees? Find the shop names", "remark": "positive", "label": "1", "score": "0.506884753704071"}
{"logic": "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )", "text": "What are the names of the teachers ordered by ascending age?", "remark": "positive", "label": "1", "score": "0.4146968424320221"}
{"logic": "( country ) that belongs to ( tv channel ), and except that ( ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( written by of highschooler ) equal to ( 'todd casey' ) ))", "text": "which countries' tv channels are  playing some cartoon written by Todd Casey?", "remark": "logic", "label": "0", "score": "0.48896509408950806"}
{"logic": "( the number of ( all items ) ) that belongs to ( matches )", "text": "Count the number of matches.", "remark": "positive", "label": "1", "score": "0.5944479703903198"}
{"logic": "( name ) , ( result ) , ( bulgarian commander ) that belongs to ( battle ), and except that ( ( name of likes ) , ( result of likes ) , ( bulgarian commander of likes ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of likes ) equal to ( lost in battle of highschooler ) ) ) ) , that have ( ( location of highschooler ) equal to ( 'english channel' ) ))", "text": "Show names, and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "remark": "value col", "label": "0", "score": "0.6337560415267944"}
{"logic": "( note ) that belongs to ( death ) , that have ( ( note ) like ( '%east%' ) )", "text": "What are the notes of the death events which has substring 'South'?", "remark": "value str", "label": "0", "score": "0.4249199330806732"}
{"logic": "( name ) that belongs to ( stadium ) , that have ( ( stadium_id ) not in ( ( stadium id ) that belongs to ( concert ) ) )", "text": "Show the stadium names without any concert.", "remark": "positive", "label": "1", "score": "0.6018977761268616"}
{"logic": "( the number of ( language of management ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of department ) equal to ( aruba ) )", "text": "What is the total number of languages used in Aruba?", "remark": "positive", "label": "1", "score": "0.40716981887817383"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( horsepower ) greater than ( 150 ) )", "text": "What is the number of the cars with horsepower more than 150?", "remark": "positive", "label": "1", "score": "0.3938872814178467"}
{"logic": "( title ) that belongs to ( cartoon ) , ordered by ( ( title ) )", "text": "List the title of all cartoons in alphabetical order.", "remark": "positive", "label": "1", "score": "0.6234802603721619"}
{"logic": "( name of likes ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of likes ) equal to ( conductor id of highschooler ) ) ) ) , grouped by ( conductor id of highschooler ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the names of conductors that have conducted more than two orchestras.", "remark": "value int", "label": "0", "score": "0.5940350890159607"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) equal to ( ako ) )", "text": "What is the airport name for airport 'APG\"'?", "remark": "value str", "label": "0", "score": "0.4153672754764557"}
{"logic": "( the maximum of ( area code ) ) , ( the minimum of ( area code ) ) that belongs to ( area code state )", "text": "What are the maximum and minimum values of area codes?", "remark": "positive", "label": "1", "score": "0.3679940104484558"}
{"logic": "( address id of department ) , ( line 1 of department ) , ( line 2 of department ) that belongs to ( ( addresses ) , and ( ( students ) satisfied that ( ( address id of department ) equal to ( current address id of management ) ) ) ) , grouped by ( address id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which address holds the most number of students currently? List the address id and all lines.", "remark": "positive", "label": "1", "score": "0.6077032089233398"}
{"logic": "( name ) that belongs to ( employee ) , ordered by ( ( age ) )", "text": "List the names of employees and sort in ascending order of age.", "remark": "positive", "label": "1", "score": "0.6250115036964417"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "How many different winners both participated in the WTA Championships and were left handed?", "remark": "positive", "label": "1", "score": "0.44635555148124695"}
{"logic": "( episode ) that belongs to ( tv series ) , ordered by ( ( rating ) )", "text": "What are all of the episodes not ordered by ratings?", "remark": "logic", "label": "0", "score": "0.4330843687057495"}
{"logic": "( horsepower of department ) that belongs to ( ( cars data ) ) , ordered by ( ( accelerate of department ) in descending order ) , limited to the top ( 1 )", "text": "What is the horsepower of the car with the greatest accelerate?", "remark": "positive", "label": "1", "score": "0.41583922505378723"}
{"logic": "( address id of department ) , ( line 1 of department ) , ( line 2 of department ) that belongs to ( ( addresses ) , and ( ( students ) satisfied that ( ( address id of department ) equal to ( current address id of management ) ) ) ) , grouped by ( address id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the id, line 1, and line 2 of the address with the most students?", "remark": "positive", "label": "1", "score": "0.4215935170650482"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )", "text": "What are the names of conductors, sorted descending by the number of years they have worked?", "remark": "positive", "label": "1", "score": "0.4157901704311371"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , grouped by ( conductor id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Show the name of the conductor that has conducted the most number of orchestras.", "remark": "positive", "label": "1", "score": "0.623742938041687"}
{"logic": "( the number of ( distinct ( pettype ) ) ) that belongs to ( pets )", "text": "How many different types of pet are there?", "remark": "positive", "label": "1", "score": "0.4075683653354645"}
{"logic": "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the language that is not spoken in the most countries.", "remark": "logic", "label": "0", "score": "0.586338460445404"}
{"logic": "( cost of treatment ) that belongs to ( treatments ) , ordered by ( ( date of treatment ) in descending order ) , limited to the top ( 1 )", "text": "Show me the cost of the least recently performed treatment.", "remark": "logic", "label": "0", "score": "0.6001893877983093"}
{"logic": "( the number of ( all items ) ) , ( year ) that belongs to ( matches ) , grouped by ( year )", "text": "How many matches were played in each year?", "remark": "positive", "label": "1", "score": "0.4352080523967743"}
{"logic": "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "How much does the youngest dog weigh?", "remark": "positive", "label": "1", "score": "0.4477469325065613"}
{"logic": "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )", "text": "What is the first transcript release date?", "remark": "logic", "label": "0", "score": "0.413569837808609"}
{"logic": "( the average of ( edispl of management ) ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , that have ( ( model of department ) equal to ( 'volvo' ) )", "text": "What is the average edispl for all volvos?", "remark": "positive", "label": "1", "score": "0.37739479541778564"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is name of the country that speaks the largest number of languages?", "remark": "positive", "label": "1", "score": "0.43192628026008606"}
{"logic": "( first name ) , ( birth date ) that belongs to ( players ) , that have ( ( country code ) equal to ( 'usa' ) )", "text": "What are the first names and birth dates of players from the USA?", "remark": "positive", "label": "1", "score": "0.40089187026023865"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights )", "text": "Return the number of flights.", "remark": "positive", "label": "1", "score": "0.5945069193840027"}
{"logic": "( student id of department ) , ( first name of department ) , ( middle name of department ) , ( last name of department ) , ( the number of ( all items ) ) , ( student id of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?", "remark": "positive", "label": "1", "score": "0.43344640731811523"}
{"logic": "( country ) that belongs to ( singer ) , that have ( ( age ) greater than ( 40 ) ), and intersect with ( ( country ) that belongs to ( singer ) , that have ( ( age ) less than ( 30 ) ))", "text": "Show countries where a singer below age 40 and a singer above 30 are from.", "remark": "logic", "label": "0", "score": "0.5935540795326233"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( apg ) )", "text": "What are flight numbers of flights arriving at Airport \"APG\"?", "remark": "positive", "label": "1", "score": "0.4379703104496002"}
{"logic": "( manager name ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order ) , limited to the top ( 1 )", "text": "What are the manager name and district of the shop that sells the largest number of products?", "remark": "positive", "label": "1", "score": "0.4395432472229004"}
{"logic": "( name ) that belongs to ( employee ) , that have ( ( employee_id ) not in ( ( employee id ) that belongs to ( evaluation ) ) )", "text": "Find the names of employees who never won any award in the evaluation.", "remark": "positive", "label": "1", "score": "0.6100682616233826"}
{"logic": "( the number of ( all items ) ) that belongs to ( courses )", "text": "How many courses are there?", "remark": "positive", "label": "1", "score": "0.4920178949832916"}
{"logic": "( contid of department ) , ( continent of department ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of department ) equal to ( continent of management ) ) ) ) , grouped by ( contid of department )", "text": "For each continent, list its id, name, and how many countries it has?", "remark": "positive", "label": "1", "score": "0.5852614641189575"}
{"logic": "( the average of ( loser age ) ) , ( the average of ( winner age ) ) that belongs to ( matches )", "text": "What are the maximum ages of losers and winners across matches?", "remark": "logic", "label": "0", "score": "0.38207677006721497"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , ordered by ( ( mpg of management ) in descending order ) , limited to the top ( 1 )", "text": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.", "remark": "positive", "label": "1", "score": "0.5408463478088379"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( singer id of management )", "text": "List singer names and number of concerts for each singer.", "remark": "positive", "label": "1", "score": "0.5600788593292236"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of likes ) equal to ( document id of highschooler ) ) ) ) , that have ( ( document name of highschooler ) equal to ( 'summer show' ) )", "text": "Count the number of paragraphs in the document not named 'Summer Show'.", "remark": "logic", "label": "0", "score": "0.6299953460693359"}
{"logic": "( song name ) , ( song release year ) that belongs to ( singer ) , ordered by ( ( age ) ) , limited to the top ( 1 )", "text": "Show the name and the release year of the song by the youngest singer.", "remark": "positive", "label": "1", "score": "0.5783715844154358"}
{"logic": "( template id of highschooler ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of likes ) equal to ( template type code of highschooler ) ) ) ) , that have ( ( template type description of likes ) equal to ( presentation ) )", "text": "What are the template ids without template type description \"Presentation\".", "remark": "logic", "label": "0", "score": "0.4193952977657318"}
{"logic": "( the maximum of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "List the maximum weight and type for each type of pet.", "remark": "positive", "label": "1", "score": "0.577856183052063"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs ) , that have ( ( dog_id ) in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "Find the average age of the dogs who went through treatments.", "remark": "positive", "label": "1", "score": "0.5928455591201782"}
{"logic": "( the sum of ( population ) ) , ( the average of ( lifeexpectancy ) ) , ( continent ) that belongs to ( country ) , grouped by ( continent ) , that have ( ( the average of ( lifeexpectancy ) ) less than ( 72 ) )", "text": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?", "remark": "positive", "label": "1", "score": "0.5404312610626221"}
{"logic": "( the maximum of ( age ) ) that belongs to ( dogs )", "text": "What is the age of the oldest dog?", "remark": "positive", "label": "1", "score": "0.41602617502212524"}
{"logic": "( template type code of department ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( document name of management ) equal to ( data base ) )", "text": "What is the template type code of the template used by document with the name \"Data base\"?", "remark": "positive", "label": "1", "score": "0.4558779299259186"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , grouped by ( conductor id of management ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the names of conductors that have conducted more than one orchestras.", "remark": "positive", "label": "1", "score": "0.6099627614021301"}
{"logic": "( name of department ) , ( date of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) ) , that have ( ( name of management ) equal to ( 'lettice' ) ), and intersect with ( ( name of department ) , ( date of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) ) , that have ( ( name of management ) equal to ( 'hms atalanta' ) ))", "text": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'", "remark": "positive", "label": "1", "score": "0.6643581390380859"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2013 ) ), and intersect with ( ( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2016 ) ))", "text": "List the names of all winners who played in both 2013 and 2016.", "remark": "positive", "label": "1", "score": "0.6524150371551514"}
{"logic": "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the grade that has the greatest number of high schoolers.", "remark": "positive", "label": "1", "score": "0.5926126837730408"}
{"logic": "( airportcode of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of department ) equal to ( destairport of management ) ) or ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) ) , grouped by ( airportcode of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the code of airport that has the highest number of flights?", "remark": "positive", "label": "1", "score": "0.43722593784332275"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( europe ) ) and ( ( population ) equal to ( 80000 ) ) )", "text": "What are the names of the countries that are in the continent of Europe and have a population of 80000?", "remark": "positive", "label": "1", "score": "0.3967406451702118"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( europe ) ) and ( ( population ) equal to ( 80000 ) ) )", "text": "Give the names of countries that are in Europe and have a population equal to 80000.", "remark": "positive", "label": "1", "score": "0.5855567455291748"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date first registered ) in ascending order ) , limited to the top ( 1 )", "text": "What is the first name of the first student to register?", "remark": "value col", "label": "0", "score": "0.4415964186191559"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( ( age ) equal to ( 32 ) ) or ( ( age ) equal to ( 33 ) ) )", "text": "What are the names of the teachers who are aged either 32 or 33?", "remark": "positive", "label": "1", "score": "0.4308697283267975"}
{"logic": "( distinct ( first name of department ) ) , ( middle name of department ) , ( last name of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of management ) equal to ( degree program id of head ) ) ) ) , that have ( ( degree summary name of head ) equal to ( 'bachelor' ) )", "text": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.", "remark": "positive", "label": "1", "score": "0.5750201344490051"}
{"logic": "( stuid ) that belongs to ( student ), and except that ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ))", "text": "Find the id of students who do not have a cat pet.", "remark": "positive", "label": "1", "score": "0.622061014175415"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )", "text": "What are the full names of all left handed players, in order of birth date?", "remark": "positive", "label": "1", "score": "0.42502379417419434"}
{"logic": "( document id of department ) , ( document name of management ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , grouped by ( document id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the id and name of the document with the most paragraphs.", "remark": "positive", "label": "1", "score": "0.6384419798851013"}
{"logic": "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of department ) , ( last name of department ) , ( cell number of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.", "remark": "positive", "label": "1", "score": "0.6305080056190491"}
{"logic": "( property type description of management ) that belongs to ( ( properties ) , and ( ( ref property types ) satisfied that ( ( property type code of department ) equal to ( property type code of management ) ) ) ) , grouped by ( property type code of department )", "text": "Show the property type descriptions of properties belonging to that code.", "remark": "positive", "label": "1", "score": "0.6676923632621765"}
{"logic": "( email address ) that belongs to ( professionals ) , that have ( ( ( state ) equal to ( 'hawaii' ) ) or ( ( state ) equal to ( 'wisconsin' ) ) )", "text": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?", "remark": "positive", "label": "1", "score": "0.48962196707725525"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , that have ( ( age of department ) greater than ( 20 ) )", "text": "Find number of pets owned by students who are older than 20.", "remark": "positive", "label": "1", "score": "0.5988839864730835"}
{"logic": "( the number of ( all items ) ) that belongs to ( conductor )", "text": "Count the number of conductors.", "remark": "positive", "label": "1", "score": "0.6055888533592224"}
{"logic": "( the number of ( all items ) ) that belongs to ( contestants ) , that have ( ( contestant_number ) not in ( ( contestant number ) that belongs to ( votes ) ) )", "text": "How many contestants did not get voted?", "remark": "positive", "label": "1", "score": "0.4333994686603546"}
{"logic": "( name ) , ( location ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order )", "text": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.", "remark": "positive", "label": "1", "score": "0.6433133482933044"}
{"logic": "( citizenship ) that belongs to ( singer ) , grouped by ( citizenship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the msot common singer citizenship?", "remark": "positive", "label": "1", "score": "0.34158235788345337"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the high schooler who has the greatest number of friends?", "remark": "positive", "label": "1", "score": "0.4419729709625244"}
{"logic": "( paragraph text of department ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( customer reviews ) )", "text": "What are the paragraph texts for the document with the name 'Customer reviews'?", "remark": "positive", "label": "1", "score": "0.48964014649391174"}
{"logic": "( the number of ( language of management ) ) , ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( name of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.", "remark": "positive", "label": "1", "score": "0.6247581243515015"}
{"logic": "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )", "text": "Return the version numbers and template type codes of templates with a version number greater than 5.", "remark": "positive", "label": "1", "score": "0.5899741649627686"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial of management ) equal to ( t ) ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( french ) ) and ( ( isofficial of management ) equal to ( t ) ) ))", "text": "Give the names of countries with English and French as official languages.", "remark": "positive", "label": "1", "score": "0.5718469619750977"}
{"logic": "( date arrived ) , ( date departed ) that belongs to ( dogs )", "text": "What are the arriving date and the departing date of all the dogs?", "remark": "positive", "label": "1", "score": "0.4240700602531433"}
{"logic": "( the number of ( all items ) ) that belongs to ( players )", "text": "Find the total number of players.", "remark": "positive", "label": "1", "score": "0.5897469520568848"}
{"logic": "( name of department ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( name of department ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the names of singers that have more than one song.", "remark": "positive", "label": "1", "score": "0.5903785824775696"}
{"logic": "( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) less than ( 1945 ) ), and intersect with ( ( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) greater than ( 1955 ) ))", "text": "Show the citizenship shared by singers with birth year before 1845 and after 1965.", "remark": "value int", "label": "0", "score": "0.6175333857536316"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the country with the fewest number of TV Channels and how many does it have?", "remark": "logic", "label": "0", "score": "0.4614558219909668"}
{"logic": "( the average of ( ranking ) ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , grouped by ( first name of department )", "text": "Find the average ranking for each player and their first name.", "remark": "positive", "label": "1", "score": "0.5959257483482361"}
{"logic": "( the sum of ( population ) ) that belongs to ( city ) , that have ( ( district ) equal to ( gelderland ) )", "text": "How many people live in Gelderland district?", "remark": "positive", "label": "1", "score": "0.45772653818130493"}
{"logic": "( song name ) , ( song release year ) that belongs to ( singer ) , ordered by ( ( age ) ) , limited to the top ( 1 )", "text": "Show the name of the song by the youngest singer.", "remark": "value col", "label": "0", "score": "0.5763998031616211"}
{"logic": "( feature type name of highschooler ) that belongs to ( ( other available features ) , and ( ( ref feature types ) satisfied that ( ( feature type code of likes ) equal to ( feature type code of highschooler ) ) ) ) , that have ( ( feature name of likes ) equal to ( aircon ) )", "text": "What is the feature type code of feature AirCon?", "remark": "value col", "label": "0", "score": "0.4629737138748169"}
{"logic": "( fname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ), and intersect with ( ( fname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'dog' ) ))", "text": "What are the students' first names who have both cats and dogs as pets?", "remark": "positive", "label": "1", "score": "0.44047310948371887"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "Show the names of high schoolers who have at least 3 friends.", "remark": "positive", "label": "1", "score": "0.6174764037132263"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) not in ( ( sourceairport ) that belongs to ( flights ) and ( destairport ) that belongs to ( flights ) ) )", "text": "Find the name of airports which do not have any flight in and out.", "remark": "positive", "label": "1", "score": "0.6357525587081909"}
{"logic": "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( dogs ) )", "text": "Count the number of dogs of an age above the average.", "remark": "logic", "label": "0", "score": "0.5936409831047058"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , grouped by ( conductor id of management ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are the names of conductors who have conducted at more than one orchestra?", "remark": "positive", "label": "1", "score": "0.39228367805480957"}
{"logic": "( the number of ( distinct ( loser name ) ) ) that belongs to ( matches )", "text": "Find the number of distinct name of losers.", "remark": "positive", "label": "1", "score": "0.5648415684700012"}
{"logic": "( name of area code state ) , ( course of highschooler ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of likes ) equal to ( teacher id of area code state ) ) ) )", "text": "What is the id of each teacher and what course they teach?", "remark": "value col", "label": "0", "score": "0.4412928521633148"}
{"logic": "( citizenship ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "For each citizenship, how many singers are from that country?", "remark": "positive", "label": "1", "score": "0.5134340524673462"}
{"logic": "( the average of ( edispl of highschooler ) ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , that have ( ( model of likes ) equal to ( 'volvo' ) )", "text": "What is the minimum edispl for all volvos?", "remark": "logic", "label": "0", "score": "0.38178762793540955"}
{"logic": "( template id ) , ( version number ) , ( template type code ) that belongs to ( templates )", "text": "Show template ids, version numbers, and template type codes for all templates.", "remark": "positive", "label": "1", "score": "0.5856409072875977"}
{"logic": "( owner id of likes ) , ( first name of highschooler ) , ( last name of highschooler ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the owner id, first name and last name of the owner who has the fewest dogs.", "remark": "logic", "label": "0", "score": "0.6340116262435913"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "Find all airlines that have at least 10 flights.", "remark": "positive", "label": "1", "score": "0.6216234564781189"}
{"logic": "( the number of ( distinct ( location ) ) ) that belongs to ( shop )", "text": "How many different store locations are there?", "remark": "positive", "label": "1", "score": "0.43708130717277527"}
{"logic": "( the number of ( all items ) ) , ( country code ) that belongs to ( players ) , grouped by ( country code )", "text": "How many players are from each country?", "remark": "positive", "label": "1", "score": "0.45151370763778687"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "find the name of the country where has the greatest number of players.", "remark": "value col", "label": "0", "score": "0.5945110321044922"}
{"logic": "( document id ) , ( the number of ( all items ) ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( document id ) )", "text": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id in descending order.", "remark": "logic", "label": "0", "score": "0.6444733142852783"}
{"logic": "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))", "text": "Which states have neither owners nor professionals living there?", "remark": "logic", "label": "0", "score": "0.41109421849250793"}
{"logic": "( series name of department ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( episode of management ) equal to ( a love of a lifetime ) )", "text": "What is the name of the series that has the episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.46669909358024597"}
{"logic": "( mpg ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) ) , ordered by ( ( mpg ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?", "remark": "positive", "label": "1", "score": "0.43355807662010193"}
{"logic": "( hometown ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )", "text": "What is the hometown of the oldest teacher?", "remark": "logic", "label": "0", "score": "0.45090195536613464"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial of management ) equal to ( t ) ) ) ) )", "text": "What is average life expectancy in the countries where English is not the official language?", "remark": "positive", "label": "1", "score": "0.40338408946990967"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of management ) ) ) ) , grouped by ( name of management )", "text": "Show names of teachers and the number of courses they teach.", "remark": "positive", "label": "1", "score": "0.6273595690727234"}
{"logic": "( name of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , grouped by ( singer id of highschooler )", "text": "List singer ages and number of concerts for each singer.", "remark": "value col", "label": "0", "score": "0.556148886680603"}
{"logic": "( record company ) that belongs to ( orchestra ) , ordered by ( ( year of founded ) in descending order )", "text": "Return the record companies of orchestras, sorted ascending by the years in which they were founded.", "remark": "logic", "label": "0", "score": "0.6142967343330383"}
{"logic": "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of likes ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) ) )", "text": "What is the highest grade of students who have some friends?", "remark": "logic", "label": "0", "score": "0.3935762345790863"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( region ) equal to ( central africa ) )", "text": "What is the average expected life expectancy for countries in the region of Central Africa?", "remark": "positive", "label": "1", "score": "0.4019680321216583"}
{"logic": "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )", "text": "What is the number of template type descriptions for template type code \"AD\".", "remark": "logic", "label": "0", "score": "0.4065576493740082"}
{"logic": "( template id ) , ( version number ) , ( template type code ) that belongs to ( templates )", "text": "What are the ids, version numbers, and type codes for each template?", "remark": "positive", "label": "1", "score": "0.3736063838005066"}
{"logic": "( distinct ( fname of department ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pettype of head ) equal to ( 'cat' ) ) or ( ( pettype of head ) equal to ( 'dog' ) ) )", "text": "What are the first names of every student who has a cat or dog as a pet?", "remark": "positive", "label": "1", "score": "0.4406748116016388"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( age ) in ascending order )", "text": "What are the names of conductors, ordered by age?", "remark": "positive", "label": "1", "score": "0.42450234293937683"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( english ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( french ) ))", "text": "Give the names of nations that speak both Spanish and French.", "remark": "value str", "label": "0", "score": "0.5905293226242065"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs ) , that have ( ( dog_id ) in ( ( dog id ) that belongs to ( treatments ) ) )", "text": "What is the average age of the dogs who have gone through any treatments?", "remark": "positive", "label": "1", "score": "0.4005598723888397"}
{"logic": "( episode of management ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( series name of department ) equal to ( sky radio ) )", "text": "What is the episode for the TV series named \"Sky Radio\"?", "remark": "positive", "label": "1", "score": "0.4773448407649994"}
{"logic": "( code ) that belongs to ( country ) , that have ( ( governmentform ) not equal to ( republic ) ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "Return the codes of countries that do not speak English and do not have Republics for governments.", "remark": "positive", "label": "1", "score": "0.5939432978630066"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )", "text": "What is the first, middle, and last name of the earliest school graduate?", "remark": "positive", "label": "1", "score": "0.4371475875377655"}
{"logic": "( name of head ) , ( course of management ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of head ) ) ) )", "text": "What is the name of each teacher and what course they teach?", "remark": "positive", "label": "1", "score": "0.44870978593826294"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "Return the number of flights departing from Aberdeen.", "remark": "positive", "label": "1", "score": "0.6323158144950867"}
{"logic": "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of likes ) , ( role code of likes ) , ( email address of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ))", "text": "Give me the id, role and email of the professionals who did not perform any treatment on cats.", "remark": "value str", "label": "0", "score": "0.6650006175041199"}
{"logic": "( countryname of management ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of department ) equal to ( countryid of management ) ) ) ) , grouped by ( country of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the country with the most car makers?", "remark": "positive", "label": "1", "score": "0.4160098731517792"}
{"logic": "( first name of department ) , ( name of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , that have ( ( state of department ) equal to ( 'virginia' ) )", "text": "Find the first names of owners living in Virginia and the names of dogs they own.", "remark": "positive", "label": "1", "score": "0.6708068251609802"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( continent of department ) equal to ( asia ) ) , grouped by ( language of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the language that is used by the largest number of Asian nations?", "remark": "positive", "label": "1", "score": "0.40692928433418274"}
{"logic": "( the number of ( all items ) ) that belongs to ( tv channel ) , that have ( ( language ) equal to ( english ) )", "text": "How many TV Channel using language English?", "remark": "positive", "label": "1", "score": "0.4790741801261902"}
{"logic": "( distinct ( model of department ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of management ) equal to ( id of head ) ) ) ) , that have ( ( year of head ) greater than ( 1980 ) )", "text": "Which distinct car models are the produced after 1980?", "remark": "positive", "label": "1", "score": "0.4253219664096832"}
{"logic": "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )", "text": "What is the average, minimum, and maximum age for all French singers?", "remark": "positive", "label": "1", "score": "0.35469722747802734"}
{"logic": "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )", "text": "What is the id and weight of every pet who is older than 10?", "remark": "value int", "label": "0", "score": "0.3964836597442627"}
{"logic": "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )", "text": "List the number of different series names and contents in the TV Channel table.", "remark": "positive", "label": "1", "score": "0.6375643610954285"}
{"logic": "( name ) , ( country ) , ( age ) that belongs to ( singer ) , ordered by ( ( age ) in descending order )", "text": "What are the names, countries, and ages for every singer in descending order of age?", "remark": "positive", "label": "1", "score": "0.4044432044029236"}
{"logic": "( money rank of management ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( height of department ) in descending order ) , limited to the top ( 1 )", "text": "What is the money rank of the tallest poker player?", "remark": "positive", "label": "1", "score": "0.450067400932312"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )", "text": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".", "remark": "positive", "label": "1", "score": "0.6899842619895935"}
{"logic": "( the average of ( age ) ) that belongs to ( visitor ) , that have ( ( level of membership ) less than or equal to ( 4 ) )", "text": "What is the average age of the visitors whose membership level is not higher than 4?", "remark": "positive", "label": "1", "score": "0.40506711602211"}
{"logic": "( first name of department ) , ( country code of department ) , ( birth date of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , ordered by ( ( winner rank points of management ) in descending order ) , limited to the top ( 1 )", "text": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.", "remark": "positive", "label": "1", "score": "0.6452381014823914"}
{"logic": "( the number of ( all items ) ) , ( year ) that belongs to ( matches ) , grouped by ( year )", "text": "Find the number of matches happened in each year.", "remark": "positive", "label": "1", "score": "0.6052159667015076"}
{"logic": "( owner id of likes ) , ( zip code of likes ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of highschooler ) equal to ( dog id of area code state ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the sum of ( cost of treatment of area code state ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner has paid the samllest amount of money in total for their dogs? Show the owner id and zip code.", "remark": "value col", "label": "0", "score": "0.6270249485969543"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of likes ) equal to ( id of highschooler ) ) ) , and ( ( countries ) satisfied that ( ( country of highschooler ) equal to ( countryid of area code state ) ) ) ) , that have ( ( countryname of area code state ) equal to ( 'usa' ) )", "text": "How many car models are produced in the China?", "remark": "value str", "label": "0", "score": "0.4587450325489044"}
{"logic": "( continent of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , grouped by ( continent of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which continent speaks the least languages?", "remark": "logic", "label": "0", "score": "0.43146684765815735"}
{"logic": "( the number of ( all items ) ) that belongs to ( concert ) , that have ( ( ( year ) equal to ( 2014 ) ) or ( ( year ) equal to ( 2015 ) ) )", "text": "How many concerts occurred in 2014 or 2015?", "remark": "positive", "label": "1", "score": "0.44013431668281555"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , that have ( ( earnings of management ) greater than ( 300000 ) )", "text": "What are the names of poker players whose earnings is higher than 300000?", "remark": "positive", "label": "1", "score": "0.4234224259853363"}
{"logic": "( cylinders of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( model of management ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of department ) in ascending order ) , limited to the top ( 1 )", "text": "For model volvo, how many cylinders does the car with the least accelerate have?", "remark": "positive", "label": "1", "score": "0.5317485928535461"}
{"logic": "( name ) that belongs to ( stadium ), and except that ( ( name of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2014 ) ))", "text": "What are the names of all stadiums that did not have a concert in 2014?", "remark": "positive", "label": "1", "score": "0.416721373796463"}
{"logic": "( continent of likes ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of likes ) equal to ( continent of highschooler ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of highschooler ) equal to ( country of area code state ) ) ) ) , grouped by ( continent of likes )", "text": "How many car makers are there in each continents? List the continent name.", "remark": "value col", "label": "0", "score": "0.5704715847969055"}
{"logic": "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ) ) )", "text": "Find the major and average age of students who have a cat pet.", "remark": "logic", "label": "0", "score": "0.6268780827522278"}
{"logic": "( semester name ) that belongs to ( semesters ) , that have ( ( semester_id ) not in ( ( ( semester id ) that belongs to ( student enrolment ) ) ) )", "text": "Which semesters do not have any student enrolled? List the semester name.", "remark": "positive", "label": "1", "score": "0.5694315433502197"}
{"logic": "( paragraph text of department ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( customer reviews ) )", "text": "Show all paragraph texts for the document \"Customer reviews\".", "remark": "positive", "label": "1", "score": "0.6748173236846924"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "What are flight numbers of flights arriving at City \"Aberdeen\"?", "remark": "positive", "label": "1", "score": "0.4493449032306671"}
{"logic": "( population ) , ( region ) that belongs to ( country ) , that have ( ( name ) equal to ( angola ) )", "text": "What region does Angola belong to and what is its population?", "remark": "positive", "label": "1", "score": "0.384368360042572"}
{"logic": "( title of management ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( series name of department ) equal to ( sky radio ) )", "text": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".", "remark": "positive", "label": "1", "score": "0.6896416544914246"}
{"logic": "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )", "text": "What is the minimum number of employees from each city?", "remark": "logic", "label": "0", "score": "0.41012948751449585"}
{"logic": "( template type code ) that belongs to ( ref template types ) , that have ( ( template type description ) equal to ( book ) )", "text": "Return the type code of the template type with the description \"Book\".", "remark": "positive", "label": "1", "score": "0.5991171002388"}
{"logic": "( name ) that belongs to ( stadium ) , that have ( ( stadium_id ) not in ( ( stadium id ) that belongs to ( concert ) ) )", "text": "What are the names of the stadiums without any concerts?", "remark": "positive", "label": "1", "score": "0.4175054430961609"}
{"logic": "( the number of ( distinct ( dog id ) ) ) that belongs to ( treatments )", "text": "How many dogs went through any treatments?", "remark": "positive", "label": "1", "score": "0.40973100066185"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , that have ( ( the number of ( all items ) ) greater than ( 50 ) )", "text": "Find the codes of countries that have more than 50 players.", "remark": "positive", "label": "1", "score": "0.5889549851417542"}
{"logic": "( the maximum of ( area code ) ) , ( the minimum of ( area code ) ) that belongs to ( area code state )", "text": "What are the maximum and average values of area codes?", "remark": "logic", "label": "0", "score": "0.3658392131328583"}
{"logic": "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the most common nationality of people?", "remark": "positive", "label": "1", "score": "0.3738994002342224"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ) ) )", "text": "What is average life expectancy in the countries where English is  the official language?", "remark": "logic", "label": "0", "score": "0.3998979926109314"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )", "text": "Show the name of singers whose birth year is neither 1948 nor 1949?", "remark": "logic", "label": "0", "score": "0.6059324741363525"}
{"logic": "( breed name of likes ) that belongs to ( ( breeds ) , and ( ( dogs ) satisfied that ( ( breed code of likes ) equal to ( breed code of highschooler ) ) ) ) , grouped by ( breed name of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which breed do the most cats have? Give me the breed name.", "remark": "value table", "label": "0", "score": "0.5620120167732239"}
{"logic": "( name of highschooler ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of likes ) equal to ( teacher id of highschooler ) ) ) ) , grouped by ( name of highschooler )", "text": "What are the names of the students and how many courses do they have?", "remark": "value col", "label": "0", "score": "0.4460901618003845"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "How many flights arriving in Aberdeen city?", "remark": "positive", "label": "1", "score": "0.4719182848930359"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( people_id ) not in ( ( people id ) that belongs to ( poker player ) ) )", "text": "What are the names of people who do not play poker?", "remark": "positive", "label": "1", "score": "0.4330585300922394"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( teacher_id ) not in ( ( teacher id ) that belongs to ( course arrange ) ) )", "text": "What are the names of the teachers whose courses have not been arranged?", "remark": "positive", "label": "1", "score": "0.41922903060913086"}
{"logic": "( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the names of students who have at least 2 likes.", "remark": "positive", "label": "1", "score": "0.5982050895690918"}
{"logic": "( distinct ( model of likes ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of likes ) equal to ( model of highschooler ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of highschooler ) equal to ( id of area code state ) ) ) , and ( ( car makers ) satisfied that ( ( maker of likes ) equal to ( id of car makers ) ) ) ) , that have ( ( ( weight of area code state ) less than ( 3500 ) ) and ( ( fullname of car makers ) not equal to ( 'ford motor company' ) ) )", "text": "Which models are lighter than 3600 but not built by the 'Ford Motor Company'?", "remark": "value int", "label": "0", "score": "0.4677685797214508"}
{"logic": "( the sum of ( population ) ) , ( the maximum of ( gnp ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "How many people live in Asia, and what is the largest GNP among them?", "remark": "positive", "label": "1", "score": "0.45912864804267883"}
{"logic": "( name ) , ( date ) that belongs to ( battle )", "text": "List the name and result of each battle.", "remark": "value col", "label": "0", "score": "0.628909707069397"}
{"logic": "( the maximum of ( created ) ) that belongs to ( votes ) , that have ( ( state ) equal to ( 'ca' ) )", "text": "What is last date created of votes from the state 'GA'?", "remark": "value str", "label": "0", "score": "0.4940435290336609"}
{"logic": "( line 1 ) , ( line 2 ) that belongs to ( addresses )", "text": "What is the first line for all addresses?", "remark": "value col", "label": "0", "score": "0.42980852723121643"}
{"logic": "( petid of highschooler ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) , that have ( ( lname of likes ) equal to ( 'smith' ) )", "text": "Find the id of the pet owned by student whose last name is not \u2018Smith\u2019.", "remark": "logic", "label": "0", "score": "0.646002471446991"}
{"logic": "( first name of department ) , ( middle name of department ) , ( last name of department ) , ( student id of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )", "text": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.", "remark": "positive", "label": "1", "score": "0.5908154249191284"}
{"logic": "( the number of ( all items ) ) that belongs to ( countries )", "text": "How many countries exist?", "remark": "positive", "label": "1", "score": "0.48083704710006714"}
{"logic": "( fname of department ) , ( age of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pettype of head ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ) ) ) )", "text": "Find the first name and age of students who have a dog but do not have a cat as a pet.", "remark": "positive", "label": "1", "score": "0.6220903992652893"}
{"logic": "( distinct ( fname of department ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pettype of head ) equal to ( 'cat' ) ) or ( ( pettype of head ) equal to ( 'dog' ) ) )", "text": "Find the first name of students who have cat or dog pet.", "remark": "positive", "label": "1", "score": "0.6464000940322876"}
{"logic": "( the number of ( all items ) ) , ( district ) that belongs to ( city ) , that have ( ( population ) greater than ( the average of ( population ) ) that belongs to ( city ) ) , grouped by ( district )", "text": "Find the number of cities in each district whose population is less than the average population of cities?", "remark": "logic", "label": "0", "score": "0.5473456978797913"}
{"logic": "( citizenship ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "Show different citizenship of singers and the number of singers of each citizenship.", "remark": "positive", "label": "1", "score": "0.6185757517814636"}
{"logic": "( first name ) , ( last name ) , ( email address ) that belongs to ( owners ) , that have ( ( state ) like ( '%north%' ) )", "text": "Return the first name, last name and email of the owners living in a state whose name contains the substring  'South'.", "remark": "value str", "label": "0", "score": "0.6084802746772766"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) )", "text": "What are the number of poker players?", "remark": "value col", "label": "0", "score": "0.3945039212703705"}
{"logic": "( the average of ( attendance ) ) that belongs to ( show )", "text": "What is the average attendance of shows?", "remark": "positive", "label": "1", "score": "0.4090012013912201"}
{"logic": "( grade ) , ( the number of ( all items ) ) that belongs to ( highschooler ) , grouped by ( grade )", "text": "Show the number of high schoolers for each grade.", "remark": "positive", "label": "1", "score": "0.5884308218955994"}
{"logic": "( name ) , ( surfacearea ) , ( indepyear ) that belongs to ( country ) , ordered by ( ( population ) ) , limited to the top ( 1 )", "text": "Give the name, year of independence, and surface area of the country that has the largest population.", "remark": "logic", "label": "0", "score": "0.6132480502128601"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( name of likes ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "How many official languages does aruba have?", "remark": "value str", "label": "0", "score": "0.4483236074447632"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "how many countries are in Asia?", "remark": "positive", "label": "1", "score": "0.4458814263343811"}
{"logic": "( continent of department ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of department ) equal to ( continent of management ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of management ) equal to ( country of head ) ) ) ) , grouped by ( continent of department )", "text": "How many car makers are there in each continents? List the continent name and the count.", "remark": "positive", "label": "1", "score": "0.5795565843582153"}
{"logic": "( distinct ( name of head ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) , and ( ( city ) satisfied that ( ( code of department ) equal to ( countrycode of head ) ) ) ) , that have ( ( ( isofficial of management ) equal to ( 't' ) ) and ( ( language of management ) equal to ( 'chinese' ) ) and ( ( continent of department ) equal to ( asia ) ) )", "text": "Whic`h unique cities are in  Asian countries where Chinese is the official language?", "remark": "positive", "label": "1", "score": "0.4696919918060303"}
{"logic": "( hometown ) , ( the number of ( all items ) ) that belongs to ( teacher ) , grouped by ( hometown )", "text": "For each hometown, how many teachers are there?", "remark": "positive", "label": "1", "score": "0.5393275618553162"}
{"logic": "( name of likes ) , ( the sum of ( sales of highschooler ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , grouped by ( name of likes )", "text": "For each singer name, what is the average sale for their songs?", "remark": "logic", "label": "0", "score": "0.46919751167297363"}
{"logic": "( department description ) that belongs to ( departments ) , that have ( ( department_name ) like ( '%computer%' ) )", "text": "What is the department description for the one whose name has the word computer?", "remark": "positive", "label": "1", "score": "0.4175591468811035"}
{"logic": "( song name ) that belongs to ( singer ) , that have ( ( age ) greater than ( the average of ( age ) ) that belongs to ( singer ) )", "text": "What are all the song names by singers who are older than average?", "remark": "positive", "label": "1", "score": "0.37372803688049316"}
{"logic": "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )", "text": "What is the template type descriptions for template type code \"AD\".", "remark": "positive", "label": "1", "score": "0.4057196080684662"}
{"logic": "( the maximum of ( final table made ) ) that belongs to ( poker player ) , that have ( ( earnings ) less than ( 200000 ) )", "text": "Return the maximum final tables made across all poker players who have earnings below 200000.", "remark": "positive", "label": "1", "score": "0.567317545413971"}
{"logic": "( the maximum of ( age ) ) that belongs to ( dogs )", "text": "Tell me the age of the oldest dog.", "remark": "positive", "label": "1", "score": "0.5549837350845337"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( number products ) greater than ( the average of ( number products ) ) that belongs to ( shop ) )", "text": "Find the names of stores whose number products is more than the average number of products.", "remark": "positive", "label": "1", "score": "0.595585823059082"}
{"logic": "( name of evaluation ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of employee ) equal to ( shop id of evaluation ) ) ) ) , grouped by ( shop id of employee ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the shop that is hiring the smallest number of employees?", "remark": "logic", "label": "0", "score": "0.446382999420166"}
{"logic": "( name of head ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) , and ( ( highschooler ) satisfied that ( ( friend id of department ) equal to ( id of head ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "Return the names of friends of the high school student Kyle.", "remark": "positive", "label": "1", "score": "0.6590566039085388"}
{"logic": "( hometown ) , ( the number of ( all items ) ) that belongs to ( teacher ) , grouped by ( hometown )", "text": "Show different hometown of teachers and the number of teachers from each hometown.", "remark": "positive", "label": "1", "score": "0.6138800978660583"}
{"logic": "( the number of ( language of management ) ) , ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( name of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?", "remark": "positive", "label": "1", "score": "0.42683035135269165"}
{"logic": "( the number of ( distinct ( template id ) ) ) that belongs to ( documents )", "text": "How many different templates do all document use?", "remark": "positive", "label": "1", "score": "0.422165185213089"}
{"logic": "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of department ) , ( last name of department ) , ( cell number of department ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) ) , grouped by ( professional id of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.", "remark": "positive", "label": "1", "score": "0.6346495747566223"}
{"logic": "( the number of ( all items ) ) , ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , grouped by ( stuid of department )", "text": "Find the number of pets for each student who has any pet and student id.", "remark": "positive", "label": "1", "score": "0.6108733415603638"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( ( city of highschooler ) equal to ( aberdeen ) ) or ( ( city of highschooler ) equal to ( abilene ) ) )", "text": "Find the number of flights landing in the city of Aberdeen and Abilene.", "remark": "logic", "label": "0", "score": "0.6543512940406799"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )", "text": "What is the Package Option of TV Channel without serial name \"Sky Radio\"?", "remark": "logic", "label": "0", "score": "0.4633426368236542"}
{"logic": "( the number of ( all items ) ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )", "text": "What is the total number of countries where Spanish is spoken by the smallest percentage of people?", "remark": "logic", "label": "0", "score": "0.37848028540611267"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "How many flights arrive at 'APG'?", "remark": "value col", "label": "0", "score": "0.48257094621658325"}
{"logic": "( distinct ( state ) ) , ( created ) that belongs to ( votes )", "text": "What are the distinct states and create time of all votes?", "remark": "positive", "label": "1", "score": "0.40733852982521057"}
{"logic": "( distinct ( course name of likes ) ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) )", "text": "What are all the course names of the courses which never have students enrolled in?", "remark": "logic", "label": "0", "score": "0.47109511494636536"}
{"logic": "( contestant number ) , ( contestant name ) that belongs to ( contestants ) , ordered by ( ( contestant name ) in descending order )", "text": "List the contestant numbers and names, ordered by contestant name descending.", "remark": "positive", "label": "1", "score": "0.6306859850883484"}
{"logic": "( name of management ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) , and ( ( concert ) satisfied that ( ( concert id of department ) equal to ( concert id of head ) ) ) ) , that have ( ( year of head ) equal to ( 2014 ) )", "text": "List all singer names in concerts in year 2014.", "remark": "positive", "label": "1", "score": "0.607181191444397"}
{"logic": "( orchestra ) that belongs to ( orchestra ) , that have ( ( orchestra_id ) not in ( ( orchestra id ) that belongs to ( performance ) ) )", "text": "What are the orchestras that do not have any performances?", "remark": "positive", "label": "1", "score": "0.39280441403388977"}
{"logic": "( name of highschooler ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the high schooler who has the lowest number of likes?", "remark": "logic", "label": "0", "score": "0.4377976655960083"}
{"logic": "( template id ) that belongs to ( templates ), and except that ( ( template id ) that belongs to ( documents ))", "text": "What are the ids for templates that are not used in any documents?", "remark": "positive", "label": "1", "score": "0.3996398448944092"}
{"logic": "( id ) that belongs to ( highschooler ), and except that ( ( student id ) that belongs to ( friend ))", "text": "Show ids of all students who have some friends.", "remark": "logic", "label": "0", "score": "0.598377525806427"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "Give the flight numbers of flights leaving from Aberdeen.", "remark": "positive", "label": "1", "score": "0.6681144833564758"}
{"logic": "( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , that have ( ( tourney name of management ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of department ) equal to ( winner id of management ) ) ) ) , that have ( ( tourney name of management ) equal to ( 'australian open' ) ))", "text": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?", "remark": "positive", "label": "1", "score": "0.43608033657073975"}
{"logic": "( course name of department ) , ( course id of department ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) ) , grouped by ( course id of department ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "text": "What are the names and ids of every course with less than 2 sections?", "remark": "positive", "label": "1", "score": "0.4166761636734009"}
{"logic": "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )", "text": "what is the name and nation of the singer who have a song without 'Hey' in its name?", "remark": "logic", "label": "0", "score": "0.41110163927078247"}
{"logic": "( the number of ( all items ) ) , ( directed by ) that belongs to ( cartoon ) , grouped by ( directed by )", "text": "Find the number of cartoons directed by each of the listed directors.", "remark": "positive", "label": "1", "score": "0.6030363440513611"}
{"logic": "( feature type name of management ) that belongs to ( ( other available features ) , and ( ( ref feature types ) satisfied that ( ( feature type code of department ) equal to ( feature type code of management ) ) ) ) , that have ( ( feature name of department ) equal to ( aircon ) )", "text": "What is the feature type name of feature AirCon?", "remark": "positive", "label": "1", "score": "0.4444388747215271"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( number products ) greater than ( the average of ( number products ) ) that belongs to ( shop ) )", "text": "Which shops' number products is below the average? Give me the shop names.", "remark": "logic", "label": "0", "score": "0.5715640783309937"}
{"logic": "( the average of ( attendance ) ) that belongs to ( show )", "text": "Return the average attendance across all shows.", "remark": "positive", "label": "1", "score": "0.5857513546943665"}
{"logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) ) )", "text": "What is the average age for all students who own two pets?", "remark": "logic", "label": "0", "score": "0.4402987062931061"}
{"logic": "( template type code ) , ( the number of ( all items ) ) that belongs to ( templates ) , grouped by ( template type code )", "text": "Show all template type codes and number of templates for each.", "remark": "positive", "label": "1", "score": "0.6150504350662231"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )", "text": "What are the names of the singers whose birth years are neither 1948 nor 1949?", "remark": "logic", "label": "0", "score": "0.42445436120033264"}
{"logic": "( citizenship ) that belongs to ( singer ) , grouped by ( citizenship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Please show the least common citizenship of singers.", "remark": "logic", "label": "0", "score": "0.5412557125091553"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( museum_id ) not in ( ( museum id ) that belongs to ( visit ) ) )", "text": "What is the name of the museum that had no visitor yet?", "remark": "positive", "label": "1", "score": "0.4578072726726532"}
{"logic": "( region ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of management ) equal to ( kabul ) )", "text": "What region is Kabul in?", "remark": "positive", "label": "1", "score": "0.46753811836242676"}
{"logic": "( contestant name ) that belongs to ( contestants ) , that have ( ( contestant_name ) like ( %al% ) )", "text": "Return the names the contestants whose names contain the substring 'Al'.", "remark": "positive", "label": "1", "score": "0.5681008696556091"}
{"logic": "( distinct ( model of department ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of management ) equal to ( id of head ) ) ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of trip ) ) ) ) , that have ( ( ( weight of head ) less than ( 3500 ) ) and ( ( fullname of trip ) not equal to ( 'ford motor company' ) ) )", "text": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?", "remark": "positive", "label": "1", "score": "0.38732942938804626"}
{"logic": "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )", "text": "What is the average miles per gallon of all the cards with 4 cylinders?", "remark": "positive", "label": "1", "score": "0.4134746789932251"}
{"logic": "( email address ) that belongs to ( professionals ) , that have ( ( ( state ) equal to ( 'hawaii' ) ) or ( ( state ) equal to ( 'wisconsin' ) ) )", "text": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.", "remark": "positive", "label": "1", "score": "0.6857020258903503"}
{"logic": "( museum id ) , ( name ) that belongs to ( museum ) , ordered by ( ( num of staff ) in descending order ) , limited to the top ( 1 )", "text": "Find the id and name of the museum that has the most staff members?", "remark": "positive", "label": "1", "score": "0.5557242631912231"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) )", "text": "Return the ids of all the poker players.", "remark": "value col", "label": "0", "score": "0.605535626411438"}
{"logic": "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )", "text": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "remark": "positive", "label": "1", "score": "0.6211073994636536"}
{"logic": "( distinct ( name of area code state ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) , and ( ( city ) satisfied that ( ( code of likes ) equal to ( countrycode of area code state ) ) ) ) , that have ( ( ( isofficial of highschooler ) equal to ( 't' ) ) and ( ( language of highschooler ) equal to ( 'chinese' ) ) and ( ( continent of likes ) equal to ( asia ) ) )", "text": "Return the different names of cities that are in Asia and for which Chinese is not the official language.", "remark": "logic", "label": "0", "score": "0.6727938652038574"}
{"logic": "( countryid of department ) , ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of department ) , ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) , and ( ( model list ) satisfied that ( ( id of management ) equal to ( maker of head ) ) ) ) , that have ( ( model of head ) equal to ( 'fiat' ) )", "text": "What are the ids and names of all countries that either have more than 3 car makers or produce fiats?", "remark": "positive", "label": "1", "score": "0.4140279293060303"}
{"logic": "( the number of ( all items ) ) that belongs to ( singer )", "text": "How many singers do we have?", "remark": "positive", "label": "1", "score": "0.47473010420799255"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "What are the ids of templates with template type code neither PP nor PPT?", "remark": "logic", "label": "0", "score": "0.39117395877838135"}
{"logic": "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of department ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) ) )", "text": "Find the minimum grade of students who have no friends.", "remark": "positive", "label": "1", "score": "0.6317017078399658"}
{"logic": "( series name of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( title of management ) equal to ( the rise of the blue beetle! ) )", "text": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.", "remark": "positive", "label": "1", "score": "0.6314139366149902"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , ordered by ( ( horsepower of management ) in ascending order ) , limited to the top ( 1 )", "text": "Which model of the car has the minimum horsepower?", "remark": "positive", "label": "1", "score": "0.4556412100791931"}
{"logic": "( name ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( level of membership ) in descending order )", "text": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "remark": "positive", "label": "1", "score": "0.6402636766433716"}
{"logic": "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )", "text": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?", "remark": "positive", "label": "1", "score": "0.3879317343235016"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "What is the average horsepower of the cars before 1980?", "remark": "positive", "label": "1", "score": "0.4234839975833893"}
{"logic": "( the average of ( injured ) ) that belongs to ( death )", "text": "What is the average number of injuries caused each time?", "remark": "positive", "label": "1", "score": "0.35655680298805237"}
{"logic": "( email address ) , ( cell number ) , ( home phone ) that belongs to ( professionals )", "text": "What are the email, cell phone and home phone of each professional?", "remark": "positive", "label": "1", "score": "0.4207945466041565"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( governmentform ) equal to ( republic ) ) )", "text": "What is the maximum life expectancy in African countries that are republics?", "remark": "logic", "label": "0", "score": "0.38653767108917236"}
{"logic": "( killed of department ) , ( injured of department ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of department ) equal to ( id of management ) ) ) ) , that have ( ( tonnage of management ) equal to ( 't' ) )", "text": "What are the death and injury situations caused by the ship with tonnage 't'?", "remark": "positive", "label": "1", "score": "0.4065609574317932"}
{"logic": "( fname of likes ) , ( age of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( ( pettype of area code state ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of likes ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( pettype of area code state ) equal to ( 'cat' ) ) ) ) )", "text": "What is the first name of every student who has a dog but have a cat?", "remark": "logic", "label": "0", "score": "0.4530271589756012"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )", "text": "What are the names of the singers whose birth years are either 1948 or 1949?", "remark": "positive", "label": "1", "score": "0.43438947200775146"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( europe ) ) and ( ( population ) equal to ( 80000 ) ) )", "text": "What are the names of the countries that are in the continent of Europe and have a population less than 80000?", "remark": "logic", "label": "0", "score": "0.39186668395996094"}
{"logic": "( citizenship ) , ( the maximum of ( net worth millions ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "Show different citizenships and the maximum net worth of singers of each citizenship.", "remark": "positive", "label": "1", "score": "0.5913581252098083"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) equal to ( ako ) )", "text": "What is the airport name for airport 'AKO'?", "remark": "positive", "label": "1", "score": "0.437400758266449"}
{"logic": "( the number of ( all items ) ) , ( fullname of highschooler ) , ( id of highschooler ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( id of highschooler )", "text": "How many car models are produced by each maker? List the maker full name.", "remark": "value col", "label": "0", "score": "0.5851532220840454"}
{"logic": "( professional id of likes ) , ( role code of likes ) , ( first name of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ) , grouped by ( professional id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the id, role, and first name of the professionals who have performed two or less treatments?", "remark": "logic", "label": "0", "score": "0.43439236283302307"}
{"logic": "( the number of ( all items ) ) , ( student course id ) that belongs to ( transcript contents ) , grouped by ( student course id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?", "remark": "positive", "label": "1", "score": "0.3943111300468445"}
{"logic": "( distinct ( year of department ) ) that belongs to ( ( cars data ) ) , that have ( ( ( weight of department ) greater than ( 3000 ) ) and ( ( weight of department ) less than ( 4000 ) ) )", "text": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?", "remark": "positive", "label": "1", "score": "0.40189406275749207"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date first registered ) in ascending order ) , limited to the top ( 1 )", "text": "Who is the first student to register? List the first name, middle name and last name.", "remark": "positive", "label": "1", "score": "0.6105407476425171"}
{"logic": "( makeid of management ) , ( make of management ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( ( horsepower of department ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of department ) less than or equal to ( 3 ) ) )", "text": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.", "remark": "positive", "label": "1", "score": "0.6199372410774231"}
{"logic": "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the nationalities that are shared by at least two people?", "remark": "positive", "label": "1", "score": "0.3782874643802643"}
{"logic": "( section description ) that belongs to ( sections ) , that have ( ( section name ) equal to ( 'h' ) )", "text": "What is the description for the section named h?", "remark": "positive", "label": "1", "score": "0.4350428283214569"}
{"logic": "( property type description of highschooler ) that belongs to ( ( properties ) , and ( ( ref property types ) satisfied that ( ( property type code of likes ) equal to ( property type code of highschooler ) ) ) ) , grouped by ( property type code of likes )", "text": "Show the property type descriptions of properties.", "remark": "logic", "label": "0", "score": "0.613275408744812"}
{"logic": "( name ) , ( age ) , ( weight ) that belongs to ( dogs ) , that have ( ( abandoned yn ) equal to ( 1 ) )", "text": "What are the dog name, age and weight of the dogs that were not abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.", "remark": "logic", "label": "0", "score": "0.4929787218570709"}
{"logic": "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )", "text": "Return the highest version number, along with its corresponding template type code.", "remark": "logic", "label": "0", "score": "0.5732271075248718"}
{"logic": "( first name ) that belongs to ( students ) , that have ( ( current address id ) not equal to ( permanent address id ) )", "text": "What is the first name of the student whose permanent address is different from his or her current one?", "remark": "positive", "label": "1", "score": "0.40817388892173767"}
{"logic": "( the average of ( earnings ) ) that belongs to ( poker player )", "text": "What is the total earnings of poker players?", "remark": "logic", "label": "0", "score": "0.35292601585388184"}
{"logic": "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )", "text": "How many different departments offer degrees?", "remark": "positive", "label": "1", "score": "0.4314698874950409"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "text": "List the language used least number of TV Channel. List language and number of TV Channel.", "remark": "positive", "label": "1", "score": "0.6215624213218689"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the code of the country with the most players?", "remark": "positive", "label": "1", "score": "0.4168645143508911"}
{"logic": "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date first registered ) in ascending order ) , limited to the top ( 1 )", "text": "What is the first, middle, and last name of the first student to register?", "remark": "positive", "label": "1", "score": "0.43818965554237366"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( people_id ) not in ( ( people id ) that belongs to ( poker player ) ) )", "text": "List the names of people that are not poker players.", "remark": "positive", "label": "1", "score": "0.6362606883049011"}
{"logic": "( petid of management ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , that have ( ( lname of department ) equal to ( 'smith' ) )", "text": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.", "remark": "positive", "label": "1", "score": "0.650327205657959"}
{"logic": "( department name of highschooler ) , ( department id of likes ) that belongs to ( ( degree programs ) , and ( ( departments ) satisfied that ( ( department id of likes ) equal to ( department id of highschooler ) ) ) ) , grouped by ( department id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "For each department id, what is the name of the department with the least number of degrees", "remark": "logic", "label": "0", "score": "0.41249027848243713"}
{"logic": "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the name and rank points of the winner who won the most times.", "remark": "positive", "label": "1", "score": "0.6183078289031982"}
{"logic": "( distinct ( course name of department ) ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) )", "text": "What are all the course names of the courses which ever have students enrolled in?", "remark": "positive", "label": "1", "score": "0.4729267358779907"}
{"logic": "( distinct ( first name of department ) ) , ( last name of department ) that belongs to ( ( professionals ) join ( ( treatments ) ) ) , that have ( ( cost of treatment ) less than ( the average of ( cost of treatment ) ) that belongs to ( treatments ) )", "text": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.", "remark": "positive", "label": "1", "score": "0.5665459632873535"}
{"logic": "( distinct ( fname of likes ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) , and ( ( pets ) satisfied that ( ( petid of area code state ) equal to ( petid of highschooler ) ) ) ) , that have ( ( ( pettype of area code state ) equal to ( 'cat' ) ) or ( ( pettype of area code state ) equal to ( 'dog' ) ) )", "text": "Find the first name of students who have cat or bird pet.", "remark": "value str", "label": "0", "score": "0.6532551646232605"}
{"logic": "( the number of ( all items ) ) that belongs to ( pets ) , that have ( ( weight ) greater than ( 10 ) )", "text": "How many pets have a greater weight than 10?", "remark": "positive", "label": "1", "score": "0.4627852439880371"}
{"logic": "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )", "text": "What are the names and areas of countries with the top 5 largest area?", "remark": "positive", "label": "1", "score": "0.37848594784736633"}
{"logic": "( course description ) that belongs to ( courses ) , that have ( ( course name ) equal to ( 'math' ) )", "text": "How is the math course described?", "remark": "positive", "label": "1", "score": "0.4198089838027954"}
{"logic": "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) between ( 1 ) and ( 2 ) )", "text": "What is the document id with 1 to 2 paragraphs?", "remark": "positive", "label": "1", "score": "0.4083964228630066"}
{"logic": "( the maximum of ( created ) ) that belongs to ( votes ) , that have ( ( state ) equal to ( 'ca' ) )", "text": "What is last date created of votes from the state 'CA'?", "remark": "positive", "label": "1", "score": "0.4952017068862915"}
{"logic": "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the winner who has won the least matches, and how many rank points does this player have?", "remark": "logic", "label": "0", "score": "0.44574466347694397"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , grouped by ( airline of likes ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )", "text": "Find all airlines that have more than 200 flights.", "remark": "logic", "label": "0", "score": "0.6301749348640442"}
{"logic": "( distinct ( name of department ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , that have ( ( sales of management ) greater than ( 300000 ) )", "text": "what are the different names of the singers that have sales more than 300000?", "remark": "positive", "label": "1", "score": "0.38251760601997375"}
{"logic": "( owner id of likes ) , ( zip code of likes ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of highschooler ) equal to ( dog id of area code state ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the sum of ( cost of treatment of area code state ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the owner id and zip code of the owner who spent the least money in total for his or her dogs.", "remark": "logic", "label": "0", "score": "0.6418453454971313"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines )", "text": "What are the airlines that we have?", "remark": "logic", "label": "0", "score": "0.42825236916542053"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( people )", "text": "List distinct nationalities?", "remark": "value col", "label": "0", "score": "0.49458786845207214"}
{"logic": "( name ) that belongs to ( country ) , ordered by ( ( population ) in ascending order ) , limited to the top ( 3 )", "text": "What are the names of the nations with the lowest populations?", "remark": "value int", "label": "0", "score": "0.40069258213043213"}
{"logic": "( the average of ( loser age ) ) , ( the average of ( winner age ) ) that belongs to ( matches )", "text": "Find the average age of losers and winners of all matches.", "remark": "positive", "label": "1", "score": "0.5961646437644958"}
{"logic": "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ) ) )", "text": "Find the major and age of students who do not have a cat pet.", "remark": "positive", "label": "1", "score": "0.6228652000427246"}
{"logic": "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity for the stadium with highest average attendance?", "remark": "positive", "label": "1", "score": "0.4201758801937103"}
{"logic": "( visitor id of catalog structure ) , ( name of catalogs ) , ( level of membership of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) ) , grouped by ( visitor id of catalog structure ) , ordered by ( ( the sum of ( total spent of catalog structure ) ) in descending order ) , limited to the top ( 1 )", "text": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "remark": "positive", "label": "1", "score": "0.4389893412590027"}
{"logic": "( the number of ( all items ) ) , ( student course id ) that belongs to ( transcript contents ) , grouped by ( student course id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.", "remark": "positive", "label": "1", "score": "0.5295240879058838"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( teacher_id ) not in ( ( teacher id ) that belongs to ( course arrange ) ) )", "text": "List the names of teachers who have not been arranged to teach courses.", "remark": "positive", "label": "1", "score": "0.6333758234977722"}
{"logic": "( email address ) , ( cell number ) , ( home phone ) that belongs to ( professionals )", "text": "What are the email, and cell phone of each professional?", "remark": "value col", "label": "0", "score": "0.43900349736213684"}
{"logic": "( distinct ( model of likes ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of likes ) equal to ( model of highschooler ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of highschooler ) equal to ( id of area code state ) ) ) ) , that have ( ( year of area code state ) greater than ( 1980 ) )", "text": "Which distinct car models are the produced after 1970?", "remark": "value int", "label": "0", "score": "0.4304559826850891"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , that have ( ( the number of ( all items ) ) greater than ( 50 ) )", "text": "What are the codes of countries with more than 50 players?", "remark": "positive", "label": "1", "score": "0.3831096887588501"}
{"logic": "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))", "text": "Show the document id with paragraph text 'Russia' and 'Ireland'.", "remark": "value str", "label": "0", "score": "0.62777179479599"}
{"logic": "( countryid of department ) , ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of department ) , ( countryname of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) , and ( ( model list ) satisfied that ( ( id of management ) equal to ( maker of head ) ) ) ) , that have ( ( model of head ) equal to ( 'fiat' ) )", "text": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?", "remark": "positive", "label": "1", "score": "0.4280000627040863"}
{"logic": "( id of likes ) , ( maker of likes ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of likes ) equal to ( maker of highschooler ) ) ) ) , grouped by ( id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( id of likes ) , ( maker of likes ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of likes ) equal to ( maker of highschooler ) ) ) , and ( ( car names ) satisfied that ( ( model of highschooler ) equal to ( model of area code state ) ) ) ) , grouped by ( id of likes ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ))", "text": "What are the ids and makers of all car makers that produce at least 1 models and make more than 4 cars?", "remark": "value int", "label": "0", "score": "0.40995824337005615"}
{"logic": "( the number of ( all items ) ) that belongs to ( other available features )", "text": "What are the available features are there in total?", "remark": "value col", "label": "0", "score": "0.4222465455532074"}
{"logic": "( the number of ( all items ) ) that belongs to ( conductor )", "text": "List the names of conductors.", "remark": "value col", "label": "0", "score": "0.6056272387504578"}
{"logic": "( the sum of ( tours ) ) , ( ranking date ) that belongs to ( rankings ) , grouped by ( ranking date )", "text": "Find the total number of tours for each ranking date.", "remark": "positive", "label": "1", "score": "0.6001215577125549"}
{"logic": "( city of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) , grouped by ( city of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city is the most frequent source airport?", "remark": "positive", "label": "1", "score": "0.4661378860473633"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( english ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( french ) ))", "text": "What are the names of nations speak both Spanish and French?", "remark": "value str", "label": "0", "score": "0.3779911398887634"}
{"logic": "( name of management ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of management ) ) ) ) , grouped by ( name of management ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show names of teachers that teach at least two courses.", "remark": "positive", "label": "1", "score": "0.6345558166503906"}
{"logic": "( transcript date of management ) , ( transcript id of department ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of department ) equal to ( transcript id of management ) ) ) ) , grouped by ( transcript id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What is the date and id of the transcript with at least 2 courses listed?", "remark": "positive", "label": "1", "score": "0.435992956161499"}
{"logic": "( the average of ( gnp ) ) , ( the sum of ( population ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( us territory ) )", "text": "Give the mean GNP and total population of nations which are considered US territory.", "remark": "positive", "label": "1", "score": "0.6104764938354492"}
{"logic": "( first name ) that belongs to ( students ) , that have ( ( current address id ) not equal to ( permanent address id ) )", "text": "Whose permanent address is different from his or her current address? List his or her first name.", "remark": "positive", "label": "1", "score": "0.6186738014221191"}
{"logic": "( fname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ), and intersect with ( ( fname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'dog' ) ))", "text": "Find the name of students who have both cat and dog pets.", "remark": "positive", "label": "1", "score": "0.6328409910202026"}
{"logic": "( the number of ( all items ) ) that belongs to ( poker player )", "text": "How many poker players are there?", "remark": "positive", "label": "1", "score": "0.4712640643119812"}
{"logic": "( song name ) , ( song release year ) that belongs to ( singer ) , ordered by ( ( age ) ) , limited to the top ( 1 )", "text": "What are the names and release years for all the songs of the youngest singer?", "remark": "positive", "label": "1", "score": "0.39945724606513977"}
{"logic": "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )", "text": "What is the number of distinct languages used around the world?", "remark": "positive", "label": "1", "score": "0.3986629247665405"}
{"logic": "( episode of highschooler ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( series name of likes ) equal to ( sky radio ) )", "text": "List the Episode of all  TV series showed on TV Channel without series name \"Sky Radio\".", "remark": "logic", "label": "0", "score": "0.6558043956756592"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( performance ) , that have ( ( type ) not equal to ( live final ) )", "text": "What are the maximum share of performances whose type is not \"Live final\".", "remark": "value col", "label": "0", "score": "0.3881809115409851"}
{"logic": "( name ) , ( population ) , ( headofstate ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "Give the name, population, and head of state for the country that has the largest area.", "remark": "positive", "label": "1", "score": "0.5995223522186279"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )", "text": "Count the number of flights into ATO.", "remark": "positive", "label": "1", "score": "0.6192484498023987"}
{"logic": "( the sum of ( population ) ) , ( the average of ( lifeexpectancy ) ) , ( continent ) that belongs to ( country ) , grouped by ( continent ) , that have ( ( the average of ( lifeexpectancy ) ) less than ( 72 ) )", "text": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?", "remark": "positive", "label": "1", "score": "0.41171616315841675"}
{"logic": "( language ) , ( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , grouped by ( countrycode )", "text": "What is the language spoken by the smallest percentage of people in each country?", "remark": "logic", "label": "0", "score": "0.3809906542301178"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )", "text": "What are the names of conductors, sorted ascending by the number of years they have worked?", "remark": "logic", "label": "0", "score": "0.4158390462398529"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the name of the nation that uses the greatest amount of languages.", "remark": "positive", "label": "1", "score": "0.600249171257019"}
{"logic": "( name ) that belongs to ( city ) , that have ( ( population ) between ( 160000 ) and ( 90000 ) )", "text": "Return the names of cities that have a population between 160000 and 900000.", "remark": "positive", "label": "1", "score": "0.6118448376655579"}
{"logic": "( the average of ( earnings of management ) ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , that have ( ( height of department ) greater than ( 200 ) )", "text": "Give average earnings of poker players who are taller than 200.", "remark": "positive", "label": "1", "score": "0.6127499341964722"}
{"logic": "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?", "remark": "positive", "label": "1", "score": "0.4644380807876587"}
{"logic": "( the average of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( stadium )", "text": "What is the average and the maximum capacity of all stadiums?", "remark": "positive", "label": "1", "score": "0.38243257999420166"}
{"logic": "( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , ordered by ( ( tours of management ) in descending order ) , limited to the top ( 1 )", "text": "Find the first name and country code of the player who did the most number of tours.", "remark": "positive", "label": "1", "score": "0.6436107754707336"}
{"logic": "( airportcode ) , ( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( anthony ) )", "text": "List the airport code and name in the city of Anthony.", "remark": "positive", "label": "1", "score": "0.6729468107223511"}
{"logic": "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( chinese ) )", "text": "What is the number of distinct continents where English is spoken?", "remark": "value str", "label": "0", "score": "0.3717668652534485"}
{"logic": "( the number of ( all items ) ) that belongs to ( museum ) , that have ( ( ( open year ) greater than ( 2013 ) ) or ( ( open year ) less than ( 2008 ) ) )", "text": "How many museums were opened after 2013 or before 2008?", "remark": "positive", "label": "1", "score": "0.46891677379608154"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of department ) equal to ( countryid of management ) ) ) ) , that have ( ( countryname of management ) equal to ( 'france' ) )", "text": "How many car makers are there in france?", "remark": "positive", "label": "1", "score": "0.4518273174762726"}
{"logic": "( city ) that belongs to ( employee ) , that have ( ( age ) less than ( 30 ) ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Find the cities that have more than one employee under age 30.", "remark": "positive", "label": "1", "score": "0.5681848526000977"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , grouped by ( name of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the name of the nation that uses the smallest amount of languages.", "remark": "logic", "label": "0", "score": "0.5959897637367249"}
{"logic": "( the number of ( all items ) ) that belongs to ( teacher )", "text": "How many teachers are there?", "remark": "positive", "label": "1", "score": "0.48241665959358215"}
{"logic": "( the number of ( all items ) ) that belongs to ( owners ) , that have ( ( owner_id ) not in ( ( owner id ) that belongs to ( dogs ) ) )", "text": "Find the number of owners who do not own any dogs at this moment.", "remark": "positive", "label": "1", "score": "0.6058824062347412"}
{"logic": "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )", "text": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.", "remark": "positive", "label": "1", "score": "0.5872035026550293"}
{"logic": "( the maximum of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the average weight for each type of pet. List the average weight and pet type.", "remark": "value col", "label": "0", "score": "0.6301162838935852"}
{"logic": "( name ) that belongs to ( city ) , that have ( ( population ) between ( 160000 ) and ( 90000 ) )", "text": "Return the names of cities that have a population between 180000 and 800000.", "remark": "value int", "label": "0", "score": "0.6072677373886108"}
{"logic": "( the number of ( all items ) ) that belongs to ( courses )", "text": "How many courses in average are listed?", "remark": "logic", "label": "0", "score": "0.48101454973220825"}
{"logic": "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "find the code of the country where has the greatest number of players.", "remark": "positive", "label": "1", "score": "0.595327615737915"}
{"logic": "( the number of ( all items ) ) that belongs to ( employee )", "text": "Count the number of employees", "remark": "positive", "label": "1", "score": "0.507673442363739"}
{"logic": "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))", "text": "Find the last names that are used for professionals or owners but are not used as dog names.", "remark": "value col", "label": "0", "score": "0.5960811972618103"}
{"logic": "( earnings ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order )", "text": "List the earnings of poker players in ascending order.", "remark": "logic", "label": "0", "score": "0.6186871528625488"}
{"logic": "( city ) that belongs to ( employee ) , that have ( ( age ) less than ( 30 ) ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Find the cities that have more than one employee under age 25.", "remark": "value int", "label": "0", "score": "0.5701263546943665"}
{"logic": "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )", "text": "How many departments do not offer any degree?", "remark": "logic", "label": "0", "score": "0.41935473680496216"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( conductor )", "text": "How many conductors do we have?", "remark": "value col", "label": "0", "score": "0.4312626123428345"}
{"logic": "( the number of ( all items ) ) that belongs to ( documents )", "text": "Count the number of distinct documents.", "remark": "logic", "label": "0", "score": "0.5913019776344299"}
{"logic": "( distinct ( maker of department ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) , and ( ( car names ) satisfied that ( ( model of management ) equal to ( model of head ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of head ) equal to ( id of trip ) ) ) ) , that have ( ( year of trip ) equal to ( '1970' ) )", "text": "What is the name of the different car makers who produced a car in 1970?", "remark": "positive", "label": "1", "score": "0.4482899606227875"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( english ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( language of highschooler ) equal to ( dutch ) )) r\" )", "text": "What are the names of the countries speak both English and Dutch?", "remark": "value col", "label": "0", "score": "0.402845174074173"}
{"logic": "( winner name ) , ( loser name ) that belongs to ( matches ) , ordered by ( ( minutes ) in descending order ) , limited to the top ( 1 )", "text": "What are the names of the winner and loser who played in the longest match?", "remark": "positive", "label": "1", "score": "0.41411998867988586"}
{"logic": "( name ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( level of membership ) in descending order )", "text": "Find the names of the visitors whose membership level is higher than 3, and order the results by the level from high to low.", "remark": "value int", "label": "0", "score": "0.6385735869407654"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "What are the ids of students who both have friends and are liked?", "remark": "positive", "label": "1", "score": "0.37380340695381165"}
{"logic": "( cost of treatment of department ) , ( treatment type description of management ) that belongs to ( ( treatments ) , and ( ( treatment types ) satisfied that ( ( treatment type code of department ) equal to ( treatment type code of management ) ) ) )", "text": "What are the cost and treatment type description of each treatment?", "remark": "positive", "label": "1", "score": "0.3919878900051117"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in ascending order )", "text": "List the name of singers in ascending order of net worth.", "remark": "positive", "label": "1", "score": "0.5986099243164062"}
{"logic": "( the number of ( distinct ( pettype ) ) ) that belongs to ( pets )", "text": "List different types of pet?", "remark": "value col", "label": "0", "score": "0.5039637684822083"}
{"logic": "( citizenship ) that belongs to ( singer ) , grouped by ( citizenship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Please show the most common citizenship of singers.", "remark": "positive", "label": "1", "score": "0.5412649512290955"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( countryid of likes ) , ( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of likes ) equal to ( country of highschooler ) ) ) ) , grouped by ( countryid of likes ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) r\" )", "text": "What is the number of countries with more than 3 car makers?", "remark": "value int", "label": "0", "score": "0.3871762156486511"}
{"logic": "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )", "text": "What are the different departments offering degrees?", "remark": "value col", "label": "0", "score": "0.37750351428985596"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of department ) equal to ( department id of management ) ) ) ) , that have ( ( department name of department ) equal to ( 'engineer' ) )", "text": "How many degrees does the engineering department have?", "remark": "positive", "label": "1", "score": "0.44461342692375183"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the winner with the least rank points who participated in the Australian Open tournament?", "remark": "logic", "label": "0", "score": "0.4482063353061676"}
{"logic": "( maker ) , ( model ) that belongs to ( model list )", "text": "What are the makers and models?", "remark": "positive", "label": "1", "score": "0.40735793113708496"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "What is the average horsepower for all cards produced before 1980?", "remark": "positive", "label": "1", "score": "0.4225062429904938"}
{"logic": "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the conductor who has worked the greatest number of years?", "remark": "positive", "label": "1", "score": "0.4496310353279114"}
{"logic": "( name ) that belongs to ( stadium ), and except that ( ( name of highschooler ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of likes ) equal to ( stadium id of highschooler ) ) ) ) , that have ( ( year of likes ) equal to ( 2014 ) ))", "text": "Show names for all stadiums except for stadiums having a concert before year 2014.", "remark": "logic", "label": "0", "score": "0.5544772744178772"}
{"logic": "( name ) , ( country ) , ( age ) that belongs to ( singer ) , ordered by ( ( age ) in descending order )", "text": "Show name, country, age for all singers ordered by age from the oldest to the youngest.", "remark": "positive", "label": "1", "score": "0.5841529965400696"}
{"logic": "( the number of ( all items ) ) , ( fullname of management ) , ( id of management ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of department ) equal to ( id of management ) ) ) ) , grouped by ( id of management )", "text": "How many car models are produced by each maker? List the count and the maker full name.", "remark": "positive", "label": "1", "score": "0.577305793762207"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "How many likes does Kyle have?", "remark": "positive", "label": "1", "score": "0.485505074262619"}
{"logic": "( record company ) that belongs to ( orchestra ) , grouped by ( record company ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "List the record company shared by the most number of orchestras.", "remark": "positive", "label": "1", "score": "0.6120607256889343"}
{"logic": "( treatment type description of department ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of department ) equal to ( treatment type code of management ) ) ) ) , grouped by ( treatment type code of department ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )", "text": "Give me the description of the treatment type whose total cost is the lowest.", "remark": "positive", "label": "1", "score": "0.6056976914405823"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department )", "text": "What are the names of high schoolers who have likes, and how many likes does each have?", "remark": "positive", "label": "1", "score": "0.4286629855632782"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )", "text": "What are the full names of all right handed players, in order of birth date?", "remark": "value str", "label": "0", "score": "0.42887046933174133"}
{"logic": "( transcript date ) , ( other details ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in ascending order ) , limited to the top ( 1 )", "text": "When is the first transcript released? List the date and details.", "remark": "positive", "label": "1", "score": "0.573820948600769"}
{"logic": "( make of management ) , ( year of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( year of department ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "Find the make and production time of the cars that were produced in the earliest year?", "remark": "positive", "label": "1", "score": "0.5774713158607483"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "List the most common hometown of teachers.", "remark": "positive", "label": "1", "score": "0.6301097273826599"}
{"logic": "( the sum of ( population ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ) ) )", "text": "How many people live in countries that do not speak English?", "remark": "positive", "label": "1", "score": "0.45661264657974243"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )", "text": "How many friends in average does each student have?", "remark": "logic", "label": "0", "score": "0.4454803466796875"}
{"logic": "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )", "text": "Which city is the Alton airport at?", "remark": "value col", "label": "0", "score": "0.4500482678413391"}
{"logic": "( distinct ( model of management ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( car makers ) satisfied that ( ( maker of management ) equal to ( id of head ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of trip ) ) ) ) , that have ( ( ( fullname of head ) equal to ( 'general motors' ) ) or ( ( weight of trip ) greater than ( 3500 ) ) )", "text": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?", "remark": "positive", "label": "1", "score": "0.43644294142723083"}
{"logic": "( name of likes ) , ( date of likes ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of likes ) equal to ( lost in battle of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( 'lettice' ) ), and intersect with ( ( name of likes ) , ( date of likes ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of likes ) equal to ( lost in battle of highschooler ) ) ) ) , that have ( ( name of highschooler ) equal to ( 'hms atalanta' ) ))", "text": "List the name and date the battle that has lost the ship named 'Lettice' or the ship named 'HMS Atalanta'", "remark": "logic", "label": "0", "score": "0.6602880358695984"}
{"logic": "( song name ) that belongs to ( singer ) , that have ( ( age ) greater than ( the average of ( age ) ) that belongs to ( singer ) )", "text": "What are all the song names by singers who are younger than average?", "remark": "logic", "label": "0", "score": "0.36840325593948364"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "Show the ids of high schoolers who have friends but are not also liked by someone else.", "remark": "logic", "label": "0", "score": "0.5697062611579895"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( population ) less than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) ) )", "text": "What are the African countries that have a  population less than any country in Asia?", "remark": "positive", "label": "1", "score": "0.38391488790512085"}
{"logic": "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )", "text": "What are the titles of all cartoons directed by Ben Jones?", "remark": "value str", "label": "0", "score": "0.5018789172172546"}
{"logic": "( major record format ) that belongs to ( orchestra ) , grouped by ( major record format ) , ordered by ( ( the number of ( all items ) ) in ascending order )", "text": "Please show the record formats of orchestras in descending order of count.", "remark": "logic", "label": "0", "score": "0.552617609500885"}
{"logic": "( name ) , ( birth date ) that belongs to ( people ) , ordered by ( ( name ) in ascending order )", "text": "List the names and birth dates of people in descending alphabetical order of name.", "remark": "logic", "label": "0", "score": "0.6320035457611084"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( country )", "text": "Show all countries and the number of singers in each country.", "remark": "positive", "label": "1", "score": "0.6356341242790222"}
{"logic": "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )", "text": "How many different addresses do the students currently live?", "remark": "positive", "label": "1", "score": "0.4511226713657379"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )", "text": "Which airlines have at least 10 flights?", "remark": "positive", "label": "1", "score": "0.46058252453804016"}
{"logic": "( lname of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pet age of head ) equal to ( 3 ) ) and ( ( pettype of head ) equal to ( 'cat' ) ) )", "text": "What is the last name of the student who has a cat that is 3 years old?", "remark": "positive", "label": "1", "score": "0.46054625511169434"}
{"logic": "( the average of ( num of ticket ) ) , ( the maximum of ( num of ticket ) ) that belongs to ( visit )", "text": "What are the average and maximum number of tickets bought in all visits?", "remark": "positive", "label": "1", "score": "0.40351173281669617"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of highschooler ) equal to ( uid of likes ) ) ) ) , that have ( ( ( airline of likes ) equal to ( united airlines ) ) and ( ( sourceairport of highschooler ) equal to ( ahd ) ) )", "text": "How many 'JetBlue Airlines' flights depart from Airport 'AHD'?", "remark": "value col", "label": "0", "score": "0.5270780324935913"}
{"logic": "( name ) , ( surfacearea ) , ( indepyear ) that belongs to ( country ) , ordered by ( ( population ) ) , limited to the top ( 1 )", "text": "What are the name, independence year, and surface area of the country with the smallest population?", "remark": "positive", "label": "1", "score": "0.40177592635154724"}
{"logic": "( weight ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 4 ) ) and ( ( year ) equal to ( 1974 ) ) ) , ordered by ( ( weight ) in ascending order ) , limited to the top ( 1 )", "text": "What is the maximum weight of the car with 8 cylinders produced in 1974?", "remark": "logic", "label": "0", "score": "0.4650755226612091"}
{"logic": "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "What are the name, population, and life expectancy of the largest Africa country by land?", "remark": "value str", "label": "0", "score": "0.4221184551715851"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , that have ( ( template type code of management ) equal to ( 'ppt' ) )", "text": "How many documents are using the template with type code 'PPT'?", "remark": "positive", "label": "1", "score": "0.4782605767250061"}
{"logic": "( the maximum of ( charge amount ) ) that belongs to ( charges )", "text": "How much does the most expensive charge type costs?", "remark": "positive", "label": "1", "score": "0.4208473861217499"}
{"logic": "( the average of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) in ( ( student id of department ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) ) )", "text": "Find the average grade of all students who have some friends.", "remark": "positive", "label": "1", "score": "0.6245704889297485"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )", "text": "What are the names of the singers who are not French citizens?", "remark": "positive", "label": "1", "score": "0.39931219816207886"}
{"logic": "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )", "text": "Find the id and weight of all pets whose age is older than 10.", "remark": "value int", "label": "0", "score": "0.5651638507843018"}
{"logic": "( document id ) , ( document name ) , ( document description ) that belongs to ( documents )", "text": "What are the ids, names, and descriptions for all documents?", "remark": "positive", "label": "1", "score": "0.37971243262290955"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )", "text": "What are the codes of template types that have more than 3 templates?", "remark": "logic", "label": "0", "score": "0.3834461271762848"}
{"logic": "( the number of ( all items ) ) that belongs to ( players )", "text": "Find the names of players.", "remark": "value col", "label": "0", "score": "0.5876961350440979"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( governmentform of department ) equal to ( republic ) ) , grouped by ( language of management ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "text": "Which languages are spoken by only one country in republic governments?", "remark": "positive", "label": "1", "score": "0.3962535262107849"}
{"logic": "( student id of department ) , ( first name of department ) , ( middle name of department ) , ( last name of department ) , ( the number of ( all items ) ) , ( student id of department ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of department ) equal to ( student id of management ) ) ) ) , grouped by ( student id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.", "remark": "positive", "label": "1", "score": "0.5801700353622437"}
{"logic": "( record company ) , ( the number of ( all items ) ) that belongs to ( orchestra ) , grouped by ( record company )", "text": "Please show the different record companies and the corresponding number of orchestras.", "remark": "positive", "label": "1", "score": "0.5422618985176086"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ), and intersect with ( ( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of department ) equal to ( id of management ) ) ) ))", "text": "Show name of all students who have some friends and also are liked by someone else.", "remark": "positive", "label": "1", "score": "0.6495776176452637"}
{"logic": "( the number of ( distinct ( degree summary name ) ) ) that belongs to ( degree programs )", "text": "How many different degree names are offered?", "remark": "positive", "label": "1", "score": "0.432941198348999"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of management ) equal to ( uid of department ) ) ) ) , that have ( ( ( airline of department ) equal to ( united airlines ) ) and ( ( destairport of management ) equal to ( asy ) ) )", "text": "How many 'United Airlines' flights go to Airport 'ASY'?", "remark": "positive", "label": "1", "score": "0.5319191217422485"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( uid of management ) equal to ( airline of department ) ) ) ) , that have ( ( airline of management ) equal to ( united airlines ) )", "text": "Which flight numbers correspond to United Airlines flights?", "remark": "positive", "label": "1", "score": "0.445181667804718"}
{"logic": "( name of department ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) ) , grouped by ( conductor id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the conductor who has conducted the most orchestras?", "remark": "positive", "label": "1", "score": "0.4279109537601471"}
{"logic": "( location ) , ( name ) that belongs to ( stadium ) , that have ( ( capacity ) between ( 5000 ) and ( 10000 ) )", "text": "What are the locations and names of all stations with capacity between 5000 and 10000?", "remark": "positive", "label": "1", "score": "0.4268069863319397"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( region ) equal to ( caribbean ) )", "text": "How much surface area do the countires in the Carribean cover together?", "remark": "positive", "label": "1", "score": "0.42955633997917175"}
{"logic": "( last name of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , that have ( ( age of management ) equal to ( the maximum of ( age ) ) that belongs to ( dogs ) )", "text": "List the last name of the owner owning the youngest dog.", "remark": "positive", "label": "1", "score": "0.6676761507987976"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "What are flight numbers of flights departing from City \"Aberdeen \"?", "remark": "positive", "label": "1", "score": "0.42601141333580017"}
{"logic": "( the number of ( all items ) ) that belongs to ( courses )", "text": "How many courses in total are listed?", "remark": "positive", "label": "1", "score": "0.4976571202278137"}
{"logic": "( fname of department ) , ( age of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( ( pettype of head ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of head ) equal to ( petid of management ) ) ) ) , that have ( ( pettype of head ) equal to ( 'cat' ) ) ) ) )", "text": "What is the first name of every student who has a dog but does not have a cat?", "remark": "positive", "label": "1", "score": "0.45999667048454285"}
{"logic": "( the number of ( distinct ( degree summary name ) ) ) that belongs to ( degree programs )", "text": "How many different degrees are offered?", "remark": "positive", "label": "1", "score": "0.43152377009391785"}
{"logic": "( grade ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "Return the grade for the high schooler named Kyle.", "remark": "positive", "label": "1", "score": "0.6088746786117554"}
{"logic": "( language ) , ( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , grouped by ( countrycode )", "text": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?", "remark": "positive", "label": "1", "score": "0.40711304545402527"}
{"logic": "( the number of ( all items ) ) that belongs to ( professionals ) , that have ( ( professional_id ) not in ( ( professional id ) that belongs to ( treatments ) ) )", "text": "How many professionals did not operate any treatment on dogs?", "remark": "positive", "label": "1", "score": "0.43819838762283325"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )", "text": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?", "remark": "positive", "label": "1", "score": "0.47447338700294495"}
{"logic": "( template type code of likes ) , ( the number of ( all items ) ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , grouped by ( template type code of likes )", "text": "What are the different template type codes, and how many documents use each type in average?", "remark": "logic", "label": "0", "score": "0.4286859929561615"}
{"logic": "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )", "text": "What is the continent name which Aruba belongs to?", "remark": "value str", "label": "0", "score": "0.3873786926269531"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )", "text": "List each language and the number of TV Channels using it.", "remark": "positive", "label": "1", "score": "0.6290682554244995"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( aberdeen ) )", "text": "What are airport names at City 'Aberdeen'?", "remark": "positive", "label": "1", "score": "0.43806716799736023"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( ( city of management ) equal to ( aberdeen ) ) or ( ( city of management ) equal to ( abilene ) ) )", "text": "Find the number of flights landing in the city of Aberdeen or Abilene.", "remark": "positive", "label": "1", "score": "0.6550974249839783"}
{"logic": "( the number of ( distinct ( nationality ) ) ) that belongs to ( people )", "text": "How many distinct nationalities are there?", "remark": "positive", "label": "1", "score": "0.41977646946907043"}
{"logic": "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which country has the most of TV Channels? List the country and number of TV Channels it has.", "remark": "positive", "label": "1", "score": "0.6079628467559814"}
{"logic": "( distinct ( breed code ) ) , ( size code ) that belongs to ( dogs )", "text": "What are all the possible breed type and size type combinations?", "remark": "positive", "label": "1", "score": "0.36036306619644165"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , ordered by ( ( capacity of management ) in descending order ) , limited to the top ( 1 )", "text": "Find the number of concerts happened in the stadium with the highest capacity.", "remark": "positive", "label": "1", "score": "0.6012498736381531"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( countryid of department ) , ( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) r\" )", "text": "How many countries has more than 2 car makers?", "remark": "positive", "label": "1", "score": "0.43702247738838196"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of department ) equal to ( aruba ) ) , ordered by ( ( percentage ) in descending order ) , limited to the top ( 1 )", "text": "What language is predominantly spoken in Aruba?", "remark": "positive", "label": "1", "score": "0.40070581436157227"}
{"logic": "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the average and maximum age for each type of pet.", "remark": "positive", "label": "1", "score": "0.5712491869926453"}
{"logic": "( mpg ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) ) , ordered by ( ( mpg ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?", "remark": "positive", "label": "1", "score": "0.434230774641037"}
{"logic": "( contestant name ) that belongs to ( contestants ) , that have ( ( contestant name ) not equal to ( 'jessie alloway' ) )", "text": "What are the names of the contestants whose names are not 'Jessie Alloway'", "remark": "positive", "label": "1", "score": "0.5068346261978149"}
{"logic": "( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ), and intersect with ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( french ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ))", "text": "Give the names of countries with English or French as official languages.", "remark": "logic", "label": "0", "score": "0.5723676085472107"}
{"logic": "( distinct ( model of highschooler ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of likes ) equal to ( model of highschooler ) ) ) , and ( ( car makers ) satisfied that ( ( maker of highschooler ) equal to ( id of area code state ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of car makers ) ) ) ) , that have ( ( ( fullname of area code state ) equal to ( 'general motors' ) ) or ( ( weight of car makers ) greater than ( 3500 ) ) )", "text": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 4500?", "remark": "value int", "label": "0", "score": "0.4720078110694885"}
{"logic": "( citizenship ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "For each citizenship, how many singers are not  from that country?", "remark": "logic", "label": "0", "score": "0.4651432931423187"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( headofstate of department ) equal to ( beatrix ) ) and ( ( isofficial of management ) equal to ( t ) ) )", "text": "What is the official language used in the country the name of whose head of state is Beatrix.", "remark": "positive", "label": "1", "score": "0.5003352761268616"}
{"logic": "( grade ) that belongs to ( highschooler )", "text": "What is the highest grade of high schooler?", "remark": "logic", "label": "0", "score": "0.41578224301338196"}
{"logic": "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )", "text": "List all airline names and their abbreviations in \"USA\".", "remark": "positive", "label": "1", "score": "0.6340951323509216"}
{"logic": "( country code of department ) , ( first name of department ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of department ) equal to ( player id of management ) ) ) ) , ordered by ( ( tours of management ) in descending order ) , limited to the top ( 1 )", "text": "What is the first name and country code of the player with the most tours?", "remark": "positive", "label": "1", "score": "0.4250185489654541"}
{"logic": "( the number of ( all items ) ) that belongs to ( owners ) , that have ( ( owner_id ) not in ( ( owner id ) that belongs to ( dogs ) ) )", "text": "How many owners temporarily do not have any dogs?", "remark": "positive", "label": "1", "score": "0.46217477321624756"}
{"logic": "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the winner who has won the most matches, and how many rank points does this player have?", "remark": "positive", "label": "1", "score": "0.4478907287120819"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( final table made of management ) )", "text": "List the names of poker players ordered by the final tables made in ascending order.", "remark": "positive", "label": "1", "score": "0.6629637479782104"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the singer with the lowest net worth?", "remark": "logic", "label": "0", "score": "0.4122064411640167"}
{"logic": "( name ) that belongs to ( highschooler ) , that have ( ( grade ) equal to ( 10 ) )", "text": "Show the names of all high schoolers in grade 10.", "remark": "positive", "label": "1", "score": "0.5991734266281128"}
{"logic": "( name of area code state ) , ( course of highschooler ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of likes ) equal to ( course id of highschooler ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of likes ) equal to ( teacher id of area code state ) ) ) )", "text": "Show names of teachers and the courses they are not arranged to teach.", "remark": "logic", "label": "0", "score": "0.6730753183364868"}
{"logic": "( distinct ( template type code ) ) that belongs to ( templates )", "text": "Show all distinct template type codes for all templates.", "remark": "positive", "label": "1", "score": "0.5940557718276978"}
{"logic": "( the number of ( distinct ( language of highschooler ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) )", "text": "For the countries founded before 1920, what is the total number of distinct official languages?", "remark": "value int", "label": "0", "score": "0.5121557116508484"}
{"logic": "( name of likes ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of likes ) equal to ( people id of highschooler ) ) ) ) , that have ( ( earnings of highschooler ) greater than ( 300000 ) )", "text": "Give the names of poker players who have earnings above 200000.", "remark": "value int", "label": "0", "score": "0.6207529902458191"}
{"logic": "( document id of department ) , ( document name of management ) , ( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , grouped by ( document id of department )", "text": "What are the ids and names of each document, as well as the number of paragraphs in each?", "remark": "positive", "label": "1", "score": "0.4227766692638397"}
{"logic": "( the number of ( all items ) ) that belongs to ( transcripts )", "text": "How many transcripts are released?", "remark": "positive", "label": "1", "score": "0.4614172875881195"}
{"logic": "( the number of ( language of highschooler ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( name of likes ) equal to ( aruba ) )", "text": "What is the total number of languages used in Canada?", "remark": "value str", "label": "0", "score": "0.4100261628627777"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( headofstate of likes ) equal to ( beatrix ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) )", "text": "What is the official language used in the country the name of whose head of state is not Beatrix.", "remark": "logic", "label": "0", "score": "0.48160800337791443"}
{"logic": "( name ) , ( level of membership ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( age ) in descending order )", "text": "Find the name and membership level of the visitors whose membership level is higher than 5, and sort by their age from old to young.", "remark": "value int", "label": "0", "score": "0.6193133592605591"}
{"logic": "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )", "text": "List the first of all players who are left / L hand in the order of birth date.", "remark": "value col", "label": "0", "score": "0.6549928784370422"}
{"logic": "( weekly rank ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the TV Channel for the episode \"A Love of a Lifetime\"?", "remark": "value col", "label": "0", "score": "0.48732703924179077"}
{"logic": "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the nationality that is most common across all people.", "remark": "positive", "label": "1", "score": "0.5968887805938721"}
{"logic": "( date of treatment of likes ) , ( first name of highschooler ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) )", "text": "What are the date and the operating professional's last name of each treatment?", "remark": "value col", "label": "0", "score": "0.43691614270210266"}
{"logic": "( section name ) , ( section description ) that belongs to ( sections )", "text": "What are the names and descriptions for all the sections?", "remark": "positive", "label": "1", "score": "0.4175192415714264"}
{"logic": "( charge type ) , ( charge amount ) that belongs to ( charges )", "text": "List each charge type and its amount.", "remark": "positive", "label": "1", "score": "0.645466685295105"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , ordered by ( ( horsepower of highschooler ) in ascending order ) , limited to the top ( 1 )", "text": "Which model of the car has the maximum horsepower?", "remark": "logic", "label": "0", "score": "0.4604649245738983"}
{"logic": "( the number of ( all items ) ) that belongs to ( owners ) , that have ( ( owner_id ) not in ( ( owner id ) that belongs to ( dogs ) ) )", "text": "Find the number of owners who own some dogs at this moment.", "remark": "logic", "label": "0", "score": "0.6107781529426575"}
{"logic": "( name ) , ( population ) , ( headofstate ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "What are the population, name and leader of the country with the largest area?", "remark": "positive", "label": "1", "score": "0.4134664833545685"}
{"logic": "( the number of ( all items ) ) that belongs to ( templates ) , that have ( ( template type code ) equal to ( cv ) )", "text": "How many templates have template type code CV?", "remark": "positive", "label": "1", "score": "0.47988277673721313"}
{"logic": "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )", "text": "Show the student IDs.", "remark": "value col", "label": "0", "score": "0.5584374070167542"}
{"logic": "( document name ) , ( template id ) that belongs to ( documents ) , that have ( ( document_description ) like ( %w% ) )", "text": "What is the document name and template id for document with description with the letter 'w' in it?", "remark": "positive", "label": "1", "score": "0.4159536063671112"}
{"logic": "( the sum of ( population ) ) , ( the average of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( north america ) ) and ( ( surfacearea ) greater than ( 3000 ) ) )", "text": "Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than 3000.", "remark": "positive", "label": "1", "score": "0.605635941028595"}
{"logic": "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "What country is Jetblue Airways affiliated with?", "remark": "positive", "label": "1", "score": "0.39818501472473145"}
{"logic": "( distinct ( name of likes ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , that have ( ( sales of highschooler ) greater than ( 300000 ) )", "text": "Show distinct names of singers that have songs with sales less than 300000.", "remark": "logic", "label": "0", "score": "0.5935457944869995"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( lifeexpectancy ) ) , limited to the top ( 1 )", "text": "Give the name of the country in Asia with the highest life expectancy.", "remark": "logic", "label": "0", "score": "0.593136727809906"}
{"logic": "( id ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "Show the ID of the high schooler named Kyle.", "remark": "positive", "label": "1", "score": "0.6131966710090637"}
{"logic": "( final table made ) , ( best finish ) that belongs to ( poker player )", "text": "List the final tables made and the best finishes of poker players.", "remark": "positive", "label": "1", "score": "0.6198039650917053"}
{"logic": "( population ) , ( region ) that belongs to ( country ) , that have ( ( name ) equal to ( angola ) )", "text": "What are the population of Angola?", "remark": "value col", "label": "0", "score": "0.35148167610168457"}
{"logic": "( treatment type description of department ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of department ) equal to ( treatment type code of management ) ) ) ) , grouped by ( treatment type code of department ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )", "text": "What is the description of the treatment type that costs the least money in total?", "remark": "positive", "label": "1", "score": "0.4378601908683777"}
{"logic": "( the average of ( weight ) ) , ( year ) that belongs to ( cars data ) , grouped by ( year )", "text": "What is the average weight of cars each year?", "remark": "positive", "label": "1", "score": "0.3832815885543823"}
{"logic": "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ))", "text": "What are the codes of template types that are used for some documents?", "remark": "logic", "label": "0", "score": "0.4108295738697052"}
{"logic": "( first name of department ) , ( name of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) )", "text": "What are each owner's first name and their dogs's name?", "remark": "positive", "label": "1", "score": "0.441989928483963"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( earnings of management ) in descending order )", "text": "What are the names of poker players in descending order of earnings?", "remark": "positive", "label": "1", "score": "0.4491533041000366"}
{"logic": "( semester name of department ) , ( semester id of department ) that belongs to ( ( semesters ) , and ( ( student enrolment ) satisfied that ( ( semester id of department ) equal to ( semester id of management ) ) ) ) , grouped by ( semester id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the semester which most student registered in? Show both the name and the id.", "remark": "positive", "label": "1", "score": "0.5591557025909424"}
{"logic": "( the number of ( all items ) ) that belongs to ( \"l ( countryid of department ) , ( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) r\" )", "text": "What is the number of countries with more than 2 car makers?", "remark": "positive", "label": "1", "score": "0.38181498646736145"}
{"logic": "( id of department ) , ( maker of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( id of department ) , ( maker of department ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) , and ( ( car names ) satisfied that ( ( model of management ) equal to ( model of head ) ) ) ) , grouped by ( id of department ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ))", "text": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?", "remark": "positive", "label": "1", "score": "0.4256187975406647"}
{"logic": "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "What is the average and maximum age for each pet type?", "remark": "positive", "label": "1", "score": "0.3673606812953949"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of likes ) equal to ( uid of highschooler ) ) ) ) , that have ( ( airline of highschooler ) equal to ( jetblue airways ) )", "text": "Give the ids of Jetblue Airways flights.", "remark": "value col", "label": "0", "score": "0.6510502696037292"}
{"logic": "( name of management ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of management ) ) ) ) , grouped by ( name of management ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the names of the teachers who teach at least two courses?", "remark": "positive", "label": "1", "score": "0.4318810999393463"}
{"logic": "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in ascending order )", "text": "What are the names of singers ordered by ascending net worth?", "remark": "positive", "label": "1", "score": "0.4015966057777405"}
{"logic": "( the maximum of ( accelerate ) ) , ( cylinders ) that belongs to ( cars data ) , grouped by ( cylinders )", "text": "What is the maximum accelerate for all the different cylinders?", "remark": "positive", "label": "1", "score": "0.391272634267807"}
{"logic": "( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , that have ( ( sourceairport of highschooler ) equal to ( cvo ) ), and except that ( ( airline of likes ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of likes ) equal to ( airline of highschooler ) ) ) ) , that have ( ( sourceairport of highschooler ) equal to ( apg ) ))", "text": "Find all uid of airlines that have flights from airport 'CVO' but not from 'APG'.", "remark": "value col", "label": "0", "score": "0.6510276198387146"}
{"logic": "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )", "text": "Count the number of employees for each city.", "remark": "positive", "label": "1", "score": "0.6041440367698669"}
{"logic": "( distinct ( model of likes ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of likes ) equal to ( model of highschooler ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of highschooler ) equal to ( id of area code state ) ) ) ) , that have ( ( year of area code state ) greater than ( 1980 ) )", "text": "What are the different models for the cards produced before 1980?", "remark": "logic", "label": "0", "score": "0.44559645652770996"}
{"logic": "( department description ) that belongs to ( departments ) , that have ( ( department_name ) like ( '%computer%' ) )", "text": "What is the department description for the one whose name does not have the word computer?", "remark": "logic", "label": "0", "score": "0.42084360122680664"}
{"logic": "( birth year ) , ( citizenship ) that belongs to ( singer )", "text": "What are the birth years and citizenships of the singers?", "remark": "positive", "label": "1", "score": "0.37347298860549927"}
{"logic": "( id of catalogs ) , ( name of catalogs ) , ( age of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) ) , grouped by ( id of catalogs ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "find the id, name and age for visitors who visited some museums more than once.", "remark": "positive", "label": "1", "score": "0.6506000757217407"}
{"logic": "( owner id of department ) , ( zip code of department ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of management ) equal to ( dog id of head ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the sum of ( cost of treatment of head ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.", "remark": "positive", "label": "1", "score": "0.6209413409233093"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( ( city of management ) equal to ( aberdeen ) ) or ( ( city of management ) equal to ( abilene ) ) )", "text": "How many flights land in Aberdeen or Abilene?", "remark": "positive", "label": "1", "score": "0.4842737913131714"}
{"logic": "( mpg ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) ) , ordered by ( ( mpg ) in descending order ) , limited to the top ( 1 )", "text": "What is the maximum miles per gallon of the car with 8 cylinders or produced after 1980?", "remark": "logic", "label": "0", "score": "0.43445250391960144"}
{"logic": "( date arrived ) , ( date departed ) that belongs to ( dogs )", "text": "List the departure date for all the dogs.", "remark": "value col", "label": "0", "score": "0.6368641257286072"}
{"logic": "( the number of ( all items ) ) , ( stuid of department ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) ) , grouped by ( stuid of department )", "text": "For students who have pets, how many pets does each student have?", "remark": "positive", "label": "1", "score": "0.5191072225570679"}
{"logic": "( package option ) , ( series name ) that belongs to ( tv channel ) , that have ( ( hight definition tv ) equal to ( yes ) )", "text": "What are the package options and the name of the series for the TV Channel that supports high definition TV?", "remark": "positive", "label": "1", "score": "0.4579281508922577"}
{"logic": "( the average of ( earnings ) ) that belongs to ( poker player )", "text": "Return the average earnings across all poker players.", "remark": "positive", "label": "1", "score": "0.5202415585517883"}
{"logic": "( section name ) that belongs to ( sections ) , ordered by ( ( section name ) in descending order )", "text": "What are the names of the sections in alphabetical order?", "remark": "logic", "label": "0", "score": "0.41779598593711853"}
{"logic": "( distinct ( first name of likes ) ) , ( treatment type description of area code state ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) , and ( ( treatment types ) satisfied that ( ( treatment type code of highschooler ) equal to ( treatment type code of area code state ) ) ) )", "text": "List the last name of all the professionals along with the description of the treatment they have done.", "remark": "value col", "label": "0", "score": "0.6491485834121704"}
{"logic": "( name ) that belongs to ( teacher ) , that have ( ( hometown ) not equal to ( little lever urban distric ) )", "text": "What are the names of the teachers whose hometown is not \"Little Lever Urban District\"?", "remark": "positive", "label": "1", "score": "0.43750473856925964"}
{"logic": "( record company ) that belongs to ( orchestra ) , ordered by ( ( year of founded ) in descending order )", "text": "What are the record companies of orchestras in descending order of years in which they were founded?", "remark": "positive", "label": "1", "score": "0.4041212499141693"}
{"logic": "( note ) that belongs to ( death ) , that have ( ( note ) like ( '%east%' ) )", "text": "What are the notes of the death events which has substring 'East'?", "remark": "positive", "label": "1", "score": "0.4083400070667267"}
{"logic": "( id of department ) , ( name of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) , and ( ( death ) satisfied that ( ( id of management ) equal to ( caused by ship id of head ) ) ) ) , grouped by ( id of department ) , that have ( ( the sum of ( killed of head ) ) greater than ( 10 ) )", "text": "What are the ids and names of the battles that led to more than 10 people killed in total.", "remark": "positive", "label": "1", "score": "0.443419486284256"}
{"logic": "( the maximum of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "Find the maximum weight for each type of pet. List the maximum weight and pet type.", "remark": "positive", "label": "1", "score": "0.6265647411346436"}
{"logic": "( num of staff ) , ( open year ) that belongs to ( museum ) , that have ( ( name ) equal to ( 'plaza museum' ) )", "text": "What are the opening year of the museum named Plaza Museum?", "remark": "value col", "label": "0", "score": "0.4551723599433899"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department )", "text": "Show the names of high school students and their corresponding number of friends.", "remark": "positive", "label": "1", "score": "0.6246421337127686"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "What are the ids of students who have friends?", "remark": "logic", "label": "0", "score": "0.36362743377685547"}
{"logic": "( the number of ( all items ) ) , ( location ) that belongs to ( shop ) , grouped by ( location )", "text": "How many shops are there in each location?", "remark": "positive", "label": "1", "score": "0.47716009616851807"}
{"logic": "( name of department ) , ( orchestra of management ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of department ) equal to ( conductor id of management ) ) ) )", "text": "Show the names of conductors and the orchestras they have conducted.", "remark": "positive", "label": "1", "score": "0.640060544013977"}
{"logic": "( first name of department ) , ( name of management ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , that have ( ( state of department ) equal to ( 'virginia' ) )", "text": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.", "remark": "positive", "label": "1", "score": "0.657630443572998"}
{"logic": "( name of highschooler ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of likes ) equal to ( teacher id of highschooler ) ) ) ) , grouped by ( name of highschooler ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show names of teachers that teach at most two courses.", "remark": "logic", "label": "0", "score": "0.6322527527809143"}
{"logic": "( episode ) , ( rating ) that belongs to ( tv series ) , ordered by ( ( rating ) in descending order ) , limited to the top ( 3 )", "text": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.", "remark": "positive", "label": "1", "score": "0.6269776225090027"}
{"logic": "( nationality ) , ( the number of ( all items ) ) that belongs to ( people ) , grouped by ( nationality )", "text": "What are different nationalities of people and the corresponding people from each nation?", "remark": "logic", "label": "0", "score": "0.403114914894104"}
{"logic": "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of likes ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( ( language of highschooler ) equal to ( english ) ) and ( ( isofficial of highschooler ) equal to ( t ) ) ) ) )", "text": "Give the mean life expectancy of countries in which English is the official language.", "remark": "logic", "label": "0", "score": "0.5932055711746216"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )", "text": "For each language, list the number of TV Channels that not use it.", "remark": "logic", "label": "0", "score": "0.6302485466003418"}
{"logic": "( area code of head ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) , and ( ( area code state ) satisfied that ( ( state of management ) equal to ( state of head ) ) ) ) , that have ( ( contestant name of department ) equal to ( 'tabatha gehling' ) ), and intersect with ( ( area code of head ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of department ) equal to ( contestant number of management ) ) ) , and ( ( area code state ) satisfied that ( ( state of management ) equal to ( state of head ) ) ) ) , that have ( ( contestant name of department ) equal to ( 'kelly clauss' ) ))", "text": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.", "remark": "positive", "label": "1", "score": "0.6572179794311523"}
{"logic": "( title of management ) , ( name of department ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) )", "text": "What are the song titles and singer names?", "remark": "positive", "label": "1", "score": "0.3937391936779022"}
{"logic": "( the number of ( all items ) ) that belongs to ( employee )", "text": "What are the name of employees?", "remark": "value col", "label": "0", "score": "0.4084767699241638"}
{"logic": "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of likes ) , ( last name of likes ) , ( cell number of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ) , grouped by ( professional id of likes ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "Find the id, last name and cell phone of the professionals who live in the state of Indiana and have performed more than two treatments.", "remark": "logic", "label": "0", "score": "0.6454077959060669"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "text": "What are the names of high schoolers who have 3 or more friends?", "remark": "positive", "label": "1", "score": "0.42568328976631165"}
{"logic": "( distinct ( semester id of management ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of management ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of department ) equal to ( degree program id of management ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))", "text": "What is the id of the semester that had both Masters and Bachelors students enrolled?", "remark": "positive", "label": "1", "score": "0.4074084758758545"}
{"logic": "( make of highschooler ) , ( year of likes ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( year of likes ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )", "text": "What is the maker id of the carr produced in the earliest year and what year was it?", "remark": "value col", "label": "0", "score": "0.46189478039741516"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( continent of department ) equal to ( asia ) ) , grouped by ( language of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which language is the most popular on the Asian continent?", "remark": "positive", "label": "1", "score": "0.4322858154773712"}
{"logic": "( flightno of likes ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of likes ) equal to ( airportcode of highschooler ) ) ) ) , that have ( ( city of highschooler ) equal to ( aberdeen ) )", "text": "Give the flight numbers of flights leaving for Aberdeen.", "remark": "logic", "label": "0", "score": "0.6659473180770874"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , grouped by ( student id of department )", "text": "Show the names of high schoolers who have likes, and numbers of likes for each.", "remark": "positive", "label": "1", "score": "0.6042191386222839"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which airline has most number of flights?", "remark": "positive", "label": "1", "score": "0.4611227810382843"}
{"logic": "( series name of likes ) , ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( directed by of highschooler ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of likes ) , ( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( directed by of highschooler ) equal to ( 'ben jones' ) ))", "text": "Find the series name of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?", "remark": "value col", "label": "0", "score": "0.6414849758148193"}
{"logic": "( money rank of management ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , ordered by ( ( height of department ) in descending order ) , limited to the top ( 1 )", "text": "Return the money rank of the poker player with the greatest height.", "remark": "positive", "label": "1", "score": "0.6366226673126221"}
{"logic": "( document id ) , ( template id ) , ( document description ) that belongs to ( documents ) , that have ( ( document name ) equal to ( robbin cv ) )", "text": "Return the document id, template id, and description for the document with the name Robbin CV.", "remark": "positive", "label": "1", "score": "0.6447934508323669"}
{"logic": "( name of catalogs ) , ( age of catalogs ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of catalogs ) equal to ( visitor id of catalog structure ) ) ) ) , ordered by ( ( num of ticket of catalog structure ) in descending order ) , limited to the top ( 1 )", "text": "Find the name and age of the visitor who bought the most tickets at once.", "remark": "positive", "label": "1", "score": "0.6659608483314514"}
{"logic": "( name of catalog structure ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of catalogs ) equal to ( shop id of catalog structure ) ) ) ) , grouped by ( shop id of catalogs ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which shop has the most employees? Give me the shop name.", "remark": "positive", "label": "1", "score": "0.5999545454978943"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ))", "text": "Show names of all high school students who do not have any friends.", "remark": "positive", "label": "1", "score": "0.6404240131378174"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of department ) equal to ( airportcode of management ) ) ) ) , that have ( ( city of management ) equal to ( aberdeen ) )", "text": "How many flights depart from City Aberdeen?", "remark": "positive", "label": "1", "score": "0.4773060083389282"}
{"logic": "( first name of likes ) , ( middle name of likes ) , ( last name of likes ) , ( student id of likes ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of likes ) equal to ( student id of highschooler ) ) ) ) , grouped by ( student id of likes ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )", "text": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 3 degree programs in one semester?", "remark": "value int", "label": "0", "score": "0.42331233620643616"}
{"logic": "( name of catalogs ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of catalogs ) equal to ( employee id of catalog structure ) ) ) ) , ordered by ( ( bonus of catalog structure ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the employee who got the highest one time bonus.", "remark": "positive", "label": "1", "score": "0.6329163908958435"}
{"logic": "( model of department ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of management ) ) ) ) , ordered by ( ( horsepower of management ) in ascending order ) , limited to the top ( 1 )", "text": "What is the model of the car with the smallest amount of horsepower?", "remark": "positive", "label": "1", "score": "0.41962841153144836"}
{"logic": "( name of catalog structure ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of catalogs ) equal to ( shop id of catalog structure ) ) ) ) , grouped by ( shop id of catalogs ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the shop that is hiring the largest number of employees?", "remark": "positive", "label": "1", "score": "0.4355084002017975"}
{"logic": "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )", "text": "What is the average horsepower for all cards produced before 1990?", "remark": "value int", "label": "0", "score": "0.4202568233013153"}
{"logic": "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))", "text": "Find the states where both owners and professionals live.", "remark": "positive", "label": "1", "score": "0.619110107421875"}
{"logic": "( the average of ( age ) ) that belongs to ( dogs )", "text": "What is the average age of all the dogs?", "remark": "positive", "label": "1", "score": "0.41005489230155945"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( french ) ))", "text": "Give the names of nations that speak both English and French.", "remark": "positive", "label": "1", "score": "0.5978087186813354"}
{"logic": "( the sum of ( population ) ) , ( the average of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( north america ) ) and ( ( surfacearea ) greater than ( 3000 ) ) )", "text": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000\uff1f", "remark": "positive", "label": "1", "score": "0.4964826703071594"}
{"logic": "( title of highschooler ) , ( name of likes ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) )", "text": "What are the song titles?", "remark": "value col", "label": "0", "score": "0.38078823685646057"}
{"logic": "( the number of ( all items ) ) , ( name of catalog structure ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of catalogs ) equal to ( shop id of catalog structure ) ) ) ) , grouped by ( name of catalog structure )", "text": "For each shop, return the number of employees working there and the name of the shop.", "remark": "positive", "label": "1", "score": "0.6533753871917725"}
{"logic": "( the number of ( all items ) ) that belongs to ( teacher )", "text": "What is the total count of teachers?", "remark": "positive", "label": "1", "score": "0.4047633111476898"}
{"logic": "( name of department ) , ( the sum of ( sales of management ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( name of department )", "text": "For each singer name, what is the total sales for their songs?", "remark": "positive", "label": "1", "score": "0.46709927916526794"}
{"logic": "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity for the stadium with the lowest average attendance?", "remark": "logic", "label": "0", "score": "0.4073629677295685"}
{"logic": "( course name of department ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of department ) equal to ( course id of management ) ) ) ) , grouped by ( course name of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the course with the most students enrolled?", "remark": "positive", "label": "1", "score": "0.4435998499393463"}
{"logic": "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the winner who has the lowest rank points and participated in the Australian Open tourney.", "remark": "logic", "label": "0", "score": "0.6329501271247864"}
{"logic": "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "Find the weight of the youngest dog.", "remark": "positive", "label": "1", "score": "0.5823038816452026"}
{"logic": "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )", "text": "How much does the oldest dog weigh?", "remark": "logic", "label": "0", "score": "0.45905807614326477"}
{"logic": "( nationality ) , ( the number of ( all items ) ) that belongs to ( people ) , grouped by ( nationality )", "text": "How many people are there of each nationality?", "remark": "positive", "label": "1", "score": "0.44901683926582336"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of department ) equal to ( teacher id of management ) ) ) ) , grouped by ( name of management )", "text": "What are the names of the teachers and how many courses do they teach?", "remark": "positive", "label": "1", "score": "0.4382622241973877"}
{"logic": "( distinct ( region of department ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) or ( ( language of management ) equal to ( dutch ) ) )", "text": "What are the regions that use English or Dutch?", "remark": "positive", "label": "1", "score": "0.37896260619163513"}
{"logic": "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )", "text": "What are the names of conductors whose nationalities are \"USA\"?", "remark": "logic", "label": "0", "score": "0.4394437074661255"}
{"logic": "( name ) , ( result ) , ( bulgarian commander ) that belongs to ( battle ), and except that ( ( name of department ) , ( result of department ) , ( bulgarian commander of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) ) , that have ( ( location of management ) equal to ( 'english channel' ) ))", "text": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.", "remark": "positive", "label": "1", "score": "0.6604148745536804"}
{"logic": "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "What are the towns from which at least three teachers come from?", "remark": "value int", "label": "0", "score": "0.4345751702785492"}
{"logic": "( distinct ( model of management ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of department ) equal to ( model of management ) ) ) , and ( ( car makers ) satisfied that ( ( maker of management ) equal to ( id of head ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of department ) equal to ( id of trip ) ) ) ) , that have ( ( ( fullname of head ) equal to ( 'general motors' ) ) or ( ( weight of trip ) greater than ( 3500 ) ) )", "text": "What are the different models created by either the car maker General Motors or weighed more than 3500?", "remark": "positive", "label": "1", "score": "0.4013427197933197"}
{"logic": "( cylinders of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( model of management ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of department ) in ascending order ) , limited to the top ( 1 )", "text": "For a volvo model, how many cylinders does the version with least accelerate have?", "remark": "positive", "label": "1", "score": "0.5243977308273315"}
{"logic": "( name of management ) , ( capacity of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) greater than or equal to ( 2014 ) ) , grouped by ( stadium id of management ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name and capacity of the stadium  with the most concerts after 2013?", "remark": "positive", "label": "1", "score": "0.41575756669044495"}
{"logic": "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) or ( ( continent ) equal to ( europe ) ) )", "text": "What is the total surface area of the continents Asia and Europe?", "remark": "positive", "label": "1", "score": "0.41192808747291565"}
{"logic": "( the number of ( distinct ( pettype ) ) ) that belongs to ( pets )", "text": "Find the number of distinct type of pets.", "remark": "positive", "label": "1", "score": "0.5682013630867004"}
{"logic": "( distinct ( countrycode ) ) that belongs to ( countrylanguage ) , that have ( ( language ) not equal to ( english ) )", "text": "What are the country codes of countries where people use languages other than English?", "remark": "positive", "label": "1", "score": "0.3853626847267151"}
{"logic": "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )", "text": "What the smallest version number and its template type code?", "remark": "positive", "label": "1", "score": "0.43082132935523987"}
{"logic": "( the number of ( all items ) ) that belongs to ( airports )", "text": "Return the number of  airports.", "remark": "positive", "label": "1", "score": "0.5737959146499634"}
{"logic": "( distinct ( semester id of highschooler ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of likes ) equal to ( degree program id of highschooler ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of highschooler ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of likes ) equal to ( degree program id of highschooler ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))", "text": "Find the semester when Master students got enrolled in.", "remark": "value col", "label": "0", "score": "0.6669282913208008"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of department ) equal to ( stuid of management ) ) ) , and ( ( pets ) satisfied that ( ( petid of management ) equal to ( petid of head ) ) ) ) , that have ( ( ( sex of department ) equal to ( 'f' ) ) and ( ( pettype of head ) equal to ( 'dog' ) ) )", "text": "Find the number of dog pets that are raised by female students (with sex F).", "remark": "positive", "label": "1", "score": "0.6018617153167725"}
{"logic": "( template id ) that belongs to ( templates ), and except that ( ( template id ) that belongs to ( documents ))", "text": "What are the ids for templates that are used in documents?", "remark": "logic", "label": "0", "score": "0.40212106704711914"}
{"logic": "( name of employee ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of employee ) equal to ( employee id of evaluation ) ) ) ) , grouped by ( employee id of evaluation ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which employee received the fewest awards in evaluations? Give me the employee name.", "remark": "logic", "label": "0", "score": "0.572372317314148"}
{"logic": "( name of department ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) )", "text": "Return the names of all the poker players.", "remark": "positive", "label": "1", "score": "0.6236458420753479"}
{"logic": "( airportcode of likes ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of likes ) equal to ( destairport of highschooler ) ) or ( ( airportcode of likes ) equal to ( sourceairport of highschooler ) ) ) ) ) , grouped by ( airportcode of likes ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "What is the code of airport that has the most number of flights?", "remark": "logic", "label": "0", "score": "0.4297754466533661"}
{"logic": "( name ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( lifeexpectancy ) ) , limited to the top ( 1 )", "text": "What is the name of country that has the shortest life expectancy in Asia?", "remark": "positive", "label": "1", "score": "0.42724910378456116"}
{"logic": "( the number of ( all items ) ) that belongs to ( pets ) , that have ( ( weight ) greater than ( 10 ) )", "text": "Find the number of pets whose weight is heavier than 10.", "remark": "positive", "label": "1", "score": "0.5782780647277832"}
{"logic": "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )", "text": "Give the flight ids of flights leaving from APG.", "remark": "value col", "label": "0", "score": "0.6601354479789734"}
{"logic": "( distinct ( breed code ) ) , ( size code ) that belongs to ( dogs )", "text": "Find the distinct breed type and size type combinations for dogs.", "remark": "positive", "label": "1", "score": "0.5581534504890442"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ) , that have ( ( name of management ) equal to ( kyle ) )", "text": "Count the number of friends Kyle has.", "remark": "positive", "label": "1", "score": "0.6383036375045776"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 6 ) )", "text": "What is the number of carsw ith over 6 cylinders?", "remark": "positive", "label": "1", "score": "0.36931344866752625"}
{"logic": "( the number of ( all items ) ) that belongs to ( countries )", "text": "What are the countries exist?", "remark": "value col", "label": "0", "score": "0.3996816873550415"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of department ) equal to ( maker of management ) ) ) ) , that have ( ( fullname of department ) equal to ( 'american motor company' ) )", "text": "What is the number of car models created by the car maker American Motor Company?", "remark": "positive", "label": "1", "score": "0.4354771673679352"}
{"logic": "( region ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of management ) equal to ( kabul ) )", "text": "Which region is the city Kabul located in?", "remark": "positive", "label": "1", "score": "0.4933136999607086"}
{"logic": "( contestant name ) that belongs to ( contestants ) , that have ( ( contestant name ) not equal to ( 'jessie alloway' ) )", "text": "What are the names of the contestants whose names are 'Jessie Alloway'", "remark": "logic", "label": "0", "score": "0.5221155881881714"}
{"logic": "( the number of ( all items ) ) , ( directed by ) that belongs to ( cartoon ) , grouped by ( directed by )", "text": "Find the minimum number of cartoons directed by each of the listed directors.", "remark": "logic", "label": "0", "score": "0.5961161255836487"}
{"logic": "( first name ) , ( country code ) that belongs to ( players ) , ordered by ( ( birth date ) ) , limited to the top ( 1 )", "text": "Find the first name and country code of the youngest player.", "remark": "logic", "label": "0", "score": "0.5891807079315186"}
{"logic": "( name ) that belongs to ( stadium ) , that have ( ( stadium_id ) not in ( ( stadium id ) that belongs to ( concert ) ) )", "text": "What are the names of the stadiums with some concerts?", "remark": "logic", "label": "0", "score": "0.4218357801437378"}
{"logic": "( name ) that belongs to ( highschooler ), and except that ( ( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ))", "text": "What are the names of students who have no friends?", "remark": "positive", "label": "1", "score": "0.4225199222564697"}
{"logic": "( countryname of department ) , ( countryid of department ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of department ) equal to ( country of management ) ) ) ) , grouped by ( countryid of department ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "text": "What are the names and ids of all countries with at least one car maker?", "remark": "positive", "label": "1", "score": "0.42160388827323914"}
{"logic": "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )", "text": "Return the names of conductors that do not have the nationality \"USA\".", "remark": "positive", "label": "1", "score": "0.5928975939750671"}
{"logic": "all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( english ) ) and ( ( isofficial ) equal to ( t ) ) ) and all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( ( language of management ) equal to ( dutch ) ) and ( ( isofficial ) equal to ( t ) ) )", "text": "What are the countries where either English or Dutch is the official language?", "remark": "positive", "label": "1", "score": "0.3814532160758972"}
{"logic": "( the sum of ( bonus ) ) that belongs to ( evaluation )", "text": "Find the total amount of bonus given in all the evaluations.", "remark": "positive", "label": "1", "score": "0.5709285736083984"}
{"logic": "( the number of ( all items ) ) that belongs to ( professionals ) , that have ( ( professional_id ) not in ( ( professional id ) that belongs to ( treatments ) ) )", "text": "Find the number of professionals who have not treated any dogs.", "remark": "positive", "label": "1", "score": "0.5919524431228638"}
{"logic": "( country of likes ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of likes ) equal to ( channel of highschooler ) ) ) ) , that have ( ( written by of highschooler ) equal to ( 'todd casey' ) )", "text": "What are the countries that have cartoons that were written by Todd Casey?", "remark": "logic", "label": "0", "score": "0.459961473941803"}
{"logic": "( section name ) that belongs to ( sections ) , ordered by ( ( section name ) in descending order )", "text": "List the section_name in reversed lexicographical order.", "remark": "positive", "label": "1", "score": "0.6304115653038025"}
{"logic": "( year ) that belongs to ( matches ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Find the year that has the most number of matches.", "remark": "positive", "label": "1", "score": "0.5900101661682129"}
{"logic": "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )", "text": "Give the city and country not for the Alton airport.", "remark": "logic", "label": "0", "score": "0.5752142071723938"}
{"logic": "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )", "text": "Return the ids of templates that have the code PP or PPT.", "remark": "positive", "label": "1", "score": "0.5943043828010559"}
{"logic": "( name ) , ( age ) , ( weight ) that belongs to ( dogs ) , that have ( ( abandoned yn ) equal to ( 1 ) )", "text": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.", "remark": "positive", "label": "1", "score": "0.5966151356697083"}
{"logic": "( name ) that belongs to ( shop ) , that have ( ( shop_id ) not in ( ( shop id ) that belongs to ( hiring ) ) )", "text": "Find the name of the shops that do not hire any employee.", "remark": "positive", "label": "1", "score": "0.6385026574134827"}
{"logic": "( episode ) , ( rating ) that belongs to ( tv series ) , ordered by ( ( rating ) in descending order ) , limited to the top ( 3 )", "text": "What are 3 most highly rated episodes in the TV series table and what were those ratings?", "remark": "positive", "label": "1", "score": "0.4099183976650238"}
{"logic": "( city of likes ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of likes ) equal to ( destairport of highschooler ) ) ) ) , grouped by ( city of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has least number of arriving flights?", "remark": "logic", "label": "0", "score": "0.4687081277370453"}
{"logic": "( the sum of ( population ) ) , ( the maximum of ( gnp ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "How many people live in America, and what is the largest GNP among them?", "remark": "value str", "label": "0", "score": "0.45329704880714417"}
{"logic": "( the minimum of ( loser rank ) ) that belongs to ( matches )", "text": "What is the best rank of losers across all matches?", "remark": "positive", "label": "1", "score": "0.37981346249580383"}
{"logic": "( template type code ) , ( the number of ( all items ) ) that belongs to ( templates ) , grouped by ( template type code )", "text": "What are the different template type codes, and how many templates correspond to each?", "remark": "positive", "label": "1", "score": "0.40262529253959656"}
{"logic": "( countrycode ) that belongs to ( countrylanguage ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))", "text": "Return the country codes for countries that do not speak Spanish.", "remark": "value str", "label": "0", "score": "0.5911054611206055"}
{"logic": "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))", "text": "Show the ids of high schoolers who have friends and are also liked by someone else.", "remark": "positive", "label": "1", "score": "0.5696943998336792"}
{"logic": "( country of department ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of department ) equal to ( channel of management ) ) ) ) , that have ( ( written by of management ) equal to ( 'todd casey' ) )", "text": "What are the countries that have cartoons on TV that were written by Todd Casey?", "remark": "positive", "label": "1", "score": "0.4564249813556671"}
{"logic": "( major record format ) that belongs to ( orchestra ) , grouped by ( major record format ) , ordered by ( ( the number of ( all items ) ) in ascending order )", "text": "Please show the record formats of orchestras in ascending order of count.", "remark": "positive", "label": "1", "score": "0.5476265549659729"}
{"logic": "( owner id of department ) , ( first name of management ) , ( last name of management ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner owns the most dogs? List the owner id, first name and last name.", "remark": "positive", "label": "1", "score": "0.6306462287902832"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( apg ) ), and intersect with ( ( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( cvo ) ))", "text": "Which airlines have departing flights from both APG and CVO airports?", "remark": "positive", "label": "1", "score": "0.4797038435935974"}
{"logic": "( distinct ( id of department ) ) , ( name of department ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of department ) equal to ( lost in battle of management ) ) ) ) , that have ( ( ship type of management ) equal to ( 'brig' ) )", "text": "What are the different ids and names of the battles that lost any 'Brig' type shipes?", "remark": "positive", "label": "1", "score": "0.41508418321609497"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( cvo ) ), and except that ( ( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( apg ) ))", "text": "Which airlines have departures from CVO but not from APG airports?", "remark": "positive", "label": "1", "score": "0.4868752956390381"}
{"logic": "( first name of likes ) , ( name of highschooler ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) ) , that have ( ( state of likes ) equal to ( 'virginia' ) )", "text": "Find the last names of owners living in Virginia and the names of dogs they own.", "remark": "value col", "label": "0", "score": "0.6636894941329956"}
{"logic": "( template id of likes ) , ( template type code of highschooler ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , grouped by ( template id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the id for the template used by the most documents?", "remark": "value col", "label": "0", "score": "0.4383413791656494"}
{"logic": "( airportcode of department ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of department ) equal to ( destairport of management ) ) or ( ( airportcode of department ) equal to ( sourceairport of management ) ) ) ) ) , grouped by ( airportcode of department ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "What is the code of airport that has fewest number of flights?", "remark": "positive", "label": "1", "score": "0.4299819767475128"}
{"logic": "( distinct ( name of department ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , that have ( ( sales of management ) greater than ( 300000 ) )", "text": "Show distinct names of singers that have songs with sales more than 300000.", "remark": "positive", "label": "1", "score": "0.61016446352005"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( year ) equal to ( 1980 ) )", "text": "In 1980, how many cars were made?", "remark": "positive", "label": "1", "score": "0.4859510660171509"}
{"logic": "( template type code of department ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of department ) equal to ( template id of management ) ) ) ) , grouped by ( template type code of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which template type code is used by most number of documents?", "remark": "positive", "label": "1", "score": "0.4620746076107025"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( horsepower ) greater than ( 150 ) )", "text": "What is the number of cars with a horsepower greater than 150?", "remark": "positive", "label": "1", "score": "0.392370343208313"}
{"logic": "( language of highschooler ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of likes ) equal to ( countrycode of highschooler ) ) ) ) , that have ( ( continent of likes ) equal to ( asia ) ) , grouped by ( language of highschooler ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the language that is used by the largest number of American nations?", "remark": "value str", "label": "0", "score": "0.40943998098373413"}
{"logic": "( the average of ( weight ) ) , ( year ) that belongs to ( cars data ) , grouped by ( year )", "text": "What is the maximum weight of cars each year?", "remark": "logic", "label": "0", "score": "0.3745449483394623"}
{"logic": "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( tv series )", "text": "What is minimum and maximum share of TV series?", "remark": "positive", "label": "1", "score": "0.36060628294944763"}
{"logic": "( professional id of likes ) , ( cell number of likes ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of likes ) equal to ( professional id of highschooler ) ) ) ) , grouped by ( professional id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Which professionals have done at least three types of treatments? List the professional id and cell phone.", "remark": "value int", "label": "0", "score": "0.6102392077445984"}
{"logic": "( name ) that belongs to ( stadium ), and except that ( ( name of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2014 ) ))", "text": "Show names for all stadiums except for stadiums having a concert in year 2014.", "remark": "positive", "label": "1", "score": "0.5762486457824707"}
{"logic": "( airportcode of likes ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of likes ) equal to ( destairport of highschooler ) ) or ( ( airportcode of likes ) equal to ( sourceairport of highschooler ) ) ) ) ) , grouped by ( airportcode of likes ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "Give the code of the airport with the most flights.", "remark": "logic", "label": "0", "score": "0.6400331258773804"}
{"logic": "( birth year ) , ( citizenship ) that belongs to ( singer )", "text": "What are the birth year and citizenship of singers?", "remark": "positive", "label": "1", "score": "0.3505938649177551"}
{"logic": "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )", "text": "Return the template type description of the template type with the code BD.", "remark": "value str", "label": "0", "score": "0.5577439069747925"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines )", "text": "What are the names of airlines?", "remark": "value col", "label": "0", "score": "0.43396061658859253"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of likes ) equal to ( airportcode of highschooler ) ) ) , and ( ( airlines ) satisfied that ( ( uid of area code state ) equal to ( airline of likes ) ) ) ) , that have ( ( ( city of highschooler ) equal to ( aberdeen ) ) and ( ( airline of area code state ) equal to ( united airlines ) ) )", "text": "Count the number of United Airlines flights that depart from Aberdeen.", "remark": "logic", "label": "0", "score": "0.6472468376159668"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , that have ( ( template type code of highschooler ) equal to ( 'ppt' ) )", "text": "How many documents are using the template with type code 'AD'?", "remark": "value str", "label": "0", "score": "0.48351365327835083"}
{"logic": "( name of employee ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of employee ) equal to ( employee id of evaluation ) ) ) ) , ordered by ( ( bonus of evaluation ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the employee who got the lowest one time bonus.", "remark": "logic", "label": "0", "score": "0.6395431756973267"}
{"logic": "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "What is the average and average age for each pet type?", "remark": "value col", "label": "0", "score": "0.36634156107902527"}
{"logic": "( the number of ( distinct ( result ) ) ) that belongs to ( battle )", "text": "How many different results are there for the battles?", "remark": "positive", "label": "1", "score": "0.4055323898792267"}
{"logic": "( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( name ) equal to ( brazil ) )", "text": "Give me Brazil\u2019s population and life expectancies.", "remark": "positive", "label": "1", "score": "0.5643572807312012"}
{"logic": "( city of likes ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of likes ) equal to ( destairport of highschooler ) ) ) ) , grouped by ( city of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which city has the least frequent destination airport?", "remark": "logic", "label": "0", "score": "0.47392889857292175"}
{"logic": "( id ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )", "text": "What is Kyle's id?", "remark": "positive", "label": "1", "score": "0.42735162377357483"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 4 ) )", "text": "What is the number of cars with more than 4 cylinders?", "remark": "positive", "label": "1", "score": "0.3817315101623535"}
{"logic": "( the number of ( all items ) ) , ( hand ) that belongs to ( players ) , grouped by ( hand )", "text": "Find the average age of players for each hand type.", "remark": "value col", "label": "0", "score": "0.5626519918441772"}
{"logic": "( the average of ( earnings of management ) ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of department ) equal to ( people id of management ) ) ) ) , that have ( ( height of department ) greater than ( 200 ) )", "text": "What is the average earnings of poker players with height higher than 200?", "remark": "positive", "label": "1", "score": "0.408035546541214"}
{"logic": "( the number of ( all items ) ) that belongs to ( area code state )", "text": "How many states are there?", "remark": "positive", "label": "1", "score": "0.4915889799594879"}
{"logic": "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )", "text": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy less than 72?", "remark": "logic", "label": "0", "score": "0.38516971468925476"}
{"logic": "( flightno of department ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( uid of management ) equal to ( airline of department ) ) ) ) , that have ( ( airline of management ) equal to ( united airlines ) )", "text": "What are flight numbers of Airline \"United Airlines\"?", "remark": "positive", "label": "1", "score": "0.43085336685180664"}
{"logic": "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )", "text": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.", "remark": "positive", "label": "1", "score": "0.6567434668540955"}
{"logic": "( owner id of likes ) , ( first name of highschooler ) , ( last name of highschooler ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of likes ) equal to ( owner id of highschooler ) ) ) ) , grouped by ( owner id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which owner owns the least dogs? List the owner id, first name.", "remark": "logic", "label": "0", "score": "0.6003746390342712"}
{"logic": "( name of highschooler ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Give the name of the student with the least likes.", "remark": "logic", "label": "0", "score": "0.6071904301643372"}
{"logic": "( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( apg ) ), and intersect with ( ( airline of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , that have ( ( sourceairport of management ) equal to ( cvo ) ))", "text": "Find all airlines that have flights from both airports 'APG' and 'CVO'.", "remark": "positive", "label": "1", "score": "0.6582934856414795"}
{"logic": "( template id ) , ( the number of ( all items ) ) that belongs to ( documents ) , grouped by ( template id )", "text": "What are all different template ids used for documents, and how many times were each of them used?", "remark": "positive", "label": "1", "score": "0.41231125593185425"}
{"logic": "( template type code ) , ( template type description ) that belongs to ( ref template types )", "text": "What are the type codes and descriptions for all template types?", "remark": "positive", "label": "1", "score": "0.37027138471603394"}
{"logic": "( the number of ( all items ) ) that belongs to ( conductor )", "text": "How many conductors are there?", "remark": "positive", "label": "1", "score": "0.4763568937778473"}
{"logic": "( owner id of department ) , ( first name of management ) , ( last name of management ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of department ) equal to ( owner id of management ) ) ) ) , grouped by ( owner id of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Return the owner id, first name and last name of the owner who has the most dogs.", "remark": "positive", "label": "1", "score": "0.6426394581794739"}
{"logic": "( semester name ) that belongs to ( semesters ) , that have ( ( semester_id ) not in ( ( ( semester id ) that belongs to ( student enrolment ) ) ) )", "text": "What is the name of the semester with no students enrolled?", "remark": "positive", "label": "1", "score": "0.4070495069026947"}
{"logic": "( birth year ) , ( citizenship ) that belongs to ( singer )", "text": "What are the birth years of the singers?", "remark": "value col", "label": "0", "score": "0.3840344548225403"}
{"logic": "( the number of ( all items ) ) that belongs to ( airlines )", "text": "How many airlines do we have?", "remark": "positive", "label": "1", "score": "0.49525147676467896"}
{"logic": "( citizenship ) , ( the maximum of ( net worth millions ) ) that belongs to ( singer ) , grouped by ( citizenship )", "text": "For each citizenship, what is the maximum net worth?", "remark": "positive", "label": "1", "score": "0.45953333377838135"}
{"logic": "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )", "text": "Which continent is Anguilla in?", "remark": "positive", "label": "1", "score": "0.4194636940956116"}
{"logic": "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )", "text": "Show all template type codes with less than three templates.", "remark": "positive", "label": "1", "score": "0.5993733406066895"}
{"logic": "( template id of management ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of department ) equal to ( template type code of management ) ) ) ) , that have ( ( template type description of department ) equal to ( presentation ) )", "text": "What are the template ids with template type description \"Presentation\".", "remark": "positive", "label": "1", "score": "0.41587793827056885"}
{"logic": "( paragraph id of department ) , ( paragraph text of department ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( 'welcome to ny' ) )", "text": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?", "remark": "positive", "label": "1", "score": "0.49472299218177795"}
{"logic": "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )", "text": "Find the name, population and expected life length of American country with the largest area?", "remark": "value str", "label": "0", "score": "0.556320309638977"}
{"logic": "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( accelerate ) greater than ( accelerate ) that belongs to ( cars data ) , ordered by ( ( horsepower ) in descending order ) , limited to the top ( 1 ) )", "text": "What is the number of cars with a greater accelerate than the one with the most horsepower?", "remark": "positive", "label": "1", "score": "0.41399529576301575"}
{"logic": "( name of employee ) , ( age of employee ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of employee ) equal to ( visitor id of evaluation ) ) ) ) , ordered by ( ( num of ticket of evaluation ) in descending order ) , limited to the top ( 1 )", "text": "Find the name of the visitor who bought the most tickets at once.", "remark": "value col", "label": "0", "score": "0.6584193110466003"}
{"logic": "( continent of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , grouped by ( continent of department ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which continent speaks the most languages?", "remark": "positive", "label": "1", "score": "0.43157270550727844"}
{"logic": "( name ) that belongs to ( highschooler ) , that have ( ( grade ) equal to ( 10 ) )", "text": "What are the names of all high schoolers in grade 10?", "remark": "positive", "label": "1", "score": "0.41432029008865356"}
{"logic": "( accelerate of department ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of department ) equal to ( makeid of management ) ) ) ) , that have ( ( make of management ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "What is the accelerate of the car make amc hornet sportabout (sw)?", "remark": "positive", "label": "1", "score": "0.4579077363014221"}
{"logic": "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))", "text": "Which first names are used for professionals or owners but are not used as dog names?", "remark": "positive", "label": "1", "score": "0.4175487458705902"}
{"logic": "( property name ) that belongs to ( properties ) , that have ( ( property type code ) equal to ( house ) ) and ( property name ) that belongs to ( properties ) , that have ( ( ( property type code ) equal to ( apartment ) ) and ( ( room count ) greater than ( 1 ) ) )", "text": "What are the names of properties that are either houses or apartments with more than 1 room?", "remark": "positive", "label": "1", "score": "0.40520623326301575"}
{"logic": "( name of likes ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of likes ) equal to ( singer id of highschooler ) ) ) ) , grouped by ( name of likes ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the names of singers that have more than three songs.", "remark": "value int", "label": "0", "score": "0.594010591506958"}
{"logic": "( the number of ( distinct ( professional id ) ) ) that belongs to ( treatments )", "text": "Find the number of professionals who have ever treated dogs.", "remark": "positive", "label": "1", "score": "0.6131097674369812"}
{"logic": "( distinct ( first name of likes ) ) , ( middle name of likes ) , ( last name of likes ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of likes ) equal to ( student id of highschooler ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of highschooler ) equal to ( degree program id of area code state ) ) ) ) , that have ( ( degree summary name of area code state ) equal to ( 'bachelor' ) )", "text": "Who is enrolled in a Master's degree program? List the first name, middle name, last name.", "remark": "value str", "label": "0", "score": "0.5854721665382385"}
{"logic": "( production code ) , ( channel ) that belongs to ( cartoon ) , ordered by ( ( original air date ) ) , limited to the top ( 1 )", "text": "Find the production code and channel of the most recently aired cartoon.", "remark": "positive", "label": "1", "score": "0.6051339507102966"}
{"logic": "( model of likes ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of likes ) equal to ( id of highschooler ) ) ) ) , ordered by ( ( mpg of highschooler ) in descending order ) , limited to the top ( 1 )", "text": "Which model costs the most gasoline? That is to say, have the maximum miles per gallon.", "remark": "logic", "label": "0", "score": "0.5323566794395447"}
{"logic": "( name ) that belongs to ( people ) , that have ( ( nationality ) not equal to ( russia ) )", "text": "Show names of people whose nationality is not \"Russia\".", "remark": "positive", "label": "1", "score": "0.62746262550354"}
{"logic": "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) equal to ( ako ) )", "text": "Return the name of the airport with code 'AKO'.", "remark": "positive", "label": "1", "score": "0.6048212051391602"}
{"logic": "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )", "text": "What is the weekly rank of TV series with Episode \"A Love of a Lifetime\"?", "remark": "value col", "label": "0", "score": "0.46607542037963867"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of likes ) equal to ( stuid of highschooler ) ) ) ) , that have ( ( age of likes ) greater than ( 20 ) )", "text": "Find number of pets owned by students who are older than 15.", "remark": "value int", "label": "0", "score": "0.597416341304779"}
{"logic": "( year of founded ) that belongs to ( ( orchestra ) , and ( ( performance ) satisfied that ( ( orchestra id of department ) equal to ( orchestra id of management ) ) ) ) , grouped by ( orchestra id of management ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "Show the years in which orchestras that have given more than one performance are founded.", "remark": "positive", "label": "1", "score": "0.62203049659729"}
{"logic": "( abbreviation of department ) , ( country of department ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of department ) equal to ( airline of management ) ) ) ) , grouped by ( airline of department ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "text": "Find the abbreviation and country of the airline that has fewest number of flights?", "remark": "positive", "label": "1", "score": "0.5803671479225159"}
{"logic": "( section name ) , ( section description ) that belongs to ( sections )", "text": "What are the names and descriptions of all the sections?", "remark": "positive", "label": "1", "score": "0.41733303666114807"}
{"logic": "( template type code of likes ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of likes ) equal to ( template id of highschooler ) ) ) ) , that have ( ( document name of highschooler ) equal to ( data base ) )", "text": "What is the template type code of the template used by document without the name \"Data base\"?", "remark": "logic", "label": "0", "score": "0.45913612842559814"}
{"logic": "( name of highschooler ) , ( capacity of highschooler ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of likes ) equal to ( stadium id of highschooler ) ) ) ) , that have ( ( year of likes ) greater than or equal to ( 2014 ) ) , grouped by ( stadium id of highschooler ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Show the stadium name and capacity with most number of concerts in year 2010 or after.", "remark": "value int", "label": "0", "score": "0.6366300582885742"}
{"logic": "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )", "text": "What is the average, minimum, and maximum age of all singers not from France?", "remark": "logic", "label": "0", "score": "0.3610365092754364"}
{"logic": "( visitor id of evaluation ) , ( name of employee ) , ( level of membership of employee ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of employee ) equal to ( visitor id of evaluation ) ) ) ) , grouped by ( visitor id of evaluation ) , ordered by ( ( the sum of ( total spent of evaluation ) ) in descending order ) , limited to the top ( 1 )", "text": "What are the id of visitors who have spent the largest amount of money in total in all museum tickets?", "remark": "value col", "label": "0", "score": "0.43468597531318665"}
{"logic": "( grade ) that belongs to ( highschooler )", "text": "What is the grade of each high schooler?", "remark": "positive", "label": "1", "score": "0.4343808889389038"}
{"logic": "( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( english ) ), and intersect with ( ( name of department ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( language of management ) equal to ( french ) ))", "text": "What are the names of nations speak both English and French?", "remark": "positive", "label": "1", "score": "0.3843454420566559"}
{"logic": "( year of founded ) that belongs to ( ( orchestra ) , and ( ( performance ) satisfied that ( ( orchestra id of likes ) equal to ( orchestra id of highschooler ) ) ) ) , grouped by ( orchestra id of highschooler ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "text": "What are years of founding for orchestras that have had more than two performances?", "remark": "value int", "label": "0", "score": "0.4014674723148346"}
{"logic": "( the number of ( all items ) ) that belongs to ( flights )", "text": "How many flights do we have?", "remark": "positive", "label": "1", "score": "0.4972911775112152"}
{"logic": "( name of management ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) ) , grouped by ( singer id of management )", "text": "What are the names of the singers and number of concerts for each person?", "remark": "positive", "label": "1", "score": "0.40913206338882446"}
{"logic": "( distinct ( first name of department ) ) , ( treatment type description of head ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of department ) equal to ( professional id of management ) ) ) , and ( ( treatment types ) satisfied that ( ( treatment type code of management ) equal to ( treatment type code of head ) ) ) )", "text": "List the first name of all the professionals along with the description of the treatment they have done.", "remark": "positive", "label": "1", "score": "0.6588180661201477"}
{"logic": "( name of highschooler ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of likes ) equal to ( id of highschooler ) ) ) ) , grouped by ( student id of likes ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "text": "Show the names of students who have at most 2 likes.", "remark": "logic", "label": "0", "score": "0.5991629958152771"}
{"logic": "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))", "text": "Find the states where neither owners nor professionals live.", "remark": "logic", "label": "0", "score": "0.6129254698753357"}
{"logic": "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )", "text": "List the name of singers whose citizenship is not \"America\".", "remark": "value str", "label": "0", "score": "0.6235074400901794"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of department ) equal to ( uid of management ) ) ) ) , that have ( ( airline of management ) equal to ( jetblue airways ) )", "text": "How many flights does airline 'JetBlue Airways' have?", "remark": "positive", "label": "1", "score": "0.48305168747901917"}
{"logic": "( line 1 ) , ( line 2 ) that belongs to ( addresses )", "text": "What is the first and second line for all addresses?", "remark": "positive", "label": "1", "score": "0.41870298981666565"}
{"logic": "( name of management ) , ( location of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2014 ) ), and intersect with ( ( name of management ) , ( location of management ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of department ) equal to ( stadium id of management ) ) ) ) , that have ( ( year of department ) equal to ( 2015 ) ))", "text": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.", "remark": "positive", "label": "1", "score": "0.6486067771911621"}
{"logic": "( language of management ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of department ) equal to ( countrycode of management ) ) ) ) , that have ( ( name of department ) equal to ( aruba ) ) , ordered by ( ( percentage ) in descending order ) , limited to the top ( 1 )", "text": "Which language is the most popular in Aruba?", "remark": "positive", "label": "1", "score": "0.41701194643974304"}
{"logic": "( the maximum of ( final table made ) ) that belongs to ( poker player ) , that have ( ( earnings ) less than ( 200000 ) )", "text": "What is the maximum number of final tables made among poker players with earnings less than 300000?", "remark": "value int", "label": "0", "score": "0.37534841895103455"}
{"logic": "( the number of ( all items ) ) that belongs to ( templates )", "text": "How many templates do we have?", "remark": "positive", "label": "1", "score": "0.4908737242221832"}
{"logic": "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )", "text": "Find the number of right handed winners who participated in the WTA Championships.", "remark": "value str", "label": "0", "score": "0.6074922680854797"}
{"logic": "( name of likes ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of likes ) equal to ( conductor id of highschooler ) ) ) ) , grouped by ( conductor id of highschooler ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "What is the name of the conductor who has conducted the least orchestras?", "remark": "logic", "label": "0", "score": "0.42375627160072327"}
{"logic": "( id ) that belongs to ( tv channel ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "text": "What are the ids of all tv channels that have more than 2 TV channels?", "remark": "positive", "label": "1", "score": "0.40202590823173523"}
{"logic": "( name of management ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of department ) equal to ( id of management ) ) ) ), and intersect with ( ( name of management ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of department ) equal to ( id of management ) ) ) ))", "text": "What are the names of high schoolers who both have friends and are liked?", "remark": "positive", "label": "1", "score": "0.4191615581512451"}
{"logic": "( grade ) , ( the number of ( all items ) ) that belongs to ( highschooler ) , grouped by ( grade )", "text": "How many high schoolers are in each grade?", "remark": "positive", "label": "1", "score": "0.4551768898963928"}
{"logic": "( song name ) that belongs to ( singer ) , that have ( ( age ) greater than ( the average of ( age ) ) that belongs to ( singer ) )", "text": "List all song names by singers above the average age.", "remark": "positive", "label": "1", "score": "0.5787714719772339"}
{"logic": "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )", "text": "What is the abbreviation of Airline \"JetBlue Airways\"?", "remark": "positive", "label": "1", "score": "0.46096524596214294"}
{"logic": "( model ) that belongs to ( car names ) , grouped by ( model ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "text": "Which model has the most version(make) of cars?", "remark": "positive", "label": "1", "score": "0.42860785126686096"}
{"logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )", "text": "Count the number of countries in Asia.", "remark": "positive", "label": "1", "score": "0.6042542457580566"}
{"logic": "( the average of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( stadium )", "text": "What is the average and minimum capacities for all stations?", "remark": "value col", "label": "0", "score": "0.38884350657463074"}
{"logic": "( title of management ) , ( name of department ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of department ) equal to ( singer id of management ) ) ) )", "text": "Show titles of songs and names of singers.", "remark": "positive", "label": "1", "score": "0.6322119832038879"}
{"logic": "( the number of ( all items ) ) that belongs to ( teacher )", "text": "What are the ids of the teachers?", "remark": "value col", "label": "0", "score": "0.3720656931400299"}
{"logic": "( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of department ) equal to ( document id of management ) ) ) ) , that have ( ( document name of management ) equal to ( 'summer show' ) )", "text": "How many paragraphs for the document with name 'Summer Show'?", "remark": "positive", "label": "1", "score": "0.5045666098594666"}
{"logic": "( the average of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )", "text": "What is the average weight for each type of pet?", "remark": "positive", "label": "1", "score": "0.4017336964607239"}
{"logic": "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )", "text": "For each language, list the number of TV Channels that use it.", "remark": "positive", "label": "1", "score": "0.6293047070503235"}
{"logic": "( accelerate of likes ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of likes ) equal to ( makeid of highschooler ) ) ) ) , that have ( ( make of highschooler ) equal to ( 'amc hornet sportabout (sw)' ) )", "text": "How many cylinders does the car have that makes amc hornet sportabout (sw)?", "remark": "value col", "label": "0", "score": "0.4770198166370392"}
