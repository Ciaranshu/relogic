{"idx": 0, "logic": "( fname ) that belongs to ( faculty ) , that have ( ( rank ) equal to ( professor ) ) , ordered by ( ( fname ) )", "pred": "List the first names of all faculty members in alphabetical order of first name.", "label": "What are the first names for all faculty professors, ordered by first name?"}
{"idx": 1, "logic": "( name of staff ) , ( score of staff ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , that have ( ( color of addresses ) equal to ( white ) )", "pred": "What is the name and score of the grapes that produce wines with color white?", "label": "Give the names and scores of wines made from white grapes."}
{"idx": 2, "logic": "( meter 200 ) , ( meter 300 ) that belongs to ( swimmer ) , that have ( ( nationality ) equal to ( 'australia' ) )", "pred": "What are the meters 200 and 300 of swimmer from Australia?", "label": "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\"."}
{"idx": 3, "logic": "( fname of addresses ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) , and ( ( dorm ) satisfied that ( ( dormid of enzyme ) equal to ( dormid of staff ) ) ) ) , that have ( ( dorm name of enzyme ) equal to ( 'smith hall' ) )", "pred": "What are the first names of all the students who live in Smith Hall?", "label": "Find the first name of students who are living in the Smith Hall."}
{"idx": 4, "logic": "( distinct ( driverid ) ) , ( stop ) that belongs to ( pitstops ) , that have ( ( duration ) greater than ( the minimum of ( duration ) ) that belongs to ( pitstops ) , that have ( ( raceid ) equal to ( 841 ) ) )", "pred": "What are the ids and stops of all drivers who have a longer duration than the minimum duration of race id 841?", "label": "What are the different ids and stop durations of all the drivers whose stop lasted longer than the driver in the race with the id 841?"}
{"idx": 5, "logic": "( title of addresses ) that belongs to ( ( albums ) , and ( ( artists ) satisfied that ( ( artist id of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( name of staff ) equal to ( aerosmith ) )", "pred": "What are the titles of the albums by the artist named aerosmith?", "label": "What are the titles of all the Aerosmith albums?"}
{"idx": 6, "logic": "( artist name of addresses ) , ( country of addresses ) that belongs to ( ( artist ) , and ( ( song ) satisfied that ( ( artist name of addresses ) equal to ( artist name of staff ) ) ) ) , that have ( ( resolution of staff ) greater than ( 900 ) ) , grouped by ( artist name of staff ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "pred": "What are the names and countries of the artists who have at least one song with resolution greater than 900?", "label": "Find the name and country of origin for all artists who have release at least one song of resolution above 900."}
{"idx": 7, "logic": "( dept name ) , ( building ) that belongs to ( department ) , that have ( ( budget ) greater than ( the average of ( budget ) ) that belongs to ( department ) )", "pred": "What are the names and buildings of the departments whose budget is higher than the average?", "label": "What is the name and building of the departments whose budget is more than the average budget?"}
{"idx": 8, "logic": "( title of addresses ) , ( albumid of staff ) , ( the number of ( all items ) ) that belongs to ( ( album ) , and ( ( track ) satisfied that ( ( albumid of addresses ) equal to ( albumid of staff ) ) ) ) , grouped by ( albumid of staff )", "pred": "Show the album title, album id, and the number of tracks for each album.", "label": "What are the names and ids of the different albums, and how many tracks are on each?"}
{"idx": 9, "logic": "( store name ) that belongs to ( drama workshop groups )", "pred": "List the store name of drama workshop groups.", "label": "What are the store names of drama workshop groups?"}
{"idx": 10, "logic": "( fname of club ) , ( lname of club ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( papers ) satisfied that ( ( paperid of member of club ) equal to ( paperid of student ) ) ) ) , that have ( ( title of student ) equal to ( nameless , painless ) )", "pred": "What are the first and last names of all the authors who wrote the paper titled \"Nameless, Painless\"?", "label": "What are the first and last name of the author who published the paper titled \"Nameless, Painless\"?"}
{"idx": 11, "logic": "( title ) that belongs to ( course ) , that have ( ( course_id ) in ( ( prereq id of addresses ) that belongs to ( ( prereq ) , and ( ( course ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( title of staff ) equal to ( 'international finance' ) ) ) )", "pred": "What are the titles of the courses that have a prereq with title 'International Finance'", "label": "Give the title of the prerequisite to the course International Finance."}
{"idx": 12, "logic": "( distinct ( region name ) ) that belongs to ( region ) , ordered by ( ( label ) )", "pred": "List the distinct names of regions, ordered by label.", "label": "What are the different region names, ordered by labels?"}
{"idx": 13, "logic": "( problem description of addresses ) that belongs to ( ( problems ) , and ( ( staff ) satisfied that ( ( reported by staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( staff first name of staff ) equal to ( christop ) )", "pred": "What is the description of the problems reported by staff with first name Christop?", "label": "Which problems are reported by the staff with first name \"Christop\"? Show the descriptions of the problems."}
{"idx": 14, "logic": "( id ) that belongs to ( trip ) , that have ( ( duration ) greater than or equal to ( the average of ( duration ) ) that belongs to ( trip ) , that have ( ( zip code ) equal to ( 94103 ) ) )", "pred": "What are the ids of trips that lasted longer than or equal to the average duration of trips in zip code 94103.", "label": "What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103?"}
{"idx": 15, "logic": "( book title ) , ( author or editor ) that belongs to ( book club ) , that have ( ( year ) greater than ( 1989 ) )", "pred": "What are the titles and author or editors of the books published after 1989", "label": "show the titles, and authors or editors for all books made after the year 1989."}
{"idx": 16, "logic": "( bname of addresses ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) ) , grouped by ( bname of addresses ) , ordered by ( ( the sum of ( amount of staff ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the bank that has the most loans.", "label": "What is the name of the bank branch that has lent the greatest amount?"}
{"idx": 17, "logic": "( name ) that belongs to ( person ) , that have ( ( gender ) equal to ( 'male' ) ) , ordered by ( ( age ) )", "pred": "List the names of male people, ordered by age.", "label": "Find the name and age of all males in order of their age."}
{"idx": 18, "logic": "( title ) that belongs to ( book ) , that have ( ( book_id ) not in ( ( book id ) that belongs to ( publication ) ) )", "pred": "What are the titles of books that have not been published?", "label": "List the titles of books that are not published."}
{"idx": 19, "logic": "( code of addresses ) , ( fate of addresses ) , ( name of staff ) that belongs to ( ( mission ) , and ( ( ship ) satisfied that ( ( ship id of addresses ) equal to ( ship id of staff ) ) ) )", "pred": "What are the codes, fate, and names of missions that each ship was on?", "label": "What are the mission codes, fates, and names of the ships involved?"}
{"idx": 20, "logic": "( billing state ) , ( the number of ( all items ) ) that belongs to ( invoices ) , that have ( ( billing country ) equal to ( usa ) ) , grouped by ( billing state ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the billing state and the number of invoices from there.", "label": "What are the states with the most invoices?"}
{"idx": 21, "logic": "( invoice date of addresses ) , ( order id of addresses ) , ( order details of staff ) that belongs to ( ( invoices ) , and ( ( orders ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) )", "pred": "What are the invoice dates, ids, and details of all the orders?", "label": "What are the invoice dates, order ids, and order details for all invoices?"}
{"idx": 22, "logic": "( student id of staff ) that belongs to ( ( courses ) , and ( ( student course registrations ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( course name of addresses ) equal to ( statistics ) ) , ordered by ( ( registration date of staff ) )", "pred": "What are the ids of the students who registered courses in Statistics, ordered by registration date?", "label": "What are the ids of the students who registered course statistics by order of registration date?"}
{"idx": 23, "logic": "( document type code ) that belongs to ( documents ) , that have ( ( document id ) equal to ( 2 ) )", "pred": "What is the type code of the document with id two.", "label": "List the document type code for the document with the id 2."}
{"idx": 24, "logic": "( city ) that belongs to ( addresses ) , that have ( ( city ) not in ( ( distinct ( city of student ) ) that belongs to ( ( customers ) , and ( ( customer addresses ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( addresses ) satisfied that ( ( address id of member of club ) equal to ( address id of student ) ) ) ) ) )", "pred": "Find the cities that do not have any customers living in.", "label": "What are the cities no customers live in?"}
{"idx": 25, "logic": "( preferred foot ) , ( the average of ( overall rating ) ) that belongs to ( player attributes ) , grouped by ( preferred foot )", "pred": "Show preferred foot and average overall rating for each preferred foot.", "label": "What is the average rating for right-footed players and left-footed players?"}
{"idx": 26, "logic": "( the maximum of ( gradepoint of staff ) ) , ( the minimum of ( gradepoint of staff ) ) that belongs to ( ( enrolled in ) join ( ( gradeconversion ) ) , and ( ( student ) satisfied that ( ( ( grade of addresses ) equal to ( lettergrade of staff ) ) and ( ( stuid of addresses ) equal to ( stuid of enzyme ) ) ) ) ) , that have ( ( city code of enzyme ) equal to ( nyc ) )", "pred": "What is the maximum and minimum gradepoint of the students who are enrolled in the lettergrade in NYC?", "label": "What is the maximum and minimum grade point of students who live in NYC?"}
{"idx": 27, "logic": "( the number of ( distinct ( advisor ) ) ) that belongs to ( student )", "pred": "Count the number of distinct advisors.", "label": "How many advisors are there?"}
{"idx": 28, "logic": "( actual delivery date of addresses ) that belongs to ( ( customer orders ) , and ( ( order items ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) ) , that have ( ( order quantity of staff ) equal to ( 1 ) )", "pred": "What is the actual delivery date of the order with quantity 1.", "label": "List the actual delivery date for all the orders with quantity 1"}
{"idx": 29, "logic": "( customer phone ) that belongs to ( performers ) , that have ( ( customer name ) equal to ( ashley ) )", "pred": "Find the phone number of performer named Ashley.", "label": "What is the phone number of the performer Ashley?"}
{"idx": 30, "logic": "( city code ) that belongs to ( student ) , grouped by ( city code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the city that has the most students living.", "label": "Find the code of city where most of students are living in."}
{"idx": 31, "logic": "( name ) that belongs to ( people ) , that have ( ( ( age ) equal to ( 35 ) ) or ( ( age ) equal to ( 36 ) ) )", "pred": "Find the names of people who are 35 or 36.", "label": "Show the names of people aged either 35 or 36."}
{"idx": 32, "logic": "( driverid of addresses ) , ( forename of addresses ) , ( surname of addresses ) that belongs to ( ( drivers ) , and ( ( laptimes ) satisfied that ( ( driverid of addresses ) equal to ( driverid of staff ) ) ) ) , that have ( ( position ) equal to ( '1' ) ) , grouped by ( driverid of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What is the id, forename, and surname of the driver who has at least two laptime?", "label": "What is the id, forname and surname of the driver who had the first position in terms of laptime at least twice?"}
{"idx": 33, "logic": "( name of addresses ) , ( email of addresses ) that belongs to ( ( user profiles ) , and ( ( follows ) satisfied that ( ( uid of addresses ) equal to ( f1 of staff ) ) ) ) , grouped by ( f1 of staff ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "What are the names and email addresses of the users who have more than one follow?", "label": "Find the name and email for the users who have more than one follower."}
{"idx": 34, "logic": "( name ) that belongs to ( team ) , that have ( ( team_id ) not in ( ( team ) that belongs to ( match season ) ) )", "pred": "List the names of teams that did not participate in any match season.", "label": "What are the names of teams that do no have match season record?"}
{"idx": 35, "logic": "( title of staff ) , ( mid of addresses ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , grouped by ( mid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "What is the title and mid name of the movie that received the highest rating?", "label": "What is the name of the movie that has been reviewed the most?"}
{"idx": 36, "logic": "( name of addresses ) that belongs to ( ( browser ) , and ( ( accelerator compatible browser ) satisfied that ( ( id of addresses ) equal to ( browser id of staff ) ) ) , and ( ( web client accelerator ) satisfied that ( ( accelerator id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( ( name of enzyme ) equal to ( 'cproxy' ) ) and ( ( compatible since year of staff ) greater than ( 1998 ) ) )", "pred": "What are the names of the accelerators that are compatible with web client accelerators after 1998?", "label": "What is the name of the browser that became compatible with the accelerator 'CProxy' after year 1998?"}
{"idx": 37, "logic": "( problem id ) that belongs to ( problems ) , that have ( ( date problem reported ) greater than ( 1978-06-26 ) )", "pred": "What are the ids of the problems reported after 1978-06-26.", "label": "What are the ids of the problems which are reported after 1978-06-26?"}
{"idx": 38, "logic": "( distinct ( product details ) ) that belongs to ( products )", "pred": "List all distinct product details.", "label": "What are the details of all products?"}
{"idx": 39, "logic": "( distinct ( state ) ) that belongs to ( college ) , that have ( ( enr ) less than ( the maximum of ( enr ) ) that belongs to ( college ) )", "pred": "What are the distinct states that have colleges with enrollment lower than the maximum?", "label": "What are the states with colleges that have enrollments less than the some other college?"}
{"idx": 40, "logic": "( service name ) that belongs to ( services ) , ordered by ( ( service name ) )", "pred": "List the names of services in alphabetical order of service name.", "label": "Give me a list of all the service names sorted alphabetically."}
{"idx": 41, "logic": "( the number of ( all items ) ) that belongs to ( club rank ) , that have ( ( total ) less than ( 10 ) )", "pred": "Count the number of clubs that have less than 10 total.", "label": "How many clubs have total medals less than 10?"}
{"idx": 42, "logic": "( gender of addresses ) , ( artist name of addresses ) that belongs to ( ( artist ) , and ( ( song ) satisfied that ( ( artist name of addresses ) equal to ( artist name of staff ) ) ) ) , ordered by ( ( resolution of staff ) ) , limited to the top ( 1 )", "pred": "What is the gender and name of the artist who wrote the song with the highest resolution?", "label": "What is the gender and name of the artist who sang the song with the smallest resolution?"}
{"idx": 43, "logic": "( the maximum of ( stu gpa ) ) , ( the average of ( stu gpa ) ) , ( the minimum of ( stu gpa ) ) , ( dept code ) that belongs to ( student ) , grouped by ( dept code )", "pred": "What is the maximum, average, and minimum gpa for each department?", "label": "Find the max, average, and minimum gpa of all students in each department."}
{"idx": 44, "logic": "( employee id ) that belongs to ( employees ), and except that ( ( destroyed by employee id ) that belongs to ( documents to be destroyed ))", "pred": "Show the ids of employees who have not destroyed any documents.", "label": "Which employees do not destroy any document? Find their employee ids."}
{"idx": 45, "logic": "( the average of ( event attendance ) ) , ( the maximum of ( event attendance ) ) that belongs to ( event )", "pred": "Show the average and maximum attendance of all events.", "label": "what are the average and maximum attendances of all events?"}
{"idx": 46, "logic": "( location ) that belongs to ( party ) , ordered by ( ( number of hosts ) in descending order ) , limited to the top ( 1 )", "pred": "Find the location that has the most hosts.", "label": "What is the location of the party with the most hosts?"}
{"idx": 47, "logic": "( name ) that belongs to ( journalist ) , that have ( ( ( nationality ) equal to ( england ) ) or ( ( nationality ) equal to ( wales ) ) )", "pred": "Find the names of journalists from england or wales.", "label": "Show the names of journalists from \"England\" or \"Wales\"."}
{"idx": 48, "logic": "( name ) , ( operating system ) that belongs to ( web client accelerator ), and except that ( ( name of addresses ) , ( operating system of addresses ) that belongs to ( ( web client accelerator ) , and ( ( accelerator compatible browser ) satisfied that ( ( accelerator id of staff ) equal to ( id of addresses ) ) ) , and ( ( browser ) satisfied that ( ( browser id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'opera' ) ))", "pred": "What are the names and operating systems of web client accelerators that are not compatible with the browser 'Opera'", "label": "Show the accelerator names and supporting operating systems that are not compatible with the browser named 'Opera'."}
{"idx": 49, "logic": "( the number of ( distinct ( name ) ) ) that belongs to ( personfriend ) , that have ( ( friend ) not in ( ( name ) that belongs to ( person ) , that have ( ( city ) equal to ( 'austin' ) ) ) )", "pred": "Count the number of friends who are not living in Austin.", "label": "What is the total number of people who have no friends living in Austin?"}
{"idx": 50, "logic": "( age of staff ) that belongs to ( ( gymnast ) , and ( ( people ) satisfied that ( ( gymnast id of addresses ) equal to ( people id of staff ) ) ) ) , ordered by ( ( total points of addresses ) in descending order )", "pred": "List the ages of gymnasts in descending order of total points.", "label": "Show the ages of gymnasts in descending order of total points."}
{"idx": 51, "logic": "( dname ) that belongs to ( department ) , ordered by ( ( mgr start date ) )", "pred": "List the names of departments, ordered by mgr start date.", "label": "List all department names ordered by their starting date."}
{"idx": 52, "logic": "( party of staff ) that belongs to ( ( election ) , and ( ( party ) satisfied that ( ( party of addresses ) equal to ( party id of staff ) ) ) ) , grouped by ( party of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the party that has the most delegates in elections.", "label": "Show the name of the party that has the most delegates."}
{"idx": 53, "logic": "( apt type code of staff ) , ( apt number of staff ) that belongs to ( ( apartment buildings ) , and ( ( apartments ) satisfied that ( ( building id of addresses ) equal to ( building id of staff ) ) ) ) , that have ( ( building manager of addresses ) equal to ( kyle ) )", "pred": "What is the apartment type code and number of apartments for the building manager named \"Kyle\"", "label": "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\"."}
{"idx": 54, "logic": "( staff id ) that belongs to ( staff department assignments ) , that have ( ( date assigned to ) less than ( the maximum of ( date assigned to ) ) that belongs to ( staff department assignments ) , that have ( ( job title code ) equal to ( 'clerical staff' ) ) )", "pred": "What are the ids of staff who were assigned earlier than the staff with job title code 'clerical Staff'?", "label": "Return the id of the staff whose Staff Department Assignment was earlier than that of any Clerical Staff."}
{"idx": 55, "logic": "( the number of ( all items ) ) that belongs to ( ref calendar )", "pred": "Count the number of ref calendar.", "label": "Count the number of all the calendar items."}
{"idx": 56, "logic": "( name ) that belongs to ( accounts ) , ordered by ( ( name ) )", "pred": "List the names of accounts, ordered by name.", "label": "What are the names of all the customers in alphabetical order?"}
{"idx": 57, "logic": "( date became customer ) that belongs to ( customers ) , that have ( ( ( first name ) equal to ( carole ) ) and ( ( last name ) equal to ( bernhard ) ) )", "pred": "What is the date became customer for the customer Carole Bernhard", "label": "When did Carole Bernhard first become a customer?"}
{"idx": 58, "logic": "( the number of ( all items ) ) , ( affiliation ) that belongs to ( university ) , that have ( ( enrollment ) greater than ( 20000 ) ) , grouped by ( affiliation )", "pred": "Find the number of universities with enrollment greater than 20000.", "label": "Find the number of universities that have over a 20000 enrollment size for each affiliation type."}
{"idx": 59, "logic": "( product ) that belongs to ( product ) , that have ( ( product ) not equal to ( max page size ) that belongs to ( product ) , grouped by ( max page size ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) )", "pred": "Find the product with the largest max page size.", "label": "Find the name of the products that are not using the most frequently-used max page size."}
{"idx": 60, "logic": "( the maximum of ( active to date of member of club ) ) that belongs to ( ( customers ) , and ( ( customer contact channels ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( customer name of club ) equal to ( tillman ernser ) )", "pred": "Find the maximum active to date of contact channels for customer named \"Tillman ernser\".", "label": "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?"}
{"idx": 61, "logic": "( distinct ( state ) ) that belongs to ( college ) , that have ( ( enr ) less than ( the maximum of ( enr ) ) that belongs to ( college ) )", "pred": "What are the distinct states that have colleges with enrollment lower than the maximum?", "label": "Find the states where have the colleges whose enrollments are less than the largest size."}
{"idx": 62, "logic": "( name ) , ( class ) , ( rank ) that belongs to ( captain )", "pred": "List the name, class, and rank of captains.", "label": "Find the name, class and rank of all captains."}
{"idx": 63, "logic": "( color of addresses ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , grouped by ( grape of staff ) , ordered by ( ( the average of ( price ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the color of the grape that has the highest average price.", "label": "Give the color of the grape whose wine products have the highest average price?"}
{"idx": 64, "logic": "( support rate ) that belongs to ( candidate ) , ordered by ( ( support rate ) in descending order ) , limited to the top ( 3 )", "pred": "Return the support rate of the candidate with the highest support rate.", "label": "what are the top 3 highest support rates?"}
{"idx": 65, "logic": "( name ) that belongs to ( company ) , ordered by ( ( sales in billion ) in ascending order )", "pred": "List the name of companies in ascending order of sales in billion.", "label": "List the names of companies by ascending number of sales."}
{"idx": 66, "logic": "( date became customer ) that belongs to ( customers ) , that have ( ( customer_id ) between ( 10 ) and ( 20 ) )", "pred": "Find the date became customer for customers with id between 10 and 20.", "label": "Find the \"date became customers\" of the customers whose ID is between 10 and 20."}
{"idx": 67, "logic": "( department name ) , ( the number of ( all items ) ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) ) , grouped by ( department name )", "pred": "Show department name and the number of employees in each department.", "label": "display the department name and number of employees in each of the department."}
{"idx": 68, "logic": "( the number of ( all items ) ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( food ) )", "pred": "Count the number of people who have allergy to food.", "label": "How many students are affected by food related allergies?"}
{"idx": 69, "logic": "( customer status code ) that belongs to ( customers ) , grouped by ( customer status code ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the status code of the customer who has the most customers.", "label": "Which customer status code has least number of customers?"}
{"idx": 70, "logic": "( characteristic name of student ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , grouped by ( characteristic name of student ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Find the names of the characteristics that are associated with at least two products.", "label": "What are characteristic names used at least twice across all products?"}
{"idx": 71, "logic": "( the minimum of ( crime rate ) ) , ( the maximum of ( crime rate ) ) that belongs to ( county public safety )", "pred": "What are the minimum and maximum crime rates for each county?", "label": "What are the minimum and maximum crime rate of counties?"}
{"idx": 72, "logic": "( the number of ( all items ) ) that belongs to ( projects )", "pred": "Count the number of projects.", "label": "Show the number of projects."}
{"idx": 73, "logic": "( distinct ( title of club ) ) that belongs to ( ( papers ) , and ( ( authorship ) satisfied that ( ( paperid of club ) equal to ( paperid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( name of student ) equal to ( indiana university ) )", "pred": "What are the distinct titles of the papers written by the authors of the institution \"Indiana University\"?", "label": "List the titles of the papers whose authors are from the institution \"Indiana University\"."}
{"idx": 74, "logic": "( the number of ( all items ) ) that belongs to ( csu fees ) , that have ( ( campusfee ) greater than ( the average of ( campusfee ) ) that belongs to ( csu fees ) )", "pred": "Count the number of csu fees with a campus fee higher than the average.", "label": "How many universities have a campus fee greater than the average?"}
{"idx": 75, "logic": "( name of staff ) that belongs to ( ( body builder ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , ordered by ( ( total of addresses ) in descending order )", "pred": "List the names of body builders in descending order of total number.", "label": "What are the names of body builders in descending order of total scores?"}
{"idx": 76, "logic": "( organisation id of addresses ) , ( organisation type of addresses ) , ( organisation details of addresses ) that belongs to ( ( organisations ) , and ( ( research staff ) satisfied that ( ( organisation id of addresses ) equal to ( employer organisation id of staff ) ) ) ) , grouped by ( organisation id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id, type, and detail of the organisation that has the most research staff.", "label": "Which organisation hired the most number of research staff? List the organisation id, type and detail."}
{"idx": 77, "logic": "( apt type code ) , ( bathroom count ) , ( bedroom count ) that belongs to ( apartments ) , grouped by ( apt type code ) , ordered by ( ( the sum of ( room count ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the code, bathroom count, and bedroom count of the apartment with the largest number of rooms.", "label": "Show the apartment type code that has the largest number of total rooms, together with the number of bathrooms and number of bedrooms."}
{"idx": 78, "logic": "( the number of ( all items ) ) that belongs to ( restaurant , and ( type of restaurant satisfied that ( ( resid of restaurant ) equal to ( resid of type of restaurant ) ) ) , and ( restaurant type satisfied that ( ( restypeid of type of restaurant ) equal to ( restypeid of restaurant type ) ) ) ) , grouped by ( restypeid of type of restaurant ) , that have ( ( restypename of restaurant type ) equal to ( 'sandwich' ) )", "pred": "Find the number of restaurants that have the restypename Sandwich.", "label": "How many restaurant is the Sandwich type restaurant?"}
{"idx": 79, "logic": "( the average of ( capacity ) ) , ( the minimum of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( cinema ) , that have ( ( openning year ) greater than or equal to ( 2011 ) )", "pred": "What is the average, minimum, and maximum capacity of cinemas opened after 2011?", "label": "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later."}
{"idx": 80, "logic": "( document id ) , ( the number of ( all items ) ) that belongs to ( draft copies ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "Show document ids and the number of draft copies for each document with more than one draft copy.", "label": "Which documents have more than 1 draft copies? List document id and number of draft copies."}
{"idx": 81, "logic": "( sportname ) , ( the number of ( all items ) ) that belongs to ( sportsinfo ) , grouped by ( sportname )", "pred": "Show each sport name and the number of sports in each sport.", "label": "Show all sport name and the number of students."}
{"idx": 82, "logic": "( investor id ) , ( the number of ( all items ) ) that belongs to ( transactions ) , that have ( ( transaction type code ) equal to ( sale ) ) , grouped by ( investor id )", "pred": "Show investor id and the number of transactions with type code \"Sale\".", "label": "Show the number of transactions with transaction type code \"SALE\" for different investors if it is larger than 0."}
{"idx": 83, "logic": "( industry ) , ( the number of ( all items ) ) that belongs to ( companies ) , grouped by ( industry )", "pred": "Show each industry and the number of companies in that industry.", "label": "Whah are the name of each industry and the number of companies in that industry?"}
{"idx": 84, "logic": "( name ) that belongs to ( pilot ) , ordered by ( ( name ) in ascending order )", "pred": "List the names of all pilots in ascending order of name.", "label": "List all pilot names in ascending alphabetical order."}
{"idx": 85, "logic": "( the number of ( all items ) ) that belongs to ( club )", "pred": "Count the number of clubs.", "label": "How many clubs are there?"}
{"idx": 86, "logic": "( location code ) that belongs to ( ref locations ) , that have ( ( location name ) equal to ( canada ) )", "pred": "Find the code of the location named \"Canada\".", "label": "Show the location code of the country \"Canada\"."}
{"idx": 87, "logic": "( location ) that belongs to ( cinema ) , that have ( ( capacity ) greater than ( 300 ) ) , grouped by ( location ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show locations that have at least two cinemas with capacity greater than 300.", "label": "Which locations have 2 or more cinemas with capacity over 300?"}
{"idx": 88, "logic": "( distinct ( name of addresses ) ) , ( nationality of addresses ) that belongs to ( ( architect ) , and ( ( mill ) satisfied that ( ( id of addresses ) equal to ( architect id of staff ) ) ) )", "pred": "What are the distinct names and nationality of all the architects who designed mills?", "label": "What are the distinct names and nationalities of the architects who have ever built a mill?"}
{"idx": 89, "logic": "( the number of ( all items ) ) that belongs to ( camera lens ) , that have ( ( id ) not in ( ( camera lens id ) that belongs to ( photos ) ) )", "pred": "Count the number of camera lenses that do not have photos.", "label": "How many camera lenses are not used in taking any photos?"}
{"idx": 90, "logic": "( the number of ( all items ) ) that belongs to ( device )", "pred": "Count the number of devices.", "label": "Count the number of devices."}
{"idx": 91, "logic": "( shop name ) that belongs to ( shop ) , ordered by ( ( open year ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the shop that opened in the earliest year.", "label": "List the name of the shop with the latest open year."}
{"idx": 92, "logic": "( apt number ) that belongs to ( apartments ) , ordered by ( ( room count ) in ascending order )", "pred": "List the apartment number of apartments in ascending order of room count", "label": "Sort the apartment numbers in ascending order of room count."}
{"idx": 93, "logic": "( official name ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 1500 ) ) or ( ( population ) less than ( 500 ) ) )", "pred": "What are the official names of cities with population above 1500 or smaller than 500.", "label": "What are the official names of cities that have population over 1500 or less than 500?"}
{"idx": 94, "logic": "( name of staff ) , ( year of staff ) that belongs to ( ( results ) , and ( ( races ) satisfied that ( ( raceid of addresses ) equal to ( raceid of staff ) ) ) , and ( ( drivers ) satisfied that ( ( driverid of addresses ) equal to ( driverid of enzyme ) ) ) ) , that have ( ( forename of enzyme ) equal to ( lewis ) )", "pred": "What are the names and years of the races that the driver named Lewis participated in?", "label": "Give me a list of names and years of races that had any driver whose forename is Lewis?"}
{"idx": 95, "logic": "( name ) that belongs to ( media types )", "pred": "List all media types.", "label": "List all media types."}
{"idx": 96, "logic": "( location ) , ( the number of ( all items ) ) that belongs to ( cinema ) , grouped by ( location )", "pred": "Show each location and the number of cinemas in that location.", "label": "Show each location and the number of cinemas there."}
{"idx": 97, "logic": "( gtype ) that belongs to ( video games ) , grouped by ( gtype ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the type of video game that has been used the most.", "label": "Which game type has most number of games?"}
{"idx": 98, "logic": "( document type name of addresses ) , ( document type description of addresses ) , ( document date of staff ) that belongs to ( ( ref document types ) , and ( ( documents ) satisfied that ( ( document type code of addresses ) equal to ( document type code of staff ) ) ) )", "pred": "List the name, description, and date of all documents.", "label": "What is the document type name and the document type description and creation date for all the documents?"}
{"idx": 99, "logic": "( document type name of staff ) that belongs to ( ( all documents ) , and ( ( ref document types ) satisfied that ( ( document type code of addresses ) equal to ( document type code of staff ) ) ) ) , that have ( ( document name of addresses ) equal to ( how to read a book ) )", "pred": "What are the names of the document types with the name \"How to read a Book\"", "label": "What is the document type name for the document with name \"How to read a book\"?"}
{"idx": 100, "logic": "( the number of ( all items ) ) that belongs to ( student ) , that have ( ( ( city code ) equal to ( hkg ) ) or ( ( city code ) equal to ( chi ) ) )", "pred": "Find the number of students living in HKG or chi.", "label": "Give the number of students living in either HKG or CHI."}
{"idx": 101, "logic": "( date claim made of addresses ) , ( claim id of addresses ) that belongs to ( ( claims ) , and ( ( settlements ) satisfied that ( ( claim id of addresses ) equal to ( claim id of staff ) ) ) ) , grouped by ( claim id of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) and ( date claim made of addresses ) , ( claim id of addresses ) that belongs to ( ( claims ) , and ( ( settlements ) satisfied that ( ( claim id of addresses ) equal to ( claim id of staff ) ) ) ) , that have ( ( amount claimed of addresses ) equal to ( the maximum of ( amount claimed ) ) that belongs to ( claims ) )", "pred": "What are the dates and ids of the claims that have more than 2 settlements and more than the maximum amount claimed?", "label": "Find the claims that led to more than two settlements or have the maximum claim value. For each of them, return the date the claim was made and the id of the claim."}
{"idx": 102, "logic": "( the sum of ( spent ) ) that belongs to ( student , and ( visits restaurant satisfied that ( ( stuid of student ) equal to ( stuid of visits restaurant ) ) ) ) , that have ( ( ( fname of student ) equal to ( linda ) ) and ( ( lname of student ) equal to ( smith ) ) )", "pred": "Find the total number of times Linda Smith visited the restaurant.", "label": "How long does student Linda Smith spend on the restaurant in total?"}
{"idx": 103, "logic": "all items that belongs to ( airport ) , ordered by ( ( international passengers ) in descending order ) , limited to the top ( 1 )", "pred": "Find the airport with the largest number of international passengers.", "label": "What is all the information on the airport with the largest number of international passengers?"}
{"idx": 104, "logic": "( the number of ( all items ) ) that belongs to ( train )", "pred": "Count the number of trains.", "label": "Show the number of trains"}
{"idx": 105, "logic": "( the number of ( all items ) ) that belongs to ( actor )", "pred": "Count the number of actors.", "label": "How many actors are there?"}
{"idx": 106, "logic": "( customer name of addresses ) , ( customer phone of addresses ) , ( customer email of addresses ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name, phone number, and email of the customer who has made the most orders.", "label": "What are the name, phone number and email address of the customer who made the largest number of orders?"}
{"idx": 107, "logic": "( name ) that belongs to ( captain ) , ordered by ( ( age ) in descending order )", "pred": "List the names of captains, ordered by age descending.", "label": "Sort all captain names by their ages from old to young."}
{"idx": 108, "logic": "( amenity name of enzyme ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of addresses ) equal to ( dormid of staff ) ) ) , and ( ( dorm amenity ) satisfied that ( ( amenid of staff ) equal to ( amenid of enzyme ) ) ) ) , that have ( ( dorm name of addresses ) equal to ( 'smith hall' ) )", "pred": "What are the names of all the amenities that are associated with Smith Hall?", "label": "Find the name of amenities Smith Hall dorm have."}
{"idx": 109, "logic": "( title of staff ) , ( the average of ( stars of addresses ) ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , grouped by ( mid of addresses ) , ordered by ( ( the average of ( stars of addresses ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the title and average rating of the movie with the highest average rating.", "label": "What are the movie titles with the highest average rating and what are those ratings?"}
{"idx": 110, "logic": "( the number of ( distinct ( instrument ) ) ) that belongs to ( ( instruments ) , and ( ( band ) satisfied that ( ( bandmateid of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( lastname of staff ) equal to ( heilo ) )", "pred": "How many different instruments are used by the musician with last name \"Heilo\"", "label": "How many different instruments does the musician with the last name \"Heilo\" use?"}
{"idx": 111, "logic": "( name of staff ) that belongs to ( ( certificate ) , and ( ( aircraft ) satisfied that ( ( aid of staff ) equal to ( aid of addresses ) ) ) ) , grouped by ( aid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the aircraft that has the most certificates.", "label": "What are the names of the aircraft that the least people are certified to fly?"}
{"idx": 112, "logic": "( the number of ( all items ) ) that belongs to ( documents )", "pred": "Count the number of documents.", "label": "Count the number of documents."}
{"idx": 113, "logic": "( name ) that belongs to ( journalist ) , ordered by ( ( years working ) in ascending order )", "pred": "List the name of journalists in ascending order of years working.", "label": "List the names of journalists in ascending order of years working."}
{"idx": 114, "logic": "( industry ) that belongs to ( companies ) , that have ( ( headquarters ) equal to ( usa ) ), and intersect with ( ( industry ) that belongs to ( companies ) , that have ( ( headquarters ) equal to ( china ) ))", "pred": "Show the industries that have both companies in the United States and companies in China.", "label": "Which industries have both companies with headquarter in \"USA\" and companies with headquarter in \"China\"?"}
{"idx": 115, "logic": "( author ) that belongs to ( submission ) , ordered by ( ( scores ) in ascending order )", "pred": "List the author of submissions in ascending order of scores.", "label": "List the authors of submissions in ascending order of scores."}
{"idx": 116, "logic": "( customer name ) , ( customer phone ) that belongs to ( customers ) , that have ( ( customer_id ) not in ( ( customer id ) that belongs to ( mailshot customers ) ) )", "pred": "What are the names and phone numbers of customers who do not mailshots?", "label": "Show the name and phone of the customer without any mailshot."}
{"idx": 117, "logic": "( the average of ( number cities of staff ) ) that belongs to ( ( film market estimation ) , and ( ( market ) satisfied that ( ( market id of addresses ) equal to ( market id of staff ) ) ) ) , that have ( ( low estimate of addresses ) greater than ( 10000 ) )", "pred": "What is the average number of cities for markets with low film market estimation above 10000.", "label": "Give the average number of cities within markets that had a low market estimation larger than 10000?"}
{"idx": 118, "logic": "( distinct ( allergytype ) ) that belongs to ( allergy type )", "pred": "List the different allergies.", "label": "Show all allergy types."}
{"idx": 119, "logic": "( the number of ( all items ) ) that belongs to ( reviewer )", "pred": "Count the number of reviewers.", "label": "How many reviewers listed?"}
{"idx": 120, "logic": "( customer name ) that belongs to ( clients ), and except that ( ( customer name of staff ) that belongs to ( ( bookings ) , and ( ( clients ) satisfied that ( ( customer id of addresses ) equal to ( client id of staff ) ) ) ))", "pred": "List the names of customers who have never booked any bookings.", "label": "What are the names of the clients who do not have any booking?"}
{"idx": 121, "logic": "( head ) that belongs to ( department ) , grouped by ( departmentid ) , ordered by ( ( the number of ( departmentid ) ) ) , limited to the top ( 1 )", "pred": "Find the head of the department with the most departments.", "label": "What is the employee id of the head whose department has the least number of employees?"}
{"idx": 122, "logic": "( order id ) that belongs to ( shipments ) , that have ( ( shipment date ) greater than ( 2000-01-01 ) )", "pred": "What are the ids of the orders made after 2000-01-01?", "label": "Which orders have shipment after 2000-01-01? Give me the order ids."}
{"idx": 123, "logic": "( status of addresses ) that belongs to ( ( city ) , and ( ( farm competition ) satisfied that ( ( city id of addresses ) equal to ( host city id of staff ) ) ) ) , grouped by ( host city id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the status of the city that has hosted the most competitions.", "label": "Show the status of the city that has hosted the greatest number of competitions."}
{"idx": 124, "logic": "( cname ) that belongs to ( course ) , that have ( ( credits ) equal to ( 1 ) )", "pred": "Find the names of courses that have 1 credits.", "label": "What are the names of courses with 1 credit?"}
{"idx": 125, "logic": "( the number of ( all items ) ) that belongs to ( products ) , that have ( ( product_id ) not in ( ( product id ) that belongs to ( order items ) ) )", "pred": "Count the number of products that have not been ordered.", "label": "Count the number of products that were never ordered."}
{"idx": 126, "logic": "( name ) that belongs to ( browser ) , ordered by ( ( market share ) in descending order )", "pred": "List the name of browsers in descending order of market share.", "label": "List the name of browsers in descending order by market share."}
{"idx": 127, "logic": "( the number of ( all items ) ) that belongs to ( ( department stores ) , and ( ( department store chain ) satisfied that ( ( dept store chain id of addresses ) equal to ( dept store chain id of staff ) ) ) ) , that have ( ( dept store chain name of staff ) equal to ( south ) )", "pred": "Count the number of department stores in the city of south.", "label": "Count the number of stores the chain South has."}
{"idx": 128, "logic": "( title ) , ( film id ) that belongs to ( film ) , that have ( ( rental rate ) equal to ( 99 of 0 ) ), and intersect with ( ( title of addresses ) , ( film id of addresses ) that belongs to ( ( film ) , and ( ( inventory ) satisfied that ( ( film id of addresses ) equal to ( film id of staff ) ) ) ) , grouped by ( film id of addresses ) , that have ( ( the number of ( all items ) ) less than ( 3 ) ))", "pred": "What are the titles and ids of the films that have a rental rate of 99 of 0 and an inventory of less than 3?", "label": "What are the title and id of the film which has a rental rate of 0.99 and an inventory of below 3?"}
{"idx": 129, "logic": "( customer details of addresses ) , ( customer id of addresses ) that belongs to ( ( customers ) , and ( ( customer policies ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and except that ( ( customer details of addresses ) , ( customer id of addresses ) that belongs to ( ( customers ) , and ( ( customer policies ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) , and ( ( claims ) satisfied that ( ( policy id of staff ) equal to ( policy id of enzyme ) ) ) ))", "pred": "What are the details and ids of customers who have at least two policies but have never filed any claim?", "label": "Which customer had at least 2 policies but did not file any claims? List the customer details and id."}
{"idx": 130, "logic": "( unit of measure of member of club ) , ( product category code of member of club ) that belongs to ( ( products ) , and ( ( ref product categories ) satisfied that ( ( product category code of club ) equal to ( product category code of member of club ) ) ) ) , that have ( ( product name of club ) equal to ( chervil ) )", "pred": "What is the unit of measure and code of the product named \"Chervil\"", "label": "Find the unit of measurement and product category code of product named \"chervil\"."}
{"idx": 131, "logic": "( name of addresses ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( name of addresses ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses ) , that have ( ( the sum of ( number city affected of staff ) ) greater than or equal to ( 10 ) ))", "pred": "Show the names of storms that affected at least two cities and at least 10 cities in each region.", "label": "What are the names of storms that both affected two or more regions and affected a total of 10 or more cities?"}
{"idx": 132, "logic": "( the number of ( all items ) ) that belongs to ( aircraft )", "pred": "Count the number of aircrafts.", "label": "How many aircrafts are there?"}
{"idx": 133, "logic": "( director ) that belongs to ( movie ) , grouped by ( director ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "pred": "Show the directors who directed 1 movie.", "label": "What are the names of the directors who made exactly one movie?"}
{"idx": 134, "logic": "( the number of ( all items ) ) that belongs to ( addresses ) , that have ( ( state province county ) equal to ( colorado ) )", "pred": "Count the number of addresses in state \"Colorado\"", "label": "How many cities are there in state \"Colorado\"?"}
{"idx": 135, "logic": "( investor id of staff ) , ( investor details of addresses ) that belongs to ( ( investors ) , and ( ( transactions ) satisfied that ( ( investor id of addresses ) equal to ( investor id of staff ) ) ) ) , that have ( ( transaction type code of staff ) equal to ( sale ) ) , grouped by ( investor id of staff ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What are the ids and details of the investors who have at least two transactions with type code \"Sale\"", "label": "Show the ids and details of the investors who have at least two transactions with type code \"SALE\"."}
{"idx": 136, "logic": "( product name of club ) that belongs to ( ( products ) , and ( ( ref product categories ) satisfied that ( ( product category code of club ) equal to ( product category code of member of club ) ) ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of student ) ) ) ) , that have ( ( ( color description of student ) equal to ( white ) ) and ( ( unit of measure of member of club ) not equal to ( handful ) ) )", "pred": "What are the names of the products that are not in the category \"White\"?", "label": "Find the product names that are colored 'white' but do not have unit of measurement \"Handful\"."}
{"idx": 137, "logic": "( distinct ( bname of addresses ) ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) )", "pred": "What are the distinct names of the banks that have loans?", "label": "Find the name of bank branches that provided some loans."}
{"idx": 138, "logic": "( nickname ) that belongs to ( staff ) , that have ( ( ( first name ) equal to ( janessa ) ) and ( ( last name ) equal to ( sawayn ) ) )", "pred": "What is the nickname of the staff member whose first name is Janessa and last name is Sawayn.", "label": "What is the nickname of the employee named Janessa Sawayn?"}
{"idx": 139, "logic": "( name of staff ) that belongs to ( ( body builder ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) )", "pred": "List the names of body builders who have been body builders.", "label": "What are the names of body builders?"}
{"idx": 140, "logic": "( product id ) , ( product type code ) that belongs to ( products ) , ordered by ( ( product price ) ) , limited to the top ( 1 )", "pred": "Find the id and type code of the product with the highest price.", "label": "What are the product id and product type of the cheapest product?"}
{"idx": 141, "logic": "( the number of ( distinct ( currency code ) ) ) that belongs to ( drama workshop groups )", "pred": "Count the number of distinct currency codes for drama workshop groups.", "label": "Find the number of distinct currency codes used in drama workshop groups."}
{"idx": 142, "logic": "( distinct ( name ) ) that belongs to ( instructor ) , ordered by ( ( name ) )", "pred": "List the distinct names of instructors in alphabetical order of name", "label": "List the distinct names of the instructors, ordered by name."}
{"idx": 143, "logic": "( the number of ( all items ) ) that belongs to ( customers ) , that have ( ( customer_id ) not in ( ( customer id ) that belongs to ( accounts ) ) )", "pred": "Count the number of customers who do not have an account.", "label": "How many customers do not have an account?"}
{"idx": 144, "logic": "( reign ) that belongs to ( wrestler ) , grouped by ( reign ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the reign of the wrestler with the most reigns.", "label": "Please show the most common reigns of wrestlers."}
{"idx": 145, "logic": "( apt number ) that belongs to ( apartments ) , that have ( ( apt type code ) equal to ( flat ) )", "pred": "Find the apartment number of apartments with type code \"Flat\".", "label": "Which apartments have type code \"Flat\"? Give me their apartment numbers."}
{"idx": 146, "logic": "( the number of ( distinct ( card type code ) ) ) that belongs to ( customers cards )", "pred": "Count the number of distinct card type codes.", "label": "How many different card types are there?"}
{"idx": 147, "logic": "( city ) that belongs to ( airports ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )", "pred": "Show cities that have two airports.", "label": "Find the cities which have exactly two airports."}
{"idx": 148, "logic": "( name of staff ) that belongs to ( ( playlist tracks ) , and ( ( playlists ) satisfied that ( ( id of staff ) equal to ( playlist id of addresses ) ) ) ) , grouped by ( playlist id of addresses ) , that have ( ( the number of ( track id of addresses ) ) greater than ( 100 ) )", "pred": "Find the name of the playlist that has more than 100 tracks.", "label": "What are the names of all playlists that have more than 100 tracks?"}
{"idx": 149, "logic": "( name of enzyme ) , ( the number of ( all items ) ) that belongs to ( ( news report ) , and ( ( event ) satisfied that ( ( event id of addresses ) equal to ( event id of staff ) ) ) , and ( ( journalist ) satisfied that ( ( journalist id of addresses ) equal to ( journalist id of enzyme ) ) ) ) , grouped by ( name of enzyme )", "pred": "Show the names of journalists and the number of events they have reported.", "label": "Show the names of journalists and the number of events they reported."}
{"idx": 150, "logic": "( dept name of enzyme ) that belongs to ( ( course ) , and ( ( class ) satisfied that ( ( crs code of addresses ) equal to ( crs code of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of addresses ) equal to ( dept code of enzyme ) ) ) ) , grouped by ( dept code of addresses ) , ordered by ( ( the sum of ( crs credit of addresses ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the department that teaches the most courses.", "label": "Find the name of the department that offers the largest number of credits of all classes."}
{"idx": 151, "logic": "( the number of ( all items ) ) , ( flag ) that belongs to ( ship ) , grouped by ( flag )", "pred": "Count the number of ships and flag for each flag", "label": "What are the different ship flags, and how many ships have each?"}
{"idx": 152, "logic": "( account id ) that belongs to ( financial transactions ) , grouped by ( account id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id of the account that has made the most transactions.", "label": "What is the id of the account with the most transactions?"}
{"idx": 153, "logic": "( id of addresses ) that belongs to ( ( trip ) , and ( ( weather ) satisfied that ( ( zip code of addresses ) equal to ( zip code of staff ) ) ) ) , grouped by ( zip code of staff ) , that have ( ( the average of ( mean temperature f of staff ) ) greater than ( 60 ) )", "pred": "What are the ids of the trips that took place in zip codes with an average mean temperature above 60?", "label": "Give me ids for all the trip that took place in a zip code area with average mean temperature above 60."}
{"idx": 154, "logic": "( the sum of ( number deaths ) ) , ( the sum of ( damage millions usd ) ) that belongs to ( storm ) , that have ( ( max speed ) greater than ( the average of ( max speed ) ) that belongs to ( storm ) )", "pred": "What is the total number of deaths and damage millions usd for storms with max speed higher than the average?", "label": "Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average."}
{"idx": 155, "logic": "( location of addresses ) , ( nickname of staff ) that belongs to ( ( school ) , and ( ( school details ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) )", "pred": "Show the location and nickname of each school.", "label": "What are the location and nickname of each school?"}
{"idx": 156, "logic": "( booking status code ) , ( the number of ( all items ) ) that belongs to ( apartment bookings ) , grouped by ( booking status code )", "pred": "Show booking status code and the number of apartment bookings for each booking status.", "label": "Show the booking status code and the corresponding number of bookings."}
{"idx": 157, "logic": "( product type code of staff ) , ( product name of staff ) , ( product price of staff ) that belongs to ( ( product suppliers ) , and ( ( products ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , that have ( ( supplier id of addresses ) equal to ( 3 ) )", "pred": "What are the type code, name, and price of the products supplied by suppliers with id 3.", "label": "Give me the product type, name and price for all the products supplied by supplier id 3."}
{"idx": 158, "logic": "( budget type code ) , ( the number of ( all items ) ) that belongs to ( documents with expenses ) , grouped by ( budget type code )", "pred": "Show each budget type code and the number of documents with expenses in each budget.", "label": "What are the different budget type codes, and how many documents are there for each?"}
{"idx": 159, "logic": "( order date ) that belongs to ( bookings )", "pred": "List the order date of all bookings.", "label": "List the order dates of all the bookings."}
{"idx": 160, "logic": "( account id ) that belongs to ( financial transactions ) , grouped by ( account id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id of the account that has made the most transactions.", "label": "Show the account id with most number of transactions."}
{"idx": 161, "logic": "( distinct ( payment method ) ) that belongs to ( customers )", "pred": "List the distinct payment methods for customers.", "label": "What are all the payment methods?"}
{"idx": 162, "logic": "( date to ) that belongs to ( project staff ) , ordered by ( ( date to ) in descending order ) , limited to the top ( 1 )", "pred": "Find the date of the most recent project staff.", "label": "What is the last date of the staff leaving the projects?"}
{"idx": 163, "logic": "( customer first name of staff ) , ( customer id of addresses ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What are the first name and id of the customers who have at least two accounts.", "label": "What are the first names and ids for customers who have two or more accounts?"}
{"idx": 164, "logic": "( driverid of staff ) , ( forename of enzyme ) that belongs to ( ( races ) , and ( ( results ) satisfied that ( ( raceid of addresses ) equal to ( raceid of staff ) ) ) , and ( ( drivers ) satisfied that ( ( driverid of staff ) equal to ( driverid of enzyme ) ) ) ) , that have ( ( name of addresses ) equal to ( australian grand prix ) ), and intersect with ( ( driverid of staff ) , ( forename of enzyme ) that belongs to ( ( races ) , and ( ( results ) satisfied that ( ( raceid of addresses ) equal to ( raceid of staff ) ) ) , and ( ( drivers ) satisfied that ( ( driverid of staff ) equal to ( driverid of enzyme ) ) ) ) , that have ( ( name of addresses ) equal to ( chinese grand prix ) ))", "pred": "What are the ids and forenames of the drivers who participated in both Australian Grand Prix and Chinese Grand Prix races?", "label": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?"}
{"idx": 165, "logic": "( distinct ( forename ) ) that belongs to ( drivers ) , ordered by ( ( forename ) in ascending order )", "pred": "List the distinct forenames of all drivers, ordered by forename in ascending order.", "label": "List the forenames of all distinct drivers in alphabetical order?"}
{"idx": 166, "logic": "( name ) , ( address road ) , ( city ) that belongs to ( branch ) , ordered by ( ( open year ) )", "pred": "List the name, address road, city of branches in alphabetical order of opening year.", "label": "Show name, address road, and city for all branches sorted by open year."}
{"idx": 167, "logic": "( distinct ( donator name ) ) that belongs to ( endowment )", "pred": "List the distinct donators names of endowment.", "label": "Show all donor names."}
{"idx": 168, "logic": "( competition type ) that belongs to ( competition ) , grouped by ( competition type ) , that have ( ( the number of ( all items ) ) less than or equal to ( 5 ) )", "pred": "Show the type of competitions that have at least 5 competitions.", "label": "What are the types of competition that have most 5 competitions for that type?"}
{"idx": 169, "logic": "( project id ) , ( project details ) that belongs to ( projects )", "pred": "List the id and detail of all projects.", "label": "What are the ids and details for each project?"}
{"idx": 170, "logic": "( party of staff ) , ( the number of ( all items ) ) that belongs to ( ( election ) , and ( ( party ) satisfied that ( ( party of addresses ) equal to ( party id of staff ) ) ) ) , grouped by ( party of addresses )", "pred": "Show the party and the number of delegates from each party.", "label": "For each party, return the name of the party and the number of delegates from that party."}
{"idx": 171, "logic": "( year ) that belongs to ( festival detail ) , that have ( ( location ) equal to ( 'united states' ) ), and intersect with ( ( year ) that belongs to ( festival detail ) , that have ( ( location ) not equal to ( 'united states' ) ))", "pred": "What are the years that have both festivals located in the United States and festivals in the UK?", "label": "In which year are there festivals both inside the 'United States' and outside the 'United States'?"}
{"idx": 172, "logic": "( distinct ( clubname of club ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( advisor of student ) equal to ( 1121 ) )", "pred": "What are the names of the clubs that have a member with advisor 1121?", "label": "Which clubs have one or more members whose advisor is \"1121\"?"}
{"idx": 173, "logic": "( name ) that belongs to ( ship ) , that have ( ( nationality ) not equal to ( united states ) )", "pred": "Find the names of ships whose nationality is not \"United States\".", "label": "List the name of ships whose nationality is not \"United States\"."}
{"idx": 174, "logic": "( name ) , ( score ) that belongs to ( wine )", "pred": "List the name and score of all wines.", "label": "What are the names and scores of all wines?"}
{"idx": 175, "logic": "( the minimum of ( rank ) ) that belongs to ( review )", "pred": "Find the minimum rank of all reviews.", "label": "Find the highest rank of all reviews."}
{"idx": 176, "logic": "( party ) that belongs to ( people ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the party of the oldest person.", "label": "What is the party of the youngest people?"}
{"idx": 177, "logic": "( title of enzyme ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) , and ( ( songs ) satisfied that ( ( songid of enzyme ) equal to ( songid of addresses ) ) ) ) , that have ( ( firstname of staff ) equal to ( marianne ) )", "pred": "What are the titles of the songs performed by the band mate with first name Marianne.", "label": "What are the names of all songs produced by the artist with the first name \"Marianne\"?"}
{"idx": 178, "logic": "( the number of ( all items ) ) that belongs to ( student )", "pred": "Count the number of students.", "label": "How many students exist?"}
{"idx": 179, "logic": "( role description ) that belongs to ( roles ) , that have ( ( role name ) equal to ( proof reader ) )", "pred": "What is the description of the role with name \"Proof Reader\"", "label": "Show the description for role name \"Proof Reader\"."}
{"idx": 180, "logic": "( name first ) , ( name last ) that belongs to ( player ) , that have ( ( death year ) equal to ( '' ) )", "pred": "What are the first and last names of all players who died in the year 'Death'?", "label": "What are the first name and last name of the players whose death record is empty?"}
{"idx": 181, "logic": "( fname ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid ) that belongs to ( enrolled in ) ) )", "pred": "Find the first names of all students who are not enrolled in any institution.", "label": "Find the first name of students not enrolled in any course."}
{"idx": 182, "logic": "( home city ) that belongs to ( driver ) , grouped by ( home city ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the home city of the driver with the most drivers.", "label": "Show the home city with the most number of drivers."}
{"idx": 183, "logic": "( distinct ( all items ) ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) ) , that have ( ( employee id of addresses ) equal to ( manager id of staff ) )", "pred": "What are all the different departments that have employees who are manager?", "label": "What is all the information regarding employees who are managers?"}
{"idx": 184, "logic": "( the sum of ( amount ) ) , ( bname of addresses ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) ) , grouped by ( bname of addresses )", "pred": "Show the total amount and name of each bank branch.", "label": "Find the total amount of loans offered by each bank branch."}
{"idx": 185, "logic": "( course id ) that belongs to ( student course registrations ) , that have ( ( student id ) equal to ( 121 ) ) and ( course id ) that belongs to ( student course attendance ) , that have ( ( student id ) equal to ( 121 ) )", "pred": "What are the ids of the courses registered by students with student id 121 and student attendance 121.", "label": "Find the id of courses which are registered or attended by student whose id is 121?"}
{"idx": 186, "logic": "( governor ) that belongs to ( party ) , grouped by ( governor ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the governor who has been elected the most.", "label": "Show the people that have been governor the most times."}
{"idx": 187, "logic": "( the number of ( all items ) ) that belongs to ( statements )", "pred": "Count the number of statements.", "label": "Count the number of statements."}
{"idx": 188, "logic": "( the maximum of ( group equity shareholding ) ) that belongs to ( operate company )", "pred": "Find the maximum group equity shareholding of all companies operate.", "label": "What is maximum group equity shareholding of the companies?"}
{"idx": 189, "logic": "( the sum of ( room count of staff ) ) that belongs to ( ( apartment facilities ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( facility code of addresses ) equal to ( gym ) )", "pred": "What is the total room count of the apartments with facility code \"Gym\"", "label": "Find the total number of rooms in the apartments that have facility code \"Gym\"."}
{"idx": 190, "logic": "( name ) that belongs to ( station ) , that have ( ( city ) equal to ( palo alto ) ), and except that ( ( end station name ) that belongs to ( trip ) , grouped by ( end station name ) , that have ( ( the number of ( all items ) ) greater than ( 100 ) ))", "pred": "What are the names of stations that do not have any trips in Palo Alto?", "label": "What are the names of the stations that are located in Palo Alto but have never been the ending point of the trips"}
{"idx": 191, "logic": "( status ) , ( the average of ( population ) ) that belongs to ( city ) , grouped by ( status )", "pred": "Show each status and the average population of each status.", "label": "Please show the different statuses of cities and the average population of cities with each status."}
{"idx": 192, "logic": "( pilot name of staff ) , ( the number of ( all items ) ) that belongs to ( ( pilot record ) , and ( ( pilot ) satisfied that ( ( pilot id of addresses ) equal to ( pilot id of staff ) ) ) ) , grouped by ( pilot name of staff ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "Show the name and number of records for each pilot who has more than one record.", "label": "Show names of pilots that have more than one record."}
{"idx": 193, "logic": "( year ) that belongs to ( degrees ) , grouped by ( year ) , ordered by ( ( the sum of ( degrees ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the year that has the most degrees.", "label": "Which year has the most degrees conferred?"}
{"idx": 194, "logic": "( fname ) , ( lname ) that belongs to ( student ) , that have ( ( major ) not equal to ( major ) that belongs to ( student ) , grouped by ( major ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) )", "pred": "Find the first name and last name of the student who is not in the major with the most students.", "label": "Find the first and last name of students who are not in the largest major."}
{"idx": 195, "logic": "( official native language ) that belongs to ( country ) , that have ( ( official_native_language ) like ( %english% ) )", "pred": "What are the official native languages of countries whose official language contains the word English.", "label": "Show all official native languages that contain the word \"English\"."}
{"idx": 196, "logic": "( organization name ) that belongs to ( organizations ) , that have ( ( organization_name ) like ( %party% ) )", "pred": "Find the names of the organizations whose name contains the word \"Party\".", "label": "What are the names of organizations that contain the word \"Party\"?"}
{"idx": 197, "logic": "( staff details ) that belongs to ( research staff ) , ordered by ( ( staff details ) in ascending order )", "pred": "List the details of research staff in ascending order of staff detail.", "label": "List the research staff details, and order in ascending order."}
{"idx": 198, "logic": "( headquartered city of student ) that belongs to ( ( store ) , and ( ( store district ) satisfied that ( ( store id of club ) equal to ( store id of member of club ) ) ) , and ( ( district ) satisfied that ( ( district id of member of club ) equal to ( district id of student ) ) ) ) , grouped by ( headquartered city of student ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the city that has the most stores.", "label": "What is the city with the most number of flagship stores?"}
{"idx": 199, "logic": "( the average of ( acc bal ) ) , ( acc type ) that belongs to ( customer ) , that have ( ( credit score ) less than ( 50 ) ) , grouped by ( acc type )", "pred": "What is the average account balance and credit score for customers whose credit score is below 50?", "label": "For each account type, find the average account balance of customers with credit score lower than 50."}
{"idx": 200, "logic": "( name ) that belongs to ( person ) , that have ( ( age ) equal to ( the maximum of ( age ) ) that belongs to ( person ) )", "pred": "Find the names of people who are older than the oldest person.", "label": "What is the name of the person who is the oldest?"}
{"idx": 201, "logic": "( advisor ) that belongs to ( student ) , that have ( ( city code ) equal to ( bal ) )", "pred": "Find the advisors of students living in city \"Bal\".", "label": "Show the advisors of the students whose city of residence has city code \"BAL\"."}
{"idx": 202, "logic": "( official name ) that belongs to ( city ) , that have ( ( city_id ) not in ( ( host city id ) that belongs to ( farm competition ) ) )", "pred": "Find the official names of cities that did not host any competition.", "label": "What are the official names of cities that have not hosted a farm competition?"}
{"idx": 203, "logic": "( the number of ( all items ) ) that belongs to ( region )", "pred": "Count the number of regions.", "label": "How many regions do we have?"}
{"idx": 204, "logic": "( the number of ( all items ) ) that belongs to ( ( department stores ) , and ( ( department store chain ) satisfied that ( ( dept store chain id of addresses ) equal to ( dept store chain id of staff ) ) ) ) , that have ( ( dept store chain name of staff ) equal to ( south ) )", "pred": "Count the number of department stores in the city of south.", "label": "How many department stores does the store chain South have?"}
{"idx": 205, "logic": "( document id of addresses ) that belongs to ( ( documents ) , and ( ( documents with expenses ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) ) , that have ( ( t1.document_name ) like ( '%s%' ) )", "pred": "What are the ids of the documents with expenses whose name contains the letter 'S'?", "label": "What are the ids of documents with letter's' in the name with any expense budgets."}
{"idx": 206, "logic": "( the number of ( all items ) ) that belongs to ( ( routes ) , and ( ( airports ) satisfied that ( ( dst apid of addresses ) equal to ( apid of staff ) ) ) , and ( ( airlines ) satisfied that ( ( alid of addresses ) equal to ( alid of enzyme ) ) ) ) , that have ( ( ( country of staff ) equal to ( 'italy' ) ) and ( ( name of enzyme ) equal to ( 'american airlines' ) ) )", "pred": "Find the number of routes operated by American Airlines.", "label": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'."}
{"idx": 207, "logic": "( the number of ( all items ) ) that belongs to ( weather ) , that have ( ( ( mean humidity ) greater than ( 50 ) ) and ( ( mean visibility miles ) greater than ( 8 ) ) )", "pred": "Count the number of days that have mean humidity above 50 and mean visibility miles above 8.", "label": "How many days had both mean humidity above 50 and mean visibility above 8?"}
{"idx": 208, "logic": "( name ) that belongs to ( student ) , that have ( ( dept name ) equal to ( 'history' ) ) , ordered by ( ( tot cred ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the student from History department with the highest tot cred.", "label": "Give the name of the student in the History department with the most credits."}
{"idx": 209, "logic": "( firstname of staff ) , ( lastname of staff ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of addresses ) equal to ( evelina ) ) and ( ( lastname of addresses ) equal to ( bromley ) ) )", "pred": "What are the first names and last names of the teachers who teach the students with first name \"Evelina\" and last name \"Bromley\"", "label": "Which teachers teach the student named EVELINA BROMLEY? Give me the first and last name  of the teachers."}
{"idx": 210, "logic": "( emp fname of addresses ) , ( prof office of staff ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of enzyme ) equal to ( dept code of staff ) ) ) ) , that have ( ( ( dept name of enzyme ) equal to ( 'history' ) ) and ( ( prof high degree of staff ) equal to ( 'ph.d.' ) ) )", "pred": "What are the first names and offices of the professors who are in History department and have a Ph.D.?", "label": "Find the first name and office of the professor who is in the history department and has a Ph.D. degree."}
{"idx": 211, "logic": "( team name ) that belongs to ( basketball match ) , ordered by ( ( all home ) in descending order )", "pred": "List the names of teams in basketball matches in descending order of all home games.", "label": "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?"}
{"idx": 212, "logic": "( billing country ) , ( the sum of ( total ) ) that belongs to ( invoices ) , grouped by ( billing country ) , ordered by ( ( the sum of ( total ) ) in descending order ) , limited to the top ( 8 )", "pred": "Show the top 8 billing countries and the total amount of invoices made.", "label": "What are the names of the top 8 countries by total invoice size and what are those sizes?"}
{"idx": 213, "logic": "( name ) , ( other details ) that belongs to ( staff )", "pred": "List the name and other details of all staff.", "label": "What is the name and detail of each staff member?"}
{"idx": 214, "logic": "( product price ) that belongs to ( products ) , that have ( ( product_id ) not in ( ( product id ) that belongs to ( complaints ) ) )", "pred": "Find the price of products that do not have any complaints.", "label": "What are the prices of products that have never gotten a complaint?"}
{"idx": 215, "logic": "( roomname of staff ) that belongs to ( ( reservations ) , and ( ( rooms ) satisfied that ( ( room of addresses ) equal to ( roomid of staff ) ) ) ) , grouped by ( room of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the room that has made the most reservation.", "label": "Which room has the largest number of reservations?"}
{"idx": 216, "logic": "all items that belongs to ( course authors and tutors ) , ordered by ( ( personal name ) )", "pred": "List all information about course authors and tutors, ordered by personal name.", "label": "Sort the information about course authors and tutors in alphabetical order of the personal name."}
{"idx": 217, "logic": "( the number of ( all items ) ) that belongs to ( artist ) , that have ( ( country ) equal to ( bangladesh ) )", "pred": "Count the number of artists from Bangladesh.", "label": "How many Bangladeshi artists are listed?"}
{"idx": 218, "logic": "( unit of measure of member of club ) that belongs to ( ( products ) , and ( ( ref product categories ) satisfied that ( ( product category code of club ) equal to ( product category code of member of club ) ) ) ) , that have ( ( product name of club ) equal to ( cumin ) )", "pred": "What is the unit of measure of the product named \"Cumin\"", "label": "What is the unit of measurement of product named \"cumin\"?"}
{"idx": 219, "logic": "( name ) that belongs to ( reviewer ) and ( title ) that belongs to ( movie )", "pred": "List the names of reviewers and titles of movies.", "label": "What are the names of all the reviewers and movie names?"}
{"idx": 220, "logic": "( location name of enzyme ) that belongs to ( ( all documents ) , and ( ( document locations ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) , and ( ( ref locations ) satisfied that ( ( location code of staff ) equal to ( location code of enzyme ) ) ) ) , that have ( ( document name of addresses ) equal to ( robin cv ) )", "pred": "Find the location of the document named \"Robin CV\".", "label": "What is the location name of the document \"Robin CV\"?"}
{"idx": 221, "logic": "( the number of ( all items ) ) , ( sex ) that belongs to ( people ) , that have ( ( weight ) greater than ( 85 ) ) , grouped by ( sex )", "pred": "Count the number of people with weight above 85 for each sex.", "label": "Count the number of people of each sex who have a weight higher than 85."}
{"idx": 222, "logic": "( the average of ( attendance ) ) that belongs to ( performance )", "pred": "Find the average attendance for all performances.", "label": "What is the average number of attendees for performances?"}
{"idx": 223, "logic": "( the minimum of ( salary ) ) , ( dept name ) that belongs to ( instructor ) , grouped by ( dept name ) , that have ( ( the average of ( salary ) ) greater than ( the average of ( salary ) ) that belongs to ( instructor ) )", "pred": "What is the minimum and maximum salary of all instructors whose average salary is higher than the average?", "label": "What is the lowest salary in departments with average salary greater than the overall average."}
{"idx": 224, "logic": "( the number of ( all items ) ) that belongs to ( apartment bookings )", "pred": "Count the number of apartment bookings.", "label": "How many apartment bookings are there in total?"}
{"idx": 225, "logic": "( classroom ) , ( the number of ( all items ) ) that belongs to ( list ) , that have ( ( grade ) equal to ( 0 ) ) , grouped by ( classroom )", "pred": "Show classroom number and the number of students in grade 0.", "label": "For each grade 0 classroom, report the total number of students."}
{"idx": 226, "logic": "( the number of ( distinct ( name of addresses ) ) ) , ( headquarter of staff ) that belongs to ( ( products ) , and ( ( manufacturers ) satisfied that ( ( manufacturer of addresses ) equal to ( code of staff ) ) ) ) , grouped by ( headquarter of staff )", "pred": "Find the number of distinct names and headquarters of each manufacturer.", "label": "How many different products are produced in each headquarter city?"}
{"idx": 227, "logic": "( the average of ( height ) ) , ( the average of ( weight ) ) that belongs to ( people ) , that have ( ( sex ) equal to ( 'm' ) )", "pred": "What is the average height and weight of people whose sex is 'M'?", "label": "Find the average height and weight for all males (sex is M)."}
{"idx": 228, "logic": "( first name ) , ( last name ) , ( salary ) that belongs to ( employees ) , that have ( ( salary ) less than ( 6000 ) )", "pred": "What is the first name, last name, and salary of all employees with salary below 6000?", "label": "List the full name (first and last name), and salary for those employees who earn below 6000."}
{"idx": 229, "logic": "( name ) that belongs to ( procedures ) , ordered by ( ( cost ) ) , limited to the top ( 3 )", "pred": "Find the name of the procedure that cost the most.", "label": "What are the three most costly procedures?"}
{"idx": 230, "logic": "( name ) that belongs to ( instructor ) , ordered by ( ( salary ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the instructor who earns the most salary.", "label": "Give the name of the highest paid instructor."}
{"idx": 231, "logic": "( the number of ( all items ) ) that belongs to ( phone )", "pred": "Count the number of phones.", "label": "How many phones are there?"}
{"idx": 232, "logic": "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , grouped by ( cust name of addresses ) , ordered by ( ( the sum of ( amount of staff ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the customer who has taken the most loans.", "label": "What is the name of the customer who has greatest total loan amount?"}
{"idx": 233, "logic": "( writer ) that belongs to ( book ) , grouped by ( writer ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "Show all writers who wrote more than one book.", "label": "List the writers who have written more than one book."}
{"idx": 234, "logic": "( the number of ( all items ) ) that belongs to ( visitors ) , that have ( ( tourist_id ) not in ( ( tourist id ) that belongs to ( visits ) ) )", "pred": "Count the number of visitors who do not visit any tourist.", "label": "Count the number of tourists who did not visit any place."}
{"idx": 235, "logic": "( name ) that belongs to ( driver ) , that have ( ( driver_id ) not in ( ( driver id ) that belongs to ( school bus ) ) )", "pred": "Find the names of drivers who do not drive school bus.", "label": "Show the names of the drivers without a school bus."}
{"idx": 236, "logic": "( headquarters ) that belongs to ( company ) , grouped by ( headquarters ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show the headquarters of companies that have at least two headquarters.", "label": "Show the headquarters that have at least two companies."}
{"idx": 237, "logic": "( shipping agent name ) that belongs to ( ref shipping agents )", "pred": "List the name of all shipping agents.", "label": "What are the shipping agent names?"}
{"idx": 238, "logic": "( the maximum of ( milliseconds ) ) , ( the minimum of ( milliseconds ) ) that belongs to ( track )", "pred": "Show the maximum and minimum milliseconds of all tracks.", "label": "Find the maximum and minimum durations of tracks in milliseconds."}
{"idx": 239, "logic": "( the number of ( all items ) ) that belongs to ( \"l ( state of addresses ) that belongs to ( ( college ) , and ( ( tryout ) satisfied that ( ( cname of addresses ) equal to ( cname of staff ) ) ) ) , that have ( ( ppos of staff ) equal to ( 'mid' ) ), and except that ( ( state of addresses ) that belongs to ( ( college ) , and ( ( tryout ) satisfied that ( ( cname of addresses ) equal to ( cname of staff ) ) ) ) , that have ( ( ppos of staff ) equal to ( 'goalie' ) )) r\" )", "pred": "Find the number of colleges that did not have any mid or goalie tryouts.", "label": "How many states that have some college students playing in the mid position but not in the goalie position."}
{"idx": 240, "logic": "( the average of ( gradepoint of staff ) ) that belongs to ( ( enrolled in ) join ( ( gradeconversion ) ) , and ( ( student ) satisfied that ( ( ( grade of addresses ) equal to ( lettergrade of staff ) ) and ( ( stuid of addresses ) equal to ( stuid of enzyme ) ) ) ) ) , that have ( ( lname of enzyme ) equal to ( smith ) )", "pred": "What is the average gradepoint of the students who are enrolled in the lettergrade of Smith?", "label": "What is the average gradepoint for students with the last name Smith?"}
{"idx": 241, "logic": "( distinct ( cname ) ) that belongs to ( college ) , that have ( ( enr ) greater than ( the minimum of ( enr ) ) that belongs to ( college ) , that have ( ( state ) equal to ( 'fl' ) ) )", "pred": "What are the distinct names of colleges whose enrollment is higher than the minimum enrollment in states in FL?", "label": "What are the names of the colleges that are larger than at least one college in Florida?"}
{"idx": 242, "logic": "( name ) , ( city ) that belongs to ( branch ) , that have ( ( branch_id ) not in ( ( branch id ) that belongs to ( membership register branch ) ) )", "pred": "Find the name and city of branches that do not have any membership register branch.", "label": "What are the names and cities of the branches that do not have any registered members?"}
{"idx": 243, "logic": "( the number of ( all items ) ) , ( classroom ) that belongs to ( list ) , grouped by ( classroom )", "pred": "Find the number of students in each classroom.", "label": "How many students does one classroom have?"}
{"idx": 244, "logic": "( name ) , ( price ) that belongs to ( products ) , that have ( ( price ) greater than or equal to ( 180 ) ) , ordered by ( ( price ) desc,( name ) in ascending order )", "pred": "What are the names and prices of products with price above or equal to 180, ordered by price desc, name?", "label": "What are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?"}
{"idx": 245, "logic": "( the number of ( all items ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( ( fname of student ) equal to ( tracy ) ) and ( ( lname of student ) equal to ( kim ) ) )", "pred": "Find the number of members of the club \"Tracy Kim\".", "label": "For how many clubs is \"Tracy Kim\" a member?"}
{"idx": 246, "logic": "( title of addresses ) , ( director of addresses ) that belongs to ( ( movie ) , and ( ( movie ) satisfied that ( ( director of addresses ) equal to ( director of staff ) ) ) ) , that have ( ( title of addresses ) not equal to ( title of staff ) ) , ordered by ( ( director of addresses ),( title of addresses ) )", "pred": "What are the titles and names of the movies directed by different directors, ordered by director?", "label": "For all directors who have directed more than one movie, what movies have they directed and what are their names?"}
{"idx": 247, "logic": "( status ) , ( the average of ( population ) ) that belongs to ( city ) , grouped by ( status )", "pred": "Show each status and the average population of each status.", "label": "What are the statuses and average populations of each city?"}
{"idx": 248, "logic": "( venue ) , ( name ) that belongs to ( event ) , ordered by ( ( event attendance ) in descending order ) , limited to the top ( 2 )", "pred": "Find the venue and name of the event with the largest attendance.", "label": "List the event venues and names that have the top 2 most number of people attended."}
{"idx": 249, "logic": "( building ) , ( the number of ( all items ) ) that belongs to ( faculty ) , grouped by ( building )", "pred": "Show each building and the number of faculty in that building.", "label": "How many faculty members does each building have? List the result with the name of the building."}
{"idx": 250, "logic": "( date of birth ) that belongs to ( staff ) , that have ( ( ( first name ) equal to ( janessa ) ) and ( ( last name ) equal to ( sawayn ) ) )", "pred": "What are the dates of birth of the staff members whose first name is Janessa and last name is Sawayn.", "label": "What is the birthday of the staff member with first name as Janessa and last name as Sawayn?"}
{"idx": 251, "logic": "( name ) that belongs to ( accounts ) , ordered by ( ( name ) )", "pred": "List the names of accounts, ordered by name.", "label": "List all customers\u2019 names in the alphabetical order."}
{"idx": 252, "logic": "( activity name of enzyme ) that belongs to ( ( faculty ) , and ( ( faculty participates in ) satisfied that ( ( facid of addresses ) equal to ( facid of staff ) ) ) , and ( ( activity ) satisfied that ( ( actid of enzyme ) equal to ( actid of staff ) ) ) ) , that have ( ( ( fname of addresses ) equal to ( mark ) ) and ( ( lname of addresses ) equal to ( giuliano ) ) )", "pred": "What are the names of all the activities that Mark Giuliano participates in?", "label": "Show the names of all the activities Mark Giuliano participates in."}
{"idx": 253, "logic": "( lastname ) that belongs to ( list ) , that have ( ( classroom ) equal to ( 111 ) )", "pred": "What are the last names of the students who teach in classroom 111", "label": "What are the last names of students in room 111?"}
{"idx": 254, "logic": "( royal family details of addresses ) , ( how to get there of staff ) that belongs to ( ( royal family ) , and ( ( tourist attractions ) satisfied that ( ( royal family id of addresses ) equal to ( tourist attraction id of staff ) ) ) )", "pred": "Show the details of the royal family and how to get there.", "label": "What are the details and ways to get to tourist attractions related to royal family?"}
{"idx": 255, "logic": "( advisor ) , ( the number of ( all items ) ) that belongs to ( student ) , grouped by ( advisor )", "pred": "Show advisors and the number of students they advise.", "label": "For each advisor, report the total number of students advised by him or her."}
{"idx": 256, "logic": "( firstname of staff ) , ( lastname of staff ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of addresses ) equal to ( evelina ) ) and ( ( lastname of addresses ) equal to ( bromley ) ) )", "pred": "What are the first names and last names of the teachers who teach the students with first name \"Evelina\" and last name \"Bromley\"", "label": "Find the first and last name of all the teachers that teach EVELINA BROMLEY."}
{"idx": 257, "logic": "( song name ) , ( releasedate ) that belongs to ( song ) , ordered by ( ( releasedate ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and releasedate of the song with the most recent releasedate.", "label": "What is the name of the song that was released most recently?"}
{"idx": 258, "logic": "( title of addresses ) , ( name of enzyme ) that belongs to ( ( course ) , and ( ( teaches ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) , and ( ( instructor ) satisfied that ( ( id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( year ) equal to ( 2008 ) ) , ordered by ( ( title of addresses ) )", "pred": "What are the titles and names of the courses taught in 2008, ordered by title?", "label": "Show all titles and their instructors' names for courses in 2008, in alphabetical order by title."}
{"idx": 259, "logic": "( company ) , ( investor ) that belongs to ( entrepreneur )", "pred": "List the company and investor of all entrepreneurs.", "label": "What are the companies and investors that correspond to each entrepreneur?"}
{"idx": 260, "logic": "( the number of ( all items ) ) , ( flag ) that belongs to ( ship ) , grouped by ( flag )", "pred": "Count the number of ships and flag for each flag", "label": "Group by ships by flag, and return number of ships that have each flag."}
{"idx": 261, "logic": "( section title of member of club ) that belongs to ( ( documents ) , and ( ( document sections ) satisfied that ( ( document code of club ) equal to ( document code of member of club ) ) ) ) , that have ( ( document name of club ) equal to ( david cv ) )", "pred": "What is the title of the document with the name david CV.", "label": "What are all the section titles of the document named \"David CV\"?"}
{"idx": 262, "logic": "( title of enzyme ) that belongs to ( ( albums ) , and ( ( tracklists ) satisfied that ( ( aid of addresses ) equal to ( albumid of staff ) ) ) , and ( ( songs ) satisfied that ( ( songid of staff ) equal to ( songid of enzyme ) ) ) ) , that have ( ( label of club ) equal to ( universal music group ) )", "pred": "What is the title of the album \"Universal Music Group\"?", "label": "What are the names of all the songs whose album is under the label of \"Universal Music Group\"?"}
{"idx": 263, "logic": "( distinct ( unitprice ) ) that belongs to ( track )", "pred": "List the distinct unit prices of all tracks.", "label": "Find the distinct unit prices for tracks."}
{"idx": 264, "logic": "( pname of staff ) that belongs to ( ( tryout ) , and ( ( player ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , that have ( ( cname of addresses ) equal to ( cname ) that belongs to ( college ) , ordered by ( ( enr ) in descending order ) , limited to the top ( 1 ) )", "pred": "Find the first name of the player who tried out in the most colleges.", "label": "Find the name of the tryout players who are from the college with largest size."}
{"idx": 265, "logic": "( budget type description ) that belongs to ( ref budget codes ) , that have ( ( budget type code ) equal to ( org ) )", "pred": "What is the description of the budget type code \"Org\"", "label": "Return the description of the budget type that has the code ORG."}
{"idx": 266, "logic": "( crs credit ) , ( crs description ) that belongs to ( course ) , that have ( ( crs code ) equal to ( 'qm-261' ) )", "pred": "What are the credit and description of the courses with code QM-261", "label": "What is the course description and number of credits for QM-261?"}
{"idx": 267, "logic": "( name ) that belongs to ( channel ) , that have ( ( owner ) not equal to ( 'cctv' ) )", "pred": "Find the names of channels whose owner is not \"CTV\".", "label": "Find the names of channels that are not owned by CCTV."}
{"idx": 268, "logic": "( distinct ( pilot of staff ) ) that belongs to ( ( airport ) , and ( ( flight ) satisfied that ( ( id of addresses ) equal to ( airport id of staff ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'united states' ) ) or ( ( name of addresses ) equal to ( 'billund airport' ) ) )", "pred": "What are the distinct pilots of the airports that have either United States or Billund airport?", "label": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?"}
{"idx": 269, "logic": "( amount ) that belongs to ( payment ) , ordered by ( ( amount ) in descending order ) , limited to the top ( 1 )", "pred": "Find the amount of the payment with the largest amount.", "label": "Return the amount of the largest payment."}
{"idx": 270, "logic": "( personal name ) , ( family name ) that belongs to ( students ) , ordered by ( ( family name ) )", "pred": "List the personal name and family name of all students in alphabetical order of family name", "label": "List the personal names and family names of all the students in alphabetical order of family name."}
{"idx": 271, "logic": "( source system code of addresses ) , ( council tax id of staff ) that belongs to ( ( cmi cross references ) , and ( ( benefits overpayments ) satisfied that ( ( cmi cross ref id of addresses ) equal to ( cmi cross ref id of staff ) ) ) ) , ordered by ( ( council tax id of staff ) )", "pred": "What is the source system code and council tax id of the cmi cross references, ordered by the council tax?", "label": "What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id."}
{"idx": 272, "logic": "( the number of ( all items ) ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , that have ( ( characteristic name of student ) equal to ( hot ) )", "pred": "Find the number of characteristics of the product named \"hot\".", "label": "Count the number of products with the 'hot' charactersitic."}
{"idx": 273, "logic": "( first name of staff ) , ( last name of staff ) that belongs to ( ( film actor ) , and ( ( actor ) satisfied that ( ( actor id of addresses ) equal to ( actor id of staff ) ) ) ) , grouped by ( actor id of staff ) , that have ( ( the number of ( all items ) ) greater than ( 30 ) )", "pred": "What are the first and last names of all actors who have appeared in more than 30 films?", "label": "Which film actors (actresses) played a role in more than 30 films? List his or her first name and last name."}
{"idx": 274, "logic": "( state county of addresses ) that belongs to ( ( addresses ) , and ( ( stores ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( marketing region code of staff ) equal to ( ca ) )", "pred": "What are the states of the stores whose marketing region code is \"CA\"", "label": "What are the states or counties of the address of the stores with marketing region code \"CA\"?"}
{"idx": 275, "logic": "( the number of ( all items ) ) that belongs to ( employee )", "pred": "Count the number of employees.", "label": "How many employees are there all together?"}
{"idx": 276, "logic": "( store name of staff ) that belongs to ( ( bookings ) , and ( ( drama workshop groups ) satisfied that ( ( workshop group id of addresses ) equal to ( workshop group id of staff ) ) ) ) , that have ( ( status code of addresses ) equal to ( stop ) )", "pred": "List the name of the drama workshop groups that have bookings with status code STOP.", "label": "What are the names of the workshop groups that have bookings with status code \"stop\"?"}
{"idx": 277, "logic": "( distinct ( main industry ) ) that belongs to ( company )", "pred": "Show all different main industries.", "label": "Show all main industry for all companies."}
{"idx": 278, "logic": "( distinct ( file size of addresses ) ) , ( formats of addresses ) that belongs to ( ( files ) , and ( ( song ) satisfied that ( ( f id of addresses ) equal to ( f id of staff ) ) ) ) , that have ( ( resolution of staff ) less than ( 800 ) )", "pred": "What are the different file size and formats of the songs with resolution below 800?", "label": "What are the file sizes and formats for all songs with a resolution lower than 800?"}
{"idx": 279, "logic": "( the number of ( all items ) ) that belongs to ( artist ) , that have ( ( artistid ) not in ( ( ( artistid ) that belongs to ( album ) ) ) )", "pred": "Count the number of artists who did not have any album.", "label": "Cound the number of artists who have not released an album."}
{"idx": 280, "logic": "( the average of ( transaction amount ) ) , ( the sum of ( transaction amount ) ) that belongs to ( financial transactions )", "pred": "Show the average and total transaction amount for all transactions.", "label": "What is the average and total transaction amount?"}
{"idx": 281, "logic": "( date claim made ) that belongs to ( claims ) , that have ( ( amount settled ) less than or equal to ( the average of ( amount settled ) ) that belongs to ( claims ) )", "pred": "What are the dates of the claims that were settled before or after the average amount settled?", "label": "Return the claim start date for the claims whose claimed amount is no more than the average"}
{"idx": 282, "logic": "( the number of ( distinct ( ppos ) ) ) that belongs to ( tryout )", "pred": "Count the number of distinct ppos for tryouts.", "label": "What are the unique types of player positions in the tryout?"}
{"idx": 283, "logic": "( the maximum of ( silver ) ) , ( the minimum of ( silver ) ) that belongs to ( club rank )", "pred": "Show the maximum and minimum number of silver medals for clubs in each rank.", "label": "What are the maximum and minimum number of silver medals for all the clubs?"}
{"idx": 284, "logic": "( the number of ( all items ) ) , ( dormid of addresses ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of addresses ) equal to ( dormid of staff ) ) ) ) , that have ( ( student capacity of addresses ) greater than ( 100 ) ) , grouped by ( dormid of addresses )", "pred": "Find the number of amenities and id of each dorm with capacity above 100.", "label": "For each dorm, how many amenities does it have?"}
{"idx": 285, "logic": "( staff id of addresses ) , ( staff gender of addresses ) that belongs to ( ( staff ) , and ( ( staff department assignments ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( job title code of staff ) equal to ( department manager ) )", "pred": "What are the ids and genders of the staff who have the job title \"Manager\"", "label": "Return the staff ids and genders for any staff with the title Department Manager."}
{"idx": 286, "logic": "( name of staff ) that belongs to ( ( album ) , and ( ( artist ) satisfied that ( ( artistid of addresses ) equal to ( artistid of staff ) ) ) ) , grouped by ( name of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the artist who has released the most albums.", "label": "What is the name of the artist with the greatest number of albums?"}
{"idx": 287, "logic": "( date of enzyme ) that belongs to ( ( member attendance ) , and ( ( member ) satisfied that ( ( member id of addresses ) equal to ( member id of staff ) ) ) , and ( ( performance ) satisfied that ( ( performance id of addresses ) equal to ( performance id of enzyme ) ) ) ) , that have ( ( role of staff ) equal to ( violin ) )", "pred": "What are the dates of the performances that the member playing the role of violin?", "label": "Show the dates of performances with attending members whose roles are \"Violin\"."}
{"idx": 288, "logic": "( name ) , ( job ) that belongs to ( person ) , ordered by ( ( name ) )", "pred": "List the name and job of all people in alphabetical order of name", "label": "list the name, job title of all people ordered by their names."}
{"idx": 289, "logic": "( customer name of staff ) , ( city of enzyme ) , ( date from of addresses ) , ( date to of addresses ) that belongs to ( ( customer address history ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) , and ( ( addresses ) satisfied that ( ( address id of addresses ) equal to ( address id of enzyme ) ) ) )", "pred": "What are the names, cities, and dates of the customers' addresses?", "label": "Show the customer name, customer address city, date from, and date to for each customer address history."}
{"idx": 290, "logic": "( employee name of employees ) , ( the number of ( all items ) ) that belongs to ( employees , and ( circulation history satisfied that ( ( employee id of circulation history ) equal to ( employee id of employees ) ) ) ) , grouped by ( document id of circulation history ) , ( draft number of circulation history ) , ( copy number of circulation history ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the employee name and the number of copies of the document with the most documents.", "label": "Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies."}
{"idx": 291, "logic": "( name ) that belongs to ( branch ) , ordered by ( ( membership amount ) in descending order ) , limited to the top ( 3 )", "pred": "Find the name of the branch with the highest membership amount.", "label": "What are names for top three branches with most number of membership?"}
{"idx": 292, "logic": "( title of addresses ) , ( year of addresses ) that belongs to ( ( movie ) , and ( ( movie ) satisfied that ( ( director of addresses ) equal to ( director of staff ) ) ) ) , that have ( ( title of addresses ) not equal to ( title of staff ) )", "pred": "What are the titles and years of the movies that were not directed by the director?", "label": "For each director who directed more than one movie, what are the titles and dates of release for all those movies?"}
{"idx": 293, "logic": "( fname of student ) , ( lname of student ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( ( clubname of club ) equal to ( bootup baltimore ) ) and ( ( position of member of club ) equal to ( president ) ) )", "pred": "What are the first and last names of all members of the club \"Bootup Baltimore\"?", "label": "What are the first and last name of the president of the club \"Bootup Baltimore\"?"}
{"idx": 294, "logic": "( chip model ) , ( screen mode ) that belongs to ( phone ) , that have ( ( hardware model name ) equal to ( lg-p760 ) )", "pred": "What is the chip model and screen mode of the phone with hardware model \"LG-P760\"?", "label": "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?"}
{"idx": 295, "logic": "( distinct ( major ) ) that belongs to ( student )", "pred": "List all distinct majors.", "label": "What are the different majors?"}
{"idx": 296, "logic": "( the number of ( all items ) ) that belongs to ( useracct )", "pred": "Count the number of users who have an account.", "label": "How many users are there?"}
{"idx": 297, "logic": "( outcome description of addresses ) that belongs to ( ( research outcomes ) , and ( ( project outcomes ) satisfied that ( ( outcome code of addresses ) equal to ( outcome code of staff ) ) ) )", "pred": "What is the description of the outcome code for the project?", "label": "What are the descriptions of all the project outcomes?"}
{"idx": 298, "logic": "( the number of ( all items ) ) , ( project details of addresses ) that belongs to ( ( projects ) , and ( ( tasks ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , grouped by ( project id of addresses )", "pred": "Find the number of tasks and details for each project.", "label": "For each project id, how many tasks are there?"}
{"idx": 299, "logic": "( the number of ( all items ) ) that belongs to ( authors )", "pred": "Count the number of authors.", "label": "Count the number of authors."}
{"idx": 300, "logic": "( title of addresses ) , ( i id of addresses ) that belongs to ( ( item ) , and ( ( review ) satisfied that ( ( i id of addresses ) equal to ( i id of staff ) ) ) ) , grouped by ( i id of staff ) , ordered by ( ( the average of ( rank of staff ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the title and id of the item that has received the highest average review.", "label": "Find the name and id of the good with the highest average rank."}
{"idx": 301, "logic": "( the number of ( all items ) ) , ( dept name ) that belongs to ( student ) , grouped by ( dept name )", "pred": "Find the number of students in each department and name.", "label": "Find the total number of students in each department."}
{"idx": 302, "logic": "( firstname of staff ) , ( lastname of staff ) that belongs to ( ( customer ) , and ( ( employee ) satisfied that ( ( supportrepid of addresses ) equal to ( employeeid of staff ) ) ) ) , that have ( ( firstname of addresses ) equal to ( leonie ) )", "pred": "What are the first and last names of the employees who support customer with first name \"Leonie\"", "label": "What is the first name and last name employee helps the customer with first name Leonie?"}
{"idx": 303, "logic": "( order id of staff ) , ( order status of staff ) that belongs to ( ( customers ) , and ( ( orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( customer name of addresses ) equal to ( jeramie ) )", "pred": "What are the ids and status of the orders made by customer named \"Jeramie\"", "label": "Give me a list of id and status of orders which belong to the customer named \"Jeramie\"."}
{"idx": 304, "logic": "( fname of addresses ) , ( lname of addresses ) that belongs to ( ( faculty ) , and ( ( member of ) satisfied that ( ( facid of addresses ) equal to ( facid of staff ) ) ) ) , that have ( ( dno of staff ) equal to ( 520 ) )", "pred": "What are the first names and last names of all faculty members who have dno 520.", "label": "What are the full names of faculty members who are a part of department 520?"}
{"idx": 305, "logic": "( name ) , ( service ) that belongs to ( train ) , ordered by ( ( time ) )", "pred": "List the name and service of trains, ordered by time.", "label": "Show the name and service for all trains in order by time."}
{"idx": 306, "logic": "( duration ) that belongs to ( actor ) , ordered by ( ( age ) in descending order ) , limited to the top ( 1 )", "pred": "Find the duration of the actor who is the oldest.", "label": "Return the duration of the actor with the greatest age."}
{"idx": 307, "logic": "all items that belongs to ( employees ) , that have ( ( ( first name ) like ( '%d%' ) ) or ( ( first name ) like ( '%s%' ) ) ) , ordered by ( ( salary ) in descending order )", "pred": "What is all the information about employees whose first name includes the letter D or the letter S, ordered by salary?", "label": "What is all the information about employees with D or S in their first name, ordered by salary descending?"}
{"idx": 308, "logic": "( distinct ( channel code ) ) that belongs to ( ( customers ) , and ( ( customer contact channels ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( customer name of club ) equal to ( tillman ernser ) )", "pred": "What are the distinct channel codes of the customer named \"Tillman ernser\"", "label": "Which contact channel has been used by the customer with name \"Tillman Ernser\"?"}
{"idx": 309, "logic": "( author ) that belongs to ( submission ) , that have ( ( submission_id ) not in ( ( submission id ) that belongs to ( acceptance ) ) )", "pred": "Find the authors who did not submit any acceptance.", "label": "List the authors who do not have submission to any workshop."}
{"idx": 310, "logic": "( rank of addresses ) , ( the number of ( all items ) ) that belongs to ( ( faculty ) , and ( ( student ) satisfied that ( ( facid of addresses ) equal to ( advisor of staff ) ) ) ) , grouped by ( rank of addresses )", "pred": "Show the rank of each faculty member and the number of students.", "label": "How many students are advised by each rank of faculty? List the rank and the number of students."}
{"idx": 311, "logic": "( customer id ) that belongs to ( customers ) , that have ( ( customer_name ) like ( %diana% ) )", "pred": "Find the ids of customers whose name contains the letter Diana.", "label": "What are the IDs of customers who have \"Diana\" in part of their names?"}
{"idx": 312, "logic": "( the number of ( all items ) ) that belongs to ( ( trip ) , and ( ( station ) satisfied that ( ( end station id of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( city of staff ) not equal to ( san francisco ) )", "pred": "Count the number of trips from San Francisco to San Francisco.", "label": "Count the number of trips that did not end in San Francisco city."}
{"idx": 313, "logic": "( the sum of ( balance of staff ) ) that belongs to ( ( accounts ) , and ( ( savings ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) ) , that have ( ( name of addresses ) not equal to ( 'brown' ) )", "pred": "Find the total savings balance of accounts whose name Brown is not in.", "label": "Find the total savings balance of all accounts except the account with name \u2018Brown\u2019."}
{"idx": 314, "logic": "( company ) that belongs to ( entrepreneur ) , ordered by ( ( money requested ) in descending order )", "pred": "List the companies of entrepreneurs, ordered by money requested descending.", "label": "What are the companies of entrepreneurs, ordered descending by amount of money requested?"}
{"idx": 315, "logic": "( name of staff ) that belongs to ( ( assignedto ) , and ( ( projects ) satisfied that ( ( project of addresses ) equal to ( code of staff ) ) ) , and ( ( scientists ) satisfied that ( ( scientist of addresses ) equal to ( ssn of enzyme ) ) ) ) , that have ( ( t3.name ) like ( '%smith%' ) )", "pred": "What are the names of the scientists who are assigned to the project whose name starts with the lettersmith?", "label": "What is the name of the project that has a scientist assigned to it whose name contains 'Smith'?"}
{"idx": 316, "logic": "( catalog name of club ) , ( date of publication of club ) that belongs to ( ( catalogs ) , and ( ( catalog structure ) satisfied that ( ( catalog id of club ) equal to ( catalog id of member of club ) ) ) ) , that have ( ( catalog level number ) greater than ( 5 ) )", "pred": "What are the names and dates of publication of the catalogs with level number above 5?", "label": "Find the names and publication dates of all catalogs that have catalog level number greater than 5."}
{"idx": 317, "logic": "( salary ) that belongs to ( salary ) , that have ( ( year ) equal to ( 2001 ) ) , ordered by ( ( salary ) in descending order ) , limited to the top ( 3 )", "pred": "Find the salary of the 3 highest salary in 2001.", "label": "How much salary did the top 3 well-paid players get in 2001?"}
{"idx": 318, "logic": "( title of staff ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , that have ( ( stars of addresses ) equal to ( 3 ) ), and intersect with ( ( title of staff ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , that have ( ( stars of addresses ) equal to ( 4 ) ))", "pred": "What are the titles of the movies that have 3 stars and 4 stars in total?", "label": "What are the names of movies that get 3 star and 4 star?"}
{"idx": 319, "logic": "( the number of ( all items ) ) that belongs to ( staff )", "pred": "Count the number of staff.", "label": "How many staff in total?"}
{"idx": 320, "logic": "( the number of ( all items ) ) that belongs to ( rooms ) , that have ( ( bedtype ) equal to ( king ) )", "pred": "Count the number of rooms that have king bed.", "label": "How many rooms have a king bed?"}
{"idx": 321, "logic": "( forename ) , ( surname ) that belongs to ( drivers ) , that have ( ( nationality ) equal to ( german ) )", "pred": "What are the forenames and surnames of all drivers whose nationality is German?", "label": "Find the forename and surname of drivers whose nationality is German?"}
{"idx": 322, "logic": "( distinct ( location ) ) that belongs to ( track )", "pred": "List the distinct locations of all tracks.", "label": "Give the different locations of tracks."}
{"idx": 323, "logic": "( name ) that belongs to ( county public safety ) , that have ( ( county_id ) not in ( ( county id ) that belongs to ( city ) ) )", "pred": "List the names of counties that do not have any cities.", "label": "What are the names of counties that do not contain any cities?"}
{"idx": 324, "logic": "( product type code ) , ( the average of ( product price ) ) that belongs to ( products ) , grouped by ( product type code )", "pred": "Show the product type code and the average price of each product.", "label": "What is the average price for each type of product?"}
{"idx": 325, "logic": "( city of addresses ) that belongs to ( ( city ) , and ( ( temperature ) satisfied that ( ( city id of addresses ) equal to ( city id of staff ) ) ) ) , that have ( ( mar of staff ) less than ( jul of staff ) ), and intersect with ( ( city of enzyme ) that belongs to ( ( city ) , and ( ( hosting city ) satisfied that ( ( city id of enzyme ) equal to ( host city of trip ) ) ) ))", "pred": "What are the names of cities that have both a lower temperature in the month of July and a higher temperature in Jan?", "label": "Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities?"}
{"idx": 326, "logic": "( title of addresses ) that belongs to ( ( course ) , and ( ( section ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( ( building ) equal to ( 'chandler' ) ) and ( ( semester ) equal to ( 'fall' ) ) and ( ( year ) equal to ( 2010 ) ) )", "pred": "What are the titles of courses that took place in the building in Prague in Fall 2010?", "label": "What is the title of the course that was offered at building Chandler during the fall semester in the year of 2010?"}
{"idx": 327, "logic": "( the number of ( all items ) ) that belongs to ( savings ) , that have ( ( balance ) greater than ( the average of ( balance ) ) that belongs to ( savings ) )", "pred": "Count the number of savings with a balance higher than the average.", "label": "Find the number of accounts with a savings balance that is higher than the average savings balance."}
{"idx": 328, "logic": "( dorm name ) that belongs to ( dorm ), and except that ( ( dorm name of addresses ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of addresses ) equal to ( dormid of staff ) ) ) , and ( ( dorm amenity ) satisfied that ( ( amenid of staff ) equal to ( amenid of enzyme ) ) ) ) , that have ( ( amenity name of enzyme ) equal to ( 'tv lounge' ) ))", "pred": "What are the names of all the dorms that do not have TV Lounge?", "label": "Find the name of dorms that do not have amenity TV Lounge."}
{"idx": 329, "logic": "( crs description of trip ) , ( crs credit of trip ) that belongs to ( ( class ) , and ( ( enroll ) satisfied that ( ( class code of addresses ) equal to ( class code of staff ) ) ) , and ( ( student ) satisfied that ( ( stu num of enzyme ) equal to ( stu num of staff ) ) ) , and ( ( course ) satisfied that ( ( crs code of trip ) equal to ( crs code of addresses ) ) ) ) , that have ( ( stu lname of enzyme ) equal to ( 'smithson' ) )", "pred": "What is the description and credit of the course taught by the student whose last name is Smithson?", "label": "How many credits is the course that the student with the last name Smithson took, and what is its description?"}
{"idx": 330, "logic": "( date of transaction ) that belongs to ( transactions ) , that have ( ( ( share count ) greater than or equal to ( 100 ) ) or ( ( amount of transaction ) greater than or equal to ( 100 ) ) )", "pred": "What are the dates of transactions with share count above 100 or amount of transactions above 100.", "label": "What are the dates of transactions with at least 100 share count or amount bigger than 100?"}
{"idx": 331, "logic": "( name of addresses ) , ( city of addresses ) , ( dst apid of staff ) that belongs to ( ( airports ) , and ( ( routes ) satisfied that ( ( apid of addresses ) equal to ( dst apid of staff ) ) ) ) , grouped by ( dst apid of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name, city, and id of the airport that has the most routes.", "label": "What is the name and city of the airport that the most routes end at?"}
{"idx": 332, "logic": "( the number of ( all items ) ) , ( dept code ) that belongs to ( student ) , grouped by ( dept code )", "pred": "Find the number of students and the department code.", "label": "Find the number of students for each department."}
{"idx": 333, "logic": "( text ) that belongs to ( tweets ) , that have ( ( text ) like ( '%intern%' ) )", "pred": "Find the text of the tweets whose text contains the word \"intern\".", "label": "Return the text of tweets about the topic 'intern'."}
{"idx": 334, "logic": "( distinct ( catalog publisher ) ) that belongs to ( catalogs ) , that have ( ( catalog_publisher ) like ( %murray% ) )", "pred": "Find the distinct catalog publishers that have the wordmurray in their names.", "label": "Find all the catalog publishers whose name contains \"Murray\""}
{"idx": 335, "logic": "( campus of addresses ) , ( the sum of ( degrees of staff ) ) that belongs to ( ( campuses ) , and ( ( degrees ) satisfied that ( ( id of addresses ) equal to ( campus of staff ) ) ) ) , that have ( ( ( county of addresses ) equal to ( orange ) ) and ( ( year of staff ) greater than or equal to ( 2000 ) ) ) , grouped by ( campus of addresses )", "pred": "Show the campus and the total number of degrees conferred in 2000 for each campus.", "label": "For each Orange county campus, report the number of degrees granted after 2000."}
{"idx": 336, "logic": "( distinct ( lastname of staff ) ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( grade ) equal to ( 5 ) )", "pred": "What are the last names of the teachers who teach grade 5?", "label": "what are the last names of the teachers who teach grade 5?"}
{"idx": 337, "logic": "( order id ) that belongs to ( shipments ) , that have ( ( shipment date ) greater than ( 2000-01-01 ) )", "pred": "What are the ids of the orders made after 2000-01-01?", "label": "Find the ids of orders which are shipped after 2000-01-01."}
{"idx": 338, "logic": "( payment method code ) , ( the number of ( all items ) ) that belongs to ( customers ) , grouped by ( payment method code )", "pred": "Show payment method code and the number of customers using each payment method.", "label": "For each payment method, return how many customers use it."}
{"idx": 339, "logic": "( the number of ( all items ) ) , ( formats ) that belongs to ( files ) , grouped by ( formats )", "pred": "Count the number of files in each format.", "label": "How many songs were released for each format?"}
{"idx": 340, "logic": "( apt number ) that belongs to ( apartments ) , ordered by ( ( room count ) in ascending order )", "pred": "List the apartment number of apartments in ascending order of room count", "label": "Return all the apartment numbers sorted by the room count in ascending order."}
{"idx": 341, "logic": "( subject name ) that belongs to ( subjects )", "pred": "List the name of all subjects.", "label": "What are the names of all the subjects."}
{"idx": 342, "logic": "( the number of ( all items ) ) that belongs to ( airports ) , that have ( ( name ) like ( '%international%' ) )", "pred": "Count the number of airports whose name contains the word \"International\".", "label": "How many airports' names have the word Interanation in them?"}
{"idx": 343, "logic": "( customer id of addresses ) , ( customer first name of staff ) , ( customer last name of staff ) , ( the number of ( all items ) ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses )", "pred": "Find the id, first name, last name, and number of accounts for each customer.", "label": "Show id, first name and last name for all customers and the number of accounts."}
{"idx": 344, "logic": "( the average of ( hs ) ) , ( the maximum of ( hs ) ) , ( the minimum of ( hs ) ) that belongs to ( player )", "pred": "What are the average, maximum, and minimum hours of all players?", "label": "What is the average, maximum, and minimum for the number of hours spent training?"}
{"idx": 345, "logic": "( the number of ( all items ) ) that belongs to ( web client accelerator ) , that have ( ( id ) not in ( ( accelerator id ) that belongs to ( accelerator compatible browser ) ) )", "pred": "Count the number of web client accelerators that do not have compatible browser.", "label": "How many accelerators are not compatible with the browsers listed?"}
{"idx": 346, "logic": "( emp fname of addresses ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , that have ( ( dept name of enzyme ) equal to ( 'history' ) ), and except that ( ( emp fname of trip ) that belongs to ( ( employee ) , and ( ( class ) satisfied that ( ( emp num of trip ) equal to ( prof num of department ) ) ) ))", "pred": "What are the first names of the professors who teach History but not Prof?", "label": "What are the first names of all history professors who do not teach?"}
{"idx": 347, "logic": "( title ) that belongs to ( course ) , grouped by ( title ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "List the titles of courses that have more than one course.", "label": "Find the title of the course that is offered by more than one department."}
{"idx": 348, "logic": "( the average of ( hs ) ) , ( the maximum of ( hs ) ) , ( the minimum of ( hs ) ) that belongs to ( player )", "pred": "What are the average, maximum, and minimum hours of all players?", "label": "Find the max, average and min training hours of all players."}
{"idx": 349, "logic": "( zip code ) , ( the number of ( all items ) ) that belongs to ( weather ) , that have ( ( max wind speed mph ) greater than or equal to ( 25 ) ) , grouped by ( zip code )", "pred": "Show zip code and the number of days with max wind speed mph above 25 for each zip code.", "label": "For each zip code, how many times has the maximum wind speed reached 25 mph?"}
{"idx": 350, "logic": "( product category code ) that belongs to ( products ) , that have ( ( product name ) equal to ( flax ) )", "pred": "Find the category code of the product named \"Flax\".", "label": "Which category does the product named \"flax\" belong to?"}
{"idx": 351, "logic": "( name of enzyme ) that belongs to ( ( physician ) , and ( ( trained in ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( procedures ) satisfied that ( ( code of enzyme ) equal to ( treatment of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( john wen ) )", "pred": "What are the names of physicians who have been trained in procedures by John Wen?", "label": "What are the names of procedures physician John Wen was trained in?"}
{"idx": 352, "logic": "( attribute name of club ) , ( attribute id of club ) that belongs to ( ( attribute definitions ) , and ( ( catalog contents additional attributes ) satisfied that ( ( attribute id of club ) equal to ( attribute id of member of club ) ) ) ) , that have ( ( attribute value of member of club ) equal to ( 0 ) )", "pred": "What are the names and ids of the attribute definitions with attribute value 0.", "label": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID."}
{"idx": 353, "logic": "( customer id of addresses ) , ( customer first name of staff ) , ( customer last name of staff ) that belongs to ( ( customers cards ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What are the id, first name, and last name of the customers who have at least two cards?", "label": "Show id, first and last names for all customers with at least two cards."}
{"idx": 354, "logic": "( city of staff ) that belongs to ( ( customers ) , and ( ( addresses ) satisfied that ( ( customer address id of addresses ) equal to ( address id of staff ) ) ) ) , grouped by ( city of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Which city has the most customers? List the city.", "label": "Which city does has most number of customers?"}
{"idx": 355, "logic": "( distinct ( product name of club ) ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , that have ( ( characteristic name of student ) equal to ( warm ) )", "pred": "What are the distinct names of the products with characteristic name \"warm\"?", "label": "What are the different product names for products that have the 'warm' characteristic:?"}
{"idx": 356, "logic": "( theme of staff ) that belongs to ( ( exhibition record ) , and ( ( exhibition ) satisfied that ( ( exhibition id of addresses ) equal to ( exhibition id of staff ) ) ) ) , that have ( ( attendance of addresses ) less than ( 100 ) ), and intersect with ( ( theme of staff ) that belongs to ( ( exhibition record ) , and ( ( exhibition ) satisfied that ( ( exhibition id of addresses ) equal to ( exhibition id of staff ) ) ) ) , that have ( ( attendance of addresses ) greater than ( 500 ) ))", "pred": "What are the themes of the exhibitions that have both an attendance lower than 100 and an attendance higher than 500.", "label": "Which themes have had corresponding exhibitions that have had attendance both below 100 and above 500?"}
{"idx": 357, "logic": "( the number of ( distinct ( characteristic name of student ) ) ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , that have ( ( product name of club ) equal to ( sesame ) )", "pred": "Find the number of distinct characteristics of the product named \"Sesame\".", "label": "How many distinct characteristic names does the product \"cumin\" have?"}
{"idx": 358, "logic": "( policy type code ) , ( the number of ( all items ) ) that belongs to ( policies ) , grouped by ( policy type code )", "pred": "Show the policy type code and the number of policies for each type.", "label": "Find the number of records of each policy type and its type code."}
{"idx": 359, "logic": "( the number of ( all items ) ) that belongs to ( ( lessons ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( t2.first_name ) like ( %a% ) )", "pred": "Count the number of lessons taught by staff whose first name contains the letter \"a\".", "label": "How many lessons were taught by a staff member whose first name has the letter 'a' in it?"}
{"idx": 360, "logic": "( product type code ) that belongs to ( products ) , grouped by ( product type code ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What is the code of the product type that has at least two products.", "label": "Show the product type codes that have at least two products."}
{"idx": 361, "logic": "( major ) that belongs to ( student ) , grouped by ( major ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the most common major.", "label": "What is the largest major?"}
{"idx": 362, "logic": "( date ) that belongs to ( performance ) , ordered by ( ( attendance ) in descending order ) , limited to the top ( 1 )", "pred": "Find the date of the performance with the largest attendance.", "label": "What is the date of the performance with the highest number of attendees?"}
{"idx": 363, "logic": "( date order placed of addresses ) that belongs to ( ( orders ) , and ( ( shipments ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) ) , that have ( ( invoice number of staff ) equal to ( 10 ) )", "pred": "What are the dates of the orders with invoice number 10.", "label": "What is the placement date of the order whose invoice number is 10?"}
{"idx": 364, "logic": "( crime rate ) that belongs to ( county public safety ) , ordered by ( ( police officers ) in ascending order )", "pred": "List the crime rates of counties in ascending order of police officers.", "label": "What are the crime rates of counties sorted by number of offices ascending?"}
{"idx": 365, "logic": "( distinct ( grape of addresses ) ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , that have ( ( ( color of addresses ) equal to ( white ) ) and ( ( score of staff ) greater than ( 90 ) ) )", "pred": "What are the distinct grape names of wines with color white and score higher than 90?", "label": "Find the the grape whose white color grapes are used to produce wines with scores higher than 90."}
{"idx": 366, "logic": "( customer id ) , ( the sum of ( amount paid ) ) that belongs to ( payments ) , grouped by ( customer id ) , ordered by ( ( the sum of ( amount paid ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id and total amount paid for the customer who has made the most payments.", "label": "What is the maximum total amount paid by a customer? List the customer id and amount."}
{"idx": 367, "logic": "all items that belongs to ( basketball match )", "pred": "List all information about basketball matches.", "label": "List all information regarding the basketball match."}
{"idx": 368, "logic": "( salary ) that belongs to ( salary ) , that have ( ( year ) equal to ( 2010 ) ) and ( salary ) that belongs to ( salary ) , that have ( ( year ) equal to ( 2001 ) )", "pred": "What are the salaries of the salaries in 2010 and in 2001?", "label": "What were all the salary values of players in 2010 and 2001?"}
{"idx": 369, "logic": "( county name ) that belongs to ( county ) , ordered by ( ( population ) in ascending order )", "pred": "List the name of counties in ascending order of population.", "label": "Sort the names of all counties in ascending order of population."}
{"idx": 370, "logic": "( stuid ) that belongs to ( student ) , that have ( ( sex ) equal to ( 'f' ) ), and intersect with ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( sportname ) equal to ( football ) ))", "pred": "Find the ids of female students who play both Football and Football.", "label": "Show student ids who are female and play football."}
{"idx": 371, "logic": "( the sum of ( stu hrs ) ) , ( dept code ) that belongs to ( student ) , grouped by ( dept code )", "pred": "Find the total hours and codes of each department.", "label": "How many hours do the students spend studying in each department?"}
{"idx": 372, "logic": "( the average of ( rating ) ) , ( the average of ( resolution ) ) that belongs to ( song ) , that have ( ( languages ) equal to ( bangla ) )", "pred": "What is the average rating and resolution of the songs in Bangla?", "label": "What is the average rating and resolution of all bangla songs?"}
{"idx": 373, "logic": "( distinct ( building ) ) that belongs to ( classroom ) , that have ( ( capacity ) greater than ( 50 ) )", "pred": "What are the distinct buildings of classrooms with capacity greater than 50.", "label": "Find the buildings which have rooms with capacity more than 50."}
{"idx": 374, "logic": "( lat of addresses ) , ( long of addresses ) , ( city of addresses ) that belongs to ( ( station ) , and ( ( trip ) satisfied that ( ( id of addresses ) equal to ( start station id of staff ) ) ) ) , ordered by ( ( duration of staff ) ) , limited to the top ( 1 )", "pred": "What is the lat, long, and city of the station that started the longest trip?", "label": "What is the latitude, longitude, city of the station from which the shortest trip started?"}
{"idx": 375, "logic": "( code ) , ( name ) , ( the minimum of ( price ) ) that belongs to ( products ) , grouped by ( name )", "pred": "List the code, name, and minimum price of each product.", "label": "Select the code of the product that is cheapest in each product category."}
{"idx": 376, "logic": "( distinct ( all items ) ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) ) , that have ( ( employee id of addresses ) equal to ( manager id of staff ) )", "pred": "What are all the different departments that have employees who are manager?", "label": "get the details of employees who manage a department."}
{"idx": 377, "logic": "( the number of ( all items ) ) that belongs to ( building ) , that have ( ( ( height feet ) greater than ( the average of ( height feet ) ) that belongs to ( building ) ) or ( ( floors ) greater than ( the average of ( floors ) ) that belongs to ( building ) ) )", "pred": "Count the number of buildings that have more than the average height of buildings or with more than average floors.", "label": "Show the number of buildings with a height above the average or a number of floors above the average."}
{"idx": 378, "logic": "( advisor ) that belongs to ( student ) , grouped by ( advisor ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Find the advisors who advise at least two students.", "label": "What are the advisors"}
{"idx": 379, "logic": "( the sum of ( lesson time ) ) that belongs to ( ( lessons ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( ( first name of staff ) equal to ( janessa ) ) and ( ( last name of staff ) equal to ( sawayn ) ) )", "pred": "Find the total lesson time of staff with first name Janessa and last name Sawayn.", "label": "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?"}
{"idx": 380, "logic": "( the number of ( all items ) ) that belongs to ( race )", "pred": "Count the number of races.", "label": "How many races are there?"}
{"idx": 381, "logic": "( asset id of addresses ) , ( asset details of addresses ) that belongs to ( ( assets ) , and ( ( asset parts ) satisfied that ( ( asset id of addresses ) equal to ( asset id of staff ) ) ) ) , grouped by ( asset id of addresses ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) ), and intersect with ( ( asset id of addresses ) , ( asset details of addresses ) that belongs to ( ( assets ) , and ( ( fault log ) satisfied that ( ( asset id of addresses ) equal to ( asset id of staff ) ) ) ) , grouped by ( asset id of addresses ) , that have ( ( the number of ( all items ) ) less than ( 2 ) ))", "pred": "What are the ids and details of the assets that have two parts and two fault log?", "label": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail."}
{"idx": 382, "logic": "( famous release date ) that belongs to ( artist ) , ordered by ( ( age ) in descending order ) , limited to the top ( 1 )", "pred": "Return the famous release date of the artist with the oldest age.", "label": "What is the famous release date of the artist with the oldest age?"}
{"idx": 383, "logic": "( rank ) , ( sex ) , ( the number of ( all items ) ) that belongs to ( faculty ) , grouped by ( rank ) , ( sex )", "pred": "Show rank, sex, and the number of faculty members.", "label": "How many faculty members do we have for each rank and gender?"}
{"idx": 384, "logic": "( title ) that belongs to ( ( vocals ) , and ( ( songs ) satisfied that ( ( songid of addresses ) equal to ( songid of staff ) ) ) ) , grouped by ( songid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the title of the song with the most vocals.", "label": "What is the song with the most vocals?"}
{"idx": 385, "logic": "( team name of member of club ) , ( acc regular season of member of club ) that belongs to ( ( university ) , and ( ( basketball match ) satisfied that ( ( school id of club ) equal to ( school id of member of club ) ) ) ) , ordered by ( ( founded of club ) ) , limited to the top ( 1 )", "pred": "Find the team name and acc regular season of the school founded the most basketball matches.", "label": "What is the team name and acc regular season score of the school that was founded for the longest time?"}
{"idx": 386, "logic": "( title ) that belongs to ( ( vocals ) , and ( ( songs ) satisfied that ( ( songid of addresses ) equal to ( songid of staff ) ) ) ) , grouped by ( songid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the title of the song with the most vocals.", "label": "Which song has the most vocals?"}
{"idx": 387, "logic": "( role description of addresses ) , ( role code of staff ) , ( the number of ( all items ) ) that belongs to ( ( roles ) , and ( ( employees ) satisfied that ( ( role code of addresses ) equal to ( role code of staff ) ) ) ) , grouped by ( role code of staff )", "pred": "Show the description, code, and number of employees in each role.", "label": "How many employees does each role have? List role description, id and number of employees."}
{"idx": 388, "logic": "( name ) that belongs to ( program ) , ordered by ( ( launch ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the program that was launched most recently.", "label": "Which program was launched most recently? Return the program name."}
{"idx": 389, "logic": "( fname ) , ( lname ) that belongs to ( student )", "pred": "List the first name and last name of all students.", "label": "What are the full names of all students"}
{"idx": 390, "logic": "( rank ) that belongs to ( captain ) , that have ( ( class ) equal to ( 'cutter' ) ), and intersect with ( ( rank ) that belongs to ( captain ) , that have ( ( class ) equal to ( 'armed schooner' ) ))", "pred": "What are the ranks of captains who are in the Cutter class andarmed schooner class?", "label": "Find the captain rank that has some captains in both Cutter and Armed schooner classes."}
{"idx": 391, "logic": "( title of addresses ) that belongs to ( ( course ) , and ( ( section ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( ( building ) equal to ( 'chandler' ) ) and ( ( semester ) equal to ( 'fall' ) ) and ( ( year ) equal to ( 2010 ) ) )", "pred": "What are the titles of courses that took place in the building in Prague in Fall 2010?", "label": "Give the title of the course offered in Chandler during the Fall of 2010."}
{"idx": 392, "logic": "( name of club ) that belongs to ( ( ship ) , and ( ( captain ) satisfied that ( ( ship id of club ) equal to ( ship id of member of club ) ) ) ) , ordered by ( ( age of member of club ) ) , limited to the top ( 1 )", "pred": "Find the name of the ship with the oldest captain.", "label": "What is the name of the ship that is commanded by the youngest captain?"}
{"idx": 393, "logic": "( theme ) that belongs to ( farm competition ) , ordered by ( ( year ) in ascending order )", "pred": "List the theme of competitions in ascending order of year.", "label": "Return the themes of farm competitions, sorted by year ascending."}
{"idx": 394, "logic": "( the sum of ( credits ) ) , ( dept name ) that belongs to ( course ) , grouped by ( dept name )", "pred": "Find the total credits and names of courses in each department.", "label": "Find the total credits of courses provided by different department."}
{"idx": 395, "logic": "( fname ) , ( lname ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of addresses ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( food ) ) ) )", "pred": "What are the first and last names of all students who do not have any allergies to food?", "label": "List the first and last name of the students who do not have any food type allergy."}
{"idx": 396, "logic": "( the number of ( all items ) ) that belongs to ( invoices ) , that have ( ( ( billing city ) equal to ( chicago ) ) and ( ( billing state ) equal to ( il ) ) )", "pred": "Find the number of invoices from Chicago and Illinois.", "label": "How many invoices were billed from Chicago, IL?"}
{"idx": 397, "logic": "( name of addresses ) that belongs to ( ( country ) , and ( ( roller coaster ) satisfied that ( ( country id of addresses ) equal to ( country id of staff ) ) ) ) , grouped by ( name of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "Show the names of countries that have more than one roller coaster.", "label": "Show the names of countries that have more than one roller coaster."}
{"idx": 398, "logic": "( the number of ( all items ) ) , ( school code of enzyme ) that belongs to ( ( class ) , and ( ( course ) satisfied that ( ( crs code of addresses ) equal to ( crs code of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , grouped by ( school code of enzyme )", "pred": "Find the number of courses and school code for each school.", "label": "How many classes exist for each school?"}
{"idx": 399, "logic": "( distinct ( clubname of club ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( city code of student ) equal to ( bal ) )", "pred": "What are the names of the clubs that have at least one member living in the city \"Bal\"", "label": "Find the names of all the clubs that have at least a member from the city with city code \"BAL\"."}
{"idx": 400, "logic": "( distinct ( product id of staff ) ) that belongs to ( ( orders ) , and ( ( order items ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) ) , that have ( ( ( date order placed of addresses ) greater than or equal to ( 1975-01-01 ) ) and ( ( date order placed of addresses ) less than or equal to ( 1976-01-01 ) ) )", "pred": "What are the distinct product ids for the orders placed after 1975-01-01 and after 1976-01 -01?", "label": "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?"}
{"idx": 401, "logic": "( the average of ( total amount purchased ) ) , ( the average of ( total value purchased ) ) that belongs to ( product suppliers ) , that have ( ( supplier id ) equal to ( supplier id ) that belongs to ( product suppliers ) , grouped by ( supplier id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) )", "pred": "Find the average and total amount purchased by the supplier with the most products.", "label": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products."}
{"idx": 402, "logic": "( title of staff ) that belongs to ( ( artists ) , and ( ( albums ) satisfied that ( ( id of addresses ) equal to ( artist id of staff ) ) ) ) , that have ( ( t1.name ) like ( '%led%' ) )", "pred": "What are the titles of the artists who have albums whose name starts with the letter 'led'?", "label": "What is the title of the album that was released by the artist whose name has the phrase 'Led'?"}
{"idx": 403, "logic": "( name of staff ) that belongs to ( ( assignedto ) , and ( ( scientists ) satisfied that ( ( scientist of addresses ) equal to ( ssn of staff ) ) ) )", "pred": "What are the names of the scientists who are assigned to the project?", "label": "What are the names of scientists who are assigned to any project?"}
{"idx": 404, "logic": "( the number of ( all items ) ) , ( name of addresses ) that belongs to ( ( scientists ) , and ( ( assignedto ) satisfied that ( ( ssn of addresses ) equal to ( scientist of staff ) ) ) ) , grouped by ( name of addresses )", "pred": "Show the number of scientists and the name of each.", "label": "What are the names of the scientists, and how many projects are each of them working on?"}
{"idx": 405, "logic": "( name ) , ( time ) , ( service ) that belongs to ( train )", "pred": "List the name, time, service of all trains.", "label": "Show the name, time, and service for all trains."}
{"idx": 406, "logic": "( student id ) that belongs to ( student course registrations ) and ( student id ) that belongs to ( student course attendance )", "pred": "List the ids of all students who registered courses and attended courses.", "label": "What are the ids of the students who either registered or attended a course?"}
{"idx": 407, "logic": "( fname of addresses ) , ( age of addresses ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , that have ( ( t2.dormid ) not in ( ( dormid of enzyme ) that belongs to ( ( has amenity ) , and ( ( dorm amenity ) satisfied that ( ( amenid of enzyme ) equal to ( amenid of trip ) ) ) ) , that have ( ( amenity name of trip ) equal to ( 'tv lounge' ) ) ) )", "pred": "What are the first names and ages of the students who are not living in the dorm with TV Lounge?", "label": "Find the first name and age of students who are living in the dorms that do not have amenity TV Lounge."}
{"idx": 408, "logic": "( headquarters ) , ( the number of ( all items ) ) that belongs to ( company ) , grouped by ( headquarters )", "pred": "Show headquarters and the number of companies in each headquarters.", "label": "For each headquarter, what are the headquarter and how many companies are centered there?"}
{"idx": 409, "logic": "( store email address of staff ) that belongs to ( ( addresses ) , and ( ( drama workshop groups ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( state county of addresses ) equal to ( alaska ) )", "pred": "What is the email address of the drama workshop groups in Alaska state?", "label": "What are the email addresses of the drama workshop groups with address in Alaska state?"}
{"idx": 410, "logic": "( title of addresses ) that belongs to ( ( albums ) , and ( ( tracks ) satisfied that ( ( id of addresses ) equal to ( album id of staff ) ) ) ) , grouped by ( id of addresses ) , that have ( ( the number of ( id of addresses ) ) greater than ( 10 ) )", "pred": "Which albums have more than 10 tracks? Give me the album titles.", "label": "List title of albums have the number of tracks greater than 10."}
{"idx": 411, "logic": "( the number of ( distinct ( acc type ) ) ) that belongs to ( customer )", "pred": "Count the number of distinct acc types.", "label": "How many distinct types of accounts are there?"}
{"idx": 412, "logic": "( the average of ( age of addresses ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( secretary vote ) ) ) ) , that have ( ( ( sex of addresses ) equal to ( f ) ) and ( ( election cycle of staff ) equal to ( spring ) ) )", "pred": "Find the average age of female students who have secretary votes in the spring election cycle.", "label": "What is the average age of the female students with secretary votes in the spring election cycle?"}
{"idx": 413, "logic": "( customer name of addresses ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( payment method code of addresses ) equal to ( 'credit card' ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "pred": "List the names of customers who have made more than two orders.", "label": "Show the names of customers who use Credit Card payment method and have more than 2 orders."}
{"idx": 414, "logic": "( name of enzyme ) , ( title of staff ) , ( date of addresses ) , ( price of addresses ) that belongs to ( ( schedule ) , and ( ( film ) satisfied that ( ( film id of addresses ) equal to ( film id of staff ) ) ) , and ( ( cinema ) satisfied that ( ( cinema id of addresses ) equal to ( cinema id of enzyme ) ) ) )", "pred": "What are the names, titles, dates, and prices of all the films?", "label": "Show cinema name, film title, date, and price for each record in schedule."}
{"idx": 415, "logic": "( the number of ( all items ) ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) , and ( ( songs ) satisfied that ( ( songid of enzyme ) equal to ( songid of addresses ) ) ) ) , that have ( ( title of enzyme ) equal to ( flash ) )", "pred": "Count the number of performances performed by the band \"Flash\".", "label": "Hom many musicians performed in the song \"Flash\"?"}
{"idx": 416, "logic": "( vehicle flight number ) , ( date ) , ( pilot ) that belongs to ( flight ) , ordered by ( ( altitude ) in ascending order )", "pred": "List the vehicle flight number, date, and pilot of flights in ascending order of altitude.", "label": "List the vehicle flight number, date and pilot of all the flights, ordered by altitude."}
{"idx": 417, "logic": "( product name of addresses ) that belongs to ( ( products ) , and ( ( products in events ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product name of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What are the names of the products that have at least two events in total?", "label": "Show the names of products that are in at least two events."}
{"idx": 418, "logic": "( the number of ( distinct ( school id ) ) ) that belongs to ( basketball match )", "pred": "Count the number of distinct schools in basketball matches.", "label": "Count the number of schools that have had basketball matches."}
{"idx": 419, "logic": "( name ) that belongs to ( physician ) , that have ( ( position ) like ( '%senior%' ) )", "pred": "Find the names of physicians who hold the position of Junior.", "label": "Find the name of physicians whose position title contains the word'senior'."}
{"idx": 420, "logic": "( order id ) , ( customer id ) that belongs to ( customer orders ) , that have ( ( order status code ) equal to ( cancelled ) ) , ordered by ( ( order date ) )", "pred": "What are the ids and ids of the orders with status code \"Cancelled\" ordered by the order date?", "label": "What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?"}
{"idx": 421, "logic": "( name ) that belongs to ( instructor ) , that have ( ( salary ) greater than ( the minimum of ( salary ) ) that belongs to ( instructor ) , that have ( ( dept name ) equal to ( 'biology' ) ) )", "pred": "What are the names of instructors who earn more than the minimum salary in Biology department?", "label": "Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department."}
{"idx": 422, "logic": "( all games of member of club ) , ( location of club ) that belongs to ( ( university ) , and ( ( basketball match ) satisfied that ( ( school id of club ) equal to ( school id of member of club ) ) ) ) , that have ( ( team name ) equal to ( 'clemson' ) )", "pred": "What are all the games and locations of the schools with team name Clemson?", "label": "Find the location and all games score of the school that has Clemson as its team name."}
{"idx": 423, "logic": "( budget type code of staff ) , ( budget type description of staff ) , ( document id of addresses ) that belongs to ( ( documents with expenses ) , and ( ( ref budget codes ) satisfied that ( ( budget type code of addresses ) equal to ( budget type code of staff ) ) ) )", "pred": "List the budget type code, description, and document id for all documents with expenses.", "label": "Return the budget type codes, budget type descriptions and document ids for documents with expenses."}
{"idx": 424, "logic": "( the minimum of ( seating ) ) , ( the maximum of ( seating ) ) , ( the average of ( seating ) ) that belongs to ( track )", "pred": "Show the minimum, maximum, and average seating for all tracks.", "label": "Return the minimum, maximum, and average seating across all tracks."}
{"idx": 425, "logic": "( the maximum of ( amount outstanding ) ) , ( the minimum of ( amount outstanding ) ) , ( the average of ( amount outstanding ) ) that belongs to ( customers )", "pred": "Show the maximum, minimum, and average amount outstanding for all customers.", "label": "What is the maximum, minimum, and average amount of money outsanding for all customers?"}
{"idx": 426, "logic": "( the number of ( all items ) ) that belongs to ( member ) , that have ( ( address ) not equal to ( 'hartford' ) )", "pred": "Count the number of members who live in Hartford.", "label": "How many members are not living in Hartford?"}
{"idx": 427, "logic": "( the number of ( distinct ( participant id ) ) ) that belongs to ( participants in events )", "pred": "Count the number of distinct participants in events.", "label": "What are all the distinct participant ids who attended any events?"}
{"idx": 428, "logic": "( balance of staff ) , ( balance of enzyme ) , ( name of addresses ) that belongs to ( ( accounts ) , and ( ( checking ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) , and ( ( savings ) satisfied that ( ( custid of addresses ) equal to ( custid of enzyme ) ) ) ) , ordered by ( ( ( balance of staff ) add ( balance of enzyme ) ) in descending order )", "pred": "List the checking balance, savings balance, and name of the accounts in descending order of checking balance and savings balance.", "label": "What are the names, checking balances, and savings balances of customers, ordered by the total of checking and savings balances descending?"}
{"idx": 429, "logic": "( name ) , ( location ) , ( number of platforms ) that belongs to ( station )", "pred": "Show station name, location, and number of platforms for each station.", "label": "Show the name, location, and number of platforms for all stations."}
{"idx": 430, "logic": "( team ) that belongs to ( player ) , ordered by ( ( age ) in descending order ) , limited to the top ( 1 )", "pred": "Find the team of the oldest player.", "label": "Which team has the oldest player?"}
{"idx": 431, "logic": "( destination ) , ( the number of ( all items ) ) that belongs to ( flight ) , grouped by ( destination )", "pred": "Show destination and the number of flights for each destination.", "label": "Show all destinations and the number of flights to each destination."}
{"idx": 432, "logic": "( company ) , ( headquarters ) that belongs to ( company ) , ordered by ( ( market value ) in descending order )", "pred": "List the company and headquarters of companies, ordered by market value descending.", "label": "Show all company names and headquarters in the descending order of market value."}
{"idx": 433, "logic": "( name ) , ( furniture id ) that belongs to ( furniture ) , ordered by ( ( market rate ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and id of the furnitures with the highest market rate.", "label": "Return the name and id of the furniture with the highest market rate."}
{"idx": 434, "logic": "( name of staff ) , ( theme of enzyme ) that belongs to ( ( journal committee ) , and ( ( editor ) satisfied that ( ( editor id of addresses ) equal to ( editor id of staff ) ) ) , and ( ( journal ) satisfied that ( ( journal id of addresses ) equal to ( journal id of enzyme ) ) ) )", "pred": "What are the names and themes of the editors who are on the committee?", "label": "Show the names of editors and the theme of journals for which they serve on committees."}
{"idx": 435, "logic": "( the number of ( distinct ( dept name ) ) ) , ( school code ) that belongs to ( department ) , grouped by ( school code ) , that have ( ( the number of ( distinct ( dept name ) ) ) less than ( 5 ) )", "pred": "Find the number of distinct departments in each school with less than 5 distinct names.", "label": "Find the number of different departments in each school whose number of different departments is less than 5."}
{"idx": 436, "logic": "( the number of ( distinct ( rating ) ) ) that belongs to ( film )", "pred": "Count the number of distinct ratings for all films.", "label": "How many kinds of different ratings are listed?"}
{"idx": 437, "logic": "( address details of addresses ) that belongs to ( addresses , and ( documents mailed satisfied that ( ( mailed to address id of documents mailed ) equal to ( address id of addresses ) ) ) ) , that have ( ( document id ) equal to ( 4 ) )", "pred": "What are the address details of the addresses mailed with document id 4.", "label": "What address was the document with id 4 mailed to?"}
{"idx": 438, "logic": "( name of staff ) that belongs to ( ( entrepreneur ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) )", "pred": "List the name of entrepreneurs.", "label": "Return the names of entrepreneurs."}
{"idx": 439, "logic": "( role code ) that belongs to ( roles )", "pred": "List the role codes of all roles.", "label": "What are all role codes?"}
{"idx": 440, "logic": "( the number of ( distinct ( location ) ) ) that belongs to ( perpetrator )", "pred": "Count the number of distinct locations.", "label": "How many distinct locations of perpetrators are there?"}
{"idx": 441, "logic": "( distinct ( location name ) ) that belongs to ( locations )", "pred": "List all the distinct locations.", "label": "Show all distinct location names."}
{"idx": 442, "logic": "( stu fname of addresses ) , ( stu lname of addresses ) , ( crs description of trip ) that belongs to ( ( student ) , and ( ( enroll ) satisfied that ( ( stu num of addresses ) equal to ( stu num of staff ) ) ) , and ( ( class ) satisfied that ( ( class code of staff ) equal to ( class code of enzyme ) ) ) , and ( ( course ) satisfied that ( ( crs code of enzyme ) equal to ( crs code of trip ) ) ) )", "pred": "What are the first name, last name, and description of the course that the student took?", "label": "Find names of all students who took some course and the course description."}
{"idx": 443, "logic": "( type ) that belongs to ( ship ) , that have ( ( flag ) equal to ( 'panama' ) ), and intersect with ( ( type ) that belongs to ( ship ) , that have ( ( flag ) equal to ( 'malta' ) ))", "pred": "What are the types of ships that have both a Panama flag and a Malta flag.", "label": "What types of ships have both ships that have Panama Flags and Malta flags?"}
{"idx": 444, "logic": "( organisation type description of addresses ) that belongs to ( ( organisation types ) , and ( ( organisations ) satisfied that ( ( organisation type of addresses ) equal to ( organisation type of staff ) ) ) ) , that have ( ( organisation details of staff ) equal to ( 'quo' ) )", "pred": "What is the description of the type of the organisation with details 'Quo'", "label": "Find the organisation type description of the organisation detailed as 'quo'."}
{"idx": 445, "logic": "( the number of ( all items ) ) that belongs to ( school )", "pred": "Count the number of schools in each county.", "label": "Count the number of schools."}
{"idx": 446, "logic": "( distinct ( major of addresses ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( treasurer vote of staff ) ) ) )", "pred": "Show the distinct majors of students who have treasurer votes.", "label": "Find the distinct majors of students who have treasurer votes."}
{"idx": 447, "logic": "( name ) that belongs to ( mountain ) , that have ( ( ( height ) greater than ( 5000 ) ) or ( ( prominence ) greater than ( 1000 ) ) )", "pred": "Find the names of mountains with height above 5000 or prominence above 1000.", "label": "Show the names of mountains with height more than 5000 or prominence more than 1000."}
{"idx": 448, "logic": "( the number of ( all items ) ) , ( account id ) that belongs to ( financial transactions )", "pred": "Find the number of transactions and account id.", "label": "Count the number of financial transactions that correspond to each account id."}
{"idx": 449, "logic": "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , grouped by ( cust name of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "List the names of customers who have taken more than one loan.", "label": "What are the names of customers who have taken out more than one loan?"}
{"idx": 450, "logic": "( classroom ) that belongs to ( list ) , grouped by ( classroom ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the classroom that has the most students enrolled.", "label": "Find the classroom that the most students use."}
{"idx": 451, "logic": "( the number of ( distinct ( language id ) ) ) that belongs to ( film )", "pred": "Count the number of distinct languages used in films.", "label": "How many languages are in these films?"}
{"idx": 452, "logic": "( the average of ( age ) ) , ( the maximum of ( age ) ) , ( sex ) that belongs to ( student ) , grouped by ( sex )", "pred": "Show the average, maximum, and sex of each sex.", "label": "Find the average and oldest age for students with different sex."}
{"idx": 453, "logic": "( flno ) that belongs to ( flight ) , ordered by ( ( distance ) in ascending order ) , limited to the top ( 3 )", "pred": "Find the flno of the flight with the shortest distance.", "label": "Show the flight number of flights with three lowest distances."}
{"idx": 454, "logic": "( name ) that belongs to ( player ) , that have ( ( points ) greater than ( the average of ( points ) ) that belongs to ( player ) )", "pred": "List the names of players who scored more points than the average number of points.", "label": "what are the name of players who get more than the average points."}
{"idx": 455, "logic": "( lname ) that belongs to ( faculty ) , that have ( ( rank ) equal to ( 'professor' ) ), and except that ( ( distinct ( lname of addresses ) ) that belongs to ( ( faculty ) , and ( ( faculty participates in ) satisfied that ( ( facid of addresses ) equal to ( facid of staff ) ) ) , and ( ( activity ) satisfied that ( ( actid of staff ) equal to ( actid of staff ) ) ) ) , that have ( ( ( activity name of enzyme ) equal to ( 'canoeing' ) ) or ( ( activity name of enzyme ) equal to ( 'kayaking' ) ) ))", "pred": "What are the last names of the faculty members who are not teaching Canoeing or Kayaking?", "label": "What are the first names of the professors who do not play Canoeing or Kayaking as activities?"}
{"idx": 456, "logic": "( distinct ( salary ) ) that belongs to ( instructor ) , that have ( ( salary ) less than ( the maximum of ( salary ) ) that belongs to ( instructor ) )", "pred": "What are the distinct salaries of instructors whose salary is less than the maximum salary of all instructors?", "label": "What are the distinct salaries of all instructors who earned less than the maximum salary?"}
{"idx": 457, "logic": "( product ) that belongs to ( product ) , that have ( ( ( max page size ) equal to ( a4 ) ) and ( ( pages per minute color ) less than ( 5 ) ) )", "pred": "What are the products with max page size of a4 and pages per minute color less than 5.", "label": "Find products with max page size as \"A4\" and pages per minute color smaller than 5."}
{"idx": 458, "logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( class senator vote ) ) ) ) , that have ( ( ( city code of addresses ) equal to ( nyc ) ) and ( ( election cycle of staff ) equal to ( spring ) ) )", "pred": "Count the number of students who have class senator votes in NYC in the spring election cycle.", "label": "Find the number of students whose city code is NYC and who have class senator votes in the spring election cycle."}
{"idx": 459, "logic": "( the number of ( distinct ( governor ) ) ) that belongs to ( party )", "pred": "Count the number of distinct governors.", "label": "How many distinct governors are there?"}
{"idx": 460, "logic": "( product name of staff ) that belongs to ( ( view product availability ) , and ( ( products for hire ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , that have ( ( available yn of addresses ) equal to ( 1 ) )", "pred": "What are the names of the products that are available for hire in year 1?", "label": "What are the names of products whose availability equals to 1?"}
{"idx": 461, "logic": "( winery ) that belongs to ( wine ) , ordered by ( ( score ) ) , limited to the top ( 1 )", "pred": "Find the winery that has the highest score.", "label": "Which winery is the wine that has the highest score from?"}
{"idx": 462, "logic": "( the sum of ( revenue ) ) that belongs to ( manufacturers ) , that have ( ( revenue ) greater than ( the minimum of ( revenue ) ) that belongs to ( manufacturers ) , that have ( ( headquarter ) equal to ( 'austin' ) ) )", "pred": "Find the total revenue of companies whose revenue is higher than the revenue of the companies headquartered in Austin.", "label": "What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in Austin?"}
{"idx": 463, "logic": "( circuitid ) , ( location ) that belongs to ( circuits ) , that have ( ( ( country ) equal to ( france ) ) or ( ( country ) equal to ( belgium ) ) )", "pred": "What are the ids and locations of the circuits in France or Belgium?", "label": "Find the id and location of circuits that belong to France or Belgium?"}
{"idx": 464, "logic": "( the number of ( distinct ( title of club ) ) ) that belongs to ( ( papers ) , and ( ( authorship ) satisfied that ( ( paperid of club ) equal to ( paperid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( name of student ) equal to ( university of pennsylvania ) )", "pred": "Count the number of papers published by the institution \"University of Pennsylvania\".", "label": "Find the number of papers published by the institution \"University of Pennsylvania\"."}
{"idx": 465, "logic": "( name of staff ) that belongs to ( ( election ) , and ( ( representative ) satisfied that ( ( representative id of addresses ) equal to ( representative id of staff ) ) ) ) , that have ( ( votes ) greater than ( 10000 ) )", "pred": "Show the names of representatives who have received more than 10000 votes.", "label": "What are the names of representatives with more than 10000 votes in election?"}
{"idx": 466, "logic": "( channel code ) that belongs to ( customer contact channels ) , grouped by ( channel code ) , that have ( ( the number of ( customer id ) ) less than ( 5 ) )", "pred": "What is the code of the channel with less than 5 customers?", "label": "List all the contact channel codes that were used less than 5 times."}
{"idx": 467, "logic": "( the minimum of ( distance ) ) , ( the average of ( distance ) ) , ( the maximum of ( distance ) ) that belongs to ( aircraft )", "pred": "Show the minimum, average, and maximum distance of all aircrafts.", "label": "Return the minimum, average and maximum distances traveled across all aircrafts."}
{"idx": 468, "logic": "( draft pick number ) , ( draft class ) that belongs to ( match season ) , that have ( ( position ) equal to ( defender ) )", "pred": "What is the draft pick number and draft class for the defender position?", "label": "Show the draft pick numbers and draft classes of players whose positions are defenders."}
{"idx": 469, "logic": "( stuid ) that belongs to ( student ) , that have ( ( major ) equal to ( 600 ) ), and intersect with ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( onscholarship ) equal to ( 'y' ) ))", "pred": "What are the ids of all students who major 600 and have on scholarship?", "label": "Show student ids who are on scholarship and have major 600."}
{"idx": 470, "logic": "( name ) that belongs to ( patient ), and except that ( ( name of addresses ) that belongs to ( ( patient ) , and ( ( prescribes ) satisfied that ( ( patient of staff ) equal to ( ssn of addresses ) ) ) , and ( ( medication ) satisfied that ( ( medication of staff ) equal to ( code of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'procrastin-x' ) ))", "pred": "What are the names of patients who don't prescribe Procrastin-X?", "label": "Find the names of patients who are not using the medication of Procrastin-X."}
{"idx": 471, "logic": "( other item details of addresses ) that belongs to ( ( order items ) , and ( ( products ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , that have ( ( product price of staff ) greater than ( 2000 ) )", "pred": "What are the other details of the orders with price higher than 2000.", "label": "What are the order details of the products with price higher than 2000?"}
{"idx": 472, "logic": "( gender code ) , ( the number of ( all items ) ) that belongs to ( guests ) , grouped by ( gender code ) , ordered by ( ( the number of ( all items ) ) in descending order )", "pred": "Show the gender code and the number of guests in descending order of the number.", "label": "Show each gender code and the corresponding count of guests sorted by the count in descending order."}
{"idx": 473, "logic": "( nominee ) , ( the number of ( all items ) ) that belongs to ( musical ) , grouped by ( nominee )", "pred": "Show each nominee and the number of musicals they have nominated.", "label": "Show different nominees and the number of musicals they have been nominated."}
{"idx": 474, "logic": "( clubdesc ) that belongs to ( club ) , that have ( ( clubname ) equal to ( pen and paper gaming ) )", "pred": "Find thedesc of the club \"Pen and Paper Gaming\".", "label": "What is the description of the club \"Pen and Paper Gaming\"?"}
{"idx": 475, "logic": "( cell mobile number of staff ) that belongs to ( ( student addresses ) , and ( ( students ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ) , ordered by ( ( monthly rental of addresses ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the cell phone number of the student with the highest monthly rental.", "label": "What is the cell phone number of the student whose address has the lowest monthly rental?"}
{"idx": 476, "logic": "( name of club ) , ( age of club ) that belongs to ( ( pilot ) , and ( ( match ) satisfied that ( ( pilot id of club ) equal to ( winning pilot of member of club ) ) ) ) , ordered by ( ( age of club ) ) , limited to the top ( 1 )", "pred": "Find the name and age of the pilot who won the most matches.", "label": "How old is the youngest winning pilot and what is their name?"}
{"idx": 477, "logic": "( employee id ) , ( first name ) , ( last name ) , ( salary ) that belongs to ( employees ) , that have ( ( ( salary ) greater than ( the average of ( salary ) ) that belongs to ( employees ) ) and ( ( department id ) in ( ( department id ) that belongs to ( employees ) , that have ( ( first name ) like ( '%j%' ) ) ) ) )", "pred": "What are the employee ids, first names, last names, and salaries for employees whose salary is higher than the average salary of all employees in the department?", "label": "display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name."}
{"idx": 478, "logic": "( fname ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( sportname ) equal to ( football ) ), and intersect with ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( sportname ) equal to ( lacrosse ) )) ) )", "pred": "What are the first names and ages of the students who play Football and Lacrosse?", "label": "Find the first name and age of the students who are playing both Football and Lacrosse."}
{"idx": 479, "logic": "( title of addresses ) , ( credits of addresses ) , ( dept name of addresses ) that belongs to ( ( course ) , and ( ( prereq ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , grouped by ( course id of staff ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "What are the title, credits, and dept name of the courses that have more than one prereq?", "label": "What is the title, credit value, and department name for courses with more than one prerequisite?"}
{"idx": 480, "logic": "( the number of ( distinct ( official native language of addresses ) ) ) that belongs to ( ( country ) , and ( ( match season ) satisfied that ( ( country id of addresses ) equal to ( country of staff ) ) ) ) , that have ( ( position of staff ) equal to ( defender ) )", "pred": "How many different official native languages are used for the position of defender?", "label": "How many distinct official languages are there among countries of players whose positions are defenders."}
{"idx": 481, "logic": "( campus ) that belongs to ( degrees ) , grouped by ( campus ) , ordered by ( ( the sum of ( degrees ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the campus that has the most degrees in total.", "label": "Which campus has the most degrees conferred in all times?"}
{"idx": 482, "logic": "( the number of ( all items ) ) that belongs to ( allergy type ) , that have ( ( allergytype ) equal to ( animal ) )", "pred": "Count the number of allergies with type animal.", "label": "How many animal type allergies exist?"}
{"idx": 483, "logic": "( name of staff ) that belongs to ( ( membership register branch ) , and ( ( branch ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) , and ( ( member ) satisfied that ( ( member id of addresses ) equal to ( member id of enzyme ) ) ) ) , that have ( ( hometown of enzyme ) equal to ( 'louisville , kentucky' ) ), and intersect with ( ( name of staff ) that belongs to ( ( membership register branch ) , and ( ( branch ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) , and ( ( member ) satisfied that ( ( member id of addresses ) equal to ( member id of enzyme ) ) ) ) , that have ( ( hometown of enzyme ) equal to ( 'hiram , georgia' ) ))", "pred": "What are the names of branches that have both members living in Louisville and Hiram Georgia living in?", "label": "Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia."}
{"idx": 484, "logic": "( the average of ( enrollment ) ) that belongs to ( school )", "pred": "Find the average enrollment of schools in the school.", "label": "What is the average enrollment of schools?"}
{"idx": 485, "logic": "( distinct ( bname of addresses ) ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) )", "pred": "What are the distinct names of the banks that have loans?", "label": "What are the names of the different banks that have provided loans?"}
{"idx": 486, "logic": "( course id ) that belongs to ( student course registrations ) , that have ( ( student id ) equal to ( 121 ) ) and ( course id ) that belongs to ( student course attendance ) , that have ( ( student id ) equal to ( 121 ) )", "pred": "What are the ids of the courses registered by students with student id 121 and student attendance 121.", "label": "What are the ids of the courses that are registered or attended by the student whose id is 121?"}
{"idx": 487, "logic": "( name ) , ( dept name ) that belongs to ( student ) , ordered by ( ( tot cred ) )", "pred": "List the name and dept name of all students in alphabetical order of tot cred", "label": "What are the names of students and their respective departments, ordered by number of credits from least to greatest?"}
{"idx": 488, "logic": "( stu fname of enzyme ) that belongs to ( ( class ) , and ( ( enroll ) satisfied that ( ( class code of addresses ) equal to ( class code of staff ) ) ) , and ( ( student ) satisfied that ( ( stu num of staff ) equal to ( stu num of enzyme ) ) ) ) , that have ( ( ( crs code of addresses ) equal to ( 'acct-211' ) ) and ( ( enroll grade of staff ) equal to ( 'c' ) ) )", "pred": "What are the first names of all students who took ACCT-211 and have an enrollment grade of C.", "label": "What is the first name of students enrolled in class ACCT-211 and got grade C?"}
{"idx": 489, "logic": "( the number of ( all items ) ) that belongs to ( ( purchase ) , and ( ( member ) satisfied that ( ( member id of addresses ) equal to ( member id of staff ) ) ) ) , that have ( ( level of staff ) equal to ( 6 ) )", "pred": "Find the number of members who have level 6.", "label": "What is the total number of purchases for members with level 6?"}
{"idx": 490, "logic": "( name ) that belongs to ( city ) , ordered by ( ( name ) in ascending order )", "pred": "List the names of cities in ascending alphabetical order of name", "label": "What are the names of cities in ascending alphabetical order?"}
{"idx": 491, "logic": "( effective date of club ) that belongs to ( ( claims ) , and ( ( settlements ) satisfied that ( ( claim id of club ) equal to ( claim id of member of club ) ) ) ) , grouped by ( claim id of club ) , ordered by ( ( the sum of ( settlement amount of member of club ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the effective date of the claim with the largest amount of settlements.", "label": "What is the effective date of the claim that has the largest amount of total settlement?"}
{"idx": 492, "logic": "( roomname of staff ) that belongs to ( ( reservations ) , and ( ( rooms ) satisfied that ( ( room of addresses ) equal to ( roomid of staff ) ) ) ) , that have ( ( firstname ) like ( '%roy%' ) )", "pred": "What are the names of the rooms that have a first name with the letter 'roy'?", "label": "Find the name of rooms booked by some customers whose first name contains ROY."}
{"idx": 493, "logic": "( title of addresses ) , ( inventory id of staff ) that belongs to ( ( film ) , and ( ( inventory ) satisfied that ( ( film id of addresses ) equal to ( film id of staff ) ) ) , and ( ( rental ) satisfied that ( ( inventory id of staff ) equal to ( inventory id of enzyme ) ) ) ) , grouped by ( inventory id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the title and id of the film that has been rented the most times.", "label": "What is the film title and inventory id of the item in the inventory which was rented most frequently?"}
{"idx": 494, "logic": "( name ) , ( location ) , ( year opened ) that belongs to ( track ) , that have ( ( seating ) greater than ( the average of ( seating ) ) that belongs to ( track ) )", "pred": "Show the name, location, and year opened for tracks that have more seating than the average seating.", "label": "What are the names, locations, and years of opening for tracks with seating higher than average?"}
{"idx": 495, "logic": "( the number of ( distinct ( position ) ) ) that belongs to ( player )", "pred": "Count the number of distinct positions.", "label": "How many different position for players are listed?"}
{"idx": 496, "logic": "( lastname ) that belongs to ( customer ), and except that ( ( lastname of addresses ) that belongs to ( ( customer ) , and ( ( invoice ) satisfied that ( ( customerid of addresses ) equal to ( customerid of staff ) ) ) ) , that have ( ( total of staff ) greater than ( 20 ) ))", "pred": "What are the last names of customers who have never invoice with total staff greater than 20?", "label": "What are the last names of customers without invoice totals exceeding 20?"}
{"idx": 497, "logic": "( the maximum of ( monthly rental ) ) , ( the minimum of ( monthly rental ) ) that belongs to ( student addresses )", "pred": "What is the maximum and minimum monthly rental of all student addresses?", "label": "Find the maximum and minimum monthly rental for all student addresses."}
{"idx": 498, "logic": "( delegate of staff ) that belongs to ( ( county ) , and ( ( election ) satisfied that ( ( county id of addresses ) equal to ( district of staff ) ) ) ) , that have ( ( population of addresses ) less than ( 100000 ) )", "pred": "Show the delegates of counties with population below 100000.", "label": "Find the delegates who are from counties with population below 100000."}
{"idx": 499, "logic": "( emp fname of addresses ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , that have ( ( dept name of enzyme ) equal to ( 'history' ) ), and except that ( ( emp fname of trip ) that belongs to ( ( employee ) , and ( ( class ) satisfied that ( ( emp num of trip ) equal to ( prof num of department ) ) ) ))", "pred": "What are the first names of the professors who teach History but not Prof?", "label": "What is the first names of the professors from the history department who do not teach a class."}
{"idx": 500, "logic": "( the number of ( distinct ( dormid ) ) ) that belongs to ( has amenity )", "pred": "Count the number of distinct dorm ids.", "label": "How many dorms have amenities?"}
{"idx": 501, "logic": "( the maximum of ( elevation ) ) that belongs to ( airports ) , that have ( ( country ) equal to ( 'iceland' ) )", "pred": "Find the maximum elevation of all airports in Iceland.", "label": "What is the maximum elevation of all airports in the country of Iceland?"}
{"idx": 502, "logic": "( billing state ) , ( the number of ( all items ) ) that belongs to ( invoices ) , that have ( ( billing country ) equal to ( usa ) ) , grouped by ( billing state )", "pred": "Show each billing state and the number of invoices from there.", "label": "List the number of invoices from the US, grouped by state."}
{"idx": 503, "logic": "( address of staff ) , ( email of addresses ) that belongs to ( ( customer ) , and ( ( address ) satisfied that ( ( address id of staff ) equal to ( address id of addresses ) ) ) ) , that have ( ( first name of addresses ) equal to ( 'linda' ) )", "pred": "What is the address and email of the customer whose first name is Linda.", "label": "Return the address and email of the customer with the first name Linda."}
{"idx": 504, "logic": "( name ) , ( location ) that belongs to ( enzyme )", "pred": "List the name and location of all enzymes.", "label": "What are the names and locations of all enzymes listed?"}
{"idx": 505, "logic": "( state ) that belongs to ( bank ) , grouped by ( state ) , ordered by ( ( the sum of ( no of customers ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the state that has the most banks.", "label": "Find the state which has the most number of customers."}
{"idx": 506, "logic": "( origin ) , ( destination ) that belongs to ( flight ) , that have ( ( price ) greater than ( 300 ) )", "pred": "What are the origin and destination for all flights with price above 300?", "label": "Show origin and destination for flights with price higher than 300."}
{"idx": 507, "logic": "( invoice date of addresses ) , ( order id of addresses ) , ( order details of staff ) that belongs to ( ( invoices ) , and ( ( orders ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) )", "pred": "What are the invoice dates, ids, and details of all the orders?", "label": "Show invoice dates and order id and details for all invoices."}
{"idx": 508, "logic": "( resname ) , ( rating ) that belongs to ( restaurant ) , ordered by ( ( rating ) in descending order ) , limited to the top ( 1 )", "pred": "Find the resname and rating of the restaurant with the highest rating.", "label": "Which restaurants have highest rating? List the restaurant name and its rating."}
{"idx": 509, "logic": "( weight ) that belongs to ( people ) , ordered by ( ( height ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the weight of the person with the tallest height.", "label": "Return the weight of the shortest person."}
{"idx": 510, "logic": "( nationality ) that belongs to ( ship ) , grouped by ( nationality ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "pred": "Show the nations that have more than two ships.", "label": "What are the nations that have more than two ships?"}
{"idx": 511, "logic": "( the average of ( pages per minute color ) ) that belongs to ( product )", "pred": "Find the average pages per minute color for all products.", "label": "What is the average pages per minute color?"}
{"idx": 512, "logic": "( the sum of ( amount of staff ) ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) ) , that have ( ( state of addresses ) equal to ( 'new york' ) )", "pred": "Find the total amount of loans taken by banks in New York state.", "label": "What is the total amount of money loaned by banks in New York state?"}
{"idx": 513, "logic": "( position ) , ( the average of ( points ) ) that belongs to ( player ) , grouped by ( position )", "pred": "Show position and average number of points for players in each position.", "label": "List the position of players and the average number of points of players of each position."}
{"idx": 514, "logic": "( apt number ) that belongs to ( apartments ) , ordered by ( ( bedroom count ) in descending order ) , limited to the top ( 1 )", "pred": "Find the apartment number with the largest number of bedrooms.", "label": "What is the apartment number of the apartment with the most beds?"}
{"idx": 515, "logic": "( name ) that belongs to ( races ) , ordered by ( ( date ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the race that took place most recently.", "label": "What is the name of the race that occurred most recently?"}
{"idx": 516, "logic": "( name ) that belongs to ( genre )", "pred": "List the name of all genres.", "label": "What are the names of different music genres?"}
{"idx": 517, "logic": "( city of addresses ) that belongs to ( ( city ) , and ( ( temperature ) satisfied that ( ( city id of addresses ) equal to ( city id of staff ) ) ) ) , that have ( ( feb of staff ) greater than ( jun of staff ) ) and ( city of enzyme ) that belongs to ( ( city ) , and ( ( hosting city ) satisfied that ( ( city id of enzyme ) equal to ( host city of trip ) ) ) )", "pred": "What are the names of cities that have a higher temperature in feb than in July and hosted trips in July?", "label": "Give me a list of cities whose temperature in Feb is higher than that in Jun or cities that were once host cities?"}
{"idx": 518, "logic": "( distinct ( characteristic name ) ) that belongs to ( characteristics )", "pred": "List the distinct characteristic names.", "label": "What are the different names of the product characteristics?"}
{"idx": 519, "logic": "( the number of ( all items ) ) that belongs to ( ( customers cards ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( ( customer first name of staff ) equal to ( art ) ) and ( ( customer last name of staff ) equal to ( turcotte ) ) )", "pred": "How many cards does the customer Art Turcotte has?", "label": "How many cards does customer Art Turcotte have?"}
{"idx": 520, "logic": "( rank ) that belongs to ( captain ), and except that ( ( rank ) that belongs to ( captain ) , that have ( ( class ) equal to ( 'third-rate ship of the line' ) ))", "pred": "Show the ranks of captains who are not in the third-rate ship of the line.", "label": "Find the captain rank that has no captain in Third-rate ship of the line class."}
{"idx": 521, "logic": "( the maximum of ( account details ) ) that belongs to ( accounts ) and ( account details ) that belongs to ( accounts ) , that have ( ( account_details ) like ( %5% ) )", "pred": "Find the maximum number of account details for accounts whose details contain the word \"5\".", "label": "What are the account details with the largest value or with value having char '5' in it?"}
{"idx": 522, "logic": "( headquartered city of student ) that belongs to ( ( store ) , and ( ( store district ) satisfied that ( ( store id of club ) equal to ( store id of member of club ) ) ) , and ( ( district ) satisfied that ( ( district id of member of club ) equal to ( district id of student ) ) ) ) , that have ( ( store name of club ) equal to ( blackville ) )", "pred": "Find the headquartered city of the store located in the district \"Blackville\".", "label": "What city is the headquarter of the store Blackville?"}
{"idx": 523, "logic": "( payment date ) that belongs to ( payment ) , that have ( ( amount ) greater than ( 10 ) ) and ( payment date of addresses ) that belongs to ( ( payment ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( first name of staff ) equal to ( 'elsa' ) )", "pred": "What are the payment dates for the payment with amount greater than 10 and the payment date with first name Elsa.", "label": "Find all the payment dates for the payments with an amount larger than 10 and the payments handled by a staff person with the first name Elsa."}
{"idx": 524, "logic": "( emp fname ) , ( emp lname ) that belongs to ( employee ) , ordered by ( ( emp dob ) ) , limited to the top ( 1 )", "pred": "Find the first name and last name of the employee who has the most employees.", "label": "What are the first and last names of the employee with the earliest date of birth?"}
{"idx": 525, "logic": "( distinct ( id of addresses ) ) , ( name of addresses ) that belongs to ( ( station ) , and ( ( status ) satisfied that ( ( id of addresses ) equal to ( station id of staff ) ) ) ) , that have ( ( bikes available of staff ) greater than ( 12 ) )", "pred": "Which stations have more than 12 bikes available? Give me the station id and station name.", "label": "What are the id and name of the stations that have ever had more than 12 bikes available?"}
{"idx": 526, "logic": "( name ) that belongs to ( wine ) , ordered by ( ( score ) ) , limited to the top ( 1 )", "pred": "Find the name of the wine with the highest score.", "label": "What is the name of the highest rated wine?"}
{"idx": 527, "logic": "( name ) , ( price ) that belongs to ( products ) , ordered by ( ( price ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the name and price of the item with the highest price.", "label": "What is the name and price of the cheapest product?"}
{"idx": 528, "logic": "( distinct ( name of staff ) ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( friend of staff ) ) ) ) , that have ( ( age of addresses ) less than ( the average of ( age ) ) that belongs to ( person ) )", "pred": "Find the names of friends who are younger than the average age.", "label": "Who has friends that are younger than the average age?"}
{"idx": 529, "logic": "( title of addresses ) , ( film id of addresses ) that belongs to ( ( film ) , and ( ( inventory ) satisfied that ( ( film id of addresses ) equal to ( film id of staff ) ) ) ) , grouped by ( film id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the title and id of the film that has the most inventory.", "label": "What is the title and id of the film that has the greatest number of copies in inventory?"}
{"idx": 530, "logic": "( dept name ) , ( budget ) that belongs to ( department ) , that have ( ( budget ) greater than ( the average of ( budget ) ) that belongs to ( department ) )", "pred": "What are the names and budgets of the departments with a budget higher than the average budget?", "label": "Find the name and budget of departments whose budgets are more than the average budget."}
{"idx": 531, "logic": "( chair name ) that belongs to ( festival detail ) , ordered by ( ( year ) in ascending order )", "pred": "List the chair names of festivals in ascending order of year.", "label": "What are the names of the chairs of festivals, sorted in ascending order of the year held?"}
{"idx": 532, "logic": "( type of staff ) , ( the number of ( all items ) ) that belongs to ( ( school bus ) , and ( ( school ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) ) , grouped by ( type of staff )", "pred": "Show the type of school bus and the number of buses for each school.", "label": "Show the type of school and the number of buses for each type."}
{"idx": 533, "logic": "( asset id ) , ( asset details ) , ( asset make ) , ( asset model ) that belongs to ( assets )", "pred": "List the id, details, asset make, asset model for all assets.", "label": "List the asset id, details, make and model for every asset."}
{"idx": 534, "logic": "( fname of addresses ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , that have ( ( t2.dormid ) in ( ( dormid of staff ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of enzyme ) equal to ( dormid of trip ) ) ) , and ( ( dorm amenity ) satisfied that ( ( amenid of trip ) equal to ( amenid of department ) ) ) ) , grouped by ( dormid of enzyme ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) ) )", "pred": "Find the first name of the student who lives in the dorm that has the most amenities.", "label": "What are the first names of all students who live in the dorm with the most amenities?"}
{"idx": 535, "logic": "( location code ) that belongs to ( document locations ) , grouped by ( location code ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )", "pred": "Find the code of the location that has at least 3 document locations.", "label": "Show the location codes with at least 3 documents."}
{"idx": 536, "logic": "( publisher ) that belongs to ( book club ) , that have ( ( year ) equal to ( 1989 ) ), and intersect with ( ( publisher ) that belongs to ( book club ) , that have ( ( year ) equal to ( 1990 ) ))", "pred": "What are the publishers that have both books published in 1989 and books released in 1990?", "label": "What are the publishers who have published a book in both 1989 and 1990?"}
{"idx": 537, "logic": "( cust name ) that belongs to ( customer ), and except that ( ( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , that have ( ( loan type of staff ) equal to ( 'mortgages' ) ))", "pred": "What are the names of customers who did not take any loans of Mortgages type?", "label": "What are the names of customers who have not taken a Mortage loan?"}
{"idx": 538, "logic": "( distinct ( department id ) ) that belongs to ( employees ) , grouped by ( department id ) , ( manager id ) , that have ( ( the number of ( employee id ) ) greater than or equal to ( 4 ) )", "pred": "Find the distinct ids of departments that have at least 4 employees.", "label": "Give the distinct department ids of departments in which a manager is in charge of 4 or more employees?"}
{"idx": 539, "logic": "( invoice number ) , ( the number of ( all items ) ) that belongs to ( financial transactions ) , grouped by ( invoice number )", "pred": "Show invoice number and the number of transactions in each invoice number.", "label": "Show the invoice number and the number of transactions for each invoice."}
{"idx": 540, "logic": "( city of addresses ) that belongs to ( ( city ) , and ( ( hosting city ) satisfied that ( ( city id of addresses ) equal to ( host city of staff ) ) ) ) , that have ( ( year of staff ) greater than ( 2010 ) )", "pred": "What are the names of cities that were hosted after 2010?", "label": "Find the cities which were once a host city after 2010?"}
{"idx": 541, "logic": "( name of staff ) , ( the number of ( all items ) ) that belongs to ( ( membership register branch ) , and ( ( branch ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) ) , that have ( ( register year of addresses ) greater than ( 2015 ) ) , grouped by ( branch id of staff )", "pred": "Show the name and number of membership registered branches after 2015 for each branch.", "label": "For each branch id, what are the names of the branches that were registered after 2015?"}
{"idx": 542, "logic": "( distinct ( customer id ) ) that belongs to ( customer orders ) , that have ( ( order date ) greater than ( the minimum of ( order date ) ) that belongs to ( customer orders ) , that have ( ( order status code ) equal to ( cancelled ) ) )", "pred": "What are the distinct ids of customers who have made an order after the minimum order status code \"Cancelled\"?", "label": "Find the ids of all distinct customers who made order after some orders that were Cancelled."}
{"idx": 543, "logic": "( player of staff ) that belongs to ( ( country ) , and ( ( match season ) satisfied that ( ( country id of addresses ) equal to ( country of staff ) ) ) ) , that have ( ( country name of addresses ) equal to ( indonesia ) )", "pred": "What are the names of players who are from Indonesia?", "label": "Which players are from Indonesia?"}
{"idx": 544, "logic": "( login name ) that belongs to ( students ) , that have ( ( family name ) equal to ( ward ) )", "pred": "Find the login names of students whose family name is \"Ward\".", "label": "What are the login names of the students with family name \"Ward\"?"}
{"idx": 545, "logic": "( fname of staff ) , ( lname of staff ) that belongs to ( ( sportsinfo ) , and ( ( student ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , grouped by ( stuid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the first name and last name of the student who has the most sports.", "label": "What is the first name and last name of the student who have most number of sports?"}
{"idx": 546, "logic": "( country ) that belongs to ( customers ) , that have ( ( ( first name ) equal to ( roberto ) ) and ( ( last name ) equal to ( almeida ) ) )", "pred": "Find the country of customers whose first name is Alberto and last name is Almeida.", "label": "In which country does Roberto Almeida?"}
{"idx": 547, "logic": "( stuid ) that belongs to ( sportsinfo ), and intersect with ( ( stuid ) that belongs to ( plays games ))", "pred": "List the ids of all students who play sports and play games.", "label": "What are the ids of all students who played video games and sports?"}
{"idx": 548, "logic": "( product name ) that belongs to ( products ) , that have ( ( product category code ) equal to ( spices ) )", "pred": "Find the names of products in the category \"Spices\".", "label": "Return the names of products in the category 'Spices'."}
{"idx": 549, "logic": "( emp fname ) that belongs to ( employee ) , that have ( ( emp jobcode ) equal to ( 'prof' ) ) , ordered by ( ( emp dob ) )", "pred": "What are the first names of all employees whose job code is Prof, ordered by emp dob.", "label": "List the first name of all employees with job code PROF ordered by their date of birth."}
{"idx": 550, "logic": "( lastname of staff ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of addresses ) equal to ( gell ) ) and ( ( lastname of addresses ) equal to ( tami ) ) )", "pred": "What are the last names of the teachers who teach the students with first name as Glenn and last name as Tai?", "label": "What are the last names of the teachers who teach the student called GELL TAMI?"}
{"idx": 551, "logic": "( product name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( products ) , and ( ( products in events ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product name of addresses )", "pred": "Show the name and number of events for each product.", "label": "Show the names of products and the number of events they are in."}
{"idx": 552, "logic": "( bname ) that belongs to ( bank ) , that have ( ( state ) equal to ( 'new york' ) )", "pred": "Find the names of banks in New York state.", "label": "Find the branch names of banks in the New York state."}
{"idx": 553, "logic": "( stuid ) , ( the number of ( all items ) ) , ( the sum of ( gamesplayed ) ) that belongs to ( sportsinfo ) , grouped by ( stuid )", "pred": "Show the student ID, the number of games played, and the total number of sports played for each student.", "label": "Show all student IDs with the number of sports and total number of games played"}
{"idx": 554, "logic": "( name ) , ( open year ) that belongs to ( manufacturer ) , that have ( ( ( num of shops ) greater than ( 10 ) ) or ( ( num of factories ) less than ( 10 ) ) )", "pred": "What are the names and opening years of the manufacturers that have more than 10 shops or less than 10 factories?", "label": "Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops."}
{"idx": 555, "logic": "( customer name of staff ) that belongs to ( ( mailshot customers ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( outcome code ) equal to ( 'order' ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Find the names of customers who have at least two mailshots.", "label": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'."}
{"idx": 556, "logic": "( duration of addresses ) , ( file size of addresses ) , ( formats of addresses ) that belongs to ( ( files ) , and ( ( song ) satisfied that ( ( f id of addresses ) equal to ( f id of staff ) ) ) ) , that have ( ( genre is of staff ) equal to ( pop ) ) , ordered by ( ( song name of staff ) )", "pred": "List the duration, file size, and formats of all songs in Pop genre, ordered by name.", "label": "List the duration, file size and format of songs whose genre is pop, ordered by title?"}
{"idx": 557, "logic": "( course name of staff ) that belongs to ( ( course authors and tutors ) , and ( ( courses ) satisfied that ( ( author id of addresses ) equal to ( author id of staff ) ) ) ) , that have ( ( personal name of addresses ) equal to ( julio ) )", "pred": "What are the names of courses taught by the author with personal name \"Julio\"", "label": "Find the names of courses taught by the tutor who has personal name \"Julio\"."}
{"idx": 558, "logic": "( the sum of ( amount payment of addresses ) ) that belongs to ( ( customer payments ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( ( first name of staff ) equal to ( carole ) ) and ( ( last name of staff ) equal to ( bernhard ) ) )", "pred": "Find the total amount of payments made by customer Carole Bernhard.", "label": "What is the total amount of moeny paid by the customer Carole Bernhard?"}
{"idx": 559, "logic": "( course name of staff ) that belongs to ( ( course authors and tutors ) , and ( ( courses ) satisfied that ( ( author id of addresses ) equal to ( author id of staff ) ) ) ) , that have ( ( personal name of addresses ) equal to ( julio ) )", "pred": "What are the names of courses taught by the author with personal name \"Julio\"", "label": "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?"}
{"idx": 560, "logic": "( the number of ( all items ) ) that belongs to ( ref locations )", "pred": "Count the number of locations.", "label": "How many locations are listed in the database?"}
{"idx": 561, "logic": "( built year ) that belongs to ( ship ) , grouped by ( built year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the year that was the most built ship.", "label": "What is the year in which most ships were built?"}
{"idx": 562, "logic": "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid of addresses ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( food ) ), and intersect with ( ( stuid of addresses ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( animal ) )) ) )", "pred": "Find the average age of students who have both allergies to food and animal.", "label": "Find the average age of the students who have allergies with food and animal types."}
{"idx": 563, "logic": "( distinct ( payment method code ) ) that belongs to ( invoices )", "pred": "List the distinct payment method codes for all invoices.", "label": "Show me the distinct payment method codes from the invoice record."}
{"idx": 564, "logic": "all items that belongs to ( instructor ) , ordered by ( ( salary ) )", "pred": "List all the instructors in alphabetical order of salary.", "label": "List the information of all instructors ordered by their salary in ascending order."}
{"idx": 565, "logic": "( name ) that belongs to ( pilot ) , that have ( ( pilot_id ) not in ( ( winning pilot ) that belongs to ( match ) , that have ( ( country ) equal to ( 'australia' ) ) ) )", "pred": "Show the names of pilots who did not win any match in Australia.", "label": "What are the names of the pilots that have not won any matches in Australia?"}
{"idx": 566, "logic": "( color description of member of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) ) , grouped by ( color description of member of club ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the description of the color that has been used the most times.", "label": "What is the description of the color used by least products?"}
{"idx": 567, "logic": "( the sum of ( crs credit ) ) , ( dept code ) that belongs to ( course ) , grouped by ( dept code )", "pred": "Find the total credit and code of each department.", "label": "What is the total credit does each department offer?"}
{"idx": 568, "logic": "( the minimum of ( product price ) ) , ( the maximum of ( product price ) ) , ( the average of ( product price ) ) that belongs to ( products )", "pred": "Show the minimum, maximum, and average price of all products.", "label": "Show the minimum, maximum, average price for all products."}
{"idx": 569, "logic": "( project details of addresses ) that belongs to ( ( projects ) , and ( ( project outcomes ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , that have ( ( outcome code of staff ) equal to ( 'paper' ) ), and intersect with ( ( project details of addresses ) that belongs to ( ( projects ) , and ( ( project outcomes ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , that have ( ( outcome code of staff ) equal to ( 'patent' ) ))", "pred": "What are the details of the projects that have both Paper and Patent outcomes?", "label": "What are the details of the project that is producing both patents and papers as outcomes?"}
{"idx": 570, "logic": "( the number of ( distinct ( sportname ) ) ) that belongs to ( sportsinfo )", "pred": "Count the number of distinct sport names.", "label": "How many different types of sports do we offer?"}
{"idx": 571, "logic": "( distinct ( range ) ) that belongs to ( mountain ) , ordered by ( ( prominence ) in descending order ) , limited to the top ( 3 )", "pred": "Find the range of the mountain with the 3 highest prominence.", "label": "List the distinct ranges of the mountains with the top 3 prominence."}
{"idx": 572, "logic": "( publisher ) that belongs to ( book club ) , that have ( ( year ) equal to ( 1989 ) ), and intersect with ( ( publisher ) that belongs to ( book club ) , that have ( ( year ) equal to ( 1990 ) ))", "pred": "What are the publishers that have both books published in 1989 and books released in 1990?", "label": "Show publishers with a book published in 1989 and a book in 1990."}
{"idx": 573, "logic": "( the number of ( distinct ( software platform ) ) ) that belongs to ( device )", "pred": "Count the number of different software platforms.", "label": "Count the number of different software platforms."}
{"idx": 574, "logic": "( dept name ) that belongs to ( student ) , grouped by ( dept name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the department that has most students.", "label": "Find the name of department has the highest amount of students?"}
{"idx": 575, "logic": "( distinct ( age of addresses ) ) that belongs to ( ( management ) , and ( ( head ) satisfied that ( ( head id of addresses ) equal to ( head id of staff ) ) ) ) , that have ( ( temporary acting of staff ) equal to ( 'yes' ) )", "pred": "What are the distinct ages of the heads who have temporary acting?", "label": "What are the distinct ages of the heads who are acting?"}
{"idx": 576, "logic": "( the minimum of ( age ) ) , ( the average of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( student )", "pred": "Show the minimum, average, and maximum age of all students.", "label": "What is the minimum, mean, and maximum age across all students?"}
{"idx": 577, "logic": "( product name of club ) that belongs to ( ( products ) , and ( ( ref product categories ) satisfied that ( ( product category code of club ) equal to ( product category code of member of club ) ) ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of student ) ) ) ) , that have ( ( ( color description of student ) equal to ( white ) ) and ( ( unit of measure of member of club ) not equal to ( handful ) ) )", "pred": "What are the names of the products that are not in the category \"White\"?", "label": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?"}
{"idx": 578, "logic": "( district name ) that belongs to ( district ) , ordered by ( ( city population ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of district with the largest city population.", "label": "What is the name of the district with the most residents?"}
{"idx": 579, "logic": "( name ) that belongs to ( program ) , that have ( ( origin ) not equal to ( 'beijing' ) )", "pred": "Find the names of programs whose origin is not Beijing.", "label": "Which programs' origins are not \"Beijing\"? Give me the program names."}
{"idx": 580, "logic": "( apt number of staff ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( booking status code of addresses ) equal to ( confirmed ) ), and intersect with ( ( apt number of staff ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( booking status code of addresses ) equal to ( provisional ) ))", "pred": "Find the number of apartments that have both confirmed and provisional booking status.", "label": "Which apartments have bookings with both status codes \"Provisional\" and \"Confirmed\"? Give me the apartment numbers."}
{"idx": 581, "logic": "( customer id of addresses ) that belongs to ( ( customers ) , and ( ( orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id of the customer who has made the most orders.", "label": "What is the customer id of the customer who has the most orders?"}
{"idx": 582, "logic": "( flno ) , ( origin ) , ( destination ) that belongs to ( flight ) , ordered by ( ( origin ) )", "pred": "List the flno, origin, destination of all flights, ordered by origin.", "label": "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities."}
{"idx": 583, "logic": "( name ) , ( dates active ) , ( number deaths ) that belongs to ( storm ) , that have ( ( number deaths ) greater than or equal to ( 1 ) )", "pred": "What are the names, dates active, and number of deaths for storms that had at least 1 death?", "label": "List name, dates active, and number of deaths for all storms with at least 1 death."}
{"idx": 584, "logic": "( the sum of ( order quantity of student ) ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( order items ) satisfied that ( ( order id of member of club ) equal to ( order id of student ) ) ) ) , that have ( ( customer name of club ) equal to ( rodrick heaney ) )", "pred": "Find the total quantity of the orders made by customer named Rodrick Heaney.", "label": "Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\"."}
{"idx": 585, "logic": "( course id ) that belongs to ( course ), and except that ( ( course id ) that belongs to ( prereq ))", "pred": "List the ids of courses that do not have prerequisites.", "label": "Find the id of the courses that do not have any prerequisite?"}
{"idx": 586, "logic": "( the sum of ( number deaths ) ) , ( the sum of ( damage millions usd ) ) that belongs to ( storm ) , that have ( ( max speed ) greater than ( the average of ( max speed ) ) that belongs to ( storm ) )", "pred": "What is the total number of deaths and damage millions usd for storms with max speed higher than the average?", "label": "What is the total number of deaths and damage for all storms with a max speed greater than the average?"}
{"idx": 587, "logic": "( the number of ( all items ) ) that belongs to ( visitors ) , that have ( ( tourist_id ) not in ( ( tourist id ) that belongs to ( visits ) ) )", "pred": "Count the number of visitors who do not visit any tourist.", "label": "How many tourists did not make any visit?"}
{"idx": 588, "logic": "( the number of ( all items ) ) that belongs to ( member ) , that have ( ( membership card ) equal to ( 'black' ) )", "pred": "Count the number of members whose membership card is black.", "label": "How many members have the black membership card?"}
{"idx": 589, "logic": "( product details of member of club ) that belongs to ( ( order items ) , and ( ( products ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) ) , grouped by ( product id of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the details of the product that has been ordered the most times.", "label": "Which product has been ordered most number of times?"}
{"idx": 590, "logic": "( name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( physician ) , and ( ( patient ) satisfied that ( ( employeeid of addresses ) equal to ( pcp of staff ) ) ) ) , grouped by ( employeeid of addresses )", "pred": "Show the name of physicians and the number of patients they have.", "label": "Return the name of each physician and the number of patients he or she treats."}
{"idx": 591, "logic": "( title of addresses ) that belongs to ( ( album ) , and ( ( track ) satisfied that ( ( albumid of addresses ) equal to ( albumid of staff ) ) ) , and ( ( genre ) satisfied that ( ( genreid of staff ) equal to ( genreid of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'reggae' ) ), and intersect with ( ( title of addresses ) that belongs to ( ( album ) , and ( ( track ) satisfied that ( ( albumid of addresses ) equal to ( albumid of staff ) ) ) , and ( ( genre ) satisfied that ( ( genreid of staff ) equal to ( genreid of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'rock' ) ))", "pred": "What are the titles of albums that are in the Reggae genre and Rock genre?", "label": "What are the album titles for albums containing both 'Reggae' and 'Rock' genre tracks?"}
{"idx": 592, "logic": "( name ) that belongs to ( editor ) , that have ( ( age ) greater than ( 25 ) )", "pred": "Find the names of editors older than 25.", "label": "List the names of editors who are older than 25."}
{"idx": 593, "logic": "( dept name ) , ( building ) that belongs to ( department ) , ordered by ( ( budget ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and building of the department with the highest budget.", "label": "What is the department name and corresponding building for the department with the greatest budget?"}
{"idx": 594, "logic": "( channel code ) that belongs to ( customer contact channels ) , grouped by ( channel code ) , that have ( ( the number of ( customer id ) ) less than ( 5 ) )", "pred": "What is the code of the channel with less than 5 customers?", "label": "Which contact channel codes were used less than 5 times?"}
{"idx": 595, "logic": "( name of addresses ) , ( trade name of addresses ) that belongs to ( ( medicine ) , and ( ( medicine enzyme interaction ) satisfied that ( ( medicine id of staff ) equal to ( id of addresses ) ) ) ) , that have ( ( interaction type ) equal to ( 'inhibitor' ) ), and intersect with ( ( name of addresses ) , ( trade name of addresses ) that belongs to ( ( medicine ) , and ( ( medicine enzyme interaction ) satisfied that ( ( medicine id of staff ) equal to ( id of addresses ) ) ) ) , that have ( ( interaction type ) equal to ( 'activitor' ) ))", "pred": "What are the names and trade names of the medicines that interact with both inhibitors and inhibitors?", "label": "List the medicine name and trade name which can both interact as 'inhibitor' and 'activitor' with enzymes."}
{"idx": 596, "logic": "( customer id ) , ( customer name ) that belongs to ( customers ) , that have ( ( ( customer address ) like ( %wy% ) ) and ( ( payment method code ) not equal to ( credit card ) ) )", "pred": "What are the ids and names of customers whose address contains the word \"wy\" and does not contain the payment method code Credit Card?", "label": "Find the id and name of customers whose address contains WY state and do not use credit card for payment."}
{"idx": 597, "logic": "( the average of ( ticket price ) ) , ( the minimum of ( ticket price ) ) , ( the maximum of ( ticket price ) ) that belongs to ( exhibition ) , that have ( ( year ) less than ( 2009 ) )", "pred": "What is the average, minimum, and maximum ticket price of all exhibitions held before 2009?", "label": "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009."}
{"idx": 598, "logic": "( character ) , ( duration ) that belongs to ( actor )", "pred": "List the character and duration of all actors.", "label": "Return the characters and durations for each actor."}
{"idx": 599, "logic": "( distinct ( form type code ) ) that belongs to ( forms )", "pred": "What are all the distinct form type codes?", "label": "List all the types of forms."}
{"idx": 600, "logic": "( name of addresses ) that belongs to ( ( nurse ) , and ( ( appointment ) satisfied that ( ( employeeid of addresses ) equal to ( prepnurse of staff ) ) ) ) , grouped by ( employeeid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the nurse who has made the most appointment.", "label": "Find the name of the nurse who has the largest number of appointments."}
{"idx": 601, "logic": "( name ) that belongs to ( scientists ) , ordered by ( ( name ) )", "pred": "List the names of scientists in alphabetical order of name", "label": "List the names of all scientists sorted in alphabetical order."}
{"idx": 602, "logic": "( the number of ( all items ) ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( papers ) satisfied that ( ( paperid of member of club ) equal to ( paperid of student ) ) ) ) , that have ( ( ( fname of club ) equal to ( atsushi ) ) and ( ( lname of club ) equal to ( ohori ) ) )", "pred": "Find the number of papers written by the author named atsushi Ohori.", "label": "How many papers are \"Atsushi Ohori\" the author of?"}
{"idx": 603, "logic": "( the number of ( distinct ( official native language of addresses ) ) ) that belongs to ( ( country ) , and ( ( match season ) satisfied that ( ( country id of addresses ) equal to ( country of staff ) ) ) ) , that have ( ( position of staff ) equal to ( defender ) )", "pred": "How many different official native languages are used for the position of defender?", "label": "Count the number of different official languages corresponding to countries that players who play Defender are from."}
{"idx": 604, "logic": "( town city ) that belongs to ( customers ) , that have ( ( customer type code ) equal to ( good credit rating ) ) , grouped by ( town city ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "pred": "Find the city that has the most customers with good credit rating.", "label": "Return the city with the customer type code \"Good Credit Rating\" that had the fewest customers."}
{"idx": 605, "logic": "( document status description of ref document status ) that belongs to ( ref document status , and ( documents satisfied that ( ( document status code of documents ) equal to ( document status code of ref document status ) ) ) ) , that have ( ( document id of documents ) equal to ( 1 ) )", "pred": "What is the status description of the document status with id 1.", "label": "What is the document status description of the document with id 1?"}
{"idx": 606, "logic": "( name ) , ( lat ) , ( city ) that belongs to ( station ) , ordered by ( ( lat ) ) , limited to the top ( 1 )", "pred": "Find the name, lat, and city of the station with the highest latitude.", "label": "What are the name, latitude, and city of the station with the lowest latitude?"}
{"idx": 607, "logic": "( customer name ) that belongs to ( customers ) , that have ( ( payment method ) not equal to ( 'cash' ) )", "pred": "Find the names of customers who use Cash payment method.", "label": "Find the name of customers who did not pay with Cash."}
{"idx": 608, "logic": "( firstname of staff ) , ( lastname of staff ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , grouped by ( firstname of staff ) , ( lastname of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the first name and last name of the teacher who has taught the most students.", "label": "Find the name of the teacher who teaches the largest number of students."}
{"idx": 609, "logic": "( allergytype ) that belongs to ( allergy type ) , that have ( ( allergy ) equal to ( cat ) )", "pred": "What are the allergies of cat?", "label": "What is the type of allergy Cat?"}
{"idx": 610, "logic": "( location ) that belongs to ( performance ) , grouped by ( location ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show all locations that have at least two performances.", "label": "Show the locations that have at least two performances."}
{"idx": 611, "logic": "( type ) , ( the number of ( all items ) ) that belongs to ( operate company ) , grouped by ( type ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Show the type and the number of companies operated.", "label": "What is the most common company type, and how many are there?"}
{"idx": 612, "logic": "( first name of addresses ) , ( last name of addresses ) , ( employee id of addresses ) , ( country name of trip ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) , and ( ( locations ) satisfied that ( ( location id of staff ) equal to ( location id of enzyme ) ) ) , and ( ( countries ) satisfied that ( ( country id of enzyme ) equal to ( country id of trip ) ) ) )", "pred": "What are the first name, last name, employee id, and country name of all employees who are in the department?", "label": "display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working."}
{"idx": 613, "logic": "( name of staff ) , ( team id winner of addresses ) that belongs to ( ( postseason ) , and ( ( team ) satisfied that ( ( team id winner of addresses ) equal to ( team id br of staff ) ) ) ) , that have ( ( year of addresses ) equal to ( 2008 ) ) , grouped by ( team id winner of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and id of the team that won the most postseason in 2008.", "label": "What are the name and id of the team with the most victories in 2008 postseason?"}
{"idx": 614, "logic": "( position of addresses ) that belongs to ( ( match season ) , and ( ( team ) satisfied that ( ( team of addresses ) equal to ( team id of staff ) ) ) ) , that have ( ( name of staff ) equal to ( ryley goldner ) )", "pred": "What is the position of the player named RYLEY GOLDNER in match season?", "label": "Show the positions of the players from the team with name \"Ryley Goldner\"."}
{"idx": 615, "logic": "( transaction id ) that belongs to ( transactions ) , that have ( ( transaction type code ) equal to ( 'pur' ) )", "pred": "Find the ids of transactions with type code 'pur'.", "label": "Show all transaction ids with transaction code 'PUR'."}
{"idx": 616, "logic": "( customer name of staff ) that belongs to ( ( orders ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of staff ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "pred": "Find the names of customers who have made at least two orders.", "label": "Find the name of the customers who have at most two orders."}
{"idx": 617, "logic": "( product type code ) that belongs to ( products ) , that have ( ( product price ) greater than ( 4500 ) ), and intersect with ( ( product type code ) that belongs to ( products ) , that have ( ( product price ) less than ( 3000 ) ))", "pred": "What are the codes of the products that have both a price higher than 4500 and a price lower than 3000.", "label": "Show the product type codes that have both products with price higher than 4500 and products with price lower than 3000."}
{"idx": 618, "logic": "( driverid of addresses ) , ( the number of ( all items ) ) that belongs to ( ( drivers ) , and ( ( results ) satisfied that ( ( driverid of addresses ) equal to ( driverid of staff ) ) ) , and ( ( races ) satisfied that ( ( raceid of staff ) equal to ( raceid of enzyme ) ) ) ) , grouped by ( driverid of addresses ) , that have ( ( the number of ( all items ) ) less than or equal to ( 30 ) )", "pred": "Show the id and number of races for each driver who participated in 30 or more races.", "label": "For each id of a driver who participated in at most 30 races, how many races did they participate in?"}
{"idx": 619, "logic": "( activity name of addresses ) that belongs to ( ( activity ) , and ( ( faculty participates in ) satisfied that ( ( actid of addresses ) equal to ( actid of staff ) ) ) ) , grouped by ( actid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the activity that the most faculty participates in.", "label": "Which activity has the most faculty members participating in? Find the activity name."}
{"idx": 620, "logic": "( nationality ) , ( the number of ( all items ) ) that belongs to ( pilot ) , grouped by ( nationality )", "pred": "Show each nationality and the number of pilots from that nationality.", "label": "What are the different nationalities of pilots? Show each nationality and the number of pilots of each nationality."}
{"idx": 621, "logic": "( the number of ( all items ) ) , ( dorm name of enzyme ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) , and ( ( dorm ) satisfied that ( ( dormid of enzyme ) equal to ( dormid of staff ) ) ) ) , that have ( ( age of addresses ) greater than ( 20 ) ) , grouped by ( dorm name of enzyme )", "pred": "Find the number of students living in each dorm and the name of the dorm.", "label": "Find the number of students who is older than 20 in each dorm."}
{"idx": 622, "logic": "( name of addresses ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( name of addresses ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses ) , that have ( ( the sum of ( number city affected of staff ) ) greater than or equal to ( 10 ) ))", "pred": "Show the names of storms that affected at least two cities and at least 10 cities in each region.", "label": "Show storm name with at least two regions and 10 cities affected."}
{"idx": 623, "logic": "( name ) that belongs to ( procedures ) , that have ( ( cost ) less than ( 5000 ) ), and intersect with ( ( name of enzyme ) that belongs to ( ( physician ) , and ( ( trained in ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( procedures ) satisfied that ( ( code of enzyme ) equal to ( treatment of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( john wen ) ))", "pred": "Find the names of procedures that cost less than 5000 and are trained by physician John Wen.", "label": "What procedures cost less than 5000 and have John Wen as a trained physician?"}
{"idx": 624, "logic": "( famous title ) that belongs to ( artist ) , that have ( ( artist_id ) not in ( ( ( artist id ) that belongs to ( volume ) ) ) )", "pred": "What are the famous titles of the artists who did not produce volumes?", "label": "What are the famous titles of artists who do not have any volumes?"}
{"idx": 625, "logic": "( cloud cover ) that belongs to ( weather ) , that have ( ( zip code ) equal to ( 94107 ) ) , grouped by ( cloud cover ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 3 )", "pred": "Find the cloud cover of the weather with zip code 94107.", "label": "What is the 3 most common cloud cover rates in the region of zip code 94107?"}
{"idx": 626, "logic": "( shop name of staff ) that belongs to ( ( stock ) , and ( ( shop ) satisfied that ( ( shop id of addresses ) equal to ( shop id of staff ) ) ) ) , grouped by ( shop id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the shop that has the most stock.", "label": "What is the name of the shop that has the most different kinds of devices in stock?"}
{"idx": 627, "logic": "( first name ) that belongs to ( people ) , ordered by ( ( first name ) )", "pred": "List the first names of people in alphabetical order of first name", "label": "List the first names of people in alphabetical order?"}
{"idx": 628, "logic": "( roomid ) , ( roomname ) that belongs to ( rooms ) , ordered by ( ( baseprice ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id and name of the room with the highest baseprice price.", "label": "Find the id and name of the most expensive base price room."}
{"idx": 629, "logic": "( the average of ( total passengers of enzyme ) ) that belongs to ( ( aircraft ) , and ( ( airport aircraft ) satisfied that ( ( aircraft id of addresses ) equal to ( aircraft id of staff ) ) ) , and ( ( airport ) satisfied that ( ( airport id of staff ) equal to ( airport id of enzyme ) ) ) ) , that have ( ( aircraft of addresses ) equal to ( robinson r-22 ) )", "pred": "What is the average number of total passengers for each airport with Boeing 737-800?", "label": "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?"}
{"idx": 630, "logic": "( artist name of addresses ) , ( country of addresses ) that belongs to ( ( artist ) , and ( ( song ) satisfied that ( ( artist name of addresses ) equal to ( artist name of staff ) ) ) ) , that have ( ( resolution of staff ) greater than ( 900 ) ) , grouped by ( artist name of staff ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )", "pred": "What are the names and countries of the artists who have at least one song with resolution greater than 900?", "label": "What is the name and country of origin for each artist who has released a song with a resolution higher than 900?"}
{"idx": 631, "logic": "( name of staff ) that belongs to ( ( advisor ) , and ( ( instructor ) satisfied that ( ( i id of addresses ) equal to ( id of staff ) ) ) , and ( ( student ) satisfied that ( ( s id of addresses ) equal to ( id of enzyme ) ) ) ) , ordered by ( ( tot cred of enzyme ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the instructor who advised the student with the highest tot cred.", "label": "Find the name of instructor who is the advisor of the student who has the highest number of total credits."}
{"idx": 632, "logic": "( the minimum of ( membership amount ) ) , ( the maximum of ( membership amount ) ) that belongs to ( branch ) , that have ( ( ( open year ) equal to ( 2011 ) ) or ( ( city ) equal to ( 'london' ) ) )", "pred": "What is the minimum and maximum membership amount of branches opened in 2011 or in London?", "label": "Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London."}
{"idx": 633, "logic": "( statement id ) , ( the number of ( all items ) ) that belongs to ( accounts ) , grouped by ( statement id )", "pred": "Show statement id and the number of accounts for each statement.", "label": "What are the different statement ids on accounts, and the number of accounts for each?"}
{"idx": 634, "logic": "( store id ) that belongs to ( inventory ) , grouped by ( store id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id of the store with the most inventory.", "label": "Which store owns most items?"}
{"idx": 635, "logic": "( billing state ) , ( the number of ( all items ) ) that belongs to ( invoices ) , that have ( ( billing country ) equal to ( usa ) ) , grouped by ( billing state ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the billing state and the number of invoices from there.", "label": "List the state in the US with the most invoices."}
{"idx": 636, "logic": "( the number of ( distinct ( language id ) ) ) that belongs to ( film )", "pred": "Count the number of distinct languages used in films.", "label": "Count the number of different languages in these films."}
{"idx": 637, "logic": "( college ) that belongs to ( match season ) , that have ( ( position ) equal to ( midfielder ) ), and intersect with ( ( college ) that belongs to ( match season ) , that have ( ( position ) equal to ( defender ) ))", "pred": "Show the colleges that have both players in the position of midfielder and defenders.", "label": "Which college have both players with position midfielder and players with position defender?"}
{"idx": 638, "logic": "( address details of addresses ) that belongs to ( ( addresses ) , and ( ( customer addresses ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( customer id of staff ) equal to ( 10 ) )", "pred": "What is the address of the customer with id 10?", "label": "Return the address of customer 10."}
{"idx": 639, "logic": "( name of addresses ) , ( team id of addresses ) that belongs to ( ( team ) , and ( ( salary ) satisfied that ( ( team id of addresses ) equal to ( team id of staff ) ) ) ) , grouped by ( team id of addresses ) , ordered by ( ( the average of ( salary of staff ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the name and id of the team with the highest average salary.", "label": "What are the name and id of the team offering the lowest average salary?"}
{"idx": 640, "logic": "( student id ) that belongs to ( student course registrations ) , grouped by ( student id ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "pred": "Find the id of the student who has registered the most courses.", "label": "What are the ids of the students who registered for some courses but had the least number of courses for all students?"}
{"idx": 641, "logic": "( activity name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( activity ) , and ( ( faculty participates in ) satisfied that ( ( actid of addresses ) equal to ( actid of staff ) ) ) ) , grouped by ( actid of addresses )", "pred": "Show the name of each activity and the number of faculty members participating.", "label": "Show all the activity names and the number of faculty involved in each activity."}
{"idx": 642, "logic": "( status ) that belongs to ( city ) , that have ( ( population ) greater than ( 1500 ) ), and intersect with ( ( status ) that belongs to ( city ) , that have ( ( population ) less than ( 500 ) ))", "pred": "What are the status of cities that have both population above 1500 and population below 500?", "label": "Show the status shared by cities with population bigger than 1500 and smaller than 500."}
{"idx": 643, "logic": "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , grouped by ( cust name of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "List the names of customers who have taken more than one loan.", "label": "Find the name of customers who have more than one loan."}
{"idx": 644, "logic": "all items that belongs to ( employees ) , that have ( ( salary ) between ( the minimum of ( salary ) ) that belongs to ( employees ) and ( 2500 ) )", "pred": "What is all the information about employees whose salary is between the minimum salary and 2500.", "label": "display all the information of the employees whose salary if within the range of smallest salary and 2500."}
{"idx": 645, "logic": "( software platform ) that belongs to ( device ) , grouped by ( software platform ) , ordered by ( ( the number of ( all items ) ) in descending order )", "pred": "Show the software platform that has the most devices.", "label": "Please show the software platforms of devices in descending order of the count."}
{"idx": 646, "logic": "( customer details of student ) that belongs to ( ( claim headers ) , and ( ( policies ) satisfied that ( ( policy id of club ) equal to ( policy id of member of club ) ) ) , and ( ( customers ) satisfied that ( ( customer id of member of club ) equal to ( customer id of student ) ) ) ) , that have ( ( amount piad of club ) equal to ( the minimum of ( amount piad ) ) that belongs to ( claim headers ) )", "pred": "Find the details of the customers who have the policy with the smallest amount of piad.", "label": "Which customer made the smallest amount of claim in one claim? Return the customer details."}
{"idx": 647, "logic": "( the number of ( all items ) ) that belongs to ( \"l ( state of addresses ) that belongs to ( ( college ) , and ( ( tryout ) satisfied that ( ( cname of addresses ) equal to ( cname of staff ) ) ) ) , that have ( ( ppos of staff ) equal to ( 'mid' ) ), and except that ( ( state of addresses ) that belongs to ( ( college ) , and ( ( tryout ) satisfied that ( ( cname of addresses ) equal to ( cname of staff ) ) ) ) , that have ( ( ppos of staff ) equal to ( 'goalie' ) )) r\" )", "pred": "Find the number of colleges that did not have any mid or goalie tryouts.", "label": "What is the count of states with college students playing in the mid position but not as goalies?"}
{"idx": 648, "logic": "( dept name of staff ) that belongs to ( ( student ) , and ( ( department ) satisfied that ( ( dept code of addresses ) equal to ( dept code of staff ) ) ) ) , ordered by ( ( stu gpa ) ) , limited to the top ( 1 )", "pred": "Find the name of the department that has the highest student GPA.", "label": "What is the name of the department with the student that has the lowest GPA?"}
{"idx": 649, "logic": "( sex ) that belongs to ( student ) , that have ( ( ( fname ) equal to ( linda ) ) and ( ( lname ) equal to ( smith ) ) )", "pred": "Find the sex of the female student Linda Smith.", "label": "What is the gender of the student Linda Smith?"}
{"idx": 650, "logic": "( resident id of addresses ) , ( other details of addresses ) , ( the number of ( all items ) ) that belongs to ( ( residents ) , and ( ( residents services ) satisfied that ( ( resident id of addresses ) equal to ( resident id of staff ) ) ) ) , grouped by ( resident id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order )", "pred": "List the id, other details, and the number of services for each resident, ordered by the number.", "label": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count."}
{"idx": 651, "logic": "( lesson id of addresses ) that belongs to ( ( lessons ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( ( first name of staff ) equal to ( janessa ) ) and ( ( last name of staff ) equal to ( sawayn ) ) and ( ( nickname ) like ( %s% ) ) )", "pred": "What are the ids of lessons taught by staff whose first name is Janessa and last name is Sawayn and whose nickname is \"Sawayn\"?", "label": "What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?"}
{"idx": 652, "logic": "( founder ) that belongs to ( manufacturers ) , that have ( ( name ) like ( 's%' ) )", "pred": "Find the founder of the manufacturer whose name contains the letter 'S'.", "label": "Who is the founders of companies whose first letter is S?"}
{"idx": 653, "logic": "( project id ) that belongs to ( documents ) , grouped by ( project id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show the ids of projects that have at least two documents.", "label": "Show the ids for projects with at least 2 documents."}
{"idx": 654, "logic": "( name ) that belongs to ( student ) , that have ( ( dept name ) equal to ( 'history' ) ) , ordered by ( ( tot cred ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the student from History department with the highest tot cred.", "label": "What is the name of the student who has the highest total credits in the History department."}
{"idx": 655, "logic": "( name ) that belongs to ( wrestler ) , ordered by ( ( days held ) in descending order )", "pred": "List the names of wrestlers in descending order of days held.", "label": "List the names of wrestlers in descending order of days held."}
{"idx": 656, "logic": "( distinct ( supplier name of addresses ) ) , ( supplier phone of addresses ) that belongs to ( ( suppliers ) , and ( ( product suppliers ) satisfied that ( ( supplier id of addresses ) equal to ( supplier id of staff ) ) ) , and ( ( products ) satisfied that ( ( product id of staff ) equal to ( product id of enzyme ) ) ) ) , that have ( ( product name of enzyme ) equal to ( red jeans ) )", "pred": "What are the distinct names and phone numbers of the suppliers who supplied the product \"Red Jeans\"?", "label": "List the names and phone numbers of all the distinct suppliers who supply red jeans."}
{"idx": 657, "logic": "( name ) that belongs to ( people ) , ordered by ( ( date of birth ) )", "pred": "List the names of people, ordered by date of birth.", "label": "What are the names of all people, ordered by their date of birth?"}
{"idx": 658, "logic": "( song ) that belongs to ( volume ) , ordered by ( ( weeks on top ) in descending order ) , limited to the top ( 1 )", "pred": "Find the song that has spent the most weeks on top.", "label": "What is the song in the volume with the maximum weeks on top?"}
{"idx": 659, "logic": "( park ) that belongs to ( roller coaster ) , ordered by ( ( speed ) in descending order ) , limited to the top ( 1 )", "pred": "Find the park that has the fastest roller coaster speed.", "label": "Show the park of the roller coaster with the highest speed."}
{"idx": 660, "logic": "( name ) , ( address road ) , ( city ) that belongs to ( branch ) , ordered by ( ( open year ) )", "pred": "List the name, address road, city of branches in alphabetical order of opening year.", "label": "What are the names, address roads, and cities of the branches ordered by opening year?"}
{"idx": 661, "logic": "( name of staff ) that belongs to ( ( entrepreneur ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , ordered by ( ( weight of staff ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the entrepreneur who has the heaviest weight.", "label": "Return the name of the heaviest entrepreneur."}
{"idx": 662, "logic": "( calendar date ) , ( day number ) that belongs to ( ref calendar )", "pred": "List the calendar date and day number of all ref calendar.", "label": "Show all calendar dates and day Numbers."}
{"idx": 663, "logic": "( party ) , ( the number of ( all items ) ) that belongs to ( driver ) , grouped by ( party )", "pred": "Show each party and the number of drivers in each party.", "label": "Show the party and the number of drivers in each party."}
{"idx": 664, "logic": "( location code ) that belongs to ( document locations ) , grouped by ( location code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the code of the location that has the most documents.", "label": "Find the code of the location with the largest number of documents."}
{"idx": 665, "logic": "( type ) that belongs to ( ( vocals ) , and ( ( songs ) satisfied that ( ( songid of addresses ) equal to ( songid of staff ) ) ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of enzyme ) ) ) ) , that have ( ( ( lastname of enzyme ) equal to ( heilo ) ) and ( ( title of staff ) equal to ( der kapitan ) ) )", "pred": "What is the vocal type used in the song \"Heilo Kapitan\"? Give me the song type.", "label": "Which vocal type did the musician with last name \"Heilo\" played in the song with title \"Der Kapitan\"?"}
{"idx": 666, "logic": "( the number of ( all items ) ) that belongs to ( course ) , that have ( ( course_id ) not in ( ( course id ) that belongs to ( prereq ) ) )", "pred": "Count the number of courses that did not have prerequisites.", "label": "How many courses that do not have prerequisite?"}
{"idx": 667, "logic": "( name ) , ( job ) that belongs to ( person ) , ordered by ( ( name ) )", "pred": "List the name and job of all people in alphabetical order of name", "label": "What are the names and job titles of every person ordered alphabetically by name?"}
{"idx": 668, "logic": "( the sum of ( balance of staff ) ) , ( name of addresses ) that belongs to ( ( accounts ) , and ( ( savings ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) ) , grouped by ( name of addresses )", "pred": "Show the total balance and name of savings accounts for each customer.", "label": "What are the names of customers with accounts, and what are the total savings balances for each?"}
{"idx": 669, "logic": "( date of ceremony ) that belongs to ( music festival ) , that have ( ( ( category ) equal to ( best song ) ) and ( ( result ) equal to ( awarded ) ) )", "pred": "What is the date of ceremony of the music festival that has the category \"Best Song\" and the result \"Award\"?", "label": "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\"."}
{"idx": 670, "logic": "( customer first name of staff ) , ( customer last name of staff ) , ( customer id of addresses ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the first name, last name, and id of the customer who has the most accounts.", "label": "What is the customer first, last name and id with least number of accounts."}
{"idx": 671, "logic": "( destruction authorised by employee id ) , ( the number of ( all items ) ) that belongs to ( documents to be destroyed ) , grouped by ( destruction authorised by employee id )", "pred": "Show the authorised id and the number of documents to be destroyed by each employee.", "label": "Show the id of each employee and the number of document destruction authorised by that employee."}
{"idx": 672, "logic": "( the number of ( distinct ( city ) ) ) that belongs to ( stadium ) , that have ( ( opening year ) less than ( 2006 ) )", "pred": "Count the number of stadiums that opened before 2006.", "label": "How many cities have a stadium that was opened before the year of 2006?"}
{"idx": 673, "logic": "( the average of ( age of student ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( clubname of club ) equal to ( hopkins student enterprises ) )", "pred": "Find the average age of members of the club \"Hopkins Student Enterprises\".", "label": "Find the average age of members of the club \"Hopkins Student Enterprises\"."}
{"idx": 674, "logic": "( id of addresses ) , ( name of addresses ) that belongs to ( ( web client accelerator ) , and ( ( accelerator compatible browser ) satisfied that ( ( accelerator id of staff ) equal to ( id of addresses ) ) ) ) , grouped by ( id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What are the ids and names of the accelerators that have at least two web client accelerators compatible with two browsers?", "label": "What are the ids and names of the web accelerators that are compatible with two or more browsers?"}
{"idx": 675, "logic": "( name of addresses ) that belongs to ( ( accounts ) , and ( ( checking ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) ) , that have ( ( balance of staff ) less than ( the average of ( balance ) ) that belongs to ( checking ) )", "pred": "Find the names of accounts whose checking balance is lower than the average checking balance.", "label": "What are the names of customers with checking balances lower than the average checking balance?"}
{"idx": 676, "logic": "( location name of enzyme ) that belongs to ( ( all documents ) , and ( ( document locations ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) , and ( ( ref locations ) satisfied that ( ( location code of staff ) equal to ( location code of enzyme ) ) ) ) , that have ( ( document name of addresses ) equal to ( robin cv ) )", "pred": "Find the location of the document named \"Robin CV\".", "label": "Show the location name for document \"Robin CV\"."}
{"idx": 677, "logic": "( stu fname of enzyme ) that belongs to ( ( class ) , and ( ( enroll ) satisfied that ( ( class code of addresses ) equal to ( class code of staff ) ) ) , and ( ( student ) satisfied that ( ( stu num of staff ) equal to ( stu num of enzyme ) ) ) ) , that have ( ( crs code of addresses ) equal to ( 'acct-211' ) )", "pred": "What are the first names of all the students who took ACCT-211?", "label": "What is the first name of each student enrolled in class ACCT-211?"}
{"idx": 678, "logic": "( distinct ( city code ) ) that belongs to ( student )", "pred": "List the distinct city codes of all students.", "label": "What cities do students live in?"}
{"idx": 679, "logic": "( the average of ( hours ) ) that belongs to ( projects )", "pred": "Find the average hours for all projects.", "label": "Find the average hours of all projects."}
{"idx": 680, "logic": "( distinct ( police force ) ) that belongs to ( county public safety ) , that have ( ( location ) not equal to ( east ) )", "pred": "What are the distinct police forces of counties whose location is not East.", "label": "List the distinct police forces of counties whose location is not on east side."}
{"idx": 681, "logic": "( name ) , ( price ) that belongs to ( products ) , ordered by ( ( price ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the name and price of the item with the highest price.", "label": "Select the name and price of the cheapest product."}
{"idx": 682, "logic": "( issue date of staff ) that belongs to ( ( artist ) , and ( ( volume ) satisfied that ( ( artist id of addresses ) equal to ( artist id of staff ) ) ) ) , that have ( ( artist of addresses ) equal to ( gorgoroth ) )", "pred": "What are the issue dates of volumes produced by artist \"Gorgoroth\"", "label": "Return the issue dates of volumes that are by the artist named Gorgoroth."}
{"idx": 683, "logic": "( the number of ( all items ) ) , ( country ) that belongs to ( airports ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order )", "pred": "Show the number of airports in each country, ordered by the number.", "label": "How many airports are there per country? Order the countries by decreasing number of airports."}
{"idx": 684, "logic": "( the number of ( all items ) ) that belongs to ( ( exhibition record ) , and ( ( exhibition ) satisfied that ( ( exhibition id of addresses ) equal to ( exhibition id of staff ) ) ) ) , that have ( ( ( attendance of addresses ) greater than ( 100 ) ) or ( ( ticket price of staff ) less than ( 10 ) ) )", "pred": "Count the number of exhibitions with attendance above 100 or ticket price below 10.", "label": "How many exhibitions have a attendance more than 100 or have a ticket price below 10?"}
{"idx": 685, "logic": "( the number of ( all items ) ) , ( competition ) that belongs to ( match ) , grouped by ( competition )", "pred": "Count the number of matches in each competition.", "label": "Find the number of matches in different competitions."}
{"idx": 686, "logic": "( address of staff ) that belongs to ( ( store ) , and ( ( address ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( store id ) equal to ( 1 ) )", "pred": "Find the address of the store with id 1.", "label": "Return the address of store 1."}
{"idx": 687, "logic": "( rid ) that belongs to ( rating ) , that have ( ( stars ) not equal to ( 4 ) )", "pred": "What are the rid of the ratings whose rating is not 4.", "label": "Find the ids of reviewers who didn't only give 4 star."}
{"idx": 688, "logic": "( the minimum of ( crime rate ) ) , ( the maximum of ( crime rate ) ) that belongs to ( county public safety )", "pred": "What are the minimum and maximum crime rates for each county?", "label": "Return the minimum and maximum crime rates across all counties."}
{"idx": 689, "logic": "( founded ) that belongs to ( university ) , ordered by ( ( enrollment ) in descending order ) , limited to the top ( 1 )", "pred": "Find the founding year of the university with the largest enrollment.", "label": "Return the founded year for the school with the largest enrollment."}
{"idx": 690, "logic": "( distinct ( name of enzyme ) ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) , and ( ( reviewer ) satisfied that ( ( rid of addresses ) equal to ( rid of enzyme ) ) ) ) , that have ( ( title of staff ) equal to ( 'gone with the wind' ) )", "pred": "What are the distinct names of the reviewers who have given Gone With the Wind a rating?", "label": "What are the names of all the different reviewers who rates Gone with the Wind?"}
{"idx": 691, "logic": "( facid ) that belongs to ( faculty ), and except that ( ( advisor ) that belongs to ( student ))", "pred": "What are the ids of all faculty members who do not advise any student?", "label": "What are the ids of the faculty members who do not advise any student."}
{"idx": 692, "logic": "( roomname ) that belongs to ( rooms ) , that have ( ( baseprice ) between ( 120 ) and ( 150 ) )", "pred": "Find the names of rooms with a base price between 120 and 150.", "label": "Which rooms cost between 120 and 150? Give me the room names."}
{"idx": 693, "logic": "( the number of ( distinct ( student id ) ) ) that belongs to ( students in detention )", "pred": "Count the number of students in detention.", "label": "How many distinct students have been in detention?"}
{"idx": 694, "logic": "( facid of addresses ) , ( the number of ( all items ) ) that belongs to ( ( faculty ) , and ( ( student ) satisfied that ( ( facid of addresses ) equal to ( advisor of staff ) ) ) ) , grouped by ( facid of addresses )", "pred": "Show the faculty id and the number of students who advise each faculty.", "label": "What are the faculty id and the number of students each faculty has?"}
{"idx": 695, "logic": "( county name of addresses ) that belongs to ( ( county ) , and ( ( election ) satisfied that ( ( county id of addresses ) equal to ( district of staff ) ) ) ) , grouped by ( county id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show the names of counties that have at least two elections.", "label": "Which counties have two or more delegates? Give me the county names."}
{"idx": 696, "logic": "( outcome description of addresses ) that belongs to ( ( research outcomes ) , and ( ( project outcomes ) satisfied that ( ( outcome code of addresses ) equal to ( outcome code of staff ) ) ) , and ( ( projects ) satisfied that ( ( project id of staff ) equal to ( project id of enzyme ) ) ) ) , that have ( ( project details of enzyme ) equal to ( 'sint' ) )", "pred": "What is the description of the outcome code for the project with details 'Sint'?", "label": "What are the result description of the project whose detail is'sint'?"}
{"idx": 697, "logic": "( nickname ) that belongs to ( staff ) , that have ( ( ( first name ) equal to ( janessa ) ) and ( ( last name ) equal to ( sawayn ) ) )", "pred": "What is the nickname of the staff member whose first name is Janessa and last name is Sawayn.", "label": "What is the nickname of staff with first name as Janessa and last name as Sawayn?"}
{"idx": 698, "logic": "( other details ) that belongs to ( locations ) , that have ( ( location name ) equal to ( uk gallery ) )", "pred": "What are the other details of the location named \"Uk Gallery\"", "label": "Return the detail of the location named \"UK Gallery\"."}
{"idx": 699, "logic": "( eid ) that belongs to ( employee ), and except that ( ( eid ) that belongs to ( certificate ))", "pred": "What are the ids of all employees who do not have certificates?", "label": "Show ids for all employees who don't have a certificate."}
{"idx": 700, "logic": "( cust name ) that belongs to ( customer ), and except that ( ( cust name ) that belongs to ( customer ) , that have ( ( acc type ) equal to ( 'saving' ) ))", "pred": "What are the names of customers who don't have saving accounts?", "label": "Find the name of customers who do not have an saving account."}
{"idx": 701, "logic": "( amenity name of addresses ) that belongs to ( ( dorm amenity ) , and ( ( has amenity ) satisfied that ( ( amenid of addresses ) equal to ( amenid of staff ) ) ) ) , grouped by ( amenid of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the amenity that has the most amenities.", "label": "What is the most common amenity in the dorms?"}
{"idx": 702, "logic": "( gender code ) , ( the number of ( all items ) ) that belongs to ( guests ) , grouped by ( gender code ) , ordered by ( ( the number of ( all items ) ) in descending order )", "pred": "Show the gender code and the number of guests in descending order of the number.", "label": "Sort the gender codes in descending order of their corresponding number of guests. Return both the gender codes and counts."}
{"idx": 703, "logic": "( address id of staff ) , ( zip postcode of addresses ) that belongs to ( ( addresses ) , and ( ( student addresses ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , ordered by ( ( monthly rental ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id and zip code of the address with the highest monthly rental.", "label": "What are the id and zip code of the address with the highest monthly rental?"}
{"idx": 704, "logic": "( name of enzyme ) , ( time of enzyme ) that belongs to ( ( train station ) , and ( ( station ) satisfied that ( ( station id of addresses ) equal to ( station id of staff ) ) ) , and ( ( train ) satisfied that ( ( train id of enzyme ) equal to ( train id of addresses ) ) ) ) , that have ( ( location of staff ) equal to ( 'london' ) ) , ordered by ( ( time of enzyme ) in descending order )", "pred": "What are the names and times of stations that are served by trains from London, ordered by the time of arrival?", "label": "Show all train names and times in stations in London in descending order by train time."}
{"idx": 705, "logic": "( the average of ( age of student ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( clubname of club ) equal to ( hopkins student enterprises ) )", "pred": "Find the average age of members of the club \"Hopkins Student Enterprises\".", "label": "On average, how old are the members in the club \"Hopkins Student Enterprises\"?"}
{"idx": 706, "logic": "( budget type code ) , ( the number of ( all items ) ) that belongs to ( documents with expenses ) , grouped by ( budget type code )", "pred": "Show each budget type code and the number of documents with expenses in each budget.", "label": "Show budget type codes and the number of documents in each budget type."}
{"idx": 707, "logic": "( team of addresses ) , ( location of staff ) that belongs to ( ( player ) , and ( ( school ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) )", "pred": "Show the team and location of all players from each school.", "label": "For each player, show the team and the location of school they belong to."}
{"idx": 708, "logic": "( dept name of enzyme ) , ( prof office of staff ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , that have ( ( emp lname of addresses ) equal to ( 'heffington' ) )", "pred": "What is the name and office of the professor whose last name is 'Heffington'", "label": "What is the name of the department and office location for the professor with the last name of Heffington?"}
{"idx": 709, "logic": "( product name ) that belongs to ( products ), and except that ( ( product name of addresses ) that belongs to ( ( products ) , and ( ( order items ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ))", "pred": "List the names of products that are not ordered by any customer.", "label": "Show all product names without an order."}
{"idx": 710, "logic": "( distinct ( theme ) ) that belongs to ( journal )", "pred": "Show all distinct themes of journals.", "label": "Show the distinct themes of journals."}
{"idx": 711, "logic": "( rid ) that belongs to ( routes ) , that have ( ( ( dst apid ) in ( ( apid ) that belongs to ( airports ) , that have ( ( country ) equal to ( 'united states' ) ) ) ) and ( ( src apid ) in ( ( apid ) that belongs to ( airports ) , that have ( ( country ) equal to ( 'united states' ) ) ) ) )", "pred": "What are the rid of all routes that originate from the United States and originate in the UK?", "label": "What is the id of the routes whose source and destination airports are in the United States?"}
{"idx": 712, "logic": "( distinct ( classroom ) ) , ( grade ) that belongs to ( list )", "pred": "List the distinct classroom and grade of all the students.", "label": "What are the grade number and classroom number of each class in the list?"}
{"idx": 713, "logic": "( name of enzyme ) that belongs to ( ( repair assignment ) , and ( ( machine ) satisfied that ( ( machine id of addresses ) equal to ( machine id of staff ) ) ) , and ( ( technician ) satisfied that ( ( technician id of addresses ) equal to ( technician id of enzyme ) ) ) ) , ordered by ( ( quality rank of staff ) )", "pred": "What are the names of the technicians who have been assigned to repair machines, ordered by quality rank?", "label": "Show names of technicians in ascending order of quality rank of the machine they are assigned."}
{"idx": 714, "logic": "( class code ) that belongs to ( class ) , that have ( ( class room ) equal to ( 'klr209' ) )", "pred": "What is the code of the class with room Klr209.", "label": "List the codes of all courses that take place in room KLR209."}
{"idx": 715, "logic": "( team id of staff ) , ( rank of staff ) that belongs to ( ( home game ) , and ( ( team ) satisfied that ( ( team id of addresses ) equal to ( team id of staff ) ) ) ) , that have ( ( year of addresses ) equal to ( 2014 ) ) , grouped by ( team id of addresses ) , ordered by ( ( the average of ( attendance of addresses ) ) in descending order ) , limited to the top ( 1 )", "pred": "What is the id and rank of the team that has the highest attendance in 2014?", "label": "In 2014, what are the id and rank of the team that has the largest average number of attendance?"}
{"idx": 716, "logic": "( rank ) that belongs to ( captain ), and except that ( ( rank ) that belongs to ( captain ) , that have ( ( class ) equal to ( 'third-rate ship of the line' ) ))", "pred": "Show the ranks of captains who are not in the third-rate ship of the line.", "label": "What are the ranks of captains that have no captain that are in the Third-rate ship of the line class?"}
{"idx": 717, "logic": "all items that belongs to ( employees ) , that have ( ( employee_id ) not in ( ( employee id ) that belongs to ( job history ) ) )", "pred": "What is all the information about employees who did not have any job history.", "label": "display all the information of those employees who did not have any job in the past."}
{"idx": 718, "logic": "( the number of ( all items ) ) that belongs to ( ( airports ) , and ( ( routes ) satisfied that ( ( apid of addresses ) equal to ( dst apid of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( 'john f kennedy international airport' ) )", "pred": "How many routes does John Kennedy international airport have?", "label": "Find the number of routes that have destination John F Kennedy International Airport."}
{"idx": 719, "logic": "( fname ) , ( lname ) that belongs to ( faculty ) , that have ( ( ( sex ) equal to ( m ) ) and ( ( building ) equal to ( neb ) ) )", "pred": "What are the first names and last names of the faculty members who live in building M and NE?", "label": "What are the full names of faculties with sex M and who live in building NEB?"}
{"idx": 720, "logic": "( name ) that belongs to ( student ) , that have ( ( id ) in ( ( id ) that belongs to ( takes ) , that have ( ( ( semester ) equal to ( 'fall' ) ) and ( ( year ) equal to ( 2003 ) ) ) ) )", "pred": "Find the names of students who took some course in Fall 2003.", "label": "Find the names of students who have taken any course in the fall semester of year 2003."}
{"idx": 721, "logic": "( project id of addresses ) , ( the number of ( all items ) ) that belongs to ( ( project staff ) , and ( ( projects ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , grouped by ( project id of addresses ) , ordered by ( ( the number of ( all items ) ) in ascending order )", "pred": "Show the id and number of staff for each project, ordered by the number of employees.", "label": "For each project id, how many staff does it have? List them in increasing order."}
{"idx": 722, "logic": "( location name ) that belongs to ( locations ) , that have ( ( location_name ) like ( %film% ) )", "pred": "Find the names of locations whose name contains the word \"Film\".", "label": "Which location names contain the word \"film\"?"}
{"idx": 723, "logic": "( title ) , ( issues ) that belongs to ( book )", "pred": "Show the title and issues of all books.", "label": "What are the title and issues of the books?"}
{"idx": 724, "logic": "( grape ) , ( appelation ) that belongs to ( wine )", "pred": "List the grape and appelation of all wines.", "label": "What are the grapes and appelations of each wine?"}
{"idx": 725, "logic": "( name ) , ( country ) that belongs to ( member )", "pred": "List the name and country of all members.", "label": "What are the names and countries of members?"}
{"idx": 726, "logic": "( customer name of addresses ) that belongs to ( ( customers ) , and ( ( orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the customer who has made the most orders.", "label": "What is the name of the customer who has the most orders?"}
{"idx": 727, "logic": "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) , and ( ( dorm ) satisfied that ( ( dormid of enzyme ) equal to ( dormid of staff ) ) ) ) , that have ( ( ( dorm name of enzyme ) equal to ( 'smith hall' ) ) and ( ( sex of addresses ) equal to ( 'f' ) ) )", "pred": "Count the number of female students living in Smith Hall.", "label": "How many female students live in Smith Hall?"}
{"idx": 728, "logic": "( the number of ( all items ) ) that belongs to ( faculty ) , that have ( ( ( sex ) equal to ( 'f' ) ) and ( ( rank ) equal to ( professor ) ) )", "pred": "Count the number of female faculty members and professors.", "label": "Count the number of female Professors we have."}
{"idx": 729, "logic": "( name of staff ) that belongs to ( ( album ) , and ( ( artist ) satisfied that ( ( artistid of addresses ) equal to ( artistid of staff ) ) ) ) , that have ( ( title of addresses ) equal to ( balls to the wall ) )", "pred": "What are the names of the artists who have released albums with title Balls to the Wall.", "label": "Find the name of the artist who made the album \"Balls to the Wall\"."}
{"idx": 730, "logic": "( title of addresses ) , ( name of enzyme ) that belongs to ( ( course ) , and ( ( teaches ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) , and ( ( instructor ) satisfied that ( ( id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( year ) equal to ( 2008 ) ) , ordered by ( ( title of addresses ) )", "pred": "What are the titles and names of the courses taught in 2008, ordered by title?", "label": "list in alphabetic order all course names and their instructors' names in year 2008."}
{"idx": 731, "logic": "( document type code ) that belongs to ( documents ) , grouped by ( document type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the code of the document type that has the most documents.", "label": "What is the document type code with most number of documents?"}
{"idx": 732, "logic": "( name of addresses ) , ( city of addresses ) , ( dst apid of staff ) that belongs to ( ( airports ) , and ( ( routes ) satisfied that ( ( apid of addresses ) equal to ( dst apid of staff ) ) ) ) , grouped by ( dst apid of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name, city, and id of the airport that has the most routes.", "label": "Find the name and city of the airport which is the destination of the most number of routes."}
{"idx": 733, "logic": "( lname of student ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( clubname of club ) equal to ( bootup baltimore ) )", "pred": "Find the last names of members of the club \"Bootup Baltimore\".", "label": "Find the last names of the members of the club \"Bootup Baltimore\"."}
{"idx": 734, "logic": "( date opened of member of club ) , ( date closed of member of club ) that belongs to ( ( customers ) , and ( ( customers policies ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( t1.customer_name ) like ( %diana% ) )", "pred": "What are the opening and closing dates of the policies for customers whose first name contains the letter Diana.", "label": "Retrieve the open and close dates of all the policies associated with the customer whose name contains \"Diana\""}
{"idx": 735, "logic": "( country of staff ) , ( year of addresses ) that belongs to ( ( film market estimation ) , and ( ( market ) satisfied that ( ( market id of addresses ) equal to ( market id of staff ) ) ) )", "pred": "Show country and year of each market.", "label": "What are the countries of markets and their corresponding years of market estimation?"}
{"idx": 736, "logic": "( name of addresses ) , ( ( balance of enzyme ) add ( balance of staff ) ) that belongs to ( ( accounts ) , and ( ( checking ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) , and ( ( savings ) satisfied that ( ( custid of addresses ) equal to ( custid of enzyme ) ) ) ) , that have ( ( balance of enzyme ) less than ( balance of staff ) )", "pred": "What are the names and balances of the accounts whose checking balance is lower than savings balance?", "label": "What are the names of customers who have a savings balance lower than their checking balance, and what is the total of their checking and savings balances?"}
{"idx": 737, "logic": "( resname ) that belongs to ( restaurant )", "pred": "List the names of all restaurant.", "label": "Show me all the restaurants."}
{"idx": 738, "logic": "( first name ) that belongs to ( teachers ) , that have ( ( email_address ) like ( '%man%' ) )", "pred": "Find the first names of all teachers whose email address contains the word \"man\".", "label": "Find the first names of teachers whose email address contains the word \"man\"."}
{"idx": 739, "logic": "( payment date ) that belongs to ( payment ) , ordered by ( ( payment date ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the payment date of the payment with the earliest payment date.", "label": "What was the date of the earliest payment?"}
{"idx": 740, "logic": "( pilot name ) that belongs to ( pilot ) , that have ( ( pilot_id ) not in ( ( pilot id ) that belongs to ( pilot record ) ) )", "pred": "Find the names of pilots who did not have any record.", "label": "List the names of pilots that do not have any record."}
{"idx": 741, "logic": "( county name ) that belongs to ( county ) , ordered by ( ( population ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the county with the largest population.", "label": "Which county has the largest population? Give me the name of the county."}
{"idx": 742, "logic": "( school code of addresses ) that belongs to ( ( department ) , and ( ( professor ) satisfied that ( ( dept code of addresses ) equal to ( dept code of staff ) ) ) ) , grouped by ( school code of addresses ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "pred": "Find the name of the school that has the most professors.", "label": "Which school has the smallest amount of professors?"}
{"idx": 743, "logic": "( country ) that belongs to ( member ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "pred": "Show countries that have more than 2 members.", "label": "Which countries have more than two members?"}
{"idx": 744, "logic": "( department id ) , ( the sum of ( salary ) ) that belongs to ( employees ) , grouped by ( department id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show department ids and the total salary of employees in each department.", "label": "display the department id and the total salary for those departments which contains at least two employees."}
{"idx": 745, "logic": "( distinct ( nominee ) ) that belongs to ( musical ) , that have ( ( award ) not equal to ( tony award ) )", "pred": "What are the distinct nominees of musicals whose award is not \"Tony Award\"?", "label": "Return the different nominees of musicals that have an award that is not the Tony Award."}
{"idx": 746, "logic": "( time of purchase ) , ( age ) , ( address ) that belongs to ( member ) , ordered by ( ( time of purchase ) )", "pred": "List the time, age, address of members, ordered by time of purchase.", "label": "Find the purchase time, age and address of each member, and show the results in the order of purchase time."}
{"idx": 747, "logic": "( date of transaction ) that belongs to ( transactions ) , that have ( ( transaction type code ) equal to ( sale ) )", "pred": "What is the date of the transaction type code \"Sale\"?", "label": "Show all dates of transactions whose type code is \"SALE\"."}
{"idx": 748, "logic": "( cname ) that belongs to ( tryout ) , that have ( ( ppos ) equal to ( 'mid' ) ), and except that ( ( cname ) that belongs to ( tryout ) , that have ( ( ppos ) equal to ( 'goalie' ) ))", "pred": "What are the names of the students who did not try out for mid position but did not play goalie?", "label": "What are the names of the schools with some players in the mid position but no goalies?"}
{"idx": 749, "logic": "( name ) that belongs to ( branch ) , ordered by ( ( membership amount ) in descending order ) , limited to the top ( 3 )", "pred": "Find the name of the branch with the highest membership amount.", "label": "What are the names for the 3 branches that have the most memberships?"}
{"idx": 750, "logic": "( industry ) that belongs to ( companies ) , that have ( ( headquarters ) equal to ( usa ) ), and intersect with ( ( industry ) that belongs to ( companies ) , that have ( ( headquarters ) equal to ( china ) ))", "pred": "Show the industries that have both companies in the United States and companies in China.", "label": "Show the industries shared by companies whose headquarters are \"USA\" and companies whose headquarters are \"China\"."}
{"idx": 751, "logic": "( stuid ) that belongs to ( has allergy ) , grouped by ( stuid ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Find the ids of students who have at least two allergies.", "label": "What are the students ids of students who have more than one allergy?"}
{"idx": 752, "logic": "( date of transaction ) that belongs to ( transactions ) , that have ( ( ( share count ) greater than ( 100 ) ) or ( ( amount of transaction ) greater than ( 1000 ) ) )", "pred": "What are the dates of transactions with share count above 100 or amount above 1000?", "label": "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000."}
{"idx": 753, "logic": "( distinct ( name of staff ) ) , ( friend of staff ) , ( age of addresses ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( friend of staff ) ) ) ) , that have ( ( age of addresses ) greater than ( the average of ( age ) ) that belongs to ( person ) )", "pred": "What are the distinct names, friends, and ages of the people who are older than the average?", "label": "Who has friends that are older than the average age? Print their friends and their ages as well"}
{"idx": 754, "logic": "( name ) that belongs to ( mountain ) , ordered by ( ( height ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the mountain with the highest height.", "label": "Return the name of the mountain with the greatest height."}
{"idx": 755, "logic": "( competition type ) , ( the number of ( all items ) ) that belongs to ( competition ) , grouped by ( competition type )", "pred": "Show each type and the number of competitions in that type.", "label": "List the types of competition and the number of competitions of each type."}
{"idx": 756, "logic": "( the number of ( all items ) ) that belongs to ( bank )", "pred": "Count the number of bank branches.", "label": "Count the number of bank branches."}
{"idx": 757, "logic": "( the average of ( price ) ) that belongs to ( products )", "pred": "Find the average price for all products.", "label": "What is the average price across all products?"}
{"idx": 758, "logic": "( name ) , ( trade name ) that belongs to ( medicine ), and except that ( ( name of addresses ) , ( trade name of addresses ) that belongs to ( ( medicine ) , and ( ( medicine enzyme interaction ) satisfied that ( ( medicine id of staff ) equal to ( id of addresses ) ) ) , and ( ( enzyme ) satisfied that ( ( id of enzyme ) equal to ( enzyme id of staff ) ) ) ) , that have ( ( product of enzyme ) equal to ( 'protoporphyrinogen ix' ) ))", "pred": "What are the names and trade names of the medicines that do not interact with the product 'Protoporphyrinogen'", "label": "Show the medicine names and trade names that cannot interact with the enzyme with product 'Heme'."}
{"idx": 759, "logic": "( birthdate ) that belongs to ( employee ) , that have ( ( city ) equal to ( edmonton ) )", "pred": "What are the birthdates of all employees who live in Edmonton?", "label": "What are the birth dates of employees living in Edmonton?"}
{"idx": 760, "logic": "( company ) , ( rank ) that belongs to ( company ) , ordered by ( ( sales billion ) in descending order )", "pred": "List the company and rank of companies, ordered by sales billion descending.", "label": "List the company name and rank for all companies in the decreasing order of their sales."}
{"idx": 761, "logic": "( the number of ( all items ) ) that belongs to ( addresses ) , that have ( ( state province county ) equal to ( colorado ) )", "pred": "Count the number of addresses in state \"Colorado\"", "label": "Count the number of cities in the state of Colorado."}
{"idx": 762, "logic": "( customer last name of staff ) , ( customer id of addresses ) , ( phone number of staff ) that belongs to ( ( orders ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the last name, id, phone number for the customer who has made the most orders.", "label": "What is the customer last name, id and phone number with most number of orders?"}
{"idx": 763, "logic": "( starting year ) that belongs to ( technician ) , ordered by ( ( age ) in descending order ) , limited to the top ( 1 )", "pred": "Return the starting year of the technician with the oldest age.", "label": "What is the starting year of the oldest technicians?"}
{"idx": 764, "logic": "( the number of ( all items ) ) , ( product id of staff ) that belongs to ( ( problems ) , and ( ( product ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product id of staff )", "pred": "Find the number of problems for each product.", "label": "For each product with some problems, list the count of problems and the product id."}
{"idx": 765, "logic": "( apt number ) that belongs to ( apartments ) , ordered by ( ( bedroom count ) in descending order ) , limited to the top ( 1 )", "pred": "Find the apartment number with the largest number of bedrooms.", "label": "Return the apartment number with the largest number of bedrooms."}
{"idx": 766, "logic": "( name ) that belongs to ( projects ) , that have ( ( code ) not in ( ( project ) that belongs to ( assignedto ) ) )", "pred": "Find the names of projects that do not have any code assigned.", "label": "Select the project names which are not assigned yet."}
{"idx": 767, "logic": "( name ) that belongs to ( church ), and except that ( ( name of addresses ) that belongs to ( ( church ) , and ( ( wedding ) satisfied that ( ( church id of addresses ) equal to ( church id of staff ) ) ) ) , that have ( ( year of staff ) equal to ( 2015 ) ))", "pred": "List the names of churches that did not have any weddings in 2015.", "label": "Show all church names except for those that had a wedding in year 2015."}
{"idx": 768, "logic": "( lname ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid ) that belongs to ( has allergy ) , that have ( ( allergy ) equal to ( milk ) ), and intersect with ( ( stuid ) that belongs to ( has allergy ) , that have ( ( allergy ) equal to ( cat ) )) ) )", "pred": "What are the last names and ages of all students who have allergy to milk and cat?", "label": "What are the last names and ages of the students who are allergic to milk and cat?"}
{"idx": 769, "logic": "( the number of ( all items ) ) that belongs to ( farm )", "pred": "Count the number of farms.", "label": "How many farms are there?"}
{"idx": 770, "logic": "( studio ) that belongs to ( film ) , that have ( ( director ) equal to ( nicholas meyer ) ), and intersect with ( ( studio ) that belongs to ( film ) , that have ( ( director ) equal to ( walter hill ) ))", "pred": "Show the studios that have both Nicholas Meyer and Walter Hill films.", "label": "Show the studios that have produced films with director \"Nicholas Meyer\" and \"Walter Hill\"."}
{"idx": 771, "logic": "( the number of ( all items ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( ( fname of student ) equal to ( linda ) ) and ( ( lname of student ) equal to ( smith ) ) )", "pred": "Find the number of members of the club Linda Smith.", "label": "How many clubs does \"Linda Smith\" belong to?"}
{"idx": 772, "logic": "( delegate of addresses ) , ( party of staff ) that belongs to ( ( election ) , and ( ( party ) satisfied that ( ( party of addresses ) equal to ( party id of staff ) ) ) )", "pred": "Show the delegates and parties of each party.", "label": "For each delegate, find the names of the party they are part of."}
{"idx": 773, "logic": "( detention summary ) that belongs to ( detention )", "pred": "List the detention summary.", "label": "Return all detention summaries."}
{"idx": 774, "logic": "( the number of ( all items ) ) , ( sex ) that belongs to ( employee ) , that have ( ( salary ) less than ( 50000 ) ) , grouped by ( sex )", "pred": "Count the number of employees with salary below 50000 for each sex.", "label": "Find the number of employees of each gender whose salary is lower than 50000."}
{"idx": 775, "logic": "( payment date ) that belongs to ( payment ) , that have ( ( amount ) greater than ( 10 ) ) and ( payment date of addresses ) that belongs to ( ( payment ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( first name of staff ) equal to ( 'elsa' ) )", "pred": "What are the payment dates for the payment with amount greater than 10 and the payment date with first name Elsa.", "label": "What are the payment dates for any payments that have an amount greater than 10 or were handled by a staff member with the first name Elsa?"}
{"idx": 776, "logic": "( aircraft ) that belongs to ( aircraft ) , that have ( ( aircraft_id ) not in ( ( winning aircraft ) that belongs to ( match ) ) )", "pred": "Show the aircrafts that did not win any match.", "label": "List the names of aircrafts and that did not win any match."}
{"idx": 777, "logic": "( builder ) that belongs to ( railway ) , ordered by ( ( builder ) in ascending order )", "pred": "List the builder of railways in ascending order of builder.", "label": "List the builders of railways in ascending alphabetical order."}
{"idx": 778, "logic": "( title of addresses ) that belongs to ( ( albums ) , and ( ( tracks ) satisfied that ( ( id of addresses ) equal to ( album id of staff ) ) ) ) , grouped by ( id of addresses ) , that have ( ( the number of ( id of addresses ) ) greater than ( 10 ) )", "pred": "Which albums have more than 10 tracks? Give me the album titles.", "label": "What are the names of the albums that have more than 10 tracks?"}
{"idx": 779, "logic": "( distinct ( classroom ) ) that belongs to ( list ) , that have ( ( grade ) equal to ( 5 ) )", "pred": "What are the distinct classroom numbers for the students with grade 5?", "label": "Which classrooms are used by grade 5?"}
{"idx": 780, "logic": "( name ) , ( total passengers ) that belongs to ( station ) , that have ( ( location ) not equal to ( 'london' ) )", "pred": "What are the names and total passengers of stations whose location is not London.", "label": "Show the names and total passengers for all train stations not in London."}
{"idx": 781, "logic": "( the average of ( speed ) ) that belongs to ( roller coaster )", "pred": "Find the average speed of all roller coasters.", "label": "What is the average speed of roller coasters?"}
{"idx": 782, "logic": "( emp fname ) , ( emp lname ) that belongs to ( employee ) , ordered by ( ( emp dob ) ) , limited to the top ( 1 )", "pred": "Find the first name and last name of the employee who has the most employees.", "label": "What is the first and last name of the oldest employee?"}
{"idx": 783, "logic": "( name of staff ) , ( the average of ( age of addresses ) ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( friend of staff ) ) ) ) , grouped by ( name of staff ) , ordered by ( ( the average of ( age of addresses ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and average age of the friend who is the oldest.", "label": "What is the name of the person who has the oldest average age for their friends, and what is that average age?"}
{"idx": 784, "logic": "( name ) that belongs to ( wrestler ) , ordered by ( ( days held ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the name of the wrestler who has held the most days held.", "label": "Return the name of the wrestler who had the lowest number of days held."}
{"idx": 785, "logic": "( name of addresses ) , ( the average of ( trust ) ) that belongs to ( ( useracct ) , and ( ( trust ) satisfied that ( ( u id of addresses ) equal to ( target u id of staff ) ) ) ) , grouped by ( target u id of staff )", "pred": "Show the name and average trust for each target.", "label": "Find each target user's name and average trust score."}
{"idx": 786, "logic": "( name ) that belongs to ( track ) , that have ( ( name ) like ( '%you%' ) )", "pred": "Find the names of tracks whose name contains the word \"You\".", "label": "What are the names of tracks that contain the the word you in them?"}
{"idx": 787, "logic": "( eid ) , ( salary ) that belongs to ( employee ) , that have ( ( name ) equal to ( 'mark young' ) )", "pred": "What are the ids and salaries of the employees whose name is Mark Young.", "label": "What is the id and salary of the employee named Mark Young?"}
{"idx": 788, "logic": "( player of addresses ) , ( years played of addresses ) that belongs to ( ( player ) , and ( ( team ) satisfied that ( ( team of addresses ) equal to ( team id of staff ) ) ) ) , that have ( ( name of staff ) equal to ( columbus crew ) )", "pred": "Show all players and years played for the team \"Columbus Crew\".", "label": "What are the players who played for Columbus Crew, and how many years did each play for?"}
{"idx": 789, "logic": "( manager name of enzyme ) that belongs to ( ( station company ) , and ( ( company ) satisfied that ( ( company id of addresses ) equal to ( company id of staff ) ) ) , and ( ( gas station ) satisfied that ( ( station id of addresses ) equal to ( station id of enzyme ) ) ) ) , that have ( ( company of staff ) equal to ( 'exxonmobil' ) )", "pred": "List the manager names of gas stations owned by ExxonMobil.", "label": "What are the names of the managers for gas stations that are operated by the ExxonMobil company?"}
{"idx": 790, "logic": "( document name ) that belongs to ( documents ) , that have ( ( document_code ) not in ( ( document code ) that belongs to ( document sections ) ) )", "pred": "List the names of documents that do not have any sections.", "label": "What are the names of documents that do not have any sections?"}
{"idx": 791, "logic": "( the number of ( all items ) ) that belongs to ( rooms ) , that have ( ( roomid ) not in ( ( distinct ( room ) ) that belongs to ( reservations ) ) )", "pred": "Count the number of rooms that did not have any reservations.", "label": "Find the number of rooms that do not have any reservation."}
{"idx": 792, "logic": "( customer name ) that belongs to ( customers ), and except that ( ( customer name of club ) that belongs to ( ( customers ) , and ( ( first notification of loss ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ))", "pred": "Show the names of customers who have never lost any money.", "label": "Find the names of users who do not have a first notification of loss record."}
{"idx": 793, "logic": "( name of staff ) , ( the number of ( all items ) ) that belongs to ( ( exhibition ) , and ( ( artist ) satisfied that ( ( artist id of addresses ) equal to ( artist id of staff ) ) ) ) , grouped by ( artist id of addresses )", "pred": "Show the artist name and the number of exhibitions they have.", "label": "How many exhibitions has each artist had?"}
{"idx": 794, "logic": "( country ) , ( the number of ( all items ) ) that belongs to ( climber ) , grouped by ( country )", "pred": "Show each country and the number of climbers in that country.", "label": "How many climbers are from each country?"}
{"idx": 795, "logic": "( dname ) that belongs to ( department ) , that have ( ( building ) equal to ( mergenthaler ) )", "pred": "What are the names of the departments in the building \"Mergenthaler\"", "label": "What is the name of the department in the Building Mergenthaler?"}
{"idx": 796, "logic": "( name of staff ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , that have ( ( ( color of addresses ) equal to ( red ) ) and ( ( price of staff ) greater than ( 50 ) ) )", "pred": "What are the names of the grapes that produce wines with color red and price above 50?", "label": "What are the names of wines made from red grapes and with prices above 50?"}
{"idx": 797, "logic": "( the minimum of ( bathroom count ) ) , ( the maximum of ( bathroom count ) ) that belongs to ( apartments )", "pred": "Show the minimum and maximum bathroom count for all apartments.", "label": "What is the minimum and maximum number of bathrooms of all the apartments?"}
{"idx": 798, "logic": "( the sum of ( revenue ) ) , ( name ) that belongs to ( manufacturers ) , grouped by ( name )", "pred": "Find the total revenue and name of each manufacturer.", "label": "Find the total revenue for each manufacturer."}
{"idx": 799, "logic": "( issue date ) that belongs to ( ( artist ) , and ( ( volume ) satisfied that ( ( artist id of addresses ) equal to ( artist id of staff ) ) ) ) , that have ( ( age of addresses ) less than or equal to ( 23 ) )", "pred": "What is the issue date of volumes produced by artists under 23?", "label": "Return the issue dates of volumes by artists who are at most 23 years old?"}
{"idx": 800, "logic": "( destruction authorised by employee id ) , ( the number of ( all items ) ) that belongs to ( documents to be destroyed ) , grouped by ( destruction authorised by employee id )", "pred": "Show the authorised id and the number of documents to be destroyed by each employee.", "label": "What are the id of each employee and the number of document destruction authorised by that employee?"}
{"idx": 801, "logic": "( player name ) that belongs to ( player ) , ordered by ( ( votes ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the player who received the most votes.", "label": "What is the name of the player with the largest number of votes?"}
{"idx": 802, "logic": "( lname ) , ( sex ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid of addresses ) that belongs to ( ( plays games ) , and ( ( video games ) satisfied that ( ( gameid of addresses ) equal to ( gameid of staff ) ) ) ) , that have ( ( gname of staff ) equal to ( call of destiny ) ), and intersect with ( ( stuid of addresses ) that belongs to ( ( plays games ) , and ( ( video games ) satisfied that ( ( gameid of addresses ) equal to ( gameid of staff ) ) ) ) , that have ( ( gname of staff ) equal to ( works of widenius ) )) ) )", "pred": "What are the last names and genders of the students who play Call of Destiny and Works of widenius?", "label": "what is the last name and gender of all students who played both Call of Destiny and Works of Widenius?"}
{"idx": 803, "logic": "( the number of ( all items ) ) that belongs to ( address ) , that have ( ( district ) equal to ( 'california' ) )", "pred": "Count the number of addresses in California district.", "label": "Count the number of addressed in the California district."}
{"idx": 804, "logic": "( the average of ( price of staff ) ) that belongs to ( ( appellations ) , and ( ( wine ) satisfied that ( ( appelation of addresses ) equal to ( appelation of staff ) ) ) ) , that have ( ( county of addresses ) equal to ( sonoma ) )", "pred": "Find the average price of wines produced in Sonoma county.", "label": "What is the average price of wines produced in appelations in Sonoma County?"}
{"idx": 805, "logic": "( distinct ( type ) ) that belongs to ( vocals )", "pred": "List the distinct vocal types.", "label": "What are the different types of vocals?"}
{"idx": 806, "logic": "( campus of addresses ) that belongs to ( ( campuses ) , and ( ( enrollments ) satisfied that ( ( id of club ) equal to ( campus of member of club ) ) ) ) , that have ( ( ( year of member of club ) equal to ( 1956 ) ) and ( ( totalenrollment ay ) greater than ( 400 ) ) and ( ( fte ay ) greater than ( 200 ) ) )", "pred": "What campuses have more than 400 total enrollment and more than 200 total enrollment in 1956?", "label": "What campus started in year 1956, has more than 200 full time students, and more than 400 students enrolled?"}
{"idx": 807, "logic": "( name of addresses ) that belongs to ( ( tourist attractions ) , and ( ( tourist attraction features ) satisfied that ( ( tourist attraction id of addresses ) equal to ( tourist attraction id of staff ) ) ) , and ( ( features ) satisfied that ( ( feature id of staff ) equal to ( feature id of enzyme ) ) ) ) , that have ( ( feature details of enzyme ) equal to ( 'park' ) ) and ( name of addresses ) that belongs to ( ( tourist attractions ) , and ( ( tourist attraction features ) satisfied that ( ( tourist attraction id of addresses ) equal to ( tourist attraction id of staff ) ) ) , and ( ( features ) satisfied that ( ( feature id of staff ) equal to ( feature id of enzyme ) ) ) ) , that have ( ( feature details of enzyme ) equal to ( 'shopping' ) )", "pred": "What are the names of the tourist attractions that have both parks and shops?", "label": "What are the names of the tourist attractions that have parking or shopping as their feature details?"}
{"idx": 808, "logic": "( grade ) , ( the number of ( distinct ( classroom ) ) ) , ( the number of ( all items ) ) that belongs to ( list ) , grouped by ( grade )", "pred": "Show grade, number of distinct classroom, and the number of students for each grade.", "label": "For each grade, return the grade number, the number of classrooms used for the grade, and the total number of students enrolled in the grade."}
{"idx": 809, "logic": "( apt type code ) that belongs to ( apartments ) , that have ( ( bathroom count ) greater than ( 1 ) ) , grouped by ( apt type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the code of the apartment with more than 1 bathroom count.", "label": "Show the most common apartment type code among apartments with more than 1 bathroom."}
{"idx": 810, "logic": "( the number of ( all items ) ) that belongs to ( student ) , that have ( ( ( sex ) equal to ( 'f' ) ) and ( ( age ) less than ( 25 ) ) )", "pred": "Count the number of female students under 25.", "label": "How many female students (sex is F) whose age is below 25?"}
{"idx": 811, "logic": "( booking status code of addresses ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( apt number of staff ) equal to ( suite 634 ) )", "pred": "List the booking status code of the apartment with number 634.", "label": "What is the booking status code of the apartment with apartment number \"Suite 634\"?"}
{"idx": 812, "logic": "( account name of addresses ) , ( other account details of addresses ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( ( customer first name of staff ) equal to ( meaghan ) ) and ( ( customer last name of staff ) equal to ( keeling ) ) )", "pred": "What are the account name and other account details for the customer with first name Meaghan and last name Keeling.", "label": "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling."}
{"idx": 813, "logic": "( card type code ) that belongs to ( customers cards ) , grouped by ( card type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the card type code that has the most customers.", "label": "Return the code of the card type that is most common."}
{"idx": 814, "logic": "( salary ) that belongs to ( salary ) , that have ( ( year ) equal to ( 2010 ) ) and ( salary ) that belongs to ( salary ) , that have ( ( year ) equal to ( 2001 ) )", "pred": "What are the salaries of the salaries in 2010 and in 2001?", "label": "List all the salary values players received in 2010 and 2001."}
{"idx": 815, "logic": "( date ) that belongs to ( weather ) , that have ( ( ( zip code ) equal to ( 94107 ) ) and ( ( events ) not equal to ( fog ) ) and ( ( events ) not equal to ( rain ) ) )", "pred": "What are the dates of the events that are not in zip code 94107 and not in fog or rain?", "label": "In zip code 94107, on which day neither Fog nor Rain was not observed?"}
{"idx": 816, "logic": "( title ) that belongs to ( film ) , that have ( ( ( length ) greater than ( 100 ) ) or ( ( rating ) equal to ( 'pg' ) ) ), and except that ( ( title ) that belongs to ( film ) , that have ( ( replacement cost ) greater than ( 200 ) ))", "pred": "What are the titles of films that are longer than 100 or have a rating higher than PG but have replacement cost higher than 200", "label": "Find all the films longer than 100 minutes, or rated PG, except those who cost more than 200 for replacement. List the titles."}
{"idx": 817, "logic": "( name ) that belongs to ( person ), and except that ( ( name ) that belongs to ( personfriend ))", "pred": "List the names of people who are friends but not friends.", "label": "What are the names of all people who do not have friends?"}
{"idx": 818, "logic": "( name of staff ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , that have ( ( ( color of addresses ) equal to ( red ) ) and ( ( price of staff ) greater than ( 50 ) ) )", "pred": "What are the names of the grapes that produce wines with color red and price above 50?", "label": "What are the wines that have prices higher than 50 and made of Red color grapes?"}
{"idx": 819, "logic": "( text of notes of addresses ) that belongs to ( ( assessment notes ) , and ( ( teachers ) satisfied that ( ( teacher id of addresses ) equal to ( teacher id of staff ) ) ) ) , that have ( ( last name of staff ) equal to ( schuster ) )", "pred": "What is the text of the assessment notes taught by the teacher with last name \"Schuster\"", "label": "Find the texts of assessment notes for teachers with last name \"Schuster\"."}
{"idx": 820, "logic": "( f id ) that belongs to ( files ) , ordered by ( ( duration ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id of the file with longest duration.", "label": "Find the id of the song that lasts the longest."}
{"idx": 821, "logic": "( date became customer ) that belongs to ( customers ) , that have ( ( customer_id ) between ( 10 ) and ( 20 ) )", "pred": "Find the date became customer for customers with id between 10 and 20.", "label": "What are the dates when customers with ids between 10 and 20 became customers?"}
{"idx": 822, "logic": "( name of enzyme ) , ( name of staff ) that belongs to ( ( office locations ) , and ( ( buildings ) satisfied that ( ( building id of addresses ) equal to ( id of staff ) ) ) , and ( ( companies ) satisfied that ( ( company id of addresses ) equal to ( id of enzyme ) ) ) )", "pred": "What are the names and names of all the buildings that have offices for companies?", "label": "For each company, return the company name and the name of the building its office is located in."}
{"idx": 823, "logic": "( the maximum of ( date moved in ) ) that belongs to ( residents )", "pred": "Find the maximum move in date for all residents.", "label": "When is the last day any resident moved in?"}
{"idx": 824, "logic": "( location ) that belongs to ( shop ) , that have ( ( open year ) greater than ( 2012 ) ), and intersect with ( ( location ) that belongs to ( shop ) , that have ( ( open year ) less than ( 2008 ) ))", "pred": "Show locations that have both shops opened after 2012 and shops opened before 2008.", "label": "Show the locations shared by shops with open year later than 2012 and shops with open year before 2008."}
{"idx": 825, "logic": "( customer name of club ) , ( active from date of member of club ) that belongs to ( ( customers ) , and ( ( customer contact channels ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( channel code of member of club ) equal to ( 'email' ) )", "pred": "What are the names and active dates of the customers who use contact channels with code 'email'?", "label": "Find the name and active date of the customer that use email as the contact channel."}
{"idx": 826, "logic": "( the average of ( long ) ) that belongs to ( station ) , that have ( ( id ) not in ( ( station id ) that belongs to ( status ) , grouped by ( station id ) , that have ( ( the maximum of ( bikes available ) ) greater than ( 10 ) ) ) )", "pred": "Find the average longitude of stations that do not have any bikes available.", "label": "What is the average longitude of stations that never had bike availability more than 10?"}
{"idx": 827, "logic": "( the sum of ( share count ) ) that belongs to ( transactions )", "pred": "Find the total share count of all transactions.", "label": "What is the total share of transactions?"}
{"idx": 828, "logic": "( name of trip ) that belongs to ( ( wedding ) , and ( ( people ) satisfied that ( ( male id of addresses ) equal to ( people id of staff ) ) ) , and ( ( people ) satisfied that ( ( female id of addresses ) equal to ( people id of enzyme ) ) ) , and ( ( church ) satisfied that ( ( church id of trip ) equal to ( church id of addresses ) ) ) ) , that have ( ( ( age of staff ) greater than ( 30 ) ) or ( ( age of enzyme ) greater than ( 30 ) ) )", "pred": "What are the names of the churches that have both male and female weddings for people older than 30 or younger than 30.", "label": "Show the church names for the weddings of all people older than 30."}
{"idx": 829, "logic": "( pname of addresses ) that belongs to ( ( player ) , and ( ( tryout ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , that have ( ( ( decision of staff ) equal to ( 'yes' ) ) and ( ( ppos of staff ) equal to ( 'striker' ) ) )", "pred": "What are the first names of all the players who did not try out for striker?", "label": "Find the names of the students who are in the position of striker and got a yes tryout decision."}
{"idx": 830, "logic": "( amount settled ) , ( amount claimed ) that belongs to ( claims ) , ordered by ( ( amount claimed ) in descending order ) , limited to the top ( 1 )", "pred": "Find the settlement amount and claim amount of the claim with the largest amount claimed.", "label": "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount."}
{"idx": 831, "logic": "( the sum of ( revenue ) ) , ( name ) that belongs to ( manufacturers ) , grouped by ( name )", "pred": "Find the total revenue and name of each manufacturer.", "label": "What is the total revenue of each manufacturer?"}
{"idx": 832, "logic": "( the maximum of ( enrollment ) ) that belongs to ( university )", "pred": "Find the maximum enrollment of all institutions.", "label": "What is the maximum enrollment across all schools?"}
{"idx": 833, "logic": "( status code ) that belongs to ( bookings ) , grouped by ( status code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the status code that has been booked the most times.", "label": "What is the most frequent status of bookings?"}
{"idx": 834, "logic": "( location ) that belongs to ( station ), and except that ( ( location ) that belongs to ( station ) , that have ( ( number of platforms ) greater than or equal to ( 15 ) ))", "pred": "Show all locations that do not have any stations with at least 15 platforms.", "label": "Show all locations which don't have a train station with at least 15 platforms."}
{"idx": 835, "logic": "( emp lname of addresses ) , ( prof office of staff ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , that have ( ( dept name of enzyme ) equal to ( 'history' ) )", "pred": "What are the last names and offices of the professors in History department?", "label": "What is the last name and office of the professor from the history department?"}
{"idx": 836, "logic": "( distinct ( secretary vote ) ) that belongs to ( voting record ) , that have ( ( election cycle ) equal to ( fall ) )", "pred": "What are the distinct secretary votes for voting records in the fall?", "label": "Return all the distinct secretary votes made in the fall election cycle."}
{"idx": 837, "logic": "( document name ) , ( access count ) that belongs to ( documents ) , ordered by ( ( access count ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and access count of the document with the highest access count.", "label": "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?"}
{"idx": 838, "logic": "( the average of ( snatch ) ) that belongs to ( body builder )", "pred": "Find the average snatch of body builders.", "label": "What is the average snatch score of body builders?"}
{"idx": 839, "logic": "( host city ) that belongs to ( hosting city ) , ordered by ( ( year ) in descending order ) , limited to the top ( 1 )", "pred": "Find the host city of the most recent year.", "label": "Find the city that hosted some events in the most recent year. What is the id of this city?"}
{"idx": 840, "logic": "( year ) that belongs to ( section ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the year that has the most sections.", "label": "Find the year which offers the largest number of courses."}
{"idx": 841, "logic": "( the number of ( distinct ( publication date ) ) ) that belongs to ( publication )", "pred": "Count the number of distinct publication dates.", "label": "How many distinct publication dates are there in our record?"}
{"idx": 842, "logic": "( year ) , ( book title ) , ( publisher ) that belongs to ( book club ) , ordered by ( ( year ) in descending order )", "pred": "List the year, book title, publisher of books in descending order of year.", "label": "What are the years, titles, and publishers for all books, ordered by year descending?"}
{"idx": 843, "logic": "( the number of ( all items ) ) that belongs to ( invoices ) , that have ( ( ( billing city ) equal to ( chicago ) ) and ( ( billing state ) equal to ( il ) ) )", "pred": "Find the number of invoices from Chicago and Illinois.", "label": "List the number of invoices from Chicago, IL."}
{"idx": 844, "logic": "( product price ) that belongs to ( products ) , that have ( ( ( product name ) equal to ( dining ) ) or ( ( product name ) equal to ( trading policy ) ) )", "pred": "What is the price of the product named \"Dining\" or \"Trading\"", "label": "Show the prices of the products named \"Dining\" or \"Trading Policy\"."}
{"idx": 845, "logic": "( the number of ( all items ) ) that belongs to ( services )", "pred": "Count the number of services.", "label": "Count the total number of available services."}
{"idx": 846, "logic": "( customer id ) , ( the number of ( all items ) ) that belongs to ( accounts ) , grouped by ( customer id )", "pred": "Show customer ids and the number of accounts for each customer.", "label": "How many accounts are there for each customer id?"}
{"idx": 847, "logic": "( the number of ( all items ) ) that belongs to ( wine ) , that have ( ( winery ) equal to ( robert biale ) )", "pred": "Count the number of wines produced by Robert Biale.", "label": "Count the number of wines produced at Robert Biale winery."}
{"idx": 848, "logic": "( transaction type code ) , ( the maximum of ( share count ) ) , ( the minimum of ( share count ) ) that belongs to ( transactions ) , grouped by ( transaction type code )", "pred": "Show the transaction type code, maximum share count, and minimum share count for each transaction type.", "label": "Show the maximum and minimum share count of different transaction types."}
{"idx": 849, "logic": "( title ) that belongs to ( course ) , that have ( ( course_id ) in ( ( prereq id of addresses ) that belongs to ( ( prereq ) , and ( ( course ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( title of staff ) equal to ( 'international finance' ) ) ) )", "pred": "What are the titles of the courses that have a prereq with title 'International Finance'", "label": "What is the title of the prerequisite class of International Finance course?"}
{"idx": 850, "logic": "( name of enzyme ) that belongs to ( ( repair assignment ) , and ( ( machine ) satisfied that ( ( machine id of addresses ) equal to ( machine id of staff ) ) ) , and ( ( technician ) satisfied that ( ( technician id of addresses ) equal to ( technician id of enzyme ) ) ) ) , that have ( ( value points of staff ) greater than ( 70 ) )", "pred": "What are the names of the technicians who are assigned to repair machines with value points higher than 70.", "label": "Show names of technicians who are assigned to repair machines with value point more than 70."}
{"idx": 851, "logic": "( semester ) , ( year ) that belongs to ( section ) , grouped by ( semester ) , ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the semester and year of the section with the most sections.", "label": "What is the year and semester with the most courses?"}
{"idx": 852, "logic": "( fname of student ) , ( lname of student ) that belongs to ( student , and ( visits restaurant satisfied that ( ( stuid of student ) equal to ( stuid of visits restaurant ) ) ) ) , grouped by ( stuid of student ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the first name and last name of the student who has visited the most restaurants.", "label": "Which student visited restaurant most often? List student's first name and last name."}
{"idx": 853, "logic": "( name of addresses ) that belongs to ( ( airlines ) , and ( ( routes ) satisfied that ( ( alid of addresses ) equal to ( alid of staff ) ) ) ) , grouped by ( name of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the airline that runs the most routes.", "label": "What is the name of the airline with the most routes?"}
{"idx": 854, "logic": "( category ) , ( the number of ( all items ) ) that belongs to ( music festival ) , grouped by ( category )", "pred": "Show each category and the number of music festivals in that category.", "label": "Please show the categories of the music festivals and the count."}
{"idx": 855, "logic": "( name of staff ) , ( position of staff ) that belongs to ( ( department ) , and ( ( physician ) satisfied that ( ( head of addresses ) equal to ( employeeid of staff ) ) ) ) , grouped by ( departmentid ) , ordered by ( ( the number of ( departmentid ) ) ) , limited to the top ( 1 )", "pred": "Find the name and position of the head of the department with the most physicians.", "label": "Find the name and position of the head of the department with the least employees."}
{"idx": 856, "logic": "( case burden ) that belongs to ( county public safety ) , ordered by ( ( population ) in descending order )", "pred": "List the case burden of counties in descending order of population.", "label": "What are the case burdens of counties, ordered descending by population?"}
{"idx": 857, "logic": "( pname of staff ) that belongs to ( ( tryout ) , and ( ( player ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , that have ( ( cname of addresses ) equal to ( cname ) that belongs to ( college ) , ordered by ( ( enr ) in descending order ) , limited to the top ( 1 ) )", "pred": "Find the first name of the player who tried out in the most colleges.", "label": "What are the names of all tryout participants who are from the largest college?"}
{"idx": 858, "logic": "( name of staff ) that belongs to ( ( entrepreneur ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , that have ( ( investor of addresses ) not equal to ( rachel elnaugh ) )", "pred": "Show the names of entrepreneurs whose investor is not rachel elnaugh.", "label": "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?"}
{"idx": 859, "logic": "( shop details of addresses ) that belongs to ( ( shops ) , and ( ( tourist attractions ) satisfied that ( ( shop id of addresses ) equal to ( tourist attraction id of staff ) ) ) ) , that have ( ( how to get there of staff ) equal to ( walk ) )", "pred": "What are the details of the shops that can get there by walking?", "label": "Find the details of the shops that can be reached by walk."}
{"idx": 860, "logic": "( document name ) , ( access count ) that belongs to ( documents ) , ordered by ( ( document name ) )", "pred": "List the name and access count of documents, ordered by name.", "label": "Find the name and access counts of all documents, in alphabetic order of the document name."}
{"idx": 861, "logic": "( delegate of staff ) that belongs to ( ( county ) , and ( ( election ) satisfied that ( ( county id of addresses ) equal to ( district of staff ) ) ) ) , that have ( ( population of addresses ) less than ( 100000 ) )", "pred": "Show the delegates of counties with population below 100000.", "label": "Which delegates are from counties with population smaller than 100000?"}
{"idx": 862, "logic": "( zip postcode of addresses ) that belongs to ( ( addresses ) , and ( ( staff ) satisfied that ( ( address id of addresses ) equal to ( staff address id of staff ) ) ) ) , that have ( ( ( first name of staff ) equal to ( janessa ) ) and ( ( last name of staff ) equal to ( sawayn ) ) )", "pred": "What is the zip code of the staff member with first name Janessa and last name Sawayn.", "label": "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?"}
{"idx": 863, "logic": "( customer id of addresses ) , ( customer first name of staff ) , ( customer last name of staff ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id, first name, and last name of the customer who has the most accounts.", "label": "Return the id and full name of the customer with the most accounts."}
{"idx": 864, "logic": "( distinct ( state ) ) that belongs to ( ( college ) , and ( ( tryout ) satisfied that ( ( cname of addresses ) equal to ( cname of staff ) ) ) )", "pred": "What are the different states that have tryouts?", "label": "What are the different states that have students trying out?"}
{"idx": 865, "logic": "( title of enzyme ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) , and ( ( songs ) satisfied that ( ( songid of enzyme ) equal to ( songid of addresses ) ) ) ) , that have ( ( lastname of staff ) equal to ( heilo ) )", "pred": "What are the titles of the songs performed by the musician with last name \"Heilo\"", "label": "Find all the songs performed by artist with last name \"Heilo\""}
{"idx": 866, "logic": "( cname ) that belongs to ( tryout ) , that have ( ( ( decision ) equal to ( 'yes' ) ) and ( ( ppos ) equal to ( 'goalie' ) ) )", "pred": "What are the names of the students who did not make the decision 'yes'?", "label": "What college has a student who successfully made the team in the role of a goalie?"}
{"idx": 867, "logic": "( course name ) that belongs to ( courses ) , ordered by ( ( course name ) )", "pred": "List the name of courses in alphabetical order of name.", "label": "List the names of courses in alphabetical order?"}
{"idx": 868, "logic": "( team name of member of club ) that belongs to ( ( university ) , and ( ( basketball match ) satisfied that ( ( school id of club ) equal to ( school id of member of club ) ) ) ) , that have ( ( enrollment ) less than ( the average of ( enrollment ) ) that belongs to ( university ) )", "pred": "What are the team names of the schools that have an enrollment below the average?", "label": "What are the names of teams from universities that have a below average enrollment?"}
{"idx": 869, "logic": "( the number of ( all items ) ) , ( rank ) that belongs to ( captain ) , grouped by ( rank )", "pred": "How many captains are there in each rank.", "label": "Count the number of captains that have each rank."}
{"idx": 870, "logic": "( type ) that belongs to ( ship ) , grouped by ( type ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the type of ship that has the most ships.", "label": "What is the most common type of ships?"}
{"idx": 871, "logic": "( the number of ( all items ) ) that belongs to ( faculty ) , that have ( ( ( rank ) equal to ( professor ) ) and ( ( building ) equal to ( neb ) ) )", "pred": "Count the number of professors in building NEB.", "label": "Count the number of Professors who have office in building NEB."}
{"idx": 872, "logic": "( product id of club ) , ( color description of member of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of student ) ) ) ) , grouped by ( product id of club ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What are the ids and descriptions of the products that have at least 2 characteristics?", "label": "Find the id and color description of the products with at least 2 characteristics."}
{"idx": 873, "logic": "( name ) , ( country ) that belongs to ( people ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( people ) )", "pred": "What are the names and countries of people whose age is below the average?", "label": "Show the name and country for all people whose age is smaller than the average."}
{"idx": 874, "logic": "( organisation id of addresses ) , ( organisation type of addresses ) , ( organisation details of addresses ) that belongs to ( ( organisations ) , and ( ( research staff ) satisfied that ( ( organisation id of addresses ) equal to ( employer organisation id of staff ) ) ) ) , grouped by ( organisation id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id, type, and detail of the organisation that has the most research staff.", "label": "What are the ids, types, and details of the organization with the most research staff?"}
{"idx": 875, "logic": "( first name of addresses ) , ( last name of addresses ) , ( city of enzyme ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) , and ( ( locations ) satisfied that ( ( location id of staff ) equal to ( location id of enzyme ) ) ) ) , that have ( ( t1.first_name ) like ( '%z%' ) )", "pred": "What are the first name, last name, and city of the employees who are in the same department?", "label": "What are the full names and cities of employees who have the letter Z in their first names?"}
{"idx": 876, "logic": "( the number of ( distinct ( id ) ) ) that belongs to ( teaches )", "pred": "How many instructors teach?", "label": "Count the number of distinct instructors who have taught a course."}
{"idx": 877, "logic": "( the number of ( distinct ( status of thing code ) ) ) that belongs to ( timed status of things )", "pred": "Count the number of distinct status of timed status.", "label": "How many different status codes of things are there?"}
{"idx": 878, "logic": "( campus ) that belongs to ( campuses ) , that have ( ( county ) equal to ( los angeles ) )", "pred": "Find the campus in Los Angeles county.", "label": "What campuses are in Los Angeles county?"}
{"idx": 879, "logic": "( marketing region name of addresses ) that belongs to ( ( marketing regions ) , and ( ( stores ) satisfied that ( ( marketing region code of addresses ) equal to ( marketing region code of staff ) ) ) ) , that have ( ( store name of staff ) equal to ( rob dinning ) )", "pred": "What are the names of the marketing regions that have Rob Dinning?", "label": "Return the name of the marketing region the store Rob Dinning is located in."}
{"idx": 880, "logic": "( dept name ) , ( budget ) that belongs to ( department ) , that have ( ( budget ) greater than ( the average of ( budget ) ) that belongs to ( department ) )", "pred": "What are the names and budgets of the departments with a budget higher than the average budget?", "label": "What are the names and budgets of departments with budgets greater than the average?"}
{"idx": 881, "logic": "( good or bad customer of addresses ) that belongs to ( ( customers ) , and ( ( discount coupons ) satisfied that ( ( coupon id of addresses ) equal to ( coupon id of staff ) ) ) ) , that have ( ( coupon amount of staff ) equal to ( 500 ) )", "pred": "What are the good or bad customers of the coupon with coupon amount 500.", "label": "Are the customers holding coupons with amount 500 bad or good?"}
{"idx": 882, "logic": "( name ) that belongs to ( club ) , that have ( ( club_id ) not in ( ( club id ) that belongs to ( player ) ) )", "pred": "List the names of clubs that do not have any players.", "label": "What are the names of all clubs that do not have any players?"}
{"idx": 883, "logic": "( hardware model name ) , ( company name ) that belongs to ( phone ) , that have ( ( accreditation_type ) like ( 'full' ) )", "pred": "What are the hardware model name and company name of the phones whose accreditation type is 'Full'?", "label": "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name."}
{"idx": 884, "logic": "( distinct ( product name ) ) that belongs to ( product ) , ordered by ( ( product id ) )", "pred": "List the distinct names of all products, ordered by product id.", "label": "What is the list of distinct product names sorted by product id?"}
{"idx": 885, "logic": "( distinct ( classroom ) ) that belongs to ( list ) , that have ( ( grade ) equal to ( 5 ) )", "pred": "What are the distinct classroom numbers for the students with grade 5?", "label": "Show me the classrooms grade 5 is using."}
{"idx": 886, "logic": "( distinct ( apt number of staff ) ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( booking status code of addresses ) equal to ( confirmed ) )", "pred": "Find the number of apartments that have booking status code \"Confirmed\".", "label": "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers."}
{"idx": 887, "logic": "( party ) that belongs to ( people ) , grouped by ( party ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the party that has the most people.", "label": "Show the party that has the most people."}
{"idx": 888, "logic": "( country ) , ( the number of ( all items ) ) that belongs to ( airlines ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order )", "pred": "Show countries and the number of airlines in descending order of the number.", "label": "List all countries and their number of airlines in the descending order of number of airlines."}
{"idx": 889, "logic": "( the maximum of ( product price ) ) , ( the minimum of ( product price ) ) , ( product type code ) that belongs to ( products ) , grouped by ( product type code ) , ordered by ( ( product type code ) )", "pred": "What is the maximum, minimum, and code of each product type, ordered by its type code?", "label": "What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type?"}
{"idx": 890, "logic": "( major ) , ( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( student ) , grouped by ( major )", "pred": "Show the average, minimum, and maximum age of each major.", "label": "What are the average, minimum, and max ages for each of the different majors?"}
{"idx": 891, "logic": "( project details ) that belongs to ( projects ) , that have ( ( organisation_id ) in ( ( organisation id ) that belongs to ( projects ) , grouped by ( organisation id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) ) )", "pred": "Find the details of the project that is associated with the organisation with the most projects.", "label": "List the project details of the projects launched by the organisation"}
{"idx": 892, "logic": "( manufacturer id of club ) , ( num of shops of club ) that belongs to ( ( manufacturer ) , and ( ( furniture manufacte ) satisfied that ( ( manufacturer id of club ) equal to ( manufacturer id of member of club ) ) ) ) , ordered by ( ( price in dollar of member of club ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id and num of the manufacturer that makes the most furniture.", "label": "Find the id and number of shops for the company that produces the most expensive furniture."}
{"idx": 893, "logic": "( lname ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid ) that belongs to ( has allergy ) , that have ( ( allergy ) equal to ( milk ) ), and intersect with ( ( stuid ) that belongs to ( has allergy ) , that have ( ( allergy ) equal to ( cat ) )) ) )", "pred": "What are the last names and ages of all students who have allergy to milk and cat?", "label": "Find the last name and age of the student who has allergy to both milk and cat."}
{"idx": 894, "logic": "( date moved in of staff ) , ( customer id of addresses ) , ( customer details of addresses ) that belongs to ( ( customers ) , and ( ( customer events ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) )", "pred": "List the date moved in, id, and details of all customers who have events.", "label": "What is each customer's move in date, and the corresponding customer id and details?"}
{"idx": 895, "logic": "( distinct ( player name of addresses ) ) that belongs to ( ( player ) , and ( ( player attributes ) satisfied that ( ( player api id of addresses ) equal to ( player api id of staff ) ) ) ) , that have ( ( overall rating of staff ) greater than ( the average of ( overall rating ) ) that belongs to ( player attributes ) )", "pred": "What are the names of the players who have an overall rating higher than the average?", "label": "List all player names who have an overall rating higher than the average."}
{"idx": 896, "logic": "( white of addresses ) , ( crime rate of staff ) that belongs to ( ( city ) , and ( ( county public safety ) satisfied that ( ( county id of addresses ) equal to ( county id of staff ) ) ) )", "pred": "Show the white and crime rates of cities in each county.", "label": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?"}
{"idx": 897, "logic": "( name of addresses ) , ( num employees of addresses ) that belongs to ( ( department ) , and ( ( management ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) ) , that have ( ( temporary acting of staff ) equal to ( 'yes' ) )", "pred": "What are the names and employees of the departments that have temporary acting?", "label": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?"}
{"idx": 898, "logic": "( aircraft of addresses ) that belongs to ( ( aircraft ) , and ( ( match ) satisfied that ( ( aircraft id of addresses ) equal to ( winning aircraft of staff ) ) ) ) , grouped by ( winning aircraft of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the aircraft that won the most matches.", "label": "List the name of the aircraft that has been named winning aircraft the most number of times."}
{"idx": 899, "logic": "( the maximum of ( age ) ) , ( the minimum of ( age ) ) that belongs to ( student ) , that have ( ( major ) equal to ( 600 ) )", "pred": "What is the maximum and minimum age of students who major 600?", "label": "What are the maximum and minimum age of students with major 600?"}
{"idx": 900, "logic": "( party theme ) , ( location ) that belongs to ( party )", "pred": "List the theme and location of all parties.", "label": "Give me the theme and location of each party."}
{"idx": 901, "logic": "( campus of addresses ) that belongs to ( ( campuses ) , and ( ( faculty ) satisfied that ( ( id of addresses ) equal to ( campus of staff ) ) ) ) , that have ( ( year of staff ) equal to ( 2003 ) ) , ordered by ( ( faculty of staff ) in descending order ) , limited to the top ( 1 )", "pred": "Find the campus with the most faculty in 2003.", "label": "Which campus has the most faculties in year 2003?"}
{"idx": 902, "logic": "( name ) that belongs to ( people ) , that have ( ( height ) less than ( the average of ( height ) ) that belongs to ( people ) )", "pred": "Find the names of people whose height is lower than the average.", "label": "find the name of people whose height is lower than the average."}
{"idx": 903, "logic": "( the number of ( all items ) ) that belongs to ( artist )", "pred": "Count the number of artists.", "label": "Count the number of artists."}
{"idx": 904, "logic": "( title ) that belongs to ( movie ) , that have ( ( year ) greater than ( the maximum of ( year ) ) that belongs to ( movie ) , that have ( ( director ) equal to ( steven spielberg ) ) )", "pred": "What are the titles of movies that were made after the maximum year of Steven Spielberg?", "label": "What are the names of all movies that were created after the most recent Steven Spielberg film?"}
{"idx": 905, "logic": "( distinct ( fname of club ) ) , ( lname of club ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( name of student ) equal to ( university of oxford ) )", "pred": "What are the first names and last names of all authors who belong to the institution \"University of oxford\"", "label": "Find the first names and last names of the authors whose institution affiliation is \"University of Oxford\"."}
{"idx": 906, "logic": "( cust name ) , ( acc type ) , ( acc bal ) that belongs to ( customer ) , ordered by ( ( credit score ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name, type, and bal of the customer whose credit score is highest.", "label": "What is the name, account type, and account balance corresponding to the customer with the highest credit score?"}
{"idx": 907, "logic": "( course description of addresses ) , ( course name of addresses ) that belongs to ( ( courses ) , and ( ( student course enrolment ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , grouped by ( course name of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "pred": "What is the description and name of the course that has more than two students enrolled?", "label": "What are the descriptions and names of the courses that have student enrollment bigger than 2?"}
{"idx": 908, "logic": "( title of enzyme ) , ( credits of enzyme ) that belongs to ( ( classroom ) , and ( ( section ) satisfied that ( ( ( building of addresses ) equal to ( building of staff ) ) and ( ( room number of addresses ) equal to ( room number of staff ) ) ) ) , and ( ( course ) satisfied that ( ( course id of staff ) equal to ( course id of enzyme ) ) ) ) , that have ( ( capacity of addresses ) equal to ( the maximum of ( capacity ) ) that belongs to ( classroom ) )", "pred": "What are the titles and credits of the courses that are offered in the largest room?", "label": "What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?"}
{"idx": 909, "logic": "( transaction type code ) that belongs to ( transactions ) , grouped by ( transaction type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the code of the transaction type that has been used the most.", "label": "Show the transaction type code that occurs the most frequently."}
{"idx": 910, "logic": "( distinct ( position of staff ) ) that belongs to ( ( country ) , and ( ( match season ) satisfied that ( ( country id of addresses ) equal to ( country of staff ) ) ) ) , that have ( ( capital of addresses ) equal to ( dublin ) )", "pred": "What are the distinct positions of the players from country \"Dublin\"", "label": "What are the distinct positions of the players from a country whose capital is Dublin?"}
{"idx": 911, "logic": "( rid ) that belongs to ( rating ), and except that ( ( rid ) that belongs to ( rating ) , that have ( ( stars ) equal to ( 4 ) ))", "pred": "What are the rid of the ratings that do not have 4 stars.", "label": "find the ids of reviewers who did not give 4 star."}
{"idx": 912, "logic": "( investor details of addresses ) that belongs to ( ( investors ) , and ( ( transactions ) satisfied that ( ( investor id of addresses ) equal to ( investor id of staff ) ) ) ) , that have ( ( share count of staff ) greater than ( 100 ) )", "pred": "What are the details of the investors who have transactions with share count greater than 100.", "label": "Show details of all investors if they make any transaction with share count greater than 100."}
{"idx": 913, "logic": "( party ) , ( the number of ( all items ) ) that belongs to ( representative ) , grouped by ( party ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the party and the number of representatives for it.", "label": "What is the party that has the largest number of representatives?"}
{"idx": 914, "logic": "( the number of ( distinct ( prof num ) ) ) that belongs to ( class ) , that have ( ( crs code ) equal to ( acct-211 ) )", "pred": "Count the number of distinct profs who teach ACCT-211.", "label": "How many professors are teaching class with code ACCT-211?"}
{"idx": 915, "logic": "( name ) , ( course id ) that belongs to ( ( instructor ) , and ( ( teaches ) satisfied that ( ( id of addresses ) equal to ( id of staff ) ) ) )", "pred": "List the name and course id of all instructors who teach.", "label": "What are the names of all instructors who have taught a course, as well as the corresponding course id?"}
{"idx": 916, "logic": "( name ) that belongs to ( tourist attractions ) , that have ( ( how to get there ) equal to ( bus ) )", "pred": "List the names of tourist attractions that can be accessed by bus.", "label": "Which tourist attractions can we get to by bus? Tell me the names of the attractions."}
{"idx": 917, "logic": "( name of enzyme ) that belongs to ( ( affected region ) , and ( ( region ) satisfied that ( ( region id of addresses ) equal to ( region id of staff ) ) ) , and ( ( storm ) satisfied that ( ( storm id of addresses ) equal to ( storm id of enzyme ) ) ) ) , that have ( ( region name of staff ) equal to ( 'afghanistan' ) ), and intersect with ( ( name of enzyme ) that belongs to ( ( affected region ) , and ( ( region ) satisfied that ( ( region id of addresses ) equal to ( region id of staff ) ) ) , and ( ( storm ) satisfied that ( ( storm id of addresses ) equal to ( storm id of enzyme ) ) ) ) , that have ( ( region name of staff ) equal to ( 'albania' ) ))", "pred": "What are the names of the regions affected by both storms in Afghanistan and in Albania?", "label": "What are the names of the storms that affected both the regions of Afghanistan and Albania?"}
{"idx": 918, "logic": "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( 'russia' ) )", "pred": "Count the number of airlines from Russia.", "label": "How many airlines does Russia has?"}
{"idx": 919, "logic": "( f id ) that belongs to ( files ) , that have ( ( formats ) equal to ( mp3 ) )", "pred": "What are the ids of all files in mp3 format?", "label": "What are the id of all the files in mp3 format?"}
{"idx": 920, "logic": "( party theme ) , ( location ) that belongs to ( party )", "pred": "List the theme and location of all parties.", "label": "What are the themes and locations of parties?"}
{"idx": 921, "logic": "( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( playlist id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'movies' ) ), and intersect with ( ( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( playlist id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'music' ) ))", "pred": "Find the names of tracks that are played on both Movies and Music playlists.", "label": "Find the name of tracks which are in both Movies and music playlists."}
{"idx": 922, "logic": "( title of addresses ) , ( director of addresses ) that belongs to ( ( movie ) , and ( ( movie ) satisfied that ( ( director of addresses ) equal to ( director of staff ) ) ) ) , that have ( ( title of addresses ) not equal to ( title of staff ) ) , ordered by ( ( director of addresses ),( title of addresses ) )", "pred": "What are the titles and names of the movies directed by different directors, ordered by director?", "label": "For all directors who directed more than one movie, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title."}
{"idx": 923, "logic": "( the sum of ( salary of addresses ) ) that belongs to ( ( salary ) , and ( ( team ) satisfied that ( ( team id of addresses ) equal to ( team id br of staff ) ) ) ) , that have ( ( ( name of staff ) equal to ( 'boston red stockings' ) ) and ( ( year of addresses ) equal to ( 2010 ) ) )", "pred": "What is the total salary for the team Boston Red Stockings in 2010?", "label": "What is the total salary paid by team Boston Red Stockings in 2010?"}
{"idx": 924, "logic": "( draft details ) that belongs to ( document drafts ) , that have ( ( document id ) equal to ( 7 ) )", "pred": "Find the draft details of the document with id 7.", "label": "What is draft detail of the document with id 7?"}
{"idx": 925, "logic": "( distinct ( transaction type ) ) that belongs to ( financial transactions )", "pred": "List the distinct transaction types.", "label": "Show all transaction types."}
{"idx": 926, "logic": "( the average of ( age of addresses ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( secretary vote ) ) ) ) , that have ( ( ( sex of addresses ) equal to ( f ) ) and ( ( election cycle of staff ) equal to ( spring ) ) )", "pred": "Find the average age of female students who have secretary votes in the spring election cycle.", "label": "Find the average age of female (sex is F) students who have secretary votes in the spring election cycle."}
{"idx": 927, "logic": "( gname ) that belongs to ( ( plays games ) , and ( ( video games ) satisfied that ( ( gameid of addresses ) equal to ( gameid of staff ) ) ) , and ( ( student ) satisfied that ( ( stuid of enzyme ) equal to ( stuid of addresses ) ) ) ) , that have ( ( ( lname of enzyme ) equal to ( smith ) ) and ( ( fname of enzyme ) equal to ( linda ) ) )", "pred": "What are the first names of the students who play video games with Linda Smith?", "label": "What are the names of all games played by Linda Smith?"}
{"idx": 928, "logic": "( personal name ) that belongs to ( students ), and except that ( ( personal name of addresses ) that belongs to ( ( students ) , and ( ( student course enrolment ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ))", "pred": "Show the personal names of all students who did not enroll in any course.", "label": "Find the personal names of students not enrolled in any course."}
{"idx": 929, "logic": "( the sum of ( access count ) ) that belongs to ( documents ) , grouped by ( document type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the total access count of the document type code with the most documents.", "label": "What is the total access count of documents that are of the most common document type?"}
{"idx": 930, "logic": "( project details of addresses ) , ( project id of addresses ) that belongs to ( ( projects ) , and ( ( project outcomes ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , grouped by ( project id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the details and ids of the project with the most outcomes.", "label": "Which project made the most number of outcomes? List the project details and the project id."}
{"idx": 931, "logic": "( the average of ( lat ) ) , ( the average of ( long ) ) that belongs to ( station ) , that have ( ( city ) equal to ( san jose ) )", "pred": "What is the average lat and longitude of all stations in San Jose?", "label": "What is the average latitude and longitude of stations located in San Jose city?"}
{"idx": 932, "logic": "( location of staff ) that belongs to ( ( player ) , and ( ( school ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) ) , grouped by ( school id of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "Show the locations of schools that have more than one player.", "label": "Show the locations of schools that have more than 1 player."}
{"idx": 933, "logic": "( the number of ( all items ) ) that belongs to ( ( has allergy ) , and ( ( student ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , that have ( ( ( ( sex of staff ) equal to ( f ) ) and ( ( allergy of addresses ) equal to ( milk ) ) ) or ( ( allergy of addresses ) equal to ( eggs ) ) )", "pred": "Find the number of students who have allergy to milk or eggs.", "label": "How many students who are female are allergic to milk or eggs?"}
{"idx": 934, "logic": "( the number of ( all items ) ) that belongs to ( company )", "pred": "Count the number of companies.", "label": "How many gas companies are there?"}
{"idx": 935, "logic": "( distinct ( fname of club ) ) , ( lname of club ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( name of student ) equal to ( university of oxford ) )", "pred": "What are the first names and last names of all authors who belong to the institution \"University of oxford\"", "label": "Who belong to the institution \"University of Oxford\"? Show the first names and last names."}
{"idx": 936, "logic": "( distinct ( position ) ) that belongs to ( pilot ) , that have ( ( age ) greater than ( 30 ) )", "pred": "Find the distinct positions of pilots older than 30.", "label": "List the distinct positions of pilots older than 30."}
{"idx": 937, "logic": "( lname ) that belongs to ( authors ) , that have ( ( fname ) equal to ( amal ) )", "pred": "Find the last name of the author with first name \"Amal\".", "label": "Find the last name of the author with first name \"Amal\"."}
{"idx": 938, "logic": "( the number of ( all items ) ) that belongs to ( voting record )", "pred": "Count the number of voting record.", "label": "Find the number of voting records in total."}
{"idx": 939, "logic": "( location name ) , ( location description ) that belongs to ( ref locations ) , that have ( ( location code ) equal to ( x ) )", "pred": "What is the name and description of the location with code \"X\"?", "label": "What are the name and description for location code x?"}
{"idx": 940, "logic": "( the number of ( all items ) ) that belongs to ( files ) , that have ( ( duration ) like ( 4:% ) )", "pred": "Count the number of files with duration 4:%", "label": "What is the count of the songs that last approximately 4 minutes?"}
{"idx": 941, "logic": "( distinct ( unitprice ) ) that belongs to ( track )", "pred": "List the distinct unit prices of all tracks.", "label": "What are the distinct unit prices of all tracks?"}
{"idx": 942, "logic": "( decor ) , ( the number of ( all items ) ) that belongs to ( rooms ) , that have ( ( baseprice ) greater than ( 120 ) ) , grouped by ( decor )", "pred": "Show the decor and the number of rooms with base price higher than 120 for each decor.", "label": "Find the number of rooms with price higher than 120 for different decor."}
{"idx": 943, "logic": "( the average of ( price ) ) , ( the average of ( cases ) ) that belongs to ( wine ) , that have ( ( ( year ) equal to ( 2009 ) ) and ( ( grape ) equal to ( zinfandel ) ) )", "pred": "What is the average price and cases of wines produced in 2009 and produced by Zinfandel?", "label": "What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?"}
{"idx": 944, "logic": "( distinct ( destruction authorised by employee id ) ) that belongs to ( documents to be destroyed )", "pred": "Show all distinct destruction authorised by employees.", "label": "What are the ids of all the employees who authorize document destruction?"}
{"idx": 945, "logic": "( phone number ) that belongs to ( employees ) , that have ( ( salary ) between ( 8000 ) and ( 12000 ) )", "pred": "Find the phone number of all employees with salary between 8000 and 12000.", "label": "what is the phone number of employees whose salary is in the range of 8000 and 12000?"}
{"idx": 946, "logic": "( the number of ( all items ) ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( food ) )", "pred": "Count the number of people who have allergy to food.", "label": "How many students have a food allergy?"}
{"idx": 947, "logic": "( campus of addresses ) , ( the sum of ( degrees of staff ) ) that belongs to ( ( campuses ) , and ( ( degrees ) satisfied that ( ( id of addresses ) equal to ( campus of staff ) ) ) ) , that have ( ( ( year of staff ) greater than or equal to ( 1998 ) ) and ( ( year of staff ) less than or equal to ( 2002 ) ) ) , grouped by ( campus of addresses )", "pred": "Show the campus name and the total number of degrees conferred in 1998 and 2002.", "label": "how many degrees were conferred between 1998 and 2002?"}
{"idx": 948, "logic": "( investor id ) , ( the average of ( share count ) ) that belongs to ( transactions ) , grouped by ( investor id ) , ordered by ( ( the average of ( share count ) ) )", "pred": "Show the investor id and average share count for transactions in alphabetical order of average.", "label": "Show the average share count of transactions each each investor, ordered by average share count."}
{"idx": 949, "logic": "( name of addresses ) that belongs to ( ( actor ) , and ( ( musical ) satisfied that ( ( musical id of addresses ) equal to ( musical id of staff ) ) ) ) , ordered by ( ( year of staff ) in descending order )", "pred": "List the names of actors in musicals in descending order of year.", "label": "What are the names of actors ordered descending by the year in which their musical was awarded?"}
{"idx": 950, "logic": "( name of enzyme ) that belongs to ( ( exhibition record ) , and ( ( exhibition ) satisfied that ( ( exhibition id of addresses ) equal to ( exhibition id of staff ) ) ) , and ( ( artist ) satisfied that ( ( artist id of enzyme ) equal to ( artist id of staff ) ) ) ) , grouped by ( artist id of enzyme ) , that have ( ( the average of ( attendance of addresses ) ) greater than ( 200 ) )", "pred": "What are the names of the artists who have had an average attendance of over 200?", "label": "Show all artist names with an average exhibition attendance over 200."}
{"idx": 951, "logic": "( employee id of addresses ) that belongs to ( ( employees ) , and ( ( roles ) satisfied that ( ( role code of addresses ) equal to ( role code of staff ) ) ) ) , that have ( ( ( role name of staff ) equal to ( human resource ) ) or ( ( role name of staff ) equal to ( manager ) ) )", "pred": "What are the employee ids of the employees who are in the Human Resource or Manager roles?", "label": "What are the employee ids of the employees whose role name is \"Human Resource\" or \"Manager\"?"}
{"idx": 952, "logic": "( document id ) that belongs to ( documents ) , that have ( ( document type code ) equal to ( cv ) ), and except that ( ( document id ) that belongs to ( documents with expenses ))", "pred": "What are the ids of documents whose type code is CV but not with expenses.", "label": "What are the ids of documents with the type code CV that do not have expenses."}
{"idx": 953, "logic": "( distinct ( venue ) ) that belongs to ( debate )", "pred": "Show all distinct venues for debates.", "label": "Show the distinct venues of debates"}
{"idx": 954, "logic": "( the maximum of ( omim ) ) that belongs to ( enzyme )", "pred": "Find the maximum omim of all enzymes.", "label": "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?"}
{"idx": 955, "logic": "( name of addresses ) , ( population of addresses ) that belongs to ( ( country ) , and ( ( roller coaster ) satisfied that ( ( country id of addresses ) equal to ( country id of staff ) ) ) ) , ordered by ( ( height of staff ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and population of the country that has the tallest roller coaster.", "label": "Show the name and population of the country that has the highest roller coaster."}
{"idx": 956, "logic": "( degrees ) that belongs to ( ( campuses ) , and ( ( degrees ) satisfied that ( ( id of club ) equal to ( campus of member of club ) ) ) ) , that have ( ( ( campus of club ) equal to ( san jose state university ) ) and ( ( year of member of club ) equal to ( 2000 ) ) )", "pred": "What are the degrees conferred in the year 2000?", "label": "How many degrees were conferred at San Jose State University in 2000?"}
{"idx": 957, "logic": "( name ) that belongs to ( actor ) , ordered by ( ( name ) in ascending order )", "pred": "List the names of actors in ascending order of name.", "label": "List the name of actors in ascending alphabetical order."}
{"idx": 958, "logic": "( distinct ( name of student ) ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( ( fname of club ) equal to ( katsuhiro ) ) and ( ( lname of club ) equal to ( ueno ) ) )", "pred": "What are the distinct names of the authors who are associated with the institution \"Katsuhiro\" and \"Ueno\"", "label": "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?"}
{"idx": 959, "logic": "( event id ) that belongs to ( events ), and except that ( ( event id of addresses ) that belongs to ( ( participants in events ) , and ( ( participants ) satisfied that ( ( participant id of addresses ) equal to ( participant id of staff ) ) ) ) , that have ( ( participant details ) equal to ( 'kenyatta kuhn' ) ))", "pred": "What are the ids of events that did not have any participant with details 'Kenyatta Kuhn'?", "label": "Which events id does not have any participant with detail 'Kenyatta Kuhn'?"}
{"idx": 960, "logic": "( name ) , ( price ) that belongs to ( products )", "pred": "List the name and price of all products.", "label": "Select the names and the prices of all the products in the store."}
{"idx": 961, "logic": "( the number of ( all items ) ) that belongs to ( region )", "pred": "Count the number of regions.", "label": "How many regions do we have?"}
{"idx": 962, "logic": "( aircraft of addresses ) that belongs to ( ( aircraft ) , and ( ( airport aircraft ) satisfied that ( ( aircraft id of addresses ) equal to ( aircraft id of staff ) ) ) , and ( ( airport ) satisfied that ( ( airport id of staff ) equal to ( airport id of enzyme ) ) ) ) , that have ( ( airport name of enzyme ) equal to ( london heathrow ) ), and intersect with ( ( aircraft of addresses ) that belongs to ( ( aircraft ) , and ( ( airport aircraft ) satisfied that ( ( aircraft id of addresses ) equal to ( aircraft id of staff ) ) ) , and ( ( airport ) satisfied that ( ( airport id of staff ) equal to ( airport id of enzyme ) ) ) ) , that have ( ( airport name of enzyme ) equal to ( london gatwick ) ))", "pred": "Find the names of all aircrafts that are associated with both London Heathrow and Gatwick airports.", "label": "Show the names of aircrafts that are associated with both an airport named \"London Heathrow\" and an airport named \"London Gatwick\""}
{"idx": 963, "logic": "( carrier of staff ) that belongs to ( ( stock ) , and ( ( device ) satisfied that ( ( device id of addresses ) equal to ( device id of staff ) ) ) ) , grouped by ( device id of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "Find the carrier of devices that are in more than one stock.", "label": "Show the carriers of devices in stock at more than one shop."}
{"idx": 964, "logic": "( customer name of club ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , ordered by ( ( order date of member of club ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the customer who has made the most orders.", "label": "Find the name of the customer who made an order most recently."}
{"idx": 965, "logic": "( name ) , ( price ) that belongs to ( products )", "pred": "List the name and price of all products.", "label": "What are the names and prices of all products in the store?"}
{"idx": 966, "logic": "( actual delivery date of addresses ) that belongs to ( ( customer orders ) , and ( ( order items ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) ) , that have ( ( order quantity of staff ) equal to ( 1 ) )", "pred": "What is the actual delivery date of the order with quantity 1.", "label": "What are the actual delivery dates of orders with quantity 1?"}
{"idx": 967, "logic": "( the number of ( all items ) ) that belongs to ( book club )", "pred": "Count the number of book clubs.", "label": "How many book clubs are there?"}
{"idx": 968, "logic": "( name of addresses ) , ( tourist attraction id of staff ) , ( the number of ( all items ) ) that belongs to ( ( tourist attractions ) , and ( ( visits ) satisfied that ( ( tourist attraction id of addresses ) equal to ( tourist attraction id of staff ) ) ) ) , grouped by ( tourist attraction id of staff )", "pred": "List the name, id, and number of visits for each tourist attraction.", "label": "What are the name, id and the corresponding number of visits for each  tourist attraction?"}
{"idx": 969, "logic": "( distinct ( name of trip ) ) that belongs to ( ( personfriend ) , and ( ( person ) satisfied that ( ( name of addresses ) equal to ( name of staff ) ) ) , and ( ( personfriend ) satisfied that ( ( friend of addresses ) equal to ( name of enzyme ) ) ) , and ( ( personfriend ) satisfied that ( ( friend of enzyme ) equal to ( name of trip ) ) ) ) , that have ( ( ( name of staff ) equal to ( 'alice' ) ) and ( ( name of trip ) not equal to ( 'alice' ) ) )", "pred": "What are the distinct names of the friends who are friends with Alice but Alice?", "label": "Find Alice's friends of friends."}
{"idx": 970, "logic": "( carrier ) , ( the number of ( all items ) ) that belongs to ( phone ) , grouped by ( carrier )", "pred": "Show carrier and the number of phones for each carrier.", "label": "Show different carriers of phones together with the number of phones with each carrier."}
{"idx": 971, "logic": "( the number of ( all items ) ) , ( product id of enzyme ) that belongs to ( ( orders ) join ( ( order items ) ) , and ( ( products ) satisfied that ( ( ( order id of addresses ) equal to ( order id of staff ) ) and ( ( product id of staff ) equal to ( product id of enzyme ) ) ) ) ) , grouped by ( product id of enzyme )", "pred": "Find the number of orders for each product.", "label": "List the count and id of each product in all the orders."}
{"idx": 972, "logic": "( song name ) that belongs to ( song ) , that have ( ( languages ) equal to ( english ) )", "pred": "List the names of all songs in English.", "label": "What are the names of all songs in English?"}
{"idx": 973, "logic": "( name of addresses ) that belongs to ( ( actor ) , and ( ( musical ) satisfied that ( ( musical id of addresses ) equal to ( musical id of staff ) ) ) ) , that have ( ( name of staff ) equal to ( the phantom of the opera ) )", "pred": "What are the names of the actors who are in the musical \"The Phantom of the Opera\"?", "label": "What are the names of actors who have been in the musical titled The Phantom of the Opera?"}
{"idx": 974, "logic": "( product name of staff ) , ( the sum of ( product quantity of addresses ) ) that belongs to ( ( order items ) , and ( ( products ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product name of staff )", "pred": "Show the name and total quantity of orders for each product.", "label": "What are the different product names, and what is the sum of quantity ordered for each product?"}
{"idx": 975, "logic": "( trade name ) , ( the number of ( all items ) ) that belongs to ( medicine ) , grouped by ( trade name )", "pred": "Show trade name and the number of medicines in each trade.", "label": "How many medicines are offered by each trade name?"}
{"idx": 976, "logic": "( product name of addresses ) , ( the sum of ( order quantity of staff ) ) that belongs to ( ( products ) , and ( ( order items ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product id of addresses )", "pred": "Show product name and the total order quantity for each product.", "label": "Show the product name and total order quantity for each product."}
{"idx": 977, "logic": "( distinct ( name of student ) ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( ( fname of club ) equal to ( katsuhiro ) ) and ( ( lname of club ) equal to ( ueno ) ) )", "pred": "What are the distinct names of the authors who are associated with the institution \"Katsuhiro\" and \"Ueno\"", "label": "Which institution does \"Katsuhiro Ueno\" belong to?"}
{"idx": 978, "logic": "( amount ) that belongs to ( payment ) , ordered by ( ( amount ) in descending order ) , limited to the top ( 1 )", "pred": "Find the amount of the payment with the largest amount.", "label": "What is the largest payment amount?"}
{"idx": 979, "logic": "( name of enzyme ) , ( name of staff ) that belongs to ( ( employment ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) , and ( ( company ) satisfied that ( ( company id of addresses ) equal to ( company id of enzyme ) ) ) )", "pred": "What are the names and names of the people who are employed by the company?", "label": "Show the names of companies and of employees."}
{"idx": 980, "logic": "( f id ) that belongs to ( files ) , that have ( ( formats ) equal to ( mp4 ) ), and intersect with ( ( f id ) that belongs to ( song ) , that have ( ( resolution ) less than ( 1000 ) ))", "pred": "What are the ids of all files in mp4 format and mp5 format with resolution below 1000?", "label": "What is the id of the files that are available in the format of mp4 and a resolution smaller than 1000?"}
{"idx": 981, "logic": "( the number of ( all items ) ) that belongs to ( ( routes ) , and ( ( airports ) satisfied that ( ( dst apid of addresses ) equal to ( apid of staff ) ) ) ) , that have ( ( country of staff ) equal to ( 'italy' ) )", "pred": "Count the number of routes from Italy to Malta.", "label": "Find the number of routes with destination airports in Italy."}
{"idx": 982, "logic": "( party name ) that belongs to ( party ) , that have ( ( party_id ) not in ( ( party id ) that belongs to ( member ) ) )", "pred": "Find the names of parties that do not have any members.", "label": "What are the names of parties that have no members?"}
{"idx": 983, "logic": "( station id ) , ( location ) , ( manager name ) that belongs to ( gas station ) , ordered by ( ( open year ) )", "pred": "List the id, location, manager name of gas stations, ordered by opening year.", "label": "Show gas station id, location, and manager_name for all gas stations ordered by open year."}
{"idx": 984, "logic": "( the average of ( price in euros ) ) , ( the minimum of ( price in euros ) ) that belongs to ( catalog contents )", "pred": "Show the average and minimum price of catalog contents.", "label": "Give me the average and minimum price (in Euro) of the products."}
{"idx": 985, "logic": "( the number of ( all items ) ) that belongs to ( ( home game ) , and ( ( park ) satisfied that ( ( park id of addresses ) equal to ( park id of staff ) ) ) ) , that have ( ( ( year of addresses ) equal to ( 1907 ) ) and ( ( park name of staff ) equal to ( 'columbia park' ) ) )", "pred": "Count the number of home games played in 1907 in the park named 'Columbia park'.", "label": "How many games were played in park \"Columbia Park\" in 1907?"}
{"idx": 986, "logic": "( title of staff ) , ( stars of addresses ) , ( director of staff ) , ( the minimum of ( stars of addresses ) ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , grouped by ( director of staff )", "pred": "What is the title, stars, director, and minimum rating for each movie?", "label": "Find the title and score of the movie with the lowest rating among all movies directed by each director."}
{"idx": 987, "logic": "( distinct ( product size ) ) that belongs to ( products )", "pred": "List the distinct product sizes.", "label": "Show all product sizes."}
{"idx": 988, "logic": "( stuid ) that belongs to ( student ) , that have ( ( advisor ) equal to ( 1121 ) )", "pred": "Find the ids of students who advise advisor 1121.", "label": "Show ids for all students who have advisor 1121."}
{"idx": 989, "logic": "( grape ) , ( winery ) , ( year ) that belongs to ( wine ) , that have ( ( price ) greater than ( 100 ) ) , ordered by ( ( year ) )", "pred": "What are the grape, winery, and year of wines with price above 100, ordered by year.", "label": "List the grape, winery and year of the wines whose price is bigger than 100 ordered by year."}
{"idx": 990, "logic": "( director ) that belongs to ( movie ) , grouped by ( director ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "pred": "Show the directors who directed 1 movie.", "label": "What are the names of all directors who made one movie?"}
{"idx": 991, "logic": "( distinct ( police force ) ) that belongs to ( county public safety ) , that have ( ( location ) not equal to ( east ) )", "pred": "What are the distinct police forces of counties whose location is not East.", "label": "What are the different police forces of counties that are not located in the East?"}
{"idx": 992, "logic": "( the average of ( lat ) ) , ( the average of ( long ) ) that belongs to ( station ) , that have ( ( city ) equal to ( san jose ) )", "pred": "What is the average lat and longitude of all stations in San Jose?", "label": "What is the average latitude and longitude in San Jose?"}
{"idx": 993, "logic": "( distinct ( title ) ) that belongs to ( movie ), and except that ( ( title of staff ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) , and ( ( reviewer ) satisfied that ( ( rid of addresses ) equal to ( rid of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'chris jackson' ) ))", "pred": "What are the distinct titles of the movies that did not receive any rating from Chris Jackson?", "label": "Find the titles of all movies not reviewed by Chris Jackson."}
{"idx": 994, "logic": "( physician ) , ( department ) that belongs to ( affiliated with ) , that have ( ( primaryaffiliation ) equal to ( 1 ) )", "pred": "What are the physicians and departments of the primaryaffiliation 1?", "label": "List the physicians' employee ids together with their primary affiliation departments' ids."}
{"idx": 995, "logic": "( name ) , ( dept name ) that belongs to ( student ) , ordered by ( ( tot cred ) )", "pred": "List the name and dept name of all students in alphabetical order of tot cred", "label": "Find the name of the students and their department names sorted by their total credits in ascending order."}
{"idx": 996, "logic": "( the number of ( all items ) ) , ( director of addresses ) that belongs to ( ( movie ) , and ( ( rating ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , grouped by ( director of addresses )", "pred": "Show the number of movies that have a rating and the director.", "label": "For each director, how many reviews have they received?"}
{"idx": 997, "logic": "( city ) , ( the maximum of ( lat ) ) that belongs to ( station ) , grouped by ( city )", "pred": "Show each city and the maximum number of stations for each city.", "label": "For each city, what is the highest latitude for its stations?"}
{"idx": 998, "logic": "( event name ) that belongs to ( party events ) , grouped by ( event name ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )", "pred": "Show the names of events that have more than two parties.", "label": "find the event names that have more than 2 records."}
{"idx": 999, "logic": "( name of club ) that belongs to ( ( furniture ) , and ( ( furniture manufacte ) satisfied that ( ( furniture id of club ) equal to ( furniture id of member of club ) ) ) ) , that have ( ( price in dollar of member of club ) less than ( the maximum of ( price in dollar ) ) that belongs to ( furniture manufacte ) )", "pred": "Find the names of furnitures that have a price lower than the maximum price.", "label": "Find the names of furnitures whose prices are lower than the highest price."}
{"idx": 1000, "logic": "( the number of ( all items ) ) that belongs to ( cinema )", "pred": "Count the number of cinemas in the country.", "label": "How many cinema do we have?"}
{"idx": 1001, "logic": "( product name of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) ) , that have ( ( color description of member of club ) equal to ( white ) )", "pred": "What are the names of the products with color description \"white\"", "label": "What are the names of products with 'white' as their color description?"}
{"idx": 1002, "logic": "( owner of club ) that belongs to ( ( program ) , and ( ( broadcast ) satisfied that ( ( program id of club ) equal to ( program id of member of club ) ) ) ) , that have ( ( time of day of member of club ) equal to ( morning ) ), and intersect with ( ( owner of club ) that belongs to ( ( program ) , and ( ( broadcast ) satisfied that ( ( program id of club ) equal to ( program id of member of club ) ) ) ) , that have ( ( time of day of member of club ) equal to ( night ) ))", "pred": "Find the owners of both programs that are broadcast in morning and night.", "label": "find the program owners that have some programs in both morning and night time."}
{"idx": 1003, "logic": "( location of addresses ) , ( nickname of staff ) that belongs to ( ( school ) , and ( ( school details ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) )", "pred": "Show the location and nickname of each school.", "label": "Show locations and nicknames of schools."}
{"idx": 1004, "logic": "( name ) that belongs to ( people ) , that have ( ( people_id ) not in ( ( people id ) that belongs to ( perpetrator ) ) )", "pred": "Find the names of people who have not been perpetrators.", "label": "List the names of people that are not perpetrators."}
{"idx": 1005, "logic": "( the number of ( all items ) ) that belongs to ( files ) , that have ( ( duration ) like ( 4:% ) )", "pred": "Count the number of files with duration 4:%", "label": "How many songs have 4 minute duration?"}
{"idx": 1006, "logic": "( friend of staff ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( name of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( 'bob' ) )", "pred": "Find the friend of Bob.", "label": "Who are Bob's friends?"}
{"idx": 1007, "logic": "( the average of ( age ) ) , ( job ) that belongs to ( person ) , that have ( ( gender ) equal to ( 'male' ) ) , grouped by ( job )", "pred": "Find the average age and job of male people in each job.", "label": "What is average age of male for different job title?"}
{"idx": 1008, "logic": "( distinct ( name ) ) that belongs to ( instructor ) , ordered by ( ( name ) )", "pred": "List the distinct names of instructors in alphabetical order of name", "label": "List in alphabetic order the names of all distinct instructors."}
{"idx": 1009, "logic": "( hispanic ) that belongs to ( city ) , that have ( ( black ) greater than ( 10 ) )", "pred": "Find the hispanic of cities that have more than 10 black people.", "label": "What are the percentage of hispanics in cities with the black percentage higher than 10?"}
{"idx": 1010, "logic": "( title ) , ( studio ) that belongs to ( film ) , that have ( ( studio ) like ( %universal% ) )", "pred": "What are the titles and studios of all films produced by Universal Studios?", "label": "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\"."}
{"idx": 1011, "logic": "( player name of enzyme ) , ( coach name of staff ) that belongs to ( ( player coach ) , and ( ( coach ) satisfied that ( ( coach id of addresses ) equal to ( coach id of staff ) ) ) , and ( ( player ) satisfied that ( ( player id of addresses ) equal to ( player id of enzyme ) ) ) )", "pred": "What are the names and names of all the players who have been coached by a coach?", "label": "Show the names of players and names of their coaches."}
{"idx": 1012, "logic": "( distinct ( classroom ) ) that belongs to ( list ) , that have ( ( grade ) equal to ( 4 ) )", "pred": "What are the distinct classroom numbers for the students with grade 4?", "label": "Find the classrooms in which grade 4 is studying."}
{"idx": 1013, "logic": "( f id ) that belongs to ( song ) , that have ( ( resolution ) greater than ( the maximum of ( resolution ) ) that belongs to ( song ) , that have ( ( rating ) less than ( 8 ) ) )", "pred": "What are the ids of all songs with a resolution higher than the maximum and a rating below 8?", "label": "What is the id of every song that has a resolution higher than that of a song with a rating below 8?"}
{"idx": 1014, "logic": "( the number of ( distinct ( name ) ) ) that belongs to ( projects )", "pred": "Count the number of distinct names for projects.", "label": "Find the number of distinct projects."}
{"idx": 1015, "logic": "( name ) that belongs to ( member ) , that have ( ( ( address ) equal to ( 'harford' ) ) or ( ( address ) equal to ( 'waterbury' ) ) )", "pred": "Find the names of members living in Hartford or Waterbury.", "label": "Give me the names of members whose address is in Harford or Waterbury."}
{"idx": 1016, "logic": "( the maximum of ( transit passengers ) ) , ( the minimum of ( transit passengers ) ) that belongs to ( airport )", "pred": "Show the maximum and minimum number of transit passengers for all airports.", "label": "What is the maximum and mininum number of transit passengers for all airports?"}
{"idx": 1017, "logic": "( the number of ( distinct ( status ) ) ) that belongs to ( city )", "pred": "Count the number of distinct status for cities.", "label": "How many different statuses do cities have?"}
{"idx": 1018, "logic": "( fault short name of addresses ) , ( skill description of enzyme ) that belongs to ( ( part faults ) , and ( ( skills required to fix ) satisfied that ( ( part fault id of addresses ) equal to ( part fault id of staff ) ) ) , and ( ( skills ) satisfied that ( ( skill id of staff ) equal to ( skill id of enzyme ) ) ) )", "pred": "What are the fault short name and skill description for the part faults that are required to fix?", "label": "For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description."}
{"idx": 1019, "logic": "( f id ) , ( genre is ) , ( artist name ) that belongs to ( song ) , that have ( ( languages ) equal to ( english ) ) , ordered by ( ( rating ) )", "pred": "What are the id, genre, and artist name of all songs in English, ordered by rating?", "label": "What is the id, genre, and name of the artist for every English song ordered by ascending rating?"}
{"idx": 1020, "logic": "( project details of addresses ) that belongs to ( ( projects ) , and ( ( project outcomes ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) , and ( ( research outcomes ) satisfied that ( ( outcome code of staff ) equal to ( outcome code of enzyme ) ) ) ) , that have ( ( t3.outcome_description ) like ( '%published%' ) )", "pred": "What are the details of the projects that have an outcome with the letter published?", "label": "What are the details for the project whose research has been published?"}
{"idx": 1021, "logic": "( premises type of staff ) , ( address type code of addresses ) that belongs to ( ( customer addresses ) , and ( ( premises ) satisfied that ( ( premise id of addresses ) equal to ( premise id of staff ) ) ) )", "pred": "Show the premises type and address type code for all customers.", "label": "Show the premise type and address type code for all customer addresses."}
{"idx": 1022, "logic": "( class ) that belongs to ( race ) , grouped by ( class ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the class that has the most races.", "label": "Give the class of races that is most common."}
{"idx": 1023, "logic": "( emp fname ) that belongs to ( employee ) , that have ( ( emp jobcode ) equal to ( 'prof' ) ) , ordered by ( ( emp dob ) )", "pred": "What are the first names of all employees whose job code is Prof, ordered by emp dob.", "label": "What are the first names of all employees that are professors ordered by date of birth?"}
{"idx": 1024, "logic": "( zip postcode of staff ) that belongs to ( ( customers ) , and ( ( addresses ) satisfied that ( ( customer address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( ( first name of addresses ) equal to ( carole ) ) and ( ( last name of addresses ) equal to ( bernhard ) ) )", "pred": "Find the zip code of the customer Carole Bernhard.", "label": "What is zip code of customer with first name as Carole and last name as Bernhard?"}
{"idx": 1025, "logic": "( name ) , ( location ) that belongs to ( track )", "pred": "List the name and location of all tracks.", "label": "What are the names and locations of all tracks?"}
{"idx": 1026, "logic": "( headquarters ) that belongs to ( company ) , ordered by ( ( sales in billion ) in descending order ) , limited to the top ( 1 )", "pred": "Find the headquarters of the company with the most sales in billion.", "label": "What is the headquarter of the company with the largest sales?"}
{"idx": 1027, "logic": "( cname ) that belongs to ( course ) , ordered by ( ( credits ) )", "pred": "List the names of courses, ordered by credits.", "label": "What are the course names, ordered by credits?"}
{"idx": 1028, "logic": "( building address ) , ( building phone ) that belongs to ( apartment buildings ) , that have ( ( building manager ) equal to ( brenden ) )", "pred": "What are the address and phone number of the apartment buildings managed by the building manager \"Brenden\"", "label": "What are the address and phone number of the buildings managed by \"Brenden\"?"}
{"idx": 1029, "logic": "( name ) , ( num of component ) that belongs to ( furniture ) , ordered by ( ( market rate ) ) , limited to the top ( 1 )", "pred": "Find the name and num of the furniture with the highest market rate.", "label": "Find the name and component amount of the least popular furniture."}
{"idx": 1030, "logic": "( clubname of club ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( sex of student ) equal to ( f ) ) , grouped by ( clubname of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the club with the most female members.", "label": "Which club has the most female students as their members? Give me the name of the club."}
{"idx": 1031, "logic": "( college ) that belongs to ( match season ) , that have ( ( position ) equal to ( midfielder ) ), and intersect with ( ( college ) that belongs to ( match season ) , that have ( ( position ) equal to ( defender ) ))", "pred": "Show the colleges that have both players in the position of midfielder and defenders.", "label": "Return the colleges that have players who play the Midfielder position, as well as players who play the Defender position."}
{"idx": 1032, "logic": "( price ) that belongs to ( wine ) , that have ( ( year ) less than ( 2010 ) )", "pred": "Find the price of wines produced before 2010.", "label": "Return the prices of wines produced before 2010."}
{"idx": 1033, "logic": "( membership card ) that belongs to ( member ) , grouped by ( membership card ) , that have ( ( the number of ( all items ) ) greater than ( 5 ) )", "pred": "Find the card of members who have more than 5 membership cards.", "label": "Which membership card has more than 5 members?"}
{"idx": 1034, "logic": "( distinct ( location ) ) that belongs to ( cinema )", "pred": "Show all distinct locations of cinemas.", "label": "Find the distinct locations that has a cinema."}
{"idx": 1035, "logic": "( status ) , ( the number of ( all items ) ) that belongs to ( roller coaster ) , grouped by ( status )", "pred": "Show status and the number of roller coasters in each status.", "label": "Show the different statuses and the numbers of roller coasters for each status."}
{"idx": 1036, "logic": "( distinct ( position of staff ) ) that belongs to ( ( country ) , and ( ( match season ) satisfied that ( ( country id of addresses ) equal to ( country of staff ) ) ) ) , that have ( ( capital of addresses ) equal to ( dublin ) )", "pred": "What are the distinct positions of the players from country \"Dublin\"", "label": "Give the different positions of players who play for the country with the capital Dublin."}
{"idx": 1037, "logic": "( employee id ) , ( salary ) that belongs to ( employees ) , that have ( ( manager id ) equal to ( employee id ) that belongs to ( employees ) , that have ( ( first name ) equal to ( 'payam' ) ) )", "pred": "What are the employee ids and salaries of employees who have managers with first name Payam.", "label": "display the employee id and salary of all employees who report to Payam (first name)."}
{"idx": 1038, "logic": "( name of staff ) that belongs to ( ( advisor ) , and ( ( instructor ) satisfied that ( ( i id of addresses ) equal to ( id of staff ) ) ) , and ( ( student ) satisfied that ( ( s id of addresses ) equal to ( id of enzyme ) ) ) ) , that have ( ( dept name of enzyme ) equal to ( 'math' ) ) , ordered by ( ( tot cred of enzyme ) )", "pred": "Find the names of instructors who advise students in Math department, ordered by tot cred.", "label": "What are the names of all instructors who advise students in the math depart sorted by total credits of the student."}
{"idx": 1039, "logic": "( name ) that belongs to ( ( appointment ) , and ( ( patient ) satisfied that ( ( patient of addresses ) equal to ( ssn of staff ) ) ) )", "pred": "List the names of patients who have made an appointment.", "label": "What are names of patients who made an appointment?"}
{"idx": 1040, "logic": "( the number of ( all items ) ) that belongs to ( storm ) , that have ( ( number deaths ) greater than ( 0 ) )", "pred": "Count the number of storms with more than 0 deaths.", "label": "Count the number of storms in which at least 1 person died."}
{"idx": 1041, "logic": "( part id of addresses ) , ( part name of addresses ) that belongs to ( ( parts ) , and ( ( part faults ) satisfied that ( ( part id of addresses ) equal to ( part id of staff ) ) ) , and ( ( skills required to fix ) satisfied that ( ( part fault id of staff ) equal to ( part fault id of enzyme ) ) ) ) , grouped by ( part id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id and name of the part with the most faults.", "label": "Which part fault requires the most number of skills to fix? List part id and name."}
{"idx": 1042, "logic": "( customer details ) that belongs to ( customers ) , that have ( ( customer_details ) like ( %diana% ) )", "pred": "Find the details of customers who have the word Diana in their names.", "label": "Find the names of customers whose name contains \"Diana\"."}
{"idx": 1043, "logic": "( title of addresses ) that belongs to ( ( course ) , and ( ( prereq ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , grouped by ( course id of staff ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )", "pred": "Show the titles of courses that have two prerequisites.", "label": "What are the titles for courses with two prerequisites?"}
{"idx": 1044, "logic": "( the number of ( all items ) ) that belongs to ( customer ) , that have ( ( email ) like ( %gmail.com% ) )", "pred": "Count the number of customers who have email \"gmail.com\".", "label": "Count the number of customers that have an email containing \"gmail.com\"."}
{"idx": 1045, "logic": "( nominee ) that belongs to ( musical ) , that have ( ( award ) equal to ( tony award ) ), and intersect with ( ( nominee ) that belongs to ( musical ) , that have ( ( award ) equal to ( drama desk award ) ))", "pred": "Show the nominees who have both musicals nominated for the Tony award and drama desk award.", "label": "Who are the nominees who have been nominated for both a Tony Award and a Drama Desk Award?"}
{"idx": 1046, "logic": "( balance of staff ) that belongs to ( ( accounts ) , and ( ( checking ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) ) , that have ( ( t1.name ) like ( '%ee%' ) )", "pred": "What is the checking balance of the account whose name starts with the letter 'ee'?", "label": "Find the balance of the checking account belonging to an owner whose name contains 'ee'."}
{"idx": 1047, "logic": "( investor ) that belongs to ( entrepreneur ) , grouped by ( investor ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show the investors who have invested in at least two entrepreneurs.", "label": "Return the investors who have invested in two or more entrepreneurs."}
{"idx": 1048, "logic": "( the maximum of ( weight ) ) , ( the minimum of ( weight ) ) that belongs to ( player )", "pred": "Show the maximum and minimum weight of all players.", "label": "What is the maximum and minimum height of all players?"}
{"idx": 1049, "logic": "( artist name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( artist ) , and ( ( song ) satisfied that ( ( artist name of addresses ) equal to ( artist name of staff ) ) ) ) , grouped by ( artist name of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 3 )", "pred": "Find the name and number of songs for the artist with the most songs.", "label": "What are the names of the three artists who have produced the most songs, and how many works did they produce?"}
{"idx": 1050, "logic": "( city of addresses ) that belongs to ( ( city ) , and ( ( temperature ) satisfied that ( ( city id of addresses ) equal to ( city id of staff ) ) ) ) , that have ( ( feb of staff ) greater than ( jun of staff ) ) and ( city of enzyme ) that belongs to ( ( city ) , and ( ( hosting city ) satisfied that ( ( city id of enzyme ) equal to ( host city of trip ) ) ) )", "pred": "What are the names of cities that have a higher temperature in feb than in July and hosted trips in July?", "label": "Which cities have higher temperature in Feb than in Jun or have once served as host cities?"}
{"idx": 1051, "logic": "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , grouped by ( cust name of addresses ) , ordered by ( ( the sum of ( amount of staff ) ) )", "pred": "List the names of customers who have taken a loan, ordered by the total amount of money.", "label": "List the name of all different customers who have some loan sorted by their total loan amount."}
{"idx": 1052, "logic": "( the number of ( all items ) ) that belongs to ( album )", "pred": "Count the number of albums.", "label": "How many albums are there?"}
{"idx": 1053, "logic": "( dept name of staff ) , ( dept code of addresses ) that belongs to ( ( professor ) , and ( ( department ) satisfied that ( ( dept code of addresses ) equal to ( dept code of staff ) ) ) ) , that have ( ( prof high degree of addresses ) equal to ( 'ph.d.' ) ) , grouped by ( dept code of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and code of the department with the most professors with Ph.D. degree.", "label": "Which department has the most professors with a Ph.D.?"}
{"idx": 1054, "logic": "( type ) that belongs to ( ( vocals ) , and ( ( songs ) satisfied that ( ( songid of addresses ) equal to ( songid of staff ) ) ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of enzyme ) ) ) ) , that have ( ( ( firstname of enzyme ) equal to ( solveig ) ) and ( ( title of staff ) equal to ( a bar in amsterdam ) ) )", "pred": "What is the vocal type of the song \"A Bar in Amsterdam\"?", "label": "Which vocal type did the musician with first name \"Solveig\" played in the song with title \"A Bar in Amsterdam\"?"}
{"idx": 1055, "logic": "( name first of addresses ) , ( name last of addresses ) , ( player id of addresses ) , ( the number of ( all items ) ) that belongs to ( ( player ) , and ( ( all star ) satisfied that ( ( player id of addresses ) equal to ( player id of staff ) ) ) ) , grouped by ( player id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the first, last, and id of the player who has been all star the most times.", "label": "Which player has the most all star game experiences? Give me the first name, last name and id of the player, as well as the number of times the player participated in all star game."}
{"idx": 1056, "logic": "( name of staff ) that belongs to ( ( photos ) , and ( ( camera lens ) satisfied that ( ( camera lens id of addresses ) equal to ( id of staff ) ) ) ) , grouped by ( id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the camera lens that has been used the most.", "label": "What are the names of the cameras that have taken picture of the most mountains?"}
{"idx": 1057, "logic": "( area of addresses ) that belongs to ( ( appellations ) , and ( ( wine ) satisfied that ( ( appelation of addresses ) equal to ( appelation of staff ) ) ) ) , grouped by ( appelation of staff ) , that have ( ( year of staff ) less than ( 2010 ) ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the area of the appelation that produced the most wines before 2010.", "label": "What is the area of the appelation that produces the highest number of wines before the year of 2010?"}
{"idx": 1058, "logic": "( city ) that belongs to ( addresses ) , ordered by ( ( city ) )", "pred": "List the cities of addresses, ordered by city.", "label": "List all cities of addresses in alphabetical order."}
{"idx": 1059, "logic": "( product price ) that belongs to ( products ) , that have ( ( product_id ) not in ( ( product id ) that belongs to ( complaints ) ) )", "pred": "Find the price of products that do not have any complaints.", "label": "Find the prices of products which has never received a single complaint."}
{"idx": 1060, "logic": "( distinct ( fname of addresses ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( class senator vote of staff ) ) ) )", "pred": "Find the first names of all students who have class senator votes.", "label": "Find the distinct first names of the students who have class senator votes."}
{"idx": 1061, "logic": "( name ) that belongs to ( pilot ) , that have ( ( age ) less than or equal to ( 30 ) ) , ordered by ( ( name ) in descending order )", "pred": "What are the names of pilots under 30, ordered by age descending?", "label": "List names of all pilot aged 30 or younger in descending alphabetical order."}
{"idx": 1062, "logic": "( name ) that belongs to ( building ), and except that ( ( name of addresses ) that belongs to ( ( building ) , and ( ( institution ) satisfied that ( ( building id of addresses ) equal to ( building id of staff ) ) ) ) , that have ( ( founded of staff ) equal to ( 2003 ) ))", "pred": "What are the names of buildings that do not have any institution founded in 2003.", "label": "Show the names of buildings except for those having an institution founded in 2003."}
{"idx": 1063, "logic": "( the average of ( rating ) ) , ( languages ) that belongs to ( song ) , grouped by ( languages )", "pred": "What is the average rating for songs in each language?", "label": "What is the average rating of songs for each language?"}
{"idx": 1064, "logic": "( store phone of addresses ) , ( store email address of addresses ) that belongs to ( ( drama workshop groups ) , and ( ( services ) satisfied that ( ( workshop group id of addresses ) equal to ( workshop group id of staff ) ) ) ) , that have ( ( product name of staff ) equal to ( film ) )", "pred": "What are the phone and email addresses of the drama workshop groups that offer services with product name \"Film\"?", "label": "Find the names of the workshop groups where services with product name \"film\" are performed."}
{"idx": 1065, "logic": "( name of addresses ) , ( name of staff ) that belongs to ( ( city ) , and ( ( county public safety ) satisfied that ( ( county id of addresses ) equal to ( county id of staff ) ) ) )", "pred": "What are the names and names of the cities in each county?", "label": "What are the names of cities, as well as the names of the counties they correspond to?"}
{"idx": 1066, "logic": "( part id ) , ( chargeable amount ) that belongs to ( parts ) , ordered by ( ( chargeable amount ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the id and chargeable amount of the part with the highest chargeable amounts.", "label": "Which part has the least chargeable amount? List the part id and amount."}
{"idx": 1067, "logic": "( the number of ( all items ) ) that belongs to ( video games ) , that have ( ( gtype ) equal to ( massively multiplayer online game ) )", "pred": "Count the number of video games with type \"M massively multiplayer online game\".", "label": "Count the number of video games with Massively multiplayer online game type."}
{"idx": 1068, "logic": "( name ) that belongs to ( people ) , ordered by ( ( height ) in ascending order )", "pred": "List the names of people in ascending order of height of height.", "label": "What are the names of people in ascending order of height?"}
{"idx": 1069, "logic": "( campus ) that belongs to ( campuses ) , that have ( ( location ) equal to ( chico ) )", "pred": "Find the campus located in Chico.", "label": "What are the names of all campuses located at Chico?"}
{"idx": 1070, "logic": "( last name of club ) that belongs to ( ( staff ) , and ( ( complaints ) satisfied that ( ( staff id of club ) equal to ( staff id of member of club ) ) ) ) , ordered by ( ( date complaint raised of member of club ) ) , limited to the top ( 1 )", "pred": "Find the last name of the staff who filed the complaint with the earliest date raised.", "label": "What is the last name of the staff who has handled the first ever complaint?"}
{"idx": 1071, "logic": "( state province county of addresses ) that belongs to ( ( addresses ) , and ( ( staff ) satisfied that ( ( address id of addresses ) equal to ( staff address id of staff ) ) ) ) , grouped by ( state province county of addresses ) , that have ( ( the number of ( all items ) ) between ( 2 ) and ( 4 ) )", "pred": "Show the states that have between 2 and 4 staff.", "label": "List the states which have between 2 to 4 staffs living there."}
{"idx": 1072, "logic": "( department name of addresses ) , ( city of staff ) , ( state province of staff ) that belongs to ( ( departments ) , and ( ( locations ) satisfied that ( ( location id of staff ) equal to ( location id of addresses ) ) ) )", "pred": "Show department name, city, state, and state of each department.", "label": "What are the department names, cities, and state provinces for each department?"}
{"idx": 1073, "logic": "( organized by ) , ( name ) that belongs to ( church ) , that have ( ( open_date ) between ( 1830 ) and ( 1840 ) )", "pred": "What are the organized churches and names of churches that opened between 1830 and 1840", "label": "Show the organizer and name for churches that opened between 1830 and 1840."}
{"idx": 1074, "logic": "( pilot ) that belongs to ( flight ) , grouped by ( pilot ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the pilot who has flown the most flights.", "label": "which pilot is in charge of the most number of flights?"}
{"idx": 1075, "logic": "( the number of ( distinct ( claim outcome code ) ) ) that belongs to ( claims processing )", "pred": "Count the number of distinct claim outcome codes.", "label": "Count the number of distinct claim outcome codes."}
{"idx": 1076, "logic": "( distinct ( lastname of addresses ) ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( grade of addresses ) equal to ( 3 ) ) and ( ( firstname of staff ) not equal to ( covin ) ) and ( ( lastname of staff ) not equal to ( jerome ) ) )", "pred": "What are the last names of the teachers who teach students with grade 3 or higher and whose first name covin and last name jerome?", "label": "Find the last names of the students in third grade that are not taught by COVIN JEROME."}
{"idx": 1077, "logic": "( marketing region descriptrion ) that belongs to ( marketing regions ) , that have ( ( marketing region name ) equal to ( china ) )", "pred": "What is the descriptrion of the marketing region \"China\"", "label": "Find the marketing region description of China?"}
{"idx": 1078, "logic": "( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( id of enzyme ) equal to ( playlist id of staff ) ) ) ) , that have ( ( name of enzyme ) equal to ( movies ) )", "pred": "What are the names of the tracks that are played on the Movies playlist?", "label": "List the name of all tracks in the playlists of Movies."}
{"idx": 1079, "logic": "( song ) that belongs to ( volume ) , that have ( ( weeks on top ) greater than ( 1 ) )", "pred": "What are the songs of volumes that have more than 1 weeks on top?", "label": "What are the songs in volumes with more than 1 week on top?"}
{"idx": 1080, "logic": "( the number of ( distinct ( state ) ) ) that belongs to ( college ) , that have ( ( enr ) less than ( the average of ( enr ) ) that belongs to ( college ) )", "pred": "Count the number of distinct states that have colleges whose enrollment is lower than the average.", "label": "How many states have smaller colleges than average?"}
{"idx": 1081, "logic": "( train number ) , ( time ) that belongs to ( train ) , that have ( ( ( origin ) equal to ( 'chennai' ) ) and ( ( destination ) equal to ( 'guruvayur' ) ) )", "pred": "What are the number and time of trains that originate in Chennai and end in Guruvayur", "label": "Find the number and time of the train that goes from Chennai to Guruvayur."}
{"idx": 1082, "logic": "( document date of addresses ) that belongs to ( ( documents ) , and ( ( documents with expenses ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) ) , that have ( ( budget type code of staff ) equal to ( 'gv' ) ), and intersect with ( ( document date of addresses ) that belongs to ( ( documents ) , and ( ( documents with expenses ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) ) , that have ( ( budget type code of staff ) equal to ( 'sf' ) ))", "pred": "What are the dates of the documents with both budget type code 'GV' and budget type 'SF'", "label": "Give the dates of creation for documents that have both budget type codes 'GV' and 'SF'."}
{"idx": 1083, "logic": "( location ) that belongs to ( performance ) , grouped by ( location ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the location that has performed the most performances.", "label": "Show the most common location of performances."}
{"idx": 1084, "logic": "( location code ) , ( the number of ( all items ) ) that belongs to ( document locations ) , grouped by ( location code )", "pred": "Show the code and the number of document locations in each location.", "label": "Show the location codes and the number of documents in each location."}
{"idx": 1085, "logic": "( official native language ) that belongs to ( country ) , that have ( ( official_native_language ) like ( %english% ) )", "pred": "What are the official native languages of countries whose official language contains the word English.", "label": "What are the official native languages that contain the string \"English\"."}
{"idx": 1086, "logic": "( the number of ( all items ) ) that belongs to ( scientists ) , that have ( ( ssn ) not in ( ( scientist ) that belongs to ( assignedto ) ) )", "pred": "Count the number of scientists who do not have any Ssn assigned.", "label": "Find the number of scientists who are not assigned to any project."}
{"idx": 1087, "logic": "( major ) that belongs to ( student ) , grouped by ( major ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the most common major.", "label": "Find the major that is studied by the largest number of students."}
{"idx": 1088, "logic": "( distinct ( building ) ) that belongs to ( faculty )", "pred": "Show all distinct buildings.", "label": "Show all the distinct buildings that have faculty rooms."}
{"idx": 1089, "logic": "( date of latest revision ) that belongs to ( catalogs ) , grouped by ( date of latest revision ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "Show the dates of latest revision for catalogs that have more than one catalog.", "label": "On which days more than one revisions were made on catalogs."}
{"idx": 1090, "logic": "( date of notes of addresses ) that belongs to ( ( assessment notes ) , and ( ( students ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ) , that have ( ( first name of staff ) equal to ( fanny ) )", "pred": "What are the dates of the assessment notes for the student with first name \"Fanny\"", "label": "Find the dates of assessment notes for students with first name \"Fanny\"."}
{"idx": 1091, "logic": "( date left staff ) that belongs to ( staff ) , that have ( ( ( first name ) equal to ( janessa ) ) and ( ( last name ) equal to ( sawayn ) ) )", "pred": "What are the dates left by staff whose first name is Janessa and last name is Sawayn.", "label": "When did the staff member Janessa Sawayn leave the company?"}
{"idx": 1092, "logic": "( first name ) , ( last name ) , ( gender mf ) that belongs to ( customers ) , that have ( ( good or bad customer ) equal to ( 'good' ) ) , ordered by ( ( last name ) )", "pred": "What are the first name, last name, gender mf of all customers who are good or bad, ordered by last name.", "label": "What are the first name, last name, and gender of all the good customers? Order by their last name."}
{"idx": 1093, "logic": "( name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses )", "pred": "Show the names of storms and the number of people affected by them.", "label": "List the name for storms and the number of affected regions for each storm."}
{"idx": 1094, "logic": "( first name ) , ( last name ) that belongs to ( maintenance engineers ) , that have ( ( engineer_id ) not in ( ( engineer id ) that belongs to ( engineer visits ) ) )", "pred": "What are the first name and last name of maintenance engineers who did not visit any engineer?", "label": "Which engineers have never visited to maintain the assets? List the engineer first name and last name."}
{"idx": 1095, "logic": "( the sum of ( revenue ) ) that belongs to ( manufacturers ) , that have ( ( headquarter ) equal to ( 'austin' ) )", "pred": "Find the total revenue of all manufacturers headquartered in Austin.", "label": "What is the sum of revenue from companies with headquarters in Austin?"}
{"idx": 1096, "logic": "( policy type code ) , ( the number of ( all items ) ) that belongs to ( policies ) , grouped by ( policy type code )", "pred": "Show the policy type code and the number of policies for each type.", "label": "For each policy type, return its type code and its count in the record."}
{"idx": 1097, "logic": "( the number of ( all items ) ) that belongs to ( medicine ) , that have ( ( fda approved ) equal to ( 'no' ) )", "pred": "Count the number of medicines with FDA approval.", "label": "How many medicines have the FDA approval status 'No'?"}
{"idx": 1098, "logic": "( the number of ( all items ) ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( ( customer first name of staff ) equal to ( art ) ) and ( ( customer last name of staff ) equal to ( turcotte ) ) )", "pred": "How many accounts does the customer Art Turcotte has?", "label": "Return the number of accounts that the customer with the first name Art and last name Turcotte has."}
{"idx": 1099, "logic": "( major ) , ( the number of ( all items ) ) that belongs to ( student ) , grouped by ( major ) , ordered by ( ( the number of ( major ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the major and the number of students in it.", "label": "Which major has least number of students? List the major and the number of students."}
{"idx": 1100, "logic": "( publisher ) that belongs to ( publication ) , ordered by ( ( price ) in descending order ) , limited to the top ( 1 )", "pred": "Find the publisher of the publication with the highest price.", "label": "List the publisher of the publication with the highest price."}
{"idx": 1101, "logic": "( the number of ( distinct ( school code ) ) ) that belongs to ( department )", "pred": "Count the number of distinct schools.", "label": "how many schools exist in total?"}
{"idx": 1102, "logic": "( distinct ( player name of addresses ) ) , ( birthday of addresses ) that belongs to ( ( player ) , and ( ( player attributes ) satisfied that ( ( player api id of addresses ) equal to ( player api id of staff ) ) ) ) , ordered by ( ( potential ) in descending order ) , limited to the top ( 5 )", "pred": "Find the name and birthday of the player with the most potential.", "label": "List the names and birthdays of the top five players in terms of potential."}
{"idx": 1103, "logic": "( the number of ( all items ) ) that belongs to ( csu fees ) , that have ( ( campusfee ) greater than ( the average of ( campusfee ) ) that belongs to ( csu fees ) )", "pred": "Count the number of csu fees with a campus fee higher than the average.", "label": "Find the count of universities whose campus fee is greater than the average campus fee."}
{"idx": 1104, "logic": "( name ) , ( distance ) that belongs to ( aircraft )", "pred": "List the name and distance of all aircraft.", "label": "What are the names and distances for all airplanes?"}
{"idx": 1105, "logic": "( the number of ( all items ) ) that belongs to ( ship )", "pred": "Count the number of ships.", "label": "how many ships are there?"}
{"idx": 1106, "logic": "( distinct ( name of addresses ) ) that belongs to ( ( web client accelerator ) , and ( ( accelerator compatible browser ) satisfied that ( ( accelerator id of staff ) equal to ( id of addresses ) ) ) , and ( ( browser ) satisfied that ( ( browser id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( market share of enzyme ) greater than ( 15 ) )", "pred": "What are the distinct names of the web client accelerators that are compatible with browsers with market share above 15?", "label": "What distinct accelerator names are compatible with the browswers that have market share higher than 15?"}
{"idx": 1107, "logic": "( name ) that belongs to ( races ) , that have ( ( ( time ) greater than ( 12:00:00 ) ) or ( ( time ) less than ( 09:00:00 ) ) )", "pred": "What are the names of races that have a time above 12:00:00 or below 09:00?", "label": "What are the names of races held after 12:00:00 or before 09:00:00?"}
{"idx": 1108, "logic": "( pets allowed yn ) , ( the average of ( price range ) ) that belongs to ( hotels ) , grouped by ( pets allowed yn )", "pred": "Show the number of pets allowed and average price range for each hotel.", "label": "Show the average price of hotels for different pet policy."}
{"idx": 1109, "logic": "( name of addresses ) that belongs to ( ( people ) , and ( ( perpetrator ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , that have ( ( country of staff ) not equal to ( china ) )", "pred": "Find the names of perpetrators who are not from China.", "label": "What are the names of perpetrators whose country is not \"China\"?"}
{"idx": 1110, "logic": "( fname of enzyme ) , ( lname of enzyme ) , ( gradepoint of staff ) that belongs to ( ( enrolled in ) join ( ( gradeconversion ) ) , and ( ( student ) satisfied that ( ( ( grade of addresses ) equal to ( lettergrade of staff ) ) and ( ( stuid of addresses ) equal to ( stuid of enzyme ) ) ) ) )", "pred": "What are the first name, last name, and gradepoint of all the students who are enrolled in gradeconversion?", "label": "What are the full names and gradepoints for all enrollments?"}
{"idx": 1111, "logic": "( the number of ( all items ) ) , ( fault log entry id of addresses ) that belongs to ( ( fault log ) , and ( ( engineer visits ) satisfied that ( ( fault log entry id of addresses ) equal to ( fault log entry id of staff ) ) ) ) , grouped by ( fault log entry id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the number of engineers visiting the fault log that has the most engineers visiting.", "label": "How many engineer visits are required at most for a single fault log? List the number and the log entry id."}
{"idx": 1112, "logic": "( district name ) that belongs to ( district ) , ordered by ( ( city population ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of district with the largest city population.", "label": "Which district has the largest population?"}
{"idx": 1113, "logic": "( the sum of ( salary of addresses ) ) that belongs to ( ( salary ) , and ( ( team ) satisfied that ( ( team id of addresses ) equal to ( team id br of staff ) ) ) ) , that have ( ( ( name of staff ) equal to ( 'boston red stockings' ) ) and ( ( year of addresses ) equal to ( 2010 ) ) )", "pred": "What is the total salary for the team Boston Red Stockings in 2010?", "label": "What is the total salary expenses of team Boston Red Stockings in 2010?"}
{"idx": 1114, "logic": "( firstname of addresses ) , ( lastname of addresses ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of staff ) equal to ( marrotte ) ) and ( ( lastname of staff ) equal to ( kirk ) ) )", "pred": "What are the first and last names of the teachers who teach in the classroom with first name Marrotte and last name Kirk.", "label": "Which are the first and last names of the students taught by MARROTTE KIRK?"}
{"idx": 1115, "logic": "( the number of ( all items ) ) that belongs to ( ( courses ) , and ( ( student course attendance ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( course name of addresses ) equal to ( english ) )", "pred": "Count the number of students who attended courses with name English.", "label": "How many students are attending English courses?"}
{"idx": 1116, "logic": "( first name ) , ( last name ) that belongs to ( customers ) , that have ( ( amount_outstanding ) between ( 1000 ) and ( 3000 ) )", "pred": "What are the first names and last names of customers who have outstanding amount between 1000 and 3000.", "label": "List the first name and last name of customers have the amount of outstanding between 1000 and 3000."}
{"idx": 1117, "logic": "( cname ) that belongs to ( tryout ) , that have ( ( ppos ) equal to ( 'mid' ) ), and except that ( ( cname ) that belongs to ( tryout ) , that have ( ( ppos ) equal to ( 'goalie' ) ))", "pred": "What are the names of the students who did not try out for mid position but did not play goalie?", "label": "Find the names of schools that have some players in the mid position but not in the goalie position."}
{"idx": 1118, "logic": "( title of staff ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , that have ( ( t1.stars ) between ( 3 ) and ( 5 ) )", "pred": "What are the titles of the movies with ratings between 3 and 5?", "label": "What are the titles of all movies that have rating star is between 3 and 5?"}
{"idx": 1119, "logic": "( title ) , ( directed by ) that belongs to ( film )", "pred": "List the title and director of all films.", "label": "Show the title and director for all films."}
{"idx": 1120, "logic": "( the number of ( all items ) ) that belongs to ( party events )", "pred": "Count the number of parties.", "label": "How many party events do we have?"}
{"idx": 1121, "logic": "( the sum of ( hoursperweek ) ) , ( the sum of ( gamesplayed ) ) that belongs to ( ( sportsinfo ) , and ( ( student ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , that have ( ( ( fname of staff ) equal to ( david ) ) and ( ( lname of staff ) equal to ( shieber ) ) )", "pred": "What is the total hours per week and total number of games played for the students named David Shieber?", "label": "Show total hours per week and number of games played for student David Shieber."}
{"idx": 1122, "logic": "( the sum of ( amount ) ) that belongs to ( payment )", "pred": "Find the total amount of payment made.", "label": "Return the sum of all payment amounts."}
{"idx": 1123, "logic": "( customer details ) that belongs to ( customers ), and except that ( ( customer details of member of club ) that belongs to ( ( policies ) , and ( ( customers ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ))", "pred": "Show the details of customers who do not have any policies.", "label": "What are the names of customers who do not have any policies?"}
{"idx": 1124, "logic": "( the number of ( distinct ( delegate of staff ) ) ) that belongs to ( ( county ) , and ( ( election ) satisfied that ( ( county id of addresses ) equal to ( district of staff ) ) ) ) , that have ( ( population of addresses ) greater than ( 50000 ) )", "pred": "Count the number of delegates for counties with population above 50000.", "label": "How many distinct delegates are from counties with population larger than 50000?"}
{"idx": 1125, "logic": "( apt number of staff ) , ( booking start date of addresses ) , ( booking start date of addresses ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) )", "pred": "Show the apartment number, start date, and end date of all apartment bookings.", "label": "What are the apartment number, start date, and end date of each apartment booking?"}
{"idx": 1126, "logic": "( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( playlist id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'movies' ) ), and except that ( ( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( playlist id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'music' ) ))", "pred": "Find the names of tracks that are not played on Movies or Music playlists.", "label": "What are the names of all tracks that are on the Movies playlist but not in the music playlist?"}
{"idx": 1127, "logic": "( distinct ( start station name ) ) that belongs to ( trip ) , that have ( ( duration ) less than ( 100 ) )", "pred": "What are the distinct start stations of trips with duration less than 100.", "label": "List all the distinct stations from which a trip of duration below 100 started."}
{"idx": 1128, "logic": "( name of addresses ) , ( lat of addresses ) , ( the minimum of ( duration of staff ) ) that belongs to ( ( station ) , and ( ( trip ) satisfied that ( ( id of addresses ) equal to ( end station id of staff ) ) ) ) , grouped by ( end station id of staff )", "pred": "Show the name, lat, and minimum duration of trips for each end station.", "label": "For each station, find its latitude and the minimum duration of trips that ended at the station."}
{"idx": 1129, "logic": "( student id ) that belongs to ( student course registrations ) , grouped by ( student id ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "pred": "Find the id of the student who has registered the most courses.", "label": "what is id of students who registered some courses but the least number of courses in these students?"}
{"idx": 1130, "logic": "( distinct ( type ) ) that belongs to ( institution )", "pred": "List the distinct types of institutions.", "label": "Show all the distinct institution types."}
{"idx": 1131, "logic": "( gname ) that belongs to ( ( plays games ) , and ( ( video games ) satisfied that ( ( gameid of addresses ) equal to ( gameid of staff ) ) ) ) , grouped by ( gameid of addresses ) , that have ( ( the sum of ( hours played ) ) greater than or equal to ( 1000 ) )", "pred": "What are the names of all the games that have at least 1000 hours played?", "label": "Show all game names played by at least 1000 hours."}
{"idx": 1132, "logic": "all items that belongs to ( albums ) , that have ( ( year ) equal to ( 2010 ) )", "pred": "What is all the information about the albums released in 2010.", "label": "What are the albums produced in year 2010?"}
{"idx": 1133, "logic": "( electoral register id of addresses ) that belongs to ( ( electoral register ) , and ( ( cmi cross references ) satisfied that ( ( cmi cross ref id of addresses ) equal to ( cmi cross ref id of staff ) ) ) ) , that have ( ( ( source system code of staff ) equal to ( 'electoral' ) ) or ( ( source system code of staff ) equal to ( 'tax' ) ) )", "pred": "What are the ids of the electoral register whose source system code is 'Electoral' or 'Tax'", "label": "What are the register ids of electoral registries that have the cross reference source system code 'Electoral' or 'Tax'?"}
{"idx": 1134, "logic": "( the number of ( all items ) ) that belongs to ( courses )", "pred": "Count the number of courses.", "label": "Find the total number of courses offered."}
{"idx": 1135, "logic": "( personal name ) , ( family name ) that belongs to ( students ) , ordered by ( ( family name ) )", "pred": "List the personal name and family name of all students in alphabetical order of family name", "label": "What are the personal names and family names of the students? Sort the result in alphabetical order of the family name."}
{"idx": 1136, "logic": "( name of staff ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( friend of staff ) ) ) ) , that have ( ( city of addresses ) equal to ( 'new york city' ) )", "pred": "What are the names of the friends who live in New York?", "label": "Who has a friend that is from new york city?"}
{"idx": 1137, "logic": "( distinct ( name of addresses ) ) , ( position of addresses ) that belongs to ( ( physician ) , and ( ( prescribes ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( medication ) satisfied that ( ( code of enzyme ) equal to ( medication of staff ) ) ) ) , that have ( ( brand of enzyme ) equal to ( x ) )", "pred": "What are the distinct names and positions of physicians who prescribe medication with brand \"X\"", "label": "Find the name and position of physicians who prescribe some medication whose brand is X?"}
{"idx": 1138, "logic": "( the number of ( all items ) ) , ( grape ) that belongs to ( wine ) , grouped by ( grape )", "pred": "Find the number of wines for each grape.", "label": "What are the numbers of wines for different grapes?"}
{"idx": 1139, "logic": "( name ) that belongs to ( mountain ) , ordered by ( ( height ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the mountain with the highest height.", "label": "What is the name of the highest mountain?"}
{"idx": 1140, "logic": "( the number of ( distinct ( team ) ) ) that belongs to ( match season )", "pred": "Count the number of distinct teams in match season.", "label": "How many distinct teams are involved in match seasons?"}
{"idx": 1141, "logic": "( project details ) that belongs to ( projects ) , that have ( ( project_id ) not in ( ( project id ) that belongs to ( project staff ) , that have ( ( role code ) equal to ( 'researcher' ) ) ) )", "pred": "Find the details of projects that do not have any staff with role code 'Researcher'.", "label": "List the project details of the projects which did not hire any staff for a researcher role."}
{"idx": 1142, "logic": "( open year ) , ( name ) that belongs to ( manufacturer ) , ordered by ( ( num of shops ) in descending order ) , limited to the top ( 1 )", "pred": "Find the opening year and name of the manufacturer that opened the most shops.", "label": "Which manufacturer has the most number of shops? List its name and year of opening."}
{"idx": 1143, "logic": "( title ) that belongs to ( course ) , that have ( ( course_id ) not in ( ( course id ) that belongs to ( prereq ) ) )", "pred": "Find the titles of courses that do not have prerequisites.", "label": "What are the names of courses without prerequisites?"}
{"idx": 1144, "logic": "( the number of ( all items ) ) that belongs to ( ( album ) , and ( ( artist ) satisfied that ( ( artistid of addresses ) equal to ( artistid of staff ) ) ) ) , that have ( ( name of staff ) equal to ( metallica ) )", "pred": "Count the number of albums by the artist named \"Metallica\".", "label": "Hom many albums does the artist \"Metallica\" have?"}
{"idx": 1145, "logic": "( the number of ( all items ) ) that belongs to ( ref shipping agents , and ( documents satisfied that ( ( shipping agent code of documents ) equal to ( shipping agent code of ref shipping agents ) ) ) ) , that have ( ( shipping agent name of ref shipping agents ) equal to ( usps ) )", "pred": "Find the number of documents shipped by shipping agent named \"USP\".", "label": "How many documents were shipped by USPS?"}
{"idx": 1146, "logic": "( fname of addresses ) , ( lname of addresses ) that belongs to ( ( faculty ) , and ( ( student ) satisfied that ( ( facid of addresses ) equal to ( advisor of staff ) ) ) ) , grouped by ( facid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the first name and last name of the faculty member who advises the most students.", "label": "Give me the the first and last name of the faculty who advises the most students."}
{"idx": 1147, "logic": "( the number of ( all items ) ) that belongs to ( exhibition ) , that have ( ( year ) greater than or equal to ( 2005 ) )", "pred": "Count the number of exhibitions held after 2005.", "label": "How many exhibition are there in year 2005 or after?"}
{"idx": 1148, "logic": "( the sum of ( grant amount ) ) that belongs to ( ( grants ) , and ( ( organisations ) satisfied that ( ( organisation id of addresses ) equal to ( organisation id of staff ) ) ) , and ( ( organisation types ) satisfied that ( ( organisation type of staff ) equal to ( organisation type of enzyme ) ) ) ) , that have ( ( organisation type description of enzyme ) equal to ( 'research' ) )", "pred": "Find the total grant amount of the organisation type description 'Research'.", "label": "What is the total grant amount of the organisations described as research?"}
{"idx": 1149, "logic": "( other account details ) that belongs to ( accounts ) , that have ( ( account name ) equal to ( 338 ) )", "pred": "What are the other account details for account with name 338.", "label": "What are the other account details for the account with the name 338?"}
{"idx": 1150, "logic": "( name ) , ( year join ) that belongs to ( artist ) , that have ( ( country ) not equal to ( 'united states' ) )", "pred": "What are the names and years of artists who are not from the United States?", "label": "What are the names and year of joining for artists that do not have the country \"United States\"?"}
{"idx": 1151, "logic": "( the maximum of ( fastestlapspeed of staff ) ) that belongs to ( ( races ) , and ( ( results ) satisfied that ( ( raceid of addresses ) equal to ( raceid of staff ) ) ) ) , that have ( ( ( year of addresses ) equal to ( 2008 ) ) and ( ( name of addresses ) equal to ( monaco grand prix ) ) )", "pred": "What is the fastest lap speed in the Monaco Grand Prix?", "label": "What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008?"}
{"idx": 1152, "logic": "( yearid ) that belongs to ( hall of fame ) , grouped by ( yearid ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the year that has the most hall of fame nominations.", "label": "In which year did the least people enter hall of fame?"}
{"idx": 1153, "logic": "( category ) that belongs to ( music festival ) , that have ( ( result ) equal to ( awarded ) )", "pred": "What are the categories of music festivals that have been awarded.", "label": "Return the categories of music festivals that have the result \"Awarded\"."}
{"idx": 1154, "logic": "( firstname of addresses ) , ( lastname of addresses ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of staff ) equal to ( marrotte ) ) and ( ( lastname of staff ) equal to ( kirk ) ) )", "pred": "What are the first and last names of the teachers who teach in the classroom with first name Marrotte and last name Kirk.", "label": "Find all students taught by MARROTTE KIRK. Output first and last names of students."}
{"idx": 1155, "logic": "( the number of ( distinct ( services ) ) ) that belongs to ( station )", "pred": "Count the number of distinct services for stations.", "label": "How many different services are provided by all stations?"}
{"idx": 1156, "logic": "( county name ) that belongs to ( county ) , ordered by ( ( population ) in ascending order )", "pred": "List the name of counties in ascending order of population.", "label": "Return the names of all counties sorted by population in ascending order."}
{"idx": 1157, "logic": "( shop id ) , ( address ) that belongs to ( shop ) , that have ( ( score ) less than ( the average of ( score ) ) that belongs to ( shop ) )", "pred": "What are the ids and addresses of the shops whose score is lower than the average score?", "label": "Find the id and address of the shops whose score is below the average score."}
{"idx": 1158, "logic": "( name ) that belongs to ( storm ), and except that ( ( name of addresses ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ))", "pred": "Show the names of storms that did not affect any region.", "label": "What are the names of storms that did not affect two or more regions?"}
{"idx": 1159, "logic": "( distinct ( location name ) ) that belongs to ( locations )", "pred": "List all the distinct locations.", "label": "What are the distinct location names?"}
{"idx": 1160, "logic": "( model name ) that belongs to ( chip model ), and except that ( ( chip model ) that belongs to ( phone ) , that have ( ( accreditation type ) equal to ( 'full' ) ))", "pred": "What are the names of chip models that do not have accreditation type 'Full'", "label": "Find the names of the chip models that are not used by any phone with full accreditation type."}
{"idx": 1161, "logic": "( the number of ( distinct ( position of member of club ) ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) ) , that have ( ( clubname of club ) equal to ( bootup baltimore ) )", "pred": "Find the number of members of club \"Bootup Baltimore\".", "label": "Count the number of different positions in the club \"Bootup Baltimore\"."}
{"idx": 1162, "logic": "( nationality ) that belongs to ( host ) , that have ( ( age ) greater than ( 45 ) ), and intersect with ( ( nationality ) that belongs to ( host ) , that have ( ( age ) less than ( 35 ) ))", "pred": "Show the nationality of hosts who are older than 45 and younger than 35.", "label": "Which nations have both hosts of age above 45 and hosts of age below 35?"}
{"idx": 1163, "logic": "( region name ) that belongs to ( region ) , ordered by ( ( region name ) )", "pred": "List the name of regions in alphabetical order of region name.", "label": "List all region names in alphabetical order."}
{"idx": 1164, "logic": "( shop name of enzyme ) , ( carrier of staff ) that belongs to ( ( stock ) , and ( ( device ) satisfied that ( ( device id of addresses ) equal to ( device id of staff ) ) ) , and ( ( shop ) satisfied that ( ( shop id of addresses ) equal to ( shop id of enzyme ) ) ) )", "pred": "What are the names and carriers of devices that are in stock in the shop?", "label": "Show names of shops and the carriers of devices they have in stock."}
{"idx": 1165, "logic": "( campus of addresses ) that belongs to ( ( campuses ) , and ( ( faculty ) satisfied that ( ( id of club ) equal to ( campus of member of club ) ) ) ) , that have ( ( ( faculty of member of club ) greater than or equal to ( 600 ) ) and ( ( faculty of member of club ) less than or equal to ( 1000 ) ) and ( ( year of addresses ) equal to ( 2004 ) ) )", "pred": "Which campuses have at least 600 faculty and at least 1000 faculty in 2004?", "label": "What are the campuses that had between 600 and 1000 faculty members in 2004?"}
{"idx": 1166, "logic": "( distinct ( firstname of addresses ) ) , ( lastname of addresses ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( grade of addresses ) equal to ( 1 ) ), and except that ( ( firstname of addresses ) , ( lastname of addresses ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of staff ) equal to ( otha ) ) and ( ( lastname of staff ) equal to ( moyer ) ) ))", "pred": "What are the first and last names of all the teachers who teach students with grade 1 but not Moyer?", "label": "Find all first-grade students who are NOT taught by OTHA MOYER. Report their first and last names."}
{"idx": 1167, "logic": "( customer name of staff ) that belongs to ( ( orders ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of staff ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )", "pred": "Find the names of customers who have made at least two orders.", "label": "What are the names of the customers who have made two or less orders?"}
{"idx": 1168, "logic": "( the average of ( price ) ) that belongs to ( wine ) , that have ( ( appelation ) not in ( ( appelation of addresses ) that belongs to ( ( appellations ) , and ( ( wine ) satisfied that ( ( appelation of addresses ) equal to ( appelation of staff ) ) ) ) , that have ( ( county of addresses ) equal to ( 'sonoma' ) ) ) )", "pred": "Find the average price of wines produced by the appelations not in Sonoma county.", "label": "What is the average price for wines not produced in Sonoma county?"}
{"idx": 1169, "logic": "( start station name ) , ( start station id ) that belongs to ( trip ) , that have ( ( start_date ) like ( 8/% ) ) , grouped by ( start station name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and id of the start station that started with the 8/% start date.", "label": "What are the start station's name and id for the one that had the most start trips in August?"}
{"idx": 1170, "logic": "( advisor ) , ( the number of ( all items ) ) that belongs to ( student ) , grouped by ( advisor )", "pred": "Show advisors and the number of students they advise.", "label": "How many students does each advisor have?"}
{"idx": 1171, "logic": "( category ) , ( the number of ( all items ) ) that belongs to ( music festival ) , grouped by ( category )", "pred": "Show each category and the number of music festivals in that category.", "label": "Return the number of music festivals of each category."}
{"idx": 1172, "logic": "( name of addresses ) that belongs to ( ( actor ) , and ( ( musical ) satisfied that ( ( musical id of addresses ) equal to ( musical id of staff ) ) ) ) , ordered by ( ( year of staff ) in descending order )", "pred": "List the names of actors in musicals in descending order of year.", "label": "Show names of actors in descending order of the year their musical is awarded."}
{"idx": 1173, "logic": "( name ) that belongs to ( county public safety ) , ordered by ( ( population ) in descending order )", "pred": "List the name of counties in descending order of population.", "label": "List the names of counties in descending order of population."}
{"idx": 1174, "logic": "( classroom ) , ( the number of ( all items ) ) that belongs to ( list ) , that have ( ( grade ) equal to ( 0 ) ) , grouped by ( classroom )", "pred": "Show classroom number and the number of students in grade 0.", "label": "For each grade 0 classroom, return the classroom number and the count of students."}
{"idx": 1175, "logic": "( customer name ) that belongs to ( customers ) , that have ( ( payment method ) equal to ( payment method ) that belongs to ( customers ) , grouped by ( payment method ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) )", "pred": "Find the name of the customer who has used the payment method most frequently.", "label": "Find the name of the customers who use the most frequently used payment method."}
{"idx": 1176, "logic": "( distinct ( grape of addresses ) ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , that have ( ( ( color of addresses ) equal to ( white ) ) and ( ( score of staff ) greater than ( 90 ) ) )", "pred": "What are the distinct grape names of wines with color white and score higher than 90?", "label": "Find the white grape used to produce wines with scores above 90."}
{"idx": 1177, "logic": "( card type code ) , ( the number of ( distinct ( customer id ) ) ) that belongs to ( customers cards ) , grouped by ( card type code )", "pred": "Show card type code and the number of distinct customers using each card type.", "label": "What are the different card type codes, and how many different customers hold each type?"}
{"idx": 1178, "logic": "( address of staff ) that belongs to ( ( staff ) , and ( ( address ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( first name of addresses ) equal to ( 'elsa' ) )", "pred": "Find the address of the staff member with first name Elsa.", "label": "Where does the staff member with the first name Elsa live?"}
{"idx": 1179, "logic": "( the maximum of ( population ) ) , ( the minimum of ( population ) ) that belongs to ( county )", "pred": "Show the maximum and minimum population of all counties.", "label": "Return the maximum and minimum population among all counties."}
{"idx": 1180, "logic": "( customer name of club ) that belongs to ( ( customers ) , and ( ( first notification of loss ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( services ) satisfied that ( ( service id of member of club ) equal to ( service id of student ) ) ) ) , that have ( ( service name of student ) equal to ( close a policy ) ), and intersect with ( ( customer name of club ) that belongs to ( ( customers ) , and ( ( first notification of loss ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( services ) satisfied that ( ( service id of member of club ) equal to ( service id of student ) ) ) ) , that have ( ( service name of student ) equal to ( new policy application ) ))", "pred": "Find the names of customers who have both closed a policy and have started a new policy application.", "label": "Find the names of customers who have used both the service \"Close a policy\" and the service \"New policy application\"."}
{"idx": 1181, "logic": "( product category code ) , ( typical buying price ) that belongs to ( products ) , that have ( ( product name ) equal to ( cumin ) )", "pred": "What is the category code and typical buying price of the product with name \"Cumin\"?", "label": "What is the category and typical buying price  of the product with name \"cumin\"?"}
{"idx": 1182, "logic": "( the number of ( all items ) ) that belongs to ( airports ) , that have ( ( name ) like ( '%international%' ) )", "pred": "Count the number of airports whose name contains the word \"International\".", "label": "Find the number of airports whose name contain the word 'International'."}
{"idx": 1183, "logic": "( name ) that belongs to ( buildings ) , ordered by ( ( height ) in descending order )", "pred": "List the name of buildings in descending order of height.", "label": "What are the names of buildings sorted in descending order of building height?"}
{"idx": 1184, "logic": "( name of addresses ) , ( hours of addresses ) that belongs to ( ( projects ) , and ( ( assignedto ) satisfied that ( ( code of addresses ) equal to ( project of staff ) ) ) ) , grouped by ( project of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name and hours of the project that has been assigned the most times.", "label": "Find the name and hours of project that has the most number of scientists."}
{"idx": 1185, "logic": "( the number of ( all items ) ) that belongs to ( player )", "pred": "Count the number of players.", "label": "How many players are there?"}
{"idx": 1186, "logic": "( statement id of addresses ) , ( statement details of staff ) , ( account details of addresses ) that belongs to ( ( accounts ) , and ( ( statements ) satisfied that ( ( statement id of addresses ) equal to ( statement id of staff ) ) ) )", "pred": "What are the ids, details, and account details for all the statements?", "label": "What are the statement ids, statement details, and account details, for all accounts?"}
{"idx": 1187, "logic": "( aircraft of addresses ) , ( description of addresses ) that belongs to ( ( aircraft ) , and ( ( airport aircraft ) satisfied that ( ( aircraft id of addresses ) equal to ( aircraft id of staff ) ) ) , and ( ( airport ) satisfied that ( ( airport id of staff ) equal to ( airport id of enzyme ) ) ) ) , that have ( ( total passengers of enzyme ) greater than ( 10000000 ) )", "pred": "What are the names and descriptions of all the aircrafts that are associated with airports with total passengers above 10000000?", "label": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000."}
{"idx": 1188, "logic": "( id ) that belongs to ( station ) , that have ( ( lat ) greater than ( 4 of 37 ) ), and except that ( ( station id ) that belongs to ( status ) , grouped by ( station id ) , that have ( ( the minimum of ( bikes available ) ) less than ( 7 ) ))", "pred": "What are the ids of stations that have more than 37 bikes available but no bikes available?", "label": "What are the ids of all stations that have a latitude above 37.4 and have never had less than 7 bikes available?"}
{"idx": 1189, "logic": "( order id ) that belongs to ( shipments ) , that have ( ( shipment tracking number ) equal to ( 3452 ) )", "pred": "What is the order id of the shipment tracking number 3452?", "label": "Find the id of the order whose shipment tracking number is \"3452\"."}
{"idx": 1190, "logic": "( catalog entry name ) that belongs to ( catalog contents ) , ordered by ( ( capacity ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the entry name of the catalog with the most capacity.", "label": "Find the name of the product that has the smallest capacity."}
{"idx": 1191, "logic": "( the sum of ( share in percent ) ) that belongs to ( channel ) , that have ( ( owner ) equal to ( 'cctv' ) )", "pred": "Find the total share in percent of channels owned by CCTV.", "label": "What is the total share (in percent) of all the channels owned by CCTV?"}
{"idx": 1192, "logic": "( name of addresses ) , ( height of staff ) that belongs to ( ( climber ) , and ( ( mountain ) satisfied that ( ( mountain id of addresses ) equal to ( mountain id of staff ) ) ) )", "pred": "Show the names and heights of climbers who climbed mountains.", "label": "What are the names of climbers and the corresponding heights of the mountains that they climb?"}
{"idx": 1193, "logic": "( date of birth ) that belongs to ( customers ) , that have ( ( customer status code ) equal to ( 'good customer' ) )", "pred": "Find the date of birth of the customer with status code 'Good Customer'.", "label": "When are the birthdays of customer who are classified as 'Good Customer' status?"}
{"idx": 1194, "logic": "( distinct ( card type code ) ) that belongs to ( customers cards )", "pred": "List the distinct card type codes.", "label": "What are the different card type codes?"}
{"idx": 1195, "logic": "( name of addresses ) , ( long of addresses ) , ( the average of ( duration of staff ) ) that belongs to ( ( station ) , and ( ( trip ) satisfied that ( ( id of addresses ) equal to ( start station id of staff ) ) ) ) , grouped by ( start station id of staff )", "pred": "Show the name, longitude, and average duration of trips that started at each start station.", "label": "For each station, return its longitude and the average duration of trips that started from the station."}
{"idx": 1196, "logic": "( country ) that belongs to ( competition ) , that have ( ( competition type ) equal to ( 'friendly' ) ), and intersect with ( ( country ) that belongs to ( competition ) , that have ( ( competition type ) equal to ( 'tournament' ) ))", "pred": "Show the countries that have both friendly and tournament competitions.", "label": "What are the countries that participated in both friendly and tournament type competitions?"}
{"idx": 1197, "logic": "( date ) that belongs to ( game ) , ordered by ( ( home team ) in descending order )", "pred": "List the dates of games in descending order of home team.", "label": "List the dates of games by the home team name in descending order."}
{"idx": 1198, "logic": "( census ranking ) that belongs to ( city ) , that have ( ( status ) not equal to ( village ) )", "pred": "What is the census ranking of cities whose status is not \"Village\"", "label": "What are the census rankings of cities that do not have the status \"Village\"?"}
{"idx": 1199, "logic": "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , that have ( ( loan type ) equal to ( 'mortgages' ) ), and intersect with ( ( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , that have ( ( loan type ) equal to ( 'auto' ) ))", "pred": "What are the names of the customers who have both loans of Mortgages and Auto?", "label": "Find the name of customers who have loans of both Mortgages and Auto."}
{"idx": 1200, "logic": "( product name ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of inst ) ) ) ) , that have ( ( ( color description of inst ) equal to ( red ) ) and ( ( characteristic name of student ) equal to ( fast ) ) )", "pred": "What are the names of the products that have the color description \"Red\" and the characteristic name Fast?", "label": "Find the name of the products that have the color description \"red\" and have the characteristic name \"fast\"."}
{"idx": 1201, "logic": "( date from ) , ( date to ) that belongs to ( project staff ) , that have ( ( project_id ) in ( ( ( project id ) that belongs to ( project staff ) , grouped by ( project id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) ) ) ) and ( date from ) , ( date to ) that belongs to ( project staff ) , that have ( ( role code ) equal to ( 'leader' ) )", "pred": "Find the date from and date to the project that has the most staff with role code 'leader'.", "label": "List from which date and to which date these staff work: project staff of the project which hires the most staffs"}
{"idx": 1202, "logic": "( the number of ( all items ) ) , ( gender ) that belongs to ( artist ) , grouped by ( gender )", "pred": "Count the number of artists for each gender.", "label": "What is the number of artists for each gender?"}
{"idx": 1203, "logic": "( the average of ( gradepoint of staff ) ) that belongs to ( ( enrolled in ) join ( ( gradeconversion ) ) , and ( ( student ) satisfied that ( ( ( grade of addresses ) equal to ( lettergrade of staff ) ) and ( ( stuid of addresses ) equal to ( stuid of enzyme ) ) ) ) ) , that have ( ( lname of enzyme ) equal to ( smith ) )", "pred": "What is the average gradepoint of the students who are enrolled in the lettergrade of Smith?", "label": "Find the average grade point of student whose last name is Smith."}
{"idx": 1204, "logic": "( student id ) that belongs to ( student course attendance ) , that have ( ( course id ) equal to ( 301 ) ) , ordered by ( ( date of attendance ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id of the student who attended the course 301 most recently.", "label": "What are the ids of the students who registered for course 301 most recently?"}
{"idx": 1205, "logic": "( individual last name of student ) that belongs to ( ( organizations ) , and ( ( organization contact individuals ) satisfied that ( ( organization id of club ) equal to ( organization id of member of club ) ) ) , and ( ( individuals ) satisfied that ( ( individual id of member of club ) equal to ( individual id of student ) ) ) ) , that have ( ( uk vat number of club ) equal to ( the maximum of ( uk vat number ) ) that belongs to ( organizations ) ) , ordered by ( ( date contact to of member of club ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the last name of the contact individual who contacted the organization with the most uk vat numbers.", "label": "Find the last name of the first ever contact person of the organization with the highest UK Vat number."}
{"idx": 1206, "logic": "( product name ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of inst ) ) ) ) , that have ( ( ( color description of inst ) equal to ( red ) ) and ( ( characteristic name of student ) equal to ( fast ) ) )", "pred": "What are the names of the products that have the color description \"Red\" and the characteristic name Fast?", "label": "What are the names of the products that have a color description of'red' and the 'fast' characteristic?"}
{"idx": 1207, "logic": "( fname ) , ( lname ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of addresses ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( food ) ) ) )", "pred": "What are the first and last names of all students who do not have any allergies to food?", "label": "What is the full name of each student who is not allergic to any type of food."}
{"idx": 1208, "logic": "( the number of ( all items ) ) that belongs to ( ( employees ) , and ( ( customers ) satisfied that ( ( support rep id of staff ) equal to ( id of addresses ) ) ) ) , that have ( ( ( first name of addresses ) equal to ( steve ) ) and ( ( last name of addresses ) equal to ( johnson ) ) )", "pred": "Find the number of customers who have Steve Johnson as a customer.", "label": "How many customers does Steve Johnson support?"}
{"idx": 1209, "logic": "( the minimum of ( hs of staff ) ) , ( ppos of addresses ) that belongs to ( ( tryout ) , and ( ( player ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , grouped by ( ppos of addresses )", "pred": "What is the minimum, maximum, and ppos of tryouts for each student?", "label": "What is minimum hours of the students playing in different position?"}
{"idx": 1210, "logic": "( name ) , ( open date ) , ( organized by ) that belongs to ( church )", "pred": "List the name, opening date, and organized by churches.", "label": "Show the name, open date, and organizer for all churches."}
{"idx": 1211, "logic": "( customer details of member of club ) that belongs to ( ( policies ) , and ( ( customers ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( start date of club ) equal to ( the maximum of ( start date ) ) that belongs to ( policies ) )", "pred": "What are the details of the customers who started the most policies?", "label": "Which customer is associated with the latest policy?"}
{"idx": 1212, "logic": "( the number of ( all items ) ) that belongs to ( products ) , that have ( ( product_id ) not in ( ( product id ) that belongs to ( order items ) ) )", "pred": "Count the number of products that have not been ordered.", "label": "How many products were not included in any order?"}
{"idx": 1213, "logic": "( the number of ( all items ) ) that belongs to ( enzyme ) , that have ( ( id ) not in ( ( enzyme id ) that belongs to ( medicine enzyme interaction ) ) )", "pred": "Count the number of enzymes that do not interact with medicine.", "label": "How many enzymes do not have any interactions?"}
{"idx": 1214, "logic": "( fname of addresses ) , ( lname of addresses ) that belongs to ( ( faculty ) , and ( ( member of ) satisfied that ( ( facid of addresses ) equal to ( facid of staff ) ) ) ) , that have ( ( dno of staff ) equal to ( 520 ) )", "pred": "What are the first names and last names of all faculty members who have dno 520.", "label": "Find the full names of faculties who are members of department with department number 520."}
{"idx": 1215, "logic": "( name of addresses ) that belongs to ( ( tracks ) , and ( ( invoice lines ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( invoices ) satisfied that ( ( id of enzyme ) equal to ( invoice id of staff ) ) ) , and ( ( customers ) satisfied that ( ( id of trip ) equal to ( customer id of enzyme ) ) ) ) , that have ( ( ( first name of trip ) equal to ( daan ) ) and ( ( last name of trip ) equal to ( peeters ) ) )", "pred": "What are the names of the tracks that Daan Peeters has made?", "label": "What are the tracks that Dean Peeters bought?"}
{"idx": 1216, "logic": "( distinct ( customer name of addresses ) ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) , and ( ( order items ) satisfied that ( ( order id of staff ) equal to ( order id of enzyme ) ) ) , and ( ( products ) satisfied that ( ( product id of enzyme ) equal to ( product id of trip ) ) ) ) , that have ( ( product name of trip ) equal to ( keyboard ) )", "pred": "What are the distinct names of the customers who have an order with the product named Keyboard?", "label": "What are the distinct names of customers who have purchased a keyboard?"}
{"idx": 1217, "logic": "( name ) that belongs to ( circuits ) , that have ( ( ( country ) equal to ( uk ) ) or ( ( country ) equal to ( malaysia ) ) )", "pred": "List the names of circuits in UK or Malaysia.", "label": "What are the names of all the circuits that are in the UK or Malaysia?"}
{"idx": 1218, "logic": "( price ) that belongs to ( wine ) , that have ( ( year ) less than ( 2010 ) )", "pred": "Find the price of wines produced before 2010.", "label": "What are the prices of wines produced before the year of 2010?"}
{"idx": 1219, "logic": "( the minimum of ( seating ) ) , ( the maximum of ( seating ) ) , ( the average of ( seating ) ) that belongs to ( track )", "pred": "Show the minimum, maximum, and average seating for all tracks.", "label": "What is the minimum, maximum, and average seating for all tracks."}
{"idx": 1220, "logic": "( distinct ( blockcode ) ) that belongs to ( room ) , that have ( ( unavailable ) equal to ( 0 ) )", "pred": "Find the distinct block codes of rooms that are unavailable.", "label": "Tell me the distinct block codes where some rooms are available."}
{"idx": 1221, "logic": "( team ) that belongs to ( elimination ) , grouped by ( team ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )", "pred": "Show the teams that have more than 3 elimination.", "label": "Which teams had more than 3 eliminations?"}
{"idx": 1222, "logic": "( student id of staff ) that belongs to ( ( courses ) , and ( ( student course registrations ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( course name of addresses ) equal to ( statistics ) ) , ordered by ( ( registration date of staff ) )", "pred": "What are the ids of the students who registered courses in Statistics, ordered by registration date?", "label": "List the id of students who registered course statistics in the order of registration date."}
{"idx": 1223, "logic": "( distinct ( visit date ) ) that belongs to ( visits )", "pred": "List the distinct visit dates for all visits.", "label": "Find all the distinct visit dates."}
{"idx": 1224, "logic": "( city town of addresses ) that belongs to ( ( addresses ) , and ( ( stores ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( store name of staff ) equal to ( fja filming ) )", "pred": "Find the city of the store named \"Fja filming\".", "label": "Which city is the address of the store named \"FJA Filming\" located in?"}
{"idx": 1225, "logic": "( the number of ( distinct ( customer id ) ) ) that belongs to ( customer orders ) , that have ( ( order status ) equal to ( cancelled ) )", "pred": "Count the number of distinct customers who have orders with status Cancelled.", "label": "How many customers have at least one order with status \"Cancelled\"?"}
{"idx": 1226, "logic": "( name of addresses ) that belongs to ( ( user profiles ) , and ( ( follows ) satisfied that ( ( uid of addresses ) equal to ( f1 of staff ) ) ) ) , grouped by ( f1 of staff ) , that have ( ( the number of ( all items ) ) greater than ( the number of ( all items ) ) that belongs to ( ( user profiles ) , and ( ( follows ) satisfied that ( ( uid of addresses ) equal to ( f1 of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( 'tyler swift' ) ) )", "pred": "What are the names of the users who have followed more than one user?", "label": "Find the names of the users whose number of followers is greater than that of the user named \"Tyler Swift\"."}
{"idx": 1227, "logic": "( the number of ( all items ) ) that belongs to ( roles )", "pred": "Count the number of roles.", "label": "Count the total number of roles listed."}
{"idx": 1228, "logic": "( distinct ( product name ) ) that belongs to ( product ) , ordered by ( ( product name ) )", "pred": "List the distinct names of all products in alphabetical order of name", "label": "Sort all the distinct product names in alphabetical order."}
{"idx": 1229, "logic": "( the sum of ( domestic passengers ) ) that belongs to ( airport ) , that have ( ( airport_name ) like ( %london% ) )", "pred": "Find the total number of domestic passengers for all airports whose name contains the letter London.", "label": "What are the total number of Domestic Passengers of airports that contain the word \"London\"."}
{"idx": 1230, "logic": "( the average of ( age ) ) that belongs to ( artist )", "pred": "Show the average age of all artists.", "label": "What is the average age of all artists?"}
{"idx": 1231, "logic": "( city ) , ( state ) that belongs to ( bank ) , that have ( ( bname ) equal to ( 'morningside' ) )", "pred": "What are the cities and states of banks whose name is 'Morningside'", "label": "Find the city and state of the bank branch named morningside."}
{"idx": 1232, "logic": "( the sum of ( revenue ) ) that belongs to ( manufacturers ) , that have ( ( ( headquarter ) equal to ( 'tokyo' ) ) or ( ( headquarter ) equal to ( 'taiwan' ) ) )", "pred": "Find the total revenue of manufacturers headquartered in Tokyo or Taiwan.", "label": "Return the total revenue of companies with headquarters in Tokyo or Taiwan."}
{"idx": 1233, "logic": "( distinct ( district ) ) that belongs to ( election )", "pred": "List the distinct districts of elections.", "label": "Show all the distinct districts for elections."}
{"idx": 1234, "logic": "( date of birth ) that belongs to ( staff ) , that have ( ( ( first name ) equal to ( janessa ) ) and ( ( last name ) equal to ( sawayn ) ) )", "pred": "What are the dates of birth of the staff members whose first name is Janessa and last name is Sawayn.", "label": "What is the date of birth for the staff member named Janessa Sawayn?"}
{"idx": 1235, "logic": "( f id ) that belongs to ( files ) , that have ( ( formats ) equal to ( mp4 ) ), and intersect with ( ( f id ) that belongs to ( song ) , that have ( ( resolution ) less than ( 1000 ) ))", "pred": "What are the ids of all files in mp4 format and mp5 format with resolution below 1000?", "label": "Find the id of songs that are available in mp4 format and have resolution lower than 1000."}
{"idx": 1236, "logic": "( employee id ) , ( first name ) , ( last name ) , ( salary ) that belongs to ( employees ) , that have ( ( ( salary ) greater than ( the average of ( salary ) ) that belongs to ( employees ) ) and ( ( department id ) in ( ( department id ) that belongs to ( employees ) , that have ( ( first name ) like ( '%j%' ) ) ) ) )", "pred": "What are the employee ids, first names, last names, and salaries for employees whose salary is higher than the average salary of all employees in the department?", "label": "What are the ids, full names, and salaries for employees making more than average and who work in a department with employees who have the letter J in their first name?"}
{"idx": 1237, "logic": "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( 'russia' ) )", "pred": "Count the number of airlines from Russia.", "label": "What is the number of airlines based in Russia?"}
{"idx": 1238, "logic": "( title of student ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( papers ) satisfied that ( ( paperid of member of club ) equal to ( paperid of student ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of inst ) ) ) ) , that have ( ( ( country of inst ) equal to ( japan ) ) and ( ( authorder of member of club ) equal to ( 1 ) ) and ( ( lname of club ) equal to ( ohori ) ) )", "pred": "What are the titles of the papers published in Japan and Ohori?", "label": "Find the titles of papers whose first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"?"}
{"idx": 1239, "logic": "( name of addresses ) that belongs to ( ( tourist attractions ) , and ( ( visits ) satisfied that ( ( tourist attraction id of addresses ) equal to ( tourist attraction id of staff ) ) ) , and ( ( visitors ) satisfied that ( ( tourist id of staff ) equal to ( tourist id of enzyme ) ) ) ) , that have ( ( tourist details of enzyme ) equal to ( vincent ) )", "pred": "What are the names of the tourist attractions visited by the tourist with details Vincent?", "label": "Show the tourist attractions visited by the tourist whose detail is 'Vincent'."}
{"idx": 1240, "logic": "( rank ) that belongs to ( captain ) , grouped by ( rank ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the rank of the captain with the most captain.", "label": "Return the rank for which there are the fewest captains."}
{"idx": 1241, "logic": "( semester ) , ( year ) that belongs to ( takes ) , grouped by ( semester ) , ( year ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )", "pred": "Find the semester and year that has the most takes.", "label": "Find the semester and year which has the least number of student taking any class."}
{"idx": 1242, "logic": "( distinct ( product name ) ) that belongs to ( products ) , that have ( ( product price ) greater than ( the average of ( product price ) ) that belongs to ( products ) )", "pred": "What are the distinct names of the products with a price higher than the average?", "label": "Show all the distinct product names with price higher than the average."}
{"idx": 1243, "logic": "( campus ) that belongs to ( campuses ) , that have ( ( ( county ) equal to ( los angeles ) ) and ( ( year ) greater than ( 1950 ) ) )", "pred": "Find the campus in Los Angeles county after 1950.", "label": "Which university is in Los Angeles county and opened after 1950?"}
{"idx": 1244, "logic": "( planned delivery date ) , ( actual delivery date ) that belongs to ( bookings )", "pred": "List the planned delivery date and actual delivery date of all bookings.", "label": "What are the planned delivery date and actual delivery date for each booking?"}
{"idx": 1245, "logic": "( decor ) , ( the number of ( all items ) ) that belongs to ( rooms ) , that have ( ( bedtype ) equal to ( king ) ) , grouped by ( decor )", "pred": "Show the decor and the number of rooms that have king bed.", "label": "How many rooms have king beds? Report the number for each decor type."}
{"idx": 1246, "logic": "( college ) that belongs to ( submission ) , that have ( ( scores ) greater than ( 90 ) ), and intersect with ( ( college ) that belongs to ( submission ) , that have ( ( scores ) less than ( 80 ) ))", "pred": "Show the colleges that have both submissions with scores higher than 90 and submissions with score below 80.", "label": "Show the colleges that have both authors with submission score larger than 90 and authors with submission score smaller than 80."}
{"idx": 1247, "logic": "( the sum of ( amount claimed of club ) ) that belongs to ( ( claim headers ) , and ( ( claims documents ) satisfied that ( ( claim header id of club ) equal to ( claim id of member of club ) ) ) ) , that have ( ( created date of member of club ) equal to ( created date ) that belongs to ( claims documents ) , ordered by ( ( created date ) ) , limited to the top ( 1 ) )", "pred": "Find the total amount claimed for the claim with the most recent created date.", "label": "Find the total amount claimed in the most recently created document."}
{"idx": 1248, "logic": "( phone ) that belongs to ( employee )", "pred": "List the phones of all employees.", "label": "What are the phone numbers for each employee?"}
{"idx": 1249, "logic": "( dept name ) that belongs to ( course ) , grouped by ( dept name ) , ordered by ( ( the sum of ( credits ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the department with the most credits.", "label": "What is the name of the department with the most credits?"}
{"idx": 1250, "logic": "( party theme ) that belongs to ( party ) , ordered by ( ( number of hosts ) in ascending order )", "pred": "List the theme of parties in ascending order of number of hosts.", "label": "List the themes of parties in ascending order of number of hosts."}
{"idx": 1251, "logic": "( the average of ( price ) ) , ( the average of ( score ) ) , ( appelation ) that belongs to ( wine ) , grouped by ( appelation )", "pred": "Show the average price, average score, and appelation for wines for each appel.", "label": "What are the average price and score of wines for each appelation?"}
{"idx": 1252, "logic": "( decor of staff ) that belongs to ( ( reservations ) , and ( ( rooms ) satisfied that ( ( room of addresses ) equal to ( roomid of staff ) ) ) ) , grouped by ( decor of staff ) , ordered by ( ( the number of ( decor of staff ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the decor of the room that has made the most reservations.", "label": "What is the least popular kind of decor?"}
{"idx": 1253, "logic": "( dept name of trip ) that belongs to ( ( class ) , and ( ( enroll ) satisfied that ( ( class code of addresses ) equal to ( class code of staff ) ) ) , and ( ( course ) satisfied that ( ( crs code of addresses ) equal to ( crs code of enzyme ) ) ) , and ( ( department ) satisfied that ( ( dept code of enzyme ) equal to ( dept code of trip ) ) ) ) , grouped by ( dept code of enzyme ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the department that has enrolled the most students.", "label": "What is the name of the department that has the largest number of students enrolled?"}
{"idx": 1254, "logic": "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( country_id ) not in ( ( country id ) that belongs to ( roller coaster ) , that have ( ( length ) greater than ( 3000 ) ) ) )", "pred": "Count the number of countries that do not have roller coasters longer than 3000.", "label": "How many countries do not have an roller coaster longer than 3000?"}
{"idx": 1255, "logic": "( date ) that belongs to ( weather ) , that have ( ( ( zip code ) equal to ( 94107 ) ) and ( ( events ) not equal to ( fog ) ) and ( ( events ) not equal to ( rain ) ) )", "pred": "What are the dates of the events that are not in zip code 94107 and not in fog or rain?", "label": "On which day has it neither been foggy nor rained in the zip code of 94107?"}
{"idx": 1256, "logic": "( emp fname of enzyme ) , ( emp lname of enzyme ) that belongs to ( ( professor ) , and ( ( department ) satisfied that ( ( dept code of addresses ) equal to ( dept code of staff ) ) ) , and ( ( employee ) satisfied that ( ( emp num of addresses ) equal to ( emp num of enzyme ) ) ) ) , that have ( ( dept name ) equal to ( biology ) )", "pred": "What are the first and last names of the professors who are in Biology department?", "label": "What is the first and last name of the professor in biology department?"}
{"idx": 1257, "logic": "( name ) that belongs to ( physician ) , that have ( ( position ) like ( '%senior%' ) )", "pred": "Find the names of physicians who hold the position of Junior.", "label": "What are the names of the physicians who have'senior' in their titles."}
{"idx": 1258, "logic": "( length ) , ( height ) that belongs to ( roller coaster )", "pred": "List the length and height of all roller coasters.", "label": "What are the lengths and heights of roller coasters?"}
{"idx": 1259, "logic": "( the number of ( all items ) ) that belongs to ( customers )", "pred": "Count the number of customers.", "label": "How many customers do we have?"}
{"idx": 1260, "logic": "( date claim made ) that belongs to ( claims ) , ordered by ( ( date claim made ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the date of the claim made the most recently.", "label": "Of all the claims, what was the earliest date when any claim was made?"}
{"idx": 1261, "logic": "( dname of club ) that belongs to ( ( department ) , and ( ( dept locations ) satisfied that ( ( dnumber of club ) equal to ( dnumber of member of club ) ) ) ) , that have ( ( dlocation of member of club ) equal to ( 'houston' ) )", "pred": "What are the names of the departments located in Houston?", "label": "Find the names of departments that are located in Houston."}
{"idx": 1262, "logic": "( emp fname of staff ) that belongs to ( ( class ) , and ( ( employee ) satisfied that ( ( prof num of addresses ) equal to ( emp num of staff ) ) ) ) , grouped by ( prof num of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )", "pred": "What is the first name of the prof who teaches more than one class?", "label": "Find the first names of professors who are teaching more than one class."}
{"idx": 1263, "logic": "( studio ) that belongs to ( film ), and except that ( ( studio ) that belongs to ( film ) , that have ( ( director ) equal to ( walter hill ) ))", "pred": "Show all studios that do not have any films directed by Walter Hill.", "label": "Show the studios that have not produced films with director \"Walter Hill\"."}
{"idx": 1264, "logic": "( job id ) that belongs to ( job history ) , that have ( ( ( end date ) minus ( start date ) ) greater than ( 300 ) ) , grouped by ( job id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What are the ids of jobs with end date minus start date and end date greater than 300 and jobs with at least two job history?", "label": "display job ID for those jobs that were done by two or more for more than 300 days."}
{"idx": 1265, "logic": "( investor ) that belongs to ( entrepreneur ) , grouped by ( investor ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show the investors who have invested in at least two entrepreneurs.", "label": "What are the investors that have invested in at least two entrepreneurs?"}
{"idx": 1266, "logic": "( date of latest logon ) that belongs to ( students ) , that have ( ( ( family name ) equal to ( jaskolski ) ) or ( ( family name ) equal to ( langosh ) ) )", "pred": "What is the latest logon of the student whose family name is \"Jaskolski\" or \"Langosh\"", "label": "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?"}
{"idx": 1267, "logic": "( location ) that belongs to ( perpetrator ) , ordered by ( ( killed ) in descending order ) , limited to the top ( 1 )", "pred": "Find the location of the perpetrator who has been killed most times.", "label": "What is the location of the perpetrator with the largest kills."}
{"idx": 1268, "logic": "( gname ) , ( gtype ) that belongs to ( video games ) , ordered by ( ( gname ) )", "pred": "List the first name and type of video games in alphabetical order of name.", "label": "What are the names of all the video games and their types in alphabetical order?"}
{"idx": 1269, "logic": "( product of club ) that belongs to ( ( product ) , and ( ( store product ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( store ) satisfied that ( ( store id of member of club ) equal to ( store id of student ) ) ) ) , that have ( ( store name of student ) equal to ( miramichi ) )", "pred": "Find the product of the store named \"Miramichi\".", "label": "What products are sold at the store named Miramichi?"}
{"idx": 1270, "logic": "( customer id of addresses ) , ( customer first name of staff ) , ( customer last name of staff ) that belongs to ( ( customers cards ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "What are the id, first name, and last name of the customers who have at least two cards?", "label": "What are the ids and full names of customers who hold two or more cards?"}
{"idx": 1271, "logic": "( customer name of addresses ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( order status code of staff ) equal to ( 'completed' ) ), and intersect with ( ( customer name of addresses ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( order status code of staff ) equal to ( 'part' ) ))", "pred": "Find the names of customers who have both completed and part orders.", "label": "Show the names of customers who have both an order in completed status and an order in part status."}
{"idx": 1272, "logic": "( email ) that belongs to ( user profiles ) , that have ( ( name ) equal to ( 'mary' ) )", "pred": "Find the email of the user whose name is Mary.", "label": "Find the emails of the user named \"Mary\"."}
{"idx": 1273, "logic": "( name of addresses ) that belongs to ( ( physician ) , and ( ( prescribes ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) ) , ordered by ( ( dose of staff ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the physician who prescribes the highest dose of medicine.", "label": "Find the physician who prescribed the highest dose. What is his or her name?"}
{"idx": 1274, "logic": "( the maximum of ( hs of addresses ) ) , ( ppos ) that belongs to ( ( player ) , and ( ( tryout ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , that have ( ( hs of addresses ) greater than ( 1000 ) ) , grouped by ( ppos of staff )", "pred": "What is the maximum and minimum hours of tryouts for players with hs greater than 1000 and ppos higher than 1000.", "label": "For each position, what is the maximum number of  hours for students who spent more than 1000 hours training?"}
{"idx": 1275, "logic": "( distinct ( gtype ) ) that belongs to ( video games )", "pred": "List all distinct types of video games.", "label": "What are the different types of video games?"}
{"idx": 1276, "logic": "( distinct ( firstname ) ) , ( lastname ) that belongs to ( teachers )", "pred": "List the first name and last name of all teachers.", "label": "Report the first name and last name of all the teachers."}
{"idx": 1277, "logic": "( the number of ( distinct ( s id ) ) ) that belongs to ( advisor )", "pred": "Count the number of advisors.", "label": "Count the number of students who have advisors."}
{"idx": 1278, "logic": "( amenity name of enzyme ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of addresses ) equal to ( dormid of staff ) ) ) , and ( ( dorm amenity ) satisfied that ( ( amenid of staff ) equal to ( amenid of enzyme ) ) ) ) , that have ( ( dorm name of addresses ) equal to ( 'smith hall' ) )", "pred": "What are the names of all the amenities that are associated with Smith Hall?", "label": "What are the names of the amenities that Smith Hall has?"}
{"idx": 1279, "logic": "( roomname of staff ) , ( rate of addresses ) , ( checkin of addresses ) , ( checkout of addresses ) that belongs to ( ( reservations ) , and ( ( rooms ) satisfied that ( ( room of addresses ) equal to ( roomid of staff ) ) ) ) , grouped by ( room of addresses ) , ordered by ( ( rate of addresses ) in descending order ) , limited to the top ( 1 )", "pred": "What is the name, rate, checkin, and checkout rate of the room with the highest rate of reservation?", "label": "Return the name, rate, check in and check out date for the room with the highest rate."}
{"idx": 1280, "logic": "( shop details of addresses ) that belongs to ( ( shops ) , and ( ( tourist attractions ) satisfied that ( ( shop id of addresses ) equal to ( tourist attraction id of staff ) ) ) ) , that have ( ( how to get there of staff ) equal to ( walk ) )", "pred": "What are the details of the shops that can get there by walking?", "label": "What are the details of the shops that can be accessed by walk?"}
{"idx": 1281, "logic": "( name first ) , ( name last ) that belongs to ( ( player ) , and ( ( all star ) satisfied that ( ( player id of addresses ) equal to ( player id of staff ) ) ) ) , that have ( ( year ) equal to ( 1998 ) )", "pred": "What are the first and last names of all the players in 1998?", "label": "What are first and last names of players participating in all star game in 1998?"}
{"idx": 1282, "logic": "( lastname of staff ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( stageposition ) equal to ( back ) ) , grouped by ( lastname ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the last name of the band mate who performed in the back position most times.", "label": "What is the last name of the musicians who has played back position the most?"}
{"idx": 1283, "logic": "( distinct ( name of addresses ) ) , ( age of addresses ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( name of staff ) ) ) ) , that have ( ( ( friend of staff ) equal to ( 'dan' ) ) or ( ( friend of staff ) equal to ( 'alice' ) ) )", "pred": "What are the distinct names and ages of the people who are friends with Dan Or Alice?", "label": "Find the name and age of the person who is a friend of Dan or Alice."}
{"idx": 1284, "logic": "( the sum of ( duration ) ) , ( the maximum of ( duration ) ) that belongs to ( trip ) , that have ( ( bike id ) equal to ( 636 ) )", "pred": "What is the total and maximum duration of trips with bike id 636?", "label": "What is the total and maximum duration of trips with bike id 636?"}
{"idx": 1285, "logic": "( company ) , ( main industry ) that belongs to ( company ) , that have ( ( headquarters ) not equal to ( 'usa' ) )", "pred": "What are the companies and main industries of companies whose headquarters are not \"USA\"", "label": "Show the company name and the main industry for all companies whose headquarters are not from USA."}
{"idx": 1286, "logic": "( distinct ( registration date ) ) , ( election cycle ) that belongs to ( voting record )", "pred": "What are the distinct registration date and election cycle of all voting records?", "label": "What are the distinct registration dates and the election cycles?"}
{"idx": 1287, "logic": "( customer name of club ) that belongs to ( ( customers ) , and ( ( customers policies ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , grouped by ( customer name of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the customer who has the most policies.", "label": "What is the name of the customer who has the most policies listed?"}
{"idx": 1288, "logic": "( first name of addresses ) , ( last name of addresses ) , ( customer id of addresses ) that belongs to ( ( customer ) , and ( ( payment ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the sum of ( amount ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the first name, last name, and id of the customer who made the most payment.", "label": "What is the full name and id of the customer who has the lowest total amount of payment?"}
{"idx": 1289, "logic": "( statement id of addresses ) , ( statement details of staff ) , ( account details of addresses ) that belongs to ( ( accounts ) , and ( ( statements ) satisfied that ( ( statement id of addresses ) equal to ( statement id of staff ) ) ) )", "pred": "What are the ids, details, and account details for all the statements?", "label": "Show statement id, statement detail, account detail for accounts."}
{"idx": 1290, "logic": "( speed ) that belongs to ( roller coaster ) , ordered by ( ( length ) in descending order ) , limited to the top ( 1 )", "pred": "Find the speed of the roller coaster with the longest length.", "label": "What are the speeds of the longest roller coaster?"}
{"idx": 1291, "logic": "( student id of addresses ) , ( last name of staff ) that belongs to ( ( behavior incident ) , and ( ( students ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ) , grouped by ( student id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id and last name of the student who has the most behavior incidents.", "label": "Find the id and last name of the student that has the most behavior incidents?"}
{"idx": 1292, "logic": "( detention type code of addresses ) , ( detention type description of staff ) that belongs to ( ( detention ) , and ( ( ref detention type ) satisfied that ( ( detention type code of addresses ) equal to ( detention type code of staff ) ) ) ) , grouped by ( detention type code of addresses ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "pred": "What is the code and description of the detention with the most number of detention?", "label": "What are the code and description of the least frequent detention type?"}
{"idx": 1293, "logic": "( distinct ( name of addresses ) ) that belongs to ( ( physician ) , and ( ( prescribes ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( medication ) satisfied that ( ( code of enzyme ) equal to ( medication of staff ) ) ) ) , that have ( ( name of enzyme ) equal to ( thesisin ) )", "pred": "What are the distinct names of physicians who prescribe the medication \"S thesisin\"", "label": "List the names of all the physicians who prescribe Thesisin as medication."}
{"idx": 1294, "logic": "( student id of addresses ) , ( the number of ( all items ) ) that belongs to ( ( students ) , and ( ( student course registrations ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ) , grouped by ( student id of addresses )", "pred": "Show the student id and the number of courses registered for each student.", "label": "List the id of students who registered some courses and the number of their registered courses?"}
{"idx": 1295, "logic": "( email ) , ( phone ) that belongs to ( customers ) , that have ( ( ( first name ) equal to ( astrid ) ) and ( ( last name ) equal to ( gruber ) ) )", "pred": "What is the email and phone number of the customer with first name Astrid and last name Gruber?", "label": "What is Astrid Gruber's email and phone number?"}
{"idx": 1296, "logic": "( name ) that belongs to ( procedures ) , that have ( ( cost ) greater than ( 1000 ) ), and except that ( ( name of enzyme ) that belongs to ( ( physician ) , and ( ( trained in ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( procedures ) satisfied that ( ( code of enzyme ) equal to ( treatment of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( john wen ) ))", "pred": "Find the names of procedures that cost more than 1000 but are not trained by physician John Wen.", "label": "Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?"}
{"idx": 1297, "logic": "( rid ) that belongs to ( rating ) , that have ( ( stars ) not equal to ( 4 ) )", "pred": "What are the rid of the ratings whose rating is not 4.", "label": "What are the ids of all reviewers who have not given 4 stars at least once?"}
{"idx": 1298, "logic": "( the number of ( all items ) ) that belongs to ( projects )", "pred": "Count the number of projects.", "label": "How many projects are there?"}
{"idx": 1299, "logic": "( the number of ( distinct ( brand ) ) ) that belongs to ( camera lens )", "pred": "Count the number of distinct camera lenses.", "label": "How many different kinds of lens brands are there?"}
{"idx": 1300, "logic": "( age ) that belongs to ( person ) , that have ( ( ( job ) equal to ( 'doctor' ) ) and ( ( name ) equal to ( 'zach' ) ) )", "pred": "What is the age of the doctor Zach?", "label": "What is the age of the doctor named Zach?"}
{"idx": 1301, "logic": "( aircraft of addresses ) that belongs to ( ( aircraft ) , and ( ( match ) satisfied that ( ( aircraft id of addresses ) equal to ( winning aircraft of staff ) ) ) ) , grouped by ( winning aircraft of staff ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show the names of aircrafts that won at least two matches.", "label": "What are the names of all aircrafts that have won a match at least twice?"}
{"idx": 1302, "logic": "( phone ) , ( postal code ) that belongs to ( address ) , that have ( ( address ) equal to ( '1031 daugavpils parkway' ) )", "pred": "What is the phone number and postal code of the address 1031 Daugavpils Parkway?", "label": "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'."}
{"idx": 1303, "logic": "( the number of ( all items ) ) that belongs to ( scientists )", "pred": "Count the number of scientists.", "label": "Find the total number of scientists."}
{"idx": 1304, "logic": "( payment method code ) that belongs to ( payments ) , grouped by ( payment method code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the payment method code that has been used the most times.", "label": "What is the most popular payment method?"}
{"idx": 1305, "logic": "( nickname ) that belongs to ( school details ) , that have ( ( division ) not equal to ( division 1 ) )", "pred": "What is the nickname of the school whose division is not division 1?", "label": "Show the nicknames of schools that are not in division 1."}
{"idx": 1306, "logic": "( the number of ( distinct ( program id ) ) ) that belongs to ( broadcast ) , that have ( ( time of day ) equal to ( 'night' ) )", "pred": "Count the number of distinct programs broadcast in the time of day 'Night'", "label": "find the number of different programs that are broadcast during night time."}
{"idx": 1307, "logic": "( the number of ( all items ) ) that belongs to ( ( employee ) , and ( ( class ) satisfied that ( ( emp num of addresses ) equal to ( prof num of staff ) ) ) ) , that have ( ( emp lname of addresses ) equal to ( 'graztevski' ) )", "pred": "Count the number of students who took a class taught by the prof with last name 'Graztevski'.", "label": "How many classes does the professor whose last name is Graztevski teach?"}
{"idx": 1308, "logic": "( problem log id ) , ( problem id ) that belongs to ( problem log ) , ordered by ( ( log entry date ) ) , limited to the top ( 1 )", "pred": "Find the id and id of the problem with the most recent entry date.", "label": "Find the oldest log id and its corresponding problem id."}
{"idx": 1309, "logic": "( color description of member of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) ) , that have ( ( product name of club ) equal to ( catnip ) )", "pred": "What is the description of the color \"Catnip\"?", "label": "What is the color description of the product with name \"catnip\"?"}
{"idx": 1310, "logic": "( the number of ( all items ) ) , ( account id ) that belongs to ( financial transactions )", "pred": "Find the number of transactions and account id.", "label": "How many transaction does each account have? Show the number and account id."}
{"idx": 1311, "logic": "( name ) that belongs to ( artist ) , ordered by ( ( year join ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the artist who joined the most recent year.", "label": "Return the name of the artist who has the latest join year."}
{"idx": 1312, "logic": "( customer name ) , ( customer phone ) , ( customer email ) that belongs to ( customers ) , ordered by ( ( date became customer ) )", "pred": "List the name, phone, email of customers, ordered by date became customer.", "label": "List the names, phone numbers, and emails of all customers sorted by their dates of becoming customers."}
{"idx": 1313, "logic": "( name of enzyme ) that belongs to ( ( repair assignment ) , and ( ( machine ) satisfied that ( ( machine id of addresses ) equal to ( machine id of staff ) ) ) , and ( ( technician ) satisfied that ( ( technician id of addresses ) equal to ( technician id of enzyme ) ) ) ) , that have ( ( value points of staff ) greater than ( 70 ) )", "pred": "What are the names of the technicians who are assigned to repair machines with value points higher than 70.", "label": "What are the names of the technicians that are assigned to repair machines with more point values than 70?"}
{"idx": 1314, "logic": "( name of addresses ) that belongs to ( ( club ) , and ( ( player ) satisfied that ( ( club id of addresses ) equal to ( club id of staff ) ) ) ) , that have ( ( position of staff ) equal to ( right wing ) )", "pred": "What are the names of the clubs that have players playing right wing?", "label": "What are the names of the clubs that have players in the position of \"Right Wing\"?"}
{"idx": 1315, "logic": "( stuid ) that belongs to ( student ) , that have ( ( sex ) equal to ( 'm' ) )", "pred": "Find the ids of all female students.", "label": "Show student ids for all male students."}
{"idx": 1316, "logic": "( the average of ( working horses ) ) that belongs to ( farm ) , that have ( ( total horses ) greater than ( 5000 ) )", "pred": "Find the average number of working horses for farms with more than 5000 total horses.", "label": "What is the average number of working horses of farms with more than 5000 total number of horses?"}
{"idx": 1317, "logic": "( roomname ) , ( baseprice ) that belongs to ( rooms ) , ordered by ( ( baseprice ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the name and baseprice of the room with the highest price.", "label": "What are the room name and base price of the room with the lowest base price?"}
{"idx": 1318, "logic": "( name of staff ) that belongs to ( ( train station ) , and ( ( train ) satisfied that ( ( train id of addresses ) equal to ( train id of staff ) ) ) ) , that have ( ( t1.station_id ) not in ( ( station id of trip ) that belongs to ( ( train station ) , and ( ( station ) satisfied that ( ( station id of enzyme ) equal to ( station id of trip ) ) ) ) , that have ( ( location of inst ) equal to ( london ) ) ) )", "pred": "What are the names of the trains that do not stop in London?", "label": "Find the names of the trains that do not pass any station located in London."}
{"idx": 1319, "logic": "( school ) , ( location ) that belongs to ( university ) , that have ( ( affiliation ) equal to ( 'public' ) )", "pred": "Show the school and location of public universities.", "label": "What are the public schools and what are their locations?"}
{"idx": 1320, "logic": "( distinct ( class ) ) that belongs to ( race )", "pred": "List the distinct classes of races.", "label": "Return the different classes of races."}
{"idx": 1321, "logic": "( apt number of staff ) , ( booking start date of addresses ) , ( booking start date of addresses ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) )", "pred": "Show the apartment number, start date, and end date of all apartment bookings.", "label": "Show the apartment numbers, start dates, and end dates of all the apartment bookings."}
{"idx": 1322, "logic": "( allergytype of staff ) , ( the number of ( all items ) ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , grouped by ( allergytype of staff )", "pred": "Show each allergy type and the number of people with it.", "label": "How many students are affected by each allergy type?"}
{"idx": 1323, "logic": "( the number of ( all items ) ) , ( affiliation ) that belongs to ( university ) , that have ( ( enrollment ) greater than ( 20000 ) ) , grouped by ( affiliation )", "pred": "Find the number of universities with enrollment greater than 20000.", "label": "What are the different affiliations, and how many schools with each have an enrollment size of above 20000?"}
{"idx": 1324, "logic": "( product name ) that belongs to ( products ) , ordered by ( ( product price ) in ascending order )", "pred": "List the name of products in ascending order of price.", "label": "List the name of products in ascending order of price."}
{"idx": 1325, "logic": "( characteristic name of student ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , grouped by ( characteristic name of student ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the characteristic that has been used the most times.", "label": "What is the characteristic name used by most number of the products?"}
{"idx": 1326, "logic": "( customer name of club ) , ( order date of member of club ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( order status ) equal to ( delivered ) )", "pred": "What are the names and dates of the orders with status \"Delivered\"", "label": "What are the customer name and date of the orders whose status is \"Delivered\"."}
{"idx": 1327, "logic": "( product name ) that belongs to ( products ) , grouped by ( product name ) , that have ( ( the average of ( product price ) ) less than ( 1000000 ) )", "pred": "What are the names of the products with average price below 1000000?", "label": "Find the product names whose average product price is below 1000000."}
{"idx": 1328, "logic": "( the number of ( all items ) ) that belongs to ( inventory ) , that have ( ( store id ) equal to ( 1 ) )", "pred": "Count the number of inventory in store \"1\"", "label": "How many items in inventory does store 1 have?"}
{"idx": 1329, "logic": "( name ) that belongs to ( musical ) , that have ( ( musical_id ) not in ( ( musical id ) that belongs to ( actor ) ) )", "pred": "List the names of musicals that do not have actors.", "label": "What are the names of musicals who have no actors?"}
{"idx": 1330, "logic": "( the sum of ( settlement amount ) ) , ( the average of ( settlement amount ) ) that belongs to ( settlements )", "pred": "Show the total settlement amount and average settlement amount for all settlements.", "label": "Find the total and average amount of settlements."}
{"idx": 1331, "logic": "( the average of ( capacity ) ) that belongs to ( stadium ) , that have ( ( opening year ) equal to ( 2005 ) )", "pred": "Find the average capacity of stadiums that opened in 2005.", "label": "What is the average capacity of the stadiums that were opened in year 2005?"}
{"idx": 1332, "logic": "( customer details of student ) that belongs to ( ( claim headers ) , and ( ( policies ) satisfied that ( ( policy id of club ) equal to ( policy id of member of club ) ) ) , and ( ( customers ) satisfied that ( ( customer id of member of club ) equal to ( customer id of student ) ) ) ) , that have ( ( amount claimed of club ) equal to ( the maximum of ( amount claimed ) ) that belongs to ( claim headers ) )", "pred": "Find the details of customers who have the policy with the maximum amount claimed.", "label": "What is the name of the customer who has made the largest amount of claim in a single claim?"}
{"idx": 1333, "logic": "( dept address ) that belongs to ( department ) , that have ( ( dept name ) equal to ( 'history' ) )", "pred": "Find the address of History department.", "label": "what is the address of history department?"}
{"idx": 1334, "logic": "( the number of ( distinct ( crs code ) ) ) that belongs to ( class )", "pred": "Count the number of distinct crs codes for all courses.", "label": "How many courses are offered?"}
{"idx": 1335, "logic": "( name ) that belongs to ( companies ) , ordered by ( ( market value billion ) in descending order )", "pred": "List the names of companies, ordered by market value billion descending.", "label": "Sort the company names in descending order of the company's market value."}
{"idx": 1336, "logic": "( director ) that belongs to ( movie ) , that have ( ( director ) is existed ) , grouped by ( director ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )", "pred": "Show the directors who have directed one movie.", "label": "What are the names of all directors who have made one movie except for the director named NULL?"}
{"idx": 1337, "logic": "( problem id of addresses ) that belongs to ( ( problems ) , and ( ( product ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , that have ( ( ( product name of staff ) equal to ( voluptatem ) ) and ( ( date problem reported of addresses ) greater than ( 1995 ) ) )", "pred": "What is the id of the problem reported after 1995?", "label": "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?"}
{"idx": 1338, "logic": "( the number of ( distinct ( position of member of club ) ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) ) , that have ( ( clubname of club ) equal to ( bootup baltimore ) )", "pred": "Find the number of members of club \"Bootup Baltimore\".", "label": "How many different roles are there in the club \"Bootup Baltimore\"?"}
{"idx": 1339, "logic": "( lname of club ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( papers ) satisfied that ( ( paperid of member of club ) equal to ( paperid of student ) ) ) ) , grouped by ( fname of club ) , ( lname of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the last name of the author who wrote the most papers.", "label": "What is the last name of the author that has published the most papers?"}
{"idx": 1340, "logic": "( official name ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 1500 ) ) or ( ( population ) less than ( 500 ) ) )", "pred": "What are the official names of cities with population above 1500 or smaller than 500.", "label": "Find the official names of cities with population bigger than 1500 or smaller than 500."}
{"idx": 1341, "logic": "( roomname ) that belongs to ( rooms ) , ordered by ( ( baseprice ) )", "pred": "List the names of rooms, ordered by baseprice.", "label": "List the name of all rooms sorted by their prices."}
{"idx": 1342, "logic": "( the number of ( all items ) ) that belongs to ( technician )", "pred": "Find the number of technicians.", "label": "What is the number of technicians?"}
{"idx": 1343, "logic": "( employee id ) that belongs to ( employees ) , that have ( ( employee name ) equal to ( ebba ) )", "pred": "Find the ids of employees whose name is Ebba.", "label": "What is the id for the employee called Ebba?"}
{"idx": 1344, "logic": "( name of enzyme ) , ( district of staff ) that belongs to ( ( phone market ) , and ( ( market ) satisfied that ( ( market id of addresses ) equal to ( market id of staff ) ) ) , and ( ( phone ) satisfied that ( ( phone id of addresses ) equal to ( phone id of enzyme ) ) ) ) , ordered by ( ( ranking of staff ) )", "pred": "What are the names and districts of phones, ordered by their ranking?", "label": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market."}
{"idx": 1345, "logic": "( gdp ) that belongs to ( city ) , ordered by ( ( regional population ) in descending order ) , limited to the top ( 1 )", "pred": "Find the gdp of the city with the largest regional population.", "label": "what is the GDP of the city with the largest population."}
{"idx": 1346, "logic": "( roomname ) that belongs to ( rooms ) , that have ( ( baseprice ) greater than ( the average of ( baseprice ) ) that belongs to ( rooms ) )", "pred": "What are the names of rooms with a price higher than the average?", "label": "What are the name of rooms that cost more than the average."}
{"idx": 1347, "logic": "( problem log id ) that belongs to ( problem log ) , ordered by ( ( log entry date ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id of the log with the most recent entry date.", "label": "Which problem log was created most recently? Give me the log id."}
{"idx": 1348, "logic": "( the number of ( all items ) ) that belongs to ( university ) , that have ( ( location ) like ( %ny% ) )", "pred": "Count the number of universities whose location contains the letter NY.", "label": "Find how many school locations have the word 'NY'."}
{"idx": 1349, "logic": "( distinct ( first name of addresses ) ) , ( last name of addresses ) that belongs to ( ( staff ) , and ( ( rental ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) , and ( ( customer ) satisfied that ( ( customer id of staff ) equal to ( customer id of enzyme ) ) ) ) , that have ( ( ( first name of enzyme ) equal to ( 'april' ) ) and ( ( last name of enzyme ) equal to ( 'burns' ) ) )", "pred": "What are the first name and last name of all the staff who rented a rental from Avril Burns?", "label": "Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental."}
{"idx": 1350, "logic": "( customer name of club ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( order items ) satisfied that ( ( order id of member of club ) equal to ( order id of student ) ) ) , and ( ( products ) satisfied that ( ( product id of student ) equal to ( product id of inst ) ) ) ) , that have ( ( product details of inst ) equal to ( 'latte' ) ), and intersect with ( ( customer name of club ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( order items ) satisfied that ( ( order id of member of club ) equal to ( order id of student ) ) ) , and ( ( products ) satisfied that ( ( product id of student ) equal to ( product id of inst ) ) ) ) , that have ( ( product details of inst ) equal to ( 'americano' ) ))", "pred": "Find the names of customers who have both the product 'Latte' and the product details 'Americano'.", "label": "What are the names of customers who have purchased both products Latte and Americano?"}
{"idx": 1351, "logic": "( billing country ) , ( the average of ( total ) ) that belongs to ( invoices ) , grouped by ( billing country ) , ordered by ( ( the average of ( total ) ) in descending order ) , limited to the top ( 10 )", "pred": "Show the top 10 countries and the average amount of invoices made.", "label": "What are the names of the countries and average invoice size of the top countries by size?"}
{"idx": 1352, "logic": "( name of staff ) that belongs to ( ( gymnast ) , and ( ( people ) satisfied that ( ( gymnast id of addresses ) equal to ( people id of staff ) ) ) )", "pred": "List the names of gymnasts who are friends with people.", "label": "Return the names of the gymnasts."}
{"idx": 1353, "logic": "( campus ) that belongs to ( campuses ) , that have ( ( year ) less than ( 1800 ) )", "pred": "Find the campuses opened before 1800.", "label": "Find the name of the campuses opened before 1800."}
{"idx": 1354, "logic": "( roomid ) , ( roomname ) that belongs to ( rooms ) , ordered by ( ( baseprice ) in descending order ) , limited to the top ( 1 )", "pred": "Find the id and name of the room with the highest baseprice price.", "label": "Which room has the highest base price?"}
{"idx": 1355, "logic": "( allergytype ) that belongs to ( allergy type ) , grouped by ( allergytype ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )", "pred": "Find the allergy type that has the most allergies.", "label": "Which allergy type is the least common?"}
{"idx": 1356, "logic": "( the number of ( all items ) ) that belongs to ( medicine ) , that have ( ( fda approved ) equal to ( 'no' ) )", "pred": "Count the number of medicines with FDA approval.", "label": "How many medicines were not approved by the FDA?"}
{"idx": 1357, "logic": "( headquarters ) that belongs to ( company ) , that have ( ( main industry ) equal to ( 'banking' ) ) , grouped by ( headquarters ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )", "pred": "Show the headquarters of companies that are in the banking industry.", "label": "What are the headquarters with at least two companies in the banking industry?"}
{"idx": 1358, "logic": "( product category description ) that belongs to ( ref product categories ) , that have ( ( product category code ) equal to ( spices ) )", "pred": "Find the description of the product category code \"Spices\".", "label": "What is the description of the product category with the code 'Spices'?"}
{"idx": 1359, "logic": "( name ) , ( flag ) that belongs to ( ship ) , that have ( ( ship_id ) not in ( ( ship id ) that belongs to ( captain ) , that have ( ( rank ) equal to ( 'midshipman' ) ) ) )", "pred": "What are the names and flags of the ships that do not have any captain with rank Midshipman?", "label": "Find the name and flag of ships that are not steered by any captain with Midshipman rank."}
{"idx": 1360, "logic": "( the average of ( profits billion ) ) that belongs to ( companies )", "pred": "Find the average profits of all companies.", "label": "What are the average profits of companies?"}
{"idx": 1361, "logic": "( roomname ) , ( bedtype ) that belongs to ( rooms ) , that have ( ( decor ) equal to ( traditional ) )", "pred": "What are the names and bed types of the rooms with decor of Traditional?", "label": "What are the bed type and name of all the rooms with traditional decor?"}
{"idx": 1362, "logic": "( investor ) that belongs to ( entrepreneur ) , that have ( ( money requested ) greater than ( 140000 ) ), and intersect with ( ( investor ) that belongs to ( entrepreneur ) , that have ( ( money requested ) less than ( 120000 ) ))", "pred": "Show the investors who have invested in entrepreneurs who requested more than 140000 and less than 120000.", "label": "Show the investors shared by entrepreneurs that requested more than 140000 and entrepreneurs that requested less than 120000."}
{"idx": 1363, "logic": "( distinct ( invoice details ) ) that belongs to ( invoices ) , that have ( ( ( invoice date ) less than ( 1989-09-03 ) ) or ( ( invoice date ) greater than ( 2007-12-25 ) ) )", "pred": "Find the distinct invoice details for invoices before 1989-09-03 or after 2007-12-25.", "label": "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25."}
{"idx": 1364, "logic": "( the maximum of ( amount outstanding ) ) , ( the minimum of ( amount outstanding ) ) , ( the average of ( amount outstanding ) ) that belongs to ( customers )", "pred": "Show the maximum, minimum, and average amount outstanding for all customers.", "label": "What is maximum, minimum and average amount of outstanding of customer?"}
{"idx": 1365, "logic": "( job id ) that belongs to ( employees ) , grouped by ( job id ) , that have ( ( the average of ( salary ) ) greater than ( 8000 ) )", "pred": "What are the ids of the jobs with average salary above 8000?", "label": "What are the job ids corresponding to jobs with average salary above 8000?"}
{"idx": 1366, "logic": "( color code of club ) , ( color description of member of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) ) , that have ( ( product name of club ) equal to ( chervil ) )", "pred": "What are the color codes and descriptions of the products named \"Chervil\"", "label": "Return the color code and description for the product with the name 'chervil'."}
{"idx": 1367, "logic": "( stuid ) that belongs to ( student ) , that have ( ( sex ) equal to ( 'm' ) ), and except that ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( sportname ) equal to ( football ) ))", "pred": "What are the ids of students who are not playing Football?", "label": "What are the ids of all male students who do not play football?"}
{"idx": 1368, "logic": "all items that belongs to ( college ) , ordered by ( ( enr ) )", "pred": "List all information about colleges, ordered by enr.", "label": "What information do you have on colleges sorted by increasing enrollment numbers?"}
{"idx": 1369, "logic": "( distinct ( city ) ) that belongs to ( addresses )", "pred": "List all distinct cities.", "label": "Retrieve the list of all cities."}
{"idx": 1370, "logic": "( name ) that belongs to ( employee ), and except that ( ( name of addresses ) that belongs to ( ( employee ) , and ( ( certificate ) satisfied that ( ( eid of addresses ) equal to ( eid of staff ) ) ) , and ( ( aircraft ) satisfied that ( ( aid of enzyme ) equal to ( aid of staff ) ) ) ) , that have ( ( name of enzyme ) equal to ( boeing 737-800 ) ))", "pred": "What are the names of all employees who do not have certificates of Boeing 737-800?", "label": "What are the names of all employees who are not certified to fly Boeing 737-800s?"}
{"idx": 1371, "logic": "( lastname of staff ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of addresses ) equal to ( gell ) ) and ( ( lastname of addresses ) equal to ( tami ) ) )", "pred": "What are the last names of the teachers who teach the students with first name as Glenn and last name as Tai?", "label": "Find the last names of all the teachers that teach GELL TAMI."}
{"idx": 1372, "logic": "( distinct ( destroyed by employee id ) ) that belongs to ( documents to be destroyed )", "pred": "What are the distinct ids of all employees who destroyed documents?", "label": "What are the ids of all the employees who have destroyed documents?"}
{"idx": 1373, "logic": "( the number of ( all items ) ) that belongs to ( county public safety )", "pred": "Count the number of counties.", "label": "Count the number of countries."}
{"idx": 1374, "logic": "( the sum of ( num of component ) ) that belongs to ( furniture )", "pred": "Find the total number of components of all furniture.", "label": "How many furniture components are there in total?"}
{"idx": 1375, "logic": "( title ) that belongs to ( movie ) , that have ( ( year ) greater than ( the maximum of ( year ) ) that belongs to ( movie ) , that have ( ( director ) equal to ( steven spielberg ) ) )", "pred": "What are the titles of movies that were made after the maximum year of Steven Spielberg?", "label": "What is the names of movies whose created year is after all movies directed by Steven Spielberg?"}
{"idx": 1376, "logic": "( the number of ( all items ) ) that belongs to ( customers ) , that have ( ( state ) equal to ( ca ) )", "pred": "Count the number of customers who live in California.", "label": "How many customers in state of CA?"}
{"idx": 1377, "logic": "( instrument ) that belongs to ( instruments ) , grouped by ( instrument ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the instrument that has been used most times.", "label": "What is the most used instrument?"}
{"idx": 1378, "logic": "( city code ) that belongs to ( student ) , grouped by ( city code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the city that has the most students living.", "label": "What is the city_code of the city that the most students live in?"}
{"idx": 1379, "logic": "( name of addresses ) that belongs to ( ( people ) , and ( ( perpetrator ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , ordered by ( ( weight of addresses ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the perpetrator who has the heaviest weight.", "label": "What is the name of the perpetrator with the biggest weight."}
{"idx": 1380, "logic": "( name first of addresses ) , ( name last of addresses ) , ( player id of addresses ) that belongs to ( ( player ) , and ( ( player award ) satisfied that ( ( player id of addresses ) equal to ( player id of staff ) ) ) ) , grouped by ( player id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 3 )", "pred": "Find the first name, last name, and id of the player who won the most awards.", "label": "Which 3 players won the most player awards? List their full name and id."}
{"idx": 1381, "logic": "( distinct ( name of addresses ) ) that belongs to ( ( physician ) , and ( ( prescribes ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( medication ) satisfied that ( ( code of enzyme ) equal to ( medication of staff ) ) ) ) , that have ( ( name of enzyme ) equal to ( thesisin ) )", "pred": "What are the distinct names of physicians who prescribe the medication \"S thesisin\"", "label": "What is the names of the physicians who prescribe medication Thesisin?"}
{"idx": 1382, "logic": "( date from ) , ( date to ) that belongs to ( project staff ) , that have ( ( project_id ) in ( ( ( project id ) that belongs to ( project staff ) , grouped by ( project id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) ) ) ) and ( date from ) , ( date to ) that belongs to ( project staff ) , that have ( ( role code ) equal to ( 'leader' ) )", "pred": "Find the date from and date to the project that has the most staff with role code 'leader'.", "label": "From what date and to what date do the staff work on a project that has the most staff and has staff in a leader role?"}
{"idx": 1383, "logic": "( name of inst ) that belongs to ( ( swimmer ) , and ( ( record ) satisfied that ( ( id of club ) equal to ( swimmer id of member of club ) ) ) , and ( ( event ) satisfied that ( ( event id of member of club ) equal to ( id of student ) ) ) , and ( ( stadium ) satisfied that ( ( id of inst ) equal to ( stadium id of student ) ) ) ) , that have ( ( nationality of club ) equal to ( 'australia' ) )", "pred": "What are the names of the swimmers who have a record of Australian?", "label": "Find the names of stadiums that some Australian swimmers have been to."}
{"idx": 1384, "logic": "( roomname ) that belongs to ( rooms ) , that have ( ( ( bedtype ) equal to ( king ) ) or ( ( bedtype ) equal to ( queen ) ) )", "pred": "What are the names of the rooms with king or queen beds?", "label": "What are the names of rooms that have either king or queen bed?"}
{"idx": 1385, "logic": "( the maximum of ( number cities ) ) , ( the minimum of ( number cities ) ) that belongs to ( market )", "pred": "Show the maximum and minimum number of cities in each market.", "label": "Return the maximum and minimum number of cities across all markets."}
{"idx": 1386, "logic": "( carrier ) that belongs to ( device ) , that have ( ( software platform ) not equal to ( 'android' ) )", "pred": "Find the carriers of devices whose software platform is not 'Android'.", "label": "Return the device carriers that do not have Android as their software platform."}
{"idx": 1387, "logic": "all items that belongs to ( ( products ) , and ( ( manufacturers ) satisfied that ( ( manufacturer of addresses ) equal to ( code of staff ) ) ) )", "pred": "List all the products produced by the manufacturer code of staff.", "label": "Select all the data from the products and each product's manufacturer."}
{"idx": 1388, "logic": "( claim status name of member of club ) that belongs to ( ( claims processing ) , and ( ( claims processing stages ) satisfied that ( ( claim stage id of club ) equal to ( claim stage id of member of club ) ) ) ) , grouped by ( claim stage id of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the status name of the claim processing stage that has been processed the most times.", "label": "What is the name of the claim processing stage that most of the claims are on?"}
{"idx": 1389, "logic": "( grant amount of addresses ) that belongs to ( ( grants ) , and ( ( documents ) satisfied that ( ( grant id of addresses ) equal to ( grant id of staff ) ) ) ) , that have ( ( sent date of staff ) less than ( '1986-08-26 20:49:27' ) ), and intersect with ( ( grant amount ) that belongs to ( grants ) , that have ( ( grant end date ) greater than ( '1989-03-16 18:27:16' ) ))", "pred": "What is the grant amount for the documents sent after 1986-08-26 20:49:27 and ended after 1989-03-16 18:27:16?", "label": "What are the distinct grant amount for the grants where the documents were sent before '1986-08-26 20:49:27' and grant were ended after '1989-03-16 18:27:16'?"}
{"idx": 1390, "logic": "( role description of addresses ) , ( staff id of staff ) that belongs to ( ( staff roles ) , and ( ( project staff ) satisfied that ( ( role code of addresses ) equal to ( role code of staff ) ) ) , and ( ( project outcomes ) satisfied that ( ( project id of staff ) equal to ( project id of enzyme ) ) ) ) , grouped by ( staff id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the description and id of the staff who has the most project outcomes.", "label": "For each staff id, what is the description of the role that is involved with the most number of projects?"}
{"idx": 1391, "logic": "( the average of ( price ) ) , ( manufacturer ) that belongs to ( products ) , grouped by ( manufacturer )", "pred": "Find the average price and manufacturer for each manufacturer.", "label": "Select the average price of each manufacturer's products, showing only the manufacturer's code."}
{"idx": 1392, "logic": "( name of trip ) that belongs to ( ( stay ) , and ( ( patient ) satisfied that ( ( patient of addresses ) equal to ( ssn of staff ) ) ) , and ( ( prescribes ) satisfied that ( ( patient of enzyme ) equal to ( ssn of staff ) ) ) , and ( ( medication ) satisfied that ( ( medication of enzyme ) equal to ( code of trip ) ) ) ) , that have ( ( room ) equal to ( 111 ) )", "pred": "Find the names of patients who stay in room 111.", "label": "What is the name of the medication used for the patient staying in room 111?"}
{"idx": 1393, "logic": "( name ) that belongs to ( people ) , ordered by ( ( weight ) in ascending order )", "pred": "List the names of people in ascending alphabetical order of weight", "label": "What are the names of people in ascending order of weight?"}
{"idx": 1394, "logic": "( order id ) , ( customer id ) that belongs to ( orders ) , ordered by ( ( date order placed ) ) , limited to the top ( 1 )", "pred": "Find the id and customer id of the order with the earliest date placed.", "label": "what are the order id and customer id of the oldest order?"}
{"idx": 1395, "logic": "( the number of ( all items ) ) that belongs to ( customers ) , that have ( ( customer_id ) not in ( ( customer id ) that belongs to ( customer payments ) ) )", "pred": "Count the number of customers who have not made any payments.", "label": "List the number of customers that did not have any payment history."}
{"idx": 1396, "logic": "( the number of ( all items ) ) that belongs to ( building )", "pred": "Count the number of buildings.", "label": "How many buildings are there?"}
{"idx": 1397, "logic": "( distinct ( stageposition of addresses ) ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( firstname ) equal to ( solveig ) )", "pred": "What are the different stage positions used by the band mate with first name \"Solveig\"", "label": "What are the different stage positions for all musicians whose first name is \"Solveig\"?"}
{"idx": 1398, "logic": "( dept name ) that belongs to ( course ) , grouped by ( dept name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 3 )", "pred": "Find the name of the department that offers the 3 most courses.", "label": "Find the names of the top 3 departments that provide the largest amount of courses?"}
{"idx": 1399, "logic": "( dname of addresses ) that belongs to ( ( department ) , and ( ( minor in ) satisfied that ( ( dno of addresses ) equal to ( dno of staff ) ) ) ) , grouped by ( dno of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )", "pred": "Find the name of the department with the most minor in.", "label": "What is the name of the department with the most students minoring in it?"}
