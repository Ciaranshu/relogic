[{"topic": "mark blundell", "wiki": "https://en.wikipedia.org/wiki/Mark_Blundell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1189516-2.html.csv", "action": "comparative", "sent": "mark blundell scored more points in his 1995 formula one race than he did in his 1991 formula one race .", "annotation": {"row_1": "5", "row_2": "1", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1995"], "result": null, "ind": 0, "tointer": "select the rows whose year record fuzzily matches to 1995 .", "tostr": "filter_eq { all_rows ; year ; 1995 }"}, "pts"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; year ; 1995 } ; pts }", "tointer": "select the rows whose year record fuzzily matches to 1995 . take the pts record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1991"], "result": null, "ind": 1, "tointer": "select the rows whose year record fuzzily matches to 1991 .", "tostr": "filter_eq { all_rows ; year ; 1991 }"}, "pts"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; year ; 1991 } ; pts }", "tointer": "select the rows whose year record fuzzily matches to 1991 . take the pts record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; hop { filter_eq { all_rows ; year ; 1991 } ; pts } }", "tointer": "select the rows whose year record fuzzily matches to 1995 . take the pts record of this row . select the rows whose year record fuzzily matches to 1991 . take the pts record of this row . the first record is greater than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1995"], "result": null, "ind": 0, "tointer": "select the rows whose year record fuzzily matches to 1995 .", "tostr": "filter_eq { all_rows ; year ; 1995 }"}, "pts"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; year ; 1995 } ; pts }", "tointer": "select the rows whose year record fuzzily matches to 1995 . take the pts record of this row ."}, "13"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; 13 }", "tointer": "the pts record of the first row is 13 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1991"], "result": null, "ind": 1, "tointer": "select the rows whose year record fuzzily matches to 1991 .", "tostr": "filter_eq { all_rows ; year ; 1991 }"}, "pts"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; year ; 1991 } ; pts }", "tointer": "select the rows whose year record fuzzily matches to 1991 . take the pts record of this row ."}, "1"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; year ; 1991 } ; pts } ; 1 }", "tointer": "the pts record of the second row is 1 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; 13 } ; eq { hop { filter_eq { all_rows ; year ; 1991 } ; pts } ; 1 } }", "tointer": "the pts record of the first row is 13 . the pts record of the second row is 1 ."}], "result": true, "ind": 8, "tostr": "and { greater { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; hop { filter_eq { all_rows ; year ; 1991 } ; pts } } ; and { eq { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; 13 } ; eq { hop { filter_eq { all_rows ; year ; 1991 } ; pts } ; 1 } } } = true", "tointer": "select the rows whose year record fuzzily matches to 1995 . take the pts record of this row . select the rows whose year record fuzzily matches to 1991 . take the pts record of this row . the first record is greater than the second record . the pts record of the first row is 13 . the pts record of the second row is 1 ."}, "logic_str": "and { greater { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; hop { filter_eq { all_rows ; year ; 1991 } ; pts } } ; and { eq { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; 13 } ; eq { hop { filter_eq { all_rows ; year ; 1991 } ; pts } ; 1 } } } = true", "interpret": "select the rows whose year record fuzzily matches to 1995 . take the pts record of this row . select the rows whose year record fuzzily matches to 1991 . take the pts record of this row . the first record is greater than the second record . the pts record of the first row is 13 . the pts record of the second row is 1 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "greater_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "year_11": 11, "1995_12": 12, "pts_13": 13, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "year_15": 15, "1991_16": 16, "pts_17": 17, "and_7": 7, "eq_5": 5, "13_18": 18, "eq_6": 6, "1_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "greater_4": "greater", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "year_11": "year", "1995_12": "1995", "pts_13": "pts", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "year_15": "year", "1991_16": "1991", "pts_17": "pts", "and_7": "and", "eq_5": "eq", "13_18": "13", "eq_6": "eq", "1_19": "1"}, "g_adj": {"and_8": [9], "result_9": [], "greater_4": [8], "num_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "year_11": [0], "1995_12": [0], "pts_13": [2], "num_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "year_15": [1], "1991_16": [1], "pts_17": [3], "and_7": [8], "eq_5": [7], "13_18": [5], "eq_6": [7], "1_19": [6]}, "table_header": ["year", "entrant", "chassis", "engine", "pts"], "table_cont": [["1991", "motor racing developments ltd", "brabham bt59y", "yamaha v12", "1"], ["1991", "motor racing developments ltd", "brabham bt60y", "yamaha v12", "1"], ["1993", "ligier gitanes blondes", "ligier js39", "renault v10", "10"], ["1994", "tyrrell", "tyrrell 022", "yamaha v10", "8"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10", "mercedes v10", "13"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10b", "mercedes v10", "13"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10c", "mercedes v10", "13"]], "query": "and { greater { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; hop { filter_eq { all_rows ; year ; 1991 } ; pts } } ; and { eq { hop { filter_eq { all_rows ; year ; 1995 } ; pts } ; 13 } ; eq { hop { filter_eq { all_rows ; year ; 1991 } ; pts } ; 1 } } } = true", "question": "mark blundell scored more points in his 1995 formula one race than he did in his 1991 formula one race ."}, {"topic": "1998 cfl draft", "wiki": "https://en.wikipedia.org/wiki/1998_CFL_Draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16441561-3.html.csv", "action": "unique", "sent": "the only kicker drafted by saskatchewan college in the 1998 cfl draft was matt kellett .", "annotation": {"scope": "subset", "row": "2", "col": "4", "col_other": "3", "criterion": "equal", "value": "k", "subset": {"col": "5", "criterion": "equal", "value": "saskatchewan"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "saskatchewan"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; college ; saskatchewan }", "tointer": "select the rows whose college record fuzzily matches to saskatchewan ."}, "position", "k"], "result": null, "ind": 1, "tointer": "select the rows whose college record fuzzily matches to saskatchewan . among these rows , select the rows whose position record fuzzily matches to k .", "tostr": "filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } }", "tointer": "select the rows whose college record fuzzily matches to saskatchewan . among these rows , select the rows whose position record fuzzily matches to k . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "saskatchewan"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; college ; saskatchewan }", "tointer": "select the rows whose college record fuzzily matches to saskatchewan ."}, "position", "k"], "result": null, "ind": 1, "tointer": "select the rows whose college record fuzzily matches to saskatchewan . among these rows , select the rows whose position record fuzzily matches to k .", "tostr": "filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k }"}, "player"], "result": "matt kellett", "ind": 3, "tostr": "hop { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } ; player }"}, "matt kellett"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } ; player } ; matt kellett }", "tointer": "the player record of this unqiue row is matt kellett ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } } ; eq { hop { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } ; player } ; matt kellett } } = true", "tointer": "select the rows whose college record fuzzily matches to saskatchewan . among these rows , select the rows whose position record fuzzily matches to k . there is only one such row in the table . the player record of this unqiue row is matt kellett ."}, "logic_str": "and { only { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } } ; eq { hop { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } ; player } ; matt kellett } } = true", "interpret": "select the rows whose college record fuzzily matches to saskatchewan . among these rows , select the rows whose position record fuzzily matches to k . there is only one such row in the table . the player record of this unqiue row is matt kellett .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_7": 7, "college_8": 8, "saskatchewan_9": 9, "position_10": 10, "k_11": 11, "str_eq_4": 4, "str_hop_3": 3, "player_12": 12, "matt kellett_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "college_8": "college", "saskatchewan_9": "saskatchewan", "position_10": "position", "k_11": "k", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "player_12": "player", "matt kellett_13": "matt kellett"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_str_eq_1": [2, 3], "filter_str_eq_0": [1], "all_rows_7": [0], "college_8": [0], "saskatchewan_9": [0], "position_10": [1], "k_11": [1], "str_eq_4": [5], "str_hop_3": [4], "player_12": [3], "matt kellett_13": [4]}, "table_header": ["pick", "cfl team", "player", "position", "college"], "table_cont": [["13", "hamilton", "devin grant", "ol", "utah"], ["14", "bc", "matt kellett", "k", "saskatchewan"], ["15", "montreal", "scott flory", "ol", "saskatchewan"], ["16", "calgary", "harland ah you", "dl", "brigham young"], ["17", "edmonton", "scott deibert", "rb", "minot state"], ["18", "montreal", "william loftus", "d", "manitoba"], ["19", "saskatchewan", "kevin pressburger", "lb", "waterloo"], ["20", "toronto", "jermaine brown", "rb", "winona state"]], "query": "and { only { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } } ; eq { hop { filter_eq { filter_eq { all_rows ; college ; saskatchewan } ; position ; k } ; player } ; matt kellett } } = true", "question": "the only kicker drafted by saskatchewan college in the 1998 cfl draft was matt kellett ."}, {"topic": "alberta greens", "wiki": "https://en.wikipedia.org/wiki/Alberta_Greens", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14678185-1.html.csv", "action": "unique", "sent": "in alberta greens , the year 2008 was the only year were over 50 candidates were nominated .", "annotation": {"scope": "all", "row": "5", "col": "2", "col_other": "1", "criterion": "greater_than", "value": "50", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "of candidates nominated", "50"], "result": null, "ind": 0, "tointer": "select the rows whose of candidates nominated record is greater than 50 .", "tostr": "filter_greater { all_rows ; of candidates nominated ; 50 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; of candidates nominated ; 50 } }", "tointer": "select the rows whose of candidates nominated record is greater than 50 . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "of candidates nominated", "50"], "result": null, "ind": 0, "tointer": "select the rows whose of candidates nominated record is greater than 50 .", "tostr": "filter_greater { all_rows ; of candidates nominated ; 50 }"}, "election"], "result": "2008", "ind": 2, "tostr": "hop { filter_greater { all_rows ; of candidates nominated ; 50 } ; election }"}, "2008"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; of candidates nominated ; 50 } ; election } ; 2008 }", "tointer": "the election record of this unqiue row is 2008 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; of candidates nominated ; 50 } } ; eq { hop { filter_greater { all_rows ; of candidates nominated ; 50 } ; election } ; 2008 } } = true", "tointer": "select the rows whose of candidates nominated record is greater than 50 . there is only one such row in the table . the election record of this unqiue row is 2008 ."}, "logic_str": "and { only { filter_greater { all_rows ; of candidates nominated ; 50 } } ; eq { hop { filter_greater { all_rows ; of candidates nominated ; 50 } ; election } ; 2008 } } = true", "interpret": "select the rows whose of candidates nominated record is greater than 50 . there is only one such row in the table . the election record of this unqiue row is 2008 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "of candidates nominated_7": 7, "50_8": 8, "eq_3": 3, "num_hop_2": 2, "election_9": 9, "2008_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "of candidates nominated_7": "of candidates nominated", "50_8": "50", "eq_3": "eq", "num_hop_2": "num_hop", "election_9": "election", "2008_10": "2008"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "of candidates nominated_7": [0], "50_8": [0], "eq_3": [4], "num_hop_2": [3], "election_9": [2], "2008_10": [3]}, "table_header": ["election", "of candidates nominated", "of seats won", "of total votes", "% of popular vote"], "table_cont": [["1993", "11", "0", "1995", "0.20 %"], ["1997", "7", "0", "1039", "0.11 %"], ["2001", "10", "0", "2085", "0.28 %"], ["2004", "49", "0", "24588", "2.75 %"], ["2008", "79", "0", "43563", "4.58 %"]], "query": "and { only { filter_greater { all_rows ; of candidates nominated ; 50 } } ; eq { hop { filter_greater { all_rows ; of candidates nominated ; 50 } ; election } ; 2008 } } = true", "question": "in alberta greens , the year 2008 was the only year were over 50 candidates were nominated ."}, {"topic": "1963 new york giants season", "wiki": "https://en.wikipedia.org/wiki/1963_New_York_Giants_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16660997-15.html.csv", "action": "comparative", "sent": "during the 1963 new york giants season , the new york giants had a greater attendance at their november 10th game against the philadelphia eagles than at their november 3rd game against the st. louis cardinals .", "annotation": {"row_1": "9", "row_2": "8", "col": "5", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "november 10 , 1963"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to november 10 , 1963 .", "tostr": "filter_eq { all_rows ; date ; november 10 , 1963 }"}, "attendance"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; november 10 , 1963 } ; attendance }", "tointer": "select the rows whose date record fuzzily matches to november 10 , 1963 . take the attendance record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "november 3 , 1963"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to november 3 , 1963 .", "tostr": "filter_eq { all_rows ; date ; november 3 , 1963 }"}, "attendance"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; november 3 , 1963 } ; attendance }", "tointer": "select the rows whose date record fuzzily matches to november 3 , 1963 . take the attendance record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; date ; november 10 , 1963 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 3 , 1963 } ; attendance } } = true", "tointer": "select the rows whose date record fuzzily matches to november 10 , 1963 . take the attendance record of this row . select the rows whose date record fuzzily matches to november 3 , 1963 . take the attendance record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; date ; november 10 , 1963 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 3 , 1963 } ; attendance } } = true", "interpret": "select the rows whose date record fuzzily matches to november 10 , 1963 . take the attendance record of this row . select the rows whose date record fuzzily matches to november 3 , 1963 . take the attendance record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "date_7": 7, "november 10 , 1963_8": 8, "attendance_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "date_11": 11, "november 3 , 1963_12": 12, "attendance_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date_7": "date", "november 10 , 1963_8": "november 10 , 1963", "attendance_9": "attendance", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "date_11": "date", "november 3 , 1963_12": "november 3 , 1963", "attendance_13": "attendance"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "date_7": [0], "november 10 , 1963_8": [0], "attendance_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "date_11": [1], "november 3 , 1963_12": [1], "attendance_13": [3]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 15 , 1963", "baltimore colts", "w 37 - 28", "60029"], ["2", "september 22 , 1963", "pittsburgh steelers", "l 31 - 0", "46068"], ["3", "september 29 , 1963", "philadelphia eagles", "w 37 - 14", "60671"], ["4", "october 6 , 1963", "washington redskins", "w 24 - 14", "49419"], ["5", "october 13 , 1963", "cleveland browns", "l 35 - 24", "62956"], ["6", "october 20 , 1963", "dallas cowboys", "w 37 - 21", "62889"], ["7", "october 27 , 1963", "cleveland browns", "w 33 - 6", "84213"], ["8", "november 3 , 1963", "st louis cardinals", "w 38 - 21", "29482"], ["9", "november 10 , 1963", "philadelphia eagles", "w 42 - 14", "62936"], ["10", "november 17 , 1963", "san francisco 49ers", "w 48 - 14", "62982"], ["11", "november 24 , 1963", "st louis cardinals", "l 24 - 17", "62992"], ["12", "december 1 , 1963", "dallas cowboys", "w 34 - 27", "29653"], ["13", "december 8 , 1963", "washington redskins", "w 44 - 14", "62992"], ["14", "december 15 , 1963", "pittsburgh steelers", "w 33 - 17", "63240"]], "query": "greater { hop { filter_eq { all_rows ; date ; november 10 , 1963 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 3 , 1963 } ; attendance } } = true", "question": "during the 1963 new york giants season , the new york giants had a greater attendance at their november 10th game against the philadelphia eagles than at their november 3rd game against the st. louis cardinals ."}, {"topic": "the wire ( season 1 )", "wiki": "https://en.wikipedia.org/wiki/The_Wire_%28season_1%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-14346353-1.html.csv", "action": "majority", "sent": "all of the wire episodes had the story credited to david simons and ed burns .", "annotation": {"scope": "all", "col": "3", "most_or_all": "all", "criterion": "equal", "value": "david simon & ed burns", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "story by", "david simon & ed burns"], "result": true, "ind": 0, "tointer": "for the story by records of all rows , all of them fuzzily match to david simon & ed burns .", "tostr": "all_eq { all_rows ; story by ; david simon & ed burns } = true"}, "logic_str": "all_eq { all_rows ; story by ; david simon & ed burns } = true", "interpret": "for the story by records of all rows , all of them fuzzily match to david simon & ed burns .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "story by_3": 3, "david simon & ed burns_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "story by_3": "story by", "david simon & ed burns_4": "david simon & ed burns"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "story by_3": [0], "david simon & ed burns_4": [0]}, "table_header": ["series", "title", "story by", "teleplay by", "directed by", "original air date"], "table_cont": [["1", "the target", "david simon & ed burns", "david simon", "clark johnson", "june 2 , 2002"], ["2", "the detail", "david simon & ed burns", "david simon", "clark johnson", "june 9 , 2002"], ["3", "the buys", "david simon & ed burns", "david simon", "peter medak", "june 16 , 2002"], ["4", "old cases", "david simon & ed burns", "david simon", "clement virgo", "june 23 , 2002"], ["5", "the pager", "david simon & ed burns", "ed burns", "clark johnson", "june 30 , 2002"], ["6", "the wire", "david simon & ed burns", "david simon", "ed bianchi", "july 7 , 2002"], ["7", "one arrest", "david simon & ed burns", "rafael alvarez", "joe chappelle", "july 21 , 2002"], ["8", "lessons", "david simon & ed burns", "david simon", "gloria muzio", "july 28 , 2002"], ["9", "game day", "david simon & ed burns", "david h melnick & shamit choksey", "mil\u010do man\u010devski", "august 4 , 2002"], ["10", "the cost", "david simon & ed burns", "david simon", "brad anderson", "august 11 , 2002"], ["11", "the hunt", "david simon & ed burns", "joy lusco", "steve shill", "august 18 , 2002"], ["12", "cleaning up", "david simon & ed burns", "george pelecanos", "clement virgo", "september 1 , 2002"]], "query": "all_eq { all_rows ; story by ; david simon & ed burns } = true", "question": "all of the wire episodes had the story credited to david simons and ed burns ."}, {"topic": "plug - in electric vehicles in the united states", "wiki": "https://en.wikipedia.org/wiki/Plug-in_electric_vehicles_in_the_United_States", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24620684-2.html.csv", "action": "aggregation", "sent": "of the electric vehicles in the united states the average gallon to mile ratio for clean electric grid california is 131.4 g / mile .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "131.4 g / mile", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "clean electric grid california ( san francisco )"], "result": "131.4 g / mile", "ind": 0, "tostr": "avg { all_rows ; clean electric grid california ( san francisco ) }"}, "131.4 g / mile"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; clean electric grid california ( san francisco ) } ; 131.4 g / mile } = true", "tointer": "the average of the clean electric grid california ( san francisco ) record of all rows is 131.4 g / mile ."}, "logic_str": "round_eq { avg { all_rows ; clean electric grid california ( san francisco ) } ; 131.4 g / mile } = true", "interpret": "the average of the clean electric grid california ( san francisco ) record of all rows is 131.4 g / mile .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "clean electric grid california (san francisco)_4": 4, "131.4 g / mile_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "clean electric grid california (san francisco)_4": "clean electric grid california ( san francisco )", "131.4 g / mile_5": "131.4 g / mile"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "clean electric grid california (san francisco)_4": [0], "131.4 g / mile_5": [1]}, "table_header": ["vehicle", "operating mode", "epa rated all - electric range", "epa rated combined fuel economy", "clean electric grid california ( san francisco )", "us national average electric mix", "dirty electric grid rocky mountains ( denver )"], "table_cont": [["mitsubishi i - miev", "all - electric", "-", "112 mpg - e ( 30 kw - hrs / 100 mi )", "100 g / mi ( 62 g / km )", "200 g / mi ( 124 g / km )", "290 g / mi ( 180 g / km )"], ["ford focus electric", "all - electric", "-", "105 mpg - e ( 32 kw - hrs / 100 mi )", "110 g / mi ( 68 g / km )", "210 g / mi ( 131 g / km )", "310 g / mi ( 193 g / km )"], ["bmw activee", "all - electric", "-", "102 mpg - e ( 33 kw - hrs / 100 mi )", "110 g / mi ( 68 g / km )", "220 g / mi ( 137 g / km )", "320 g / mi ( 199 g / km )"], ["nissan leaf", "all - electric", "-", "99 mpg - e ( 34 kw - hrs / 100 mi )", "120 g / mi ( 75 g / km )", "230 g / mi ( 143 g / km )", "330 g / mi ( 205 g / km )"], ["chevrolet volt", "electricity only ( charge - depleting )", "-", "94 mpg - e ( 36 kw - hrs / 100 mi )", "190 g / mi ( 118 g / km ) ( 1 )", "260 g / mi ( 162 g / km ) ( 1 )", "330 g / mi ( 205 g / km ) ( 1 )"], ["smart ed", "all - electric", "-", "87 mpg - e ( 39 kw - hrs / 100 mi )", "130 g / mi ( 81 g / km )", "260 g / mi ( 162 g / km )", "380 g / mi ( 236 g / km )"], ["coda", "all - electric", "-", "73 mpg - e ( 46 kw - hrs / 100 mi )", "160 g / mi ( 99 g / km )", "300 g / mi ( 186 g / km )", "440 g / mi ( 273 g / km )"]], "query": "round_eq { avg { all_rows ; clean electric grid california ( san francisco ) } ; 131.4 g / mile } = true", "question": "of the electric vehicles in the united states the average gallon to mile ratio for clean electric grid california is 131.4 g / mile ."}, {"topic": "east coast conference", "wiki": "https://en.wikipedia.org/wiki/East_Coast_Conference", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1969577-1.html.csv", "action": "comparative", "sent": "more people attended school at mercy college than at dowling college .", "annotation": {"row_1": "5", "row_2": "4", "col": "6", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "institution", "mercy college"], "result": null, "ind": 0, "tointer": "select the rows whose institution record fuzzily matches to mercy college .", "tostr": "filter_eq { all_rows ; institution ; mercy college }"}, "enrollment"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; institution ; mercy college } ; enrollment }", "tointer": "select the rows whose institution record fuzzily matches to mercy college . take the enrollment record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "institution", "dowling college"], "result": null, "ind": 1, "tointer": "select the rows whose institution record fuzzily matches to dowling college .", "tostr": "filter_eq { all_rows ; institution ; dowling college }"}, "enrollment"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; institution ; dowling college } ; enrollment }", "tointer": "select the rows whose institution record fuzzily matches to dowling college . take the enrollment record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; institution ; mercy college } ; enrollment } ; hop { filter_eq { all_rows ; institution ; dowling college } ; enrollment } } = true", "tointer": "select the rows whose institution record fuzzily matches to mercy college . take the enrollment record of this row . select the rows whose institution record fuzzily matches to dowling college . take the enrollment record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; institution ; mercy college } ; enrollment } ; hop { filter_eq { all_rows ; institution ; dowling college } ; enrollment } } = true", "interpret": "select the rows whose institution record fuzzily matches to mercy college . take the enrollment record of this row . select the rows whose institution record fuzzily matches to dowling college . take the enrollment record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "institution_7": 7, "mercy college_8": 8, "enrollment_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "institution_11": 11, "dowling college_12": 12, "enrollment_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "institution_7": "institution", "mercy college_8": "mercy college", "enrollment_9": "enrollment", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "institution_11": "institution", "dowling college_12": "dowling college", "enrollment_13": "enrollment"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "institution_7": [0], "mercy college_8": [0], "enrollment_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "institution_11": [1], "dowling college_12": [1], "enrollment_13": [3]}, "table_header": ["institution", "nickname", "location", "founded", "type", "enrollment", "joined"], "table_cont": [["university of bridgeport", "purple knights", "bridgeport , connecticut", "1927", "private", "4018", "2000"], ["daemen college", "wildcats", "amherst , new york", "1947", "private ( nonsectarian )", "2100", "2013"], ["university of the district of columbia", "firebirds", "washington , dc", "1851", "public", "5471", "2011"], ["dowling college", "golden lions", "oakdale , new york", "1963", "private", "7000", "1989"], ["mercy college", "mavericks", "dobbs ferry , new york", "1950", "private", "10000", "1989"], ["molloy college", "lions", "rockville centre , new york", "1955", "private", "3533", "1989"], ["new york institute of technology", "bears", "old westbury , new york", "1955", "private", "12755", "1989"], ["queens college", "knights", "flushing , new york", "1937", "public", "17639", "1989"], ["roberts wesleyan college", "redhawks", "chili , new york", "1866", "private ( free methodist )", "2000", "2012"]], "query": "greater { hop { filter_eq { all_rows ; institution ; mercy college } ; enrollment } ; hop { filter_eq { all_rows ; institution ; dowling college } ; enrollment } } = true", "question": "more people attended school at mercy college than at dowling college ."}, {"topic": "houston rockets all - time roster", "wiki": "https://en.wikipedia.org/wiki/Houston_Rockets_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11734041-17.html.csv", "action": "comparative", "sent": "bob sura played for the houston rockets later than john stroud .", "annotation": {"row_1": "16", "row_2": "15", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "sura , bob bob sura"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to sura , bob bob sura .", "tostr": "filter_eq { all_rows ; player ; sura , bob bob sura }"}, "years for rockets"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; sura , bob bob sura } ; years for rockets }", "tointer": "select the rows whose player record fuzzily matches to sura , bob bob sura . take the years for rockets record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "stroud , john john stroud"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to stroud , john john stroud .", "tostr": "filter_eq { all_rows ; player ; stroud , john john stroud }"}, "years for rockets"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; stroud , john john stroud } ; years for rockets }", "tointer": "select the rows whose player record fuzzily matches to stroud , john john stroud . take the years for rockets record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; player ; sura , bob bob sura } ; years for rockets } ; hop { filter_eq { all_rows ; player ; stroud , john john stroud } ; years for rockets } } = true", "tointer": "select the rows whose player record fuzzily matches to sura , bob bob sura . take the years for rockets record of this row . select the rows whose player record fuzzily matches to stroud , john john stroud . take the years for rockets record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; player ; sura , bob bob sura } ; years for rockets } ; hop { filter_eq { all_rows ; player ; stroud , john john stroud } ; years for rockets } } = true", "interpret": "select the rows whose player record fuzzily matches to sura , bob bob sura . take the years for rockets record of this row . select the rows whose player record fuzzily matches to stroud , john john stroud . take the years for rockets record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "sura , bob bob sura_8": 8, "years for rockets_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "stroud , john john stroud_12": 12, "years for rockets_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "sura , bob bob sura_8": "sura , bob bob sura", "years for rockets_9": "years for rockets", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "stroud , john john stroud_12": "stroud , john john stroud", "years for rockets_13": "years for rockets"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "sura , bob bob sura_8": [0], "years for rockets_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "stroud , john john stroud_12": [1], "years for rockets_13": [3]}, "table_header": ["player", "no ( s )", "height in ft", "position", "years for rockets", "school / club team / country"], "table_cont": [["sampson , ralph ralph sampson", "50", "7 - 4", "forward / center", "1983 - 88", "virginia"], ["scola , luis luis scola", "4", "6 - 9", "forward", "2007 - 2012", "argentina"], ["short , purvis purvis short", "10", "6 - 7", "forward / guard", "1987 - 89", "jackson state"], ["shumate , john john shumate", "34", "6 - 9", "forward", "1979 - 80", "notre dame"], ["siegfried , larry larry siegfried", "20", "6 - 3", "guard", "1970 - 71", "ohio state"], ["smith , bobby bobby smith", "32", "6 - 5", "forward", "1969 - 70", "tulsa"], ["smith , greg greg smith", "4", "6 - 5", "forward", "1971 - 72", "western kentucky"], ["smith , kenny kenny smith", "30", "6 - 3", "guard", "1990 - 96", "north carolina"], ["smith , larry larry smith", "13", "6 - 8", "forward / center", "1989 - 92", "alcorn state"], ["snyder , kirk kirk snyder", "13", "6 - 6", "guard", "2006 - 08", "nevada - reno"], ["spanoulis , vassilis vassilis spanoulis", "10", "6 - 4", "guard", "2006 - 07", "greece"], ["spriggs , larry larry spriggs", "35", "6 - 7", "forward", "1981", "howard"], ["stephens , joe joe stephens", "41", "6 - 7", "forward", "1997", "arkansas - little rock"], ["strickland , rod rod strickland", "31", "6 - 3", "guard", "2004 - 05", "depaul"], ["stroud , john john stroud", "42", "6 - 7", "forward", "1980 - 81", "mississippi"], ["sura , bob bob sura", "3", "6 - 5", "guard", "2004 - 07", "florida state"]], "query": "greater { hop { filter_eq { all_rows ; player ; sura , bob bob sura } ; years for rockets } ; hop { filter_eq { all_rows ; player ; stroud , john john stroud } ; years for rockets } } = true", "question": "bob sura played for the houston rockets later than john stroud ."}, {"topic": "reg parnell", "wiki": "https://en.wikipedia.org/wiki/Reg_Parnell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1235870-1.html.csv", "action": "superlative", "sent": "the most recent year that reg parnell participated with a car was when the chassis was a ferrari 500 / 625 .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "year"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; year }"}, "chassis"], "result": "ferrari 500 / 625", "ind": 1, "tostr": "hop { argmax { all_rows ; year } ; chassis }"}, "ferrari 500 / 625"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; year } ; chassis } ; ferrari 500 / 625 } = true", "tointer": "select the row whose year record of all rows is maximum . the chassis record of this row is ferrari 500 / 625 ."}, "logic_str": "eq { hop { argmax { all_rows ; year } ; chassis } ; ferrari 500 / 625 } = true", "interpret": "select the row whose year record of all rows is maximum . the chassis record of this row is ferrari 500 / 625 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "year_5": 5, "chassis_6": 6, "ferrari 500 / 625_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "year_5": "year", "chassis_6": "chassis", "ferrari 500 / 625_7": "ferrari 500 / 625"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "year_5": [0], "chassis_6": [1], "ferrari 500 / 625_7": [2]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1950", "alfa romeo spa", "alfa romeo 158", "alfa romeo straight - 8", "4"], ["1950", "scuderia ambrosiana", "maserati 4clt / 48", "maserati straight - 4", "4"], ["1951", "ga vandervell", "ferrari 375 thinwall", "ferrari v12", "5"], ["1951", "brm ltd", "brm p15", "brm v16", "5"], ["1952", "ahm bryde", "cooper t20", "bristol straight - 6", "0"], ["1954", "scuderia ambrosiana", "ferrari 500 / 625", "ferrari straight - 4", "0"]], "query": "eq { hop { argmax { all_rows ; year } ; chassis } ; ferrari 500 / 625 } = true", "question": "the most recent year that reg parnell participated with a car was when the chassis was a ferrari 500 / 625 ."}, {"topic": "2007 u.s. women 's open golf championship", "wiki": "https://en.wikipedia.org/wiki/2007_U.S._Women%27s_Open_Golf_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18369370-4.html.csv", "action": "majority", "sent": "the majority of the players in the 2007 u.s. women 's open golf championship were from south korea .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "south korea", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "country", "south korea"], "result": true, "ind": 0, "tointer": "for the country records of all rows , most of them fuzzily match to south korea .", "tostr": "most_eq { all_rows ; country ; south korea } = true"}, "logic_str": "most_eq { all_rows ; country ; south korea } = true", "interpret": "for the country records of all rows , most of them fuzzily match to south korea .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "country_3": 3, "south korea_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "country_3": "country", "south korea_4": "south korea"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "country_3": [0], "south korea_4": [0]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["1", "cristie kerr", "united states", "71 + 72 + 66 + 70 = 279", "- 5", "560000"], ["t2", "angela park", "brazil", "68 + 69 + 74 + 70 = 281", "- 3", "271022"], ["t2", "lorena ochoa", "mexico", "71 + 71 + 68 + 71 = 281", "- 3", "271022"], ["t4", "se ri pak", "south korea", "74 + 72 + 68 + 68 = 282", "- 2", "130549"], ["t4", "inbee park", "south korea", "69 + 73 + 71 + 69 = 282", "- 2", "130549"], ["6", "jiyai shin", "south korea", "70 + 69 + 71 + 74 = 284", "e", "103581"], ["7", "jee young lee", "south korea", "72 + 71 + 71 + 71 = 285", "+ 1", "93031"], ["t8", "mi hyun kim", "south korea", "71 + 75 + 70 + 70 = 286", "+ 2", "82464"], ["t8", "jeong jang", "south korea", "72 + 71 + 70 + 73 = 286", "+ 2", "82464"], ["t10", "ai miyazato", "japan", "73 + 73 + 72 + 69 = 287", "+ 3", "66177"], ["t10", "kyeong bae", "south korea", "74 + 71 + 72 + 70 = 287", "+ 3", "66177"], ["t10", "julieta granada", "paraguay", "70 + 69 + 75 + 73 = 287", "+ 3", "66177"], ["t10", "morgan pressel", "united states", "71 + 70 + 69 + 77 = 287", "+ 3", "66177"]], "query": "most_eq { all_rows ; country ; south korea } = true", "question": "the majority of the players in the 2007 u.s. women 's open golf championship were from south korea ."}, {"topic": "1969 vfl season", "wiki": "https://en.wikipedia.org/wiki/1969_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10809157-3.html.csv", "action": "superlative", "sent": "in the 1969 vfl season , the mcg venue had the largest crowd .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "5", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "crowd"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; crowd }"}, "venue"], "result": "mcg", "ind": 1, "tostr": "hop { argmax { all_rows ; crowd } ; venue }"}, "mcg"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; crowd } ; venue } ; mcg } = true", "tointer": "select the row whose crowd record of all rows is maximum . the venue record of this row is mcg ."}, "logic_str": "eq { hop { argmax { all_rows ; crowd } ; venue } ; mcg } = true", "interpret": "select the row whose crowd record of all rows is maximum . the venue record of this row is mcg .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "crowd_5": 5, "venue_6": 6, "mcg_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "crowd_5": "crowd", "venue_6": "venue", "mcg_7": "mcg"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "crowd_5": [0], "venue_6": [1], "mcg_7": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "19.20 ( 134 )", "south melbourne", "11.8 ( 74 )", "kardinia park", "15068", "19 april 1969"], ["fitzroy", "14.7 ( 91 )", "st kilda", "19.18 ( 132 )", "princes park", "12240", "19 april 1969"], ["essendon", "12.13 ( 85 )", "hawthorn", "14.14 ( 98 )", "windy hill", "15800", "19 april 1969"], ["collingwood", "19.16 ( 130 )", "melbourne", "9.8 ( 62 )", "victoria park", "18729", "19 april 1969"], ["richmond", "13.28 ( 106 )", "north melbourne", "16.15 ( 111 )", "mcg", "26884", "19 april 1969"], ["footscray", "7.10 ( 52 )", "carlton", "11.15 ( 81 )", "western oval", "20250", "19 april 1969"]], "query": "eq { hop { argmax { all_rows ; crowd } ; venue } ; mcg } = true", "question": "in the 1969 vfl season , the mcg venue had the largest crowd ."}, {"topic": "jake rosholt", "wiki": "https://en.wikipedia.org/wiki/Jake_Rosholt", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1634072-2.html.csv", "action": "count", "sent": "a total of two of jake rosholt 's fights ended in the second round .", "annotation": {"scope": "all", "criterion": "equal", "value": "2", "result": "2", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "round", "2"], "result": null, "ind": 0, "tointer": "select the rows whose round record is equal to 2 .", "tostr": "filter_eq { all_rows ; round ; 2 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; round ; 2 } }", "tointer": "select the rows whose round record is equal to 2 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; round ; 2 } } ; 2 } = true", "tointer": "select the rows whose round record is equal to 2 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; round ; 2 } } ; 2 } = true", "interpret": "select the rows whose round record is equal to 2 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "round_5": 5, "2_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "round_5": "round", "2_6": "2", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "round_5": [0], "2_6": [0], "2_7": [2]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "time", "location"], "table_cont": [["loss", "12 - 5 ( 1 )", "anthony johnson", "tko ( head kick )", "xtreme fight night 9", "2", "4:22", "tulsa , oklahoma , united states"], ["loss", "12 - 4 ( 1 )", "matt thompson", "submission ( kneebar )", "xko 15", "1", "4:16", "arlington , texas , united states"], ["win", "12 - 3 ( 1 )", "matt horwich", "decision ( unanimous )", "shark fights 17 : horwich vs rosholt 2", "3", "5:00", "frisco , texas , united states"], ["nc", "11 - 3 ( 1 )", "john ott", "no contest ( illegal knee )", "titan fighting championships 18", "3", "4:23", "kansas city , kansas , united states"], ["win", "11 - 3", "john malbrough", "submission ( arm - triangle choke )", "cowboy mma : caged cowboys", "1", "1:42", "ponca city , oklahoma , united states"], ["win", "10 - 3", "brandon mcdowell", "tko ( punches )", "back alley promotions", "1", "1:36", "arlington , texas , united states"], ["win", "9 - 3", "john bryant", "technical submission ( rear - naked choke )", "bellator 37", "1", "1:02", "concho , oklahoma , united states"], ["win", "8 - 3", "josh smidt", "submission ( guillotine choke )", "c3 fights : slamfest", "1", "1:41", "newkirk , oklahoma , united states"], ["loss", "7 - 3", "matt horwich", "tko ( punches )", "xtreme fight night : rosholt vs horwich", "3", "2:56", "tulsa , oklahoma , united states"], ["win", "7 - 2", "rudy lindsey", "submission ( rear - naked choke )", "xfl : march badness", "1", "2:37", "tulsa , oklahoma , united states"], ["loss", "6 - 2", "kendall grove", "submission ( triangle choke )", "ufc 106", "1", "3:59", "las vegas , nevada , united states"], ["win", "6 - 1", "chris leben", "technical submission ( arm - triangle choke )", "ufc 102", "3", "1:30", "portland , oregon , united states"], ["loss", "5 - 1", "dan miller", "submission ( guillotine choke )", "ufc fight night : lauzon vs stephens", "1", "1:03", "tampa , florida , united states"], ["win", "5 - 0", "nissen osterneck", "tko ( punches )", "wec 36", "2", "3:48", "hollywood , florida , united states"], ["win", "4 - 0", "chad jay", "tko ( punches )", "xtreme fighting league", "3", "2:37", "tulsa , oklahoma , united states"], ["win", "3 - 0", "jeremiah caves", "tko ( punches )", "hrp : fight night", "1", "1:42", "tulsa , oklahoma , united states"], ["win", "2 - 0", "christopher clark", "tko ( punches )", "masters of the cage 16", "3", "2:37", "oklahoma city , oklahoma , united states"], ["win", "1 - 0", "dusty miller", "submission ( guillotine choke )", "masters of the cage 15", "1", "3:40", "oklahoma city , oklahoma , united states"]], "query": "eq { count { filter_eq { all_rows ; round ; 2 } } ; 2 } = true", "question": "a total of two of jake rosholt 's fights ended in the second round ."}, {"topic": "jorge aguilar", "wiki": "https://en.wikipedia.org/wiki/Jorge_Aguilar", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10713126-4.html.csv", "action": "unique", "sent": "the panama city tournament was the only tournament where sergio gald\u00f3s was jorge aguilar 's partner .", "annotation": {"scope": "all", "row": "6", "col": "5", "col_other": "3", "criterion": "equal", "value": "sergio gald\u00f3s", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "partner", "sergio gald\u00f3s"], "result": null, "ind": 0, "tointer": "select the rows whose partner record fuzzily matches to sergio gald\u00f3s .", "tostr": "filter_eq { all_rows ; partner ; sergio gald\u00f3s }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; partner ; sergio gald\u00f3s } }", "tointer": "select the rows whose partner record fuzzily matches to sergio gald\u00f3s . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "partner", "sergio gald\u00f3s"], "result": null, "ind": 0, "tointer": "select the rows whose partner record fuzzily matches to sergio gald\u00f3s .", "tostr": "filter_eq { all_rows ; partner ; sergio gald\u00f3s }"}, "tournament"], "result": "panama city", "ind": 2, "tostr": "hop { filter_eq { all_rows ; partner ; sergio gald\u00f3s } ; tournament }"}, "panama city"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; partner ; sergio gald\u00f3s } ; tournament } ; panama city }", "tointer": "the tournament record of this unqiue row is panama city ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; partner ; sergio gald\u00f3s } } ; eq { hop { filter_eq { all_rows ; partner ; sergio gald\u00f3s } ; tournament } ; panama city } } = true", "tointer": "select the rows whose partner record fuzzily matches to sergio gald\u00f3s . there is only one such row in the table . the tournament record of this unqiue row is panama city ."}, "logic_str": "and { only { filter_eq { all_rows ; partner ; sergio gald\u00f3s } } ; eq { hop { filter_eq { all_rows ; partner ; sergio gald\u00f3s } ; tournament } ; panama city } } = true", "interpret": "select the rows whose partner record fuzzily matches to sergio gald\u00f3s . there is only one such row in the table . the tournament record of this unqiue row is panama city .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "partner_7": 7, "sergio gald\u00f3s_8": 8, "str_eq_3": 3, "str_hop_2": 2, "tournament_9": 9, "panama city_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "partner_7": "partner", "sergio gald\u00f3s_8": "sergio gald\u00f3s", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "tournament_9": "tournament", "panama city_10": "panama city"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "partner_7": [0], "sergio gald\u00f3s_8": [0], "str_eq_3": [4], "str_hop_2": [3], "tournament_9": [2], "panama city_10": [3]}, "table_header": ["outcome", "date", "tournament", "surface", "partner", "opponent", "score"], "table_cont": [["runner - up", "23 january 2006", "santiago", "clay", "felipe parada", "m\u00e1ximo gonz\u00e1lez sergio roitman", "4 - 6 , 3 - 6"], ["runner - up", "2 april 2007", "san luis potos\u00ed", "clay", "pablo gonzalez", "j\u00e9r\u00e9my chardy marcelo melo", "0 - 6 , 3 - 6"], ["runner - up", "4 october 2010", "buenos aires", "clay", "federico delbonis", "carlos berlocq brian dabul", "3 - 6 , 2 - 6"], ["runner - up", "30 may 2011", "furth", "clay", "julio c\u00e9sar campozano", "rameez junaid frank moser", "2 - 6 , 7 - 6 ( 2 ) , 7 - 10"], ["winner", "1 august 2011", "trani", "clay", "andres molteni", "giulio di meo stefano ianni", "6 - 4 , 6 - 4"], ["winner", "15 april 2013", "panama city", "clay", "sergio gald\u00f3s", "alejandro gonz\u00e1lez julio c\u00e9sar campozano", "6 - 4 , 6 - 4"]], "query": "and { only { filter_eq { all_rows ; partner ; sergio gald\u00f3s } } ; eq { hop { filter_eq { all_rows ; partner ; sergio gald\u00f3s } ; tournament } ; panama city } } = true", "question": "the panama city tournament was the only tournament where sergio gald\u00f3s was jorge aguilar 's partner ."}, {"topic": "list of supernanny episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Supernanny_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19897294-9.html.csv", "action": "majority", "sent": "most of the supernanny series episodes were aired in the month of july .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "fuzzily_match", "value": "july", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "original air date", "july"], "result": true, "ind": 0, "tointer": "for the original air date records of all rows , most of them fuzzily match to july .", "tostr": "most_eq { all_rows ; original air date ; july } = true"}, "logic_str": "most_eq { all_rows ; original air date ; july } = true", "interpret": "for the original air date records of all rows , most of them fuzzily match to july .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "original air date_3": 3, "july_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "original air date_3": "original air date", "july_4": "july"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "original air date_3": [0], "july_4": [0]}, "table_header": ["no overall", "no in series", "family / families", "location ( s )", "original air date"], "table_cont": [["uk36", "1", "the murphy family and the laws family", "north london & high wycombe", "6 july 2011"], ["uk37", "2", "the ryder family and the schwartz family", "hull & east london", "13 july 2011"], ["uk38", "3", "the reynolds family and the simpson family", "reading & ilford", "20 july 2011"], ["uk39", "4", "the abbas family and the pickering family", "surrey & hondo , tx", "27 july 2011"], ["uk40", "5", "the haynes family and the potter family", "cardiff & west london", "3 august 2011"]], "query": "most_eq { all_rows ; original air date ; july } = true", "question": "most of the supernanny series episodes were aired in the month of july ."}, {"topic": "2003 - 04 toronto raptors season", "wiki": "https://en.wikipedia.org/wiki/2003%E2%80%9304_Toronto_Raptors_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-15869204-8.html.csv", "action": "count", "sent": "vince carter led the team in scoring twelve times during the fourteen game stretch .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "vince carter", "result": "12", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "high points", "vince carter"], "result": null, "ind": 0, "tointer": "select the rows whose high points record fuzzily matches to vince carter .", "tostr": "filter_eq { all_rows ; high points ; vince carter }"}], "result": "12", "ind": 1, "tostr": "count { filter_eq { all_rows ; high points ; vince carter } }", "tointer": "select the rows whose high points record fuzzily matches to vince carter . the number of such rows is 12 ."}, "12"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; high points ; vince carter } } ; 12 } = true", "tointer": "select the rows whose high points record fuzzily matches to vince carter . the number of such rows is 12 ."}, "logic_str": "eq { count { filter_eq { all_rows ; high points ; vince carter } } ; 12 } = true", "interpret": "select the rows whose high points record fuzzily matches to vince carter . the number of such rows is 12 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "high points_5": 5, "vince carter_6": 6, "12_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "high points_5": "high points", "vince carter_6": "vince carter", "12_7": "12"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "high points_5": [0], "vince carter_6": [0], "12_7": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["60", "march 2", "miami", "w 89 - 86 ( ot )", "vince carter ( 27 )", "chris bosh ( 9 )", "vince carter ( 8 )", "american airlines arena 14178", "26 - 34"], ["61", "march 3", "washington", "l 70 - 84 ( ot )", "donyell marshall ( 22 )", "donyell marshall ( 10 )", "milt palacio ( 8 )", "mci center 13921", "26 - 35"], ["62", "march 5", "new york", "l 103 - 109 ( ot )", "vince carter ( 32 )", "donyell marshall ( 11 )", "vince carter ( 9 )", "air canada centre 19287", "26 - 36"], ["63", "march 7", "new orleans", "w 84 - 76 ( ot )", "vince carter ( 26 )", "donyell marshall ( 14 )", "vince carter ( 8 )", "air canada centre 17031", "27 - 36"], ["64", "march 9", "indiana", "l 84 - 94 ( ot )", "vince carter ( 28 )", "donyell marshall ( 13 )", "rod strickland ( 16 )", "conseco fieldhouse 15123", "27 - 37"], ["65", "march 10", "cleveland", "l 92 - 106 ( ot )", "vince carter ( 19 )", "donyell marshall ( 12 )", "rod strickland ( 6 )", "air canada centre 17459", "27 - 38"], ["66", "march 14", "atlanta", "w 101 - 84 ( ot )", "vince carter ( 32 )", "chris bosh ( 16 )", "vince carter , jalen rose ( 7 )", "air canada centre 17628", "28 - 38"], ["67", "march 17", "utah", "w 85 - 81 ( ot )", "vince carter ( 24 )", "vince carter ( 9 )", "jalen rose ( 6 )", "air canada centre 17875", "29 - 38"], ["68", "march 19", "chicago", "l 91 - 96 ( ot )", "vince carter ( 30 )", "chris bosh ( 14 )", "jalen rose ( 6 )", "air canada centre 19348", "29 - 39"], ["69", "march 21", "new orleans", "w 121 - 120 ( ot )", "vince carter ( 42 )", "donyell marshall ( 7 )", "vince carter ( 12 )", "new orleans arena 14307", "30 - 39"], ["70", "march 23", "memphis", "l 86 - 95 ( ot )", "vince carter ( 30 )", "donyell marshall ( 17 )", "jalen rose ( 5 )", "pyramid arena 13191", "30 - 40"], ["71", "march 24", "houston", "l 89 - 90 ( ot )", "vince carter ( 26 )", "vince carter ( 13 )", "jalen rose ( 7 )", "toyota center 14388", "30 - 41"], ["72", "march 26", "new york", "l 101 - 108 ( ot )", "vince carter ( 40 )", "chris bosh ( 9 )", "jalen rose ( 9 )", "madison square garden 19763", "30 - 42"], ["73", "march 28", "memphis", "l 88 - 94 ( ot )", "jalen rose ( 18 )", "donyell marshall ( 14 )", "vince carter ( 9 )", "air canada centre 19088", "30 - 43"]], "query": "eq { count { filter_eq { all_rows ; high points ; vince carter } } ; 12 } = true", "question": "vince carter led the team in scoring twelve times during the fourteen game stretch ."}, {"topic": "1930 vfl season", "wiki": "https://en.wikipedia.org/wiki/1930_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10767641-2.html.csv", "action": "ordinal", "sent": "in may 1930 the princes park venue had the largest crowd for the carlton versus richmond game .", "annotation": {"scope": "all", "row": "3", "col": "6", "order": "1", "col_other": "1,3,7", "max_or_min": "max_to_min", "value_mentioned": "no", "subset": null}, "logic": {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "crowd", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; crowd ; 1 }"}, "home team"], "result": "carlton", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; crowd ; 1 } ; home team }"}, "carlton"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; home team } ; carlton }", "tointer": "select the row whose crowd record of all rows is 1st maximum . the home team record of this row is carlton ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "crowd", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; crowd ; 1 }"}, "away team"], "result": "richmond", "ind": 3, "tostr": "hop { nth_argmax { all_rows ; crowd ; 1 } ; away team }"}, "richmond"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; away team } ; richmond }", "tointer": "the away team record of this row is richmond ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "crowd", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; crowd ; 1 }"}, "date"], "result": "10 may 1930", "ind": 5, "tostr": "hop { nth_argmax { all_rows ; crowd ; 1 } ; date }"}, "10 may 1930"], "result": true, "ind": 6, "tostr": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; date } ; 10 may 1930 }", "tointer": "the date record of this row is 10 may 1930 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; away team } ; richmond } ; eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; date } ; 10 may 1930 } }", "tointer": "the away team record of this row is richmond . the date record of this row is 10 may 1930 ."}], "result": true, "ind": 8, "tostr": "and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; home team } ; carlton } ; and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; away team } ; richmond } ; eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; date } ; 10 may 1930 } } } = true", "tointer": "select the row whose crowd record of all rows is 1st maximum . the home team record of this row is carlton . the away team record of this row is richmond . the date record of this row is 10 may 1930 ."}, "logic_str": "and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; home team } ; carlton } ; and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; away team } ; richmond } ; eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; date } ; 10 may 1930 } } } = true", "interpret": "select the row whose crowd record of all rows is 1st maximum . the home team record of this row is carlton . the away team record of this row is richmond . the date record of this row is 10 may 1930 .", "num_func": 11, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "str_eq_2": 2, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_10": 10, "crowd_11": 11, "1_12": 12, "home team_13": 13, "carlton_14": 14, "and_7": 7, "str_eq_4": 4, "str_hop_3": 3, "away team_15": 15, "richmond_16": 16, "str_eq_6": 6, "str_hop_5": 5, "date_17": 17, "10 may 1930_18": 18}, "g_ids_features": {"and_8": "and", "result_9": "true", "str_eq_2": "str_eq", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_10": "all_rows", "crowd_11": "crowd", "1_12": "1", "home team_13": "home team", "carlton_14": "carlton", "and_7": "and", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "away team_15": "away team", "richmond_16": "richmond", "str_eq_6": "str_eq", "str_hop_5": "str_hop", "date_17": "date", "10 may 1930_18": "10 may 1930"}, "g_adj": {"and_8": [9], "result_9": [], "str_eq_2": [8], "str_hop_1": [2], "nth_argmax_0": [1, 3, 5], "all_rows_10": [0], "crowd_11": [0], "1_12": [0], "home team_13": [1], "carlton_14": [2], "and_7": [8], "str_eq_4": [7], "str_hop_3": [4], "away team_15": [3], "richmond_16": [4], "str_eq_6": [7], "str_hop_5": [6], "date_17": [5], "10 may 1930_18": [6]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "16.10 ( 106 )", "south melbourne", "11.12 ( 78 )", "junction oval", "21500", "10 may 1930"], ["collingwood", "11.12 ( 78 )", "hawthorn", "10.10 ( 70 )", "victoria park", "19000", "10 may 1930"], ["carlton", "17.14 ( 116 )", "richmond", "7.5 ( 47 )", "princes park", "35000", "10 may 1930"], ["melbourne", "14.16 ( 100 )", "geelong", "8.15 ( 63 )", "mcg", "14909", "10 may 1930"], ["north melbourne", "6.9 ( 45 )", "fitzroy", "9.11 ( 65 )", "arden street oval", "9000", "10 may 1930"], ["footscray", "10.14 ( 74 )", "essendon", "9.4 ( 58 )", "western oval", "18000", "10 may 1930"]], "query": "and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; home team } ; carlton } ; and { eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; away team } ; richmond } ; eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; date } ; 10 may 1930 } } } = true", "question": "in may 1930 the princes park venue had the largest crowd for the carlton versus richmond game ."}, {"topic": "2002 - 03 cleveland cavaliers season", "wiki": "https://en.wikipedia.org/wiki/2002%E2%80%9303_Cleveland_Cavaliers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16140345-7.html.csv", "action": "unique", "sent": "the only game played against the wizards was on february 4 .", "annotation": {"scope": "all", "row": "2", "col": "4", "col_other": "1", "criterion": "equal", "value": "wizards", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "home", "wizards"], "result": null, "ind": 0, "tointer": "select the rows whose home record fuzzily matches to wizards .", "tostr": "filter_eq { all_rows ; home ; wizards }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; home ; wizards } }", "tointer": "select the rows whose home record fuzzily matches to wizards . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "home", "wizards"], "result": null, "ind": 0, "tointer": "select the rows whose home record fuzzily matches to wizards .", "tostr": "filter_eq { all_rows ; home ; wizards }"}, "date"], "result": "4 february 2003", "ind": 2, "tostr": "hop { filter_eq { all_rows ; home ; wizards } ; date }"}, "4 february 2003"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; home ; wizards } ; date } ; 4 february 2003 }", "tointer": "the date record of this unqiue row is 4 february 2003 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; home ; wizards } } ; eq { hop { filter_eq { all_rows ; home ; wizards } ; date } ; 4 february 2003 } } = true", "tointer": "select the rows whose home record fuzzily matches to wizards . there is only one such row in the table . the date record of this unqiue row is 4 february 2003 ."}, "logic_str": "and { only { filter_eq { all_rows ; home ; wizards } } ; eq { hop { filter_eq { all_rows ; home ; wizards } ; date } ; 4 february 2003 } } = true", "interpret": "select the rows whose home record fuzzily matches to wizards . there is only one such row in the table . the date record of this unqiue row is 4 february 2003 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "home_7": 7, "wizards_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "4 february 2003_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "home_7": "home", "wizards_8": "wizards", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "4 february 2003_10": "4 february 2003"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "home_7": [0], "wizards_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "4 february 2003_10": [3]}, "table_header": ["date", "visitor", "score", "home", "leading scorer", "record"], "table_cont": [["2 february 2003", "trail blazers", "114 - 95", "cavaliers", "zydrunas ilgauskas ( 20 )", "9 - 39"], ["4 february 2003", "cavaliers", "84 - 93", "wizards", "dajuan wagner ( 19 )", "9 - 40"], ["5 february 2003", "rockets", "102 - 105", "cavaliers", "ricky davis ( 21 )", "10 - 40"], ["11 february 2003", "cavaliers", "96 - 107", "pacers", "jumaine jones ( 25 )", "10 - 41"], ["12 february 2003", "timberwolves", "102 - 91", "cavaliers", "ricky davis ( 26 )", "10 - 42"], ["16 february 2003", "pistons", "90 - 75", "cavaliers", "ricky davis ( 19 )", "10 - 43"], ["18 february 2003", "bulls", "107 - 101", "cavaliers", "carlos boozer ( 23 )", "10 - 44"], ["21 february 2003", "sixers", "119 - 99", "cavaliers", "zydrunas ilgauskas ( 19 )", "10 - 45"], ["23 february 2003", "cavaliers", "103 - 116", "sixers", "dajuan wagner ( 23 )", "10 - 46"], ["25 february 2003", "nets", "90 - 93", "cavaliers", "zydrunas ilgauskas ( 29 )", "11 - 46"], ["28 february 2003", "cavaliers", "95 - 118", "timberwolves", "two - way tie ( 16 )", "11 - 47"]], "query": "and { only { filter_eq { all_rows ; home ; wizards } } ; eq { hop { filter_eq { all_rows ; home ; wizards } ; date } ; 4 february 2003 } } = true", "question": "the only game played against the wizards was on february 4 ."}, {"topic": "list of six feet under episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Six_Feet_Under_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2182654-3.html.csv", "action": "ordinal", "sent": "i 'll take you is the last six feet under episode of the listed season .", "annotation": {"row": "12", "col": "6", "order": "1", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "original air date", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; original air date ; 1 }"}, "title"], "result": "i 'll take you", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; original air date ; 1 } ; title }"}, "i 'll take you"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; original air date ; 1 } ; title } ; i 'll take you } = true", "tointer": "select the row whose original air date record of all rows is 1st maximum . the title record of this row is i 'll take you ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; original air date ; 1 } ; title } ; i 'll take you } = true", "interpret": "select the row whose original air date record of all rows is 1st maximum . the title record of this row is i 'll take you .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "original air date_5": 5, "1_6": 6, "title_7": 7, "i'll take you_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "original air date_5": "original air date", "1_6": "1", "title_7": "title", "i'll take you_8": "i 'll take you"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "original air date_5": [0], "1_6": [0], "title_7": [1], "i'll take you_8": [2]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "original air date"], "table_cont": [["14", "1", "in the game", "rodrigo garc\u00e3\u00ada", "alan ball", "march 3 , 2002"], ["15", "2", "out , out brief candle", "kathy bates", "laurence andries", "march 10 , 2002"], ["16", "3", "the plan", "rose troche", "kate robin", "march 17 , 2002"], ["17", "4", "driving mr mossback", "michael cuesta", "rick cleveland", "march 24 , 2002"], ["18", "5", "the invisible woman", "jeremy podeswa", "bruce eric kaplan", "march 31 , 2002"], ["19", "6", "in place of anger", "michael engler", "christian taylor", "april 7 , 2002"], ["20", "7", "back to the garden", "dan attias", "jill soloway", "april 14 , 2002"], ["21", "8", "it 's the most wonderful time of the year", "alan taylor", "scott buck", "april 21 , 2002"], ["22", "9", "someone else 's eyes", "michael cuesta", "alan ball", "april 28 , 2002"], ["23", "10", "the secret", "alan poul", "bruce eric kaplan", "may 5 , 2002"], ["24", "11", "the liar and the whore", "miguel arteta", "rick cleveland", "may 12 , 2002"], ["25", "12", "i 'll take you", "michael engler", "jill soloway", "may 19 , 2002"]], "query": "eq { hop { nth_argmax { all_rows ; original air date ; 1 } ; title } ; i 'll take you } = true", "question": "i 'll take you is the last six feet under episode of the listed season ."}, {"topic": "rowing at the 2008 summer olympics - women 's double sculls", "wiki": "https://en.wikipedia.org/wiki/Rowing_at_the_2008_Summer_Olympics_%E2%80%93_Women%27s_double_sculls", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18662700-3.html.csv", "action": "ordinal", "sent": "the rowers from the united states had the 3rd shortest time in women 's double sculls during the 2008 summer olympics .", "annotation": {"row": "3", "col": "4", "order": "3", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "time", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; time ; 3 }"}, "country"], "result": "united states", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; time ; 3 } ; country }"}, "united states"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; time ; 3 } ; country } ; united states } = true", "tointer": "select the row whose time record of all rows is 3rd minimum . the country record of this row is united states ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; time ; 3 } ; country } ; united states } = true", "interpret": "select the row whose time record of all rows is 3rd minimum . the country record of this row is united states .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "time_5": 5, "3_6": 6, "country_7": 7, "united states_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "time_5": "time", "3_6": "3", "country_7": "country", "united states_8": "united states"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "time_5": [0], "3_6": [0], "country_7": [1], "united states_8": [2]}, "table_header": ["rank", "rowers", "country", "time", "notes"], "table_cont": [["1", "georgina evers - swindell , caroline evers - swindell", "new zealand", "7:03.92", "fa"], ["2", "annekatrin thiele , christiane huth", "germany", "7:09.06", "r"], ["3", "megan kalmoe , ellen tomek", "united states", "7:11.17", "r"], ["4", "ionelia neacsu , roxana gabriela cogianu", "romania", "7:12.17", "r"], ["5", "kateryna tarasenko , yana dementieva", "ukraine", "7:25.03", "r"]], "query": "eq { hop { nth_argmin { all_rows ; time ; 3 } ; country } ; united states } = true", "question": "the rowers from the united states had the 3rd shortest time in women 's double sculls during the 2008 summer olympics ."}, {"topic": "jahid hasan ameli", "wiki": "https://en.wikipedia.org/wiki/Jahid_Hasan_Ameli", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15687212-1.html.csv", "action": "unique", "sent": "of the competitions that jahid hasan participated in , the one on june 6 , 2008 was the only one that took place in colombo .", "annotation": {"scope": "all", "row": "6", "col": "2", "col_other": "1", "criterion": "fuzzily_match", "value": "colombo", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "colombo"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to colombo .", "tostr": "filter_eq { all_rows ; venue ; colombo }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; venue ; colombo } }", "tointer": "select the rows whose venue record fuzzily matches to colombo . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "colombo"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to colombo .", "tostr": "filter_eq { all_rows ; venue ; colombo }"}, "date"], "result": "6 june 2008", "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; colombo } ; date }"}, "6 june 2008"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; venue ; colombo } ; date } ; 6 june 2008 }", "tointer": "the date record of this unqiue row is 6 june 2008 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; venue ; colombo } } ; eq { hop { filter_eq { all_rows ; venue ; colombo } ; date } ; 6 june 2008 } } = true", "tointer": "select the rows whose venue record fuzzily matches to colombo . there is only one such row in the table . the date record of this unqiue row is 6 june 2008 ."}, "logic_str": "and { only { filter_eq { all_rows ; venue ; colombo } } ; eq { hop { filter_eq { all_rows ; venue ; colombo } ; date } ; 6 june 2008 } } = true", "interpret": "select the rows whose venue record fuzzily matches to colombo . there is only one such row in the table . the date record of this unqiue row is 6 june 2008 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "venue_7": 7, "colombo_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "6 june 2008_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "venue_7": "venue", "colombo_8": "colombo", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "6 june 2008_10": "6 june 2008"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "venue_7": [0], "colombo_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "6 june 2008_10": [3]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["8 december 2005", "peoples football stadium , karachi", "3 - 0", "3 - 0", "2005 saff gold cup"], ["12 december 2005", "peoples football stadium , karachi", "1 - 1", "1 - 1", "2005 saff gold cup"], ["1 april 2006", "bangabandhu national stadium , dhaka", "2 - 0", "2 - 1", "2006 afc challenge cup"], ["3 april 2006", "bangabandhu national stadium , dhaka", "1 - 0", "3 - 0", "2006 afc challenge cup"], ["9 may 2008", "spartak stadium , bishkek", "1 - 0", "1 - 2", "2008 afc challenge cup qualifier"], ["6 june 2008", "sugathadasa stadium , colombo", "1 - 2", "2 - 2", "2008 saff championship"], ["4 december 2009", "bangabandhu national stadium , dhaka", "4 - 1", "4 - 1", "2009 saff championship"], ["29 june 2011", "bangabandhu national stadium , dhaka", "1 - 0", "3 - 0", "2014 fifa world cup qualifier"], ["28 july 2011", "bangabandhu national stadium , dhaka", "2 - 0", "2 - 0", "2014 fifa world cup qualifier"], ["20 november 2012", "national stadium , kuala lumpur", "1 - 1", "1 - 1", "international friendly"], ["5 september 2013", "halchowk stadium , kathmandu", "1 - 0", "1 - 2", "2013 saff championship"]], "query": "and { only { filter_eq { all_rows ; venue ; colombo } } ; eq { hop { filter_eq { all_rows ; venue ; colombo } ; date } ; 6 june 2008 } } = true", "question": "of the competitions that jahid hasan participated in , the one on june 6 , 2008 was the only one that took place in colombo ."}, {"topic": "macedonia in the eurovision song contest 1998", "wiki": "https://en.wikipedia.org/wiki/Macedonia_in_the_Eurovision_Song_Contest_1998", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16791999-1.html.csv", "action": "comparative", "sent": "in the macedonia in the eurovision song contest 1998 , the performer kaliopi had a better rank compared to performer marjan necak .", "annotation": {"row_1": "2", "row_2": "15", "col": "5", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "performer", "kaliopi"], "result": null, "ind": 0, "tointer": "select the rows whose performer record fuzzily matches to kaliopi .", "tostr": "filter_eq { all_rows ; performer ; kaliopi }"}, "rank"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; performer ; kaliopi } ; rank }", "tointer": "select the rows whose performer record fuzzily matches to kaliopi . take the rank record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "performer", "marjan necak"], "result": null, "ind": 1, "tointer": "select the rows whose performer record fuzzily matches to marjan necak .", "tostr": "filter_eq { all_rows ; performer ; marjan necak }"}, "rank"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; performer ; marjan necak } ; rank }", "tointer": "select the rows whose performer record fuzzily matches to marjan necak . take the rank record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; performer ; kaliopi } ; rank } ; hop { filter_eq { all_rows ; performer ; marjan necak } ; rank } } = true", "tointer": "select the rows whose performer record fuzzily matches to kaliopi . take the rank record of this row . select the rows whose performer record fuzzily matches to marjan necak . take the rank record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; performer ; kaliopi } ; rank } ; hop { filter_eq { all_rows ; performer ; marjan necak } ; rank } } = true", "interpret": "select the rows whose performer record fuzzily matches to kaliopi . take the rank record of this row . select the rows whose performer record fuzzily matches to marjan necak . take the rank record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "performer_7": 7, "kaliopi_8": 8, "rank_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "performer_11": 11, "marjan necak_12": 12, "rank_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "performer_7": "performer", "kaliopi_8": "kaliopi", "rank_9": "rank", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "performer_11": "performer", "marjan necak_12": "marjan necak", "rank_13": "rank"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "performer_7": [0], "kaliopi_8": [0], "rank_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "performer_11": [1], "marjan necak_12": [1], "rank_13": [3]}, "table_header": ["draw", "song", "performer", "televotes", "rank"], "table_cont": [["1", "preku moreto", "tanja carovska", "1339", "12"], ["2", "ne zaboravaj", "kaliopi", "3834", "9"], ["3", "son", "monika sokolovska", "862", "15"], ["4", "ostani do kraj", "to\u0161e proeski & megatim plus", "4210", "8"], ["5", "daj mi pricina da se razbudam", "tanja , lidija & zorica pancic", "2459", "11"], ["6", "samovilska svadba", "sa\u0161o gigov - gi\u0161", "34774", "2"], ["7", "ne baraj me", "iskra trpeva & granit", "681", "20"], ["8", "ne veruvam", "risto samardziev", "8866", "5"], ["9", "daj mi \u0161ansa", "dule & koki", "23615", "3"], ["10", "koj si ti", "biljana dodeva", "828", "16"], ["11", "te sakam beskrajno", "pece ognenov and adrijana janevska", "1100", "13"], ["12", "bez tebe", "duo maratov", "764", "17"], ["13", "ljubovta nema granici", "intervali", "694", "19"], ["14", "kameleon", "maja grozdanovska & bumerang", "3319", "10"], ["15", "andrea", "marjan necak", "725", "18"], ["16", "opomena", "suzana spasovska", "5441", "6"], ["17", "broj do deset", "maja vukicevic", "908", "14"], ["18", "ne zori , zoro", "vlado janevski", "38642", "1"], ["19", "ukradeni nokji", "karolina go\u010deva", "10454", "4"], ["20", "pari pari", "mico atanasiu", "4453", "7"]], "query": "less { hop { filter_eq { all_rows ; performer ; kaliopi } ; rank } ; hop { filter_eq { all_rows ; performer ; marjan necak } ; rank } } = true", "question": "in the macedonia in the eurovision song contest 1998 , the performer kaliopi had a better rank compared to performer marjan necak ."}, {"topic": "1958 miles", "wiki": "https://en.wikipedia.org/wiki/1958_Miles", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16441868-2.html.csv", "action": "ordinal", "sent": "1958 was released a second time in the year 1979 .", "annotation": {"row": "2", "col": "2", "order": "2", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "year", "2"], "result": "1979", "ind": 0, "tostr": "nth_min { all_rows ; year ; 2 }", "tointer": "the 2nd minimum year record of all rows is 1979 ."}, "1979"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; year ; 2 } ; 1979 }", "tointer": "the 2nd minimum year record of all rows is 1979 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "year", "2"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; year ; 2 }"}, "issued title"], "result": "1958 miles", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; year ; 2 } ; issued title }"}, "1958 miles"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; year ; 2 } ; issued title } ; 1958 miles }", "tointer": "the issued title record of the row with 2nd minimum year record is 1958 miles ."}], "result": true, "ind": 5, "tostr": "and { eq { nth_min { all_rows ; year ; 2 } ; 1979 } ; eq { hop { nth_argmin { all_rows ; year ; 2 } ; issued title } ; 1958 miles } } = true", "tointer": "the 2nd minimum year record of all rows is 1979 . the issued title record of the row with 2nd minimum year record is 1958 miles ."}, "logic_str": "and { eq { nth_min { all_rows ; year ; 2 } ; 1979 } ; eq { hop { nth_argmin { all_rows ; year ; 2 } ; issued title } ; 1958 miles } } = true", "interpret": "the 2nd minimum year record of all rows is 1979 . the issued title record of the row with 2nd minimum year record is 1958 miles .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "nth_min_0": 0, "all_rows_7": 7, "year_8": 8, "2_9": 9, "1979_10": 10, "str_eq_4": 4, "str_hop_3": 3, "nth_argmin_2": 2, "all_rows_11": 11, "year_12": 12, "2_13": 13, "issued title_14": 14, "1958 miles_15": 15}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "nth_min_0": "nth_min", "all_rows_7": "all_rows", "year_8": "year", "2_9": "2", "1979_10": "1979", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "nth_argmin_2": "nth_argmin", "all_rows_11": "all_rows", "year_12": "year", "2_13": "2", "issued title_14": "issued title", "1958 miles_15": "1958 miles"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "nth_min_0": [1], "all_rows_7": [0], "year_8": [0], "2_9": [0], "1979_10": [1], "str_eq_4": [5], "str_hop_3": [4], "nth_argmin_2": [3], "all_rows_11": [2], "year_12": [2], "2_13": [2], "issued title_14": [3], "1958 miles_15": [4]}, "table_header": ["issued title", "year", "label", "format", "catalog"], "table_cont": [["1958 miles", "1974", "cbs / sony", "stereo vinyl lp", "20ap 1401"], ["1958 miles", "1979", "cbs records", "remastered lp", "cbs 1401"], ["'58 sessions featuring stella by starlight", "1991", "columbia", "cd reissue", "ck - 47835"], ["'58 sessions featuring stella by starlight", "1991", "columbia", "cassette", "ct - 47835"], ["'58 miles", "1991", "cbs", "d re - release cd", "cbs 467918 - 2"], ["'58 miles", "1991", "cbs , sony records", "re - released cassette", "srcs - 9102"], ["'58 sessions featuring stella by starlight", "1994", "jazz records", "cd", "jr - 4679182"], ["1958 miles", "1997", "sony", "cd", "srcd - 65344"], ["1958 miles", "2001", "sony", "cd", "srcd - 98004"], ["1958 miles", "2006", "sony", "cd", "srcd - 1204"], ["1958 miles", "2006", "sony japan", "cd , bonus track", "srcs - 966"]], "query": "and { eq { nth_min { all_rows ; year ; 2 } ; 1979 } ; eq { hop { nth_argmin { all_rows ; year ; 2 } ; issued title } ; 1958 miles } } = true", "question": "1958 was released a second time in the year 1979 ."}, {"topic": "1961 vfl season", "wiki": "https://en.wikipedia.org/wiki/1961_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10776330-2.html.csv", "action": "count", "sent": "in the 1961 vfl season , when the away team scored less than 10 points , there were three games where the crowd was at least 23000 .", "annotation": {"scope": "subset", "criterion": "greater_than_eq", "value": "23000", "result": "3", "col": "6", "subset": {"col": "4", "criterion": "less_than", "value": "10"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater_eq", "args": [{"func": "filter_less", "args": ["all_rows", "away team score", "10"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; away team score ; 10 }", "tointer": "select the rows whose away team score record is less than 10 ."}, "crowd", "23000"], "result": null, "ind": 1, "tointer": "select the rows whose away team score record is less than 10 . among these rows , select the rows whose crowd record is greater than or equal to 23000 .", "tostr": "filter_greater_eq { filter_less { all_rows ; away team score ; 10 } ; crowd ; 23000 }"}], "result": "3", "ind": 2, "tostr": "count { filter_greater_eq { filter_less { all_rows ; away team score ; 10 } ; crowd ; 23000 } }", "tointer": "select the rows whose away team score record is less than 10 . among these rows , select the rows whose crowd record is greater than or equal to 23000 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 3, "tostr": "eq { count { filter_greater_eq { filter_less { all_rows ; away team score ; 10 } ; crowd ; 23000 } } ; 3 } = true", "tointer": "select the rows whose away team score record is less than 10 . among these rows , select the rows whose crowd record is greater than or equal to 23000 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_greater_eq { filter_less { all_rows ; away team score ; 10 } ; crowd ; 23000 } } ; 3 } = true", "interpret": "select the rows whose away team score record is less than 10 . among these rows , select the rows whose crowd record is greater than or equal to 23000 . the number of such rows is 3 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_greater_eq_1": 1, "filter_less_0": 0, "all_rows_5": 5, "away team score_6": 6, "10_7": 7, "crowd_8": 8, "23000_9": 9, "3_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_greater_eq_1": "filter_greater_eq", "filter_less_0": "filter_less", "all_rows_5": "all_rows", "away team score_6": "away team score", "10_7": "10", "crowd_8": "crowd", "23000_9": "23000", "3_10": "3"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_greater_eq_1": [2], "filter_less_0": [1], "all_rows_5": [0], "away team score_6": [0], "10_7": [0], "crowd_8": [1], "23000_9": [1], "3_10": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "13.19 ( 97 )", "north melbourne", "8.4 ( 52 )", "western oval", "22178", "22 april 1961"], ["essendon", "13.7 ( 85 )", "st kilda", "9.15 ( 69 )", "windy hill", "23000", "22 april 1961"], ["collingwood", "3.16 ( 34 )", "richmond", "7.15 ( 57 )", "victoria park", "23000", "22 april 1961"], ["carlton", "9.5 ( 59 )", "fitzroy", "6.18 ( 54 )", "princes park", "29384", "22 april 1961"], ["melbourne", "5.14 ( 44 )", "hawthorn", "11.10 ( 76 )", "mcg", "34640", "22 april 1961"], ["south melbourne", "12.8 ( 80 )", "geelong", "12.12 ( 84 )", "lake oval", "24258", "22 april 1961"]], "query": "eq { count { filter_greater_eq { filter_less { all_rows ; away team score ; 10 } ; crowd ; 23000 } } ; 3 } = true", "question": "in the 1961 vfl season , when the away team scored less than 10 points , there were three games where the crowd was at least 23000 ."}, {"topic": "list of people in playboy 2000 - 09", "wiki": "https://en.wikipedia.org/wiki/List_of_people_in_Playboy_2000%E2%80%9309", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1566852-4.html.csv", "action": "superlative", "sent": "lauren hill was the last person to appear on playboy 's cover in 2003 .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "10", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "date"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; date }"}, "cover model"], "result": "lauren hill", "ind": 1, "tostr": "hop { argmax { all_rows ; date } ; cover model }"}, "lauren hill"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; date } ; cover model } ; lauren hill } = true", "tointer": "select the row whose date record of all rows is maximum . the cover model record of this row is lauren hill ."}, "logic_str": "eq { hop { argmax { all_rows ; date } ; cover model } ; lauren hill } = true", "interpret": "select the row whose date record of all rows is maximum . the cover model record of this row is lauren hill .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "date_5": 5, "cover model_6": 6, "lauren hill_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "date_5": "date", "cover model_6": "cover model", "lauren hill_7": "lauren hill"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "date_5": [0], "cover model_6": [1], "lauren hill_7": [2]}, "table_header": ["date", "cover model", "centerfold model", "interview subject", "20 questions", "pictorials"], "table_cont": [["1 - 03", "tia carrere", "rebecca anne ramos", "halle berry", "ron insana", "tia carrere"], ["2 - 03", "alison eastwood", "charis boyle", "jimmy kimmel", "bernie mac", "allison eastwood , cyber girls"], ["3 - 03", "dorismar", "pennelope jimenez", "colin farrell", "juliette lewis", "ladies of latin tv , katrina barellova"], ["4 - 03", "carmen electra", "carmella decesare", "jay - z", "andy richter", "carmen electra"], ["5 - 03", "torrie wilson", "laurie fetter", "billy bob thornton", "jorja fox", "torrie wilson"], ["6 - 03", "sarah kozer", "tailor james", "mike piazza", "nelly", "sarah kozer , pmoy christina santiago"], ["7 - 03", "nikki ziering", "marketa janska", "lisa marie presley", "rachel weisz", "nikki ziering , 2 fast 2 furious 2 fine"], ["8 - 03", "jenna morasca , heidi strobel", "colleen marie", "tobey maguire", "charles rangel", "jenna morasca and heidi strobel , carnie wilson"], ["9 - 03", "signe nordli", "luci victoria", "jon gruden", "nicolas cage", "women of starbucks , jenny haase"], ["10 - 03", "lauren hill", "audra lynn", "oj simpson", "joe rogan", "girls of big ten , deanna merryman"]], "query": "eq { hop { argmax { all_rows ; date } ; cover model } ; lauren hill } = true", "question": "lauren hill was the last person to appear on playboy 's cover in 2003 ."}, {"topic": "1992 indianapolis colts season", "wiki": "https://en.wikipedia.org/wiki/1992_Indianapolis_Colts_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14876891-1.html.csv", "action": "ordinal", "sent": "quentin coryatt was the second player that was drafted in the 1st round during the 1992 indianapolis colts season .", "annotation": {"row": "2", "col": "1", "order": "2", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "round ( overall )", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; round ( overall ) ; 2 }"}, "player"], "result": "quentin coryatt", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; round ( overall ) ; 2 } ; player }"}, "quentin coryatt"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; round ( overall ) ; 2 } ; player } ; quentin coryatt } = true", "tointer": "select the row whose round ( overall ) record of all rows is 2nd minimum . the player record of this row is quentin coryatt ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; round ( overall ) ; 2 } ; player } ; quentin coryatt } = true", "interpret": "select the row whose round ( overall ) record of all rows is 2nd minimum . the player record of this row is quentin coryatt .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "round (overall)_5": 5, "2_6": 6, "player_7": 7, "quentin coryatt_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "round (overall)_5": "round ( overall )", "2_6": "2", "player_7": "player", "quentin coryatt_8": "quentin coryatt"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "round (overall)_5": [0], "2_6": [0], "player_7": [1], "quentin coryatt_8": [2]}, "table_header": ["round ( overall )", "nfl team", "player", "position", "college"], "table_cont": [["1 ( 1 )", "indianapolis colts", "steve emtman", "defensive tackle", "washington"], ["1 ( 2 )", "indianapolis colts", "quentin coryatt", "linebacker", "texas a & m"], ["2 ( 29 )", "indianapolis colts", "ashley ambrose", "defensive back", "mississippi valley st"], ["4 ( 85 )", "indianapolis colts", "rodney culver", "running back", "notre dame"], ["4 ( 105 )", "indianapolis colts", "tony mccoy", "defensive tackle", "florida"]], "query": "eq { hop { nth_argmin { all_rows ; round ( overall ) ; 2 } ; player } ; quentin coryatt } = true", "question": "quentin coryatt was the second player that was drafted in the 1st round during the 1992 indianapolis colts season ."}, {"topic": "jarkko kinnunen", "wiki": "https://en.wikipedia.org/wiki/Jarkko_Kinnunen", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13045475-1.html.csv", "action": "unique", "sent": "the only race that jarkko kinnunen did not finish in was the 50km during the 2010 european championship .", "annotation": {"scope": "all", "row": "9", "col": "4", "col_other": "1,2,5", "criterion": "equal", "value": "dnf", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "dnf"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to dnf .", "tostr": "filter_eq { all_rows ; position ; dnf }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; position ; dnf } }", "tointer": "select the rows whose position record fuzzily matches to dnf . there is only one such row in the table ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "dnf"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to dnf .", "tostr": "filter_eq { all_rows ; position ; dnf }"}, "year"], "result": "2010", "ind": 2, "tostr": "hop { filter_eq { all_rows ; position ; dnf } ; year }"}, "2010"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; position ; dnf } ; year } ; 2010 }", "tointer": "the year record of this unqiue row is 2010 ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "dnf"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to dnf .", "tostr": "filter_eq { all_rows ; position ; dnf }"}, "competition"], "result": "european championships", "ind": 4, "tostr": "hop { filter_eq { all_rows ; position ; dnf } ; competition }"}, "european championships"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; position ; dnf } ; competition } ; european championships }", "tointer": "the competition record of this unqiue row is european championships ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "dnf"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to dnf .", "tostr": "filter_eq { all_rows ; position ; dnf }"}, "event"], "result": "50 km", "ind": 6, "tostr": "hop { filter_eq { all_rows ; position ; dnf } ; event }"}, "50 km"], "result": true, "ind": 7, "tostr": "eq { hop { filter_eq { all_rows ; position ; dnf } ; event } ; 50 km }", "tointer": "the event record of this unqiue row is 50 km ."}], "result": true, "ind": 8, "tostr": "and { eq { hop { filter_eq { all_rows ; position ; dnf } ; competition } ; european championships } ; eq { hop { filter_eq { all_rows ; position ; dnf } ; event } ; 50 km } }", "tointer": "the competition record of this unqiue row is european championships . the event record of this unqiue row is 50 km ."}], "result": true, "ind": 9, "tostr": "and { eq { hop { filter_eq { all_rows ; position ; dnf } ; year } ; 2010 } ; and { eq { hop { filter_eq { all_rows ; position ; dnf } ; competition } ; european championships } ; eq { hop { filter_eq { all_rows ; position ; dnf } ; event } ; 50 km } } }", "tointer": "the year record of this unqiue row is 2010 . the competition record of this unqiue row is european championships . the event record of this unqiue row is 50 km ."}], "result": true, "ind": 10, "tostr": "and { only { filter_eq { all_rows ; position ; dnf } } ; and { eq { hop { filter_eq { all_rows ; position ; dnf } ; year } ; 2010 } ; and { eq { hop { filter_eq { all_rows ; position ; dnf } ; competition } ; european championships } ; eq { hop { filter_eq { all_rows ; position ; dnf } ; event } ; 50 km } } } } = true", "tointer": "select the rows whose position record fuzzily matches to dnf . there is only one such row in the table . the year record of this unqiue row is 2010 . the competition record of this unqiue row is european championships . the event record of this unqiue row is 50 km ."}, "logic_str": "and { only { filter_eq { all_rows ; position ; dnf } } ; and { eq { hop { filter_eq { all_rows ; position ; dnf } ; year } ; 2010 } ; and { eq { hop { filter_eq { all_rows ; position ; dnf } ; competition } ; european championships } ; eq { hop { filter_eq { all_rows ; position ; dnf } ; event } ; 50 km } } } } = true", "interpret": "select the rows whose position record fuzzily matches to dnf . there is only one such row in the table . the year record of this unqiue row is 2010 . the competition record of this unqiue row is european championships . the event record of this unqiue row is 50 km .", "num_func": 14, "nid": 11, "g_ids": {"and_10": 10, "result_11": 11, "only_1": 1, "filter_str_eq_0": 0, "all_rows_12": 12, "position_13": 13, "dnf_14": 14, "and_9": 9, "eq_3": 3, "num_hop_2": 2, "year_15": 15, "2010_16": 16, "and_8": 8, "str_eq_5": 5, "str_hop_4": 4, "competition_17": 17, "european championships_18": 18, "str_eq_7": 7, "str_hop_6": 6, "event_19": 19, "50 km_20": 20}, "g_ids_features": {"and_10": "and", "result_11": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_12": "all_rows", "position_13": "position", "dnf_14": "dnf", "and_9": "and", "eq_3": "eq", "num_hop_2": "num_hop", "year_15": "year", "2010_16": "2010", "and_8": "and", "str_eq_5": "str_eq", "str_hop_4": "str_hop", "competition_17": "competition", "european championships_18": "european championships", "str_eq_7": "str_eq", "str_hop_6": "str_hop", "event_19": "event", "50 km_20": "50 km"}, "g_adj": {"and_10": [11], "result_11": [], "only_1": [10], "filter_str_eq_0": [1, 2, 4, 6], "all_rows_12": [0], "position_13": [0], "dnf_14": [0], "and_9": [10], "eq_3": [9], "num_hop_2": [3], "year_15": [2], "2010_16": [3], "and_8": [9], "str_eq_5": [8], "str_hop_4": [5], "competition_17": [4], "european championships_18": [5], "str_eq_7": [8], "str_hop_6": [7], "event_19": [6], "50 km_20": [7]}, "table_header": ["year", "competition", "venue", "position", "event"], "table_cont": [["2001", "world youth championships", "debrecen , hungary", "10th", "10000 m"], ["2006", "european championships", "gothenburg , sweden", "14th", "50 km"], ["2007", "world championships", "osaka , japan", "10th", "50 km"], ["2008", "finnish championships", "tampere , finland", "1st", "20 km"], ["2008", "olympic games", "beijing , china", "15th", "50 km"], ["2009", "european race walking cup", "metz , france", "10th", "20 km"], ["2009", "finnish championships", "espoo , finland", "1st", "20 km"], ["2009", "world championships", "berlin , germany", "9th", "50 km"], ["2010", "european championships", "barcelona , spain", "dnf", "50 km"]], "query": "and { only { filter_eq { all_rows ; position ; dnf } } ; and { eq { hop { filter_eq { all_rows ; position ; dnf } ; year } ; 2010 } ; and { eq { hop { filter_eq { all_rows ; position ; dnf } ; competition } ; european championships } ; eq { hop { filter_eq { all_rows ; position ; dnf } ; event } ; 50 km } } } } = true", "question": "the only race that jarkko kinnunen did not finish in was the 50km during the 2010 european championship ."}, {"topic": "west worcestershire ( uk parliament constituency )", "wiki": "https://en.wikipedia.org/wiki/West_Worcestershire_%28UK_Parliament_constituency%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1826125-1.html.csv", "action": "majority", "sent": "the west worcestershire parliamentary constituency was mostly conservative from 1832 to 1885 .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "conservative", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "1st party", "conservative"], "result": true, "ind": 0, "tointer": "for the 1st party records of all rows , most of them fuzzily match to conservative .", "tostr": "most_eq { all_rows ; 1st party ; conservative } = true"}, "logic_str": "most_eq { all_rows ; 1st party ; conservative } = true", "interpret": "for the 1st party records of all rows , most of them fuzzily match to conservative .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "1st party_3": 3, "conservative_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "1st party_3": "1st party", "conservative_4": "conservative"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "1st party_3": [0], "conservative_4": [0]}, "table_header": ["election", "1st member", "1st party", "2nd member", "2nd party"], "table_cont": [["1832", "hon henry lygon", "tory", "hon thomas foley", "whig"], ["1833 by - election", "hon henry lygon", "tory", "henry winnington", "liberal"], ["1834", "hon henry lygon", "conservative", "henry winnington", "liberal"], ["1841", "hon henry lygon", "conservative", "frederick knight", "conservative"], ["1853 by - election", "the viscount elmley", "conservative", "frederick knight", "conservative"], ["1863 by - election", "hon frederick lygon", "conservative", "frederick knight", "conservative"], ["1866 by - election", "william edward dowdeswell", "conservative", "frederick knight", "conservative"], ["1876 by - election", "sir edmund lechmere , bt", "conservative", "frederick knight", "conservative"], ["1885", "constituency abolished", "constituency abolished", "constituency abolished", "constituency abolished"]], "query": "most_eq { all_rows ; 1st party ; conservative } = true", "question": "the west worcestershire parliamentary constituency was mostly conservative from 1832 to 1885 ."}, {"topic": "2005 - 06 miami heat season", "wiki": "https://en.wikipedia.org/wiki/2005%E2%80%9306_Miami_Heat_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13762472-8.html.csv", "action": "majority", "sent": "the majority of the miami heat games were played at the american airlines arena .", "annotation": {"scope": "all", "col": "8", "most_or_all": "most", "criterion": "equal", "value": "american airlines arena", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "location attendance", "american airlines arena"], "result": true, "ind": 0, "tointer": "for the location attendance records of all rows , most of them fuzzily match to american airlines arena .", "tostr": "most_eq { all_rows ; location attendance ; american airlines arena } = true"}, "logic_str": "most_eq { all_rows ; location attendance ; american airlines arena } = true", "interpret": "for the location attendance records of all rows , most of them fuzzily match to american airlines arena .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "location attendance_3": 3, "american airlines arena_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "location attendance_3": "location attendance", "american airlines arena_4": "american airlines arena"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "location attendance_3": [0], "american airlines arena_4": [0]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["72", "april 1", "cleveland", "l 99 - 106 ( ot )", "dwyane wade ( 44 )", "udonis haslem ( 11 )", "dwyane wade ( 9 )", "gund arena", "48 - 24"], ["73", "april 2", "new jersey", "l 78 - 90 ( ot )", "dwyane wade ( 32 )", "udonis haslem ( 11 )", "gary payton ( 7 )", "continental airlines arena", "48 - 25"], ["74", "april 4", "milwaukee", "w 115 - 89 ( ot )", "shaquille o'neal ( 24 )", "shaquille o'neal ( 10 )", "dwyane wade ( 8 )", "american airlines arena", "49 - 25"], ["75", "april 6", "detroit", "l 82 - 95 ( ot )", "dwyane wade ( 29 )", "dwyane wade ( 9 )", "dwyane wade ( 6 )", "american airlines arena", "49 - 26"], ["76", "april 8", "washington", "w 99 - 86 ( ot )", "shaquille o'neal ( 27 )", "udonis haslem ( 14 )", "gary payton , dwyane wade ( 8 )", "mci center", "50 - 26"], ["77", "april 9", "orlando", "l 84 - 93 ( ot )", "dwyane wade ( 27 )", "shaquille o'neal ( 9 )", "dwyane wade ( 7 )", "american airlines arena", "50 - 27"], ["78", "april 11", "toronto", "w 106 - 97 ( ot )", "antoine walker ( 32 )", "shaquille o'neal ( 11 )", "shaquille o'neal ( 10 )", "american airlines arena", "51 - 27"], ["79", "april 14", "philadelphia", "w 104 - 85 ( ot )", "udonis haslem ( 24 )", "udonis haslem ( 14 )", "dwyane wade ( 8 )", "american airlines arena", "52 - 27"], ["80", "april 16", "chicago", "l 93 - 117 ( ot )", "antoine walker ( 22 )", "shaquille o'neal ( 6 )", "derek anderson , jason williams ( 3 )", "american airlines arena", "52 - 28"], ["81", "april 18", "atlanta", "l 100 - 103 ( ot )", "dorell wright ( 19 )", "dorell wright ( 7 )", "jason kapono ( 6 )", "philips arena", "52 - 29"], ["82", "april 19", "boston", "l 78 - 85 ( ot )", "dorell wright ( 20 )", "udonis haslem ( 8 )", "derek anderson ( 4 )", "td garden", "52 - 30"]], "query": "most_eq { all_rows ; location attendance ; american airlines arena } = true", "question": "the majority of the miami heat games were played at the american airlines arena ."}, {"topic": "modern pentathlon at the 2007 pan american games", "wiki": "https://en.wikipedia.org/wiki/Modern_pentathlon_at_the_2007_Pan_American_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12407546-2.html.csv", "action": "superlative", "sent": "the athlete with the highest total in the modern pentathlon at the 2007 pan american games , was yane marques .", "annotation": {"scope": "all", "col_superlative": "8", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "total"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; total }"}, "athlete"], "result": "yane marques", "ind": 1, "tostr": "hop { argmax { all_rows ; total } ; athlete }"}, "yane marques"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; total } ; athlete } ; yane marques } = true", "tointer": "select the row whose total record of all rows is maximum . the athlete record of this row is yane marques ."}, "logic_str": "eq { hop { argmax { all_rows ; total } ; athlete } ; yane marques } = true", "interpret": "select the row whose total record of all rows is maximum . the athlete record of this row is yane marques .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "total_5": 5, "athlete_6": 6, "yane marques_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "total_5": "total", "athlete_6": "athlete", "yane marques_7": "yane marques"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "total_5": [0], "athlete_6": [1], "yane marques_7": [2]}, "table_header": ["", "athlete", "shooting", "fencing", "swimming", "riding", "running", "total"], "table_cont": [["1", "yane marques", "174 ( 1024 pts )", "24 - 2 ( 1216 pts )", "2:14.72 ( 1304 pts )", "74.42 ( 1032 pts )", "11:43.01 ( 908 pts )", "5484"], ["2", "monica pinette", "176 ( 1048 pts )", "17 - 9 ( 964 pts )", "2:30.85 ( 1112 pts )", "68.59 ( 1116 pts )", "11:08.75 ( 1048 pts )", "5288"], ["3", "mickelle kelly", "170 ( 976 pts )", "12 - 14 ( 784 pts )", "2:26.75 ( 1160 pts )", "68.25 ( 1144 pts )", "10:33.55 ( 1188 pts )", "5252"], ["4", "kara grant", "176 ( 1048 pts )", "11 - 15 ( 748 pts )", "2:40.98 ( 992 pts )", "77.53 ( 1192 pts )", "10:33.38 ( 1188 pts )", "5168"], ["5", "rita sanz - agero", "172 ( 1000 pts )", "15 - 11 ( 892 pts )", "2:33.11 ( 1084 pts )", "69.32 ( 1172 pts )", "11:17.10 ( 1012 pts )", "5160"], ["6", "marlene sanchez", "169 ( 964 pts )", "16 - 10 ( 928 pts )", "2:30.47 ( 1116 pts )", "68.04 ( 1060 pts )", "11:14.67 ( 1024 pts )", "5092"], ["7", "katia rodriguez", "162 ( 880 pts )", "14 - 12 ( 856 pts )", "2:24.89 ( 1184 pts )", "75.66 ( 1088 pts )", "11:26.25 ( 976 pts )", "4984"], ["8", "larissa lellys", "153 ( 772 pts )", "13 - 13 ( 820 pts )", "2:24.01 ( 1192 pts )", "64.85 ( 1116 pts )", "11:22.38 ( 992 pts )", "4892"], ["9", "marines garza", "164 ( 904 pts )", "11 - 15 ( 748 pts )", "2:29.22 ( 1132 pts )", "73.09 ( 1088 pts )", "11:39.65 ( 924 pts )", "4796"], ["10", "suaima garcia", "179 ( 1084 pts )", "12 - 14 ( 784 pts )", "2:26.50 ( 1164 pts )", "dnf ( 512 pts )", "11:43.16 ( 908 pts )", "4452"], ["11", "sheila taormina", "161 ( 868 pts )", "12 - 14 ( 784 pts )", "2:07.36 ( 1392 pts )", "dnf ( 100 pts )", "11:28.18 ( 968 pts )", "4112"], ["12", "gabriela raute", "175 ( 1036 pts )", "3 - 23 ( 460 pts )", "3:32.10 ( 376 pts )", "72.40 ( 1088 pts )", "12:12.20 ( 792 pts )", "3752"], ["13", "pamela zapata", "154 ( 784 pts )", "12 - 14 ( 784 pts )", "2:31.01 ( 1108 pts )", "dnf ( 240 pts )", "12:49.91 ( 644 pts )", "3560"]], "query": "eq { hop { argmax { all_rows ; total } ; athlete } ; yane marques } = true", "question": "the athlete with the highest total in the modern pentathlon at the 2007 pan american games , was yane marques ."}, {"topic": "1932 vfl season", "wiki": "https://en.wikipedia.org/wiki/1932_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790099-5.html.csv", "action": "comparative", "sent": "the event at princes park had a higher home team score than the event at brunswick street oval .", "annotation": {"row_1": "3", "row_2": "2", "col": "2", "col_other": "5", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "princes park"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to princes park .", "tostr": "filter_eq { all_rows ; venue ; princes park }"}, "home team score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; princes park } ; home team score }", "tointer": "select the rows whose venue record fuzzily matches to princes park . take the home team score record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "brunswick street oval"], "result": null, "ind": 1, "tointer": "select the rows whose venue record fuzzily matches to brunswick street oval .", "tostr": "filter_eq { all_rows ; venue ; brunswick street oval }"}, "home team score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team score }", "tointer": "select the rows whose venue record fuzzily matches to brunswick street oval . take the home team score record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; venue ; princes park } ; home team score } ; hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team score } } = true", "tointer": "select the rows whose venue record fuzzily matches to princes park . take the home team score record of this row . select the rows whose venue record fuzzily matches to brunswick street oval . take the home team score record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; venue ; princes park } ; home team score } ; hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team score } } = true", "interpret": "select the rows whose venue record fuzzily matches to princes park . take the home team score record of this row . select the rows whose venue record fuzzily matches to brunswick street oval . take the home team score record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "venue_7": 7, "princes park_8": 8, "home team score_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "venue_11": 11, "brunswick street oval_12": 12, "home team score_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "venue_7": "venue", "princes park_8": "princes park", "home team score_9": "home team score", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "venue_11": "venue", "brunswick street oval_12": "brunswick street oval", "home team score_13": "home team score"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "venue_7": [0], "princes park_8": [0], "home team score_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "venue_11": [1], "brunswick street oval_12": [1], "home team score_13": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "13.14 ( 92 )", "st kilda", "8.10 ( 58 )", "western oval", "14000", "28 may 1932"], ["fitzroy", "12.6 ( 78 )", "geelong", "20.10 ( 130 )", "brunswick street oval", "13000", "28 may 1932"], ["carlton", "13.15 ( 93 )", "collingwood", "11.7 ( 73 )", "princes park", "32000", "28 may 1932"], ["north melbourne", "18.10 ( 118 )", "melbourne", "12.16 ( 88 )", "arden street oval", "12000", "28 may 1932"], ["richmond", "13.18 ( 96 )", "hawthorn", "6.9 ( 45 )", "punt road oval", "10000", "28 may 1932"], ["south melbourne", "14.15 ( 99 )", "essendon", "9.11 ( 65 )", "lake oval", "28000", "28 may 1932"]], "query": "greater { hop { filter_eq { all_rows ; venue ; princes park } ; home team score } ; hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team score } } = true", "question": "the event at princes park had a higher home team score than the event at brunswick street oval ."}, {"topic": "orlando pizzolato", "wiki": "https://en.wikipedia.org/wiki/Orlando_Pizzolato", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15399415-1.html.csv", "action": "superlative", "sent": "the worst position that orlando pizzolato finished in at a competition was at the olympic games .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "position"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; position }"}, "competition"], "result": "olympic games", "ind": 1, "tostr": "hop { argmax { all_rows ; position } ; competition }"}, "olympic games"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; position } ; competition } ; olympic games } = true", "tointer": "select the row whose position record of all rows is maximum . the competition record of this row is olympic games ."}, "logic_str": "eq { hop { argmax { all_rows ; position } ; competition } ; olympic games } = true", "interpret": "select the row whose position record of all rows is maximum . the competition record of this row is olympic games .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "position_5": 5, "competition_6": 6, "olympic games_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "position_5": "position", "competition_6": "competition", "olympic games_7": "olympic games"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "position_5": [0], "competition_6": [1], "olympic games_7": [2]}, "table_header": ["year", "competition", "venue", "position", "notes"], "table_cont": [["1984", "new york city marathon", "new york , united states", "1st", "2:14:53"], ["1985", "new york city marathon", "new york , united states", "1st", "2:11:34"], ["1986", "european championships", "stuttgart , west germany", "2nd", "2:10:57"], ["1987", "world championships", "rome , italy", "7th", "2:14:03"], ["1988", "olympic games", "seoul , south korea", "16th", "2:15:20"], ["1988", "venice marathon", "venice , italy", "1st", "2:15:24"]], "query": "eq { hop { argmax { all_rows ; position } ; competition } ; olympic games } = true", "question": "the worst position that orlando pizzolato finished in at a competition was at the olympic games ."}, {"topic": "television in the united kingdom", "wiki": "https://en.wikipedia.org/wiki/Television_in_the_United_Kingdom", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-182410-14.html.csv", "action": "aggregation", "sent": "the top 10 most viewed television broadcasts in the united kingdom drew an average of 28.94 million viewers .", "annotation": {"scope": "all", "col": "3", "type": "average", "result": "28.94", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "number of viewers"], "result": "28.94", "ind": 0, "tostr": "avg { all_rows ; number of viewers }"}, "28.94"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; number of viewers } ; 28.94 } = true", "tointer": "the average of the number of viewers record of all rows is 28.94 ."}, "logic_str": "round_eq { avg { all_rows ; number of viewers } ; 28.94 } = true", "interpret": "the average of the number of viewers record of all rows is 28.94 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "number of viewers_4": 4, "28.94_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "number of viewers_4": "number of viewers", "28.94_5": "28.94"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "number of viewers_4": [0], "28.94_5": [1]}, "table_header": ["rank", "show", "number of viewers", "date", "network"], "table_cont": [["1", "1966 world cup final", "32.30 million", "30 july 1966", "bbc one"], ["2", "funeral of princess diana", "32.10 million", "6 september 1997", "bbc one"], ["3", "british royal family documentary", "30.69 million", "1969", "bbc1"], ["4", "eastenders", "30.15 million", "25 december 1986", "bbc one"], ["5", "apollo 13 splashdown", "28.60 million", "17 april 1970", "bbc one"], ["6", "fa cup replay : chelsea vs leeds", "28.49 million", "29 april 1970", "bbc one"], ["7", "royal wedding of charles & diana", "28.40 million", "29 july 1981", "bbc one"], ["8", "wedding of princess anne and mark phillips", "27.60 million", "14 november 1973", "bbc one"], ["9", "coronation street", "26.65 million", "25 december 1987", "itv"], ["10", "2012 summer olympics closing ceremony in london", "24.46 million", "12 august 2012", "bbc one"]], "query": "round_eq { avg { all_rows ; number of viewers } ; 28.94 } = true", "question": "the top 10 most viewed television broadcasts in the united kingdom drew an average of 28.94 million viewers ."}, {"topic": "hatem aqel", "wiki": "https://en.wikipedia.org/wiki/Hatem_Aqel", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11048203-1.html.csv", "action": "ordinal", "sent": "of the games that hatem aqel played from 2002 to 2013 , the one with the second highest winning score was the 2007 afd asian cup qualification game on 22 february 2006 .", "annotation": {"row": "6", "col": "3", "order": "2", "col_other": "5", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "score", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; score ; 2 }"}, "competition"], "result": "2007 afc asian cup qualification", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; score ; 2 } ; competition }"}, "2007 afc asian cup qualification"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; score ; 2 } ; competition } ; 2007 afc asian cup qualification } = true", "tointer": "select the row whose score record of all rows is 2nd maximum . the competition record of this row is 2007 afc asian cup qualification ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; score ; 2 } ; competition } ; 2007 afc asian cup qualification } = true", "interpret": "select the row whose score record of all rows is 2nd maximum . the competition record of this row is 2007 afc asian cup qualification .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "score_5": 5, "2_6": 6, "competition_7": 7, "2007 afc asian cup qualification_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "score_5": "score", "2_6": "2", "competition_7": "competition", "2007 afc asian cup qualification_8": "2007 afc asian cup qualification"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "score_5": [0], "2_6": [0], "competition_7": [1], "2007 afc asian cup qualification_8": [2]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["16 december 2002", "kuwait", "1 - 1", "draw", "2002 arab nations cup"], ["17 october 2003", "amman", "1 - 0", "win", "2004 afc asian cup qualification"], ["18 february 2004", "amman", "5 - 0", "win", "2006 fifa world cup qualification"], ["18 august 2004", "amman", "1 - 1", "draw", "friendly"], ["14 february 2006", "amman", "2 - 0", "win", "friendly"], ["22 february 2006", "amman", "3 - 0", "win", "2007 afc asian cup qualification"], ["28 january 2009", "singapore", "2 - 1", "loss", "2011 afc asian cup qualification"], ["9 september 2009", "amman", "1 - 3", "loss", "friendly"], ["28 october 2013", "amman", "1 - 0", "win", "friendly"]], "query": "eq { hop { nth_argmax { all_rows ; score ; 2 } ; competition } ; 2007 afc asian cup qualification } = true", "question": "of the games that hatem aqel played from 2002 to 2013 , the one with the second highest winning score was the 2007 afd asian cup qualification game on 22 february 2006 ."}, {"topic": "1988 african cup of champions clubs", "wiki": "https://en.wikipedia.org/wiki/1988_African_Cup_of_Champions_Clubs", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16003508-1.html.csv", "action": "superlative", "sent": "manzini wanderers had by far the best aggregate score for team 1 .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "agg"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; agg }"}, "team 1"], "result": "manzini wanderers", "ind": 1, "tostr": "hop { argmax { all_rows ; agg } ; team 1 }"}, "manzini wanderers"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; agg } ; team 1 } ; manzini wanderers } = true", "tointer": "select the row whose agg record of all rows is maximum . the team 1 record of this row is manzini wanderers ."}, "logic_str": "eq { hop { argmax { all_rows ; agg } ; team 1 } ; manzini wanderers } = true", "interpret": "select the row whose agg record of all rows is maximum . the team 1 record of this row is manzini wanderers .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "agg_5": 5, "team 1_6": 6, "manzini wanderers_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "agg_5": "agg", "team 1_6": "team 1", "manzini wanderers_7": "manzini wanderers"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "agg_5": [0], "team 1_6": [1], "manzini wanderers_7": [2]}, "table_header": ["team 1", "agg", "team 2", "1st leg", "2nd leg"], "table_cont": [["manzini wanderers", "6 - 1", "township rollers", "2 - 0", "4 - 1"], ["cd el\u00e1 nguema", "0 - 5", "etoile du congo", "0 - 1", "0 - 4"], ["panth\u00e8res noires", "2 - 3", "wagad mogadishu", "2 - 2", "0 - 1"], ["rl defence force", "2 - 3", "sunrise flacq united", "2 - 0", "0 - 3"], ["sierra fisheries", "0 - 1", "as police", "0 - 1", "0 - 0"]], "query": "eq { hop { argmax { all_rows ; agg } ; team 1 } ; manzini wanderers } = true", "question": "manzini wanderers had by far the best aggregate score for team 1 ."}, {"topic": "rowing at the 2008 summer olympics - men 's double sculls", "wiki": "https://en.wikipedia.org/wiki/Rowing_at_the_2008_Summer_Olympics_%E2%80%93_Men%27s_double_sculls", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18662686-4.html.csv", "action": "ordinal", "sent": "for the teams who have times , the team with the 2nd slowest time in rowing at the 2008 summer olympics is slovenia .", "annotation": {"row": "3", "col": "4", "order": "2", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "time", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; time ; 2 }"}, "country"], "result": "slovenia", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; time ; 2 } ; country }"}, "slovenia"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; time ; 2 } ; country } ; slovenia } = true", "tointer": "select the row whose time record of all rows is 2nd maximum . the country record of this row is slovenia ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; time ; 2 } ; country } ; slovenia } = true", "interpret": "select the row whose time record of all rows is 2nd maximum . the country record of this row is slovenia .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "time_5": 5, "2_6": 6, "country_7": 7, "slovenia_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "time_5": "time", "2_6": "2", "country_7": "country", "slovenia_8": "slovenia"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "time_5": [0], "2_6": [0], "country_7": [1], "slovenia_8": [2]}, "table_header": ["rank", "rowers", "country", "time", "notes"], "table_cont": [["1", "david crawshay , scott brennan", "australia", "6:21.39", "sa / b"], ["2", "jean - baptiste macquet , adrien hardy", "france", "6:21.92", "sa / b"], ["3", "luka \u0161pik , iztok \u010dop", "slovenia", "6:39.49", "sa / b"], ["4", "martin yanakiev , ivo yanakiev", "bulgaria", "6:45.03", "r"], ["5", "su hui , zhang liang", "china", "excluded", "excluded"]], "query": "eq { hop { nth_argmax { all_rows ; time ; 2 } ; country } ; slovenia } = true", "question": "for the teams who have times , the team with the 2nd slowest time in rowing at the 2008 summer olympics is slovenia ."}, {"topic": "2003 new england patriots season", "wiki": "https://en.wikipedia.org/wiki/2003_New_England_Patriots_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10716158-1.html.csv", "action": "comparative", "sent": "ty warren was selected in an earlier round than dan klecko .", "annotation": {"row_1": "1", "row_2": "4", "col": "1", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "ty warren"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to ty warren .", "tostr": "filter_eq { all_rows ; player ; ty warren }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; ty warren } ; round }", "tointer": "select the rows whose player record fuzzily matches to ty warren . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "dan klecko"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to dan klecko .", "tostr": "filter_eq { all_rows ; player ; dan klecko }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; dan klecko } ; round }", "tointer": "select the rows whose player record fuzzily matches to dan klecko . take the round record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; ty warren } ; round } ; hop { filter_eq { all_rows ; player ; dan klecko } ; round } } = true", "tointer": "select the rows whose player record fuzzily matches to ty warren . take the round record of this row . select the rows whose player record fuzzily matches to dan klecko . take the round record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; player ; ty warren } ; round } ; hop { filter_eq { all_rows ; player ; dan klecko } ; round } } = true", "interpret": "select the rows whose player record fuzzily matches to ty warren . take the round record of this row . select the rows whose player record fuzzily matches to dan klecko . take the round record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "ty warren_8": 8, "round_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "dan klecko_12": 12, "round_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "ty warren_8": "ty warren", "round_9": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "dan klecko_12": "dan klecko", "round_13": "round"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "ty warren_8": [0], "round_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "dan klecko_12": [1], "round_13": [3]}, "table_header": ["round", "overall", "player", "position", "college"], "table_cont": [["1", "13", "ty warren", "defensive tackle", "texas a & m"], ["2", "36", "eugene wilson", "cornerback", "illinois"], ["2", "45", "bethel johnson", "wide receiver", "texas a & m"], ["4", "117", "dan klecko", "defensive tackle", "temple"], ["4", "120", "asante samuel", "cornerback", "central florida"], ["5", "164", "dan koppen", "center", "boston college"], ["6", "201", "kliff kingsbury", "quarterback", "texas tech"], ["7", "234", "spencer nead", "tight end", "byu"], ["7", "239", "tully banta - cain", "linebacker", "california"], ["7", "243", "ethan kelley", "defensive tackle", "baylor"]], "query": "less { hop { filter_eq { all_rows ; player ; ty warren } ; round } ; hop { filter_eq { all_rows ; player ; dan klecko } ; round } } = true", "question": "ty warren was selected in an earlier round than dan klecko ."}, {"topic": "list of awards and nominations received by ren\u00e9e zellweger", "wiki": "https://en.wikipedia.org/wiki/List_of_awards_and_nominations_received_by_Ren%C3%A9e_Zellweger", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18747538-3.html.csv", "action": "majority", "sent": "the most category of awards or nominations for ren\u00e9e zellweger was best actress - musical or comedy .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "best actress - musical or comedy", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "category", "best actress - musical or comedy"], "result": true, "ind": 0, "tointer": "for the category records of all rows , most of them fuzzily match to best actress - musical or comedy .", "tostr": "most_eq { all_rows ; category ; best actress - musical or comedy } = true"}, "logic_str": "most_eq { all_rows ; category ; best actress - musical or comedy } = true", "interpret": "for the category records of all rows , most of them fuzzily match to best actress - musical or comedy .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "category_3": 3, "best actress - musical or comedy_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "category_3": "category", "best actress - musical or comedy_4": "best actress - musical or comedy"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "category_3": [0], "best actress - musical or comedy_4": [0]}, "table_header": ["year", "category", "film", "result", "lost to"], "table_cont": [["2000", "best actress - musical or comedy", "nurse betty", "won", "-"], ["2001", "best actress - musical or comedy", "bridget jones 's diary", "nominated", "nicole kidman ( moulin rouge ! )"], ["2002", "best actress - musical or comedy", "chicago", "won", "-"], ["2003", "best supporting actress", "cold mountain", "won", "-"], ["2004", "best actress - musical or comedy", "bridget jones : the edge of reason", "nominated", "annette bening ( being julia )"], ["2006", "best actress - musical or comedy", "miss potter", "nominated", "meryl streep ( the devil wears prada )"]], "query": "most_eq { all_rows ; category ; best actress - musical or comedy } = true", "question": "the most category of awards or nominations for ren\u00e9e zellweger was best actress - musical or comedy ."}, {"topic": "2007 - 08 fis ski jumping world cup", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_FIS_Ski_Jumping_World_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14407512-19.html.csv", "action": "aggregation", "sent": "the average total number of points at the 2007 - 08 fis ski jumping world cup is 263.16 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "263.16", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "points"], "result": "263.16", "ind": 0, "tostr": "avg { all_rows ; points }"}, "263.16"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; points } ; 263.16 } = true", "tointer": "the average of the points record of all rows is 263.16 ."}, "logic_str": "round_eq { avg { all_rows ; points } ; 263.16 } = true", "interpret": "the average of the points record of all rows is 263.16 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "points_4": 4, "263.16_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "points_4": "points", "263.16_5": "263.16"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "points_4": [0], "263.16_5": [1]}, "table_header": ["rank", "name", "nationality", "1st ( m )", "2nd ( m )", "points", "overall wc points ( rank )"], "table_cont": [["1", "thomas morgenstern", "aut", "132.0", "128.5", "272.4", "1555 ( 1 )"], ["2", "gregor schlierenzauer", "aut", "130.5", "129.0", "268.1", "919 ( 2 )"], ["3", "andreas k\u00e3 \u00bc ttel", "sui", "128.0", "130.5", "260.8", "584 ( 7 )"], ["4", "janne ahonen", "fin", "127.5", "128.5", "258.8", "895 ( 3 )"], ["5", "anders bardal", "nor", "124.5", "129.5", "255.7", "592 ( 6 )"]], "query": "round_eq { avg { all_rows ; points } ; 263.16 } = true", "question": "the average total number of points at the 2007 - 08 fis ski jumping world cup is 263.16 ."}, {"topic": "list of gary unmarried episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Gary_Unmarried_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24781886-2.html.csv", "action": "count", "sent": "ira ungerleider wrote two episodes of the first 19 that were shown of gary unmarried .", "annotation": {"scope": "all", "criterion": "equal", "value": "ira ungerleider", "result": "2", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "writer ( s )", "ira ungerleider"], "result": null, "ind": 0, "tointer": "select the rows whose writer ( s ) record fuzzily matches to ira ungerleider .", "tostr": "filter_eq { all_rows ; writer ( s ) ; ira ungerleider }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; writer ( s ) ; ira ungerleider } }", "tointer": "select the rows whose writer ( s ) record fuzzily matches to ira ungerleider . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; writer ( s ) ; ira ungerleider } } ; 2 } = true", "tointer": "select the rows whose writer ( s ) record fuzzily matches to ira ungerleider . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; writer ( s ) ; ira ungerleider } } ; 2 } = true", "interpret": "select the rows whose writer ( s ) record fuzzily matches to ira ungerleider . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "writer (s)_5": 5, "ira ungerleider_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "writer (s)_5": "writer ( s )", "ira ungerleider_6": "ira ungerleider", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "writer (s)_5": [0], "ira ungerleider_6": [0], "2_7": [2]}, "table_header": ["", "title", "director", "writer ( s )", "viewers", "air date", "production code"], "table_cont": [["1", "pilot", "james burrows", "ed yeager", "6.84", "september 24 , 2008", "101"], ["2", "gary gets boundaries", "james burrows", "ed yeager", "6.97", "october 1 , 2008", "102"], ["3", "gary marries off his ex", "james burrows", "janae bakken", "7.43", "october 8 , 2008", "103"], ["4", "gary gets his stuff back", "james burrows", "matt goldman", "7.71", "october 15 , 2008", "104"], ["5", "gary breaks up his ex - wife and girlfriend", "james burrows", "ira ungerleider", "7.85", "october 22 , 2008", "105"], ["6", "gary meets the gang", "james burrows", "susan mcmartin", "6.44", "november 5 , 2008", "106"], ["7", "gary and allison 's restaurant", "james burrows", "bill daly", "6.71", "november 12 , 2008", "107"], ["8", "gary and allison brooks", "james burrows", "ed brown and scott parkin", "8.14", "december 19 , 2008", "108"], ["9", "gary gives thanks", "james burrows", "mark gross", "7.72", "december 26 , 2008", "109"], ["10", "gary goes first", "james burrows", "julie bean", "8.03", "december 10 , 2008", "110"], ["11", "gary toughens up tom", "james burrows", "ric swartzlander", "7.55", "december 17 , 2008", "111"], ["12", "gary dates louise 's teacher", "james burrows", "barry langer", "7.07", "january 14 , 2009", "112"], ["13", "gary moves back in", "james burrows", "bill daly and mark gross", "7.07", "january 21 , 2009", "113"], ["14", "gary and dennis ' sister", "james burrows", "julie bean and susan mcmartin", "6.86", "february 11 , 2009", "114"], ["15", "gary 's ex - brother - in - law", "james burrows", "mark jordan legan and terry mulroy", "8.15", "february 18 , 2009", "115"], ["16", "gary uses his veto", "james burrows", "jana hunter and mitch hunter", "8.82", "march 11 , 2009", "116"], ["17", "gary hooks up allison", "james burrows", "ira ungerleider", "7.57", "march 18 , 2009", "117"], ["18", "gary and the trophy", "james burrows", "rob deshotel", "7.30", "april 8 , 2009", "118"], ["19", "gary and his half brother", "james burrows", "scott parkin and ed brown", "6.66", "may 6 , 2009", "119"]], "query": "eq { count { filter_eq { all_rows ; writer ( s ) ; ira ungerleider } } ; 2 } = true", "question": "ira ungerleider wrote two episodes of the first 19 that were shown of gary unmarried ."}, {"topic": "kieron brady", "wiki": "https://en.wikipedia.org/wiki/Kieron_Brady", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11788447-2.html.csv", "action": "count", "sent": "roker park was used two times as a venue during 1990-1991 season when kieron brady played .", "annotation": {"scope": "all", "criterion": "equal", "value": "roker park", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "roker park"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to roker park .", "tostr": "filter_eq { all_rows ; venue ; roker park }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; venue ; roker park } }", "tointer": "select the rows whose venue record fuzzily matches to roker park . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; venue ; roker park } } ; 2 } = true", "tointer": "select the rows whose venue record fuzzily matches to roker park . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; venue ; roker park } } ; 2 } = true", "interpret": "select the rows whose venue record fuzzily matches to roker park . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "venue_5": 5, "roker park_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "venue_5": "venue", "roker park_6": "roker park", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "venue_5": [0], "roker park_6": [0], "2_7": [2]}, "table_header": ["date", "venue", "opposition", "score", "competition"], "table_cont": [["24 mar 1990", "roker park", "west ham utd", "4 - 3", "division 2"], ["31 mar 1990", "valley parade", "bradford city", "1 - 0", "division 2"], ["8 sep 1990", "stamford bridge", "chelsea fc", "2 - 3", "division 1"], ["30 mar 1991", "roker park", "crystal palace fc", "2 - 1", "division 1"], ["28 sep 1991", "ayresome park", "middlesbrough fc", "1 - 2", "division 2"], ["19 oct 1991", "vale park", "port vale fc", "3 - 3", "division 2"]], "query": "eq { count { filter_eq { all_rows ; venue ; roker park } } ; 2 } = true", "question": "roker park was used two times as a venue during 1990-1991 season when kieron brady played ."}, {"topic": "2005 - 06 miami heat season", "wiki": "https://en.wikipedia.org/wiki/2005%E2%80%9306_Miami_Heat_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13762472-8.html.csv", "action": "count", "sent": "dorell wright had two high points performances for the miami heat .", "annotation": {"scope": "all", "criterion": "equal", "value": "dorell wright", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "high points", "dorell wright"], "result": null, "ind": 0, "tointer": "select the rows whose high points record fuzzily matches to dorell wright .", "tostr": "filter_eq { all_rows ; high points ; dorell wright }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; high points ; dorell wright } }", "tointer": "select the rows whose high points record fuzzily matches to dorell wright . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; high points ; dorell wright } } ; 2 } = true", "tointer": "select the rows whose high points record fuzzily matches to dorell wright . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; high points ; dorell wright } } ; 2 } = true", "interpret": "select the rows whose high points record fuzzily matches to dorell wright . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "high points_5": 5, "dorell wright_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "high points_5": "high points", "dorell wright_6": "dorell wright", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "high points_5": [0], "dorell wright_6": [0], "2_7": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["72", "april 1", "cleveland", "l 99 - 106 ( ot )", "dwyane wade ( 44 )", "udonis haslem ( 11 )", "dwyane wade ( 9 )", "gund arena", "48 - 24"], ["73", "april 2", "new jersey", "l 78 - 90 ( ot )", "dwyane wade ( 32 )", "udonis haslem ( 11 )", "gary payton ( 7 )", "continental airlines arena", "48 - 25"], ["74", "april 4", "milwaukee", "w 115 - 89 ( ot )", "shaquille o'neal ( 24 )", "shaquille o'neal ( 10 )", "dwyane wade ( 8 )", "american airlines arena", "49 - 25"], ["75", "april 6", "detroit", "l 82 - 95 ( ot )", "dwyane wade ( 29 )", "dwyane wade ( 9 )", "dwyane wade ( 6 )", "american airlines arena", "49 - 26"], ["76", "april 8", "washington", "w 99 - 86 ( ot )", "shaquille o'neal ( 27 )", "udonis haslem ( 14 )", "gary payton , dwyane wade ( 8 )", "mci center", "50 - 26"], ["77", "april 9", "orlando", "l 84 - 93 ( ot )", "dwyane wade ( 27 )", "shaquille o'neal ( 9 )", "dwyane wade ( 7 )", "american airlines arena", "50 - 27"], ["78", "april 11", "toronto", "w 106 - 97 ( ot )", "antoine walker ( 32 )", "shaquille o'neal ( 11 )", "shaquille o'neal ( 10 )", "american airlines arena", "51 - 27"], ["79", "april 14", "philadelphia", "w 104 - 85 ( ot )", "udonis haslem ( 24 )", "udonis haslem ( 14 )", "dwyane wade ( 8 )", "american airlines arena", "52 - 27"], ["80", "april 16", "chicago", "l 93 - 117 ( ot )", "antoine walker ( 22 )", "shaquille o'neal ( 6 )", "derek anderson , jason williams ( 3 )", "american airlines arena", "52 - 28"], ["81", "april 18", "atlanta", "l 100 - 103 ( ot )", "dorell wright ( 19 )", "dorell wright ( 7 )", "jason kapono ( 6 )", "philips arena", "52 - 29"], ["82", "april 19", "boston", "l 78 - 85 ( ot )", "dorell wright ( 20 )", "udonis haslem ( 8 )", "derek anderson ( 4 )", "td garden", "52 - 30"]], "query": "eq { count { filter_eq { all_rows ; high points ; dorell wright } } ; 2 } = true", "question": "dorell wright had two high points performances for the miami heat ."}, {"topic": "pipat thonkanya", "wiki": "https://en.wikipedia.org/wiki/Pipat_Thonkanya", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18167542-1.html.csv", "action": "superlative", "sent": "from 2000 - 2007 , the most points scored by pipat thonkanya 's team in an international game was 5 .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "2", "value_mentioned": "yes", "max_or_min": "max", "other_col": "n/a", "subset": null}, "logic": {"func": "eq", "args": [{"func": "max", "args": ["all_rows", "score"], "result": "5 - 1", "ind": 0, "tostr": "max { all_rows ; score }", "tointer": "the maximum score record of all rows is 5 - 1 ."}, "5 - 1"], "result": true, "ind": 1, "tostr": "eq { max { all_rows ; score } ; 5 - 1 } = true", "tointer": "the maximum score record of all rows is 5 - 1 ."}, "logic_str": "eq { max { all_rows ; score } ; 5 - 1 } = true", "interpret": "the maximum score record of all rows is 5 - 1 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "max_0": 0, "all_rows_3": 3, "score_4": 4, "5 - 1_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "max_0": "max", "all_rows_3": "all_rows", "score_4": "score", "5 - 1_5": "5 - 1"}, "g_adj": {"eq_1": [2], "result_2": [], "max_0": [1], "all_rows_3": [0], "score_4": [0], "5 - 1_5": [1]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["25 february 2000", "bangkok , thailand", "2 - 1", "won", "king 's cup 2000"], ["27 february 2000", "bangkok , thailand", "5 - 1", "won", "king 's cup 2000"], ["4 april 2000", "bangkok , thailand", "5 - 3", "won", "2000 afc asian cup qualification"], ["28 december 2006", "bangkok , thailand", "2 - 2", "draw", "king 's cup 2006"], ["30 december 2006", "bangkok , thailand", "3 - 1", "won", "king 's cup 2006"], ["14 january 2007", "bangkok , thailand", "4 - 0", "won", "2007 asean football championship"], ["24 january 2007", "hanoi , vietnam", "2 - 0", "won", "2007 asean football championship"], ["31 january 2007", "singapore", "1 - 2", "lost", "2007 asean football championship"], ["4 february 2007", "bangkok , thailand", "1 - 1", "draw", "2007 asean football championship"], ["16 june 2007", "bangkok , thailand", "1 - 0", "won", "friendly"], ["12 july 2007", "bangkok , thailand", "2 - 0", "won", "asian cup 2007"], ["3 october 2007", "bangkok , thailand", "1 - 1", "draw", "testimonial ( kiatisuk senamuang )"]], "query": "eq { max { all_rows ; score } ; 5 - 1 } = true", "question": "from 2000 - 2007 , the most points scored by pipat thonkanya 's team in an international game was 5 ."}, {"topic": "2002 - 03 cleveland cavaliers season", "wiki": "https://en.wikipedia.org/wiki/2002%E2%80%9303_Cleveland_Cavaliers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16140345-7.html.csv", "action": "count", "sent": "ricky davis was the leading scorer for the cavaliers three times in february .", "annotation": {"scope": "all", "criterion": "equal", "value": "ricky davis", "result": "3", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "leading scorer", "ricky davis"], "result": null, "ind": 0, "tointer": "select the rows whose leading scorer record fuzzily matches to ricky davis .", "tostr": "filter_eq { all_rows ; leading scorer ; ricky davis }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; leading scorer ; ricky davis } }", "tointer": "select the rows whose leading scorer record fuzzily matches to ricky davis . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; leading scorer ; ricky davis } } ; 3 } = true", "tointer": "select the rows whose leading scorer record fuzzily matches to ricky davis . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; leading scorer ; ricky davis } } ; 3 } = true", "interpret": "select the rows whose leading scorer record fuzzily matches to ricky davis . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "leading scorer_5": 5, "ricky davis_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "leading scorer_5": "leading scorer", "ricky davis_6": "ricky davis", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "leading scorer_5": [0], "ricky davis_6": [0], "3_7": [2]}, "table_header": ["date", "visitor", "score", "home", "leading scorer", "record"], "table_cont": [["2 february 2003", "trail blazers", "114 - 95", "cavaliers", "zydrunas ilgauskas ( 20 )", "9 - 39"], ["4 february 2003", "cavaliers", "84 - 93", "wizards", "dajuan wagner ( 19 )", "9 - 40"], ["5 february 2003", "rockets", "102 - 105", "cavaliers", "ricky davis ( 21 )", "10 - 40"], ["11 february 2003", "cavaliers", "96 - 107", "pacers", "jumaine jones ( 25 )", "10 - 41"], ["12 february 2003", "timberwolves", "102 - 91", "cavaliers", "ricky davis ( 26 )", "10 - 42"], ["16 february 2003", "pistons", "90 - 75", "cavaliers", "ricky davis ( 19 )", "10 - 43"], ["18 february 2003", "bulls", "107 - 101", "cavaliers", "carlos boozer ( 23 )", "10 - 44"], ["21 february 2003", "sixers", "119 - 99", "cavaliers", "zydrunas ilgauskas ( 19 )", "10 - 45"], ["23 february 2003", "cavaliers", "103 - 116", "sixers", "dajuan wagner ( 23 )", "10 - 46"], ["25 february 2003", "nets", "90 - 93", "cavaliers", "zydrunas ilgauskas ( 29 )", "11 - 46"], ["28 february 2003", "cavaliers", "95 - 118", "timberwolves", "two - way tie ( 16 )", "11 - 47"]], "query": "eq { count { filter_eq { all_rows ; leading scorer ; ricky davis } } ; 3 } = true", "question": "ricky davis was the leading scorer for the cavaliers three times in february ."}, {"topic": "sans contrefa\u00e7on", "wiki": "https://en.wikipedia.org/wiki/Sans_contrefa%C3%A7on", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15188879-2.html.csv", "action": "count", "sent": "five versions of \" sans sontrefa\u00e7on \" were released in 1987 .", "annotation": {"scope": "all", "criterion": "equal", "value": "1987", "result": "5", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "year", "1987"], "result": null, "ind": 0, "tointer": "select the rows whose year record is equal to 1987 .", "tostr": "filter_eq { all_rows ; year ; 1987 }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; year ; 1987 } }", "tointer": "select the rows whose year record is equal to 1987 . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; year ; 1987 } } ; 5 } = true", "tointer": "select the rows whose year record is equal to 1987 . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; year ; 1987 } } ; 5 } = true", "interpret": "select the rows whose year record is equal to 1987 . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "year_5": 5, "1987_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "year_5": "year", "1987_6": "1987", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "year_5": [0], "1987_6": [0], "5_7": [2]}, "table_header": ["version", "length", "album", "remixed by", "year"], "table_cont": [["album version", "4:07", "ainsi soit je", "-", "1987"], ["single version", "3:50", "-", "laurent boutonnat", "1987"], ["boy remix", "5:55", "dance remixes", "thierry rogen", "1987"], ["girl remix", "4:20", "-", "thierry rogen", "1987"], ["music video", "8:43", "les clips vol ii , music videos i", "-", "1987"], ["live version ( recorded in 1989 )", "6:10", "en concert", "-", "1989"], ["live version ( recorded in 1996 )", "4:23", "live \u00e0 bercy", "-", "1996"], ["live version ( recorded in 2000 )", "0:34", "mylenium tour", "-", "2000"], ["album version", "4:15", "les mots", "laurent boutonnat", "2001"], ["jca remix", "5:52", "remixes", "jca", "2003"], ["live version ( recorded in 2006 )", "4:46", "avant que l'ombre \u00e0 bercy", "-", "2006"], ["live version ( recorded in 2009 )", "4:09", "n degree5 on tour", "-", "2009"]], "query": "eq { count { filter_eq { all_rows ; year ; 1987 } } ; 5 } = true", "question": "five versions of \" sans sontrefa\u00e7on \" were released in 1987 ."}, {"topic": "philippine presidential election , 2010", "wiki": "https://en.wikipedia.org/wiki/Philippine_presidential_election%2C_2010", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22097588-9.html.csv", "action": "aggregation", "sent": "the average amount spent per voter in philippine pesos between all candidates in the philippine 's presidental election of 2010 was 4.46 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "4.46", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "spent per voter ( php )"], "result": "4.46", "ind": 0, "tostr": "avg { all_rows ; spent per voter ( php ) }"}, "4.46"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; spent per voter ( php ) } ; 4.46 } = true", "tointer": "the average of the spent per voter ( php ) record of all rows is 4.46 ."}, "logic_str": "round_eq { avg { all_rows ; spent per voter ( php ) } ; 4.46 } = true", "interpret": "the average of the spent per voter ( php ) record of all rows is 4.46 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "spent per voter ( php )_4": 4, "4.46_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "spent per voter ( php )_4": "spent per voter ( php )", "4.46_5": "4.46"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "spent per voter ( php )_4": [0], "4.46_5": [1]}, "table_header": ["candidate ( party )", "amount raised ( php )", "amount spent ( php )", "votes", "spent per vote ( php )", "spent per voter ( php )"], "table_cont": [["benigno aquino iii ( lp )", "440050000 ( approx )", "403119981.81", "15208678", "26.51", "7.86"], ["joseph estrada ( pmp )", "8000000 ( approx )", "227500000", "9487837", "23.98", "4.44"], ["manny villar ( np )", "431557816", "431557816", "5573835", "77.43", "8.41"], ["gilberto teodoro ( lakas - kampi )", "64688.88", "3463307.21", "4095839", "0.85", "0.07"], ["jamby madrigal ( i )", "55182264", "55182264", "46489", "1187.00", "1.08"], ["jejomar binay ( pdp - laban )", "231480000 ( approx )", "217938289", "14645574", "14.88", "4.25"], ["mar roxas ( lp )", "246000000 ( approx )", "279351224", "13918490", "20.07", "5.45"], ["loren legarda ( npc )", "n / a", "210280000", "4294664", "48.96", "4.10"]], "query": "round_eq { avg { all_rows ; spent per voter ( php ) } ; 4.46 } = true", "question": "the average amount spent per voter in philippine pesos between all candidates in the philippine 's presidental election of 2010 was 4.46 ."}, {"topic": "judo at the 1997 mediterranean games", "wiki": "https://en.wikipedia.org/wiki/Judo_at_the_1997_Mediterranean_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15250079-3.html.csv", "action": "majority", "sent": "the majority of countries won 0 gold medals in the judo at the 1997 mediterranean games .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "gold", "0"], "result": true, "ind": 0, "tointer": "for the gold records of all rows , most of them are equal to 0 .", "tostr": "most_eq { all_rows ; gold ; 0 } = true"}, "logic_str": "most_eq { all_rows ; gold ; 0 } = true", "interpret": "for the gold records of all rows , most of them are equal to 0 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "gold_3": 3, "0_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "gold_3": "gold", "0_4": "0"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "gold_3": [0], "0_4": [0]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "france", "7", "3", "4", "14"], ["2", "italy", "5", "2", "5", "12"], ["3", "spain", "1", "2", "6", "9"], ["4", "turkey", "1", "1", "4", "5"], ["5", "algeria", "0", "2", "1", "3"], ["6 =", "tunisia", "0", "1", "3", "4"], ["6 =", "yugoslavia", "0", "1", "3", "4"], ["8 =", "egypt", "0", "1", "0", "1"], ["8 =", "slovenia", "0", "1", "0", "1"], ["10", "morocco", "0", "0", "2", "2"]], "query": "most_eq { all_rows ; gold ; 0 } = true", "question": "the majority of countries won 0 gold medals in the judo at the 1997 mediterranean games ."}, {"topic": "1967 vfl season", "wiki": "https://en.wikipedia.org/wiki/1967_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10808681-4.html.csv", "action": "aggregation", "sent": "the average crowd attendance in the 1967 vfl season was 21996 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "21996", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "crowd"], "result": "21996", "ind": 0, "tostr": "avg { all_rows ; crowd }"}, "21996"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; crowd } ; 21996 } = true", "tointer": "the average of the crowd record of all rows is 21996 ."}, "logic_str": "round_eq { avg { all_rows ; crowd } ; 21996 } = true", "interpret": "the average of the crowd record of all rows is 21996 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "crowd_4": 4, "21996_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "crowd_4": "crowd", "21996_5": "21996"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "crowd_4": [0], "21996_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["north melbourne", "10.8 ( 68 )", "richmond", "11.22 ( 88 )", "arden street oval", "12750", "6 may 1967"], ["hawthorn", "10.6 ( 66 )", "st kilda", "15.11 ( 101 )", "glenferrie oval", "20352", "6 may 1967"], ["fitzroy", "9.10 ( 64 )", "geelong", "22.13 ( 145 )", "princes park", "9747", "6 may 1967"], ["collingwood", "13.17 ( 95 )", "footscray", "5.7 ( 37 )", "victoria park", "21855", "6 may 1967"], ["south melbourne", "18.19 ( 127 )", "essendon", "13.10 ( 88 )", "lake oval", "18756", "6 may 1967"], ["melbourne", "5.15 ( 45 )", "carlton", "16.8 ( 104 )", "mcg", "48513", "6 may 1967"]], "query": "round_eq { avg { all_rows ; crowd } ; 21996 } = true", "question": "the average crowd attendance in the 1967 vfl season was 21996 ."}, {"topic": "grado labs", "wiki": "https://en.wikipedia.org/wiki/Grado_Labs", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1601027-1.html.csv", "action": "aggregation", "sent": "the headphones made by grado labs have an average us msrp price of 365 .", "annotation": {"scope": "all", "col": "7", "type": "average", "result": "365", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "us msrp"], "result": "365", "ind": 0, "tostr": "avg { all_rows ; us msrp }"}, "365"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; us msrp } ; 365 } = true", "tointer": "the average of the us msrp record of all rows is 365 ."}, "logic_str": "round_eq { avg { all_rows ; us msrp } ; 365 } = true", "interpret": "the average of the us msrp record of all rows is 365 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "us msrp_4": 4, "365_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "us msrp_4": "us msrp", "365_5": "365"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "us msrp_4": [0], "365_5": [1]}, "table_header": ["headphone model", "headphone class", "driver - matched db", "construction", "earpads", "termination", "us msrp"], "table_cont": [["igrado", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug", "49"], ["sr60i", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug with 1 / 4 adaptor", "79"], ["sr80i", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug with 1 / 4 adaptor", "99"], ["sr125i", "prestige", "0.1", "plastic", "comfort pads", "1 / 4 ( 6.5 mm ) plug", "150"], ["sr225i", "prestige", "0.05", "plastic", "bowls", "1 / 4 ( 6.5 mm ) plug", "200"], ["sr325is", "prestige", "0.05", "aluminum alloy / plastic inner sleeve", "bowls", "1 / 4 ( 6.5 mm ) plug", "295"], ["rs2i", "reference", "0.05", "hand - crafted mahogany", "bowls", "1 / 4 ( 6.5 mm ) plug", "495"], ["rs1i", "reference", "0.05", "hand - crafted mahogany", "bowls", "1 / 4 ( 6.5 mm ) plug", "695"], ["gs1000i", "statement", "0.05", "hand - crafted mahogany", "circumaural bowls", "1 / 4 ( 6.5 mm ) plug", "995"], ["ps500", "professional", "0.05", "hand - crafted mahogany / aluminum", "bowls", "1 / 4 ( 6.5 mm ) plug", "595"]], "query": "round_eq { avg { all_rows ; us msrp } ; 365 } = true", "question": "the headphones made by grado labs have an average us msrp price of 365 ."}, {"topic": "sweden in the eurovision song contest 1997", "wiki": "https://en.wikipedia.org/wiki/Sweden_in_the_Eurovision_Song_Contest_1997", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13594823-1.html.csv", "action": "unique", "sent": "photogenique is the only swedish artist in the 1997 eurovision song contest to score 0 points .", "annotation": {"scope": "all", "row": "2", "col": "4", "col_other": "2", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "points", "0"], "result": null, "ind": 0, "tointer": "select the rows whose points record is equal to 0 .", "tostr": "filter_eq { all_rows ; points ; 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; points ; 0 } }", "tointer": "select the rows whose points record is equal to 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "points", "0"], "result": null, "ind": 0, "tointer": "select the rows whose points record is equal to 0 .", "tostr": "filter_eq { all_rows ; points ; 0 }"}, "artist"], "result": "photogenique", "ind": 2, "tostr": "hop { filter_eq { all_rows ; points ; 0 } ; artist }"}, "photogenique"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; points ; 0 } ; artist } ; photogenique }", "tointer": "the artist record of this unqiue row is photogenique ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; points ; 0 } } ; eq { hop { filter_eq { all_rows ; points ; 0 } ; artist } ; photogenique } } = true", "tointer": "select the rows whose points record is equal to 0 . there is only one such row in the table . the artist record of this unqiue row is photogenique ."}, "logic_str": "and { only { filter_eq { all_rows ; points ; 0 } } ; eq { hop { filter_eq { all_rows ; points ; 0 } ; artist } ; photogenique } } = true", "interpret": "select the rows whose points record is equal to 0 . there is only one such row in the table . the artist record of this unqiue row is photogenique .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "points_7": 7, "0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "artist_9": 9, "photogenique_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "points_7": "points", "0_8": "0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "artist_9": "artist", "photogenique_10": "photogenique"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "points_7": [0], "0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "artist_9": [2], "photogenique_10": [3]}, "table_header": ["draw", "artist", "song", "points", "place"], "table_cont": [["1", "monia sj\u00f6str\u00f6m", "nu idag", "11", "11th"], ["2", "photogenique", "nattens \u00e4nglar", "0", "12th"], ["3", "robert randqvist", "hand i hand", "55", "5th"], ["4", "n - mix", "d\u00e4r en \u00e4ngel h\u00e4lsat p\u00e5", "68", "2nd"], ["5", "jim jidhed", "charlie", "12", "10th"], ["6", "nick borgen", "world wide web", "26", "9th"], ["7", "andreas lundstedt", "jag saknar dig , jag saknar dig", "32", "7th"], ["8", "garmarna", "en g\u00e5ng ska han gr\u00e5ta", "28", "8th"], ["9", "big", "jag skall aldrig l\u00e4mna dig", "40", "6th"], ["10", "wille craaford", "missarna", "65", "3rd"], ["11", "cajsalisa ejemyr", "du g\u00f6r mig hel igen", "56", "4th"], ["12", "blond", "bara hon \u00e4lskar mig", "80", "1st"]], "query": "and { only { filter_eq { all_rows ; points ; 0 } } ; eq { hop { filter_eq { all_rows ; points ; 0 } ; artist } ; photogenique } } = true", "question": "photogenique is the only swedish artist in the 1997 eurovision song contest to score 0 points ."}, {"topic": "mark donohue", "wiki": "https://en.wikipedia.org/wiki/Mark_Donohue", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1235776-2.html.csv", "action": "comparative", "sent": "mark donohue had a higher start in 1969 than he did in 1970 .", "annotation": {"row_1": "1", "row_2": "2", "col": "4", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1969"], "result": null, "ind": 0, "tointer": "select the rows whose year record fuzzily matches to 1969 .", "tostr": "filter_eq { all_rows ; year ; 1969 }"}, "start"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; year ; 1969 } ; start }", "tointer": "select the rows whose year record fuzzily matches to 1969 . take the start record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1970"], "result": null, "ind": 1, "tointer": "select the rows whose year record fuzzily matches to 1970 .", "tostr": "filter_eq { all_rows ; year ; 1970 }"}, "start"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; year ; 1970 } ; start }", "tointer": "select the rows whose year record fuzzily matches to 1970 . take the start record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; year ; 1969 } ; start } ; hop { filter_eq { all_rows ; year ; 1970 } ; start } } = true", "tointer": "select the rows whose year record fuzzily matches to 1969 . take the start record of this row . select the rows whose year record fuzzily matches to 1970 . take the start record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; year ; 1969 } ; start } ; hop { filter_eq { all_rows ; year ; 1970 } ; start } } = true", "interpret": "select the rows whose year record fuzzily matches to 1969 . take the start record of this row . select the rows whose year record fuzzily matches to 1970 . take the start record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "year_7": 7, "1969_8": 8, "start_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "year_11": 11, "1970_12": 12, "start_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "year_7": "year", "1969_8": "1969", "start_9": "start", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "year_11": "year", "1970_12": "1970", "start_13": "start"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "year_7": [0], "1969_8": [0], "start_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "year_11": [1], "1970_12": [1], "start_13": [3]}, "table_header": ["year", "chassis", "engine", "start", "finish", "entrant"], "table_cont": [["1969", "lola", "offy", "4th", "7th", "penske"], ["1970", "lola", "ford", "5th", "2nd", "penske"], ["1971", "mclaren", "offy", "2nd", "25th", "penske"], ["1972", "mclaren", "offy", "3rd", "1st", "penske"], ["1973", "eagle", "offy", "3rd", "15th", "penske"]], "query": "less { hop { filter_eq { all_rows ; year ; 1969 } ; start } ; hop { filter_eq { all_rows ; year ; 1970 } ; start } } = true", "question": "mark donohue had a higher start in 1969 than he did in 1970 ."}, {"topic": "the wire ( season 1 )", "wiki": "https://en.wikipedia.org/wiki/The_Wire_%28season_1%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-14346353-1.html.csv", "action": "ordinal", "sent": "episode 5 of the wire was the fifth episode to be aired in june 2002 .", "annotation": {"row": "5", "col": "6", "order": "5", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "original air date", "5"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; original air date ; 5 }"}, "series"], "result": "5", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; original air date ; 5 } ; series }"}, "5"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; original air date ; 5 } ; series } ; 5 } = true", "tointer": "select the row whose original air date record of all rows is 5th minimum . the series record of this row is 5 ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; original air date ; 5 } ; series } ; 5 } = true", "interpret": "select the row whose original air date record of all rows is 5th minimum . the series record of this row is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "original air date_5": 5, "5_6": 6, "series_7": 7, "5_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "original air date_5": "original air date", "5_6": "5", "series_7": "series", "5_8": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "original air date_5": [0], "5_6": [0], "series_7": [1], "5_8": [2]}, "table_header": ["series", "title", "story by", "teleplay by", "directed by", "original air date"], "table_cont": [["1", "the target", "david simon & ed burns", "david simon", "clark johnson", "june 2 , 2002"], ["2", "the detail", "david simon & ed burns", "david simon", "clark johnson", "june 9 , 2002"], ["3", "the buys", "david simon & ed burns", "david simon", "peter medak", "june 16 , 2002"], ["4", "old cases", "david simon & ed burns", "david simon", "clement virgo", "june 23 , 2002"], ["5", "the pager", "david simon & ed burns", "ed burns", "clark johnson", "june 30 , 2002"], ["6", "the wire", "david simon & ed burns", "david simon", "ed bianchi", "july 7 , 2002"], ["7", "one arrest", "david simon & ed burns", "rafael alvarez", "joe chappelle", "july 21 , 2002"], ["8", "lessons", "david simon & ed burns", "david simon", "gloria muzio", "july 28 , 2002"], ["9", "game day", "david simon & ed burns", "david h melnick & shamit choksey", "mil\u010do man\u010devski", "august 4 , 2002"], ["10", "the cost", "david simon & ed burns", "david simon", "brad anderson", "august 11 , 2002"], ["11", "the hunt", "david simon & ed burns", "joy lusco", "steve shill", "august 18 , 2002"], ["12", "cleaning up", "david simon & ed burns", "george pelecanos", "clement virgo", "september 1 , 2002"]], "query": "eq { hop { nth_argmin { all_rows ; original air date ; 5 } ; series } ; 5 } = true", "question": "episode 5 of the wire was the fifth episode to be aired in june 2002 ."}, {"topic": "mauri rose", "wiki": "https://en.wikipedia.org/wiki/Mauri_Rose", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1236138-1.html.csv", "action": "count", "sent": "there were two occasions where mauri rose 's rank was twenty .", "annotation": {"scope": "all", "criterion": "equal", "value": "20", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "rank", "20"], "result": null, "ind": 0, "tointer": "select the rows whose rank record is equal to 20 .", "tostr": "filter_eq { all_rows ; rank ; 20 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; rank ; 20 } }", "tointer": "select the rows whose rank record is equal to 20 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; rank ; 20 } } ; 2 } = true", "tointer": "select the rows whose rank record is equal to 20 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; rank ; 20 } } ; 2 } = true", "interpret": "select the rows whose rank record is equal to 20 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "rank_5": 5, "20_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "rank_5": "rank", "20_6": "20", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "rank_5": [0], "20_6": [0], "2_7": [2]}, "table_header": ["start", "qual", "rank", "finish", "laps"], "table_cont": [["42", "117.649", "6", "35", "48"], ["4", "116.044", "7", "2", "200"], ["10", "116.470", "9", "20", "103"], ["30", "113.890", "21", "4", "200"], ["8", "118.540", "19", "18", "127"], ["9", "119.796", "20", "13", "165"], ["8", "124.896", "13", "8", "200"], ["3", "125.624", "3", "3", "200"], ["1", "128.691", "1", "26", "60"], ["17", "121.106", "25", "1", "128"], ["9", "124.065", "10", "23", "40"], ["3", "120.040", "20", "1", "200"], ["3", "129.129", "4", "1", "200"], ["10", "127.759", "19", "13", "192"], ["3", "132.319", "6", "3", "137"], ["5", "133.422", "18", "14", "126"]], "query": "eq { count { filter_eq { all_rows ; rank ; 20 } } ; 2 } = true", "question": "there were two occasions where mauri rose 's rank was twenty ."}, {"topic": "india at the 2010 asian games", "wiki": "https://en.wikipedia.org/wiki/India_at_the_2010_Asian_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26335424-86.html.csv", "action": "count", "sent": "four indian athletes reached the round of sixteen at the 2010 asian games .", "annotation": {"scope": "all", "criterion": "not_equal", "value": "did not advance", "result": "4", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "round of 16", "did not advance"], "result": null, "ind": 0, "tointer": "select the rows whose round of 16 record does not match to did not advance .", "tostr": "filter_not_eq { all_rows ; round of 16 ; did not advance }"}], "result": "4", "ind": 1, "tostr": "count { filter_not_eq { all_rows ; round of 16 ; did not advance } }", "tointer": "select the rows whose round of 16 record does not match to did not advance . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_not_eq { all_rows ; round of 16 ; did not advance } } ; 4 } = true", "tointer": "select the rows whose round of 16 record does not match to did not advance . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_not_eq { all_rows ; round of 16 ; did not advance } } ; 4 } = true", "interpret": "select the rows whose round of 16 record does not match to did not advance . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_not_eq_0": 0, "all_rows_4": 4, "round of 16_5": 5, "did not advance_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_not_eq_0": "filter_str_not_eq", "all_rows_4": "all_rows", "round of 16_5": "round of 16", "did not advance_6": "did not advance", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_not_eq_0": [1], "all_rows_4": [0], "round of 16_5": [0], "did not advance_6": [0], "4_7": [2]}, "table_header": ["athlete", "event", "round of 32", "round of 16", "quarterfinals", "semifinals"], "table_cont": [["sunil kumar", "finweight ( - 54 kg )", "lakpa tashi sherpa ( bhu ) w pts 12 - 5", "abdulrahim abdulhameed ( brn ) l pts 2 - 8", "did not advance", "did not advance"], ["surendra bhandari", "bantamweight ( - 63 kg )", "darkhan kassymkulov ( kaz ) l pts 7 - 8", "did not advance", "did not advance", "did not advance"], ["chandan lakra", "featherweight ( - 68 kg )", "afifuddin omar sidek ( mas ) w pts 6 - 2", "naranchimegiin erdenebaatar ( mgl ) l pts 7 - 19", "did not advance", "did not advance"], ["jasvant", "lightweight ( - 74 kg )", "sawatvilay phimmasone ( lao ) w pts 9 - 7", "yulius fernando ( ina ) l pts 5 - 6", "did not advance", "did not advance"], ["anand pandia rajan", "welterweight ( - 80 kg )", "bye", "eisa al - shammeri ( kuw ) w dsq", "nabil talal ( jor ) l pts 3 - 3", "did not advance"]], "query": "eq { count { filter_not_eq { all_rows ; round of 16 ; did not advance } } ; 4 } = true", "question": "four indian athletes reached the round of sixteen at the 2010 asian games ."}, {"topic": "joseba etxeberria", "wiki": "https://en.wikipedia.org/wiki/Joseba_Etxeberria", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1517891-1.html.csv", "action": "comparative", "sent": "on november 19 , 1997 , joseba etxeberria scored one more point in his final result than he did on november 19 , 2003 .", "annotation": {"row_1": "1", "row_2": "11", "col": "3", "col_other": "1", "relation": "greater", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "19 november 1997"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to 19 november 1997 .", "tostr": "filter_eq { all_rows ; date ; 19 november 1997 }"}, "score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score }", "tointer": "select the rows whose date record fuzzily matches to 19 november 1997 . take the score record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "19 november 2003"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to 19 november 2003 .", "tostr": "filter_eq { all_rows ; date ; 19 november 2003 }"}, "score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score }", "tointer": "select the rows whose date record fuzzily matches to 19 november 2003 . take the score record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } }", "tointer": "select the rows whose date record fuzzily matches to 19 november 1997 . take the score record of this row . select the rows whose date record fuzzily matches to 19 november 2003 . take the score record of this row . the first record is greater than the second record ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "19 november 1997"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to 19 november 1997 .", "tostr": "filter_eq { all_rows ; date ; 19 november 1997 }"}, "score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score }", "tointer": "select the rows whose date record fuzzily matches to 19 november 1997 . take the score record of this row ."}, "1 - 0"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; 1 - 0 }", "tointer": "the score record of the first row is 1 - 0 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "19 november 2003"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to 19 november 2003 .", "tostr": "filter_eq { all_rows ; date ; 19 november 2003 }"}, "score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score }", "tointer": "select the rows whose date record fuzzily matches to 19 november 2003 . take the score record of this row ."}, "0 - 3"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } ; 0 - 3 }", "tointer": "the score record of the second row is 0 - 3 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; 1 - 0 } ; eq { hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } ; 0 - 3 } }", "tointer": "the score record of the first row is 1 - 0 . the score record of the second row is 0 - 3 ."}], "result": true, "ind": 8, "tostr": "and { greater { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } } ; and { eq { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; 1 - 0 } ; eq { hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } ; 0 - 3 } } } = true", "tointer": "select the rows whose date record fuzzily matches to 19 november 1997 . take the score record of this row . select the rows whose date record fuzzily matches to 19 november 2003 . take the score record of this row . the first record is greater than the second record . the score record of the first row is 1 - 0 . the score record of the second row is 0 - 3 ."}, "logic_str": "and { greater { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } } ; and { eq { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; 1 - 0 } ; eq { hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } ; 0 - 3 } } } = true", "interpret": "select the rows whose date record fuzzily matches to 19 november 1997 . take the score record of this row . select the rows whose date record fuzzily matches to 19 november 2003 . take the score record of this row . the first record is greater than the second record . the score record of the first row is 1 - 0 . the score record of the second row is 0 - 3 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "greater_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "date_11": 11, "19 november 1997_12": 12, "score_13": 13, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "date_15": 15, "19 november 2003_16": 16, "score_17": 17, "and_7": 7, "str_eq_5": 5, "1 - 0_18": 18, "str_eq_6": 6, "0 - 3_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "greater_4": "greater", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "date_11": "date", "19 november 1997_12": "19 november 1997", "score_13": "score", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "date_15": "date", "19 november 2003_16": "19 november 2003", "score_17": "score", "and_7": "and", "str_eq_5": "str_eq", "1 - 0_18": "1 - 0", "str_eq_6": "str_eq", "0 - 3_19": "0 - 3"}, "g_adj": {"and_8": [9], "result_9": [], "greater_4": [8], "str_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "date_11": [0], "19 november 1997_12": [0], "score_13": [2], "str_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "date_15": [1], "19 november 2003_16": [1], "score_17": [3], "and_7": [8], "str_eq_5": [7], "1 - 0_18": [5], "str_eq_6": [7], "0 - 3_19": [6]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["19 november 1997", "llu\u00eds sitjar , palma , spain", "1 - 0", "1 - 1", "friendly"], ["25 march 1998", "bala\u00eddos , vigo , spain", "4 - 0", "4 - 0", "friendly"], ["14 october 1998", "ramat gan , tel aviv , israel", "1 - 2", "1 - 2", "euro 2000 qualifying"], ["31 march 1999", "olimpico , serravalle , san marino", "0 - 6", "0 - 6", "euro 2000 qualifying"], ["5 june 1999", "el madrigal , vila - real , spain", "3 - 0", "9 - 0", "euro 2000 qualifying"], ["5 june 1999", "el madrigal , vila - real , spain", "4 - 0", "9 - 0", "euro 2000 qualifying"], ["18 june 2000", "amsterdam arena , amsterdam , netherlands", "1 - 2", "1 - 2", "uefa euro 2000"], ["2 september 2000", "ko\u0161evo , sarajevo , bosnia and herzegovina", "1 - 2", "1 - 2", "2002 world cup qualification"], ["29 march 2003", "olimpiyskiy , kiev , ukraine", "1 - 2", "2 - 2", "euro 2004 qualifying"], ["6 november 2003", "afonso henriques , guimar\u00e3es , portugal", "0 - 1", "0 - 3", "friendly"], ["19 november 2003", "ullevaal , oslo , norway", "0 - 3", "0 - 3", "euro 2004 qualifying"], ["18 february 2004", "llu\u00eds companys , barcelona , spain", "1 - 1", "2 - 1", "friendly"]], "query": "and { greater { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } } ; and { eq { hop { filter_eq { all_rows ; date ; 19 november 1997 } ; score } ; 1 - 0 } ; eq { hop { filter_eq { all_rows ; date ; 19 november 2003 } ; score } ; 0 - 3 } } } = true", "question": "on november 19 , 1997 , joseba etxeberria scored one more point in his final result than he did on november 19 , 2003 ."}, {"topic": "blouberg local municipality", "wiki": "https://en.wikipedia.org/wiki/Blouberg_Local_Municipality", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1894556-1.html.csv", "action": "majority", "sent": "the most spoken language for all places is northern sotho .", "annotation": {"scope": "all", "col": "5", "most_or_all": "all", "criterion": "equal", "value": "northern sotho", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "most spoken language", "northern sotho"], "result": true, "ind": 0, "tointer": "for the most spoken language records of all rows , all of them fuzzily match to northern sotho .", "tostr": "all_eq { all_rows ; most spoken language ; northern sotho } = true"}, "logic_str": "all_eq { all_rows ; most spoken language ; northern sotho } = true", "interpret": "for the most spoken language records of all rows , all of them fuzzily match to northern sotho .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "most spoken language_3": 3, "northern sotho_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "most spoken language_3": "most spoken language", "northern sotho_4": "northern sotho"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "most spoken language_3": [0], "northern sotho_4": [0]}, "table_header": ["place", "code", "area ( km 2 )", "population", "most spoken language"], "table_cont": [["alldays", "90901", "11.75", "385", "northern sotho"], ["bahanawa", "90902", "390.17", "19068", "northern sotho"], ["bahanawa - ba - kibi", "90903", "163.78", "7763", "northern sotho"], ["bochum part 1", "90912", "4.33", "8501", "northern sotho"], ["bochum part 2", "90905", "182.33", "15911", "northern sotho"], ["dichoeng", "90906", "58.29", "17347", "northern sotho"], ["manthata", "90907", "1335.47", "72175", "northern sotho"], ["matlala", "90908", "180.83", "8697", "northern sotho"], ["pietersburg", "90909", "1.33", "3818", "northern sotho"], ["ramutla", "90910", "7.81", "1047", "northern sotho"], ["seshego", "90911", "6.00", "1058", "northern sotho"], ["remainder of the municipality", "90904", "2198.72", "5539", "northern sotho"]], "query": "all_eq { all_rows ; most spoken language ; northern sotho } = true", "question": "the most spoken language for all places is northern sotho ."}, {"topic": "1939 vfl season", "wiki": "https://en.wikipedia.org/wiki/1939_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10806852-9.html.csv", "action": "unique", "sent": "fitzroy is the only home team that played at brunswick street oval .", "annotation": {"scope": "all", "row": "5", "col": "5", "col_other": "1", "criterion": "equal", "value": "brunswick street oval", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "brunswick street oval"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to brunswick street oval .", "tostr": "filter_eq { all_rows ; venue ; brunswick street oval }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; venue ; brunswick street oval } }", "tointer": "select the rows whose venue record fuzzily matches to brunswick street oval . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "brunswick street oval"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to brunswick street oval .", "tostr": "filter_eq { all_rows ; venue ; brunswick street oval }"}, "home team"], "result": "fitzroy", "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team }"}, "fitzroy"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team } ; fitzroy }", "tointer": "the home team record of this unqiue row is fitzroy ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; venue ; brunswick street oval } } ; eq { hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team } ; fitzroy } } = true", "tointer": "select the rows whose venue record fuzzily matches to brunswick street oval . there is only one such row in the table . the home team record of this unqiue row is fitzroy ."}, "logic_str": "and { only { filter_eq { all_rows ; venue ; brunswick street oval } } ; eq { hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team } ; fitzroy } } = true", "interpret": "select the rows whose venue record fuzzily matches to brunswick street oval . there is only one such row in the table . the home team record of this unqiue row is fitzroy .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "venue_7": 7, "brunswick street oval_8": 8, "str_eq_3": 3, "str_hop_2": 2, "home team_9": 9, "fitzroy_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "venue_7": "venue", "brunswick street oval_8": "brunswick street oval", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "home team_9": "home team", "fitzroy_10": "fitzroy"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "venue_7": [0], "brunswick street oval_8": [0], "str_eq_3": [4], "str_hop_2": [3], "home team_9": [2], "fitzroy_10": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "12.14 ( 86 )", "st kilda", "19.16 ( 130 )", "western oval", "13500", "17 june 1939"], ["carlton", "19.19 ( 133 )", "melbourne", "15.13 ( 103 )", "princes park", "20000", "17 june 1939"], ["south melbourne", "15.18 ( 108 )", "hawthorn", "12.14 ( 86 )", "lake oval", "9000", "17 june 1939"], ["richmond", "12.22 ( 94 )", "geelong", "9.15 ( 69 )", "punt road oval", "17000", "17 june 1939"], ["fitzroy", "11.15 ( 81 )", "essendon", "13.12 ( 90 )", "brunswick street oval", "10000", "17 june 1939"], ["north melbourne", "10.18 ( 78 )", "collingwood", "14.21 ( 105 )", "arden street oval", "14000", "17 june 1939"]], "query": "and { only { filter_eq { all_rows ; venue ; brunswick street oval } } ; eq { hop { filter_eq { all_rows ; venue ; brunswick street oval } ; home team } ; fitzroy } } = true", "question": "fitzroy is the only home team that played at brunswick street oval ."}, {"topic": "1954 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1954_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17290159-1.html.csv", "action": "aggregation", "sent": "the average amount of money involved in these events was about 1584 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "1584", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "money"], "result": "1584", "ind": 0, "tostr": "avg { all_rows ; money }"}, "1584"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; money } ; 1584 } = true", "tointer": "the average of the money record of all rows is 1584 ."}, "logic_str": "round_eq { avg { all_rows ; money } ; 1584 } = true", "interpret": "the average of the money record of all rows is 1584 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "money_4": 4, "1584_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "money_4": "money", "1584_5": "1584"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "money_4": [0], "1584_5": [1]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["1", "ed furgol", "united states", "71 + 70 + 71 + 72 = 284", "+ 4", "6000"], ["2", "gene littler", "united states", "70 + 69 + 76 + 70 = 285", "+ 5", "3600"], ["t3", "lloyd mangrum", "united states", "72 + 71 + 72 + 71 = 286", "+ 6", "1500"], ["t3", "dick mayer", "united states", "72 + 71 + 70 + 73 = 286", "+ 6", "1500"], ["5", "bobby locke", "south africa", "74 + 70 + 74 + 70 = 288", "+ 8", "960"], ["t6", "tommy bolt", "united states", "72 + 72 + 73 + 72 = 289", "+ 9", "570"], ["t6", "fred haas", "united states", "73 + 73 + 71 + 72 = 289", "+ 9", "570"], ["t6", "ben hogan", "united states", "71 + 70 + 76 + 72 = 289", "+ 9", "570"], ["t6", "shelley mayfield", "united states", "73 + 75 + 72 + 69 = 289", "+ 9", "570"], ["t6", "billy joe patton ( a )", "united states", "69 + 76 + 71 + 73 = 289", "+ 9", "0"]], "query": "round_eq { avg { all_rows ; money } ; 1584 } = true", "question": "the average amount of money involved in these events was about 1584 ."}, {"topic": "list of pacific - 12 conference champions", "wiki": "https://en.wikipedia.org/wiki/List_of_Pacific-12_Conference_champions", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27816698-2.html.csv", "action": "ordinal", "sent": "the university of california , davis was the third of these colleges to be founded .", "annotation": {"row": "6", "col": "3", "order": "3", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "founded", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; founded ; 3 }"}, "institution"], "result": "university of california , davis", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; founded ; 3 } ; institution }"}, "university of california , davis"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; founded ; 3 } ; institution } ; university of california , davis } = true", "tointer": "select the row whose founded record of all rows is 3rd minimum . the institution record of this row is university of california , davis ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; founded ; 3 } ; institution } ; university of california , davis } = true", "interpret": "select the row whose founded record of all rows is 3rd minimum . the institution record of this row is university of california , davis .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "founded_5": 5, "3_6": 6, "institution_7": 7, "university of california , davis_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "founded_5": "founded", "3_6": "3", "institution_7": "institution", "university of california , davis_8": "university of california , davis"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "founded_5": [0], "3_6": [0], "institution_7": [1], "university of california , davis_8": [2]}, "table_header": ["institution", "location", "founded", "type", "enrollment", "nickname", "current conference", "pac - 12 sports"], "table_cont": [["boise state university", "boise , idaho", "1932", "public", "19667", "broncos", "mountain west", "wrestling"], ["california polytechnic state university", "san luis obispo , california", "1901", "public", "19777", "mustangs", "big west", "men 's swimming and diving , wrestling"], ["california state university , bakersfield", "bakersfield , california", "1965", "public", "7493", "roadrunners", "independent", "wrestling"], ["california state university , fullerton", "fullerton , california", "1957", "public", "36996", "titans", "big west", "wrestling"], ["san diego state university", "san diego , california", "1897", "public", "34500", "aztecs", "mountain west", "men 's soccer"], ["university of california , davis", "davis , california", "1908", "public", "31426", "aggies", "big west", "wrestling"]], "query": "eq { hop { nth_argmin { all_rows ; founded ; 3 } ; institution } ; university of california , davis } = true", "question": "the university of california , davis was the third of these colleges to be founded ."}, {"topic": "2009 - 10 temple owls men 's basketball team", "wiki": "https://en.wikipedia.org/wiki/2009%E2%80%9310_Temple_Owls_men%27s_basketball_team", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-25461946-5.html.csv", "action": "majority", "sent": "the majority of the time the temple owls won .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "fuzzily_match", "value": "w", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "score", "w"], "result": true, "ind": 0, "tointer": "for the score records of all rows , most of them fuzzily match to w .", "tostr": "most_eq { all_rows ; score ; w } = true"}, "logic_str": "most_eq { all_rows ; score ; w } = true", "interpret": "for the score records of all rows , most of them fuzzily match to w .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "score_3": 3, "w_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "score_3": "score", "w_4": "w"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "score_3": [0], "w_4": [0]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["1", "november 14", "delaware", "w 76 - 56", "ryan brooks - 23", "lavoy allen - 15", "juan fernandez - 5", "bob carpenter center , newark , de ( 3080 )", "1 - 0"], ["2", "november 17", "georgetown ( 19 )", "l 46 - 45", "allen - 12", "allen - 14", "luiz guzman - 6", "verizon center , washington , dc ( 8712 )", "1 - 1"], ["3", "november 21", "siena", "w 73 - 69", "fernandez - 20", "allen - 7", "allen - 5", "liacouras center , philadelphia , pa ( 6759 )", "2 - 1"], ["4", "november 24", "ball state", "w 66 - 46", "brooks - 17", "allen - 9", "allen / brooks - 7", "liacouras center , philadelphia , pa ( 3597 )", "3 - 1"], ["5", "november 27", "virginia tech", "w 61 - 50", "allen - 18", "allen - 10", "fernandez - 6", "palestra , philadelphia , pa ( 3750 )", "4 - 1"]], "query": "most_eq { all_rows ; score ; w } = true", "question": "the majority of the time the temple owls won ."}, {"topic": "1975 formula one season", "wiki": "https://en.wikipedia.org/wiki/1975_Formula_One_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1140085-2.html.csv", "action": "ordinal", "sent": "the third game of the 75 formula one season took place on march 1st .", "annotation": {"row": "3", "col": "1", "order": "3", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "rnd", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; rnd ; 3 }"}, "date"], "result": "1 march", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; rnd ; 3 } ; date }"}, "1 march"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; rnd ; 3 } ; date } ; 1 march } = true", "tointer": "select the row whose rnd record of all rows is 3rd minimum . the date record of this row is 1 march ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; rnd ; 3 } ; date } ; 1 march } = true", "interpret": "select the row whose rnd record of all rows is 3rd minimum . the date record of this row is 1 march .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "rnd_5": 5, "3_6": 6, "date_7": 7, "1 march_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "rnd_5": "rnd", "3_6": "3", "date_7": "date", "1 march_8": "1 march"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "rnd_5": [0], "3_6": [0], "date_7": [1], "1 march_8": [2]}, "table_header": ["rnd", "race", "date", "location", "pole position", "fastest lap", "race winner", "constructor", "report"], "table_cont": [["1", "argentine grand prix", "12 january", "buenos aires", "jean - pierre jarier", "james hunt", "emerson fittipaldi", "mclaren - ford", "report"], ["2", "brazilian grand prix", "26 january", "interlagos", "jean - pierre jarier", "jean - pierre jarier", "carlos pace", "brabham - ford", "report"], ["3", "south african grand prix", "1 march", "kyalami", "carlos pace", "carlos pace", "jody scheckter", "tyrrell - ford", "report"], ["4", "spanish grand prix", "27 april", "montju\u00efc", "niki lauda", "mario andretti", "jochen mass", "mclaren - ford", "report"], ["5", "monaco grand prix", "11 may", "monaco", "niki lauda", "patrick depailler", "niki lauda", "ferrari", "report"], ["6", "belgian grand prix", "25 may", "zolder", "niki lauda", "clay regazzoni", "niki lauda", "ferrari", "report"], ["7", "swedish grand prix", "8 june", "anderstorp", "vittorio brambilla", "niki lauda", "niki lauda", "ferrari", "report"], ["8", "dutch grand prix", "22 june", "zandvoort", "niki lauda", "niki lauda", "james hunt", "hesketh - ford", "report"], ["9", "french grand prix", "6 july", "paul ricard", "niki lauda", "jochen mass", "niki lauda", "ferrari", "report"], ["10", "british grand prix", "19 july", "silverstone", "tom pryce", "clay regazzoni", "emerson fittipaldi", "mclaren - ford", "report"], ["11", "german grand prix", "3 august", "n\u00fcrburgring", "niki lauda", "clay regazzoni", "carlos reutemann", "brabham - ford", "report"], ["12", "austrian grand prix", "17 august", "\u00f6sterreichring", "niki lauda", "vittorio brambilla", "vittorio brambilla", "march - ford", "report"], ["13", "italian grand prix", "7 september", "monza", "niki lauda", "clay regazzoni", "clay regazzoni", "ferrari", "report"]], "query": "eq { hop { nth_argmin { all_rows ; rnd ; 3 } ; date } ; 1 march } = true", "question": "the third game of the 75 formula one season took place on march 1st ."}, {"topic": "catalina sandino moreno", "wiki": "https://en.wikipedia.org/wiki/Catalina_Sandino_Moreno", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1430940-3.html.csv", "action": "comparative", "sent": "the london critics circle film awards took place after the satellite awards took place .", "annotation": {"row_1": "17", "row_2": "16", "col": "1", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "award", "london critics circle film awards"], "result": null, "ind": 0, "tointer": "select the rows whose award record fuzzily matches to london critics circle film awards .", "tostr": "filter_eq { all_rows ; award ; london critics circle film awards }"}, "year"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; award ; london critics circle film awards } ; year }", "tointer": "select the rows whose award record fuzzily matches to london critics circle film awards . take the year record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "award", "satellite awards"], "result": null, "ind": 1, "tointer": "select the rows whose award record fuzzily matches to satellite awards .", "tostr": "filter_eq { all_rows ; award ; satellite awards }"}, "year"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; award ; satellite awards } ; year }", "tointer": "select the rows whose award record fuzzily matches to satellite awards . take the year record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; award ; london critics circle film awards } ; year } ; hop { filter_eq { all_rows ; award ; satellite awards } ; year } } = true", "tointer": "select the rows whose award record fuzzily matches to london critics circle film awards . take the year record of this row . select the rows whose award record fuzzily matches to satellite awards . take the year record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; award ; london critics circle film awards } ; year } ; hop { filter_eq { all_rows ; award ; satellite awards } ; year } } = true", "interpret": "select the rows whose award record fuzzily matches to london critics circle film awards . take the year record of this row . select the rows whose award record fuzzily matches to satellite awards . take the year record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "award_7": 7, "london critics circle film awards_8": 8, "year_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "award_11": 11, "satellite awards_12": 12, "year_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "award_7": "award", "london critics circle film awards_8": "london critics circle film awards", "year_9": "year", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "award_11": "award", "satellite awards_12": "satellite awards", "year_13": "year"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "award_7": [0], "london critics circle film awards_8": [0], "year_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "award_11": [1], "satellite awards_12": [1], "year_13": [3]}, "table_header": ["year", "award", "nominated work", "category", "result"], "table_cont": [["2004", "academy awards", "maria full of grace", "best actress", "nominated"], ["2004", "screen actors guild awards", "maria full of grace", "best actress", "nominated"], ["2004", "independent spirit awards", "maria full of grace", "best female lead", "won"], ["2004", "chicago film critics association", "maria full of grace", "most promising performer", "won"], ["2004", "colombian cinema award", "maria full of grace", "best actress", "won"], ["2004", "gotham awards", "maria full of grace", "breakthrough performance", "won"], ["2004", "imagen foundation awards", "maria full of grace", "best actress - film", "won"], ["2004", "los angeles film critics association awards", "maria full of grace", "award for new generation", "won"], ["2004", "online film critics society awards", "maria full of grace", "best breakthrough performance", "won"], ["2004", "premios ace", "maria full of grace", "best actress", "won"], ["2004", "seattle international film festival", "maria full of grace", "best actress", "won"], ["2004", "showest award", "maria full of grace", "international star of the year", "won"], ["2004", "berlin international film festival", "maria full of grace", "best actress", "won"], ["2004", "broadcast film critics association", "maria full of grace", "best actress", "nominated"], ["2004", "chlotrudis awards", "maria full of grace", "best actress", "nominated"], ["2004", "satellite awards", "maria full of grace", "best actress in a motion picture , drama", "nominated"], ["2005", "london critics circle film awards", "maria full of grace", "actress of the year", "nominated"]], "query": "greater { hop { filter_eq { all_rows ; award ; london critics circle film awards } ; year } ; hop { filter_eq { all_rows ; award ; satellite awards } ; year } } = true", "question": "the london critics circle film awards took place after the satellite awards took place ."}, {"topic": "television in the united kingdom", "wiki": "https://en.wikipedia.org/wiki/Television_in_the_United_Kingdom", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-182410-14.html.csv", "action": "superlative", "sent": "the 1966 world cup final drew the highest amount of viewers for a television broadcast in the united kingdom .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "number of viewers"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; number of viewers }"}, "show"], "result": "1966 world cup final", "ind": 1, "tostr": "hop { argmax { all_rows ; number of viewers } ; show }"}, "1966 world cup final"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; number of viewers } ; show } ; 1966 world cup final } = true", "tointer": "select the row whose number of viewers record of all rows is maximum . the show record of this row is 1966 world cup final ."}, "logic_str": "eq { hop { argmax { all_rows ; number of viewers } ; show } ; 1966 world cup final } = true", "interpret": "select the row whose number of viewers record of all rows is maximum . the show record of this row is 1966 world cup final .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "number of viewers_5": 5, "show_6": 6, "1966 world cup final_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "number of viewers_5": "number of viewers", "show_6": "show", "1966 world cup final_7": "1966 world cup final"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "number of viewers_5": [0], "show_6": [1], "1966 world cup final_7": [2]}, "table_header": ["rank", "show", "number of viewers", "date", "network"], "table_cont": [["1", "1966 world cup final", "32.30 million", "30 july 1966", "bbc one"], ["2", "funeral of princess diana", "32.10 million", "6 september 1997", "bbc one"], ["3", "british royal family documentary", "30.69 million", "1969", "bbc1"], ["4", "eastenders", "30.15 million", "25 december 1986", "bbc one"], ["5", "apollo 13 splashdown", "28.60 million", "17 april 1970", "bbc one"], ["6", "fa cup replay : chelsea vs leeds", "28.49 million", "29 april 1970", "bbc one"], ["7", "royal wedding of charles & diana", "28.40 million", "29 july 1981", "bbc one"], ["8", "wedding of princess anne and mark phillips", "27.60 million", "14 november 1973", "bbc one"], ["9", "coronation street", "26.65 million", "25 december 1987", "itv"], ["10", "2012 summer olympics closing ceremony in london", "24.46 million", "12 august 2012", "bbc one"]], "query": "eq { hop { argmax { all_rows ; number of viewers } ; show } ; 1966 world cup final } = true", "question": "the 1966 world cup final drew the highest amount of viewers for a television broadcast in the united kingdom ."}, {"topic": "soybean oil", "wiki": "https://en.wikipedia.org/wiki/Soybean_oil", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2540803-2.html.csv", "action": "majority", "sent": "the majority of fat types have a total fat content of 100 grams .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "100", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "total fat", "100"], "result": true, "ind": 0, "tointer": "for the total fat records of all rows , most of them are equal to 100 .", "tostr": "most_eq { all_rows ; total fat ; 100 } = true"}, "logic_str": "most_eq { all_rows ; total fat ; 100 } = true", "interpret": "for the total fat records of all rows , most of them are equal to 100 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "total fat_3": 3, "100_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "total fat_3": "total fat", "100_4": "100"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "total fat_3": [0], "100_4": [0]}, "table_header": ["", "total fat", "saturated fat", "monounsaturated fat", "polyunsaturated fat", "smoke point"], "table_cont": [["sunflower oil", "100 g", "11 g", "20 g ( 84 g in high oleic variety )", "69 g ( 4 g in high oleic variety )", "degree"], ["soybean oil", "100 g", "16 g", "23 g", "58 g", "degree"], ["canola oil", "100 g", "7 g", "63 g", "28 g", "degree"], ["olive oil", "100 g", "14 g", "73 g", "11 g", "degree"], ["corn oil", "100 g", "15 g", "30 g", "55 g", "degree"], ["peanut oil", "100 g", "17 g", "46 g", "32 g", "degree"], ["rice bran oil", "100 g", "25 g", "38 g", "37 g", "degree"], ["vegetable shortening ( hydrogenated )", "71 g", "23 g ( 34 % )", "8 g ( 11 % )", "37 g ( 52 % )", "degree"], ["lard", "100 g", "39 g", "45 g", "11 g", "degree"], ["suet", "94 g", "52 g ( 55 % )", "32 g ( 34 % )", "3 g ( 3 % )", "200degree ( 400degree )"]], "query": "most_eq { all_rows ; total fat ; 100 } = true", "question": "the majority of fat types have a total fat content of 100 grams ."}, {"topic": "sans contrefa\u00e7on", "wiki": "https://en.wikipedia.org/wiki/Sans_contrefa%C3%A7on", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15188879-2.html.csv", "action": "superlative", "sent": "the music video is the longest version of the song \" sans contrefa\u00e7on \" .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "length"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; length }"}, "version"], "result": "music video", "ind": 1, "tostr": "hop { argmax { all_rows ; length } ; version }"}, "music video"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; length } ; version } ; music video } = true", "tointer": "select the row whose length record of all rows is maximum . the version record of this row is music video ."}, "logic_str": "eq { hop { argmax { all_rows ; length } ; version } ; music video } = true", "interpret": "select the row whose length record of all rows is maximum . the version record of this row is music video .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "length_5": 5, "version_6": 6, "music video_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "length_5": "length", "version_6": "version", "music video_7": "music video"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "length_5": [0], "version_6": [1], "music video_7": [2]}, "table_header": ["version", "length", "album", "remixed by", "year"], "table_cont": [["album version", "4:07", "ainsi soit je", "-", "1987"], ["single version", "3:50", "-", "laurent boutonnat", "1987"], ["boy remix", "5:55", "dance remixes", "thierry rogen", "1987"], ["girl remix", "4:20", "-", "thierry rogen", "1987"], ["music video", "8:43", "les clips vol ii , music videos i", "-", "1987"], ["live version ( recorded in 1989 )", "6:10", "en concert", "-", "1989"], ["live version ( recorded in 1996 )", "4:23", "live \u00e0 bercy", "-", "1996"], ["live version ( recorded in 2000 )", "0:34", "mylenium tour", "-", "2000"], ["album version", "4:15", "les mots", "laurent boutonnat", "2001"], ["jca remix", "5:52", "remixes", "jca", "2003"], ["live version ( recorded in 2006 )", "4:46", "avant que l'ombre \u00e0 bercy", "-", "2006"], ["live version ( recorded in 2009 )", "4:09", "n degree5 on tour", "-", "2009"]], "query": "eq { hop { argmax { all_rows ; length } ; version } ; music video } = true", "question": "the music video is the longest version of the song \" sans contrefa\u00e7on \" ."}, {"topic": "batangas state university", "wiki": "https://en.wikipedia.org/wiki/Batangas_State_University", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18965074-1.html.csv", "action": "unique", "sent": "only one campus of the university had jessie a montalbo as its executive director .", "annotation": {"scope": "all", "row": "4", "col": "2", "col_other": "n/a", "criterion": "equal", "value": "jessie a montalbo", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "executive director", "jessie a montalbo"], "result": null, "ind": 0, "tointer": "select the rows whose executive director record fuzzily matches to jessie a montalbo .", "tostr": "filter_eq { all_rows ; executive director ; jessie a montalbo }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; executive director ; jessie a montalbo } } = true", "tointer": "select the rows whose executive director record fuzzily matches to jessie a montalbo . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; executive director ; jessie a montalbo } } = true", "interpret": "select the rows whose executive director record fuzzily matches to jessie a montalbo . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "executive director_4": 4, "jessie a montalbo_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "executive director_4": "executive director", "jessie a montalbo_5": "jessie a montalbo"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "executive director_4": [0], "jessie a montalbo_5": [0]}, "table_header": ["campus", "executive director", "founded", "type", "location"], "table_cont": [["governor pablo borbon campus i", "rogelio a antenor", "1903", "main ( flagship )", "poblacion , batangas city"], ["governor pablo borbon campus ii", "expedito v acorda", "1984", "main", "brgy alangilan , batangas city"], ["apolinario r apacible school of fisheries campus", "enrico m dalangin", "1952", "satellite", "nasugbu , batangas"], ["jose p laurel polytechnic college campus", "jessie a montalbo", "1968", "satellite", "malvar , batangas"], ["claro m recto campus", "edgard e valdez", "2000", "extension", "lipa city"], ["balayan campus", "israel p pe\u00f1ero", "1994", "extension", "balayan , batangas"], ["lemery campus", "israel p pe\u00f1ero", "2003", "extension", "lemery , batangas"], ["lobo campus", "rogelio a antenor", "2003", "extension", "lobo , batangas"], ["rosario campus", "edgard e valdez", "2000", "extension", "rosario , batangas"], ["san juan campus", "edgard e valdez", "2000", "extension", "san juan , batangas"]], "query": "only { filter_eq { all_rows ; executive director ; jessie a montalbo } } = true", "question": "only one campus of the university had jessie a montalbo as its executive director ."}, {"topic": "1989 masters tournament", "wiki": "https://en.wikipedia.org/wiki/1989_Masters_Tournament", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16514242-7.html.csv", "action": "majority", "sent": "most players in the 1989 masters tournament were from the united states .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "united states", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "country", "united states"], "result": true, "ind": 0, "tointer": "for the country records of all rows , most of them fuzzily match to united states .", "tostr": "most_eq { all_rows ; country ; united states } = true"}, "logic_str": "most_eq { all_rows ; country ; united states } = true", "interpret": "for the country records of all rows , most of them fuzzily match to united states .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "country_3": 3, "united states_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "country_3": "country", "united states_4": "united states"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "country_3": [0], "united states_4": [0]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["t1", "nick faldo", "england", "68 + 73 + 77 + 65 = 283", "- 5", "playoff"], ["t1", "scott hoch", "united states", "69 + 74 + 71 + 69 = 283", "- 5", "playoff"], ["t3", "ben crenshaw", "united states", "71 + 72 + 70 + 71 = 284", "- 4", "64450"], ["t3", "greg norman", "australia", "74 + 75 + 68 + 67 = 284", "- 4", "64450"], ["5", "seve ballesteros", "spain", "71 + 72 + 73 + 69 = 285", "- 3", "44400"], ["6", "mike reid", "united states", "72 + 71 + 71 + 72 = 286", "- 2", "40000"], ["7", "jodie mudd", "united states", "73 + 76 + 72 + 66 = 287", "- 1", "37200"], ["t8", "chip beck", "united states", "74 + 76 + 70 + 68 = 288", "e", "32200"], ["t8", "jos\u00e9 mar\u00eda olaz\u00e1bal", "spain", "77 + 73 + 70 + 68 = 288", "e", "32200"], ["t8", "jeff sluman", "united states", "74 + 72 + 74 + 68 = 288", "e", "32200"]], "query": "most_eq { all_rows ; country ; united states } = true", "question": "most players in the 1989 masters tournament were from the united states ."}, {"topic": "dwbl", "wiki": "https://en.wikipedia.org/wiki/DWBL", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16615322-1.html.csv", "action": "count", "sent": "for station dwbl , there are 3 brands where the power is 20 kw .", "annotation": {"scope": "all", "criterion": "equal", "value": "20 kw", "result": "3", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "power", "20 kw"], "result": null, "ind": 0, "tointer": "select the rows whose power record fuzzily matches to 20 kw .", "tostr": "filter_eq { all_rows ; power ; 20 kw }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; power ; 20 kw } }", "tointer": "select the rows whose power record fuzzily matches to 20 kw . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; power ; 20 kw } } ; 3 } = true", "tointer": "select the rows whose power record fuzzily matches to 20 kw . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; power ; 20 kw } } ; 3 } = true", "interpret": "select the rows whose power record fuzzily matches to 20 kw . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "power_5": 5, "20 kw_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "power_5": "power", "20 kw_6": "20 kw", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "power_5": [0], "20 kw_6": [0], "3_7": [2]}, "table_header": ["branding", "callsign", "frequency", "power", "location"], "table_cont": [["dwbl 1242", "dwbl", "1242 khz", "20 kw", "metro manila"], ["mellow 947", "dwll", "94.7 mhz", "20 kw", "metro manila"], ["mellow 887", "dyku", "88.7 mhz", "10 kw", "iloilo city"], ["mellow 957", "dxbl", "95.7 mhz", "10 kw", "cagayan de oro"], ["mellow 947 davao", "dxll", "94.7 mhz", "20 kw", "davao city"]], "query": "eq { count { filter_eq { all_rows ; power ; 20 kw } } ; 3 } = true", "question": "for station dwbl , there are 3 brands where the power is 20 kw ."}, {"topic": "catalina sandino moreno", "wiki": "https://en.wikipedia.org/wiki/Catalina_Sandino_Moreno", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1430940-3.html.csv", "action": "ordinal", "sent": "the london critics circle film awards were the 17th awards for which maria full of grace was nominated .", "annotation": {"row": "17", "col": "1", "order": "17", "col_other": "2,3", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "year", "17"], "result": "2005", "ind": 0, "tostr": "nth_min { all_rows ; year ; 17 }", "tointer": "the 17th minimum year record of all rows is 2005 ."}, "2005"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; year ; 17 } ; 2005 }", "tointer": "the 17th minimum year record of all rows is 2005 ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "year", "17"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; year ; 17 }"}, "award"], "result": "london critics circle film awards", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; year ; 17 } ; award }"}, "london critics circle film awards"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; year ; 17 } ; award } ; london critics circle film awards }", "tointer": "the award record of the row with 17th minimum year record is london critics circle film awards ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "year", "17"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; year ; 17 }"}, "nominated work"], "result": "maria full of grace", "ind": 5, "tostr": "hop { nth_argmin { all_rows ; year ; 17 } ; nominated work }"}, "maria full of grace"], "result": true, "ind": 6, "tostr": "eq { hop { nth_argmin { all_rows ; year ; 17 } ; nominated work } ; maria full of grace }", "tointer": "the nominated work record of the row with 17th minimum year record is maria full of grace ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { nth_argmin { all_rows ; year ; 17 } ; award } ; london critics circle film awards } ; eq { hop { nth_argmin { all_rows ; year ; 17 } ; nominated work } ; maria full of grace } }", "tointer": "the award record of the row with 17th minimum year record is london critics circle film awards . the nominated work record of the row with 17th minimum year record is maria full of grace ."}], "result": true, "ind": 8, "tostr": "and { eq { nth_min { all_rows ; year ; 17 } ; 2005 } ; and { eq { hop { nth_argmin { all_rows ; year ; 17 } ; award } ; london critics circle film awards } ; eq { hop { nth_argmin { all_rows ; year ; 17 } ; nominated work } ; maria full of grace } } } = true", "tointer": "the 17th minimum year record of all rows is 2005 . the award record of the row with 17th minimum year record is london critics circle film awards . the nominated work record of the row with 17th minimum year record is maria full of grace ."}, "logic_str": "and { eq { nth_min { all_rows ; year ; 17 } ; 2005 } ; and { eq { hop { nth_argmin { all_rows ; year ; 17 } ; award } ; london critics circle film awards } ; eq { hop { nth_argmin { all_rows ; year ; 17 } ; nominated work } ; maria full of grace } } } = true", "interpret": "the 17th minimum year record of all rows is 2005 . the award record of the row with 17th minimum year record is london critics circle film awards . the nominated work record of the row with 17th minimum year record is maria full of grace .", "num_func": 10, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "eq_1": 1, "nth_min_0": 0, "all_rows_10": 10, "year_11": 11, "17_12": 12, "2005_13": 13, "and_7": 7, "str_eq_4": 4, "str_hop_3": 3, "nth_argmin_2": 2, "all_rows_14": 14, "year_15": 15, "17_16": 16, "award_17": 17, "london critics circle film awards_18": 18, "str_eq_6": 6, "str_hop_5": 5, "nominated work_19": 19, "maria full of grace_20": 20}, "g_ids_features": {"and_8": "and", "result_9": "true", "eq_1": "eq", "nth_min_0": "nth_min", "all_rows_10": "all_rows", "year_11": "year", "17_12": "17", "2005_13": "2005", "and_7": "and", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "nth_argmin_2": "nth_argmin", "all_rows_14": "all_rows", "year_15": "year", "17_16": "17", "award_17": "award", "london critics circle film awards_18": "london critics circle film awards", "str_eq_6": "str_eq", "str_hop_5": "str_hop", "nominated work_19": "nominated work", "maria full of grace_20": "maria full of grace"}, "g_adj": {"and_8": [9], "result_9": [], "eq_1": [8], "nth_min_0": [1], "all_rows_10": [0], "year_11": [0], "17_12": [0], "2005_13": [1], "and_7": [8], "str_eq_4": [7], "str_hop_3": [4], "nth_argmin_2": [3, 5], "all_rows_14": [2], "year_15": [2], "17_16": [2], "award_17": [3], "london critics circle film awards_18": [4], "str_eq_6": [7], "str_hop_5": [6], "nominated work_19": [5], "maria full of grace_20": [6]}, "table_header": ["year", "award", "nominated work", "category", "result"], "table_cont": [["2004", "academy awards", "maria full of grace", "best actress", "nominated"], ["2004", "screen actors guild awards", "maria full of grace", "best actress", "nominated"], ["2004", "independent spirit awards", "maria full of grace", "best female lead", "won"], ["2004", "chicago film critics association", "maria full of grace", "most promising performer", "won"], ["2004", "colombian cinema award", "maria full of grace", "best actress", "won"], ["2004", "gotham awards", "maria full of grace", "breakthrough performance", "won"], ["2004", "imagen foundation awards", "maria full of grace", "best actress - film", "won"], ["2004", "los angeles film critics association awards", "maria full of grace", "award for new generation", "won"], ["2004", "online film critics society awards", "maria full of grace", "best breakthrough performance", "won"], ["2004", "premios ace", "maria full of grace", "best actress", "won"], ["2004", "seattle international film festival", "maria full of grace", "best actress", "won"], ["2004", "showest award", "maria full of grace", "international star of the year", "won"], ["2004", "berlin international film festival", "maria full of grace", "best actress", "won"], ["2004", "broadcast film critics association", "maria full of grace", "best actress", "nominated"], ["2004", "chlotrudis awards", "maria full of grace", "best actress", "nominated"], ["2004", "satellite awards", "maria full of grace", "best actress in a motion picture , drama", "nominated"], ["2005", "london critics circle film awards", "maria full of grace", "actress of the year", "nominated"]], "query": "and { eq { nth_min { all_rows ; year ; 17 } ; 2005 } ; and { eq { hop { nth_argmin { all_rows ; year ; 17 } ; award } ; london critics circle film awards } ; eq { hop { nth_argmin { all_rows ; year ; 17 } ; nominated work } ; maria full of grace } } } = true", "question": "the london critics circle film awards were the 17th awards for which maria full of grace was nominated ."}, {"topic": "hannes van asseldonk", "wiki": "https://en.wikipedia.org/wiki/Hannes_van_Asseldonk", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27631002-1.html.csv", "action": "count", "sent": "of all the seasons hanes van asseldonk raced in , he only ended the season with a position in six of those seasons .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "0", "result": "6", "col": "10", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "position", "0"], "result": null, "ind": 0, "tointer": "select the rows whose position record is greater than 0 .", "tostr": "filter_greater { all_rows ; position ; 0 }"}], "result": "6", "ind": 1, "tostr": "count { filter_greater { all_rows ; position ; 0 } }", "tointer": "select the rows whose position record is greater than 0 . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; position ; 0 } } ; 6 } = true", "tointer": "select the rows whose position record is greater than 0 . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_greater { all_rows ; position ; 0 } } ; 6 } = true", "interpret": "select the rows whose position record is greater than 0 . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "position_5": 5, "0_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "position_5": "position", "0_6": "0", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "position_5": [0], "0_6": [0], "6_7": [2]}, "table_header": ["season", "series", "team", "races", "wins", "poles", "f / laps", "podiums", "points", "position"], "table_cont": [["2010", "formula bmw europe", "josef kaufmann racing", "16", "0", "0", "1", "2", "174", "7th"], ["2010", "formula bmw pacific", "motaworld racing", "2", "0", "0", "0", "0", "0", "nc"], ["2010", "formula abarth", "prema junior", "6", "3", "1", "1", "3", "76", "6th"], ["2011", "fia formula 3 international trophy", "van amersfoort racing", "4", "0", "0", "0", "0", "0", "nc"], ["2011", "fia formula 3 international trophy", "hitech racing", "4", "0", "0", "0", "0", "0", "nc"], ["2011", "german formula three championship", "van amersfoort racing", "18", "0", "2", "1", "5", "61", "5th"], ["2011", "british formula three championship", "van amersfoort racing", "3", "0", "0", "1", "0", "0", "nc"], ["2011", "austria formel 3 cup", "van amersfoort racing", "2", "1", "2", "2", "2", "35", "10th"], ["2011", "macau grand prix", "hitech racing", "1", "0", "0", "0", "0", "n / a", "5th"], ["2012", "toyota racing series", "giles motorsport", "15", "3", "2", "3", "7", "738", "2nd"]], "query": "eq { count { filter_greater { all_rows ; position ; 0 } } ; 6 } = true", "question": "of all the seasons hanes van asseldonk raced in , he only ended the season with a position in six of those seasons ."}, {"topic": "kmro", "wiki": "https://en.wikipedia.org/wiki/KMRO", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12760940-1.html.csv", "action": "unique", "sent": "k251ah is the only kmro call sign that has an erp w of 8 .", "annotation": {"scope": "all", "row": "3", "col": "4", "col_other": "1", "criterion": "equal", "value": "8", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "erp w", "8"], "result": null, "ind": 0, "tointer": "select the rows whose erp w record is equal to 8 .", "tostr": "filter_eq { all_rows ; erp w ; 8 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; erp w ; 8 } }", "tointer": "select the rows whose erp w record is equal to 8 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "erp w", "8"], "result": null, "ind": 0, "tointer": "select the rows whose erp w record is equal to 8 .", "tostr": "filter_eq { all_rows ; erp w ; 8 }"}, "call sign"], "result": "k251ah", "ind": 2, "tostr": "hop { filter_eq { all_rows ; erp w ; 8 } ; call sign }"}, "k251ah"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; erp w ; 8 } ; call sign } ; k251ah }", "tointer": "the call sign record of this unqiue row is k251ah ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; erp w ; 8 } } ; eq { hop { filter_eq { all_rows ; erp w ; 8 } ; call sign } ; k251ah } } = true", "tointer": "select the rows whose erp w record is equal to 8 . there is only one such row in the table . the call sign record of this unqiue row is k251ah ."}, "logic_str": "and { only { filter_eq { all_rows ; erp w ; 8 } } ; eq { hop { filter_eq { all_rows ; erp w ; 8 } ; call sign } ; k251ah } } = true", "interpret": "select the rows whose erp w record is equal to 8 . there is only one such row in the table . the call sign record of this unqiue row is k251ah .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "erp w_7": 7, "8_8": 8, "str_eq_3": 3, "str_hop_2": 2, "call sign_9": 9, "k251ah_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "erp w_7": "erp w", "8_8": "8", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "call sign_9": "call sign", "k251ah_10": "k251ah"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "erp w_7": [0], "8_8": [0], "str_eq_3": [4], "str_hop_2": [3], "call sign_9": [2], "k251ah_10": [3]}, "table_header": ["call sign", "frequency mhz", "city of license", "erp w", "class", "fcc info"], "table_cont": [["k217ez", "91.3", "coachella , california", "10", "d", "fcc"], ["k217ef", "91.3", "desert center , california", "10", "d", "fcc"], ["k251ah", "98.1", "grand terrace , california", "8", "d", "fcc"], ["k242br", "96.3", "indio , california", "10", "d", "fcc"], ["k225ao", "92.9", "lompoc , california", "5", "d", "fcc"], ["k208da", "89.5", "los banos , california", "10", "d", "fcc"], ["k295ai", "106.9", "muscoy , california", "7", "d", "fcc"], ["k238bb", "95.5", "palm springs , california", "6", "d", "fcc"], ["k252ei", "98.3", "rialto , california", "30", "d", "fcc"], ["k217cq", "91.3", "salinas , california", "10", "d", "fcc"], ["k211dk", "90.1", "santa ana , california", "10", "d", "fcc"], ["k240ak", "95.9", "soledad , california", "27", "d", "fcc"], ["k219dk", "91.7", "victorville , california", "10", "d", "fcc"], ["k279be", "103.7", "bakersfield , california", "99", "d", "fcc"], ["k293bg", "106.5", "cambria , california", "10", "d", "fcc"], ["k239az", "95.7", "lake isabella , california", "10", "d", "fcc"], ["k212dl", "90.3", "rosamond , california", "250", "d", "fcc"], ["k269ew", "101.7", "santa maria , california", "10", "d", "fcc"]], "query": "and { only { filter_eq { all_rows ; erp w ; 8 } } ; eq { hop { filter_eq { all_rows ; erp w ; 8 } ; call sign } ; k251ah } } = true", "question": "k251ah is the only kmro call sign that has an erp w of 8 ."}, {"topic": "usa today all - usa high school basketball team", "wiki": "https://en.wikipedia.org/wiki/USA_Today_All-USA_high_school_basketball_team", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11677760-31.html.csv", "action": "majority", "sent": "most of the players on the usa high school basketball team have yet to declare for the nba draft .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "equal", "value": "has not yet declared for the nba draft", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "nba draft", "has not yet declared for the nba draft"], "result": true, "ind": 0, "tointer": "for the nba draft records of all rows , most of them fuzzily match to has not yet declared for the nba draft .", "tostr": "most_eq { all_rows ; nba draft ; has not yet declared for the nba draft } = true"}, "logic_str": "most_eq { all_rows ; nba draft ; has not yet declared for the nba draft } = true", "interpret": "for the nba draft records of all rows , most of them fuzzily match to has not yet declared for the nba draft .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "nba draft_3": 3, "has not yet declared for the nba draft_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "nba draft_3": "nba draft", "has not yet declared for the nba draft_4": "has not yet declared for the nba draft"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "nba draft_3": [0], "has not yet declared for the nba draft_4": [0]}, "table_header": ["player", "height", "school", "hometown", "college", "nba draft"], "table_cont": [["johnny o'bryant", "6 - 10", "east side high school", "cleveland , ms", "lsu", "has not yet declared for the nba draft"], ["kyle wiltjer", "6 - 10", "jesuit high school", "portland , or", "kentucky / gonzaga", "has not yet declared for the nba draft"], ["tyrone johnson", "6 - 3", "montrose christian school", "rockville , md", "villanova", "has not yet declared for the nba draft"], ["shannon scott", "6 - 2", "alpharetta high school", "alpharetta , ga", "ohio state", "has not yet declared for the nba draft"], ["marquis teague", "6 - 1", "pike high school", "indianapolis , in", "kentucky", "1st round - 29th pick of 2012 draft ( bulls )"]], "query": "most_eq { all_rows ; nba draft ; has not yet declared for the nba draft } = true", "question": "most of the players on the usa high school basketball team have yet to declare for the nba draft ."}, {"topic": "judo at the 2001 east asian games", "wiki": "https://en.wikipedia.org/wiki/Judo_at_the_2001_East_Asian_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14288427-3.html.csv", "action": "superlative", "sent": "south korea had the highest number of total medals in judo at the 2001 east asian games .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "total"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; total }"}, "nation"], "result": "south korea", "ind": 1, "tostr": "hop { argmax { all_rows ; total } ; nation }"}, "south korea"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; total } ; nation } ; south korea } = true", "tointer": "select the row whose total record of all rows is maximum . the nation record of this row is south korea ."}, "logic_str": "eq { hop { argmax { all_rows ; total } ; nation } ; south korea } = true", "interpret": "select the row whose total record of all rows is maximum . the nation record of this row is south korea .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "total_5": 5, "nation_6": 6, "south korea_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "total_5": "total", "nation_6": "nation", "south korea_7": "south korea"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "total_5": [0], "nation_6": [1], "south korea_7": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "japan", "6", "4", "4", "14"], ["2", "south korea", "5", "6", "4", "15"], ["3", "china", "5", "3", "5", "13"], ["4", "kazakhstan", "0", "2", "5", "7"], ["5", "chinese taipei", "0", "1", "4", "5"], ["6", "mongolia", "0", "0", "5", "5"], ["7", "australia", "0", "0", "4", "4"], ["total", "total", "16", "16", "31", "63"]], "query": "eq { hop { argmax { all_rows ; total } ; nation } ; south korea } = true", "question": "south korea had the highest number of total medals in judo at the 2001 east asian games ."}, {"topic": "jahid hasan ameli", "wiki": "https://en.wikipedia.org/wiki/Jahid_Hasan_Ameli", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15687212-1.html.csv", "action": "superlative", "sent": "of the competitions that jahid hasan ameli participated in , the most recent one was in kathmandu .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "11", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "date"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; date }"}, "venue"], "result": "halchowk stadium , kathmandu", "ind": 1, "tostr": "hop { argmax { all_rows ; date } ; venue }"}, "halchowk stadium , kathmandu"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; date } ; venue } ; halchowk stadium , kathmandu } = true", "tointer": "select the row whose date record of all rows is maximum . the venue record of this row is halchowk stadium , kathmandu ."}, "logic_str": "eq { hop { argmax { all_rows ; date } ; venue } ; halchowk stadium , kathmandu } = true", "interpret": "select the row whose date record of all rows is maximum . the venue record of this row is halchowk stadium , kathmandu .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "date_5": 5, "venue_6": 6, "halchowk stadium , kathmandu_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "date_5": "date", "venue_6": "venue", "halchowk stadium , kathmandu_7": "halchowk stadium , kathmandu"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "date_5": [0], "venue_6": [1], "halchowk stadium , kathmandu_7": [2]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["8 december 2005", "peoples football stadium , karachi", "3 - 0", "3 - 0", "2005 saff gold cup"], ["12 december 2005", "peoples football stadium , karachi", "1 - 1", "1 - 1", "2005 saff gold cup"], ["1 april 2006", "bangabandhu national stadium , dhaka", "2 - 0", "2 - 1", "2006 afc challenge cup"], ["3 april 2006", "bangabandhu national stadium , dhaka", "1 - 0", "3 - 0", "2006 afc challenge cup"], ["9 may 2008", "spartak stadium , bishkek", "1 - 0", "1 - 2", "2008 afc challenge cup qualifier"], ["6 june 2008", "sugathadasa stadium , colombo", "1 - 2", "2 - 2", "2008 saff championship"], ["4 december 2009", "bangabandhu national stadium , dhaka", "4 - 1", "4 - 1", "2009 saff championship"], ["29 june 2011", "bangabandhu national stadium , dhaka", "1 - 0", "3 - 0", "2014 fifa world cup qualifier"], ["28 july 2011", "bangabandhu national stadium , dhaka", "2 - 0", "2 - 0", "2014 fifa world cup qualifier"], ["20 november 2012", "national stadium , kuala lumpur", "1 - 1", "1 - 1", "international friendly"], ["5 september 2013", "halchowk stadium , kathmandu", "1 - 0", "1 - 2", "2013 saff championship"]], "query": "eq { hop { argmax { all_rows ; date } ; venue } ; halchowk stadium , kathmandu } = true", "question": "of the competitions that jahid hasan ameli participated in , the most recent one was in kathmandu ."}, {"topic": "sweden in the eurovision song contest 2000", "wiki": "https://en.wikipedia.org/wiki/Sweden_in_the_Eurovision_Song_Contest_2000", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13598632-1.html.csv", "action": "comparative", "sent": "guide had more points in the eurovision song contest 2000 than balsam boys .", "annotation": {"row_1": "1", "row_2": "2", "col": "4", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "artist", "guide"], "result": null, "ind": 0, "tointer": "select the rows whose artist record fuzzily matches to guide .", "tostr": "filter_eq { all_rows ; artist ; guide }"}, "points"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; artist ; guide } ; points }", "tointer": "select the rows whose artist record fuzzily matches to guide . take the points record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "artist", "balsam boys"], "result": null, "ind": 1, "tointer": "select the rows whose artist record fuzzily matches to balsam boys .", "tostr": "filter_eq { all_rows ; artist ; balsam boys }"}, "points"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; artist ; balsam boys } ; points }", "tointer": "select the rows whose artist record fuzzily matches to balsam boys . take the points record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; artist ; guide } ; points } ; hop { filter_eq { all_rows ; artist ; balsam boys } ; points } } = true", "tointer": "select the rows whose artist record fuzzily matches to guide . take the points record of this row . select the rows whose artist record fuzzily matches to balsam boys . take the points record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; artist ; guide } ; points } ; hop { filter_eq { all_rows ; artist ; balsam boys } ; points } } = true", "interpret": "select the rows whose artist record fuzzily matches to guide . take the points record of this row . select the rows whose artist record fuzzily matches to balsam boys . take the points record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "artist_7": 7, "guide_8": 8, "points_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "artist_11": 11, "balsam boys_12": 12, "points_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "artist_7": "artist", "guide_8": "guide", "points_9": "points", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "artist_11": "artist", "balsam boys_12": "balsam boys", "points_13": "points"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "artist_7": [0], "guide_8": [0], "points_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "artist_11": [1], "balsam boys_12": [1], "points_13": [3]}, "table_header": ["draw", "artist", "song", "points", "place"], "table_cont": [["1", "guide", "vi lever h\u00e4r , vi lever nu", "97", "5th"], ["2", "balsam boys", "bara du och jag", "54", "7th"], ["3", "barbados", "se mig", "146", "2nd"], ["4", "avengers", "n\u00e4r filmen \u00e4r slut", "0", "10th"], ["5", "tom nordahl", "alla \u00e4nglar sjunger", "32", "9th"], ["6", "roger pontare", "n\u00e4r vindarna viskar mitt namn", "227", "1st"], ["7", "javiera mu\u00f1oz", "varje timma , var minut", "139", "4th"], ["8", "midnight band", "tillsammans", "58", "6th"], ["9", "hanna hedlund", "anropar f\u00f6rsvunnen", "47", "8th"], ["10", "friends", "n\u00e4r jag t\u00e4nker p\u00e5 imorgon", "146", "2nd"]], "query": "greater { hop { filter_eq { all_rows ; artist ; guide } ; points } ; hop { filter_eq { all_rows ; artist ; balsam boys } ; points } } = true", "question": "guide had more points in the eurovision song contest 2000 than balsam boys ."}, {"topic": "list of k league 40 - 40 club members", "wiki": "https://en.wikipedia.org/wiki/List_of_K_League_40-40_club_members", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14904515-1.html.csv", "action": "count", "sent": "there are 13 members who received 40 assists in k league 40 - 40 club members .", "annotation": {"scope": "all", "criterion": "equal", "value": "40", "result": "13", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "assists", "40"], "result": null, "ind": 0, "tointer": "select the rows whose assists record is equal to 40 .", "tostr": "filter_eq { all_rows ; assists ; 40 }"}], "result": "13", "ind": 1, "tostr": "count { filter_eq { all_rows ; assists ; 40 } }", "tointer": "select the rows whose assists record is equal to 40 . the number of such rows is 13 ."}, "13"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; assists ; 40 } } ; 13 } = true", "tointer": "select the rows whose assists record is equal to 40 . the number of such rows is 13 ."}, "logic_str": "eq { count { filter_eq { all_rows ; assists ; 40 } } ; 13 } = true", "interpret": "select the rows whose assists record is equal to 40 . the number of such rows is 13 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "assists_5": 5, "40_6": 6, "13_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "assists_5": "assists", "40_6": "40", "13_7": "13"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "assists_5": [0], "40_6": [0], "13_7": [2]}, "table_header": ["name", "date", "goals", "assists", "team", "venue", "opponent", "competition", "total goals", "total assists"], "table_cont": [["ko jeong - woon", "1998 - 09 - 05", "42", "40", "pohang steelers", "pohang", "chunnam dragons", "k - league", "55", "48"], ["kim hyun - seok", "1998 - 10 - 10", "89", "40", "ulsan hyundai horang - i", "pohang", "pohang steelers", "k - league", "110", "54"], ["shin tae - yong", "2000 - 09 - 03", "72", "40", "seongnam ilhwa chunma", "mokdong", "bucheon sk", "k - league", "99", "68"], ["lee sang - yoon", "2001 - 04 - 29", "70", "40", "bucheon sk", "bucheon", "daejeon citizen", "k - league cup", "71", "43"], ["roh sang - rae", "2003 - 04 - 27", "72", "40", "daegu fc", "daegu", "busan i ' cons", "k - league", "76", "40"], ["denis laktionov", "2003 - 08 - 27", "45", "40", "seongnam ilhwa chunma", "busan", "busan i ' cons", "k - league", "57", "59"], ["kim do - hoon", "2005 - 08 - 31", "113", "40", "seongnam ilhwa chunma", "seongnam", "incheon united", "k - league", "114", "41"], ["woo sung - yong", "2007 - 10 - 22", "109", "40", "ulsan hyundai horang - i", "ulsan", "daejeon citizen", "k - league", "116", "43"], ["kim dae - eui", "2010 - 05 - 29", "51", "40", "suwon samsung bluewings", "suwon", "gangwon fc", "k - league cup", "51", "41"], ["kim eun - jung", "2010 - 08 - 28", "91", "40", "jeju united", "daejeon", "daejeon citizen", "k - league", "119", "54"], ["eninho", "2010 - 11 - 20", "51", "40", "jeonbuk hyundai motors", "jeonju", "gyeongnam fc", "championship", "80", "60"], ["lee dong - gook", "2011 - 07 - 03", "109", "40", "jeonbuk hyundai motors", "jeonju", "fc seoul", "k - league", "141", "53"], ["mauricio molina", "2012 - 11 - 15", "49", "40", "fc seoul", "seoul", "ulsan hyundai", "k - league", "50", "42"], ["hwang jin - sung", "2012 - 11 - 29", "40", "51", "pohang steelers", "pohang", "fc seoul", "k - league", "41", "51"]], "query": "eq { count { filter_eq { all_rows ; assists ; 40 } } ; 13 } = true", "question": "there are 13 members who received 40 assists in k league 40 - 40 club members ."}, {"topic": "list of corporations by market capitalization", "wiki": "https://en.wikipedia.org/wiki/List_of_corporations_by_market_capitalization", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14094649-6.html.csv", "action": "majority", "sent": "the majority of companies in the second quarter had a market capitalization under 250000 .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "less_than", "value": "250000", "subset": null}, "logic": {"func": "most_less", "args": ["all_rows", "second quarter", "250000"], "result": true, "ind": 0, "tointer": "for the second quarter records of all rows , most of them are less than 250000 .", "tostr": "most_less { all_rows ; second quarter ; 250000 } = true"}, "logic_str": "most_less { all_rows ; second quarter ; 250000 } = true", "interpret": "for the second quarter records of all rows , most of them are less than 250000 .", "num_func": 1, "nid": 1, "g_ids": {"most_less_0": 0, "result_1": 1, "all_rows_2": 2, "second quarter_3": 3, "250000_4": 4}, "g_ids_features": {"most_less_0": "most_less", "result_1": "true", "all_rows_2": "all_rows", "second quarter_3": "second quarter", "250000_4": "250000"}, "g_adj": {"most_less_0": [1], "result_1": [], "all_rows_2": [0], "second quarter_3": [0], "250000_4": [0]}, "table_header": ["rank", "first quarter", "second quarter", "third quarter", "fourth quarter"], "table_cont": [["1", "exxon mobil 452505", "exxon mobil 465652", "exxon mobil 403366", "exxon mobil 406067"], ["2", "petrochina 423996", "petrochina 341140.3", "petrochina 325097.5", "petrochina 259836"], ["3", "general electric 369569", "industrial and commercial bank of china 257004.4", "industrial and commercial bank of china 237951.5", "wal - mart 219898"], ["4", "gazprom 299764", "microsoft 211546.2", "microsoft 229630.7", "china mobile 201291"], ["5", "china mobile 298093", "china mobile 200832.4", "hsbc 198561.1", "procter & gamble 184576"], ["6", "industrial and commercial bank of china 277236", "wal - mart 188752.0", "china mobile 195680.4", "industrial and commercial bank of china 173930"], ["7", "microsoft 264132", "china construction bank 182186.7", "wal - mart 189331.6", "microsoft 172929"], ["8", "at & t 231168", "petrobras 165056.9", "petrobras 189027.7", "at & t 167950"], ["9", "royal dutch shell 220110", "johnson & johnson 156515.9", "china construction bank 186816.7", "johnson & johnson 166002"], ["10", "procter & gamble 215640", "royal dutch shell 156386.7", "royal dutch shell 175986.1", "general electric 161278"]], "query": "most_less { all_rows ; second quarter ; 250000 } = true", "question": "the majority of companies in the second quarter had a market capitalization under 250000 ."}, {"topic": "kjrt", "wiki": "https://en.wikipedia.org/wiki/KJRT", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14035388-2.html.csv", "action": "majority", "sent": "for station kjrt , most of the cities where they are licensed are in the state of texas .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "fuzzily_match", "value": "texas", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "city of license", "texas"], "result": true, "ind": 0, "tointer": "for the city of license records of all rows , most of them fuzzily match to texas .", "tostr": "most_eq { all_rows ; city of license ; texas } = true"}, "logic_str": "most_eq { all_rows ; city of license ; texas } = true", "interpret": "for the city of license records of all rows , most of them fuzzily match to texas .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "city of license_3": 3, "texas_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "city of license_3": "city of license", "texas_4": "texas"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "city of license_3": [0], "texas_4": [0]}, "table_header": ["call sign", "frequency mhz", "city of license", "erp w", "class", "fcc info"], "table_cont": [["k201bm", "88.1", "canadian , texas", "74", "d", "fcc"], ["k202ck", "88.3", "childress , texas", "200", "d", "fcc"], ["k216 gg", "91.1", "plainview , texas", "40", "a", "fcc"], ["k220cp", "91.9", "pampa , texas", "67", "d", "fcc"], ["k220iz", "91.9", "perryton , texas", "250", "d", "fcc"], ["k220jz", "91.9", "memphis , texas", "25", "d", "fcc"], ["k219lo", "91.7", "hereford , texas", "10", "d", "fcc"], ["k229by", "93.7", "tulia , texas", "100", "d", "fcc"], ["k291aq", "106.1", "dumas , texas", "92", "d", "fcc"], ["k202ag", "88.3", "elk city , oklahoma", "38", "d", "fcc"]], "query": "most_eq { all_rows ; city of license ; texas } = true", "question": "for station kjrt , most of the cities where they are licensed are in the state of texas ."}, {"topic": "channel one ( uk and ireland )", "wiki": "https://en.wikipedia.org/wiki/Channel_One_%28UK_and_Ireland%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11711773-1.html.csv", "action": "majority", "sent": "most of the top 10 ranked channel one shows are terminator : the sarah connor chronicles .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "terminator : the sarah connor chronicles", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "show", "terminator : the sarah connor chronicles"], "result": true, "ind": 0, "tointer": "for the show records of all rows , most of them fuzzily match to terminator : the sarah connor chronicles .", "tostr": "most_eq { all_rows ; show ; terminator : the sarah connor chronicles } = true"}, "logic_str": "most_eq { all_rows ; show ; terminator : the sarah connor chronicles } = true", "interpret": "for the show records of all rows , most of them fuzzily match to terminator : the sarah connor chronicles .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "show_3": 3, "terminator : the sarah connor chronicles_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "show_3": "show", "terminator : the sarah connor chronicles_4": "terminator : the sarah connor chronicles"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "show_3": [0], "terminator : the sarah connor chronicles_4": [0]}, "table_header": ["rank", "show", "episode", "number of viewers", "date"], "table_cont": [["1", "terminator : the sarah connor chronicles", "1.01 - pilot", "764000", "21 february 2008"], ["2", "warehouse 13", "1.01 - pilot", "570000", "8 april 2010"], ["3", "warehouse 13", "1.02 - resonance", "555000", "15 april 2010"], ["4", "v", "1.01 - pilot", "541000", "11 october 2010"], ["5", "v", "1.02 - there is no normal anymore", "495000", "18 october 2010"], ["6", "warehouse 13", "1.04 - claudia", "479000", "29 april 2010"], ["7", "terminator : the sarah connor chronicles", "1.03 - the turk", "463000", "6 march 2008"], ["8", "terminator : the sarah connor chronicles", "1.05 - queen 's gambit", "450000", "20 march 2008"], ["9", "terminator : the sarah connor chronicles", "1.02 - gnothi seauton", "446000", "28 february 2008"], ["10", "terminator : the sarah connor chronicles", "1.04 - heavy metal", "445000", "13 march 2008"]], "query": "most_eq { all_rows ; show ; terminator : the sarah connor chronicles } = true", "question": "most of the top 10 ranked channel one shows are terminator : the sarah connor chronicles ."}, {"topic": "2003 - 04 detroit red wings season", "wiki": "https://en.wikipedia.org/wiki/2003%E2%80%9304_Detroit_Red_Wings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13135264-4.html.csv", "action": "aggregation", "sent": "the average attendance for games in the 2003 - 04 detroit red wings season was 19119 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "19119", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "attendance"], "result": "19119", "ind": 0, "tostr": "avg { all_rows ; attendance }"}, "19119"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; attendance } ; 19119 } = true", "tointer": "the average of the attendance record of all rows is 19119 ."}, "logic_str": "round_eq { avg { all_rows ; attendance } ; 19119 } = true", "interpret": "the average of the attendance record of all rows is 19119 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "attendance_4": 4, "19119_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "attendance_4": "attendance", "19119_5": "19119"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "attendance_4": [0], "19119_5": [1]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["november 1", "detroit", "4 - 4", "edmonton", "legace", "16839", "5 - 5 - 1 - 0"], ["november 3", "detroit", "1 - 5", "vancouver", "legace", "18630", "5 - 6 - 1 - 0"], ["november 4", "detroit", "3 - 0", "calgary", "joseph", "15259", "6 - 6 - 1 - 0"], ["november 8", "nashville", "4 - 3", "detroit", "joseph", "20066", "6 - 7 - 1 - 0"], ["november 10", "chicago", "0 - 3", "detroit", "hasek", "20066", "7 - 7 - 1 - 0"], ["november 12", "detroit", "6 - 2", "dallas", "hasek", "18532", "8 - 7 - 1 - 0"], ["november 14", "detroit", "4 - 3", "chicago", "hasek", "21856", "9 - 7 - 1 - 0"], ["november 15", "detroit", "1 - 1", "minnesota", "hasek", "18568", "9 - 7 - 2 - 0"], ["november 19", "columbus", "1 - 5", "detroit", "legace", "20066", "10 - 7 - 2 - 0"], ["november 20", "detroit", "0 - 3", "columbus", "legace", "18136", "10 - 8 - 2 - 0"], ["november 22", "detroit", "5 - 2", "minnesota", "joseph", "18568", "11 - 8 - 2 - 0"], ["november 24", "washington", "4 - 1", "detroit", "joseph", "20066", "11 - 9 - 2 - 0"], ["november 26", "edmonton", "1 - 7", "detroit", "legace", "20066", "12 - 9 - 2 - 0"], ["november 28", "ny islanders", "0 - 6", "detroit", "legace", "20066", "13 - 9 - 2 - 0"], ["november 29", "detroit", "2 - 1", "st louis", "legace", "20006", "14 - 9 - 2 - 0"]], "query": "round_eq { avg { all_rows ; attendance } ; 19119 } = true", "question": "the average attendance for games in the 2003 - 04 detroit red wings season was 19119 ."}, {"topic": "list of intel core i7 microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_Intel_Core_i7_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18823880-12.html.csv", "action": "count", "sent": "there is a total of 10 models that have 2 cores .", "annotation": {"scope": "all", "criterion": "equal", "value": "2", "result": "10", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "cores", "2"], "result": null, "ind": 0, "tointer": "select the rows whose cores record is equal to 2 .", "tostr": "filter_eq { all_rows ; cores ; 2 }"}], "result": "10", "ind": 1, "tostr": "count { filter_eq { all_rows ; cores ; 2 } }", "tointer": "select the rows whose cores record is equal to 2 . the number of such rows is 10 ."}, "10"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; cores ; 2 } } ; 10 } = true", "tointer": "select the rows whose cores record is equal to 2 . the number of such rows is 10 ."}, "logic_str": "eq { count { filter_eq { all_rows ; cores ; 2 } } ; 10 } = true", "interpret": "select the rows whose cores record is equal to 2 . the number of such rows is 10 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "cores_5": 5, "2_6": 6, "10_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "cores_5": "cores", "2_6": "2", "10_7": "10"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "cores_5": [0], "2_6": [0], "10_7": [2]}, "table_header": ["model number", "sspec number", "cores", "frequency", "turbo", "l2 cache", "l3 cache", "gpu model", "gpu frequency", "socket", "i / o bus", "release date", "part number ( s )", "release price ( usd )"], "table_cont": [["standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power"], ["core i7 - 2620 m", "sr03f ( j1 ) sr041 ( j1 )", "2", "2.7 ghz", "5 / 7", "2 256 kb", "4 mb", "hd graphics 3000", "650 - 1300 mhz", "socketg2 bga - 1023", "dmi 2.0", "february 2011", "ff8062700838809av8062700839009", "346"], ["core i7 - 2640 m", "sr03r ( j1 ) sr043 ( j1 )", "2", "2.8 ghz", "5 / 7", "2 256 kb", "4 mb", "hd graphics 3000", "650 - 1300 mhz", "socket g2bga - 1023", "dmi 2.0", "september 2011", "ff8062700838905av8062700839107", "346"], ["low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power"], ["core i7 - 2629 m", "sr04d ( j1 )", "2", "2.1 ghz", "6 / 9", "2 256 kb", "4 mb", "hd graphics 3000", "500 - 1100 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062700851111", "317"], ["core i7 - 2649 m", "sr04n ( j1 )", "2", "2.3 ghz", "6 / 9", "2 256 kb", "4 mb", "hd graphics 3000", "500 - 1100 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062700850010", "346"], ["low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded"], ["core i7 - 2655le", "sr078 ( d2 )", "2", "2.2 ghz", "5 / 7", "2 256 kb", "4 mb", "hd graphics 3000", "650 - 1000 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062700849508", "346"], ["ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power"], ["core i7 - 2617 m", "sr03t ( j1 )", "2", "1.5 ghz", "8 / 11", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 950 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062701040904", "289"], ["core i7 - 2637 m", "sr0d3 ( j1 )", "2", "1.7 ghz", "8 / 11", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 1200 mhz", "bga - 1023", "dmi 2.0", "june 2011", "av8062701041105", "289"], ["core i7 - 2657 m", "sr03s ( j1 )", "2", "1.6 ghz", "8 / 11", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 1000 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062701040804", "317"], ["core i7 - 2677 m", "sr0d2 ( j1 )", "2", "1.8 ghz", "8 / 11", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 1200 mhz", "bga - 1023", "dmi 2.0", "june 2011", "av8062701041005", "317"], ["ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded"], ["core i7 - 2610ue", "sr079 ( d2 )", "2", "1.5 ghz", "6 / 9", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 850 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062700849607", "317"]], "query": "eq { count { filter_eq { all_rows ; cores ; 2 } } ; 10 } = true", "question": "there is a total of 10 models that have 2 cores ."}, {"topic": "uk singles chart records and statistics", "wiki": "https://en.wikipedia.org/wiki/UK_Singles_Chart_records_and_statistics", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1477679-2.html.csv", "action": "comparative", "sent": "the song \" bohemian rhapsody \" was at the top of the uk charts longer than \" i will always love you . \" .", "annotation": {"row_1": "4", "row_2": "7", "col": "5", "col_other": "3", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "single", "bohemian rhapsody"], "result": null, "ind": 0, "tointer": "select the rows whose single record fuzzily matches to bohemian rhapsody .", "tostr": "filter_eq { all_rows ; single ; bohemian rhapsody }"}, "weeks"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; single ; bohemian rhapsody } ; weeks }", "tointer": "select the rows whose single record fuzzily matches to bohemian rhapsody . take the weeks record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "single", "i will always love you"], "result": null, "ind": 1, "tointer": "select the rows whose single record fuzzily matches to i will always love you .", "tostr": "filter_eq { all_rows ; single ; i will always love you }"}, "weeks"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; single ; i will always love you } ; weeks }", "tointer": "select the rows whose single record fuzzily matches to i will always love you . take the weeks record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; single ; bohemian rhapsody } ; weeks } ; hop { filter_eq { all_rows ; single ; i will always love you } ; weeks } } = true", "tointer": "select the rows whose single record fuzzily matches to bohemian rhapsody . take the weeks record of this row . select the rows whose single record fuzzily matches to i will always love you . take the weeks record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; single ; bohemian rhapsody } ; weeks } ; hop { filter_eq { all_rows ; single ; i will always love you } ; weeks } } = true", "interpret": "select the rows whose single record fuzzily matches to bohemian rhapsody . take the weeks record of this row . select the rows whose single record fuzzily matches to i will always love you . take the weeks record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "single_7": 7, "bohemian rhapsody_8": 8, "weeks_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "single_11": 11, "i will always love you_12": 12, "weeks_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "single_7": "single", "bohemian rhapsody_8": "bohemian rhapsody", "weeks_9": "weeks", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "single_11": "single", "i will always love you_12": "i will always love you", "weeks_13": "weeks"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "single_7": [0], "bohemian rhapsody_8": [0], "weeks_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "single_11": [1], "i will always love you_12": [1], "weeks_13": [3]}, "table_header": ["position", "artist", "single", "year", "weeks"], "table_cont": [["1st", "frankie laine", "i believe", "1953", "18 weeks"], ["2nd", "bryan adams", "( everything i do ) i do it for you", "1991", "16 weeks"], ["3rd", "wet wet wet", "love is all around", "1994", "15 weeks"], ["4th", "queen", "bohemian rhapsody", "1975 / 76 & 1991 / 92", "14 weeks"], ["5th", "slim whitman", "rose marie", "1955", "11 weeks"], ["6th", "david whitfield", "cara mia", "1954", "10 weeks"], ["6th", "whitney houston", "i will always love you", "1992", "10 weeks"], ["6th", "rihanna ( feat jay - z )", "umbrella", "2007", "10 weeks"]], "query": "greater { hop { filter_eq { all_rows ; single ; bohemian rhapsody } ; weeks } ; hop { filter_eq { all_rows ; single ; i will always love you } ; weeks } } = true", "question": "the song \" bohemian rhapsody \" was at the top of the uk charts longer than \" i will always love you . \" ."}, {"topic": "the universal masters collection ( grace jones album )", "wiki": "https://en.wikipedia.org/wiki/The_Universal_Masters_Collection_%28Grace_Jones_album%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11947078-2.html.csv", "action": "count", "sent": "the universal masters collection of grace jones had been re-released five different times over the years .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "5", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "region"], "result": null, "ind": 0, "tointer": "select the rows whose region record is arbitrary .", "tostr": "filter_all { all_rows ; region }"}], "result": "5", "ind": 1, "tostr": "count { filter_all { all_rows ; region } }", "tointer": "select the rows whose region record is arbitrary . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; region } } ; 5 } = true", "tointer": "select the rows whose region record is arbitrary . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_all { all_rows ; region } } ; 5 } = true", "interpret": "select the rows whose region record is arbitrary . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "region_5": 5, "5_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "region_5": "region", "5_6": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "region_5": [0], "5_6": [2]}, "table_header": ["region", "year", "name", "format ( s )", "label"], "table_cont": [["worldwide", "2003", "the universal masters collection", "cd", "universal"], ["japan", "2005", "best 1200", "cd", "universal"], ["worldwide", "2006", "colour collection", "cd", "universal"], ["germany", "2008", "star - club pr\u00e3 \u00a4 sentiert grace jones", "cd", "universal"], ["worldwide", "2008", "classic grace jones", "cd , download", "universal , spectrum"]], "query": "eq { count { filter_all { all_rows ; region } } ; 5 } = true", "question": "the universal masters collection of grace jones had been re-released five different times over the years ."}, {"topic": "east coast conference", "wiki": "https://en.wikipedia.org/wiki/East_Coast_Conference", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1969577-1.html.csv", "action": "superlative", "sent": "the highest enrollment in the east college conference was at queens college .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "8", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "enrollment"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; enrollment }"}, "institution"], "result": "queens college", "ind": 1, "tostr": "hop { argmax { all_rows ; enrollment } ; institution }"}, "queens college"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; queens college } = true", "tointer": "select the row whose enrollment record of all rows is maximum . the institution record of this row is queens college ."}, "logic_str": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; queens college } = true", "interpret": "select the row whose enrollment record of all rows is maximum . the institution record of this row is queens college .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "enrollment_5": 5, "institution_6": 6, "queens college_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "enrollment_5": "enrollment", "institution_6": "institution", "queens college_7": "queens college"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "enrollment_5": [0], "institution_6": [1], "queens college_7": [2]}, "table_header": ["institution", "nickname", "location", "founded", "type", "enrollment", "joined"], "table_cont": [["university of bridgeport", "purple knights", "bridgeport , connecticut", "1927", "private", "4018", "2000"], ["daemen college", "wildcats", "amherst , new york", "1947", "private ( nonsectarian )", "2100", "2013"], ["university of the district of columbia", "firebirds", "washington , dc", "1851", "public", "5471", "2011"], ["dowling college", "golden lions", "oakdale , new york", "1963", "private", "7000", "1989"], ["mercy college", "mavericks", "dobbs ferry , new york", "1950", "private", "10000", "1989"], ["molloy college", "lions", "rockville centre , new york", "1955", "private", "3533", "1989"], ["new york institute of technology", "bears", "old westbury , new york", "1955", "private", "12755", "1989"], ["queens college", "knights", "flushing , new york", "1937", "public", "17639", "1989"], ["roberts wesleyan college", "redhawks", "chili , new york", "1866", "private ( free methodist )", "2000", "2012"]], "query": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; queens college } = true", "question": "the highest enrollment in the east college conference was at queens college ."}, {"topic": "am5x86", "wiki": "https://en.wikipedia.org/wiki/Am5x86", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-167482-1.html.csv", "action": "aggregation", "sent": "the average mult of all models is 3.90 with the 90 repeating .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "3.90 90 repeating", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "mult"], "result": "3.90 90 repeating", "ind": 0, "tostr": "avg { all_rows ; mult }"}, "3.90 90 repeating"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; mult } ; 3.90 90 repeating } = true", "tointer": "the average of the mult record of all rows is 3.90 90 repeating ."}, "logic_str": "round_eq { avg { all_rows ; mult } ; 3.90 90 repeating } = true", "interpret": "the average of the mult record of all rows is 3.90 90 repeating .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "mult_4": 4, "3.90 90 Repeating_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "mult_4": "mult", "3.90 90 Repeating_5": "3.90 90 repeating"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "mult_4": [0], "3.90 90 Repeating_5": [1]}, "table_header": ["model number", "frequency", "l1 cache", "mult", "voltage"], "table_cont": [["x5 - 133 adh", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 ady", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 adw", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 adz", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 bgc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 v16bgc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 w16bgc", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 133 v16bhc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 w16bhc", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 133 sfz", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 150 adw", "150 mhz", "16 kib", "3", "3.45 v"]], "query": "round_eq { avg { all_rows ; mult } ; 3.90 90 repeating } = true", "question": "the average mult of all models is 3.90 with the 90 repeating ."}, {"topic": "isabelle huppert", "wiki": "https://en.wikipedia.org/wiki/Isabelle_Huppert", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-145320-1.html.csv", "action": "comparative", "sent": "isabelle huppert was nominated for her role in 8 women the year after her nomination for the piano teacher .", "annotation": {"row_1": "12", "row_2": "11", "col": "1", "col_other": "4", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "film", "8 women ( 8 femmes )"], "result": null, "ind": 0, "tointer": "select the rows whose film record fuzzily matches to 8 women ( 8 femmes ) .", "tostr": "filter_eq { all_rows ; film ; 8 women ( 8 femmes ) }"}, "year"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; film ; 8 women ( 8 femmes ) } ; year }", "tointer": "select the rows whose film record fuzzily matches to 8 women ( 8 femmes ) . take the year record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "film", "the piano teacher ( la pianiste )"], "result": null, "ind": 1, "tointer": "select the rows whose film record fuzzily matches to the piano teacher ( la pianiste ) .", "tostr": "filter_eq { all_rows ; film ; the piano teacher ( la pianiste ) }"}, "year"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; film ; the piano teacher ( la pianiste ) } ; year }", "tointer": "select the rows whose film record fuzzily matches to the piano teacher ( la pianiste ) . take the year record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; film ; 8 women ( 8 femmes ) } ; year } ; hop { filter_eq { all_rows ; film ; the piano teacher ( la pianiste ) } ; year } } = true", "tointer": "select the rows whose film record fuzzily matches to 8 women ( 8 femmes ) . take the year record of this row . select the rows whose film record fuzzily matches to the piano teacher ( la pianiste ) . take the year record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; film ; 8 women ( 8 femmes ) } ; year } ; hop { filter_eq { all_rows ; film ; the piano teacher ( la pianiste ) } ; year } } = true", "interpret": "select the rows whose film record fuzzily matches to 8 women ( 8 femmes ) . take the year record of this row . select the rows whose film record fuzzily matches to the piano teacher ( la pianiste ) . take the year record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "film_7": 7, "8 women (8 femmes)_8": 8, "year_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "film_11": 11, "the piano teacher (la pianiste)_12": 12, "year_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "film_7": "film", "8 women (8 femmes)_8": "8 women ( 8 femmes )", "year_9": "year", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "film_11": "film", "the piano teacher (la pianiste)_12": "the piano teacher ( la pianiste )", "year_13": "year"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "film_7": [0], "8 women (8 femmes)_8": [0], "year_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "film_11": [1], "the piano teacher (la pianiste)_12": [1], "year_13": [3]}, "table_header": ["year", "group", "award", "film", "result"], "table_cont": [["1976", "s c\u00e9sar award", "best supporting actress", "alo\u00efse", "nominated"], ["1978", "c\u00e9sar awards", "best actress", "the lacemaker ( la dentelli\u00e8re )", "nominated"], ["1979", "c\u00e9sar awards", "best actress", "violette nozi\u00e8re", "nominated"], ["1981", "c\u00e9sar awards", "best actress", "loulou", "nominated"], ["1982", "c\u00e9sar awards", "best actress", "coup de torchon", "nominated"], ["1989", "c\u00e9sar awards", "best actress", "story of women ( une affaire de femmes )", "nominated"], ["1995", "c\u00e9sar awards", "best actress", "la s\u00e9paration", "nominated"], ["1996", "c\u00e9sar awards", "best actress", "la c\u00e9r\u00e9monie", "won"], ["1999", "c\u00e9sar awards", "best actress", "l'\u00e9cole de la chair", "nominated"], ["2001", "c\u00e9sar awards", "best actress", "saint - cyr", "nominated"], ["2002", "c\u00e9sar awards", "best actress", "the piano teacher ( la pianiste )", "nominated"], ["2003", "c\u00e9sar awards", "best actress", "8 women ( 8 femmes )", "nominated"], ["2006", "c\u00e9sar awards", "best actress", "gabrielle", "nominated"], ["2013", "c\u00e9sar awards", "best supporting actress", "amour", "nominated"]], "query": "greater { hop { filter_eq { all_rows ; film ; 8 women ( 8 femmes ) } ; year } ; hop { filter_eq { all_rows ; film ; the piano teacher ( la pianiste ) } ; year } } = true", "question": "isabelle huppert was nominated for her role in 8 women the year after her nomination for the piano teacher ."}, {"topic": "washington redskins draft history", "wiki": "https://en.wikipedia.org/wiki/Washington_Redskins_draft_history", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17100961-44.html.csv", "action": "comparative", "sent": "darwin robinson was drafted by the washington redskins earlier than joe miller .", "annotation": {"row_1": "3", "row_2": "8", "col": "1", "col_other": "4", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "darwin robinson"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to darwin robinson .", "tostr": "filter_eq { all_rows ; name ; darwin robinson }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; darwin robinson } ; round }", "tointer": "select the rows whose name record fuzzily matches to darwin robinson . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "joe miller"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to joe miller .", "tostr": "filter_eq { all_rows ; name ; joe miller }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; joe miller } ; round }", "tointer": "select the rows whose name record fuzzily matches to joe miller . take the round record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; name ; darwin robinson } ; round } ; hop { filter_eq { all_rows ; name ; joe miller } ; round } } = true", "tointer": "select the rows whose name record fuzzily matches to darwin robinson . take the round record of this row . select the rows whose name record fuzzily matches to joe miller . take the round record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; name ; darwin robinson } ; round } ; hop { filter_eq { all_rows ; name ; joe miller } ; round } } = true", "interpret": "select the rows whose name record fuzzily matches to darwin robinson . take the round record of this row . select the rows whose name record fuzzily matches to joe miller . take the round record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name_7": 7, "darwin robinson_8": 8, "round_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name_11": 11, "joe miller_12": 12, "round_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name_7": "name", "darwin robinson_8": "darwin robinson", "round_9": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "joe miller_12": "joe miller", "round_13": "round"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name_7": [0], "darwin robinson_8": [0], "round_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name_11": [1], "joe miller_12": [1], "round_13": [3]}, "table_header": ["round", "pick", "overall", "name", "position", "college"], "table_cont": [["6", "14", "144", "jon keyworth", "rb", "colorado"], ["7", "24", "180", "mike varty", "lb", "northwestern"], ["8", "14", "196", "darwin robinson", "rb", "dakota state"], ["9", "10", "218", "mark sens", "de", "colorado"], ["9", "20", "228", "mike flater", "k", "colo school of mines"], ["9", "25", "233", "jim kennedy", "te", "colorado state"], ["10", "24", "258", "johnny vann", "db", "south dakota"], ["11", "22", "282", "joe miller", "ot", "villanova"], ["13", "20", "332", "stu o'dell", "lb", "indiana"], ["14", "23", "361", "don van galder", "qb", "utah"], ["16", "21", "411", "nate anderson", "rb", "eastern illinois"]], "query": "less { hop { filter_eq { all_rows ; name ; darwin robinson } ; round } ; hop { filter_eq { all_rows ; name ; joe miller } ; round } } = true", "question": "darwin robinson was drafted by the washington redskins earlier than joe miller ."}, {"topic": "2008 fresno state bulldogs baseball team", "wiki": "https://en.wikipedia.org/wiki/2008_Fresno_State_Bulldogs_baseball_team", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18025024-7.html.csv", "action": "superlative", "sent": "the june 24 game against georgia had the highest amount of combined points by both teams in a game .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "score"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; score }"}, "date"], "result": "june 24", "ind": 1, "tostr": "hop { argmax { all_rows ; score } ; date }"}, "june 24"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; score } ; date } ; june 24 } = true", "tointer": "select the row whose score record of all rows is maximum . the date record of this row is june 24 ."}, "logic_str": "eq { hop { argmax { all_rows ; score } ; date } ; june 24 } = true", "interpret": "select the row whose score record of all rows is maximum . the date record of this row is june 24 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "score_5": 5, "date_6": 6, "june 24_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "score_5": "score", "date_6": "date", "june 24_7": "june 24"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "score_5": [0], "date_6": [1], "june 24_7": [2]}, "table_header": ["date", "opponent", "score", "site / stadium", "loss", "save", "attendance", "overall record", "ncaat record"], "table_cont": [["june 15", "rice", "17 - 5", "rosenblatt stadium", "berry ( 8 - 5 )", "none", "18108", "43 - 29", "6 - 2"], ["june 17", "north carolina", "5 - 3", "rosenblatt stadium", "warren ( 9 - 2 )", "burke ( 13 )", "23314", "44 - 29", "7 - 2"], ["june 21", "north carolina", "4 - 3", "rosenblatt stadium", "miller ( 6 - 4 )", "none", "18611", "44 - 30", "7 - 3"], ["june 22", "north carolina", "6 - 1", "rosenblatt stadium", "moran ( 1 - 2 )", "none", "15125", "45 - 30", "8 - 3"], ["june 23", "georgia", "7 - 6", "rosenblatt stadium", "burke ( 4 - 6 )", "fields ( 18 )", "19559", "45 - 31", "8 - 4"], ["june 24", "georgia", "19 - 10", "rosenblatt stadium", "dodson ( 5 - 5 )", "hower ( 1 )", "17223", "46 - 31", "9 - 4"], ["june 25", "georgia", "6 - 1", "rosenblatt stadium", "moreau ( 4 - 4 )", "none", "18932", "47 - 31", "10 - 4"]], "query": "eq { hop { argmax { all_rows ; score } ; date } ; june 24 } = true", "question": "the june 24 game against georgia had the highest amount of combined points by both teams in a game ."}, {"topic": "hughes hall college boat club", "wiki": "https://en.wikipedia.org/wiki/Hughes_Hall_College_Boat_Club", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18880596-3.html.csv", "action": "comparative", "sent": "in 2009 , the hughes hall college boat club finished four positions better than in 2008 .", "annotation": {"row_1": "2", "row_2": "1", "col": "2", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "4", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "2009"], "result": null, "ind": 0, "tointer": "select the rows whose year record fuzzily matches to 2009 .", "tostr": "filter_eq { all_rows ; year ; 2009 }"}, "finish position"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; year ; 2009 } ; finish position }", "tointer": "select the rows whose year record fuzzily matches to 2009 . take the finish position record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "2008"], "result": null, "ind": 1, "tointer": "select the rows whose year record fuzzily matches to 2008 .", "tostr": "filter_eq { all_rows ; year ; 2008 }"}, "finish position"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; year ; 2008 } ; finish position }", "tointer": "select the rows whose year record fuzzily matches to 2008 . take the finish position record of this row ."}], "result": "-4", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; year ; 2009 } ; finish position } ; hop { filter_eq { all_rows ; year ; 2008 } ; finish position } }"}, "-4"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; year ; 2009 } ; finish position } ; hop { filter_eq { all_rows ; year ; 2008 } ; finish position } } ; -4 } = true", "tointer": "select the rows whose year record fuzzily matches to 2009 . take the finish position record of this row . select the rows whose year record fuzzily matches to 2008 . take the finish position record of this row . the second record is 4 larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; year ; 2009 } ; finish position } ; hop { filter_eq { all_rows ; year ; 2008 } ; finish position } } ; -4 } = true", "interpret": "select the rows whose year record fuzzily matches to 2009 . take the finish position record of this row . select the rows whose year record fuzzily matches to 2008 . take the finish position record of this row . the second record is 4 larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "year_8": 8, "2009_9": 9, "finish position_10": 10, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "year_12": 12, "2008_13": 13, "finish position_14": 14, "-4_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "year_8": "year", "2009_9": "2009", "finish position_10": "finish position", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "year_12": "year", "2008_13": "2008", "finish position_14": "finish position", "-4_15": "-4"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "year_8": [0], "2009_9": [0], "finish position_10": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "year_12": [1], "2008_13": [1], "finish position_14": [3], "-4_15": [5]}, "table_header": ["year", "finish position", "1st day", "2nd day", "3rd day", "4th day"], "table_cont": [["2008", "50th", "bumped emmanuel", "rowed - over", "bumped by peterhouse", "rowed - over"], ["2009", "46th", "bumped trinity hall", "bumped jesus", "bumped robinson", "bumped girton"], ["2010", "43rd", "bumped peterhouse", "rowed - over", "bumped churchill", "bumped fitzwilliam"], ["2011", "39th", "bumped magdalene", "bumped 1st & 3rd trinity", "bumped lady margaret", "bumped selwyn"], ["2012", "36th", "bumped emmanuel", "bumped st catharine 's", "rowed - over", "bumped darwin"]], "query": "eq { diff { hop { filter_eq { all_rows ; year ; 2009 } ; finish position } ; hop { filter_eq { all_rows ; year ; 2008 } ; finish position } } ; -4 } = true", "question": "in 2009 , the hughes hall college boat club finished four positions better than in 2008 ."}, {"topic": "united states house of representatives elections , 1982", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1982", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341604-39.html.csv", "action": "count", "sent": "in the united states house of representatives election in 1982 , for the incumbents that were re-elected , two of them were from the republican party .", "annotation": {"scope": "subset", "criterion": "equal", "value": "republican", "result": "2", "col": "3", "subset": {"col": "5", "criterion": "equal", "value": "re - elected"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "re - elected"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; result ; re - elected }", "tointer": "select the rows whose result record fuzzily matches to re - elected ."}, "party", "republican"], "result": null, "ind": 1, "tointer": "select the rows whose result record fuzzily matches to re - elected . among these rows , select the rows whose party record fuzzily matches to republican .", "tostr": "filter_eq { filter_eq { all_rows ; result ; re - elected } ; party ; republican }"}], "result": "2", "ind": 2, "tostr": "count { filter_eq { filter_eq { all_rows ; result ; re - elected } ; party ; republican } }", "tointer": "select the rows whose result record fuzzily matches to re - elected . among these rows , select the rows whose party record fuzzily matches to republican . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_eq { all_rows ; result ; re - elected } ; party ; republican } } ; 2 } = true", "tointer": "select the rows whose result record fuzzily matches to re - elected . among these rows , select the rows whose party record fuzzily matches to republican . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { filter_eq { all_rows ; result ; re - elected } ; party ; republican } } ; 2 } = true", "interpret": "select the rows whose result record fuzzily matches to re - elected . among these rows , select the rows whose party record fuzzily matches to republican . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "result_6": 6, "re - elected_7": 7, "party_8": 8, "republican_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "result_6": "result", "re - elected_7": "re - elected", "party_8": "party", "republican_9": "republican", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_eq_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "result_6": [0], "re - elected_7": [0], "party_8": [1], "republican_9": [1], "2_10": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["pennsylvania 5", "richard t schulze", "republican", "1974", "re - elected", "richard t schulze ( r ) 67.2 % bob burger ( d ) 32.8 %"], ["pennsylvania 6", "gus yatron", "democratic", "1968", "re - elected", "gus yatron ( d ) 72.0 % harry b martin ( r ) 28.0 %"], ["pennsylvania 7", "robert w edgar", "democratic", "1974", "re - elected", "robert w edgar ( d ) 55.4 % steve joachim ( r ) 44.6 %"], ["pennsylvania 9", "bud shuster", "republican", "1972", "re - elected", "bud shuster ( r ) 65.1 % eugene j duncan ( d ) 34.9 %"], ["pennsylvania 17", "allen e ertel", "democratic", "1976", "retired to run for governor republican gain", "george gekas ( r ) 57.6 % larry hochendoner ( d ) 42.4 %"]], "query": "eq { count { filter_eq { filter_eq { all_rows ; result ; re - elected } ; party ; republican } } ; 2 } = true", "question": "in the united states house of representatives election in 1982 , for the incumbents that were re-elected , two of them were from the republican party ."}, {"topic": "1958 miles", "wiki": "https://en.wikipedia.org/wiki/1958_Miles", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16441868-2.html.csv", "action": "superlative", "sent": "the 2006 release of the album by sony japan is the newest release .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "11", "value_mentioned": "yes", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "max", "args": ["all_rows", "year"], "result": "2006", "ind": 0, "tostr": "max { all_rows ; year }", "tointer": "the maximum year record of all rows is 2006 ."}, "2006"], "result": true, "ind": 1, "tostr": "eq { max { all_rows ; year } ; 2006 }", "tointer": "the maximum year record of all rows is 2006 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "year"], "result": null, "ind": 2, "tostr": "argmax { all_rows ; year }"}, "label"], "result": "sony japan", "ind": 3, "tostr": "hop { argmax { all_rows ; year } ; label }"}, "sony japan"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; year } ; label } ; sony japan }", "tointer": "the label record of the row with superlative year record is sony japan ."}], "result": true, "ind": 5, "tostr": "and { eq { max { all_rows ; year } ; 2006 } ; eq { hop { argmax { all_rows ; year } ; label } ; sony japan } } = true", "tointer": "the maximum year record of all rows is 2006 . the label record of the row with superlative year record is sony japan ."}, "logic_str": "and { eq { max { all_rows ; year } ; 2006 } ; eq { hop { argmax { all_rows ; year } ; label } ; sony japan } } = true", "interpret": "the maximum year record of all rows is 2006 . the label record of the row with superlative year record is sony japan .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "max_0": 0, "all_rows_7": 7, "year_8": 8, "2006_9": 9, "str_eq_4": 4, "str_hop_3": 3, "argmax_2": 2, "all_rows_10": 10, "year_11": 11, "label_12": 12, "sony japan_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "max_0": "max", "all_rows_7": "all_rows", "year_8": "year", "2006_9": "2006", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "argmax_2": "argmax", "all_rows_10": "all_rows", "year_11": "year", "label_12": "label", "sony japan_13": "sony japan"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "max_0": [1], "all_rows_7": [0], "year_8": [0], "2006_9": [1], "str_eq_4": [5], "str_hop_3": [4], "argmax_2": [3], "all_rows_10": [2], "year_11": [2], "label_12": [3], "sony japan_13": [4]}, "table_header": ["issued title", "year", "label", "format", "catalog"], "table_cont": [["1958 miles", "1974", "cbs / sony", "stereo vinyl lp", "20ap 1401"], ["1958 miles", "1979", "cbs records", "remastered lp", "cbs 1401"], ["'58 sessions featuring stella by starlight", "1991", "columbia", "cd reissue", "ck - 47835"], ["'58 sessions featuring stella by starlight", "1991", "columbia", "cassette", "ct - 47835"], ["'58 miles", "1991", "cbs", "d re - release cd", "cbs 467918 - 2"], ["'58 miles", "1991", "cbs , sony records", "re - released cassette", "srcs - 9102"], ["'58 sessions featuring stella by starlight", "1994", "jazz records", "cd", "jr - 4679182"], ["1958 miles", "1997", "sony", "cd", "srcd - 65344"], ["1958 miles", "2001", "sony", "cd", "srcd - 98004"], ["1958 miles", "2006", "sony", "cd", "srcd - 1204"], ["1958 miles", "2006", "sony japan", "cd , bonus track", "srcs - 966"]], "query": "and { eq { max { all_rows ; year } ; 2006 } ; eq { hop { argmax { all_rows ; year } ; label } ; sony japan } } = true", "question": "the 2006 release of the album by sony japan is the newest release ."}, {"topic": "macedonia in the eurovision song contest 1998", "wiki": "https://en.wikipedia.org/wiki/Macedonia_in_the_Eurovision_Song_Contest_1998", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16791999-1.html.csv", "action": "superlative", "sent": "the performer vlado janevski received the highest amount of televotes in the 1998 macedonia eurovision song contest .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "18", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "televotes"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; televotes }"}, "performer"], "result": "vlado janevski", "ind": 1, "tostr": "hop { argmax { all_rows ; televotes } ; performer }"}, "vlado janevski"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; televotes } ; performer } ; vlado janevski } = true", "tointer": "select the row whose televotes record of all rows is maximum . the performer record of this row is vlado janevski ."}, "logic_str": "eq { hop { argmax { all_rows ; televotes } ; performer } ; vlado janevski } = true", "interpret": "select the row whose televotes record of all rows is maximum . the performer record of this row is vlado janevski .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "televotes_5": 5, "performer_6": 6, "vlado janevski_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "televotes_5": "televotes", "performer_6": "performer", "vlado janevski_7": "vlado janevski"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "televotes_5": [0], "performer_6": [1], "vlado janevski_7": [2]}, "table_header": ["draw", "song", "performer", "televotes", "rank"], "table_cont": [["1", "preku moreto", "tanja carovska", "1339", "12"], ["2", "ne zaboravaj", "kaliopi", "3834", "9"], ["3", "son", "monika sokolovska", "862", "15"], ["4", "ostani do kraj", "to\u0161e proeski & megatim plus", "4210", "8"], ["5", "daj mi pricina da se razbudam", "tanja , lidija & zorica pancic", "2459", "11"], ["6", "samovilska svadba", "sa\u0161o gigov - gi\u0161", "34774", "2"], ["7", "ne baraj me", "iskra trpeva & granit", "681", "20"], ["8", "ne veruvam", "risto samardziev", "8866", "5"], ["9", "daj mi \u0161ansa", "dule & koki", "23615", "3"], ["10", "koj si ti", "biljana dodeva", "828", "16"], ["11", "te sakam beskrajno", "pece ognenov and adrijana janevska", "1100", "13"], ["12", "bez tebe", "duo maratov", "764", "17"], ["13", "ljubovta nema granici", "intervali", "694", "19"], ["14", "kameleon", "maja grozdanovska & bumerang", "3319", "10"], ["15", "andrea", "marjan necak", "725", "18"], ["16", "opomena", "suzana spasovska", "5441", "6"], ["17", "broj do deset", "maja vukicevic", "908", "14"], ["18", "ne zori , zoro", "vlado janevski", "38642", "1"], ["19", "ukradeni nokji", "karolina go\u010deva", "10454", "4"], ["20", "pari pari", "mico atanasiu", "4453", "7"]], "query": "eq { hop { argmax { all_rows ; televotes } ; performer } ; vlado janevski } = true", "question": "the performer vlado janevski received the highest amount of televotes in the 1998 macedonia eurovision song contest ."}, {"topic": "alberta greens", "wiki": "https://en.wikipedia.org/wiki/Alberta_Greens", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14678185-1.html.csv", "action": "comparative", "sent": "in alberta greens , the number of candidates nominated in 2001 was 39 less than in 2004 .", "annotation": {"row_1": "3", "row_2": "4", "col": "2", "col_other": "1", "relation": "diff", "record_mentioned": "yes", "diff_result": {"diff_value": "39", "bigger": "row2"}}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "election", "2001"], "result": null, "ind": 0, "tointer": "select the rows whose election record fuzzily matches to 2001 .", "tostr": "filter_eq { all_rows ; election ; 2001 }"}, "of candidates nominated"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated }", "tointer": "select the rows whose election record fuzzily matches to 2001 . take the of candidates nominated record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "election", "2004"], "result": null, "ind": 1, "tointer": "select the rows whose election record fuzzily matches to 2004 .", "tostr": "filter_eq { all_rows ; election ; 2004 }"}, "of candidates nominated"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated }", "tointer": "select the rows whose election record fuzzily matches to 2004 . take the of candidates nominated record of this row ."}], "result": "-39", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } }"}, "-39"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } } ; -39 }", "tointer": "select the rows whose election record fuzzily matches to 2001 . take the of candidates nominated record of this row . select the rows whose election record fuzzily matches to 2004 . take the of candidates nominated record of this row . the second record is 39 larger than the first record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "election", "2001"], "result": null, "ind": 0, "tointer": "select the rows whose election record fuzzily matches to 2001 .", "tostr": "filter_eq { all_rows ; election ; 2001 }"}, "of candidates nominated"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated }", "tointer": "select the rows whose election record fuzzily matches to 2001 . take the of candidates nominated record of this row ."}, "10"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; 10 }", "tointer": "the of candidates nominated record of the first row is 10 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "election", "2004"], "result": null, "ind": 1, "tointer": "select the rows whose election record fuzzily matches to 2004 .", "tostr": "filter_eq { all_rows ; election ; 2004 }"}, "of candidates nominated"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated }", "tointer": "select the rows whose election record fuzzily matches to 2004 . take the of candidates nominated record of this row ."}, "49"], "result": true, "ind": 7, "tostr": "eq { hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } ; 49 }", "tointer": "the of candidates nominated record of the second row is 49 ."}], "result": true, "ind": 8, "tostr": "and { eq { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; 10 } ; eq { hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } ; 49 } }", "tointer": "the of candidates nominated record of the first row is 10 . the of candidates nominated record of the second row is 49 ."}], "result": true, "ind": 9, "tostr": "and { eq { diff { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } } ; -39 } ; and { eq { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; 10 } ; eq { hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } ; 49 } } } = true", "tointer": "select the rows whose election record fuzzily matches to 2001 . take the of candidates nominated record of this row . select the rows whose election record fuzzily matches to 2004 . take the of candidates nominated record of this row . the second record is 39 larger than the first record . the of candidates nominated record of the first row is 10 . the of candidates nominated record of the second row is 49 ."}, "logic_str": "and { eq { diff { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } } ; -39 } ; and { eq { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; 10 } ; eq { hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } ; 49 } } } = true", "interpret": "select the rows whose election record fuzzily matches to 2001 . take the of candidates nominated record of this row . select the rows whose election record fuzzily matches to 2004 . take the of candidates nominated record of this row . the second record is 39 larger than the first record . the of candidates nominated record of the first row is 10 . the of candidates nominated record of the second row is 49 .", "num_func": 14, "nid": 10, "g_ids": {"and_9": 9, "result_10": 10, "eq_5": 5, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_11": 11, "election_12": 12, "2001_13": 13, "of candidates nominated_14": 14, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_15": 15, "election_16": 16, "2004_17": 17, "of candidates nominated_18": 18, "-39_19": 19, "and_8": 8, "eq_6": 6, "10_20": 20, "eq_7": 7, "49_21": 21}, "g_ids_features": {"and_9": "and", "result_10": "true", "eq_5": "eq", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_11": "all_rows", "election_12": "election", "2001_13": "2001", "of candidates nominated_14": "of candidates nominated", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_15": "all_rows", "election_16": "election", "2004_17": "2004", "of candidates nominated_18": "of candidates nominated", "-39_19": "-39", "and_8": "and", "eq_6": "eq", "10_20": "10", "eq_7": "eq", "49_21": "49"}, "g_adj": {"and_9": [10], "result_10": [], "eq_5": [9], "diff_4": [5], "num_hop_2": [4, 6], "filter_str_eq_0": [2], "all_rows_11": [0], "election_12": [0], "2001_13": [0], "of candidates nominated_14": [2], "num_hop_3": [4, 7], "filter_str_eq_1": [3], "all_rows_15": [1], "election_16": [1], "2004_17": [1], "of candidates nominated_18": [3], "-39_19": [5], "and_8": [9], "eq_6": [8], "10_20": [6], "eq_7": [8], "49_21": [7]}, "table_header": ["election", "of candidates nominated", "of seats won", "of total votes", "% of popular vote"], "table_cont": [["1993", "11", "0", "1995", "0.20 %"], ["1997", "7", "0", "1039", "0.11 %"], ["2001", "10", "0", "2085", "0.28 %"], ["2004", "49", "0", "24588", "2.75 %"], ["2008", "79", "0", "43563", "4.58 %"]], "query": "and { eq { diff { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } } ; -39 } ; and { eq { hop { filter_eq { all_rows ; election ; 2001 } ; of candidates nominated } ; 10 } ; eq { hop { filter_eq { all_rows ; election ; 2004 } ; of candidates nominated } ; 49 } } } = true", "question": "in alberta greens , the number of candidates nominated in 2001 was 39 less than in 2004 ."}, {"topic": "jacques cornu", "wiki": "https://en.wikipedia.org/wiki/Jacques_Cornu", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14890412-3.html.csv", "action": "aggregation", "sent": "jacques cornu scored a total of forty seven points when playing in 1980 .", "annotation": {"scope": "subset", "col": "4", "type": "sum", "result": "47", "subset": {"col": "1", "criterion": "equal", "value": "1980"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_eq", "args": ["all_rows", "year", "1980"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; year ; 1980 }", "tointer": "select the rows whose year record is equal to 1980 ."}, "points"], "result": "47", "ind": 1, "tostr": "sum { filter_eq { all_rows ; year ; 1980 } ; points }"}, "47"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_eq { all_rows ; year ; 1980 } ; points } ; 47 } = true", "tointer": "select the rows whose year record is equal to 1980 . the sum of the points record of these rows is 47 ."}, "logic_str": "round_eq { sum { filter_eq { all_rows ; year ; 1980 } ; points } ; 47 } = true", "interpret": "select the rows whose year record is equal to 1980 . the sum of the points record of these rows is 47 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "year_5": 5, "1980_6": 6, "points_7": 7, "47_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "year_5": "year", "1980_6": "1980", "points_7": "points", "47_8": "47"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "year_5": [0], "1980_6": [0], "points_7": [1], "47_8": [2]}, "table_header": ["year", "class", "team", "points", "rank", "wins"], "table_cont": [["1980", "250cc", "yamaha", "26", "8th", "0"], ["1980", "350cc", "motul - yamaha", "21", "7th", "0"], ["1981", "350cc", "yamaha", "20", "8th", "0"], ["1982", "250cc", "hostettler - yamaha", "17", "17th", "0"], ["1982", "350cc", "hostettler - yamaha", "31", "7th", "0"], ["1983", "250cc", "hostettler - yamaha", "32", "9th", "0"], ["1984", "250cc", "hostettler - yamaha", "60", "6th", "0"], ["1985", "250cc", "parisienne - honda", "25", "10th", "0"], ["1986", "250cc", "parisienne - honda", "32", "7th", "0"], ["1987", "250cc", "parisienne - honda", "50", "9th", "0"], ["1988", "250cc", "parisienne - honda", "166", "3rd", "2"], ["1989", "250cc", "lucky strike - honda", "187", "3rd", "1"], ["1990", "250cc", "lucky strike - honda", "86", "9th", "0"]], "query": "round_eq { sum { filter_eq { all_rows ; year ; 1980 } ; points } ; 47 } = true", "question": "jacques cornu scored a total of forty seven points when playing in 1980 ."}, {"topic": "bears - packers rivalry", "wiki": "https://en.wikipedia.org/wiki/Bears%E2%80%93Packers_rivalry", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11650849-12.html.csv", "action": "comparative", "sent": "more people attended the game on november 16 , 2008 than the game on december 22 , 2008 .", "annotation": {"row_1": "17", "row_2": "18", "col": "6", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "sunday , november 16"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to sunday , november 16 .", "tostr": "filter_eq { all_rows ; date ; sunday , november 16 }"}, "attendance"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; sunday , november 16 } ; attendance }", "tointer": "select the rows whose date record fuzzily matches to sunday , november 16 . take the attendance record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "monday , december 22"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to monday , december 22 .", "tostr": "filter_eq { all_rows ; date ; monday , december 22 }"}, "attendance"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; monday , december 22 } ; attendance }", "tointer": "select the rows whose date record fuzzily matches to monday , december 22 . take the attendance record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; date ; sunday , november 16 } ; attendance } ; hop { filter_eq { all_rows ; date ; monday , december 22 } ; attendance } } = true", "tointer": "select the rows whose date record fuzzily matches to sunday , november 16 . take the attendance record of this row . select the rows whose date record fuzzily matches to monday , december 22 . take the attendance record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; date ; sunday , november 16 } ; attendance } ; hop { filter_eq { all_rows ; date ; monday , december 22 } ; attendance } } = true", "interpret": "select the rows whose date record fuzzily matches to sunday , november 16 . take the attendance record of this row . select the rows whose date record fuzzily matches to monday , december 22 . take the attendance record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "date_7": 7, "sunday , november 16_8": 8, "attendance_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "date_11": 11, "monday , december 22_12": 12, "attendance_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date_7": "date", "sunday , november 16_8": "sunday , november 16", "attendance_9": "attendance", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "date_11": "date", "monday , december 22_12": "monday , december 22", "attendance_13": "attendance"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "date_7": [0], "sunday , november 16_8": [0], "attendance_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "date_11": [1], "monday , december 22_12": [1], "attendance_13": [3]}, "table_header": ["year", "date", "winner", "result", "loser", "attendance", "location"], "table_cont": [["2000", "sunday , october 1", "chicago bears", "27 - 24", "green bay packers", "59869", "green bay"], ["2000", "sunday , december 3", "green bay packers", "28 - 6", "chicago bears", "66994", "chicago"], ["2001", "sunday , november 11", "green bay packers", "20 - 12", "chicago bears", "66944", "chicago"], ["2001", "sunday , december 9", "green bay packers", "17 - 7", "chicago bears", "59869", "green bay"], ["2002", "monday , october 7", "green bay packers", "34 - 21", "chicago bears", "63226", "champaign"], ["2002", "sunday , december 1", "green bay packers", "30 - 20", "chicago bears", "64196", "green bay"], ["2003", "monday , september 29", "green bay packers", "38 - 23", "chicago bears", "61500", "chicago"], ["2003", "sunday , december 7", "green bay packers", "34 - 21", "chicago bears", "70458", "green bay"], ["2004", "sunday , september 19", "chicago bears", "21 - 10", "green bay packers", "70688", "green bay"], ["2005", "sunday , january 2", "green bay packers", "31 - 14", "chicago bears", "62197", "chicago"], ["2005", "sunday , december 4", "chicago bears", "19 - 7", "green bay packers", "62177", "chicago"], ["2005", "sunday , december 25", "chicago bears", "24 - 17", "green bay packers", "69757", "green bay"], ["2006", "sunday , september 10", "chicago bears", "26 - 0", "green bay packers", "70918", "green bay"], ["2006", "sunday , december 31", "green bay packers", "26 - 7", "chicago bears", "62287", "chicago"], ["2007", "sunday , october 7", "chicago bears", "27 - 20", "green bay packers", "70904", "green bay"], ["2007", "sunday , december 23", "chicago bears", "35 - 7", "green bay packers", "62272", "chicago"], ["2008", "sunday , november 16", "green bay packers", "37 - 3", "chicago bears", "71040", "green bay"], ["2008", "monday , december 22", "chicago bears", "20 - 17", "green bay packers", "62151", "chicago"], ["2009", "sunday , september 13", "green bay packers", "21 - 15", "chicago bears", "70920", "green bay"], ["2009", "sunday , december 13", "green bay packers", "21 - 14", "chicago bears", "62214", "chicago"]], "query": "greater { hop { filter_eq { all_rows ; date ; sunday , november 16 } ; attendance } ; hop { filter_eq { all_rows ; date ; monday , december 22 } ; attendance } } = true", "question": "more people attended the game on november 16 , 2008 than the game on december 22 , 2008 ."}, {"topic": "atlanta falcons draft history", "wiki": "https://en.wikipedia.org/wiki/Atlanta_Falcons_draft_history", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15198842-12.html.csv", "action": "comparative", "sent": "in the history of the draft for the atlanta falcons , dave farmer was drafted one round before don parrish .", "annotation": {"row_1": "11", "row_2": "12", "col": "1", "col_other": "4", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "dave farmer"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to dave farmer .", "tostr": "filter_eq { all_rows ; name ; dave farmer }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; dave farmer } ; round }", "tointer": "select the rows whose name record fuzzily matches to dave farmer . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "don parrish"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to don parrish .", "tostr": "filter_eq { all_rows ; name ; don parrish }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; don parrish } ; round }", "tointer": "select the rows whose name record fuzzily matches to don parrish . take the round record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; name ; dave farmer } ; round } ; hop { filter_eq { all_rows ; name ; don parrish } ; round } } = true", "tointer": "select the rows whose name record fuzzily matches to dave farmer . take the round record of this row . select the rows whose name record fuzzily matches to don parrish . take the round record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; name ; dave farmer } ; round } ; hop { filter_eq { all_rows ; name ; don parrish } ; round } } = true", "interpret": "select the rows whose name record fuzzily matches to dave farmer . take the round record of this row . select the rows whose name record fuzzily matches to don parrish . take the round record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name_7": 7, "dave farmer_8": 8, "round_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name_11": 11, "don parrish_12": 12, "round_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name_7": "name", "dave farmer_8": "dave farmer", "round_9": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "don parrish_12": "don parrish", "round_13": "round"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name_7": [0], "dave farmer_8": [0], "round_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name_11": [1], "don parrish_12": [1], "round_13": [3]}, "table_header": ["round", "pick", "overall", "name", "position", "college"], "table_cont": [["1", "6", "6", "warren bryant", "offensive tackle", "kentucky"], ["1", "20", "20", "wilson faumuina", "defensive tackle", "san jos\u00e3 state"], ["2", "8", "36", "r c thielemann", "guard", "arkansas"], ["4", "6", "90", "allan leavitt", "kicker", "georgia"], ["5", "8", "120", "shelton diggs", "wide receiver", "usc"], ["6", "22", "161", "keith jenkins", "defensive back", "cincinnati"], ["8", "8", "203", "walter packer", "wide receiver", "mississippi state"], ["9", "7", "230", "john maxwell", "offensive tackle", "boston college"], ["9", "19", "242", "robert speer", "defensive end", "arkansas state"], ["10", "6", "257", "billy ryckman", "wide receiver", "louisiana tech"], ["11", "8", "287", "dave farmer", "running back", "usc"], ["12", "7", "312", "don parrish", "defensive tackle", "pittsburgh"]], "query": "less { hop { filter_eq { all_rows ; name ; dave farmer } ; round } ; hop { filter_eq { all_rows ; name ; don parrish } ; round } } = true", "question": "in the history of the draft for the atlanta falcons , dave farmer was drafted one round before don parrish ."}, {"topic": "napa auto parts 200", "wiki": "https://en.wikipedia.org/wiki/NAPA_Auto_Parts_200", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10716893-3.html.csv", "action": "unique", "sent": "for the napa auto parts 200 , the only year that jack arute was the host , was 2008 .", "annotation": {"scope": "all", "row": "5", "col": "3", "col_other": "1", "criterion": "equal", "value": "jack arute", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "host", "jack arute"], "result": null, "ind": 0, "tointer": "select the rows whose host record fuzzily matches to jack arute .", "tostr": "filter_eq { all_rows ; host ; jack arute }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; host ; jack arute } }", "tointer": "select the rows whose host record fuzzily matches to jack arute . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "host", "jack arute"], "result": null, "ind": 0, "tointer": "select the rows whose host record fuzzily matches to jack arute .", "tostr": "filter_eq { all_rows ; host ; jack arute }"}, "year"], "result": "2008", "ind": 2, "tostr": "hop { filter_eq { all_rows ; host ; jack arute } ; year }"}, "2008"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; host ; jack arute } ; year } ; 2008 }", "tointer": "the year record of this unqiue row is 2008 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; host ; jack arute } } ; eq { hop { filter_eq { all_rows ; host ; jack arute } ; year } ; 2008 } } = true", "tointer": "select the rows whose host record fuzzily matches to jack arute . there is only one such row in the table . the year record of this unqiue row is 2008 ."}, "logic_str": "and { only { filter_eq { all_rows ; host ; jack arute } } ; eq { hop { filter_eq { all_rows ; host ; jack arute } ; year } ; 2008 } } = true", "interpret": "select the rows whose host record fuzzily matches to jack arute . there is only one such row in the table . the year record of this unqiue row is 2008 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "host_7": 7, "jack arute_8": 8, "eq_3": 3, "num_hop_2": 2, "year_9": 9, "2008_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "host_7": "host", "jack arute_8": "jack arute", "eq_3": "eq", "num_hop_2": "num_hop", "year_9": "year", "2008_10": "2008"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "host_7": [0], "jack arute_8": [0], "eq_3": [4], "num_hop_2": [3], "year_9": [2], "2008_10": [3]}, "table_header": ["year", "network", "host", "pre - race analyst", "lap - by - lap", "color commentator ( s )", "pit reporters"], "table_cont": [["2012", "espn", "shannon spake", "n / a", "marty reid", "ricky craven", "rick debruhl jim noble shannon spake"], ["2011", "espn", "marty reid", "n / a", "marty reid", "rusty wallace ricky craven", "rick debruhl jim noble shannon spake"], ["2010", "espn2", "allen bestwick", "n / a", "allen bestwick", "andy petree rusty wallace", "mike massaro vince welch shannon spake"], ["2009", "espn2", "shannon spake", "n / a", "marty reid", "andy petree rusty wallace", "dave burns jamie little shannon spake"], ["2008", "espn2", "jack arute", "n / a", "marty reid", "randy lajoie rusty wallace", "jack arute vince welch mike massaro"], ["2007", "espn2", "allen bestwick", "n / a", "allen bestwick", "randy lajoie", "marty smith vince welch gary gerould"]], "query": "and { only { filter_eq { all_rows ; host ; jack arute } } ; eq { hop { filter_eq { all_rows ; host ; jack arute } ; year } ; 2008 } } = true", "question": "for the napa auto parts 200 , the only year that jack arute was the host , was 2008 ."}, {"topic": "alberta greens", "wiki": "https://en.wikipedia.org/wiki/Alberta_Greens", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14678185-1.html.csv", "action": "aggregation", "sent": "in alberta greens , the average number of candidates nominated was 31.2 .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "31.2", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "of candidates nominated"], "result": "31.2", "ind": 0, "tostr": "avg { all_rows ; of candidates nominated }"}, "31.2"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; of candidates nominated } ; 31.2 } = true", "tointer": "the average of the of candidates nominated record of all rows is 31.2 ."}, "logic_str": "round_eq { avg { all_rows ; of candidates nominated } ; 31.2 } = true", "interpret": "the average of the of candidates nominated record of all rows is 31.2 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "of candidates nominated_4": 4, "31.2_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "of candidates nominated_4": "of candidates nominated", "31.2_5": "31.2"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "of candidates nominated_4": [0], "31.2_5": [1]}, "table_header": ["election", "of candidates nominated", "of seats won", "of total votes", "% of popular vote"], "table_cont": [["1993", "11", "0", "1995", "0.20 %"], ["1997", "7", "0", "1039", "0.11 %"], ["2001", "10", "0", "2085", "0.28 %"], ["2004", "49", "0", "24588", "2.75 %"], ["2008", "79", "0", "43563", "4.58 %"]], "query": "round_eq { avg { all_rows ; of candidates nominated } ; 31.2 } = true", "question": "in alberta greens , the average number of candidates nominated was 31.2 ."}, {"topic": "tobias kamke", "wiki": "https://en.wikipedia.org/wiki/Tobias_Kamke", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18087075-2.html.csv", "action": "comparative", "sent": "tobias kamke had a match in baton rouge , louisiana before he played in granby , canada .", "annotation": {"row_1": "3", "row_2": "5", "col": "2", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "baton rouge , us"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to baton rouge , us .", "tostr": "filter_eq { all_rows ; tournament ; baton rouge , us }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; baton rouge , us } ; date }", "tointer": "select the rows whose tournament record fuzzily matches to baton rouge , us . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "granby , canada"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to granby , canada .", "tostr": "filter_eq { all_rows ; tournament ; granby , canada }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; tournament ; granby , canada } ; date }", "tointer": "select the rows whose tournament record fuzzily matches to granby , canada . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; tournament ; baton rouge , us } ; date } ; hop { filter_eq { all_rows ; tournament ; granby , canada } ; date } } = true", "tointer": "select the rows whose tournament record fuzzily matches to baton rouge , us . take the date record of this row . select the rows whose tournament record fuzzily matches to granby , canada . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; tournament ; baton rouge , us } ; date } ; hop { filter_eq { all_rows ; tournament ; granby , canada } ; date } } = true", "interpret": "select the rows whose tournament record fuzzily matches to baton rouge , us . take the date record of this row . select the rows whose tournament record fuzzily matches to granby , canada . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "tournament_7": 7, "baton rouge , us_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "tournament_11": 11, "granby , canada_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "tournament_7": "tournament", "baton rouge , us_8": "baton rouge , us", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "tournament_11": "tournament", "granby , canada_12": "granby , canada", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "tournament_7": [0], "baton rouge , us_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "tournament_11": [1], "granby , canada_12": [1], "date_13": [3]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent", "score"], "table_cont": [["runner - up", "12 november 2007", "helsinki , finland", "hard ( i )", "steve darcis", "3 - 6 , 6 - 1 , 4 - 6"], ["runner - up", "26 may 2008", "karlsruhe , germany", "clay", "teymuraz gabashvili", "1 - 6 , 4 - 6"], ["runner - up", "12 april 2010", "baton rouge , us", "hard ( i )", "kevin anderson", "7 - 6 ( 9 - 7 ) , 6 - 7 ( 7 - 9 ) , 1 - 6"], ["runner - up", "31 may 2010", "f\u00fcrth , germany", "clay", "robin haase", "4 - 6 , 2 - 6"], ["winner", "26 july 2010", "granby , canada", "hard", "milos raonic", "6 - 3 , 7 - 6 ( 7 - 4 )"], ["winner", "11 october 2010", "tiburon , us", "hard", "ryan harrison", "6 - 1 , 6 - 1"], ["winner", "13 november 2011", "loughborough , uk", "hard", "flavio cipolla", "6 - 2 , 7 - 5"], ["runner - up", "7 july 2012", "braunschweig , germany", "clay", "thomaz bellucci", "6 - 7 ( 4 - 7 ) , 3 - 6"], ["winner", "16 september 2012", "p\u00e9tange , luxembourg", "hard", "paul - henri mathieu", "7 - 6 ( 9 - 7 ) , 6 - 4"]], "query": "less { hop { filter_eq { all_rows ; tournament ; baton rouge , us } ; date } ; hop { filter_eq { all_rows ; tournament ; granby , canada } ; date } } = true", "question": "tobias kamke had a match in baton rouge , louisiana before he played in granby , canada ."}, {"topic": "the universal masters collection ( grace jones album )", "wiki": "https://en.wikipedia.org/wiki/The_Universal_Masters_Collection_%28Grace_Jones_album%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11947078-2.html.csv", "action": "unique", "sent": "when the universal masters collection of grace jones was re-released in 2008 , this was the first time it became available for download .", "annotation": {"scope": "all", "row": "5", "col": "4", "col_other": "2", "criterion": "fuzzily_match", "value": "download", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "format ( s )", "download"], "result": null, "ind": 0, "tointer": "select the rows whose format ( s ) record fuzzily matches to download .", "tostr": "filter_eq { all_rows ; format ( s ) ; download }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; format ( s ) ; download } }", "tointer": "select the rows whose format ( s ) record fuzzily matches to download . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "format ( s )", "download"], "result": null, "ind": 0, "tointer": "select the rows whose format ( s ) record fuzzily matches to download .", "tostr": "filter_eq { all_rows ; format ( s ) ; download }"}, "year"], "result": "2008", "ind": 2, "tostr": "hop { filter_eq { all_rows ; format ( s ) ; download } ; year }"}, "2008"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; format ( s ) ; download } ; year } ; 2008 }", "tointer": "the year record of this unqiue row is 2008 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; format ( s ) ; download } } ; eq { hop { filter_eq { all_rows ; format ( s ) ; download } ; year } ; 2008 } } = true", "tointer": "select the rows whose format ( s ) record fuzzily matches to download . there is only one such row in the table . the year record of this unqiue row is 2008 ."}, "logic_str": "and { only { filter_eq { all_rows ; format ( s ) ; download } } ; eq { hop { filter_eq { all_rows ; format ( s ) ; download } ; year } ; 2008 } } = true", "interpret": "select the rows whose format ( s ) record fuzzily matches to download . there is only one such row in the table . the year record of this unqiue row is 2008 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "format (s)_7": 7, "download_8": 8, "eq_3": 3, "num_hop_2": 2, "year_9": 9, "2008_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "format (s)_7": "format ( s )", "download_8": "download", "eq_3": "eq", "num_hop_2": "num_hop", "year_9": "year", "2008_10": "2008"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "format (s)_7": [0], "download_8": [0], "eq_3": [4], "num_hop_2": [3], "year_9": [2], "2008_10": [3]}, "table_header": ["region", "year", "name", "format ( s )", "label"], "table_cont": [["worldwide", "2003", "the universal masters collection", "cd", "universal"], ["japan", "2005", "best 1200", "cd", "universal"], ["worldwide", "2006", "colour collection", "cd", "universal"], ["germany", "2008", "star - club pr\u00e3 \u00a4 sentiert grace jones", "cd", "universal"], ["worldwide", "2008", "classic grace jones", "cd , download", "universal , spectrum"]], "query": "and { only { filter_eq { all_rows ; format ( s ) ; download } } ; eq { hop { filter_eq { all_rows ; format ( s ) ; download } ; year } ; 2008 } } = true", "question": "when the universal masters collection of grace jones was re-released in 2008 , this was the first time it became available for download ."}, {"topic": "1963 all - ireland senior hurling championship", "wiki": "https://en.wikipedia.org/wiki/1963_All-Ireland_Senior_Hurling_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18937160-2.html.csv", "action": "aggregation", "sent": "the average total points for all the players was 9 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "9", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "total"], "result": "9", "ind": 0, "tostr": "avg { all_rows ; total }"}, "9"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; total } ; 9 } = true", "tointer": "the average of the total record of all rows is 9 ."}, "logic_str": "round_eq { avg { all_rows ; total } ; 9 } = true", "interpret": "the average of the total record of all rows is 9 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "total_4": 4, "9_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "total_4": "total", "9_5": "9"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "total_4": [0], "9_5": [1]}, "table_header": ["rank", "player", "county", "tally", "total", "opposition"], "table_cont": [["1", "eddie keher", "kilkenny", "0 - 14", "14", "waterford"], ["2", "eddie keher", "kilkenny", "2 - 5", "11", "wexford"], ["3", "jimmy smyth", "clare", "1 - 7", "10", "cork"], ["4", "richard browne", "cork", "3 - 0", "9", "clare"], ["4", "se\u00e1n mcloughlin", "tipperary", "3 - 0", "9", "waterford"], ["4", "s\u00e9amus power", "waterford", "3 - 0", "9", "kilkenny"], ["4", "willie walsh", "carlow", "2 - 3", "9", "dublin"], ["8", "fran whelan", "dublin", "1 - 5", "8", "carlow"], ["8", "philly grimes", "waterford", "0 - 8", "8", "tipperary"], ["10", "tom walsh", "kilkenny", "2 - 1", "7", "waterford"], ["10", "mick kennedy", "dublin", "1 - 4", "7", "carlow"], ["10", "philly grimes", "waterford", "1 - 4", "7", "kilkenny"]], "query": "round_eq { avg { all_rows ; total } ; 9 } = true", "question": "the average total points for all the players was 9 ."}, {"topic": "binghamton dusters", "wiki": "https://en.wikipedia.org/wiki/Binghamton_Dusters", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2509505-1.html.csv", "action": "count", "sent": "the binghamton dusters played exactly 74 games in 4 of their seasons .", "annotation": {"scope": "all", "criterion": "equal", "value": "74", "result": "4", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "games", "74"], "result": null, "ind": 0, "tointer": "select the rows whose games record is equal to 74 .", "tostr": "filter_eq { all_rows ; games ; 74 }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; games ; 74 } }", "tointer": "select the rows whose games record is equal to 74 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; games ; 74 } } ; 4 } = true", "tointer": "select the rows whose games record is equal to 74 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; games ; 74 } } ; 4 } = true", "interpret": "select the rows whose games record is equal to 74 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "games_5": 5, "74_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "games_5": "games", "74_6": "74", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "games_5": [0], "74_6": [0], "4_7": [2]}, "table_header": ["season", "games", "won", "lost", "tied", "points", "goals for", "goals against", "standing"], "table_cont": [["1973 - 74", "74", "28", "41", "5", "61", "274", "352", "6th , nahl"], ["1974 - 75", "74", "39", "32", "3", "81", "293", "286", "3rd , nahl"], ["1975 - 76", "74", "27", "45", "2", "56", "258", "337", "5th , west"], ["1976 - 77", "74", "41", "31", "2", "84", "363", "324", "3rd , nahl"], ["1977 - 78", "81", "27", "46", "8", "62", "287", "377", "4th , north"], ["1978 - 79", "79", "32", "42", "5", "69", "300", "320", "3rd , south"]], "query": "eq { count { filter_eq { all_rows ; games ; 74 } } ; 4 } = true", "question": "the binghamton dusters played exactly 74 games in 4 of their seasons ."}, {"topic": "stephin merritt discography", "wiki": "https://en.wikipedia.org/wiki/Stephin_Merritt_discography", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15593730-1.html.csv", "action": "ordinal", "sent": "realism is the second newest released album by stephin merritt .", "annotation": {"row": "10", "col": "3", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "year", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; year ; 2 }"}, "album title"], "result": "realism", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; year ; 2 } ; album title }"}, "realism"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; album title } ; realism } = true", "tointer": "select the row whose year record of all rows is 2nd maximum . the album title record of this row is realism ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; album title } ; realism } = true", "interpret": "select the row whose year record of all rows is 2nd maximum . the album title record of this row is realism .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "year_5": 5, "2_6": 6, "album title_7": 7, "realism_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "year_5": "year", "2_6": "2", "album title_7": "album title", "realism_8": "realism"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "year_5": [0], "2_6": [0], "album title_7": [1], "realism_8": [2]}, "table_header": ["album title", "format", "year", "original label", "chart positions"], "table_cont": [["distant plastic trees", "lp", "1991", "red flame", "-"], ["the wayward bus", "lp", "1992", "popup", "-"], ["the house of tomorrow", "ep", "1992", "feel good all over", "-"], ["the charm of the highway strip", "lp", "1994", "merge records", "-"], ["holiday", "lp", "1994", "feel good all over", "-"], ["get lost", "lp", "1995", "merge records", "-"], ["69 love songs", "lp", "1999", "merge records", "-"], ["i", "lp", "2004", "nonesuch records", "152 ( billboard 200 )"], ["distortion", "lp", "2008", "nonesuch records", "77 ( billboard 200 )"], ["realism", "lp", "2010", "nonesuch records", "110 ( billboard 200 )"], ["love at the bottom of the sea", "lp", "2012", "merge records", "89 ( billboard 200 )"]], "query": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; album title } ; realism } = true", "question": "realism is the second newest released album by stephin merritt ."}, {"topic": "wru division two north", "wiki": "https://en.wikipedia.org/wiki/WRU_Division_Two_North", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17921347-4.html.csv", "action": "comparative", "sent": "welshpool rfc had more losses than bro ffestiniog rfc in the wru division two north .", "annotation": {"row_1": "8", "row_2": "3", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "club", "welshpool rfc"], "result": null, "ind": 0, "tointer": "select the rows whose club record fuzzily matches to welshpool rfc .", "tostr": "filter_eq { all_rows ; club ; welshpool rfc }"}, "lost"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; club ; welshpool rfc } ; lost }", "tointer": "select the rows whose club record fuzzily matches to welshpool rfc . take the lost record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "club", "bro ffestiniog rfc"], "result": null, "ind": 1, "tointer": "select the rows whose club record fuzzily matches to bro ffestiniog rfc .", "tostr": "filter_eq { all_rows ; club ; bro ffestiniog rfc }"}, "lost"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; club ; bro ffestiniog rfc } ; lost }", "tointer": "select the rows whose club record fuzzily matches to bro ffestiniog rfc . take the lost record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; club ; welshpool rfc } ; lost } ; hop { filter_eq { all_rows ; club ; bro ffestiniog rfc } ; lost } } = true", "tointer": "select the rows whose club record fuzzily matches to welshpool rfc . take the lost record of this row . select the rows whose club record fuzzily matches to bro ffestiniog rfc . take the lost record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; club ; welshpool rfc } ; lost } ; hop { filter_eq { all_rows ; club ; bro ffestiniog rfc } ; lost } } = true", "interpret": "select the rows whose club record fuzzily matches to welshpool rfc . take the lost record of this row . select the rows whose club record fuzzily matches to bro ffestiniog rfc . take the lost record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "club_7": 7, "welshpool rfc_8": 8, "lost_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "club_11": 11, "bro ffestiniog rfc_12": 12, "lost_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "club_7": "club", "welshpool rfc_8": "welshpool rfc", "lost_9": "lost", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "club_11": "club", "bro ffestiniog rfc_12": "bro ffestiniog rfc", "lost_13": "lost"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "club_7": [0], "welshpool rfc_8": [0], "lost_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "club_11": [1], "bro ffestiniog rfc_12": [1], "lost_13": [3]}, "table_header": ["club", "played", "drawn", "lost", "points for", "points against", "tries for", "tries against", "try bonus"], "table_cont": [["club", "played", "drawn", "lost", "points for", "points against", "tries for", "tries against", "try bonus"], ["pwllheli rfc", "14", "0", "1", "623", "133", "101", "13", "14"], ["bro ffestiniog rfc", "14", "0", "3", "452", "155", "67", "25", "8"], ["bethesda rfc", "14", "0", "5", "373", "202", "56", "30", "8"], ["caereinion obra", "14", "0", "5", "254", "253", "36", "38", "4"], ["machynlleth rfc", "14", "0", "6", "283", "329", "39", "48", "4"], ["rhyl and district rfc", "14", "0", "11", "184", "484", "31", "77", "3"], ["welshpool rfc", "14", "0", "11", "205", "397", "25", "60", "2"], ["rhosllanerchrugog rfc", "14", "0", "14", "142", "563", "24", "88", "1"], ["bangor rfc ''", "0", "0", "0", "0", "0", "0", "0", "0"], ["rhayader rfc", "0", "0", "0", "0", "0", "0", "0", "0"], ["wrexham rfc", "0", "0", "0", "0", "0", "0", "0", "0"]], "query": "greater { hop { filter_eq { all_rows ; club ; welshpool rfc } ; lost } ; hop { filter_eq { all_rows ; club ; bro ffestiniog rfc } ; lost } } = true", "question": "welshpool rfc had more losses than bro ffestiniog rfc in the wru division two north ."}, {"topic": "1973 world championship tennis circuit", "wiki": "https://en.wikipedia.org/wiki/1973_World_Championship_Tennis_circuit", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29302711-13.html.csv", "action": "aggregation", "sent": "the average amount of points scored by all tennis players is 34 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "34", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "points"], "result": "34", "ind": 0, "tostr": "avg { all_rows ; points }"}, "34"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; points } ; 34 } = true", "tointer": "the average of the points record of all rows is 34 ."}, "logic_str": "round_eq { avg { all_rows ; points } ; 34 } = true", "interpret": "the average of the points record of all rows is 34 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "points_4": 4, "34_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "points_4": "points", "34_5": "34"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "points_4": [0], "34_5": [1]}, "table_header": ["rk", "name", "country", "matches played", "matches won", "points", "prize money ( usd )"], "table_cont": [["1", "ken rosewall", "aus", "42", "34", "53", "66400"], ["2", "arthur ashe", "usa", "36", "26", "41", "63150"], ["3", "marty riessen", "usa", "36", "26", "35", "47200"], ["4", "roger taylor", "gbr", "31", "21", "34", "42800"], ["4", "mark cox", "gbr", "33", "23", "34", "31950"], ["6", "brian fairlie", "aus", "32", "22", "33", "30900"], ["7", "jan kode\u00e5 \u00a1", "tch", "27", "19", "28", "23800"], ["8", "tom okker", "ned", "29", "19", "25", "34400"], ["9", "roscoe tanner", "usa", "27", "16", "24", "25250"]], "query": "round_eq { avg { all_rows ; points } ; 34 } = true", "question": "the average amount of points scored by all tennis players is 34 ."}, {"topic": "list of municipalities in quebec", "wiki": "https://en.wikipedia.org/wiki/List_of_municipalities_in_Quebec", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11218948-15.html.csv", "action": "aggregation", "sent": "the average population of the quebec municipalities is 3289 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "3289", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "population"], "result": "3289", "ind": 0, "tostr": "avg { all_rows ; population }"}, "3289"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; population } ; 3289 } = true", "tointer": "the average of the population record of all rows is 3289 ."}, "logic_str": "round_eq { avg { all_rows ; population } ; 3289 } = true", "interpret": "the average of the population record of all rows is 3289 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "population_4": 4, "3289_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "population_4": "population", "3289_5": "3289"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "population_4": [0], "3289_5": [1]}, "table_header": ["code", "type", "name", "area ( km 2 )", "population", "regional county municipality", "region"], "table_cont": [["99005", "v", "lebel - sur - qu\u00e3villon", "44.74", "3140", "not part of a rcm", "10"], ["99015", "v", "matagami", "64.75", "1828", "not part of a rcm", "10"], ["99020", "v", "chapais", "62.78", "1755", "not part of a rcm", "10"], ["99025", "v", "chibougamau", "1041.97", "7747", "not part of a rcm", "10"], ["99060", "m", "baie - james", "333255.55", "1976", "not part of a rcm", "10"]], "query": "round_eq { avg { all_rows ; population } ; 3289 } = true", "question": "the average population of the quebec municipalities is 3289 ."}, {"topic": "2008 women 's british open", "wiki": "https://en.wikipedia.org/wiki/2008_Women%27s_British_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18594233-4.html.csv", "action": "comparative", "sent": "laura diaz had a lower score than kristy mcpherson in the 2008 women 's british open .", "annotation": {"row_1": "3", "row_2": "9", "col": "4", "col_other": "2", "relation": "less", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "laura diaz"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to laura diaz .", "tostr": "filter_eq { all_rows ; player ; laura diaz }"}, "score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; laura diaz } ; score }", "tointer": "select the rows whose player record fuzzily matches to laura diaz . take the score record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "kristy mcpherson"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to kristy mcpherson .", "tostr": "filter_eq { all_rows ; player ; kristy mcpherson }"}, "score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score }", "tointer": "select the rows whose player record fuzzily matches to kristy mcpherson . take the score record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } }", "tointer": "select the rows whose player record fuzzily matches to laura diaz . take the score record of this row . select the rows whose player record fuzzily matches to kristy mcpherson . take the score record of this row . the first record is less than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "laura diaz"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to laura diaz .", "tostr": "filter_eq { all_rows ; player ; laura diaz }"}, "score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; laura diaz } ; score }", "tointer": "select the rows whose player record fuzzily matches to laura diaz . take the score record of this row ."}, "66"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; 66 }", "tointer": "the score record of the first row is 66 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "kristy mcpherson"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to kristy mcpherson .", "tostr": "filter_eq { all_rows ; player ; kristy mcpherson }"}, "score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score }", "tointer": "select the rows whose player record fuzzily matches to kristy mcpherson . take the score record of this row ."}, "67"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } ; 67 }", "tointer": "the score record of the second row is 67 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; 66 } ; eq { hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } ; 67 } }", "tointer": "the score record of the first row is 66 . the score record of the second row is 67 ."}], "result": true, "ind": 8, "tostr": "and { less { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } } ; and { eq { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; 66 } ; eq { hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } ; 67 } } } = true", "tointer": "select the rows whose player record fuzzily matches to laura diaz . take the score record of this row . select the rows whose player record fuzzily matches to kristy mcpherson . take the score record of this row . the first record is less than the second record . the score record of the first row is 66 . the score record of the second row is 67 ."}, "logic_str": "and { less { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } } ; and { eq { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; 66 } ; eq { hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } ; 67 } } } = true", "interpret": "select the rows whose player record fuzzily matches to laura diaz . take the score record of this row . select the rows whose player record fuzzily matches to kristy mcpherson . take the score record of this row . the first record is less than the second record . the score record of the first row is 66 . the score record of the second row is 67 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "less_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "player_11": 11, "laura diaz_12": 12, "score_13": 13, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "player_15": 15, "kristy mcpherson_16": 16, "score_17": 17, "and_7": 7, "eq_5": 5, "66_18": 18, "eq_6": 6, "67_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "less_4": "less", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "laura diaz_12": "laura diaz", "score_13": "score", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "player_15": "player", "kristy mcpherson_16": "kristy mcpherson", "score_17": "score", "and_7": "and", "eq_5": "eq", "66_18": "66", "eq_6": "eq", "67_19": "67"}, "g_adj": {"and_8": [9], "result_9": [], "less_4": [8], "num_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "player_11": [0], "laura diaz_12": [0], "score_13": [2], "num_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "player_15": [1], "kristy mcpherson_16": [1], "score_17": [3], "and_7": [8], "eq_5": [7], "66_18": [5], "eq_6": [7], "67_19": [6]}, "table_header": ["place", "player", "country", "score", "to par"], "table_cont": [["1", "juli inkster", "united states", "65", "7"], ["t2", "momoko ueda", "japan", "66", "6"], ["t2", "laura diaz", "united states", "66", "6"], ["t2", "ji young oh", "south korea", "66", "6"], ["t2", "yuri fudoh", "japan", "66", "6"], ["t2", "johanna head", "england", "66", "6"], ["t2", "stacy prammanasudh", "united states", "66", "6"], ["t2", "jiyai shin", "south korea", "66", "6"], ["t9", "kristy mcpherson", "united states", "67", "5"], ["t9", "karen stupples", "england", "67", "5"], ["t9", "rebecca hudson", "england", "67", "5"], ["t9", "sherri steinhauer", "united states", "67", "5"]], "query": "and { less { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } } ; and { eq { hop { filter_eq { all_rows ; player ; laura diaz } ; score } ; 66 } ; eq { hop { filter_eq { all_rows ; player ; kristy mcpherson } ; score } ; 67 } } } = true", "question": "laura diaz had a lower score than kristy mcpherson in the 2008 women 's british open ."}, {"topic": "list of leading rugby union test point scorers", "wiki": "https://en.wikipedia.org/wiki/List_of_leading_rugby_union_test_point_scorers", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13255695-3.html.csv", "action": "majority", "sent": "most players on the top five international leading rugby union test point scorer list have over 50 conversions throughout their career .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than", "value": "50", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "conversions", "50"], "result": true, "ind": 0, "tointer": "for the conversions records of all rows , most of them are greater than 50 .", "tostr": "most_greater { all_rows ; conversions ; 50 } = true"}, "logic_str": "most_greater { all_rows ; conversions ; 50 } = true", "interpret": "for the conversions records of all rows , most of them are greater than 50 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "conversions_3": 3, "50_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "conversions_3": "conversions", "50_4": "50"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "conversions_3": [0], "50_4": [0]}, "table_header": ["number", "player", "years active", "caps", "tries", "conversions", "penalties", "drop goals", "average score", "score"], "table_cont": [["1", "yuri kushnarev", "2005 -", "56", "7", "51", "84", "0", "6.95", "389"], ["2", "jaco coetzee", "1990 - 1995", "28", "6", "81", "45", "3", "11.96", "335"], ["3", "konstantin rachkov", "1997 - 2011", "44", "10", "51", "36", "10", "7.18", "316"], ["4", "gon\u00e3 \u00a7 alo malheiro", "1998 - 2007", "40", "8", "25", "46", "17", "6.98", "279"], ["5", "esteban roque segovia", "2004 - 2007", "20", "1", "53", "52", "1", "13.5", "270"]], "query": "most_greater { all_rows ; conversions ; 50 } = true", "question": "most players on the top five international leading rugby union test point scorer list have over 50 conversions throughout their career ."}, {"topic": "2009 - 10 dallas mavericks season", "wiki": "https://en.wikipedia.org/wiki/2009%E2%80%9310_Dallas_Mavericks_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-23284271-11.html.csv", "action": "aggregation", "sent": "for the 2009-10 dallas mavericks season the average attendance for the games at the at & t center was 18581 .", "annotation": {"scope": "subset", "col": "8", "type": "average", "result": "18581", "subset": {"col": "8", "criterion": "equal", "value": "at & t center"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "location attendance", "at & t center"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; location attendance ; at & t center }", "tointer": "select the rows whose location attendance record fuzzily matches to at & t center ."}, "location attendance"], "result": "18581", "ind": 1, "tostr": "avg { filter_eq { all_rows ; location attendance ; at & t center } ; location attendance }"}, "18581"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; location attendance ; at & t center } ; location attendance } ; 18581 } = true", "tointer": "select the rows whose location attendance record fuzzily matches to at & t center . the average of the location attendance record of these rows is 18581 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; location attendance ; at & t center } ; location attendance } ; 18581 } = true", "interpret": "select the rows whose location attendance record fuzzily matches to at & t center . the average of the location attendance record of these rows is 18581 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "location attendance_5": 5, "at&t center_6": 6, "location attendance_7": 7, "18581_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "location attendance_5": "location attendance", "at&t center_6": "at & t center", "location attendance_7": "location attendance", "18581_8": "18581"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "location attendance_5": [0], "at&t center_6": [0], "location attendance_7": [1], "18581_8": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "series"], "table_cont": [["1", "april 18", "san antonio", "w 100 - 94 ( ot )", "dirk nowitzki ( 36 )", "erick dampier ( 12 )", "jason kidd ( 11 )", "american airlines center 20372", "1 - 0"], ["2", "april 21", "san antonio", "l 88 - 102 ( ot )", "jason terry ( 27 )", "dirk nowitzki ( 10 )", "jason kidd ( 8 )", "american airlines center 20728", "1 - 1"], ["3", "april 23", "san antonio", "l 90 - 94 ( ot )", "dirk nowitzki ( 35 )", "dirk nowitzki , jason kidd ( 7 )", "jason kidd ( 5 )", "at & t center 18581", "1 - 2"], ["4", "april 25", "san antonio", "l 89 - 92 ( ot )", "dirk nowitzki , caron butler ( 17 )", "dirk nowitzki ( 11 )", "jason kidd ( 5 )", "at & t center 18581", "1 - 3"], ["5", "april 27", "san antonio", "w 103 - 81 ( ot )", "caron butler ( 35 )", "caron butler ( 11 )", "jason kidd ( 7 )", "american airlines center 20557", "2 - 3"]], "query": "round_eq { avg { filter_eq { all_rows ; location attendance ; at & t center } ; location attendance } ; 18581 } = true", "question": "for the 2009-10 dallas mavericks season the average attendance for the games at the at & t center was 18581 ."}, {"topic": "list of bavarian locomotives and railbuses", "wiki": "https://en.wikipedia.org/wiki/List_of_Bavarian_locomotives_and_railbuses", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17941795-5.html.csv", "action": "aggregation", "sent": "among the d classes of bavarian locomotives and railbuses , the average number of units made was just under 48 .", "annotation": {"scope": "subset", "col": "3", "type": "average", "result": "48", "subset": {"col": "1", "criterion": "equal", "value": "d"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "class", "d"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; class ; d }", "tointer": "select the rows whose class record fuzzily matches to d ."}, "quantity"], "result": "48", "ind": 1, "tostr": "avg { filter_eq { all_rows ; class ; d } ; quantity }"}, "48"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; class ; d } ; quantity } ; 48 } = true", "tointer": "select the rows whose class record fuzzily matches to d . the average of the quantity record of these rows is 48 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; class ; d } ; quantity } ; 48 } = true", "interpret": "select the rows whose class record fuzzily matches to d . the average of the quantity record of these rows is 48 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "class_5": 5, "d_6": 6, "quantity_7": 7, "48_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "class_5": "class", "d_6": "d", "quantity_7": "quantity", "48_8": "48"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "class_5": [0], "d_6": [0], "quantity_7": [1], "48_8": [2]}, "table_header": ["class", "number ( s )", "quantity", "year ( s ) of manufacture", "type"], "table_cont": [["d i", "names", "15", "1871 - 1875", "b n2t"], ["d ii ( old )", "names", "4", "1873", "b n2t"], ["d ii", "2400 - 2472", "73", "1898 - 1904", "c n2t"], ["d iii", "names", "6", "1873", "b n2t"], ["d iv", "names , 1701 - 1737", "132", "1875 - 1897", "b n2t"], ["d v", "names", "10", "1877 - 1878", "c n2t"], ["d ix", "names , 1931 - 1960 , 2101 - 2115", "55", "1888 - 1899", "1b n2t"], ["d xii", "2201 - 2296", "96", "1897 - 1904", "1 \u2032 b2 \u2032 n2t"], ["pt 2 / 3", "6001 - 6097", "97", "1909 - 1916", "1b h2t"], ["pt 2 / 4 n", "6501 - 6502", "2", "1909", "2 \u2032 b n2t"], ["pt 2 / 4 h", "5001 - 5012", "12", "1906 - 1909", "1 \u2032 b1 \u2032 h2t"], ["pt 2 / 5 n", "5202 - 5210", "9", "1907", "1 \u2032 b2 \u2032 n2t"], ["pt 2 / 5 h", "5201", "1", "1906", "1 \u2032 b2 \u2032 h2t"], ["pt 3 / 6", "6101 - 6110", "10", "1923", "1 \u2032 c2 \u2032 h2t"], ["gt 2x4 / 4", "5751 - 5765", "15", "1913 - 1914", "d \u2032 d h4vt"], ["gt 2x4 / 4", "5766 - 5775", "10", "1922 - 1923", "d \u2032 d h4vt"], ["r 3 / 3", "2473 - 2490", "18", "1906 - 1913", "c n2t"], ["r 3 / 3", "4701 - 4790", "90", "1921 - 1922", "c n2t"], ["r 4 / 4", "4151 - 4183", "33", "1918 - 1919", "d n2t"], ["r 4 / 4", "4184 - 4192", "9", "1924 - 1925", "d n2t"]], "query": "round_eq { avg { filter_eq { all_rows ; class ; d } ; quantity } ; 48 } = true", "question": "among the d classes of bavarian locomotives and railbuses , the average number of units made was just under 48 ."}, {"topic": "loftus road", "wiki": "https://en.wikipedia.org/wiki/Loftus_Road", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1053247-1.html.csv", "action": "count", "sent": "iceland only competed once , and lost to trinidad and tobago .", "annotation": {"scope": "all", "criterion": "equal", "value": "iceland", "result": "1", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "loser", "iceland"], "result": null, "ind": 0, "tointer": "select the rows whose loser record fuzzily matches to iceland .", "tostr": "filter_eq { all_rows ; loser ; iceland }"}], "result": "1", "ind": 1, "tostr": "count { filter_eq { all_rows ; loser ; iceland } }", "tointer": "select the rows whose loser record fuzzily matches to iceland . the number of such rows is 1 ."}, "1"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; loser ; iceland } } ; 1 } = true", "tointer": "select the rows whose loser record fuzzily matches to iceland . the number of such rows is 1 ."}, "logic_str": "eq { count { filter_eq { all_rows ; loser ; iceland } } ; 1 } = true", "interpret": "select the rows whose loser record fuzzily matches to iceland . the number of such rows is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "loser_5": 5, "iceland_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "loser_5": "loser", "iceland_6": "iceland", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "loser_5": [0], "iceland_6": [0], "1_7": [2]}, "table_header": ["date", "sport", "winner", "score", "loser"], "table_cont": [["1992", "football", "england b", "3 - 0", "france b"], ["1998", "football", "england b", "4 - 1", "russia - 2"], ["2002", "football", "nigeria", "1 - 0", "jamaica"], ["2004", "rugby league", "australia", "32 - 16", "new zealand"], ["2005", "rugby league", "new zealand", "42 - 26", "great britain"], ["2006", "football", "australia", "1 - 1", "ghana"], ["2006", "football", "trinidad and tobago", "2 - 0", "iceland"], ["2007", "football", "denmark", "3 - 1", "australia"], ["2008", "football", "australia", "2 - 2", "south africa"], ["2010", "football", "south korea", "2 - 0", "c\u00f4te d'ivoire"]], "query": "eq { count { filter_eq { all_rows ; loser ; iceland } } ; 1 } = true", "question": "iceland only competed once , and lost to trinidad and tobago ."}, {"topic": "list of ultras of oceania", "wiki": "https://en.wikipedia.org/wiki/List_of_Ultras_of_Oceania", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-18946749-4.html.csv", "action": "unique", "sent": "in the list of ultras of oceania , the only peak among those of elevation less than 3000 m with col ( m ) 0 is mount ruapehu .", "annotation": {"scope": "subset", "row": "2", "col": "7", "col_other": "2", "criterion": "equal", "value": "0", "subset": {"col": "5", "criterion": "less_than", "value": "3000"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": [{"func": "filter_less", "args": ["all_rows", "elevation ( m )", "3000"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; elevation ( m ) ; 3000 }", "tointer": "select the rows whose elevation ( m ) record is less than 3000 ."}, "col ( m )", "0"], "result": null, "ind": 1, "tointer": "select the rows whose elevation ( m ) record is less than 3000 . among these rows , select the rows whose col ( m ) record is equal to 0 .", "tostr": "filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } }", "tointer": "select the rows whose elevation ( m ) record is less than 3000 . among these rows , select the rows whose col ( m ) record is equal to 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": [{"func": "filter_less", "args": ["all_rows", "elevation ( m )", "3000"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; elevation ( m ) ; 3000 }", "tointer": "select the rows whose elevation ( m ) record is less than 3000 ."}, "col ( m )", "0"], "result": null, "ind": 1, "tointer": "select the rows whose elevation ( m ) record is less than 3000 . among these rows , select the rows whose col ( m ) record is equal to 0 .", "tostr": "filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 }"}, "peak"], "result": "mount ruapehu", "ind": 3, "tostr": "hop { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } ; peak }"}, "mount ruapehu"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } ; peak } ; mount ruapehu }", "tointer": "the peak record of this unqiue row is mount ruapehu ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } } ; eq { hop { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } ; peak } ; mount ruapehu } } = true", "tointer": "select the rows whose elevation ( m ) record is less than 3000 . among these rows , select the rows whose col ( m ) record is equal to 0 . there is only one such row in the table . the peak record of this unqiue row is mount ruapehu ."}, "logic_str": "and { only { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } } ; eq { hop { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } ; peak } ; mount ruapehu } } = true", "interpret": "select the rows whose elevation ( m ) record is less than 3000 . among these rows , select the rows whose col ( m ) record is equal to 0 . there is only one such row in the table . the peak record of this unqiue row is mount ruapehu .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_eq_1": 1, "filter_less_0": 0, "all_rows_7": 7, "elevation (m)_8": 8, "3000_9": 9, "col (m)_10": 10, "0_11": 11, "str_eq_4": 4, "str_hop_3": 3, "peak_12": 12, "mount ruapehu_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_eq_1": "filter_eq", "filter_less_0": "filter_less", "all_rows_7": "all_rows", "elevation (m)_8": "elevation ( m )", "3000_9": "3000", "col (m)_10": "col ( m )", "0_11": "0", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "peak_12": "peak", "mount ruapehu_13": "mount ruapehu"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_eq_1": [2, 3], "filter_less_0": [1], "all_rows_7": [0], "elevation (m)_8": [0], "3000_9": [0], "col (m)_10": [1], "0_11": [1], "str_eq_4": [5], "str_hop_3": [4], "peak_12": [3], "mount ruapehu_13": [4]}, "table_header": ["rank", "peak", "country", "island", "elevation ( m )", "prominence ( m )", "col ( m )"], "table_cont": [["1", "aoraki / mount cook", "new zealand", "south island", "3755", "3755", "0"], ["2", "mount ruapehu", "new zealand", "north island", "2797", "2797", "0"], ["3", "mount aspiring / tititea", "new zealand", "south island", "3033", "2471", "562"], ["4", "mount taranaki / egmont", "new zealand", "north island", "2518", "2308", "210"], ["5", "mount tutoko", "new zealand", "south island", "2723", "2191", "532"], ["6", "mount tapuaenuku", "new zealand", "south island", "2884", "2021", "863"], ["7", "single cone", "new zealand", "south island", "2319", "1969", "350"], ["8", "manakau", "new zealand", "south island", "2608", "1798", "810"], ["9", "mount taylor", "new zealand", "south island", "2333", "1636", "698"]], "query": "and { only { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } } ; eq { hop { filter_eq { filter_less { all_rows ; elevation ( m ) ; 3000 } ; col ( m ) ; 0 } ; peak } ; mount ruapehu } } = true", "question": "in the list of ultras of oceania , the only peak among those of elevation less than 3000 m with col ( m ) 0 is mount ruapehu ."}, {"topic": "1942 vfl season", "wiki": "https://en.wikipedia.org/wiki/1942_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10807990-12.html.csv", "action": "aggregation", "sent": "the total crowd attendance for the games listed in the 1942 vfl season was 40,000 .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "40000", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "crowd"], "result": "40000", "ind": 0, "tostr": "sum { all_rows ; crowd }"}, "40000"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; crowd } ; 40000 } = true", "tointer": "the sum of the crowd record of all rows is 40000 ."}, "logic_str": "round_eq { sum { all_rows ; crowd } ; 40000 } = true", "interpret": "the sum of the crowd record of all rows is 40000 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "crowd_4": 4, "40000_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "crowd_4": "crowd", "40000_5": "40000"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "crowd_4": [0], "40000_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "19.15 ( 129 )", "richmond", "17.20 ( 122 )", "yarraville oval", "15000", "25 july 1942"], ["collingwood", "9.15 ( 69 )", "south melbourne", "15.21 ( 111 )", "victoria park", "8000", "25 july 1942"], ["north melbourne", "9.10 ( 64 )", "hawthorn", "6.16 ( 52 )", "arden street oval", "3000", "25 july 1942"], ["st kilda", "10.13 ( 73 )", "fitzroy", "12.14 ( 86 )", "toorak park", "8000", "25 july 1942"], ["melbourne", "14.20 ( 104 )", "essendon", "12.12 ( 84 )", "punt road oval", "6000", "25 july 1942"]], "query": "round_eq { sum { all_rows ; crowd } ; 40000 } = true", "question": "the total crowd attendance for the games listed in the 1942 vfl season was 40,000 ."}, {"topic": "list of tallest buildings in rochester , new york", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Rochester%2C_New_York", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17265352-1.html.csv", "action": "count", "sent": "of the 16 tallest buildings in rochester , new york , four were built in the 1990s .", "annotation": {"scope": "all", "criterion": "greater_than_eq", "value": "1990", "result": "4", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater_eq", "args": ["all_rows", "year", "1990"], "result": null, "ind": 0, "tointer": "select the rows whose year record is greater than or equal to 1990 .", "tostr": "filter_greater_eq { all_rows ; year ; 1990 }"}], "result": "4", "ind": 1, "tostr": "count { filter_greater_eq { all_rows ; year ; 1990 } }", "tointer": "select the rows whose year record is greater than or equal to 1990 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater_eq { all_rows ; year ; 1990 } } ; 4 } = true", "tointer": "select the rows whose year record is greater than or equal to 1990 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_greater_eq { all_rows ; year ; 1990 } } ; 4 } = true", "interpret": "select the rows whose year record is greater than or equal to 1990 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_eq_0": 0, "all_rows_4": 4, "year_5": 5, "1990_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_eq_0": "filter_greater_eq", "all_rows_4": "all_rows", "year_5": "year", "1990_6": "1990", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_eq_0": [1], "all_rows_4": [0], "year_5": [0], "1990_6": [0], "4_7": [2]}, "table_header": ["rank", "name", "height ft / m", "floors", "year"], "table_cont": [["1", "xerox tower", "443 / 135", "30", "1968"], ["2", "bausch & lomb place", "401 / 122", "20", "1995"], ["3", "chase tower", "392 / 119", "27", "1973"], ["4", "kodak tower", "360 / 110", "19", "1914"], ["5", "first federal plaza", "309 / 94", "21", "1976"], ["6", "one hsbc plaza", "284 / 87", "21", "1970"], ["7", "hyatt regency hotel", "271 / 83", "25", "1990"], ["8", "times square building", "260 / 79", "14", "1930"], ["9", "midtown tower", "251 / 77", "18", "1962"], ["10", "saint michael 's church", "246 / 75", "1", "1890"], ["11", "temple building", "218 / 66", "14", "1925"], ["12", "crossroads building", "215 / 66", "15", "1969"], ["13", "eastman school of music student living center", "213 / 65", "14", "1990"], ["14", "seneca towers apartments", "212 / 65", "22", "1968"], ["15", "sibley center", "203 / 62", "12", "1926"], ["16", "clinton square building", "200 / 61", "14", "1990"]], "query": "eq { count { filter_greater_eq { all_rows ; year ; 1990 } } ; 4 } = true", "question": "of the 16 tallest buildings in rochester , new york , four were built in the 1990s ."}, {"topic": "2004 buffalo bills season", "wiki": "https://en.wikipedia.org/wiki/2004_Buffalo_Bills_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18732289-1.html.csv", "action": "count", "sent": "two of these buffalo bills players were picked in the seventh round .", "annotation": {"scope": "all", "criterion": "equal", "value": "7", "result": "2", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "round", "7"], "result": null, "ind": 0, "tointer": "select the rows whose round record is equal to 7 .", "tostr": "filter_eq { all_rows ; round ; 7 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; round ; 7 } }", "tointer": "select the rows whose round record is equal to 7 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; round ; 7 } } ; 2 } = true", "tointer": "select the rows whose round record is equal to 7 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; round ; 7 } } ; 2 } = true", "interpret": "select the rows whose round record is equal to 7 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "round_5": 5, "7_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "round_5": "round", "7_6": "7", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "round_5": [0], "7_6": [0], "2_7": [2]}, "table_header": ["round", "pick", "player", "position", "college"], "table_cont": [["1", "13", "lee evans", "wide receiver", "wisconsin"], ["1", "22", "jp losman", "quarterback", "tulane"], ["3", "74", "tim anderson", "defensive tackle", "ohio state"], ["4", "109", "tim euhus", "tight end", "oregon state"], ["7", "207", "dylan mcfarland", "offensive tackle", "montana"], ["7", "214", "jonathan smith", "wide receiver", "georgia tech"]], "query": "eq { count { filter_eq { all_rows ; round ; 7 } } ; 2 } = true", "question": "two of these buffalo bills players were picked in the seventh round ."}, {"topic": "1939 vfl season", "wiki": "https://en.wikipedia.org/wiki/1939_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10806852-9.html.csv", "action": "majority", "sent": "all games were played on 17 june 1939 .", "annotation": {"scope": "all", "col": "7", "most_or_all": "all", "criterion": "equal", "value": "17 june 1939", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "date", "17 june 1939"], "result": true, "ind": 0, "tointer": "for the date records of all rows , all of them fuzzily match to 17 june 1939 .", "tostr": "all_eq { all_rows ; date ; 17 june 1939 } = true"}, "logic_str": "all_eq { all_rows ; date ; 17 june 1939 } = true", "interpret": "for the date records of all rows , all of them fuzzily match to 17 june 1939 .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "17 june 1939_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "17 june 1939_4": "17 june 1939"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "17 june 1939_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "12.14 ( 86 )", "st kilda", "19.16 ( 130 )", "western oval", "13500", "17 june 1939"], ["carlton", "19.19 ( 133 )", "melbourne", "15.13 ( 103 )", "princes park", "20000", "17 june 1939"], ["south melbourne", "15.18 ( 108 )", "hawthorn", "12.14 ( 86 )", "lake oval", "9000", "17 june 1939"], ["richmond", "12.22 ( 94 )", "geelong", "9.15 ( 69 )", "punt road oval", "17000", "17 june 1939"], ["fitzroy", "11.15 ( 81 )", "essendon", "13.12 ( 90 )", "brunswick street oval", "10000", "17 june 1939"], ["north melbourne", "10.18 ( 78 )", "collingwood", "14.21 ( 105 )", "arden street oval", "14000", "17 june 1939"]], "query": "all_eq { all_rows ; date ; 17 june 1939 } = true", "question": "all games were played on 17 june 1939 ."}, {"topic": "virginia derby", "wiki": "https://en.wikipedia.org/wiki/Virginia_Derby", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12262345-1.html.csv", "action": "count", "sent": "three of the winning horses in the virginia derby were owned by peter vegso .", "annotation": {"scope": "all", "criterion": "equal", "value": "peter vegso", "result": "3", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "owner", "peter vegso"], "result": null, "ind": 0, "tointer": "select the rows whose owner record fuzzily matches to peter vegso .", "tostr": "filter_eq { all_rows ; owner ; peter vegso }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; owner ; peter vegso } }", "tointer": "select the rows whose owner record fuzzily matches to peter vegso . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; owner ; peter vegso } } ; 3 } = true", "tointer": "select the rows whose owner record fuzzily matches to peter vegso . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; owner ; peter vegso } } ; 3 } = true", "interpret": "select the rows whose owner record fuzzily matches to peter vegso . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "owner_5": 5, "peter vegso_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "owner_5": "owner", "peter vegso_6": "peter vegso", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "owner_5": [0], "peter vegso_6": [0], "3_7": [2]}, "table_header": ["year", "winner", "jockey", "trainer", "owner", "distance ( miles )", "time"], "table_cont": [["2013", "war dancer", "alan garcia", "kenneth g mcpeek", "magdalena racing", "1 - 1 / 4", "2:03.57"], ["2012", "silver max", "robby albarado", "dale l romans", "bacon / wells", "1 - 1 / 4", "2:04.05"], ["2011", "air support", "alex solis", "shug mcgaughey", "stuart janney iii", "1 - 1 / 4", "2:00.80"], ["2010", "paddy o'prado", "kent j desormeaux", "dale l romans", "winchell thoroughbreds", "1 - 1 / 4", "2:02.58"], ["2009", "battle of hastings", "tyler baze", "jeff mullins", "michael house", "1 - 1 / 4", "2:03.29"], ["2008", "gio ponti", "garrett gomez", "christophe clement", "castleton lyons", "1 - 1 / 4", "2:02.22"], ["2007", "red giant", "horacio karamanos", "todd a pletcher", "peachtree stable", "1 - 1 / 4", "1:59.62"], ["2006", "go between", "garrett k gomez", "william i mott", "peter vegso", "1 - 1 / 4", "1:59.74"], ["2005", "english channel", "john r velazquez", "todd a pletcher", "james t scatuorchio", "1 - 1 / 4", "2:02.57"], ["2004", "kitten 's joy", "edgar s prado", "dale l romans", "ken and sarah ramsey", "1 - 1 / 4", "2:01.22"], ["2003", "silver tree", "edgar s prado", "william i mott", "peter vegso", "1 - 1 / 4", "2:01.11"], ["2002", "orchard park", "edgar s prado", "william i mott", "peter vegso", "1 - 1 / 4", "2:03.10"], ["2001", "potaro", "brent bartram", "jonathan sheppard", "augustin stable", "1 - 1 / 4", "2:02.18"], ["2000", "lightning paces", "greg hutton", "john j robb", "tulip hill farm", "1 - 1 / 4", "2:02.18"], ["1999", "phi beta doc", "ramon dominguez", "robert w leonard", "dennis foster / r leonard", "1 - 1 / 4", "1:59.97"], ["1998", "crowd pleaser", "jean - luc samyn", "jonathan sheppard", "augustin stable", "1 - 1 / 4", "2:00.28"]], "query": "eq { count { filter_eq { all_rows ; owner ; peter vegso } } ; 3 } = true", "question": "three of the winning horses in the virginia derby were owned by peter vegso ."}, {"topic": "2007 lff lyga", "wiki": "https://en.wikipedia.org/wiki/2007_LFF_Lyga", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18018248-3.html.csv", "action": "superlative", "sent": "in the 2007 lff lyga rodiklis kaunas won the most points .", "annotation": {"scope": "all", "col_superlative": "9", "row_superlative": "1", "value_mentioned": "yes", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "max", "args": ["all_rows", "points"], "result": "51", "ind": 0, "tostr": "max { all_rows ; points }", "tointer": "the maximum points record of all rows is 51 ."}, "51"], "result": true, "ind": 1, "tostr": "eq { max { all_rows ; points } ; 51 }", "tointer": "the maximum points record of all rows is 51 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 2, "tostr": "argmax { all_rows ; points }"}, "club"], "result": "rodiklis kaunas", "ind": 3, "tostr": "hop { argmax { all_rows ; points } ; club }"}, "rodiklis kaunas"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; points } ; club } ; rodiklis kaunas }", "tointer": "the club record of the row with superlative points record is rodiklis kaunas ."}], "result": true, "ind": 5, "tostr": "and { eq { max { all_rows ; points } ; 51 } ; eq { hop { argmax { all_rows ; points } ; club } ; rodiklis kaunas } } = true", "tointer": "the maximum points record of all rows is 51 . the club record of the row with superlative points record is rodiklis kaunas ."}, "logic_str": "and { eq { max { all_rows ; points } ; 51 } ; eq { hop { argmax { all_rows ; points } ; club } ; rodiklis kaunas } } = true", "interpret": "the maximum points record of all rows is 51 . the club record of the row with superlative points record is rodiklis kaunas .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "max_0": 0, "all_rows_7": 7, "points_8": 8, "51_9": 9, "str_eq_4": 4, "str_hop_3": 3, "argmax_2": 2, "all_rows_10": 10, "points_11": 11, "club_12": 12, "rodiklis kaunas_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "max_0": "max", "all_rows_7": "all_rows", "points_8": "points", "51_9": "51", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "argmax_2": "argmax", "all_rows_10": "all_rows", "points_11": "points", "club_12": "club", "rodiklis kaunas_13": "rodiklis kaunas"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "max_0": [1], "all_rows_7": [0], "points_8": [0], "51_9": [1], "str_eq_4": [5], "str_hop_3": [4], "argmax_2": [3], "all_rows_10": [2], "points_11": [2], "club_12": [3], "rodiklis kaunas_13": [4]}, "table_header": ["position", "club", "games played", "wins", "draws", "loses", "goals scored", "goals conceded", "points"], "table_cont": [["1", "rodiklis kaunas", "22", "16", "3", "3", "76", "20", "51"], ["2", "alytis alytus", "22", "14", "5", "3", "61", "14", "47"], ["3", "nev\u0117\u017eis k\u0117dainiai", "22", "13", "6", "3", "44", "17", "45"], ["4", "kruoja pakruojis", "22", "13", "4", "5", "45", "23", "43"], ["5", "lietava jonava", "22", "11", "4", "7", "41", "25", "37"], ["6", "banga garg\u017edai", "22", "9", "7", "6", "42", "12", "34"], ["7", "lkka ir teledema kaunas", "22", "10", "3", "9", "76", "34", "33"], ["8", "kauno j\u0117geriai", "22", "7", "6", "9", "34", "30", "27"], ["9", "vilkmerg\u0117 ukmerg\u0117", "22", "5", "3", "14", "31", "60", "18"], ["10", "glestum klaip\u0117da", "22", "4", "6", "12", "23", "59", "18"], ["11", "tauras ir erra taurag\u0117", "22", "3", "2", "17", "17", "126", "11"], ["12", "fk anyk\u0161\u010diai", "22", "1", "3", "18", "14", "84", "6"]], "query": "and { eq { max { all_rows ; points } ; 51 } ; eq { hop { argmax { all_rows ; points } ; club } ; rodiklis kaunas } } = true", "question": "in the 2007 lff lyga rodiklis kaunas won the most points ."}, {"topic": "2000 carolina panthers season", "wiki": "https://en.wikipedia.org/wiki/2000_Carolina_Panthers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14094220-1.html.csv", "action": "unique", "sent": "leander jordan was the only player that the carolina panthers drafted from indiana university of pennsylvania .", "annotation": {"scope": "all", "row": "3", "col": "5", "col_other": "3", "criterion": "equal", "value": "indiana university of pennsylvania", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "indiana university of pennsylvania"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to indiana university of pennsylvania .", "tostr": "filter_eq { all_rows ; college ; indiana university of pennsylvania }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; college ; indiana university of pennsylvania } }", "tointer": "select the rows whose college record fuzzily matches to indiana university of pennsylvania . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "indiana university of pennsylvania"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to indiana university of pennsylvania .", "tostr": "filter_eq { all_rows ; college ; indiana university of pennsylvania }"}, "player"], "result": "leander jordan", "ind": 2, "tostr": "hop { filter_eq { all_rows ; college ; indiana university of pennsylvania } ; player }"}, "leander jordan"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; college ; indiana university of pennsylvania } ; player } ; leander jordan }", "tointer": "the player record of this unqiue row is leander jordan ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; college ; indiana university of pennsylvania } } ; eq { hop { filter_eq { all_rows ; college ; indiana university of pennsylvania } ; player } ; leander jordan } } = true", "tointer": "select the rows whose college record fuzzily matches to indiana university of pennsylvania . there is only one such row in the table . the player record of this unqiue row is leander jordan ."}, "logic_str": "and { only { filter_eq { all_rows ; college ; indiana university of pennsylvania } } ; eq { hop { filter_eq { all_rows ; college ; indiana university of pennsylvania } ; player } ; leander jordan } } = true", "interpret": "select the rows whose college record fuzzily matches to indiana university of pennsylvania . there is only one such row in the table . the player record of this unqiue row is leander jordan .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "college_7": 7, "indiana university of pennsylvania_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "leander jordan_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "college_7": "college", "indiana university of pennsylvania_8": "indiana university of pennsylvania", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "leander jordan_10": "leander jordan"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "college_7": [0], "indiana university of pennsylvania_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "leander jordan_10": [3]}, "table_header": ["round", "pick", "player", "position", "college"], "table_cont": [["1", "23", "rashard anderson", "defensive back", "jackson state"], ["2", "57", "deon grant", "free safety", "tennessee"], ["3", "82", "leander jordan", "offensive tackle", "indiana university of pennsylvania"], ["4", "120", "alvin mckinley", "defensive end", "mississippi state"], ["5", "147", "gillis wilson", "defensive end", "southern u"], ["6", "182", "jeno james", "guard", "auburn"], ["7", "221", "lester towns", "middle linebacker", "washington"]], "query": "and { only { filter_eq { all_rows ; college ; indiana university of pennsylvania } } ; eq { hop { filter_eq { all_rows ; college ; indiana university of pennsylvania } ; player } ; leander jordan } } = true", "question": "leander jordan was the only player that the carolina panthers drafted from indiana university of pennsylvania ."}, {"topic": "2000 bradford bulls season", "wiki": "https://en.wikipedia.org/wiki/2000_Bradford_Bulls_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10814470-6.html.csv", "action": "aggregation", "sent": "in the bradford bull 's 2000 season , the bulls scored an average of 34.8 points in the challenge cup .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "34.8", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "score"], "result": "34.8", "ind": 0, "tostr": "avg { all_rows ; score }"}, "34.8"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; score } ; 34.8 } = true", "tointer": "the average of the score record of all rows is 34.8 ."}, "logic_str": "round_eq { avg { all_rows ; score } ; 34.8 } = true", "interpret": "the average of the score record of all rows is 34.8 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "score_4": 4, "34.8_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "score_4": "score", "34.8_5": "34.8"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "score_4": [0], "34.8_5": [1]}, "table_header": ["date", "competition", "venue", "result", "score", "goals"], "table_cont": [["12 / 2 / 00", "cup", "odsal stadium", "w", "32 - 4", "hpaul 6 / 6"], ["27 / 2 / 00", "cup", "belle vue", "w", "46 - 0", "hpaul 5 / 9"], ["12 / 3 / 00", "cup", "shay stadium", "w", "28 - 18", "hpaul 6 / 6"], ["25 / 3 / 00", "cup", "headingley stadium", "w", "44 - 20", "hpaul 8 / 8"], ["29 / 4 / 00", "cup", "murrayfield stadium", "w", "24 - 18", "hpaul 4 / 4"]], "query": "round_eq { avg { all_rows ; score } ; 34.8 } = true", "question": "in the bradford bull 's 2000 season , the bulls scored an average of 34.8 points in the challenge cup ."}, {"topic": "tri - eastern conference ( ihsaa )", "wiki": "https://en.wikipedia.org/wiki/Tri-Eastern_Conference_%28IHSAA%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18973139-2.html.csv", "action": "count", "sent": "two schools in the tri-eastern conference are located in liberty .", "annotation": {"scope": "all", "criterion": "equal", "value": "liberty", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "location", "liberty"], "result": null, "ind": 0, "tointer": "select the rows whose location record fuzzily matches to liberty .", "tostr": "filter_eq { all_rows ; location ; liberty }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; location ; liberty } }", "tointer": "select the rows whose location record fuzzily matches to liberty . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; location ; liberty } } ; 2 } = true", "tointer": "select the rows whose location record fuzzily matches to liberty . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; location ; liberty } } ; 2 } = true", "interpret": "select the rows whose location record fuzzily matches to liberty . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "location_5": 5, "liberty_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "location_5": "location", "liberty_6": "liberty", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "location_5": [0], "liberty_6": [0], "2_7": [2]}, "table_header": ["school", "location", "mascot", "county", "year joined", "previous conference", "year left", "conference joined"], "table_cont": [["cambridge city", "cambridge city", "wampus cats", "89 wayne", "1962", "eastern indiana", "1965", "none ( consolidated into lincoln )"], ["knightstown", "knightstown", "panthers", "32 henry", "1962", "east central", "1969", "big blue river"], ["liberty", "liberty", "lancers", "81 union", "1962", "east central / whitewater valley", "1965", "none ( consolidated into short )"], ["short", "liberty", "lancers", "81 union", "1965", "none ( new school )", "1973", "none ( consolidated into union county )"], ["brookville", "brookville", "greyhounds", "24 franklin", "1966", "eastern indiana", "1973", "eastern indiana"]], "query": "eq { count { filter_eq { all_rows ; location ; liberty } } ; 2 } = true", "question": "two schools in the tri-eastern conference are located in liberty ."}, {"topic": "200 metres", "wiki": "https://en.wikipedia.org/wiki/200_metres", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1833981-2.html.csv", "action": "count", "sent": "of the runners listed seven have completed the 200 metres in less than 20.30 seconds .", "annotation": {"scope": "all", "criterion": "less_than", "value": "20.3", "result": "7", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_less", "args": ["all_rows", "result", "20.3"], "result": null, "ind": 0, "tointer": "select the rows whose result record is less than 20.3 .", "tostr": "filter_less { all_rows ; result ; 20.3 }"}], "result": "7", "ind": 1, "tostr": "count { filter_less { all_rows ; result ; 20.3 } }", "tointer": "select the rows whose result record is less than 20.3 . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_less { all_rows ; result ; 20.3 } } ; 7 } = true", "tointer": "select the rows whose result record is less than 20.3 . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_less { all_rows ; result ; 20.3 } } ; 7 } = true", "interpret": "select the rows whose result record is less than 20.3 . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_less_0": 0, "all_rows_4": 4, "result_5": 5, "20.3_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_less_0": "filter_less", "all_rows_4": "all_rows", "result_5": "result", "20.3_6": "20.3", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_less_0": [1], "all_rows_4": [0], "result_5": [0], "20.3_6": [0], "7_7": [2]}, "table_header": ["rank", "result", "athlete", "date", "location"], "table_cont": [["1", "19.92", "frankie fredericks", "18 february 1996", "lievin"], ["2", "20.10", "wallace spearmon", "11 march 2005", "fayetteville"], ["3", "20.25", "linford christie", "19 february 1995", "lievin"], ["4", "20.26", "obadele thompson", "6 march 1999", "maebashi"], ["4", "20.26", "shawn crawford", "10 march 2000", "fayetteville"], ["4", "20.26", "john capel", "10 march 2000", "fayetteville"], ["7", "20.27", "walter dix", "10 march 2006", "fayetteville"], ["8", "20.30", "xavier carter", "10 march 2006", "fayetteville"], ["9", "20.31", "coby miller", "3 march 2001", "atlanta"], ["10", "20.32", "rohsaan griffin", "27 february 1999", "atlanta"], ["10", "20.32", "kevin little", "5 march 1999", "maebashi"]], "query": "eq { count { filter_less { all_rows ; result ; 20.3 } } ; 7 } = true", "question": "of the runners listed seven have completed the 200 metres in less than 20.30 seconds ."}, {"topic": "raphael butler", "wiki": "https://en.wikipedia.org/wiki/Raphael_Butler", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10516844-3.html.csv", "action": "comparative", "sent": "raphael butler 's fight against richard white lasted more rounds than his fight against jeremy beck .", "annotation": {"row_1": "5", "row_2": "6", "col": "5", "col_other": "3", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "richard white"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to richard white .", "tostr": "filter_eq { all_rows ; opponent ; richard white }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; opponent ; richard white } ; round }", "tointer": "select the rows whose opponent record fuzzily matches to richard white . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "jeremy beck"], "result": null, "ind": 1, "tointer": "select the rows whose opponent record fuzzily matches to jeremy beck .", "tostr": "filter_eq { all_rows ; opponent ; jeremy beck }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; opponent ; jeremy beck } ; round }", "tointer": "select the rows whose opponent record fuzzily matches to jeremy beck . take the round record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; opponent ; richard white } ; round } ; hop { filter_eq { all_rows ; opponent ; jeremy beck } ; round } } = true", "tointer": "select the rows whose opponent record fuzzily matches to richard white . take the round record of this row . select the rows whose opponent record fuzzily matches to jeremy beck . take the round record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; opponent ; richard white } ; round } ; hop { filter_eq { all_rows ; opponent ; jeremy beck } ; round } } = true", "interpret": "select the rows whose opponent record fuzzily matches to richard white . take the round record of this row . select the rows whose opponent record fuzzily matches to jeremy beck . take the round record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "opponent_7": 7, "richard white_8": 8, "round_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "opponent_11": 11, "jeremy beck_12": 12, "round_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "opponent_7": "opponent", "richard white_8": "richard white", "round_9": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "opponent_11": "opponent", "jeremy beck_12": "jeremy beck", "round_13": "round"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "opponent_7": [0], "richard white_8": [0], "round_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "opponent_11": [1], "jeremy beck_12": [1], "round_13": [3]}, "table_header": ["res", "record", "opponent", "method", "round", "time", "location"], "table_cont": [["win", "7 - 0", "joseph bryant", "tko ( strikes )", "1", "1:04", "rio rancho , new mexico , united states"], ["win", "6 - 0", "jeremiah o'neal", "ko ( punches )", "1", "2:19", "thackerville , oklahoma , united states"], ["win", "5 - 0", "brett murphy", "ko ( punch )", "1", "0:13", "st paul , minnesota , united states"], ["win", "4 - 0", "steven shaw", "submission ( armbar )", "1", "4:35", "maplewood , minnesota , united states"], ["win", "3 - 0", "richard white", "submission ( punches )", "2", "3:18", "rochester , minnesota , united states"], ["win", "2 - 0", "jeremy beck", "ko ( punches )", "1", "3:36", "red wing , minnesota , united states"], ["win", "1 - 0", "gabe hobbs", "ko ( punch )", "1", "0:36", "welch , minnesota , united states"]], "query": "greater { hop { filter_eq { all_rows ; opponent ; richard white } ; round } ; hop { filter_eq { all_rows ; opponent ; jeremy beck } ; round } } = true", "question": "raphael butler 's fight against richard white lasted more rounds than his fight against jeremy beck ."}, {"topic": "fahed attal", "wiki": "https://en.wikipedia.org/wiki/Fahed_Attal", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14033387-1.html.csv", "action": "count", "sent": "fahed attal scored 6 times on 1 april 2006 in dhaka .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "1 april 2006", "result": "6", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "1 april 2006"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to 1 april 2006 .", "tostr": "filter_eq { all_rows ; date ; 1 april 2006 }"}], "result": "6", "ind": 1, "tostr": "count { filter_eq { all_rows ; date ; 1 april 2006 } }", "tointer": "select the rows whose date record fuzzily matches to 1 april 2006 . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; date ; 1 april 2006 } } ; 6 } = true", "tointer": "select the rows whose date record fuzzily matches to 1 april 2006 . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_eq { all_rows ; date ; 1 april 2006 } } ; 6 } = true", "interpret": "select the rows whose date record fuzzily matches to 1 april 2006 . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "1 april 2006_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "1 april 2006_6": "1 april 2006", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "1 april 2006_6": [0], "6_7": [2]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["16 february 2006", "bahrain national stadium , manama", "2 - 0", "2 - 0", "friendly"], ["18 february 2006", "bahrain national stadium , manama", "1 - 0", "1 - 0", "friendly"], ["18 february 2006", "bahrain national stadium , manama", "2 - 0", "2 - 0", "friendly"], ["1 march 2006", "king abdullah stadium , amman", "1 - 0", "1 - 0", "2007 afc asian cup qualifier"], ["1 april 2006", "bangabandhu stadium , dhaka", "2 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "3 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "5 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "6 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "8 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "11 - 0", "11 - 0", "2006 afc challenge cup"], ["3 april 2006", "bangabandhu stadium , dhaka", "3 - 0", "4 - 0", "2006 afc challenge cup"], ["5 april 2006", "bangabandhu stadium , dhaka", "1 - 0", "1 - 1", "2006 afc challenge cup"], ["8 march 2012", "dasarath rangasala stadium , kathmandu", "2 - 0", "2 - 0", "2012 afc challenge cup"], ["19 march 2012", "dasarath rangasala stadium , kathmandu", "3 - 4", "3 - 4", "2012 afc challenge cup"]], "query": "eq { count { filter_eq { all_rows ; date ; 1 april 2006 } } ; 6 } = true", "question": "fahed attal scored 6 times on 1 april 2006 in dhaka ."}, {"topic": "list of largest airlines in south america", "wiki": "https://en.wikipedia.org/wiki/List_of_largest_airlines_in_South_America", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11898258-5.html.csv", "action": "superlative", "sent": "of the largest airlines in south america , the one with the best rank is tam .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "rank"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; rank }"}, "airline"], "result": "tam", "ind": 1, "tostr": "hop { argmin { all_rows ; rank } ; airline }"}, "tam"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; rank } ; airline } ; tam } = true", "tointer": "select the row whose rank record of all rows is minimum . the airline record of this row is tam ."}, "logic_str": "eq { hop { argmin { all_rows ; rank } ; airline } ; tam } = true", "interpret": "select the row whose rank record of all rows is minimum . the airline record of this row is tam .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "rank_5": 5, "airline_6": 6, "tam_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "rank_5": "rank", "airline_6": "airline", "tam_7": "tam"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "rank_5": [0], "airline_6": [1], "tam_7": [2]}, "table_header": ["rank", "airline", "country", "remarks", "alliance"], "table_cont": [["1", "tam", "brazil", "in process of fusion with lan to form latam", "star alliance"], ["2", "gol", "brazil", "n / a", "n / a"], ["3", "lan airlines", "chile", "in process of merger with tam to form latam", "oneworld"], ["4", "avianca", "colombia", "it only includes avianca colombia", "star alliance"], ["5", "aerol\u00e3\u00adneas argentinas", "argentina", "including austral", "skyteam ( 2012 )"]], "query": "eq { hop { argmin { all_rows ; rank } ; airline } ; tam } = true", "question": "of the largest airlines in south america , the one with the best rank is tam ."}, {"topic": "juan bravo murillo", "wiki": "https://en.wikipedia.org/wiki/Juan_Bravo_Murillo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26362472-1.html.csv", "action": "majority", "sent": "most of all elections in badajoz province where juan bravo murillo was involved were for fregenal de la sierra district .", "annotation": {"scope": "subset", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "fregenal de la sierra", "subset": {"col": "4", "criterion": "equal", "value": "badajoz"}}, "logic": {"func": "most_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "province", "badajoz"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; province ; badajoz }", "tointer": "select the rows whose province record fuzzily matches to badajoz ."}, "district", "fregenal de la sierra"], "result": true, "ind": 1, "tointer": "select the rows whose province record fuzzily matches to badajoz . for the district records of these rows , most of them fuzzily match to fregenal de la sierra .", "tostr": "most_eq { filter_eq { all_rows ; province ; badajoz } ; district ; fregenal de la sierra } = true"}, "logic_str": "most_eq { filter_eq { all_rows ; province ; badajoz } ; district ; fregenal de la sierra } = true", "interpret": "select the rows whose province record fuzzily matches to badajoz . for the district records of these rows , most of them fuzzily match to fregenal de la sierra .", "num_func": 2, "nid": 2, "g_ids": {"most_str_eq_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "province_4": 4, "badajoz_5": 5, "district_6": 6, "fregenal de la sierra_7": 7}, "g_ids_features": {"most_str_eq_1": "most_str_eq", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "province_4": "province", "badajoz_5": "badajoz", "district_6": "district", "fregenal de la sierra_7": "fregenal de la sierra"}, "g_adj": {"most_str_eq_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "province_4": [0], "badajoz_5": [0], "district_6": [1], "fregenal de la sierra_7": [1]}, "table_header": ["election number", "election date", "district", "province", "took office", "left office"], "table_cont": [["9", "1837 - 9 - 22", "large", "seville", "1837 - 12 - 19", "1839 - 06 - 01"], ["11", "1840 - 1 - 19", "large", "\u00e1vila", "1840 - 02 - 21", "1840 - 10 - 11"], ["14", "1843 - 9 - 15", "large", "badajoz", "1843 - 10 - 18", "1844 - 07 - 10"], ["15", "1844 - 9 - 3", "large", "badajoz", "1844 - 10 - 14", "1846 - 10 - 31"], ["16", "1846 - 6 - 21", "fregenal de la sierra", "badajoz", "1847 - 01 - 03", "1848 - 12 - 18"], ["16", "1846 - 6 - 21", "fregenal de la sierra", "badajoz", "1847 - 12 - 20", "1850 - 08 - 04"], ["17", "1850 - 8 - 31", "fregenal de la sierra", "badajoz", "1850 - 11 - 06", "1851 - 04 - 07"], ["17", "1850 - 8 - 31", "huelva", "huelva", "1850 - 11 - 06", "1850 - 11 - 15"], ["18", "1851 - 5 - 10", "elche de la sierra", "albacete", "1851 - 06 - 04", "1851 - 06 - 17"], ["18", "1851 - 5 - 10", "fregenal de la sierra", "badajoz", "1851 - 06 - 04", "1852 - 12 - 02"], ["19", "1853 - 2 - 4", "fregenal de la sierra", "badajoz", "1853 - 03 - 15", "1853 - 12 - 10"]], "query": "most_eq { filter_eq { all_rows ; province ; badajoz } ; district ; fregenal de la sierra } = true", "question": "most of all elections in badajoz province where juan bravo murillo was involved were for fregenal de la sierra district ."}, {"topic": "soybean oil", "wiki": "https://en.wikipedia.org/wiki/Soybean_oil", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2540803-2.html.csv", "action": "comparative", "sent": "soybean oil has a greater amount of polyunsaturated fat than rice bran oil .", "annotation": {"row_1": "2", "row_2": "7", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "", "soybean oil"], "result": null, "ind": 0, "tointer": "select the rows whose record fuzzily matches to soybean oil .", "tostr": "filter_eq { all_rows ; ; soybean oil }"}, "polyunsaturated fat"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; ; soybean oil } ; polyunsaturated fat }", "tointer": "select the rows whose record fuzzily matches to soybean oil . take the polyunsaturated fat record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "", "rice bran oil"], "result": null, "ind": 1, "tointer": "select the rows whose record fuzzily matches to rice bran oil .", "tostr": "filter_eq { all_rows ; ; rice bran oil }"}, "polyunsaturated fat"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; ; rice bran oil } ; polyunsaturated fat }", "tointer": "select the rows whose record fuzzily matches to rice bran oil . take the polyunsaturated fat record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; ; soybean oil } ; polyunsaturated fat } ; hop { filter_eq { all_rows ; ; rice bran oil } ; polyunsaturated fat } } = true", "tointer": "select the rows whose record fuzzily matches to soybean oil . take the polyunsaturated fat record of this row . select the rows whose record fuzzily matches to rice bran oil . take the polyunsaturated fat record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; ; soybean oil } ; polyunsaturated fat } ; hop { filter_eq { all_rows ; ; rice bran oil } ; polyunsaturated fat } } = true", "interpret": "select the rows whose record fuzzily matches to soybean oil . take the polyunsaturated fat record of this row . select the rows whose record fuzzily matches to rice bran oil . take the polyunsaturated fat record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "_7": 7, "soybean oil_8": 8, "polyunsaturated fat_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "_11": 11, "rice bran oil_12": 12, "polyunsaturated fat_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "_7": "", "soybean oil_8": "soybean oil", "polyunsaturated fat_9": "polyunsaturated fat", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "_11": "", "rice bran oil_12": "rice bran oil", "polyunsaturated fat_13": "polyunsaturated fat"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "_7": [0], "soybean oil_8": [0], "polyunsaturated fat_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "_11": [1], "rice bran oil_12": [1], "polyunsaturated fat_13": [3]}, "table_header": ["", "total fat", "saturated fat", "monounsaturated fat", "polyunsaturated fat", "smoke point"], "table_cont": [["sunflower oil", "100 g", "11 g", "20 g ( 84 g in high oleic variety )", "69 g ( 4 g in high oleic variety )", "degree"], ["soybean oil", "100 g", "16 g", "23 g", "58 g", "degree"], ["canola oil", "100 g", "7 g", "63 g", "28 g", "degree"], ["olive oil", "100 g", "14 g", "73 g", "11 g", "degree"], ["corn oil", "100 g", "15 g", "30 g", "55 g", "degree"], ["peanut oil", "100 g", "17 g", "46 g", "32 g", "degree"], ["rice bran oil", "100 g", "25 g", "38 g", "37 g", "degree"], ["vegetable shortening ( hydrogenated )", "71 g", "23 g ( 34 % )", "8 g ( 11 % )", "37 g ( 52 % )", "degree"], ["lard", "100 g", "39 g", "45 g", "11 g", "degree"], ["suet", "94 g", "52 g ( 55 % )", "32 g ( 34 % )", "3 g ( 3 % )", "200degree ( 400degree )"]], "query": "greater { hop { filter_eq { all_rows ; ; soybean oil } ; polyunsaturated fat } ; hop { filter_eq { all_rows ; ; rice bran oil } ; polyunsaturated fat } } = true", "question": "soybean oil has a greater amount of polyunsaturated fat than rice bran oil ."}, {"topic": "1978 vfl season", "wiki": "https://en.wikipedia.org/wiki/1978_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10887680-17.html.csv", "action": "count", "sent": "there were 6 game venues used during the 1978 vfl season .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "6", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "venue"], "result": null, "ind": 0, "tointer": "select the rows whose venue record is arbitrary .", "tostr": "filter_all { all_rows ; venue }"}], "result": "6", "ind": 1, "tostr": "count { filter_all { all_rows ; venue } }", "tointer": "select the rows whose venue record is arbitrary . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; venue } } ; 6 } = true", "tointer": "select the rows whose venue record is arbitrary . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_all { all_rows ; venue } } ; 6 } = true", "interpret": "select the rows whose venue record is arbitrary . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "venue_5": 5, "6_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "venue_5": "venue", "6_6": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "venue_5": [0], "6_6": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "20.21 ( 141 )", "melbourne", "13.11 ( 89 )", "moorabbin oval", "13118", "29 july 1978"], ["north melbourne", "18.14 ( 122 )", "geelong", "10.16 ( 76 )", "arden street oval", "15775", "29 july 1978"], ["south melbourne", "15.15 ( 105 )", "footscray", "13.13 ( 91 )", "lake oval", "14112", "29 july 1978"], ["richmond", "20.16 ( 136 )", "essendon", "13.18 ( 96 )", "mcg", "41878", "29 july 1978"], ["hawthorn", "13.17 ( 95 )", "carlton", "18.11 ( 119 )", "princes park", "28132", "29 july 1978"], ["collingwood", "16.11 ( 107 )", "fitzroy", "11.11 ( 77 )", "vfl park", "32246", "29 july 1978"]], "query": "eq { count { filter_all { all_rows ; venue } } ; 6 } = true", "question": "there were 6 game venues used during the 1978 vfl season ."}, {"topic": "hatem aqel", "wiki": "https://en.wikipedia.org/wiki/Hatem_Aqel", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11048203-1.html.csv", "action": "majority", "sent": "most of the games that hatem aqel played from 2002 to 2013 were in amman .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "amman", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "venue", "amman"], "result": true, "ind": 0, "tointer": "for the venue records of all rows , most of them fuzzily match to amman .", "tostr": "most_eq { all_rows ; venue ; amman } = true"}, "logic_str": "most_eq { all_rows ; venue ; amman } = true", "interpret": "for the venue records of all rows , most of them fuzzily match to amman .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "venue_3": 3, "amman_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "venue_3": "venue", "amman_4": "amman"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "venue_3": [0], "amman_4": [0]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["16 december 2002", "kuwait", "1 - 1", "draw", "2002 arab nations cup"], ["17 october 2003", "amman", "1 - 0", "win", "2004 afc asian cup qualification"], ["18 february 2004", "amman", "5 - 0", "win", "2006 fifa world cup qualification"], ["18 august 2004", "amman", "1 - 1", "draw", "friendly"], ["14 february 2006", "amman", "2 - 0", "win", "friendly"], ["22 february 2006", "amman", "3 - 0", "win", "2007 afc asian cup qualification"], ["28 january 2009", "singapore", "2 - 1", "loss", "2011 afc asian cup qualification"], ["9 september 2009", "amman", "1 - 3", "loss", "friendly"], ["28 october 2013", "amman", "1 - 0", "win", "friendly"]], "query": "most_eq { all_rows ; venue ; amman } = true", "question": "most of the games that hatem aqel played from 2002 to 2013 were in amman ."}, {"topic": "list of derbyshire list a cricket records", "wiki": "https://en.wikipedia.org/wiki/List_of_Derbyshire_List_A_cricket_records", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11241613-4.html.csv", "action": "count", "sent": "kim barnett was a batsman in two wicket partnerships .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "kim barnett", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "batsmen", "kim barnett"], "result": null, "ind": 0, "tointer": "select the rows whose batsmen record fuzzily matches to kim barnett .", "tostr": "filter_eq { all_rows ; batsmen ; kim barnett }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; batsmen ; kim barnett } }", "tointer": "select the rows whose batsmen record fuzzily matches to kim barnett . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; batsmen ; kim barnett } } ; 2 } = true", "tointer": "select the rows whose batsmen record fuzzily matches to kim barnett . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; batsmen ; kim barnett } } ; 2 } = true", "interpret": "select the rows whose batsmen record fuzzily matches to kim barnett . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "batsmen_5": 5, "kim barnett_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "batsmen_5": "batsmen", "kim barnett_6": "kim barnett", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "batsmen_5": [0], "kim barnett_6": [0], "2_7": [2]}, "table_header": ["wicket partnership", "runs", "batsmen", "opponents", "venue", "season"], "table_cont": [["1st", "232", "kim barnett john morris", "v somerset", "taunton", "1990"], ["2nd", "286", "iain anderson alan hill", "v cornwall", "derby", "1986"], ["3rd", "191", "andrew gait chris bassano", "v glamorgan", "cardiff", "2003"], ["4th", "165", "john morris geoff miller", "v gloucestershire", "gloucestershire", "1984"], ["5th", "158", "kim barnett bruce roberts", "v essex", "derby", "1984"], ["6th", "126", "chris taylor ant botha", "v durham", "derby", "2006"], ["7th", "106", "james bryant graeme welch", "v sussex", "hove", "2004"], ["8th", "95", "adrian rollins phillip defreitas", "v worcestershire", "worcester", "1998"], ["9th", "105", "dallas moir bob taylor", "v kent", "derby", "1984"], ["10th", "60", "kevin dean devon malcolm", "v surrey", "the oval", "1996"]], "query": "eq { count { filter_eq { all_rows ; batsmen ; kim barnett } } ; 2 } = true", "question": "kim barnett was a batsman in two wicket partnerships ."}, {"topic": "2008 women 's british open", "wiki": "https://en.wikipedia.org/wiki/2008_Women%27s_British_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18594233-4.html.csv", "action": "count", "sent": "7 players tied for second place in the 2008 women 's british open .", "annotation": {"scope": "all", "criterion": "equal", "value": "t2", "result": "7", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "place", "t2"], "result": null, "ind": 0, "tointer": "select the rows whose place record fuzzily matches to t2 .", "tostr": "filter_eq { all_rows ; place ; t2 }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; place ; t2 } }", "tointer": "select the rows whose place record fuzzily matches to t2 . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; place ; t2 } } ; 7 } = true", "tointer": "select the rows whose place record fuzzily matches to t2 . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; place ; t2 } } ; 7 } = true", "interpret": "select the rows whose place record fuzzily matches to t2 . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "place_5": 5, "t2_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "place_5": "place", "t2_6": "t2", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "place_5": [0], "t2_6": [0], "7_7": [2]}, "table_header": ["place", "player", "country", "score", "to par"], "table_cont": [["1", "juli inkster", "united states", "65", "7"], ["t2", "momoko ueda", "japan", "66", "6"], ["t2", "laura diaz", "united states", "66", "6"], ["t2", "ji young oh", "south korea", "66", "6"], ["t2", "yuri fudoh", "japan", "66", "6"], ["t2", "johanna head", "england", "66", "6"], ["t2", "stacy prammanasudh", "united states", "66", "6"], ["t2", "jiyai shin", "south korea", "66", "6"], ["t9", "kristy mcpherson", "united states", "67", "5"], ["t9", "karen stupples", "england", "67", "5"], ["t9", "rebecca hudson", "england", "67", "5"], ["t9", "sherri steinhauer", "united states", "67", "5"]], "query": "eq { count { filter_eq { all_rows ; place ; t2 } } ; 7 } = true", "question": "7 players tied for second place in the 2008 women 's british open ."}, {"topic": "200 metres", "wiki": "https://en.wikipedia.org/wiki/200_metres", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1833981-2.html.csv", "action": "comparative", "sent": "shawn crawford has run the 200 metres in a faster time than kevin little .", "annotation": {"row_1": "5", "row_2": "11", "col": "2", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "athlete", "shawn crawford"], "result": null, "ind": 0, "tointer": "select the rows whose athlete record fuzzily matches to shawn crawford .", "tostr": "filter_eq { all_rows ; athlete ; shawn crawford }"}, "result"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; athlete ; shawn crawford } ; result }", "tointer": "select the rows whose athlete record fuzzily matches to shawn crawford . take the result record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "athlete", "kevin little"], "result": null, "ind": 1, "tointer": "select the rows whose athlete record fuzzily matches to kevin little .", "tostr": "filter_eq { all_rows ; athlete ; kevin little }"}, "result"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; athlete ; kevin little } ; result }", "tointer": "select the rows whose athlete record fuzzily matches to kevin little . take the result record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; athlete ; shawn crawford } ; result } ; hop { filter_eq { all_rows ; athlete ; kevin little } ; result } } = true", "tointer": "select the rows whose athlete record fuzzily matches to shawn crawford . take the result record of this row . select the rows whose athlete record fuzzily matches to kevin little . take the result record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; athlete ; shawn crawford } ; result } ; hop { filter_eq { all_rows ; athlete ; kevin little } ; result } } = true", "interpret": "select the rows whose athlete record fuzzily matches to shawn crawford . take the result record of this row . select the rows whose athlete record fuzzily matches to kevin little . take the result record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "athlete_7": 7, "shawn crawford_8": 8, "result_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "athlete_11": 11, "kevin little_12": 12, "result_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "athlete_7": "athlete", "shawn crawford_8": "shawn crawford", "result_9": "result", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "athlete_11": "athlete", "kevin little_12": "kevin little", "result_13": "result"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "athlete_7": [0], "shawn crawford_8": [0], "result_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "athlete_11": [1], "kevin little_12": [1], "result_13": [3]}, "table_header": ["rank", "result", "athlete", "date", "location"], "table_cont": [["1", "19.92", "frankie fredericks", "18 february 1996", "lievin"], ["2", "20.10", "wallace spearmon", "11 march 2005", "fayetteville"], ["3", "20.25", "linford christie", "19 february 1995", "lievin"], ["4", "20.26", "obadele thompson", "6 march 1999", "maebashi"], ["4", "20.26", "shawn crawford", "10 march 2000", "fayetteville"], ["4", "20.26", "john capel", "10 march 2000", "fayetteville"], ["7", "20.27", "walter dix", "10 march 2006", "fayetteville"], ["8", "20.30", "xavier carter", "10 march 2006", "fayetteville"], ["9", "20.31", "coby miller", "3 march 2001", "atlanta"], ["10", "20.32", "rohsaan griffin", "27 february 1999", "atlanta"], ["10", "20.32", "kevin little", "5 march 1999", "maebashi"]], "query": "less { hop { filter_eq { all_rows ; athlete ; shawn crawford } ; result } ; hop { filter_eq { all_rows ; athlete ; kevin little } ; result } } = true", "question": "shawn crawford has run the 200 metres in a faster time than kevin little ."}, {"topic": "1968 vfl season", "wiki": "https://en.wikipedia.org/wiki/1968_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10808933-12.html.csv", "action": "ordinal", "sent": "mcg recorded the highest crowd participation during the 1968 vfl season .", "annotation": {"row": "5", "col": "6", "order": "1", "col_other": "5", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "crowd", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; crowd ; 1 }"}, "venue"], "result": "mcg", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; crowd ; 1 } ; venue }"}, "mcg"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; mcg } = true", "tointer": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is mcg ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; mcg } = true", "interpret": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is mcg .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "crowd_5": 5, "1_6": 6, "venue_7": 7, "mcg_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "crowd_5": "crowd", "1_6": "1", "venue_7": "venue", "mcg_8": "mcg"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "crowd_5": [0], "1_6": [0], "venue_7": [1], "mcg_8": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "15.19 ( 109 )", "south melbourne", "6.9 ( 45 )", "moorabbin oval", "19059", "6 july 1968"], ["fitzroy", "11.14 ( 80 )", "melbourne", "14.16 ( 100 )", "princes park", "8530", "6 july 1968"], ["north melbourne", "8.9 ( 57 )", "footscray", "9.18 ( 72 )", "arden street oval", "7844", "6 july 1968"], ["hawthorn", "11.17 ( 83 )", "essendon", "17.10 ( 112 )", "glenferrie oval", "12480", "6 july 1968"], ["richmond", "17.12 ( 114 )", "collingwood", "17.15 ( 117 )", "mcg", "43165", "6 july 1968"], ["geelong", "8.7 ( 55 )", "carlton", "9.9 ( 63 )", "kardinia park", "25007", "6 july 1968"]], "query": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; mcg } = true", "question": "mcg recorded the highest crowd participation during the 1968 vfl season ."}, {"topic": "batangas state university", "wiki": "https://en.wikipedia.org/wiki/Batangas_State_University", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18965074-1.html.csv", "action": "count", "sent": "six campus extensions for the university were founded from 1994 onwards .", "annotation": {"scope": "all", "criterion": "greater_than_eq", "value": "1994", "result": "6", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater_eq", "args": ["all_rows", "founded", "1994"], "result": null, "ind": 0, "tointer": "select the rows whose founded record is greater than or equal to 1994 .", "tostr": "filter_greater_eq { all_rows ; founded ; 1994 }"}], "result": "6", "ind": 1, "tostr": "count { filter_greater_eq { all_rows ; founded ; 1994 } }", "tointer": "select the rows whose founded record is greater than or equal to 1994 . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater_eq { all_rows ; founded ; 1994 } } ; 6 } = true", "tointer": "select the rows whose founded record is greater than or equal to 1994 . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_greater_eq { all_rows ; founded ; 1994 } } ; 6 } = true", "interpret": "select the rows whose founded record is greater than or equal to 1994 . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_eq_0": 0, "all_rows_4": 4, "founded_5": 5, "1994_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_eq_0": "filter_greater_eq", "all_rows_4": "all_rows", "founded_5": "founded", "1994_6": "1994", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_eq_0": [1], "all_rows_4": [0], "founded_5": [0], "1994_6": [0], "6_7": [2]}, "table_header": ["campus", "executive director", "founded", "type", "location"], "table_cont": [["governor pablo borbon campus i", "rogelio a antenor", "1903", "main ( flagship )", "poblacion , batangas city"], ["governor pablo borbon campus ii", "expedito v acorda", "1984", "main", "brgy alangilan , batangas city"], ["apolinario r apacible school of fisheries campus", "enrico m dalangin", "1952", "satellite", "nasugbu , batangas"], ["jose p laurel polytechnic college campus", "jessie a montalbo", "1968", "satellite", "malvar , batangas"], ["claro m recto campus", "edgard e valdez", "2000", "extension", "lipa city"], ["balayan campus", "israel p pe\u00f1ero", "1994", "extension", "balayan , batangas"], ["lemery campus", "israel p pe\u00f1ero", "2003", "extension", "lemery , batangas"], ["lobo campus", "rogelio a antenor", "2003", "extension", "lobo , batangas"], ["rosario campus", "edgard e valdez", "2000", "extension", "rosario , batangas"], ["san juan campus", "edgard e valdez", "2000", "extension", "san juan , batangas"]], "query": "eq { count { filter_greater_eq { all_rows ; founded ; 1994 } } ; 6 } = true", "question": "six campus extensions for the university were founded from 1994 onwards ."}, {"topic": "2008 - 09 los angeles clippers season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Los_Angeles_Clippers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17323529-9.html.csv", "action": "majority", "sent": "baron davis had the majority of the high assists performances in the 2008 - 09 los angeles clippers season .", "annotation": {"scope": "all", "col": "7", "most_or_all": "most", "criterion": "fuzzily_match", "value": "baron davis", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "high assists", "baron davis"], "result": true, "ind": 0, "tointer": "for the high assists records of all rows , most of them fuzzily match to baron davis .", "tostr": "most_eq { all_rows ; high assists ; baron davis } = true"}, "logic_str": "most_eq { all_rows ; high assists ; baron davis } = true", "interpret": "for the high assists records of all rows , most of them fuzzily match to baron davis .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "high assists_3": 3, "baron davis_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "high assists_3": "high assists", "baron davis_4": "baron davis"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "high assists_3": [0], "baron davis_4": [0]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["61", "march 2", "san antonio", "l 78 - 106 ( ot )", "fred jones , al thornton ( 14 )", "mike taylor , marcus camby ( 8 )", "baron davis ( 8 )", "staples center 17649", "15 - 46"], ["62", "march 4", "memphis", "l 95 - 118 ( ot )", "al thornton ( 25 )", "deandre jordan ( 9 )", "baron davis ( 7 )", "staples center 13813", "15 - 47"], ["63", "march 7", "indiana", "l 105 - 106 ( ot )", "eric gordon ( 35 )", "deandre jordan ( 11 )", "eric gordon ( 6 )", "staples center 16518", "15 - 48"], ["64", "march 10", "cleveland", "l 83 - 87 ( ot )", "al thornton , zach randolph ( 20 )", "zach randolph ( 12 )", "baron davis , zach randolph ( 6 )", "staples center 19060", "15 - 49"], ["65", "march 14", "denver", "l 94 - 107 ( ot )", "al thornton ( 19 )", "al thornton , marcus camby , chris kaman ( 7 )", "baron davis ( 10 )", "pepsi center 18676", "15 - 50"], ["66", "march 15", "new jersey", "w 107 - 105 ( ot )", "steve novak ( 21 )", "al thornton , chris kaman ( 8 )", "baron davis ( 10 )", "staples center 18266", "16 - 50"], ["67", "march 17", "golden state", "l 120 - 127 ( ot )", "baron davis ( 29 )", "zach randolph , marcus camby ( 11 )", "baron davis ( 7 )", "oracle arena 18223", "16 - 51"], ["68", "march 18", "washington", "w 123 - 108 ( ot )", "eric gordon ( 26 )", "baron davis , zach randolph ( 8 )", "baron davis ( 20 )", "staples center 15123", "17 - 51"], ["69", "march 20", "detroit", "l 90 - 108 ( ot )", "eric gordon ( 22 )", "chris kaman ( 8 )", "baron davis ( 8 )", "the palace of auburn hills 22076", "17 - 52"], ["70", "march 22", "toronto", "l 76 - 100 ( ot )", "zach randolph ( 20 )", "zach randolph , marcus camby ( 7 )", "baron davis ( 4 )", "air canada centre 17610", "17 - 53"], ["71", "march 23", "boston", "l 77 - 90 ( ot )", "zach randolph ( 17 )", "zach randolph ( 14 )", "baron davis ( 8 )", "td banknorth garden 18624", "17 - 54"], ["72", "march 25", "new york", "w 140 - 135 ( ot )", "mike taylor ( 35 )", "al thornton ( 9 )", "baron davis ( 6 )", "madison square garden 19041", "18 - 54"], ["73", "march 27", "san antonio", "l 98 - 111 ( ot )", "mike taylor ( 23 )", "alex acker ( 8 )", "eric gordon ( 4 )", "at & t center 18797", "18 - 55"], ["74", "march 28", "houston", "l 93 - 110 ( ot )", "eric gordon ( 17 )", "zach randolph ( 8 )", "mike taylor ( 6 )", "toyota center 18267", "18 - 56"]], "query": "most_eq { all_rows ; high assists ; baron davis } = true", "question": "baron davis had the majority of the high assists performances in the 2008 - 09 los angeles clippers season ."}, {"topic": "james calado", "wiki": "https://en.wikipedia.org/wiki/James_Calado", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24584486-1.html.csv", "action": "superlative", "sent": "the highest number of races that james calado participated in was in 2010 .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "7", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "races"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; races }"}, "season"], "result": "2010", "ind": 1, "tostr": "hop { argmax { all_rows ; races } ; season }"}, "2010"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; races } ; season } ; 2010 } = true", "tointer": "select the row whose races record of all rows is maximum . the season record of this row is 2010 ."}, "logic_str": "eq { hop { argmax { all_rows ; races } ; season } ; 2010 } = true", "interpret": "select the row whose races record of all rows is maximum . the season record of this row is 2010 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "races_5": 5, "season_6": 6, "2010_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "races_5": "races", "season_6": "season", "2010_7": "2010"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "races_5": [0], "season_6": [1], "2010_7": [2]}, "table_header": ["season", "series", "team", "races", "wins", "poles", "f / laps", "podiums", "points", "position"], "table_cont": [["2008", "british formula renault 2.0", "fortec motorsport", "20", "1", "2", "0", "4", "292", "7th"], ["2008", "formula renault 2.0 nec", "fortec motorsport", "3", "0", "0", "0", "0", "38", "25th"], ["2008", "british formula renault 2.0 winter series", "fortec motorsport", "4", "2", "3", "4", "3", "116", "1st"], ["2008", "portuguese formula renault 2.0 winter series", "fortec motorsport", "4", "3", "2", "2", "4", "60", "1st"], ["2009", "british formula renault 2.0", "fortec motorsport", "20", "8", "10", "7", "12", "457", "2nd"], ["2009", "formula renault 2.0 eurocup", "fortec motorsport", "6", "0", "0", "1", "0", "10", "17th"], ["2010", "british formula three championship", "carlin", "30", "5", "2", "4", "12", "293", "2nd"], ["2011", "gp3 series", "lotus art", "16", "1", "1", "2", "6", "55", "2nd"], ["2011", "gp2 final", "lotus art", "2", "1", "0", "0", "1", "7", "5th"], ["2012", "gp2 series", "lotus gp", "24", "2", "2", "1", "7", "160", "5th"]], "query": "eq { hop { argmax { all_rows ; races } ; season } ; 2010 } = true", "question": "the highest number of races that james calado participated in was in 2010 ."}, {"topic": "magdal \\ xc3 \\ xa9na ryb \\ xc3 \\ xa1rikov \\ xc3 \\ xa1", "wiki": "https://en.wikipedia.org/wiki/Magdal%C3%A9na_Ryb%C3%A1rikov%C3%A1", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18058018-8.html.csv", "action": "count", "sent": "on 3 different occasions , magdal\u00e9na ryb\u00e1rikov\u00e1 had a final game against petra kvitov\u00e1 .", "annotation": {"scope": "all", "criterion": "equal", "value": "petra kvitov\u00e1", "result": "3", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent in the final", "petra kvitov\u00e1"], "result": null, "ind": 0, "tointer": "select the rows whose opponent in the final record fuzzily matches to petra kvitov\u00e1 .", "tostr": "filter_eq { all_rows ; opponent in the final ; petra kvitov\u00e1 }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; opponent in the final ; petra kvitov\u00e1 } }", "tointer": "select the rows whose opponent in the final record fuzzily matches to petra kvitov\u00e1 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; opponent in the final ; petra kvitov\u00e1 } } ; 3 } = true", "tointer": "select the rows whose opponent in the final record fuzzily matches to petra kvitov\u00e1 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; opponent in the final ; petra kvitov\u00e1 } } ; 3 } = true", "interpret": "select the rows whose opponent in the final record fuzzily matches to petra kvitov\u00e1 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "opponent in the final_5": 5, "petra kvitov\u00e1_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "opponent in the final_5": "opponent in the final", "petra kvitov\u00e1_6": "petra kvitov\u00e1", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "opponent in the final_5": [0], "petra kvitov\u00e1_6": [0], "3_7": [2]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent in the final", "score in the final"], "table_cont": [["runner - up", "27 march 2005", "ain alsoukhna , egypt", "clay", "monica niculescu", "3 - 6 , 4 - 6"], ["winner", "9 april 2005", "cairo , egypt", "clay", "sarah raab", "6 - 1 , 6 - 3"], ["runner - up", "14 august 2005", "hechingen , germany", "clay", "kirsten flipkens", "4 - 6 , 3 - 6"], ["winner", "17 september 2005", "mestre , italy", "clay", "kira nagy", "6 - 2 , 7 - 5"], ["runner - up", "18 february 2007", "pr\u016fhonice - prague , czech republic", "carpet ( i )", "petra kvitov\u00e1", "5 - 7 , 6 - 7 ( 2 - 7 )"], ["runner - up", "9 december 2007", "p\u0159erov , czech republic", "hard ( i )", "petra kvitov\u00e1", "5 - 7 , 3 - 6"], ["winner", "22 march 2008", "st petersburg - vsevolozhsk , russia", "hard ( i )", "anna lapushchenkova", "6 - 4 , 6 - 2"], ["winner", "5 april 2008", "patras , greece", "hard", "anne keothavong", "6 - 3 , 7 - 5"], ["runner - up", "10 august 2008", "monterrey , mexico", "hard", "yaroslava shvedova", "4 - 6 , 1 - 6"], ["runner - up", "10 october 2010", "ningbo , china", "hard", "alberta brianti", "4 - 6 , 4 - 6"], ["winner", "15 may 2011", "prague , czech republic", "clay", "petra kvitov\u00e1", "6 - 3 , 6 - 4"]], "query": "eq { count { filter_eq { all_rows ; opponent in the final ; petra kvitov\u00e1 } } ; 3 } = true", "question": "on 3 different occasions , magdal\u00e9na ryb\u00e1rikov\u00e1 had a final game against petra kvitov\u00e1 ."}, {"topic": "greg jones ( tennis )", "wiki": "https://en.wikipedia.org/wiki/Greg_Jones_%28tennis%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13244506-2.html.csv", "action": "unique", "sent": "the australia f2 tournament was the only one in which greg jones ( tennis ) used a grass surface .", "annotation": {"scope": "all", "row": "8", "col": "4", "col_other": "3", "criterion": "equal", "value": "grass", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "grass"], "result": null, "ind": 0, "tointer": "select the rows whose surface record fuzzily matches to grass .", "tostr": "filter_eq { all_rows ; surface ; grass }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; surface ; grass } }", "tointer": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "grass"], "result": null, "ind": 0, "tointer": "select the rows whose surface record fuzzily matches to grass .", "tostr": "filter_eq { all_rows ; surface ; grass }"}, "tournament"], "result": "australia f2 , australia", "ind": 2, "tostr": "hop { filter_eq { all_rows ; surface ; grass } ; tournament }"}, "australia f2 , australia"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; surface ; grass } ; tournament } ; australia f2 , australia }", "tointer": "the tournament record of this unqiue row is australia f2 , australia ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; surface ; grass } } ; eq { hop { filter_eq { all_rows ; surface ; grass } ; tournament } ; australia f2 , australia } } = true", "tointer": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table . the tournament record of this unqiue row is australia f2 , australia ."}, "logic_str": "and { only { filter_eq { all_rows ; surface ; grass } } ; eq { hop { filter_eq { all_rows ; surface ; grass } ; tournament } ; australia f2 , australia } } = true", "interpret": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table . the tournament record of this unqiue row is australia f2 , australia .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "surface_7": 7, "grass_8": 8, "str_eq_3": 3, "str_hop_2": 2, "tournament_9": 9, "australia f2 , australia_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "surface_7": "surface", "grass_8": "grass", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "tournament_9": "tournament", "australia f2 , australia_10": "australia f2 , australia"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "surface_7": [0], "grass_8": [0], "str_eq_3": [4], "str_hop_2": [3], "tournament_9": [2], "australia f2 , australia_10": [3]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent", "score"], "table_cont": [["runner - up", "05.02.2007", "burnie challenger", "hard", "nathan healey", "5 - 7 , 4 - 6"], ["winner", "05.05.2008", "orange park usa", "clay", "clint thomson", "6 - 4 , 6 - 2"], ["runner - up", "14.07.2008", "great britain f10 , great britain", "clay", "michel koning", "4 - 6 , 3 - 6"], ["runner - up", "20.10.2008", "australia f10 , australia ,", "hard", "marinko matosevic", "1 - 6 , 6 - 7 3 - 7"], ["runner - up", "27.04.2009", "australia f3 , australia", "clay", "jose statham", "6 - 4 , 4 - 6 , 1 - 6"], ["winner", "04.05.2009", "australia f4 , australia", "clay", "jose statham", "7 - 5 , 7 - 6 ( 8 - 6 )"], ["runner - up", "01.02.2010", "burnie challenger", "hard", "bernard tomic", "6 - 4 , 6 - 2"], ["runner - up", "22.02.2010", "australia f2 , australia", "grass", "john millman", "6 - 1 , 4 - 6 , 4 - 6"], ["runner - up", "16.05.2011", "fergana challenger , uzbekistan", "hard", "dudi sela", "2 - 6 , 1 - 6"], ["runner - up", "01.07.2013", "mantra challenger , ecuador", "hard", "michael russell", "6 - 4 , 0 - 6 , 5 - 7"], ["winner", "07.10.2013", "australia f9 , australia", "hard", "jordan thompson", "3 - 6 , 7 - 5 , 6 - 1"]], "query": "and { only { filter_eq { all_rows ; surface ; grass } } ; eq { hop { filter_eq { all_rows ; surface ; grass } ; tournament } ; australia f2 , australia } } = true", "question": "the australia f2 tournament was the only one in which greg jones ( tennis ) used a grass surface ."}, {"topic": "list of the green green grass episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_The_Green_Green_Grass_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17641206-4.html.csv", "action": "aggregation", "sent": "each episode of the green green grass had around 4.75 million viewers .", "annotation": {"scope": "all", "col": "7", "type": "average", "result": "4.75 million", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "viewership"], "result": "4.75 million", "ind": 0, "tostr": "avg { all_rows ; viewership }"}, "4.75 million"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; viewership } ; 4.75 million } = true", "tointer": "the average of the viewership record of all rows is 4.75 million ."}, "logic_str": "round_eq { avg { all_rows ; viewership } ; 4.75 million } = true", "interpret": "the average of the viewership record of all rows is 4.75 million .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "viewership_4": 4, "4.75 million_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "viewership_4": "viewership", "4.75 million_5": "4.75 million"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "viewership_4": [0], "4.75 million_5": [1]}, "table_header": ["episode", "original title", "directed by", "written by", "original airdate", "duration", "viewership"], "table_cont": [["8", "testing times", "dewi humphreys", "jim sullivan", "15 september 2006", "30 minutes", "5.04 million"], ["9", "here 's to you , mrs boyce", "dewi humphreys", "john sullivan", "22 september 2006", "30 minutes", "4.79 million"], ["10", "bothered and bewildered", "dewi humphreys", "derren litten and john sullivan", "29 september 2006", "30 minutes", "4.77 million"], ["11", "mother earth", "dewi humphreys", "jim sullivan", "6 october 2006", "30 minutes", "5.01 million"], ["12", "schoolboy french", "dewi humphreys", "james windett and john sullivan", "13 october 2006", "30 minutes", "4.96 million"], ["13", "more questions than answers", "dewi humphreys", "paul alexander and john sullivan", "20 october 2006", "30 minutes", "3.90 million"]], "query": "round_eq { avg { all_rows ; viewership } ; 4.75 million } = true", "question": "each episode of the green green grass had around 4.75 million viewers ."}, {"topic": "b \" swimming at the 2008 summer olympics - women 's 200 metre breaststroke \"", "wiki": "https://en.wikipedia.org/wiki/Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Women%27s_200_metre_breaststroke", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18625509-4.html.csv", "action": "count", "sent": "8 athletes competed in the women 's 200 metre breaststroke during the 2008 summer olympics .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "8", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "name"], "result": null, "ind": 0, "tointer": "select the rows whose name record is arbitrary .", "tostr": "filter_all { all_rows ; name }"}], "result": "8", "ind": 1, "tostr": "count { filter_all { all_rows ; name } }", "tointer": "select the rows whose name record is arbitrary . the number of such rows is 8 ."}, "8"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; name } } ; 8 } = true", "tointer": "select the rows whose name record is arbitrary . the number of such rows is 8 ."}, "logic_str": "eq { count { filter_all { all_rows ; name } } ; 8 } = true", "interpret": "select the rows whose name record is arbitrary . the number of such rows is 8 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "name_5": 5, "8_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "name_5": "name", "8_6": "8"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "name_5": [0], "8_6": [2]}, "table_header": ["rank", "lane", "name", "nationality", "time"], "table_cont": [["1", "4", "leisel jones", "australia", "2:23.04"], ["2", "5", "sara nordenstam", "norway", "2:23.79"], ["3", "6", "yuliya yefimova", "russia", "2:24.00"], ["4", "3", "megumi taneda", "japan", "2:25.42"], ["5", "2", "sally foster", "australia", "2:26.33"], ["6", "1", "anne poleska", "germany", "2:26.71"], ["7", "7", "joline h\u00e3stman", "sweden", "2:27.14"], ["8", "8", "jeong da - rae", "south korea", "2:28.28"]], "query": "eq { count { filter_all { all_rows ; name } } ; 8 } = true", "question": "8 athletes competed in the women 's 200 metre breaststroke during the 2008 summer olympics ."}, {"topic": "swimming at the 2008 summer olympics - women 's 200 metre breaststroke", "wiki": "https://en.wikipedia.org/wiki/Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Women%27s_200_metre_breaststroke", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18625509-4.html.csv", "action": "comparative", "sent": "sally foster completed the women 's 200 metre breaststroke earlier than anne poleska during the 2008 summer olympics .", "annotation": {"row_1": "5", "row_2": "6", "col": "5", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "sally foster"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to sally foster .", "tostr": "filter_eq { all_rows ; name ; sally foster }"}, "time"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; sally foster } ; time }", "tointer": "select the rows whose name record fuzzily matches to sally foster . take the time record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "anne poleska"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to anne poleska .", "tostr": "filter_eq { all_rows ; name ; anne poleska }"}, "time"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; anne poleska } ; time }", "tointer": "select the rows whose name record fuzzily matches to anne poleska . take the time record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; name ; sally foster } ; time } ; hop { filter_eq { all_rows ; name ; anne poleska } ; time } } = true", "tointer": "select the rows whose name record fuzzily matches to sally foster . take the time record of this row . select the rows whose name record fuzzily matches to anne poleska . take the time record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; name ; sally foster } ; time } ; hop { filter_eq { all_rows ; name ; anne poleska } ; time } } = true", "interpret": "select the rows whose name record fuzzily matches to sally foster . take the time record of this row . select the rows whose name record fuzzily matches to anne poleska . take the time record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name_7": 7, "sally foster_8": 8, "time_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name_11": 11, "anne poleska_12": 12, "time_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name_7": "name", "sally foster_8": "sally foster", "time_9": "time", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "anne poleska_12": "anne poleska", "time_13": "time"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name_7": [0], "sally foster_8": [0], "time_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name_11": [1], "anne poleska_12": [1], "time_13": [3]}, "table_header": ["rank", "lane", "name", "nationality", "time"], "table_cont": [["1", "4", "leisel jones", "australia", "2:23.04"], ["2", "5", "sara nordenstam", "norway", "2:23.79"], ["3", "6", "yuliya yefimova", "russia", "2:24.00"], ["4", "3", "megumi taneda", "japan", "2:25.42"], ["5", "2", "sally foster", "australia", "2:26.33"], ["6", "1", "anne poleska", "germany", "2:26.71"], ["7", "7", "joline h\u00e3stman", "sweden", "2:27.14"], ["8", "8", "jeong da - rae", "south korea", "2:28.28"]], "query": "less { hop { filter_eq { all_rows ; name ; sally foster } ; time } ; hop { filter_eq { all_rows ; name ; anne poleska } ; time } } = true", "question": "sally foster completed the women 's 200 metre breaststroke earlier than anne poleska during the 2008 summer olympics ."}, {"topic": "list of railway stations and tram stops in croydon", "wiki": "https://en.wikipedia.org/wiki/List_of_railway_stations_and_tram_stops_in_Croydon", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11802780-15.html.csv", "action": "majority", "sent": "most of the stations in croydon have two platforms there .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "2", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "platforms", "2"], "result": true, "ind": 0, "tointer": "for the platforms records of all rows , most of them are equal to 2 .", "tostr": "most_eq { all_rows ; platforms ; 2 } = true"}, "logic_str": "most_eq { all_rows ; platforms ; 2 } = true", "interpret": "for the platforms records of all rows , most of them are equal to 2 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "platforms_3": 3, "2_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "platforms_3": "platforms", "2_4": "2"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "platforms_3": [0], "2_4": [0]}, "table_header": ["stations", "place", "managed by", "platforms", "zone"], "table_cont": [["waddon marsh tram stop", "waddon", "tramlink", "2", "5"], ["waddon railway station", "waddon", "southern", "2", "5"], ["wandle park tram stop", "croydon", "tramlink", "2", "5"], ["wellesley road tram stop", "croydon", "tramlink", "1", "5"], ["west croydon station", "croydon", "southern / tramlink", "2", "5"], ["woodmansterne railway station", "woodmansterne", "southern", "2", "6"], ["woodside tram stop", "woodside", "tramlink", "2", "4"]], "query": "most_eq { all_rows ; platforms ; 2 } = true", "question": "most of the stations in croydon have two platforms there ."}, {"topic": "1993 pga championship", "wiki": "https://en.wikipedia.org/wiki/1993_PGA_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18116279-4.html.csv", "action": "aggregation", "sent": "in the 1993 pga championships , united states players averaged -7.6 to par .", "annotation": {"scope": "subset", "col": "5", "type": "average", "result": "-7.6", "subset": {"col": "3", "criterion": "equal", "value": "united states"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "united states"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; country ; united states }", "tointer": "select the rows whose country record fuzzily matches to united states ."}, "to par"], "result": "-7.6", "ind": 1, "tostr": "avg { filter_eq { all_rows ; country ; united states } ; to par }"}, "-7.6"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; country ; united states } ; to par } ; -7.6 } = true", "tointer": "select the rows whose country record fuzzily matches to united states . the average of the to par record of these rows is -7.6 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; country ; united states } ; to par } ; -7.6 } = true", "interpret": "select the rows whose country record fuzzily matches to united states . the average of the to par record of these rows is -7.6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "country_5": 5, "united states_6": 6, "to par_7": 7, "-7.6_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "country_5": "country", "united states_6": "united states", "to par_7": "to par", "-7.6_8": "-7.6"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "country_5": [0], "united states_6": [0], "to par_7": [1], "-7.6_8": [2]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["t1", "paul azinger", "united states", "69 + 66 + 69 + 68 = 272", "- 12", "playoff"], ["t1", "greg norman", "australia", "68 + 68 + 67 + 69 = 272", "- 12", "playoff"], ["3", "nick faldo", "england", "68 + 68 + 69 + 68 = 273", "- 11", "105000"], ["4", "vijay singh", "fiji", "68 + 63 + 73 + 70 = 274", "- 10", "90000"], ["5", "tom watson", "united states", "69 + 65 + 70 + 72 = 276", "- 8", "75000"], ["t6", "john cook", "united states", "72 + 66 + 68 + 71 = 277", "- 7", "47813"], ["t6", "bob estes", "united states", "69 + 66 + 69 + 73 = 277", "- 7", "47813"], ["t6", "dudley hart", "united states", "66 + 68 + 71 + 72 = 277", "- 7", "47813"], ["t6", "nolan henke", "united states", "72 + 70 + 67 + 68 = 277", "- 7", "47813"], ["t6", "scott hoch", "united states", "74 + 68 + 68 + 67 = 277", "- 7", "47813"], ["t6", "hale irwin", "united states", "68 + 69 + 67 + 73 = 277", "- 7", "47813"], ["t6", "phil mickelson", "united states", "67 + 71 + 69 + 70 = 277", "- 7", "47813"], ["t6", "scott simpson", "united states", "64 + 70 + 71 + 72 = 277", "- 7", "47813"]], "query": "round_eq { avg { filter_eq { all_rows ; country ; united states } ; to par } ; -7.6 } = true", "question": "in the 1993 pga championships , united states players averaged -7.6 to par ."}, {"topic": "list of inter milan records and statistics", "wiki": "https://en.wikipedia.org/wiki/List_of_Inter_Milan_records_and_statistics", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17160236-2.html.csv", "action": "superlative", "sent": "in the inter milan records and statistics , the person with the highest total was giuseppe meazza .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "total"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; total }"}, "name"], "result": "giuseppe meazza", "ind": 1, "tostr": "hop { argmax { all_rows ; total } ; name }"}, "giuseppe meazza"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; total } ; name } ; giuseppe meazza } = true", "tointer": "select the row whose total record of all rows is maximum . the name record of this row is giuseppe meazza ."}, "logic_str": "eq { hop { argmax { all_rows ; total } ; name } ; giuseppe meazza } = true", "interpret": "select the row whose total record of all rows is maximum . the name record of this row is giuseppe meazza .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "total_5": 5, "name_6": 6, "giuseppe meazza_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "total_5": "total", "name_6": "name", "giuseppe meazza_7": "giuseppe meazza"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "total_5": [0], "name_6": [1], "giuseppe meazza_7": [2]}, "table_header": ["rank", "name", "years", "league", "total"], "table_cont": [["1", "giuseppe meazza", "1927 - 1940 1946 - 1947", "247", "284"], ["2", "alessandro altobelli", "1977 - 1988", "128", "209"], ["3", "roberto boninsegna", "1969 - 1976", "113", "171"], ["4", "sandro mazzola", "1960 - 1977", "116", "160"], ["5", "luigi cevenini", "1912 - 1915 1919 - 1921 1922 - 1927", "158", "158"], ["6", "benito lorenzi", "1947 - 1958", "138", "143"], ["7", "istv\u00e1n nyers", "1948 - 1954", "133", "133"], ["8", "christian vieri", "1999 - 2005", "103", "123"], ["9", "ermanno aebi", "1909 - 1915 1919 - 1923", "106", "106"], ["10", "mario corso", "1958 - 1973", "75", "94"]], "query": "eq { hop { argmax { all_rows ; total } ; name } ; giuseppe meazza } = true", "question": "in the inter milan records and statistics , the person with the highest total was giuseppe meazza ."}, {"topic": "1932 vfl season", "wiki": "https://en.wikipedia.org/wiki/1932_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790099-7.html.csv", "action": "count", "sent": "in the 1932 vfl season , among the games where home team scored above 14.00 , 3 of them drew more than 10,000 people .", "annotation": {"scope": "subset", "criterion": "greater_than", "value": "10000", "result": "3", "col": "6", "subset": {"col": "2", "criterion": "greater_than", "value": "14.0"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": [{"func": "filter_greater", "args": ["all_rows", "home team score", "14.0"], "result": null, "ind": 0, "tostr": "filter_greater { all_rows ; home team score ; 14.0 }", "tointer": "select the rows whose home team score record is greater than 14.0 ."}, "crowd", "10000"], "result": null, "ind": 1, "tointer": "select the rows whose home team score record is greater than 14.0 . among these rows , select the rows whose crowd record is greater than 10000 .", "tostr": "filter_greater { filter_greater { all_rows ; home team score ; 14.0 } ; crowd ; 10000 }"}], "result": "3", "ind": 2, "tostr": "count { filter_greater { filter_greater { all_rows ; home team score ; 14.0 } ; crowd ; 10000 } }", "tointer": "select the rows whose home team score record is greater than 14.0 . among these rows , select the rows whose crowd record is greater than 10000 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 3, "tostr": "eq { count { filter_greater { filter_greater { all_rows ; home team score ; 14.0 } ; crowd ; 10000 } } ; 3 } = true", "tointer": "select the rows whose home team score record is greater than 14.0 . among these rows , select the rows whose crowd record is greater than 10000 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_greater { filter_greater { all_rows ; home team score ; 14.0 } ; crowd ; 10000 } } ; 3 } = true", "interpret": "select the rows whose home team score record is greater than 14.0 . among these rows , select the rows whose crowd record is greater than 10000 . the number of such rows is 3 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_greater_1": 1, "filter_greater_0": 0, "all_rows_5": 5, "home team score_6": 6, "14.0_7": 7, "crowd_8": 8, "10000_9": 9, "3_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_greater_1": "filter_greater", "filter_greater_0": "filter_greater", "all_rows_5": "all_rows", "home team score_6": "home team score", "14.0_7": "14.0", "crowd_8": "crowd", "10000_9": "10000", "3_10": "3"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_greater_1": [2], "filter_greater_0": [1], "all_rows_5": [0], "home team score_6": [0], "14.0_7": [0], "crowd_8": [1], "10000_9": [1], "3_10": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["collingwood", "16.5 ( 101 )", "melbourne", "11.17 ( 83 )", "victoria park", "7000", "18 june 1932"], ["carlton", "17.16 ( 118 )", "st kilda", "7.12 ( 54 )", "princes park", "15000", "18 june 1932"], ["south melbourne", "14.21 ( 105 )", "geelong", "14.12 ( 96 )", "lake oval", "38000", "18 june 1932"], ["north melbourne", "9.8 ( 62 )", "footscray", "13.13 ( 91 )", "arden street oval", "18000", "18 june 1932"], ["richmond", "14.16 ( 100 )", "fitzroy", "8.13 ( 61 )", "punt road oval", "13000", "18 june 1932"], ["hawthorn", "7.9 ( 51 )", "essendon", "8.17 ( 65 )", "glenferrie oval", "7000", "18 june 1932"]], "query": "eq { count { filter_greater { filter_greater { all_rows ; home team score ; 14.0 } ; crowd ; 10000 } } ; 3 } = true", "question": "in the 1932 vfl season , among the games where home team scored above 14.00 , 3 of them drew more than 10,000 people ."}, {"topic": "2000 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/2000_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17128242-2.html.csv", "action": "superlative", "sent": "at the 2000 us open ernie els the only player from south africa had a total of 287 which is 3 above par .", "annotation": {"scope": "subset", "col_superlative": "4", "row_superlative": "1", "value_mentioned": "yes", "max_or_min": "max", "other_col": "1,2,5", "subset": {"col": "2", "criterion": "equal", "value": "south africa"}}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "max", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "south africa"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; country ; south africa }", "tointer": "select the rows whose country record fuzzily matches to south africa ."}, "total"], "result": "287", "ind": 1, "tostr": "max { filter_eq { all_rows ; country ; south africa } ; total }", "tointer": "select the rows whose country record fuzzily matches to south africa . the maximum total record of these rows is 287 ."}, "287"], "result": true, "ind": 2, "tostr": "eq { max { filter_eq { all_rows ; country ; south africa } ; total } ; 287 }", "tointer": "select the rows whose country record fuzzily matches to south africa . the maximum total record of these rows is 287 ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "south africa"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; country ; south africa }", "tointer": "select the rows whose country record fuzzily matches to south africa ."}, "total"], "result": null, "ind": 3, "tostr": "argmax { filter_eq { all_rows ; country ; south africa } ; total }"}, "player"], "result": "ernie els", "ind": 4, "tostr": "hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; player }"}, "ernie els"], "result": true, "ind": 5, "tostr": "eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; player } ; ernie els }", "tointer": "the player record of the row with superlative total record is ernie els ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "south africa"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; country ; south africa }", "tointer": "select the rows whose country record fuzzily matches to south africa ."}, "total"], "result": null, "ind": 3, "tostr": "argmax { filter_eq { all_rows ; country ; south africa } ; total }"}, "to par"], "result": "+ 3", "ind": 6, "tostr": "hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; to par }"}, "+ 3"], "result": true, "ind": 7, "tostr": "eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; to par } ; + 3 }", "tointer": "the to par record of the row with superlative total record is + 3 ."}], "result": true, "ind": 8, "tostr": "and { eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; player } ; ernie els } ; eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; to par } ; + 3 } }", "tointer": "the player record of the row with superlative total record is ernie els . the to par record of the row with superlative total record is + 3 ."}], "result": true, "ind": 9, "tostr": "and { eq { max { filter_eq { all_rows ; country ; south africa } ; total } ; 287 } ; and { eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; player } ; ernie els } ; eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; to par } ; + 3 } } } = true", "tointer": "select the rows whose country record fuzzily matches to south africa . the maximum total record of these rows is 287 . the player record of the row with superlative total record is ernie els . the to par record of the row with superlative total record is + 3 ."}, "logic_str": "and { eq { max { filter_eq { all_rows ; country ; south africa } ; total } ; 287 } ; and { eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; player } ; ernie els } ; eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; to par } ; + 3 } } } = true", "interpret": "select the rows whose country record fuzzily matches to south africa . the maximum total record of these rows is 287 . the player record of the row with superlative total record is ernie els . the to par record of the row with superlative total record is + 3 .", "num_func": 13, "nid": 10, "g_ids": {"and_9": 9, "result_10": 10, "eq_2": 2, "max_1": 1, "filter_str_eq_0": 0, "all_rows_11": 11, "country_12": 12, "south africa_13": 13, "total_14": 14, "287_15": 15, "and_8": 8, "str_eq_5": 5, "str_hop_4": 4, "argmax_3": 3, "total_16": 16, "player_17": 17, "ernie els_18": 18, "str_eq_7": 7, "str_hop_6": 6, "to par_19": 19, "+ 3_20": 20}, "g_ids_features": {"and_9": "and", "result_10": "true", "eq_2": "eq", "max_1": "max", "filter_str_eq_0": "filter_str_eq", "all_rows_11": "all_rows", "country_12": "country", "south africa_13": "south africa", "total_14": "total", "287_15": "287", "and_8": "and", "str_eq_5": "str_eq", "str_hop_4": "str_hop", "argmax_3": "argmax", "total_16": "total", "player_17": "player", "ernie els_18": "ernie els", "str_eq_7": "str_eq", "str_hop_6": "str_hop", "to par_19": "to par", "+ 3_20": "+ 3"}, "g_adj": {"and_9": [10], "result_10": [], "eq_2": [9], "max_1": [2], "filter_str_eq_0": [1, 3], "all_rows_11": [0], "country_12": [0], "south africa_13": [0], "total_14": [1], "287_15": [2], "and_8": [9], "str_eq_5": [8], "str_hop_4": [5], "argmax_3": [4, 6], "total_16": [3], "player_17": [4], "ernie els_18": [5], "str_eq_7": [8], "str_hop_6": [7], "to par_19": [6], "+ 3_20": [7]}, "table_header": ["player", "country", "year ( s ) won", "total", "to par", "finish"], "table_cont": [["ernie els", "south africa", "1994 , 1997", "287", "+ 3", "t2"], ["hale irwin", "united states", "1974 , 1979 , 1990", "296", "+ 12", "t27"], ["steve jones", "united states", "1996", "296", "+ 12", "t27"], ["tom watson", "united states", "1982", "292", "+ 12", "t27"], ["tom kite", "united states", "1992", "297", "+ 13", "t32"], ["lee janzen", "united states", "1993 , 1998", "298", "+ 14", "t37"]], "query": "and { eq { max { filter_eq { all_rows ; country ; south africa } ; total } ; 287 } ; and { eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; player } ; ernie els } ; eq { hop { argmax { filter_eq { all_rows ; country ; south africa } ; total } ; to par } ; + 3 } } } = true", "question": "at the 2000 us open ernie els the only player from south africa had a total of 287 which is 3 above par ."}, {"topic": "albania in the eurovision song contest 2008", "wiki": "https://en.wikipedia.org/wiki/Albania_in_the_Eurovision_Song_Contest_2008", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14314911-1.html.csv", "action": "ordinal", "sent": "for albanian singers in the eurovision song contest in 2008 , the 2nd highest number of points was given to flaka krelani & doruntina disha .", "annotation": {"row": "6", "col": "4", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "points", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; points ; 2 }"}, "singer"], "result": "flaka krelani & doruntina disha", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; points ; 2 } ; singer }"}, "flaka krelani & doruntina disha"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; singer } ; flaka krelani & doruntina disha } = true", "tointer": "select the row whose points record of all rows is 2nd maximum . the singer record of this row is flaka krelani & doruntina disha ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; singer } ; flaka krelani & doruntina disha } = true", "interpret": "select the row whose points record of all rows is 2nd maximum . the singer record of this row is flaka krelani & doruntina disha .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "points_5": 5, "2_6": 6, "singer_7": 7, "flaka krelani & doruntina disha_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "points_5": "points", "2_6": "2", "singer_7": "singer", "flaka krelani & doruntina disha_8": "flaka krelani & doruntina disha"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "points_5": [0], "2_6": [0], "singer_7": [1], "flaka krelani & doruntina disha_8": [2]}, "table_header": ["draw", "singer", "song", "points", "place"], "table_cont": [["1", "manjola nallbani", "kjo bot\u00eb merr frym\u00eb nga dashuria", "27", "7"], ["2", "produkt 28", "30 sekonda", "3", "15"], ["3", "eneida tarifa", "e para let\u00ebr", "11", "10"], ["4", "mariza ikonomi", "mall i tretur", "20", "9"], ["5", "greta ko\u00e7i", "nat\u00ebn t\u00eb k\u00ebrkova", "35", "6"], ["6", "flaka krelani & doruntina disha", "jeta k\u00ebrkon dashuri", "57", "2"], ["7", "mira kon\u00e7i & redon makashi", "n\u00ebn nj\u00eb qiell", "37", "5"], ["8", "kthjellu", "dhoma", "9", "11"], ["9", "kozma dushi", "tatuazh n\u00eb kujtes\u00eb", "1", "16"], ["10", "devis xherahu", "endacaku", "0", "17"], ["11", "teuta kurti", "qyteti i dashuris\u00eb", "3", "14"], ["12", "samanta karavello", "pse u harrua dashuria", "23", "8"], ["13", "juliana pasha", "nj\u00eb qiell t\u00eb ri", "54", "3"], ["14", "agim poshka", "kujt i them t\u00eb dua", "8", "12"], ["15", "jonida maliqi", "s ' ka fajtor n\u00eb dashuri", "36", "4"], ["16", "olta boka", "zemr\u00ebn e lam\u00eb peng", "67", "1"], ["17", "rosela gjylbegu", "po lind nj\u00eb yll", "8", "13"]], "query": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; singer } ; flaka krelani & doruntina disha } = true", "question": "for albanian singers in the eurovision song contest in 2008 , the 2nd highest number of points was given to flaka krelani & doruntina disha ."}, {"topic": "sheffield shield", "wiki": "https://en.wikipedia.org/wiki/Sheffield_Shield", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1585656-18.html.csv", "action": "superlative", "sent": "clarrie grimmett had the highest average in the sheffield shield , 25.29 .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "1", "value_mentioned": "yes", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "max", "args": ["all_rows", "average"], "result": "25.29", "ind": 0, "tostr": "max { all_rows ; average }", "tointer": "the maximum average record of all rows is 25.29 ."}, "25.29"], "result": true, "ind": 1, "tostr": "eq { max { all_rows ; average } ; 25.29 }", "tointer": "the maximum average record of all rows is 25.29 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "average"], "result": null, "ind": 2, "tostr": "argmax { all_rows ; average }"}, "player"], "result": "clarrie grimmett ( vic / sa )", "ind": 3, "tostr": "hop { argmax { all_rows ; average } ; player }"}, "clarrie grimmett ( vic / sa )"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; average } ; player } ; clarrie grimmett ( vic / sa ) }", "tointer": "the player record of the row with superlative average record is clarrie grimmett ( vic / sa ) ."}], "result": true, "ind": 5, "tostr": "and { eq { max { all_rows ; average } ; 25.29 } ; eq { hop { argmax { all_rows ; average } ; player } ; clarrie grimmett ( vic / sa ) } } = true", "tointer": "the maximum average record of all rows is 25.29 . the player record of the row with superlative average record is clarrie grimmett ( vic / sa ) ."}, "logic_str": "and { eq { max { all_rows ; average } ; 25.29 } ; eq { hop { argmax { all_rows ; average } ; player } ; clarrie grimmett ( vic / sa ) } } = true", "interpret": "the maximum average record of all rows is 25.29 . the player record of the row with superlative average record is clarrie grimmett ( vic / sa ) .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "max_0": 0, "all_rows_7": 7, "average_8": 8, "25.29_9": 9, "str_eq_4": 4, "str_hop_3": 3, "argmax_2": 2, "all_rows_10": 10, "average_11": 11, "player_12": 12, "clarrie grimmett (vic / sa)_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "max_0": "max", "all_rows_7": "all_rows", "average_8": "average", "25.29_9": "25.29", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "argmax_2": "argmax", "all_rows_10": "all_rows", "average_11": "average", "player_12": "player", "clarrie grimmett (vic / sa)_13": "clarrie grimmett ( vic / sa )"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "max_0": [1], "all_rows_7": [0], "average_8": [0], "25.29_9": [1], "str_eq_4": [5], "str_hop_3": [4], "argmax_2": [3], "all_rows_10": [2], "average_11": [2], "player_12": [3], "clarrie grimmett (vic / sa)_13": [4]}, "table_header": ["rank", "s wicket", "player", "matches", "average"], "table_cont": [["1", "513", "clarrie grimmett ( vic / sa )", "79", "25.29"], ["2", "441", "michael kasprowicz ( qld )", "101", "24.56"], ["3", "430", "andy bichel ( qld )", "89", "23.24"], ["4", "419", "jo angel ( wa )", "105", "24.86"], ["5", "384", "terry alderman ( wa )", "97", "24.21"]], "query": "and { eq { max { all_rows ; average } ; 25.29 } ; eq { hop { argmax { all_rows ; average } ; player } ; clarrie grimmett ( vic / sa ) } } = true", "question": "clarrie grimmett had the highest average in the sheffield shield , 25.29 ."}, {"topic": "2008 - 09 denver nuggets season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Denver_Nuggets_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17355408-5.html.csv", "action": "count", "sent": "in december 2008 , the denver nuggets played seven games in the pepsi center .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "pepsi center", "result": "7", "col": "8", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "location attendance", "pepsi center"], "result": null, "ind": 0, "tointer": "select the rows whose location attendance record fuzzily matches to pepsi center .", "tostr": "filter_eq { all_rows ; location attendance ; pepsi center }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; location attendance ; pepsi center } }", "tointer": "select the rows whose location attendance record fuzzily matches to pepsi center . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; location attendance ; pepsi center } } ; 7 } = true", "tointer": "select the rows whose location attendance record fuzzily matches to pepsi center . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; location attendance ; pepsi center } } ; 7 } = true", "interpret": "select the rows whose location attendance record fuzzily matches to pepsi center . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "location attendance_5": 5, "pepsi center_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "location attendance_5": "location attendance", "pepsi center_6": "pepsi center", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "location attendance_5": [0], "pepsi center_6": [0], "7_7": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["19", "december 2", "toronto", "w 132 - 93 ( ot )", "chauncey billups ( 24 )", "nen\u00ea ( 11 )", "chauncey billups ( 14 )", "pepsi center 14243", "13 - 6"], ["20", "december 4", "san antonio", "l 91 - 108 ( ot )", "carmelo anthony ( 16 )", "j r smith ( 10 )", "j r smith , chauncey billups ( 4 )", "pepsi center 15866", "13 - 7"], ["21", "december 6", "sacramento", "w 118 - 85 ( ot )", "chauncey billups ( 24 )", "nen\u00ea , carmelo anthony ( 7 )", "chauncey billups ( 4 )", "arco arena 12322", "14 - 7"], ["22", "december 10", "minnesota", "w 116 - 105 ( ot )", "carmelo anthony ( 45 )", "carmelo anthony ( 11 )", "chauncey billups ( 6 )", "pepsi center 14007", "15 - 7"], ["23", "december 13", "golden state", "w 123 - 105 ( ot )", "carmelo anthony ( 27 )", "carmelo anthony ( 9 )", "chauncey billups ( 11 )", "pepsi center 15322", "16 - 7"], ["24", "december 15", "dallas", "w 98 - 88 ( ot )", "j r smith ( 25 )", "kenyon martin ( 10 )", "chauncey billups ( 8 )", "american airlines center 19969", "17 - 7"], ["25", "december 16", "houston", "l 96 - 108 ( ot )", "carmelo anthony ( 22 )", "kenyon martin ( 8 )", "chauncey billups ( 6 )", "toyota center 17737", "17 - 8"], ["26", "december 19", "cleveland", "l 88 - 105 ( ot )", "chauncey billups ( 16 )", "chris andersen ( 10 )", "anthony carter , j r smith ( 4 )", "pepsi center 19155", "17 - 9"], ["27", "december 20", "phoenix", "l 101 - 108 ( ot )", "j r smith ( 23 )", "nen\u00ea ( 15 )", "chauncey billups ( 8 )", "us airways center 18422", "17 - 10"], ["28", "december 22", "portland", "w 97 - 89 ( ot )", "chauncey billups , nen\u00ea ( 19 )", "kenyon martin ( 12 )", "chauncey billups ( 10 )", "pepsi center 18611", "18 - 10"], ["29", "december 23", "portland", "l 92 - 101 ( ot )", "linas kleiza ( 20 )", "nen\u00ea ( 13 )", "chucky atkins ( 4 )", "rose garden 20007", "18 - 11"], ["30", "december 26", "philadelphia", "w 105 - 101 ( ot )", "j r smith ( 27 )", "nen\u00ea ( 12 )", "chauncey billups ( 10 )", "pepsi center 19155", "19 - 11"], ["31", "december 28", "new york", "w 117 - 110 ( ot )", "carmelo anthony ( 32 )", "carmelo anthony , nen\u00ea ( 9 )", "chauncey billups ( 5 )", "madison square garden 19763", "20 - 11"], ["32", "december 29", "atlanta", "l 91 - 109 ( ot )", "kenyon martin ( 19 )", "chris andersen ( 6 )", "anthony carter ( 7 )", "philips arena 17131", "20 - 12"]], "query": "eq { count { filter_eq { all_rows ; location attendance ; pepsi center } } ; 7 } = true", "question": "in december 2008 , the denver nuggets played seven games in the pepsi center ."}, {"topic": "indiana high school athletics conferences : ohio river valley - western indiana", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Ohio_River_Valley_%E2%80%93_Western_Indiana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18974097-6.html.csv", "action": "aggregation", "sent": "the average student enrollment of schools in the ohio river valley - western indiana conference is 738 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "738", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "enrollment"], "result": "738", "ind": 0, "tostr": "avg { all_rows ; enrollment }"}, "738"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; enrollment } ; 738 } = true", "tointer": "the average of the enrollment record of all rows is 738 ."}, "logic_str": "round_eq { avg { all_rows ; enrollment } ; 738 } = true", "interpret": "the average of the enrollment record of all rows is 738 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "enrollment_4": 4, "738_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "enrollment_4": "enrollment", "738_5": "738"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "enrollment_4": [0], "738_5": [1]}, "table_header": ["school", "location", "mascot", "enrollment", "ihsaa class", "ihsaa football class", "county"], "table_cont": [["crawfordsville", "crawfordsville", "athenians", "689", "aaa", "aaa", "54 montgomery"], ["danville", "danville", "warriors", "824", "aaa", "aaa", "32 hendricks"], ["frankfort", "frankfort", "hot dogs", "887", "aaa", "aaaa", "12 clinton"], ["lebanon", "lebanon", "tigers", "1038", "aaa", "aaaa", "06 boone"], ["north montgomery", "crawfordsville", "chargers", "641", "aaa", "aaa", "54 montgomery"], ["southmont", "crawfordsville", "mounties", "612", "aaa", "aaa", "54 montgomery"], ["tri - west", "lizton", "bruins", "620", "aaa", "aaa", "32 hendricks"], ["western boone", "thorntown", "stars", "592", "aaa", "aaa", "06 boone"]], "query": "round_eq { avg { all_rows ; enrollment } ; 738 } = true", "question": "the average student enrollment of schools in the ohio river valley - western indiana conference is 738 ."}, {"topic": "comparison of microsoft windows versions", "wiki": "https://en.wikipedia.org/wiki/Comparison_of_Microsoft_Windows_versions", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10758793-13.html.csv", "action": "count", "sent": "four of the microsoft windows versions had support for fat32 .", "annotation": {"scope": "all", "criterion": "equal", "value": "yes", "result": "4", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "fat32", "yes"], "result": null, "ind": 0, "tointer": "select the rows whose fat32 record fuzzily matches to yes .", "tostr": "filter_eq { all_rows ; fat32 ; yes }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; fat32 ; yes } }", "tointer": "select the rows whose fat32 record fuzzily matches to yes . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; fat32 ; yes } } ; 4 } = true", "tointer": "select the rows whose fat32 record fuzzily matches to yes . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; fat32 ; yes } } ; 4 } = true", "interpret": "select the rows whose fat32 record fuzzily matches to yes . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "fat32_5": 5, "yes_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "fat32_5": "fat32", "yes_6": "yes", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "fat32_5": [0], "yes_6": [0], "4_7": [2]}, "table_header": ["fat16", "fat32", "hpfs", "iso 9660", "ntfs", "refs"], "table_cont": [["yes", "no", "yes", "yes", "yes v1 .0 / v1 .1", "no"], ["yes", "no", "partial", "yes", "yes v1 .2", "no"], ["yes", "yes", "no", "yes", "yes v3 .0", "no"], ["yes", "yes", "no", "yes", "yes v3 .1", "no"], ["yes", "yes", "no", "yes", "yes v5", "no"], ["yes", "yes", "no", "yes", "yes v5", "yes"]], "query": "eq { count { filter_eq { all_rows ; fat32 ; yes } } ; 4 } = true", "question": "four of the microsoft windows versions had support for fat32 ."}, {"topic": "scott savol", "wiki": "https://en.wikipedia.org/wiki/Scott_Savol", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1792668-1.html.csv", "action": "unique", "sent": "the top 7 week was the only week with a 1970s dance music theme .", "annotation": {"scope": "all", "row": "9", "col": "2", "col_other": "1", "criterion": "equal", "value": "1970s dance music", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "theme", "1970s dance music"], "result": null, "ind": 0, "tointer": "select the rows whose theme record fuzzily matches to 1970s dance music .", "tostr": "filter_eq { all_rows ; theme ; 1970s dance music }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; theme ; 1970s dance music } }", "tointer": "select the rows whose theme record fuzzily matches to 1970s dance music . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "theme", "1970s dance music"], "result": null, "ind": 0, "tointer": "select the rows whose theme record fuzzily matches to 1970s dance music .", "tostr": "filter_eq { all_rows ; theme ; 1970s dance music }"}, "week"], "result": "top 7", "ind": 2, "tostr": "hop { filter_eq { all_rows ; theme ; 1970s dance music } ; week }"}, "top 7"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; theme ; 1970s dance music } ; week } ; top 7 }", "tointer": "the week record of this unqiue row is top 7 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; theme ; 1970s dance music } } ; eq { hop { filter_eq { all_rows ; theme ; 1970s dance music } ; week } ; top 7 } } = true", "tointer": "select the rows whose theme record fuzzily matches to 1970s dance music . there is only one such row in the table . the week record of this unqiue row is top 7 ."}, "logic_str": "and { only { filter_eq { all_rows ; theme ; 1970s dance music } } ; eq { hop { filter_eq { all_rows ; theme ; 1970s dance music } ; week } ; top 7 } } = true", "interpret": "select the rows whose theme record fuzzily matches to 1970s dance music . there is only one such row in the table . the week record of this unqiue row is top 7 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "theme_7": 7, "1970s dance music_8": 8, "str_eq_3": 3, "str_hop_2": 2, "week_9": 9, "top 7_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "theme_7": "theme", "1970s dance music_8": "1970s dance music", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "week_9": "week", "top 7_10": "top 7"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "theme_7": [0], "1970s dance music_8": [0], "str_eq_3": [4], "str_hop_2": [3], "week_9": [2], "top 7_10": [3]}, "table_header": ["week", "theme", "song sung", "artist", "status"], "table_cont": [["top 24", "semifinals top 12 ( men )", "you are my lady", "freddie jackson", "advanced"], ["top 20", "semifinals top 10 ( men )", "never too much", "luther vandross", "advanced"], ["top 16", "semifinals top 8 ( men )", "i ca n't help myself ( sugar pie honey bunch )", "four tops", "advanced"], ["top 12", "songs of the 1960s", "ai n't too proud to beg", "the temptations", "safe"], ["top 11", "billboard 1", "against all odds ( take a look at me now )", "phil collins", "safe"], ["top 10", "songs of the 1990s", "one last cry", "brian mcknight", "safe"], ["top 9", "songs of broadway", "the impossible dream ( the quest )", "man of la mancha", "bottom 2"], ["top 8", "year they were born", "she 's gone", "hall & oates", "bottom 3"], ["top 7", "1970s dance music", "everlasting love", "robert knight", "bottom 3"], ["top 6", "songs of the 21st century", "dance with my father", "luther vandross", "safe"], ["top 5", "leiber and stoller billboard top 40", "on broadway everytime you go away", "george benson brian mcknight", "eliminated"]], "query": "and { only { filter_eq { all_rows ; theme ; 1970s dance music } } ; eq { hop { filter_eq { all_rows ; theme ; 1970s dance music } ; week } ; top 7 } } = true", "question": "the top 7 week was the only week with a 1970s dance music theme ."}, {"topic": "turkish cup", "wiki": "https://en.wikipedia.org/wiki/Turkish_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1859269-9.html.csv", "action": "superlative", "sent": "player mehmet y\u0131lmaz scored the lowest number of goals in the turkish cup .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "10", "value_mentioned": "no", "max_or_min": "min", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "goals"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; goals }"}, "player"], "result": "mehmet y\u0131lmaz", "ind": 1, "tostr": "hop { argmin { all_rows ; goals } ; player }"}, "mehmet y\u0131lmaz"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; goals } ; player } ; mehmet y\u0131lmaz } = true", "tointer": "select the row whose goals record of all rows is minimum . the player record of this row is mehmet y\u0131lmaz ."}, "logic_str": "eq { hop { argmin { all_rows ; goals } ; player } ; mehmet y\u0131lmaz } = true", "interpret": "select the row whose goals record of all rows is minimum . the player record of this row is mehmet y\u0131lmaz .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "goals_5": 5, "player_6": 6, "mehmet y\u0131lmaz_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "goals_5": "goals", "player_6": "player", "mehmet y\u0131lmaz_7": "mehmet y\u0131lmaz"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "goals_5": [0], "player_6": [1], "mehmet y\u0131lmaz_7": [2]}, "table_header": ["rank", "player", "goals", "apps", "rate"], "table_cont": [["1", "hami mand\u0131ral\u0131", "31", "54", "0.57"], ["2", "cemil turan", "30", "55", "0.55"], ["2", "fevzi zemzem", "30", "40", "0.75"], ["4", "tanju \u00e7olak", "26", "39", "0.67"], ["5", "\u00fcmit karan", "25", "43", "0.58"], ["5", "hakan \u015f\u00fck\u00fcr", "25", "68", "0.37"], ["7", "ertu\u011frul sa\u011flam", "24", "42", "0.57"], ["8", "bob\u00f4", "24", "38", "0.63"], ["9", "mustafa denizli", "24", "68", "0.35"], ["10", "mehmet y\u0131lmaz", "23", "34", "0.68"]], "query": "eq { hop { argmin { all_rows ; goals } ; player } ; mehmet y\u0131lmaz } = true", "question": "player mehmet y\u0131lmaz scored the lowest number of goals in the turkish cup ."}, {"topic": "list of active finnish navy ships", "wiki": "https://en.wikipedia.org/wiki/List_of_active_Finnish_Navy_ships", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11627546-3.html.csv", "action": "majority", "sent": "most of the finnish navy ships were from builders located in finland .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "fuzzily_match", "value": "finland", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "builder", "finland"], "result": true, "ind": 0, "tointer": "for the builder records of all rows , most of them fuzzily match to finland .", "tostr": "most_eq { all_rows ; builder ; finland } = true"}, "logic_str": "most_eq { all_rows ; builder ; finland } = true", "interpret": "for the builder records of all rows , most of them fuzzily match to finland .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "builder_3": 3, "finland_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "builder_3": "builder", "finland_4": "finland"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "builder_3": [0], "finland_4": [0]}, "table_header": ["class", "ships in class", "pennant number", "builder", "commissioned"], "table_cont": [["katanp\u00e4\u00e4 class", "katanp\u00e4\u00e4", "40", "intermarine spa , sarzana , italy", "2012 -"], ["katanp\u00e4\u00e4 class", "purunp\u00e4\u00e4", "41", "intermarine spa , sarzana , italy", "2012 -"], ["katanp\u00e4\u00e4 class", "vahterp\u00e4\u00e4", "42", "intermarine spa , sarzana , italy", "2012 -"], ["kuha class", "kuha 21", "21", "laivateollisuus , turku , finland", "1974 - 1975"], ["kuha class", "kuha 23", "23", "laivateollisuus , turku , finland", "1974 - 1975"], ["kuha class", "kuha 24", "24", "laivateollisuus , turku , finland", "1974 - 1975"], ["kuha class", "kuha 26", "26", "laivateollisuus , turku , finland", "1974 - 1975"], ["kiiski class", "kiiski 1", "521", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 3", "523", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 4", "524", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 5", "525", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 6", "526", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 7", "527", "fiskars oy , turku , finland", "1982 - 1984"]], "query": "most_eq { all_rows ; builder ; finland } = true", "question": "most of the finnish navy ships were from builders located in finland ."}, {"topic": "eurovision song contest 1963", "wiki": "https://en.wikipedia.org/wiki/Eurovision_Song_Contest_1963", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-182845-1.html.csv", "action": "comparative", "sent": "ronnie carroll had twelve more points than carmela corren .", "annotation": {"row_1": "1", "row_2": "4", "col": "7", "col_other": "3", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "12", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "artist", "ronnie carroll"], "result": null, "ind": 0, "tointer": "select the rows whose artist record fuzzily matches to ronnie carroll .", "tostr": "filter_eq { all_rows ; artist ; ronnie carroll }"}, "points"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; artist ; ronnie carroll } ; points }", "tointer": "select the rows whose artist record fuzzily matches to ronnie carroll . take the points record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "artist", "carmela corren"], "result": null, "ind": 1, "tointer": "select the rows whose artist record fuzzily matches to carmela corren .", "tostr": "filter_eq { all_rows ; artist ; carmela corren }"}, "points"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; artist ; carmela corren } ; points }", "tointer": "select the rows whose artist record fuzzily matches to carmela corren . take the points record of this row ."}], "result": "12", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; artist ; ronnie carroll } ; points } ; hop { filter_eq { all_rows ; artist ; carmela corren } ; points } }"}, "12"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; artist ; ronnie carroll } ; points } ; hop { filter_eq { all_rows ; artist ; carmela corren } ; points } } ; 12 } = true", "tointer": "select the rows whose artist record fuzzily matches to ronnie carroll . take the points record of this row . select the rows whose artist record fuzzily matches to carmela corren . take the points record of this row . the first record is 12 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; artist ; ronnie carroll } ; points } ; hop { filter_eq { all_rows ; artist ; carmela corren } ; points } } ; 12 } = true", "interpret": "select the rows whose artist record fuzzily matches to ronnie carroll . take the points record of this row . select the rows whose artist record fuzzily matches to carmela corren . take the points record of this row . the first record is 12 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "artist_8": 8, "ronnie carroll_9": 9, "points_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "artist_12": 12, "carmela corren_13": 13, "points_14": 14, "12_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "artist_8": "artist", "ronnie carroll_9": "ronnie carroll", "points_10": "points", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "artist_12": "artist", "carmela corren_13": "carmela corren", "points_14": "points", "12_15": "12"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "artist_8": [0], "ronnie carroll_9": [0], "points_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "artist_12": [1], "carmela corren_13": [1], "points_14": [3], "12_15": [5]}, "table_header": ["draw", "language", "artist", "song", "english translation", "place", "points"], "table_cont": [["01", "english", "ronnie carroll", "say wonderful things", "-", "4", "28"], ["02", "dutch", "annie palmen", "een speeldoos", "a musical box", "13", "0"], ["03", "german", "heidi br\u00fchl", "marcel", "-", "9", "5"], ["04", "german , english", "carmela corren", "vielleicht geschieht ein wunder", "maybe a miracle will happen", "7", "16"], ["05", "norwegian", "anita thallaug", "solhverv", "solstice", "13", "0"], ["06", "italian", "emilio pericoli", "uno per tutte", "one for all", "3", "37"], ["07", "finnish", "laila halme", "muistojeni laulu", "the song of my memories", "13", "0"], ["08", "danish", "grethe & j\u00f8rgen ingmann", "dansevise", "dance ballad", "1", "42"], ["09", "croatian", "vice vukov", "brodovi", "ships", "11", "3"], ["10", "french", "esther ofarim", "t ' en va pas", "do n't go away", "2", "40"], ["11", "french", "alain barri\u00e8re", "elle \u00e9tait si jolie", "she was so pretty", "5", "25"], ["12", "spanish", "jos\u00e9 guardiola", "algo prodigioso", "something marvellous", "12", "2"], ["13", "swedish", "monica zetterlund", "en g\u00e5ng i stockholm", "once in stockholm", "13", "0"], ["14", "dutch", "jacques raymond", "waarom", "why", "10", "4"], ["15", "french", "fran\u00e7oise hardy", "l'amour s ' en va", "love goes away", "5", "25"], ["16", "french", "nana mouskouri", "\u00e0 force de prier", "by the might of prayer", "8", "13"]], "query": "eq { diff { hop { filter_eq { all_rows ; artist ; ronnie carroll } ; points } ; hop { filter_eq { all_rows ; artist ; carmela corren } ; points } } ; 12 } = true", "question": "ronnie carroll had twelve more points than carmela corren ."}, {"topic": "list of awards and nominations received by ren\u00e9e zellweger", "wiki": "https://en.wikipedia.org/wiki/List_of_awards_and_nominations_received_by_Ren%C3%A9e_Zellweger", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18747538-3.html.csv", "action": "count", "sent": "ren\u00e9e zellweger as an actress has featured in 6 films .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "6", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "film"], "result": null, "ind": 0, "tointer": "select the rows whose film record is arbitrary .", "tostr": "filter_all { all_rows ; film }"}], "result": "6", "ind": 1, "tostr": "count { filter_all { all_rows ; film } }", "tointer": "select the rows whose film record is arbitrary . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; film } } ; 6 } = true", "tointer": "select the rows whose film record is arbitrary . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_all { all_rows ; film } } ; 6 } = true", "interpret": "select the rows whose film record is arbitrary . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "film_5": 5, "6_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "film_5": "film", "6_6": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "film_5": [0], "6_6": [2]}, "table_header": ["year", "category", "film", "result", "lost to"], "table_cont": [["2000", "best actress - musical or comedy", "nurse betty", "won", "-"], ["2001", "best actress - musical or comedy", "bridget jones 's diary", "nominated", "nicole kidman ( moulin rouge ! )"], ["2002", "best actress - musical or comedy", "chicago", "won", "-"], ["2003", "best supporting actress", "cold mountain", "won", "-"], ["2004", "best actress - musical or comedy", "bridget jones : the edge of reason", "nominated", "annette bening ( being julia )"], ["2006", "best actress - musical or comedy", "miss potter", "nominated", "meryl streep ( the devil wears prada )"]], "query": "eq { count { filter_all { all_rows ; film } } ; 6 } = true", "question": "ren\u00e9e zellweger as an actress has featured in 6 films ."}, {"topic": "1976 formula one season", "wiki": "https://en.wikipedia.org/wiki/1976_Formula_One_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1140084-2.html.csv", "action": "superlative", "sent": "in the 1976 formula one season , the latest race won by ferrari team took place on july 18th .", "annotation": {"scope": "subset", "col_superlative": "2", "row_superlative": "9", "value_mentioned": "yes", "max_or_min": "max", "other_col": "7", "subset": {"col": "7", "criterion": "equal", "value": "ferrari"}}, "logic": {"func": "eq", "args": [{"func": "max", "args": [{"func": "filter_str_eq", "args": ["all_rows", "constructor", "ferrari"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; constructor ; ferrari }", "tointer": "select the rows whose constructor record fuzzily matches to ferrari ."}, "date"], "result": "18 july", "ind": 1, "tostr": "max { filter_eq { all_rows ; constructor ; ferrari } ; date }", "tointer": "select the rows whose constructor record fuzzily matches to ferrari . the maximum date record of these rows is 18 july ."}, "18 july"], "result": true, "ind": 2, "tostr": "eq { max { filter_eq { all_rows ; constructor ; ferrari } ; date } ; 18 july } = true", "tointer": "select the rows whose constructor record fuzzily matches to ferrari . the maximum date record of these rows is 18 july ."}, "logic_str": "eq { max { filter_eq { all_rows ; constructor ; ferrari } ; date } ; 18 july } = true", "interpret": "select the rows whose constructor record fuzzily matches to ferrari . the maximum date record of these rows is 18 july .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "max_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "constructor_5": 5, "ferrari_6": 6, "date_7": 7, "18 july_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "max_1": "max", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "constructor_5": "constructor", "ferrari_6": "ferrari", "date_7": "date", "18 july_8": "18 july"}, "g_adj": {"eq_2": [3], "result_3": [], "max_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "constructor_5": [0], "ferrari_6": [0], "date_7": [1], "18 july_8": [2]}, "table_header": ["race", "date", "location", "pole position", "fastest lap", "race winner", "constructor", "report"], "table_cont": [["brazilian grand prix", "25 january", "interlagos", "james hunt", "jean - pierre jarier", "niki lauda", "ferrari", "report"], ["south african grand prix", "6 march", "kyalami", "james hunt", "niki lauda", "niki lauda", "ferrari", "report"], ["united states grand prix west", "28 march", "long beach", "clay regazzoni", "clay regazzoni", "clay regazzoni", "ferrari", "report"], ["spanish grand prix", "2 may", "jarama", "james hunt", "jochen mass", "james hunt", "mclaren - ford", "report"], ["belgian grand prix", "16 may", "zolder", "niki lauda", "niki lauda", "niki lauda", "ferrari", "report"], ["monaco grand prix", "30 may", "monaco", "niki lauda", "clay regazzoni", "niki lauda", "ferrari", "report"], ["swedish grand prix", "13 june", "anderstorp", "jody scheckter", "mario andretti", "jody scheckter", "tyrrell - ford", "report"], ["french grand prix", "4 july", "paul ricard", "james hunt", "niki lauda", "james hunt", "mclaren - ford", "report"], ["british grand prix", "18 july", "brands hatch", "niki lauda", "niki lauda", "niki lauda", "ferrari", "report"], ["german grand prix", "1 august", "n\u00fcrburgring", "james hunt", "jody scheckter", "james hunt", "mclaren - ford", "report"], ["austrian grand prix", "15 august", "\u00f6sterreichring", "james hunt", "james hunt", "john watson", "penske - ford", "report"], ["dutch grand prix", "29 august", "zandvoort", "ronnie peterson", "clay regazzoni", "james hunt", "mclaren - ford", "report"], ["italian grand prix", "12 september", "monza", "jacques laffite", "ronnie peterson", "ronnie peterson", "march - ford", "report"], ["canadian grand prix", "3 october", "mosport", "james hunt", "patrick depailler", "james hunt", "mclaren - ford", "report"], ["united states grand prix", "10 october", "watkins glen", "james hunt", "james hunt", "james hunt", "mclaren - ford", "report"], ["japanese grand prix", "24 october", "fuji speedway", "mario andretti", "masahiro hasemi", "mario andretti", "lotus - ford", "report"]], "query": "eq { max { filter_eq { all_rows ; constructor ; ferrari } ; date } ; 18 july } = true", "question": "in the 1976 formula one season , the latest race won by ferrari team took place on july 18th ."}, {"topic": "vissel kobe", "wiki": "https://en.wikipedia.org/wiki/Vissel_Kobe", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1082589-1.html.csv", "action": "aggregation", "sent": "vissel kobe 's average attendance per game in the seasons from 1997 to 2012 was 11360 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "11360", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "attendance / g"], "result": "11360", "ind": 0, "tostr": "avg { all_rows ; attendance / g }"}, "11360"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; attendance / g } ; 11360 } = true", "tointer": "the average of the attendance / g record of all rows is 11360 ."}, "logic_str": "round_eq { avg { all_rows ; attendance / g } ; 11360 } = true", "interpret": "the average of the attendance / g record of all rows is 11360 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "attendance / g_4": 4, "11360_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "attendance / g_4": "attendance / g", "11360_5": "11360"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "attendance / g_4": [0], "11360_5": [1]}, "table_header": ["season", "div", "tms", "pos", "attendance / g", "emperor 's cup"], "table_cont": [["1997", "j1", "17", "16", "6567", "4th round"], ["1998", "j1", "18", "17", "7686", "3rd round"], ["1999", "j1", "16", "10", "7691", "3rd round"], ["2000", "j1", "16", "13", "7512", "semi - final"], ["2001", "j1", "16", "12", "13872", "4th round"], ["2002", "j1", "16", "14", "10467", "3rd round"], ["2003", "j1", "16", "13", "11195", "quarter - final"], ["2004", "j1", "16", "11", "15735", "4th round"], ["2005", "j1", "18", "18", "14913", "4th round"], ["2006", "j2", "13", "3", "6910", "3rd round"], ["2007", "j1", "18", "10", "12460", "5th round"], ["2008", "j1", "18", "10", "12981", "5th round"], ["2009", "j1", "18", "14", "13068", "4th round"], ["2010", "j1", "18", "15", "12824", "3rd round"], ["2011", "j1", "18", "9", "13233", "3rd round"], ["2012", "j1", "18", "16", "14638", "2nd round"]], "query": "round_eq { avg { all_rows ; attendance / g } ; 11360 } = true", "question": "vissel kobe 's average attendance per game in the seasons from 1997 to 2012 was 11360 ."}, {"topic": "mario mand\u017euki\u0107", "wiki": "https://en.wikipedia.org/wiki/Mario_Mand%C5%BEuki%C4%87", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11914827-2.html.csv", "action": "ordinal", "sent": "the 3rd match mario mand\u017euki\u0107 played at municipal stadium , pozna\u0144 was on 14 june 2012 .", "annotation": {"scope": "subset", "row": "8", "col": "1", "order": "3", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "yes", "subset": {"col": "2", "criterion": "fuzzily_match", "value": "municipal stadium , pozna\u0144"}}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "municipal stadium , pozna\u0144"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 }", "tointer": "select the rows whose venue record fuzzily matches to municipal stadium , pozna\u0144 ."}, "date", "3"], "result": "14 june 2012", "ind": 1, "tostr": "nth_min { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 }", "tointer": "select the rows whose venue record fuzzily matches to municipal stadium , pozna\u0144 . the 3rd minimum date record of these rows is 14 june 2012 ."}, "14 june 2012"], "result": true, "ind": 2, "tostr": "eq { nth_min { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; 14 june 2012 }", "tointer": "select the rows whose venue record fuzzily matches to municipal stadium , pozna\u0144 . the 3rd minimum date record of these rows is 14 june 2012 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "municipal stadium , pozna\u0144"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 }", "tointer": "select the rows whose venue record fuzzily matches to municipal stadium , pozna\u0144 ."}, "date", "3"], "result": null, "ind": 3, "tostr": "nth_argmin { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 }"}, "date"], "result": "14 june 2012", "ind": 4, "tostr": "hop { nth_argmin { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; date }"}, "14 june 2012"], "result": true, "ind": 5, "tostr": "eq { hop { nth_argmin { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; date } ; 14 june 2012 }", "tointer": "the date record of the row with 3rd minimum date record is 14 june 2012 ."}], "result": true, "ind": 6, "tostr": "and { eq { nth_min { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; 14 june 2012 } ; eq { hop { nth_argmin { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; date } ; 14 june 2012 } } = true", "tointer": "select the rows whose venue record fuzzily matches to municipal stadium , pozna\u0144 . the 3rd minimum date record of these rows is 14 june 2012 . the date record of the row with 3rd minimum date record is 14 june 2012 ."}, "logic_str": "and { eq { nth_min { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; 14 june 2012 } ; eq { hop { nth_argmin { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; date } ; 14 june 2012 } } = true", "interpret": "select the rows whose venue record fuzzily matches to municipal stadium , pozna\u0144 . the 3rd minimum date record of these rows is 14 june 2012 . the date record of the row with 3rd minimum date record is 14 june 2012 .", "num_func": 8, "nid": 7, "g_ids": {"and_6": 6, "result_7": 7, "eq_2": 2, "nth_min_1": 1, "filter_str_eq_0": 0, "all_rows_8": 8, "venue_9": 9, "municipal stadium , pozna\u0144_10": 10, "date_11": 11, "3_12": 12, "14 june 2012_13": 13, "str_eq_5": 5, "str_hop_4": 4, "nth_argmin_3": 3, "date_14": 14, "3_15": 15, "date_16": 16, "14 june 2012_17": 17}, "g_ids_features": {"and_6": "and", "result_7": "true", "eq_2": "eq", "nth_min_1": "nth_min", "filter_str_eq_0": "filter_str_eq", "all_rows_8": "all_rows", "venue_9": "venue", "municipal stadium , pozna\u0144_10": "municipal stadium , pozna\u0144", "date_11": "date", "3_12": "3", "14 june 2012_13": "14 june 2012", "str_eq_5": "str_eq", "str_hop_4": "str_hop", "nth_argmin_3": "nth_argmin", "date_14": "date", "3_15": "3", "date_16": "date", "14 june 2012_17": "14 june 2012"}, "g_adj": {"and_6": [7], "result_7": [], "eq_2": [6], "nth_min_1": [2], "filter_str_eq_0": [1, 3], "all_rows_8": [0], "venue_9": [0], "municipal stadium , pozna\u0144_10": [0], "date_11": [1], "3_12": [1], "14 june 2012_13": [2], "str_eq_5": [6], "str_hop_4": [5], "nth_argmin_3": [4], "date_14": [3], "3_15": [3], "date_16": [4], "14 june 2012_17": [5]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["10 september 2008", "maksimir stadium , zagreb , croatia", "1 - 3", "1 - 4", "2010 world cup qualifying"], ["12 october 2010", "maksimir stadium , zagreb , croatia", "1 - 1", "2 - 1", "friendly"], ["3 june 2011", "poljud stadium , split , croatia", "1 - 1", "2 - 1", "euro 2012 qualifying"], ["11 october 2011", "stadion kantrida , rijeka , croatia", "2 - 0", "2 - 0", "euro 2012 qualifying"], ["11 november 2011", "t\u00fcrk telekom arena , istanbul , turkey", "0 - 2", "0 - 3", "euro 2012 qualifying"], ["10 june 2012", "municipal stadium , pozna\u0144 , poland", "0 - 1", "1 - 3", "uefa euro 2012"], ["10 june 2012", "municipal stadium , pozna\u0144 , poland", "1 - 3", "1 - 3", "uefa euro 2012"], ["14 june 2012", "municipal stadium , pozna\u0144 , poland", "1 - 1", "1 - 1", "uefa euro 2012"], ["16 october 2012", "stadion gradski vrt , osijek , croatia", "1 - 0", "2 - 0", "2014 world cup qualifying"], ["6 february 2013", "craven cottage , london , england", "0 - 1", "0 - 4", "friendly"], ["22 march 2013", "stadion maksimir , zagreb , croatia", "1 - 0", "2 - 0", "2014 world cup qualifying"], ["6 september 2013", "stadion crvena zvezda , belgrade , serbia", "0 - 1", "1 - 1", "2014 world cup qualifying"]], "query": "and { eq { nth_min { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; 14 june 2012 } ; eq { hop { nth_argmin { filter_eq { all_rows ; venue ; municipal stadium , pozna\u0144 } ; date ; 3 } ; date } ; 14 june 2012 } } = true", "question": "the 3rd match mario mand\u017euki\u0107 played at municipal stadium , pozna\u0144 was on 14 june 2012 ."}, {"topic": "list of cinema and movie theater chains", "wiki": "https://en.wikipedia.org/wiki/List_of_cinema_and_movie_theater_chains", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13274048-1.html.csv", "action": "ordinal", "sent": "of the cinema and movie theater chains , the one with the 2nd highest number of sites is amc entertainment inc .", "annotation": {"row": "2", "col": "5", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "sites", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; sites ; 2 }"}, "circuit"], "result": "amc entertainment inc", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; sites ; 2 } ; circuit }"}, "amc entertainment inc"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; sites ; 2 } ; circuit } ; amc entertainment inc } = true", "tointer": "select the row whose sites record of all rows is 2nd maximum . the circuit record of this row is amc entertainment inc ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; sites ; 2 } ; circuit } ; amc entertainment inc } = true", "interpret": "select the row whose sites record of all rows is 2nd maximum . the circuit record of this row is amc entertainment inc .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "sites_5": 5, "2_6": 6, "circuit_7": 7, "amc entertainment inc_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "sites_5": "sites", "2_6": "2", "circuit_7": "circuit", "amc entertainment inc_8": "amc entertainment inc"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "sites_5": [0], "2_6": [0], "circuit_7": [1], "amc entertainment inc_8": [2]}, "table_header": ["rank", "circuit", "headquarters", "screens", "sites"], "table_cont": [["1", "regal entertainment group", "knoxville , tn", "7367", "580"], ["2", "amc entertainment inc", "kansas city , mo", "5894", "483"], ["3", "cinemark theatres", "plano , tx", "3895", "298"], ["4", "carmike cinemas , inc", "columbus , ga", "2242", "232"], ["5", "cineplex entertainment", "toronto , on", "1438", "133"], ["6", "rave motion pictures", "dallas , tx", "939", "62"], ["7", "marcus theatres", "milwaukee , wi", "687", "55"], ["8", "national amusements", "dedham , ma", "450", "34"], ["9", "empire theatres", "stellarton , ns", "438", "53"]], "query": "eq { hop { nth_argmax { all_rows ; sites ; 2 } ; circuit } ; amc entertainment inc } = true", "question": "of the cinema and movie theater chains , the one with the 2nd highest number of sites is amc entertainment inc ."}, {"topic": "judo at the 1997 mediterranean games", "wiki": "https://en.wikipedia.org/wiki/Judo_at_the_1997_Mediterranean_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15250079-3.html.csv", "action": "superlative", "sent": "spain won the most bronze medals in judo at the 1997 mediterranean games .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "bronze"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; bronze }"}, "nation"], "result": "spain", "ind": 1, "tostr": "hop { argmax { all_rows ; bronze } ; nation }"}, "spain"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; bronze } ; nation } ; spain } = true", "tointer": "select the row whose bronze record of all rows is maximum . the nation record of this row is spain ."}, "logic_str": "eq { hop { argmax { all_rows ; bronze } ; nation } ; spain } = true", "interpret": "select the row whose bronze record of all rows is maximum . the nation record of this row is spain .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "bronze_5": 5, "nation_6": 6, "spain_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "bronze_5": "bronze", "nation_6": "nation", "spain_7": "spain"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "bronze_5": [0], "nation_6": [1], "spain_7": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "france", "7", "3", "4", "14"], ["2", "italy", "5", "2", "5", "12"], ["3", "spain", "1", "2", "6", "9"], ["4", "turkey", "1", "1", "4", "5"], ["5", "algeria", "0", "2", "1", "3"], ["6 =", "tunisia", "0", "1", "3", "4"], ["6 =", "yugoslavia", "0", "1", "3", "4"], ["8 =", "egypt", "0", "1", "0", "1"], ["8 =", "slovenia", "0", "1", "0", "1"], ["10", "morocco", "0", "0", "2", "2"]], "query": "eq { hop { argmax { all_rows ; bronze } ; nation } ; spain } = true", "question": "spain won the most bronze medals in judo at the 1997 mediterranean games ."}, {"topic": "list of rizzoli & isles episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Rizzoli_%26_Isles_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27969432-3.html.csv", "action": "superlative", "sent": "the episode of rizzoli & isles titled \" rebel without a pause \" was the highest rated of its season .", "annotation": {"scope": "all", "col_superlative": "8", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "us viewers ( in millions )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; us viewers ( in millions ) }"}, "title"], "result": "rebel without a pause", "ind": 1, "tostr": "hop { argmax { all_rows ; us viewers ( in millions ) } ; title }"}, "rebel without a pause"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; us viewers ( in millions ) } ; title } ; rebel without a pause } = true", "tointer": "select the row whose us viewers ( in millions ) record of all rows is maximum . the title record of this row is rebel without a pause ."}, "logic_str": "eq { hop { argmax { all_rows ; us viewers ( in millions ) } ; title } ; rebel without a pause } = true", "interpret": "select the row whose us viewers ( in millions ) record of all rows is maximum . the title record of this row is rebel without a pause .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "us viewers (in millions)_5": 5, "title_6": 6, "rebel without a pause_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "us viewers (in millions)_5": "us viewers ( in millions )", "title_6": "title", "rebel without a pause_7": "rebel without a pause"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "us viewers (in millions)_5": [0], "title_6": [1], "rebel without a pause_7": [2]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "original air date", "production", "us viewers ( in millions )"], "table_cont": [["11", "1", "we do n't need another hero", "michael zinberg", "janet tamaro", "july 11 , 2011", "2 m5601", "6.38"], ["12", "2", "living proof", "bethany rooney", "dee johnson", "july 18 , 2011", "2 m5602", "6.39"], ["13", "3", "sailor man", "michael zinberg", "joel fields", "july 25 , 2011", "2 m5603", "6.04"], ["14", "4", "brown eyed girl", "mark haber", "julie h\u00e3bert", "august 1 , 2011", "2 m5607", "6.45"], ["15", "5", "do n't hate the player", "holly dale", "david gould & janet tamaro", "august 8 , 2011", "2 m5604", "6.46"], ["16", "6", "rebel without a pause", "nelson mccormick", "elizabeth benjamin & janet tamaro", "august 15 , 2011", "2 m5605", "6.74"], ["17", "7", "bloodlines", "michael zinberg", "elizabeth benjamin & dee johnson", "august 22 , 2011", "2 m5606", "6.27"], ["18", "8", "my own worst enemy", "terrence o'hara", "joel fields & emilia serrano", "august 29 , 2011", "2 m5608", "6.71"], ["19", "9", "gone daddy gone", "fred toye", "david gould & dee johnson", "september 5 , 2011", "2 m5609", "6.69"], ["20", "10", "remember me", "randy zisk", "david j north & janet tamaro", "september 12 , 2011", "2 m5610", "5.63"], ["21", "11", "can i get a witness", "andy wolk", "janet tamaro & elizabeth benjamin", "november 28 , 2011", "2 m5611", "4.78"], ["22", "12", "he ai n't heavy , he 's my brother", "steve robin", "david gould & dee johnson", "december 5 , 2011", "2 m5612", "3.86"], ["23", "13", "seventeen ai n't so sweet", "rod holcomb", "shelley meals & darin goldberg", "december 12 , 2011", "2 m5613", "4.91"]], "query": "eq { hop { argmax { all_rows ; us viewers ( in millions ) } ; title } ; rebel without a pause } = true", "question": "the episode of rizzoli & isles titled \" rebel without a pause \" was the highest rated of its season ."}, {"topic": "promotion to the 2 . bundesliga", "wiki": "https://en.wikipedia.org/wiki/Promotion_to_the_2._Bundesliga", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14242137-14.html.csv", "action": "unique", "sent": "the only time that sv sandhausen was the champion between 2008 and 2013 was in the 2011-2012 season .", "annotation": {"scope": "all", "row": "4", "col": "2", "col_other": "1", "criterion": "equal", "value": "sv sandhausen", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "champions", "sv sandhausen"], "result": null, "ind": 0, "tointer": "select the rows whose champions record fuzzily matches to sv sandhausen .", "tostr": "filter_eq { all_rows ; champions ; sv sandhausen }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; champions ; sv sandhausen } }", "tointer": "select the rows whose champions record fuzzily matches to sv sandhausen . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "champions", "sv sandhausen"], "result": null, "ind": 0, "tointer": "select the rows whose champions record fuzzily matches to sv sandhausen .", "tostr": "filter_eq { all_rows ; champions ; sv sandhausen }"}, "season"], "result": "2011 - 12", "ind": 2, "tostr": "hop { filter_eq { all_rows ; champions ; sv sandhausen } ; season }"}, "2011 - 12"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; champions ; sv sandhausen } ; season } ; 2011 - 12 }", "tointer": "the season record of this unqiue row is 2011 - 12 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; champions ; sv sandhausen } } ; eq { hop { filter_eq { all_rows ; champions ; sv sandhausen } ; season } ; 2011 - 12 } } = true", "tointer": "select the rows whose champions record fuzzily matches to sv sandhausen . there is only one such row in the table . the season record of this unqiue row is 2011 - 12 ."}, "logic_str": "and { only { filter_eq { all_rows ; champions ; sv sandhausen } } ; eq { hop { filter_eq { all_rows ; champions ; sv sandhausen } ; season } ; 2011 - 12 } } = true", "interpret": "select the rows whose champions record fuzzily matches to sv sandhausen . there is only one such row in the table . the season record of this unqiue row is 2011 - 12 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "champions_7": 7, "sv sandhausen_8": 8, "str_eq_3": 3, "str_hop_2": 2, "season_9": 9, "2011 - 12_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "champions_7": "champions", "sv sandhausen_8": "sv sandhausen", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "season_9": "season", "2011 - 12_10": "2011 - 12"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "champions_7": [0], "sv sandhausen_8": [0], "str_eq_3": [4], "str_hop_2": [3], "season_9": [2], "2011 - 12_10": [3]}, "table_header": ["season", "champions", "runners - up", "promotion playoff", "standings"], "table_cont": [["2008 - 09", "1 . fc union berlin", "fortuna d\u00fcsseldorf", "sc paderborn 07", "table"], ["2009 - 10", "vfl osnabr\u00fcck", "fc erzgebirge aue", "fc ingolstadt 04", "table"], ["2010 - 11", "eintracht braunschweig", "fc hansa rostock", "dynamo dresden", "table"], ["2011 - 12", "sv sandhausen", "vfr aalen", "jahn regensburg", "table"], ["2012 - 13", "karlsruher sc", "arminia bielefeld", "vfl osnabr\u00fcck", "table"]], "query": "and { only { filter_eq { all_rows ; champions ; sv sandhausen } } ; eq { hop { filter_eq { all_rows ; champions ; sv sandhausen } ; season } ; 2011 - 12 } } = true", "question": "the only time that sv sandhausen was the champion between 2008 and 2013 was in the 2011-2012 season ."}, {"topic": "united states house of representatives elections , 1994", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1994", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341522-41.html.csv", "action": "comparative", "sent": "curt weldon got a higher vote percentage than john murtha in the 1994 united states house of representatives elections .", "annotation": {"row_1": "3", "row_2": "5", "col": "6", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "curt weldon"], "result": null, "ind": 0, "tointer": "select the rows whose incumbent record fuzzily matches to curt weldon .", "tostr": "filter_eq { all_rows ; incumbent ; curt weldon }"}, "opponent"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; incumbent ; curt weldon } ; opponent }", "tointer": "select the rows whose incumbent record fuzzily matches to curt weldon . take the opponent record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "john murtha"], "result": null, "ind": 1, "tointer": "select the rows whose incumbent record fuzzily matches to john murtha .", "tostr": "filter_eq { all_rows ; incumbent ; john murtha }"}, "opponent"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; incumbent ; john murtha } ; opponent }", "tointer": "select the rows whose incumbent record fuzzily matches to john murtha . take the opponent record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; incumbent ; curt weldon } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; john murtha } ; opponent } } = true", "tointer": "select the rows whose incumbent record fuzzily matches to curt weldon . take the opponent record of this row . select the rows whose incumbent record fuzzily matches to john murtha . take the opponent record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; incumbent ; curt weldon } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; john murtha } ; opponent } } = true", "interpret": "select the rows whose incumbent record fuzzily matches to curt weldon . take the opponent record of this row . select the rows whose incumbent record fuzzily matches to john murtha . take the opponent record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "incumbent_7": 7, "curt weldon_8": 8, "opponent_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "incumbent_11": 11, "john murtha_12": 12, "opponent_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "incumbent_7": "incumbent", "curt weldon_8": "curt weldon", "opponent_9": "opponent", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "incumbent_11": "incumbent", "john murtha_12": "john murtha", "opponent_13": "opponent"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "incumbent_7": [0], "curt weldon_8": [0], "opponent_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "incumbent_11": [1], "john murtha_12": [1], "opponent_13": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "status", "opponent"], "table_cont": [["pennsylvania4", "ron klink", "democratic", "1992", "re - elected", "ron klink ( d ) 64.2 % ed peglow ( r ) 35.8 %"], ["pennsylvania5", "william f clinger , jr", "republican", "1978", "re - elected", "william f clinger , jr ( r ) unopposed"], ["pennsylvania7", "curt weldon", "republican", "1986", "re - elected", "curt weldon ( r ) 69.7 % sara r nichols ( d ) 30.3 %"], ["pennsylvania9", "bud shuster", "republican", "1972", "re - elected", "bud shuster ( r ) unopposed"], ["pennsylvania12", "john murtha", "democratic", "1974", "re - elected", "john murtha ( d ) 68.9 % bill choby ( r ) 31.1 %"], ["pennsylvania17", "george gekas", "republican", "1982", "re - elected", "george gekas ( r ) unopposed"], ["pennsylvania18", "rick santorum", "republican", "1990", "retired to run for us senate democratic gain", "michael f doyle ( d ) 54.8 % john mccarty ( r ) 45.2 %"], ["pennsylvania19", "william f goodling", "republican", "1974", "re - elected", "william f goodling ( r ) unopposed"]], "query": "greater { hop { filter_eq { all_rows ; incumbent ; curt weldon } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; john murtha } ; opponent } } = true", "question": "curt weldon got a higher vote percentage than john murtha in the 1994 united states house of representatives elections ."}, {"topic": "1958 in brazilian football", "wiki": "https://en.wikipedia.org/wiki/1958_in_Brazilian_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15282692-1.html.csv", "action": "unique", "sent": "they only time there was a -10 difference when there were 6 points was against am\u00e3rica .", "annotation": {"scope": "subset", "row": "9", "col": "8", "col_other": "2", "criterion": "equal", "value": "-10", "subset": {"col": "3", "criterion": "equal", "value": "6"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": [{"func": "filter_eq", "args": ["all_rows", "points", "6"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; points ; 6 }", "tointer": "select the rows whose points record is equal to 6 ."}, "difference", "-10"], "result": null, "ind": 1, "tointer": "select the rows whose points record is equal to 6 . among these rows , select the rows whose difference record is equal to -10 .", "tostr": "filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } }", "tointer": "select the rows whose points record is equal to 6 . among these rows , select the rows whose difference record is equal to -10 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": [{"func": "filter_eq", "args": ["all_rows", "points", "6"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; points ; 6 }", "tointer": "select the rows whose points record is equal to 6 ."}, "difference", "-10"], "result": null, "ind": 1, "tointer": "select the rows whose points record is equal to 6 . among these rows , select the rows whose difference record is equal to -10 .", "tostr": "filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 }"}, "team"], "result": "am\u00e3rica", "ind": 3, "tostr": "hop { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } ; team }"}, "am\u00e3rica"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } ; team } ; am\u00e3rica }", "tointer": "the team record of this unqiue row is am\u00e3rica ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } } ; eq { hop { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } ; team } ; am\u00e3rica } } = true", "tointer": "select the rows whose points record is equal to 6 . among these rows , select the rows whose difference record is equal to -10 . there is only one such row in the table . the team record of this unqiue row is am\u00e3rica ."}, "logic_str": "and { only { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } } ; eq { hop { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } ; team } ; am\u00e3rica } } = true", "interpret": "select the rows whose points record is equal to 6 . among these rows , select the rows whose difference record is equal to -10 . there is only one such row in the table . the team record of this unqiue row is am\u00e3rica .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_eq_1": 1, "filter_eq_0": 0, "all_rows_7": 7, "points_8": 8, "6_9": 9, "difference_10": 10, "-10_11": 11, "str_eq_4": 4, "str_hop_3": 3, "team_12": 12, "am\u00e3rica_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_eq_1": "filter_eq", "filter_eq_0": "filter_eq", "all_rows_7": "all_rows", "points_8": "points", "6_9": "6", "difference_10": "difference", "-10_11": "-10", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "team_12": "team", "am\u00e3rica_13": "am\u00e3rica"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_eq_1": [2, 3], "filter_eq_0": [1], "all_rows_7": [0], "points_8": [0], "6_9": [0], "difference_10": [1], "-10_11": [1], "str_eq_4": [5], "str_hop_3": [4], "team_12": [3], "am\u00e3rica_13": [4]}, "table_header": ["position", "team", "points", "played", "drawn", "lost", "against", "difference"], "table_cont": [["1", "vasco da gama", "15", "9", "1", "1", "12", "14"], ["2", "flamengo", "13", "9", "1", "2", "15", "9"], ["3", "corinthians", "11", "9", "3", "2", "11", "3"], ["4", "s\u00e3o paulo", "10", "9", "2", "3", "19", "9"], ["5", "botafogo", "8", "9", "2", "4", "25", "- 4"], ["6", "fluminense", "8", "9", "2", "4", "16", "- 6"], ["7", "santos", "7", "9", "1", "5", "24", "0"], ["8", "palmeiras", "6", "9", "0", "6", "28", "- 6"], ["9", "am\u00e3rica", "6", "9", "0", "6", "25", "- 10"], ["10", "portuguesa", "6", "9", "2", "5", "22", "- 9"]], "query": "and { only { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } } ; eq { hop { filter_eq { filter_eq { all_rows ; points ; 6 } ; difference ; -10 } ; team } ; am\u00e3rica } } = true", "question": "they only time there was a -10 difference when there were 6 points was against am\u00e3rica ."}, {"topic": "conference carolinas", "wiki": "https://en.wikipedia.org/wiki/Conference_Carolinas", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11658094-3.html.csv", "action": "superlative", "sent": "east carolina university has the most enrollment among institutions in the conference carolinas .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "enrollment"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; enrollment }"}, "institution"], "result": "east carolina university", "ind": 1, "tostr": "hop { argmax { all_rows ; enrollment } ; institution }"}, "east carolina university"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; east carolina university } = true", "tointer": "select the row whose enrollment record of all rows is maximum . the institution record of this row is east carolina university ."}, "logic_str": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; east carolina university } = true", "interpret": "select the row whose enrollment record of all rows is maximum . the institution record of this row is east carolina university .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "enrollment_5": 5, "institution_6": 6, "east carolina university_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "enrollment_5": "enrollment", "institution_6": "institution", "east carolina university_7": "east carolina university"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "enrollment_5": [0], "institution_6": [1], "east carolina university_7": [2]}, "table_header": ["institution", "location", "founded", "type", "enrollment", "nickname", "joined", "left", "current conference"], "table_cont": [["anderson university", "anderson , south carolina", "1911", "private", "2907", "trojans", "1998", "2010", "sac"], ["appalachian state university", "boone , north carolina", "1899", "public", "17589", "mountaineers", "1930", "1967", "socon ( sun belt in 2014 ) ( ncaa division i )"], ["catawba college", "salisbury , north carolina", "1851", "private", "1300", "indians", "1930", "1975", "sac"], ["coker college", "hartsville , south carolina", "1908", "private", "1200", "cobras", "1991", "2013", "sac"], ["east carolina university", "greenville , north carolina", "1907", "public", "27386", "pirates", "1947", "1962", "c - usa ( the american in 2014 ) ( ncaa division i )"], ["elon university", "elon , north carolina", "1889", "private", "6720", "phoenix", "1930", "1975", "socon ( caa in 2014 ) ( ncaa division i )"], ["guilford college", "greensboro , north carolina", "1837", "private", "2706", "quakers", "1930", "1988", "odac ( ncaa division iii )"], ["high point university", "high point , north carolina", "1924", "private", "4519", "panthers", "1930", "1997", "big south ( ncaa division i )"], ["lenoirrhyne university", "hickory , north carolina", "1891", "private", "1983", "bears", "1930", "1975", "sac"], ["longwood university", "farmville , virginia", "1839", "public", "4800", "lancers", "1995", "2003", "big south ( ncaa division i )"], ["mars hill college", "mars hill , north carolina", "1856", "private", "1370", "lions", "1973", "1975", "sac"], ["newberry college", "newberry , south carolina", "1856", "private", "949", "wolves", "1961", "1972", "sac"], ["university of north carolina at pembroke", "pembroke , north carolina", "1887", "public", "6433", "braves", "1976", "1992", "peach belt ( pbc )"], ["presbyterian college", "clinton , south carolina", "1880", "private", "1300", "blue hose", "1965", "1972", "big south ( ncaa division i )"], ["queens university of charlotte", "charlotte , north carolina", "1857", "private", "2386", "royals", "1995", "2013", "sac"], ["st andrews university", "laurinburg , north carolina", "1958", "private", "600", "knights", "1988", "2012", "aac ( naia )"], ["western carolina university", "cullowhee , north carolina", "1889", "public", "9608", "catamounts", "1933", "1975", "socon ( ncaa division i )"]], "query": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; east carolina university } = true", "question": "east carolina university has the most enrollment among institutions in the conference carolinas ."}, {"topic": "magdal\u00e9na ryb\u00e1rikov\u00e1", "wiki": "https://en.wikipedia.org/wiki/Magdal%C3%A9na_Ryb%C3%A1rikov%C3%A1", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18058018-8.html.csv", "action": "unique", "sent": "the pr\u016fhonice - prague tournament was the only one in which magdal\u00e9na ryb\u00e1rikov\u00e1 used a carpet ( i ) surface .", "annotation": {"scope": "all", "row": "5", "col": "4", "col_other": "3", "criterion": "equal", "value": "carpet", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "carpet"], "result": null, "ind": 0, "tointer": "select the rows whose surface record fuzzily matches to carpet .", "tostr": "filter_eq { all_rows ; surface ; carpet }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; surface ; carpet } }", "tointer": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "carpet"], "result": null, "ind": 0, "tointer": "select the rows whose surface record fuzzily matches to carpet .", "tostr": "filter_eq { all_rows ; surface ; carpet }"}, "tournament"], "result": "pr\u016fhonice - prague , czech republic", "ind": 2, "tostr": "hop { filter_eq { all_rows ; surface ; carpet } ; tournament }"}, "pr\u016fhonice - prague , czech republic"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; surface ; carpet } ; tournament } ; pr\u016fhonice - prague , czech republic }", "tointer": "the tournament record of this unqiue row is pr\u016fhonice - prague , czech republic ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; surface ; carpet } } ; eq { hop { filter_eq { all_rows ; surface ; carpet } ; tournament } ; pr\u016fhonice - prague , czech republic } } = true", "tointer": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table . the tournament record of this unqiue row is pr\u016fhonice - prague , czech republic ."}, "logic_str": "and { only { filter_eq { all_rows ; surface ; carpet } } ; eq { hop { filter_eq { all_rows ; surface ; carpet } ; tournament } ; pr\u016fhonice - prague , czech republic } } = true", "interpret": "select the rows whose surface record fuzzily matches to carpet . there is only one such row in the table . the tournament record of this unqiue row is pr\u016fhonice - prague , czech republic .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "surface_7": 7, "carpet_8": 8, "str_eq_3": 3, "str_hop_2": 2, "tournament_9": 9, "pr\u016fhonice - prague , czech republic_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "surface_7": "surface", "carpet_8": "carpet", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "tournament_9": "tournament", "pr\u016fhonice - prague , czech republic_10": "pr\u016fhonice - prague , czech republic"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "surface_7": [0], "carpet_8": [0], "str_eq_3": [4], "str_hop_2": [3], "tournament_9": [2], "pr\u016fhonice - prague , czech republic_10": [3]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent in the final", "score in the final"], "table_cont": [["runner - up", "27 march 2005", "ain alsoukhna , egypt", "clay", "monica niculescu", "3 - 6 , 4 - 6"], ["winner", "9 april 2005", "cairo , egypt", "clay", "sarah raab", "6 - 1 , 6 - 3"], ["runner - up", "14 august 2005", "hechingen , germany", "clay", "kirsten flipkens", "4 - 6 , 3 - 6"], ["winner", "17 september 2005", "mestre , italy", "clay", "kira nagy", "6 - 2 , 7 - 5"], ["runner - up", "18 february 2007", "pr\u016fhonice - prague , czech republic", "carpet ( i )", "petra kvitov\u00e1", "5 - 7 , 6 - 7 ( 2 - 7 )"], ["runner - up", "9 december 2007", "p\u0159erov , czech republic", "hard ( i )", "petra kvitov\u00e1", "5 - 7 , 3 - 6"], ["winner", "22 march 2008", "st petersburg - vsevolozhsk , russia", "hard ( i )", "anna lapushchenkova", "6 - 4 , 6 - 2"], ["winner", "5 april 2008", "patras , greece", "hard", "anne keothavong", "6 - 3 , 7 - 5"], ["runner - up", "10 august 2008", "monterrey , mexico", "hard", "yaroslava shvedova", "4 - 6 , 1 - 6"], ["runner - up", "10 october 2010", "ningbo , china", "hard", "alberta brianti", "4 - 6 , 4 - 6"], ["winner", "15 may 2011", "prague , czech republic", "clay", "petra kvitov\u00e1", "6 - 3 , 6 - 4"]], "query": "and { only { filter_eq { all_rows ; surface ; carpet } } ; eq { hop { filter_eq { all_rows ; surface ; carpet } ; tournament } ; pr\u016fhonice - prague , czech republic } } = true", "question": "the pr\u016fhonice - prague tournament was the only one in which magdal\u00e9na ryb\u00e1rikov\u00e1 used a carpet ( i ) surface ."}, {"topic": "2007 - 08 fis ski jumping world cup", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_FIS_Ski_Jumping_World_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14407512-19.html.csv", "action": "superlative", "sent": "thomas morgenstern had the highest number of overal wc points .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "overall wc points ( rank )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; overall wc points ( rank ) }"}, "name"], "result": "thomas morgenstern", "ind": 1, "tostr": "hop { argmax { all_rows ; overall wc points ( rank ) } ; name }"}, "thomas morgenstern"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; overall wc points ( rank ) } ; name } ; thomas morgenstern } = true", "tointer": "select the row whose overall wc points ( rank ) record of all rows is maximum . the name record of this row is thomas morgenstern ."}, "logic_str": "eq { hop { argmax { all_rows ; overall wc points ( rank ) } ; name } ; thomas morgenstern } = true", "interpret": "select the row whose overall wc points ( rank ) record of all rows is maximum . the name record of this row is thomas morgenstern .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "overall wc points (rank)_5": 5, "name_6": 6, "thomas morgenstern_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "overall wc points (rank)_5": "overall wc points ( rank )", "name_6": "name", "thomas morgenstern_7": "thomas morgenstern"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "overall wc points (rank)_5": [0], "name_6": [1], "thomas morgenstern_7": [2]}, "table_header": ["rank", "name", "nationality", "1st ( m )", "2nd ( m )", "points", "overall wc points ( rank )"], "table_cont": [["1", "thomas morgenstern", "aut", "132.0", "128.5", "272.4", "1555 ( 1 )"], ["2", "gregor schlierenzauer", "aut", "130.5", "129.0", "268.1", "919 ( 2 )"], ["3", "andreas k\u00e3 \u00bc ttel", "sui", "128.0", "130.5", "260.8", "584 ( 7 )"], ["4", "janne ahonen", "fin", "127.5", "128.5", "258.8", "895 ( 3 )"], ["5", "anders bardal", "nor", "124.5", "129.5", "255.7", "592 ( 6 )"]], "query": "eq { hop { argmax { all_rows ; overall wc points ( rank ) } ; name } ; thomas morgenstern } = true", "question": "thomas morgenstern had the highest number of overal wc points ."}, {"topic": "2009 copa sudamericana", "wiki": "https://en.wikipedia.org/wiki/2009_Copa_Sudamericana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17282875-2.html.csv", "action": "unique", "sent": "the game between blooming and river plate was the only 1st leg match to end in a 0-3 score in the 2009 copa sudamericana .", "annotation": {"scope": "all", "row": "13", "col": "4", "col_other": "1,3", "criterion": "equal", "value": "0-3", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "1st leg", "0-3"], "result": null, "ind": 0, "tointer": "select the rows whose 1st leg record fuzzily matches to 0-3 .", "tostr": "filter_eq { all_rows ; 1st leg ; 0-3 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; 1st leg ; 0-3 } }", "tointer": "select the rows whose 1st leg record fuzzily matches to 0-3 . there is only one such row in the table ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "1st leg", "0-3"], "result": null, "ind": 0, "tointer": "select the rows whose 1st leg record fuzzily matches to 0-3 .", "tostr": "filter_eq { all_rows ; 1st leg ; 0-3 }"}, "team 1"], "result": "blooming", "ind": 2, "tostr": "hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 1 }"}, "blooming"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 1 } ; blooming }", "tointer": "the team 1 record of this unqiue row is blooming ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "1st leg", "0-3"], "result": null, "ind": 0, "tointer": "select the rows whose 1st leg record fuzzily matches to 0-3 .", "tostr": "filter_eq { all_rows ; 1st leg ; 0-3 }"}, "team 2"], "result": "river plate", "ind": 4, "tostr": "hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 2 }"}, "river plate"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 2 } ; river plate }", "tointer": "the team 2 record of this unqiue row is river plate ."}], "result": true, "ind": 6, "tostr": "and { eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 1 } ; blooming } ; eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 2 } ; river plate } }", "tointer": "the team 1 record of this unqiue row is blooming . the team 2 record of this unqiue row is river plate ."}], "result": true, "ind": 7, "tostr": "and { only { filter_eq { all_rows ; 1st leg ; 0-3 } } ; and { eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 1 } ; blooming } ; eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 2 } ; river plate } } } = true", "tointer": "select the rows whose 1st leg record fuzzily matches to 0-3 . there is only one such row in the table . the team 1 record of this unqiue row is blooming . the team 2 record of this unqiue row is river plate ."}, "logic_str": "and { only { filter_eq { all_rows ; 1st leg ; 0-3 } } ; and { eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 1 } ; blooming } ; eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 2 } ; river plate } } } = true", "interpret": "select the rows whose 1st leg record fuzzily matches to 0-3 . there is only one such row in the table . the team 1 record of this unqiue row is blooming . the team 2 record of this unqiue row is river plate .", "num_func": 10, "nid": 8, "g_ids": {"and_7": 7, "result_8": 8, "only_1": 1, "filter_str_eq_0": 0, "all_rows_9": 9, "1st leg_10": 10, "0-3_11": 11, "and_6": 6, "str_eq_3": 3, "str_hop_2": 2, "team 1_12": 12, "blooming_13": 13, "str_eq_5": 5, "str_hop_4": 4, "team 2_14": 14, "river plate_15": 15}, "g_ids_features": {"and_7": "and", "result_8": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_9": "all_rows", "1st leg_10": "1st leg", "0-3_11": "0-3", "and_6": "and", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "team 1_12": "team 1", "blooming_13": "blooming", "str_eq_5": "str_eq", "str_hop_4": "str_hop", "team 2_14": "team 2", "river plate_15": "river plate"}, "g_adj": {"and_7": [8], "result_8": [], "only_1": [7], "filter_str_eq_0": [1, 2, 4], "all_rows_9": [0], "1st leg_10": [0], "0-3_11": [0], "and_6": [7], "str_eq_3": [6], "str_hop_2": [3], "team 1_12": [2], "blooming_13": [3], "str_eq_5": [6], "str_hop_4": [5], "team 2_14": [4], "river plate_15": [5]}, "table_header": ["team 1", "points", "team 2", "1st leg", "2nd leg"], "table_cont": [["atl\u00e9tico mineiro", "2 - 2 ( 5 - 6 p )", "goi\u00e1s", "1 - 1", "1 - 1"], ["la equidad", "1 - 4", "uni\u00f3n espa\u00f1ola", "2 - 2", "0 - 1"], ["vit\u00f3ria", "3 - 3 ( 5 - 3 p )", "coritiba", "2 - 0", "0 - 2"], ["universidad de chile", "6 - 0", "deportivo cali", "2 - 1", "1 - 0"], ["fluminense", "( a ) 2 - 2", "flamengo", "0 - 0", "1 - 1"], ["liverpool", "1 - 4", "cienciano", "0 - 0", "0 - 2"], ["river plate", "0 - 6", "lan\u00fas", "1 - 2", "0 - 1"], ["zamora", "0 - 6", "emelec", "0 - 1", "1 - 2"], ["atl\u00e9tico paranaense", "1 - 4", "botafogo", "0 - 0", "2 - 3"], ["ldu quito", "4 - 1", "libertad", "1 - 0", "1 - 1"], ["tigre", "3 - 3 ( a )", "san lorenzo", "2 - 1", "0 - 1"], ["alianza atl\u00e9tico", "4 - 1", "deportivo anzo\u00e1tegui", "0 - 0", "2 - 1"], ["blooming", "0 - 6", "river plate", "0 - 3", "1 - 2"], ["boca juniors", "1 - 4", "v\u00e9lez s\u00e1rsfield", "1 - 1", "0 - 1"]], "query": "and { only { filter_eq { all_rows ; 1st leg ; 0-3 } } ; and { eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 1 } ; blooming } ; eq { hop { filter_eq { all_rows ; 1st leg ; 0-3 } ; team 2 } ; river plate } } } = true", "question": "the game between blooming and river plate was the only 1st leg match to end in a 0-3 score in the 2009 copa sudamericana ."}, {"topic": "greg jones ( tennis )", "wiki": "https://en.wikipedia.org/wiki/Greg_Jones_%28tennis%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13244506-2.html.csv", "action": "count", "sent": "greg jones ( tennis ) participated in 5 tournaments which were held in australia .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "australia", "result": "5", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "australia"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to australia .", "tostr": "filter_eq { all_rows ; tournament ; australia }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; tournament ; australia } }", "tointer": "select the rows whose tournament record fuzzily matches to australia . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; tournament ; australia } } ; 5 } = true", "tointer": "select the rows whose tournament record fuzzily matches to australia . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; tournament ; australia } } ; 5 } = true", "interpret": "select the rows whose tournament record fuzzily matches to australia . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "tournament_5": 5, "australia_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "tournament_5": "tournament", "australia_6": "australia", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "tournament_5": [0], "australia_6": [0], "5_7": [2]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent", "score"], "table_cont": [["runner - up", "05.02.2007", "burnie challenger", "hard", "nathan healey", "5 - 7 , 4 - 6"], ["winner", "05.05.2008", "orange park usa", "clay", "clint thomson", "6 - 4 , 6 - 2"], ["runner - up", "14.07.2008", "great britain f10 , great britain", "clay", "michel koning", "4 - 6 , 3 - 6"], ["runner - up", "20.10.2008", "australia f10 , australia ,", "hard", "marinko matosevic", "1 - 6 , 6 - 7 3 - 7"], ["runner - up", "27.04.2009", "australia f3 , australia", "clay", "jose statham", "6 - 4 , 4 - 6 , 1 - 6"], ["winner", "04.05.2009", "australia f4 , australia", "clay", "jose statham", "7 - 5 , 7 - 6 ( 8 - 6 )"], ["runner - up", "01.02.2010", "burnie challenger", "hard", "bernard tomic", "6 - 4 , 6 - 2"], ["runner - up", "22.02.2010", "australia f2 , australia", "grass", "john millman", "6 - 1 , 4 - 6 , 4 - 6"], ["runner - up", "16.05.2011", "fergana challenger , uzbekistan", "hard", "dudi sela", "2 - 6 , 1 - 6"], ["runner - up", "01.07.2013", "mantra challenger , ecuador", "hard", "michael russell", "6 - 4 , 0 - 6 , 5 - 7"], ["winner", "07.10.2013", "australia f9 , australia", "hard", "jordan thompson", "3 - 6 , 7 - 5 , 6 - 1"]], "query": "eq { count { filter_eq { all_rows ; tournament ; australia } } ; 5 } = true", "question": "greg jones ( tennis ) participated in 5 tournaments which were held in australia ."}, {"topic": "2007 - 08 fis ski jumping world cup", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_FIS_Ski_Jumping_World_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14407512-19.html.csv", "action": "comparative", "sent": "janne ahonen had 3.1 more points than anders bardal .", "annotation": {"row_1": "4", "row_2": "5", "col": "6", "col_other": "2", "relation": "greater", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "janne ahonen"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to janne ahonen .", "tostr": "filter_eq { all_rows ; name ; janne ahonen }"}, "points"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; janne ahonen } ; points }", "tointer": "select the rows whose name record fuzzily matches to janne ahonen . take the points record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "anders bardal"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to anders bardal .", "tostr": "filter_eq { all_rows ; name ; anders bardal }"}, "points"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; anders bardal } ; points }", "tointer": "select the rows whose name record fuzzily matches to anders bardal . take the points record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; hop { filter_eq { all_rows ; name ; anders bardal } ; points } }", "tointer": "select the rows whose name record fuzzily matches to janne ahonen . take the points record of this row . select the rows whose name record fuzzily matches to anders bardal . take the points record of this row . the first record is greater than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "janne ahonen"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to janne ahonen .", "tostr": "filter_eq { all_rows ; name ; janne ahonen }"}, "points"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; janne ahonen } ; points }", "tointer": "select the rows whose name record fuzzily matches to janne ahonen . take the points record of this row ."}, "258.8"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; 258.8 }", "tointer": "the points record of the first row is 258.8 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "anders bardal"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to anders bardal .", "tostr": "filter_eq { all_rows ; name ; anders bardal }"}, "points"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; anders bardal } ; points }", "tointer": "select the rows whose name record fuzzily matches to anders bardal . take the points record of this row ."}, "255.7"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; name ; anders bardal } ; points } ; 255.7 }", "tointer": "the points record of the second row is 255.7 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; 258.8 } ; eq { hop { filter_eq { all_rows ; name ; anders bardal } ; points } ; 255.7 } }", "tointer": "the points record of the first row is 258.8 . the points record of the second row is 255.7 ."}], "result": true, "ind": 8, "tostr": "and { greater { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; hop { filter_eq { all_rows ; name ; anders bardal } ; points } } ; and { eq { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; 258.8 } ; eq { hop { filter_eq { all_rows ; name ; anders bardal } ; points } ; 255.7 } } } = true", "tointer": "select the rows whose name record fuzzily matches to janne ahonen . take the points record of this row . select the rows whose name record fuzzily matches to anders bardal . take the points record of this row . the first record is greater than the second record . the points record of the first row is 258.8 . the points record of the second row is 255.7 ."}, "logic_str": "and { greater { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; hop { filter_eq { all_rows ; name ; anders bardal } ; points } } ; and { eq { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; 258.8 } ; eq { hop { filter_eq { all_rows ; name ; anders bardal } ; points } ; 255.7 } } } = true", "interpret": "select the rows whose name record fuzzily matches to janne ahonen . take the points record of this row . select the rows whose name record fuzzily matches to anders bardal . take the points record of this row . the first record is greater than the second record . the points record of the first row is 258.8 . the points record of the second row is 255.7 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "greater_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "name_11": 11, "janne ahonen_12": 12, "points_13": 13, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "name_15": 15, "anders bardal_16": 16, "points_17": 17, "and_7": 7, "eq_5": 5, "258.8_18": 18, "eq_6": 6, "255.7_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "greater_4": "greater", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "janne ahonen_12": "janne ahonen", "points_13": "points", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "name_15": "name", "anders bardal_16": "anders bardal", "points_17": "points", "and_7": "and", "eq_5": "eq", "258.8_18": "258.8", "eq_6": "eq", "255.7_19": "255.7"}, "g_adj": {"and_8": [9], "result_9": [], "greater_4": [8], "num_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "name_11": [0], "janne ahonen_12": [0], "points_13": [2], "num_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "name_15": [1], "anders bardal_16": [1], "points_17": [3], "and_7": [8], "eq_5": [7], "258.8_18": [5], "eq_6": [7], "255.7_19": [6]}, "table_header": ["rank", "name", "nationality", "1st ( m )", "2nd ( m )", "points", "overall wc points ( rank )"], "table_cont": [["1", "thomas morgenstern", "aut", "132.0", "128.5", "272.4", "1555 ( 1 )"], ["2", "gregor schlierenzauer", "aut", "130.5", "129.0", "268.1", "919 ( 2 )"], ["3", "andreas k\u00e3 \u00bc ttel", "sui", "128.0", "130.5", "260.8", "584 ( 7 )"], ["4", "janne ahonen", "fin", "127.5", "128.5", "258.8", "895 ( 3 )"], ["5", "anders bardal", "nor", "124.5", "129.5", "255.7", "592 ( 6 )"]], "query": "and { greater { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; hop { filter_eq { all_rows ; name ; anders bardal } ; points } } ; and { eq { hop { filter_eq { all_rows ; name ; janne ahonen } ; points } ; 258.8 } ; eq { hop { filter_eq { all_rows ; name ; anders bardal } ; points } ; 255.7 } } } = true", "question": "janne ahonen had 3.1 more points than anders bardal ."}, {"topic": "2001 fivb volleyball world league", "wiki": "https://en.wikipedia.org/wiki/2001_FIVB_Volleyball_World_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16013858-13.html.csv", "action": "count", "sent": "in the 2001 fivb volleyball world league , among the games played before jun 27 , 2 of them were finished before set 5 .", "annotation": {"scope": "subset", "criterion": "equal", "value": "na", "result": "2", "col": "7", "subset": {"col": "1", "criterion": "less_than", "value": "jun 27"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_less", "args": ["all_rows", "date", "jun 27"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; date ; jun 27 }", "tointer": "select the rows whose date record is less than jun 27 ."}, "set 5", "na"], "result": null, "ind": 1, "tointer": "select the rows whose date record is less than jun 27 . among these rows , select the rows whose set 5 record fuzzily matches to na .", "tostr": "filter_eq { filter_less { all_rows ; date ; jun 27 } ; set 5 ; na }"}], "result": "2", "ind": 2, "tostr": "count { filter_eq { filter_less { all_rows ; date ; jun 27 } ; set 5 ; na } }", "tointer": "select the rows whose date record is less than jun 27 . among these rows , select the rows whose set 5 record fuzzily matches to na . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_less { all_rows ; date ; jun 27 } ; set 5 ; na } } ; 2 } = true", "tointer": "select the rows whose date record is less than jun 27 . among these rows , select the rows whose set 5 record fuzzily matches to na . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { filter_less { all_rows ; date ; jun 27 } ; set 5 ; na } } ; 2 } = true", "interpret": "select the rows whose date record is less than jun 27 . among these rows , select the rows whose set 5 record fuzzily matches to na . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_eq_1": 1, "filter_less_0": 0, "all_rows_5": 5, "date_6": 6, "jun 27_7": 7, "set 5_8": 8, "na_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_eq_1": "filter_str_eq", "filter_less_0": "filter_less", "all_rows_5": "all_rows", "date_6": "date", "jun 27_7": "jun 27", "set 5_8": "set 5", "na_9": "na", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_eq_1": [2], "filter_less_0": [1], "all_rows_5": [0], "date_6": [0], "jun 27_7": [0], "set 5_8": [1], "na_9": [1], "2_10": [3]}, "table_header": ["date", "score", "set 1", "set 2", "set 3", "set 4", "set 5", "total"], "table_cont": [["jun 25", "1 - 3", "20 - 25", "18 - 25", "26 - 24", "25 - 27", "na", "89 - 101"], ["jun 25", "2 - 3", "26 - 24", "26 - 28", "24 - 26", "25 - 18", "13 - 15", "114 - 111"], ["jun 26", "3 - 1", "21 - 25", "25 - 16", "25 - 21", "25 - 19", "na", "96 - 81"], ["jun 26", "2 - 3", "27 - 29", "25 - 18", "21 - 25", "25 - 22", "13 - 15", "111 - 109"], ["jun 27", "3 - 1", "25 - 23", "25 - 19", "15 - 25", "25 - 18", "na", "90 - 85"], ["jun 27", "0 - 3", "21 - 25", "17 - 25", "22 - 25", "na", "na", "60 - 75"]], "query": "eq { count { filter_eq { filter_less { all_rows ; date ; jun 27 } ; set 5 ; na } } ; 2 } = true", "question": "in the 2001 fivb volleyball world league , among the games played before jun 27 , 2 of them were finished before set 5 ."}, {"topic": "indiana high school athletics conferences : mid - eastern - northwestern", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Mid-Eastern_%E2%80%93_Northwestern", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18942405-6.html.csv", "action": "aggregation", "sent": "the average enrollment for schools in the mid - eastern - northwestern indiana high school athletics conference is 1535 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "1535", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "enrollment"], "result": "1535", "ind": 0, "tostr": "avg { all_rows ; enrollment }"}, "1535"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; enrollment } ; 1535 } = true", "tointer": "the average of the enrollment record of all rows is 1535 ."}, "logic_str": "round_eq { avg { all_rows ; enrollment } ; 1535 } = true", "interpret": "the average of the enrollment record of all rows is 1535 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "enrollment_4": 4, "1535_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "enrollment_4": "enrollment", "1535_5": "1535"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "enrollment_4": [0], "1535_5": [1]}, "table_header": ["school", "mascot", "location", "enrollment", "ihsaa class", "ihsaa football class", "county"], "table_cont": [["indianapolis decatur central", "hawks", "indianapolis", "1870", "aaaa", "aaaaa", "49 marion"], ["franklin community", "grizzly cubs", "franklin", "1601", "aaaa", "aaaaa", "41 johnson"], ["greenwood", "woodmen", "greenwood", "1167", "aaaa", "aaaa", "41 johnson"], ["martinsville", "artesians", "martinsville", "1661", "aaaa", "aaaaa", "55 morgan"], ["mooresville", "pioneers", "mooresville", "1348", "aaaa", "aaaa", "55 morgan"], ["plainfield", "quakers", "plainfield", "1388", "aaaa", "aaaa", "32 hendricks"], ["whiteland community", "warriors", "whiteland", "1713", "aaaa", "aaaaa", "41 johnson"]], "query": "round_eq { avg { all_rows ; enrollment } ; 1535 } = true", "question": "the average enrollment for schools in the mid - eastern - northwestern indiana high school athletics conference is 1535 ."}, {"topic": "tobias kamke", "wiki": "https://en.wikipedia.org/wiki/Tobias_Kamke", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18087075-2.html.csv", "action": "superlative", "sent": "the earliest win that tobias kamke recorded was in granby , canada .", "annotation": {"scope": "subset", "col_superlative": "2", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "min", "other_col": "3", "subset": {"col": "1", "criterion": "equal", "value": "winner"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": [{"func": "filter_str_eq", "args": ["all_rows", "outcome", "winner"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; outcome ; winner }", "tointer": "select the rows whose outcome record fuzzily matches to winner ."}, "date"], "result": null, "ind": 1, "tostr": "argmin { filter_eq { all_rows ; outcome ; winner } ; date }"}, "tournament"], "result": "granby , canada", "ind": 2, "tostr": "hop { argmin { filter_eq { all_rows ; outcome ; winner } ; date } ; tournament }"}, "granby , canada"], "result": true, "ind": 3, "tostr": "eq { hop { argmin { filter_eq { all_rows ; outcome ; winner } ; date } ; tournament } ; granby , canada } = true", "tointer": "select the rows whose outcome record fuzzily matches to winner . select the row whose date record of these rows is minimum . the tournament record of this row is granby , canada ."}, "logic_str": "eq { hop { argmin { filter_eq { all_rows ; outcome ; winner } ; date } ; tournament } ; granby , canada } = true", "interpret": "select the rows whose outcome record fuzzily matches to winner . select the row whose date record of these rows is minimum . the tournament record of this row is granby , canada .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "argmin_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "outcome_6": 6, "winner_7": 7, "date_8": 8, "tournament_9": 9, "granby , canada_10": 10}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "argmin_1": "argmin", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "outcome_6": "outcome", "winner_7": "winner", "date_8": "date", "tournament_9": "tournament", "granby , canada_10": "granby , canada"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "argmin_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "outcome_6": [0], "winner_7": [0], "date_8": [1], "tournament_9": [2], "granby , canada_10": [3]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent", "score"], "table_cont": [["runner - up", "12 november 2007", "helsinki , finland", "hard ( i )", "steve darcis", "3 - 6 , 6 - 1 , 4 - 6"], ["runner - up", "26 may 2008", "karlsruhe , germany", "clay", "teymuraz gabashvili", "1 - 6 , 4 - 6"], ["runner - up", "12 april 2010", "baton rouge , us", "hard ( i )", "kevin anderson", "7 - 6 ( 9 - 7 ) , 6 - 7 ( 7 - 9 ) , 1 - 6"], ["runner - up", "31 may 2010", "f\u00fcrth , germany", "clay", "robin haase", "4 - 6 , 2 - 6"], ["winner", "26 july 2010", "granby , canada", "hard", "milos raonic", "6 - 3 , 7 - 6 ( 7 - 4 )"], ["winner", "11 october 2010", "tiburon , us", "hard", "ryan harrison", "6 - 1 , 6 - 1"], ["winner", "13 november 2011", "loughborough , uk", "hard", "flavio cipolla", "6 - 2 , 7 - 5"], ["runner - up", "7 july 2012", "braunschweig , germany", "clay", "thomaz bellucci", "6 - 7 ( 4 - 7 ) , 3 - 6"], ["winner", "16 september 2012", "p\u00e9tange , luxembourg", "hard", "paul - henri mathieu", "7 - 6 ( 9 - 7 ) , 6 - 4"]], "query": "eq { hop { argmin { filter_eq { all_rows ; outcome ; winner } ; date } ; tournament } ; granby , canada } = true", "question": "the earliest win that tobias kamke recorded was in granby , canada ."}, {"topic": "1894 - 95 fa cup", "wiki": "https://en.wikipedia.org/wiki/1894%E2%80%9395_FA_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17943933-3.html.csv", "action": "superlative", "sent": "in the second round of the 1894-5 fa cup , aston villa scored the most goals with 7 .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "2", "value_mentioned": "yes", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "max", "args": ["all_rows", "score"], "result": "7 - 1", "ind": 0, "tostr": "max { all_rows ; score }", "tointer": "the maximum score record of all rows is 7 - 1 ."}, "7 - 1"], "result": true, "ind": 1, "tostr": "eq { max { all_rows ; score } ; 7 - 1 }", "tointer": "the maximum score record of all rows is 7 - 1 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "score"], "result": null, "ind": 2, "tostr": "argmax { all_rows ; score }"}, "home team"], "result": "aston villa", "ind": 3, "tostr": "hop { argmax { all_rows ; score } ; home team }"}, "aston villa"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; score } ; home team } ; aston villa }", "tointer": "the home team record of the row with superlative score record is aston villa ."}], "result": true, "ind": 5, "tostr": "and { eq { max { all_rows ; score } ; 7 - 1 } ; eq { hop { argmax { all_rows ; score } ; home team } ; aston villa } } = true", "tointer": "the maximum score record of all rows is 7 - 1 . the home team record of the row with superlative score record is aston villa ."}, "logic_str": "and { eq { max { all_rows ; score } ; 7 - 1 } ; eq { hop { argmax { all_rows ; score } ; home team } ; aston villa } } = true", "interpret": "the maximum score record of all rows is 7 - 1 . the home team record of the row with superlative score record is aston villa .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "max_0": 0, "all_rows_7": 7, "score_8": 8, "7 - 1_9": 9, "str_eq_4": 4, "str_hop_3": 3, "argmax_2": 2, "all_rows_10": 10, "score_11": 11, "home team_12": 12, "aston villa_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "max_0": "max", "all_rows_7": "all_rows", "score_8": "score", "7 - 1_9": "7 - 1", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "argmax_2": "argmax", "all_rows_10": "all_rows", "score_11": "score", "home team_12": "home team", "aston villa_13": "aston villa"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "max_0": [1], "all_rows_7": [0], "score_8": [0], "7 - 1_9": [1], "str_eq_4": [5], "str_hop_3": [4], "argmax_2": [3], "all_rows_10": [2], "score_11": [2], "home team_12": [3], "aston villa_13": [4]}, "table_header": ["tie no", "home team", "score", "away team", "date"], "table_cont": [["1", "liverpool", "0 - 2", "nottingham forest", "16 february 1895"], ["2", "aston villa", "7 - 1", "newcastle united", "16 february 1895"], ["3", "sheffield wednesday", "6 - 1", "middlesbrough", "16 february 1895"], ["4", "bolton wanderers", "1 - 0", "bury", "16 february 1895"], ["5", "wolverhampton wanderers", "2 - 0", "stoke", "16 february 1895"], ["6", "sunderland", "2 - 0", "preston north end", "16 february 1895"], ["7", "everton", "1 - 1", "blackburn rovers", "16 february 1895"], ["replay", "blackburn rovers", "2 - 3", "everton", "20 february 1895"], ["8", "sheffield united", "1 - 1", "west bromwich albion", "16 february 1895"], ["replay", "west bromwich albion", "2 - 1", "sheffield united", "20 february 1895"]], "query": "and { eq { max { all_rows ; score } ; 7 - 1 } ; eq { hop { argmax { all_rows ; score } ; home team } ; aston villa } } = true", "question": "in the second round of the 1894-5 fa cup , aston villa scored the most goals with 7 ."}, {"topic": "jarkko kinnunen", "wiki": "https://en.wikipedia.org/wiki/Jarkko_Kinnunen", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13045475-1.html.csv", "action": "majority", "sent": "jarkko kinnunen raced mostly in 50 km races .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "50 km", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "event", "50 km"], "result": true, "ind": 0, "tointer": "for the event records of all rows , most of them fuzzily match to 50 km .", "tostr": "most_eq { all_rows ; event ; 50 km } = true"}, "logic_str": "most_eq { all_rows ; event ; 50 km } = true", "interpret": "for the event records of all rows , most of them fuzzily match to 50 km .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "event_3": 3, "50 km_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "event_3": "event", "50 km_4": "50 km"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "event_3": [0], "50 km_4": [0]}, "table_header": ["year", "competition", "venue", "position", "event"], "table_cont": [["2001", "world youth championships", "debrecen , hungary", "10th", "10000 m"], ["2006", "european championships", "gothenburg , sweden", "14th", "50 km"], ["2007", "world championships", "osaka , japan", "10th", "50 km"], ["2008", "finnish championships", "tampere , finland", "1st", "20 km"], ["2008", "olympic games", "beijing , china", "15th", "50 km"], ["2009", "european race walking cup", "metz , france", "10th", "20 km"], ["2009", "finnish championships", "espoo , finland", "1st", "20 km"], ["2009", "world championships", "berlin , germany", "9th", "50 km"], ["2010", "european championships", "barcelona , spain", "dnf", "50 km"]], "query": "most_eq { all_rows ; event ; 50 km } = true", "question": "jarkko kinnunen raced mostly in 50 km races ."}, {"topic": "mark blundell", "wiki": "https://en.wikipedia.org/wiki/Mark_Blundell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1189516-2.html.csv", "action": "aggregation", "sent": "in mark blundell 's formula one races from 1991 - 1995 , he scored an average of 8.42 points per race .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "8.42", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "pts"], "result": "8.42", "ind": 0, "tostr": "avg { all_rows ; pts }"}, "8.42"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; pts } ; 8.42 } = true", "tointer": "the average of the pts record of all rows is 8.42 ."}, "logic_str": "round_eq { avg { all_rows ; pts } ; 8.42 } = true", "interpret": "the average of the pts record of all rows is 8.42 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "pts_4": 4, "8.42_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "pts_4": "pts", "8.42_5": "8.42"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "pts_4": [0], "8.42_5": [1]}, "table_header": ["year", "entrant", "chassis", "engine", "pts"], "table_cont": [["1991", "motor racing developments ltd", "brabham bt59y", "yamaha v12", "1"], ["1991", "motor racing developments ltd", "brabham bt60y", "yamaha v12", "1"], ["1993", "ligier gitanes blondes", "ligier js39", "renault v10", "10"], ["1994", "tyrrell", "tyrrell 022", "yamaha v10", "8"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10", "mercedes v10", "13"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10b", "mercedes v10", "13"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10c", "mercedes v10", "13"]], "query": "round_eq { avg { all_rows ; pts } ; 8.42 } = true", "question": "in mark blundell 's formula one races from 1991 - 1995 , he scored an average of 8.42 points per race ."}, {"topic": "sweden in the eurovision song contest 2000", "wiki": "https://en.wikipedia.org/wiki/Sweden_in_the_Eurovision_Song_Contest_2000", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13598632-1.html.csv", "action": "ordinal", "sent": "javiera mu\u00f1oz was in 4th place in the eurovision song contest 2000 in sweden .", "annotation": {"row": "7", "col": "5", "order": "4", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "place", "4"], "result": "4th", "ind": 0, "tostr": "nth_min { all_rows ; place ; 4 }", "tointer": "the 4th minimum place record of all rows is 4th ."}, "4th"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; place ; 4 } ; 4th }", "tointer": "the 4th minimum place record of all rows is 4th ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "place", "4"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; place ; 4 }"}, "artist"], "result": "javiera mu\u00f1oz", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; place ; 4 } ; artist }"}, "javiera mu\u00f1oz"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; place ; 4 } ; artist } ; javiera mu\u00f1oz }", "tointer": "the artist record of the row with 4th minimum place record is javiera mu\u00f1oz ."}], "result": true, "ind": 5, "tostr": "and { eq { nth_min { all_rows ; place ; 4 } ; 4th } ; eq { hop { nth_argmin { all_rows ; place ; 4 } ; artist } ; javiera mu\u00f1oz } } = true", "tointer": "the 4th minimum place record of all rows is 4th . the artist record of the row with 4th minimum place record is javiera mu\u00f1oz ."}, "logic_str": "and { eq { nth_min { all_rows ; place ; 4 } ; 4th } ; eq { hop { nth_argmin { all_rows ; place ; 4 } ; artist } ; javiera mu\u00f1oz } } = true", "interpret": "the 4th minimum place record of all rows is 4th . the artist record of the row with 4th minimum place record is javiera mu\u00f1oz .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "nth_min_0": 0, "all_rows_7": 7, "place_8": 8, "4_9": 9, "4th_10": 10, "str_eq_4": 4, "str_hop_3": 3, "nth_argmin_2": 2, "all_rows_11": 11, "place_12": 12, "4_13": 13, "artist_14": 14, "javiera mu\u00f1oz_15": 15}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "nth_min_0": "nth_min", "all_rows_7": "all_rows", "place_8": "place", "4_9": "4", "4th_10": "4th", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "nth_argmin_2": "nth_argmin", "all_rows_11": "all_rows", "place_12": "place", "4_13": "4", "artist_14": "artist", "javiera mu\u00f1oz_15": "javiera mu\u00f1oz"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "nth_min_0": [1], "all_rows_7": [0], "place_8": [0], "4_9": [0], "4th_10": [1], "str_eq_4": [5], "str_hop_3": [4], "nth_argmin_2": [3], "all_rows_11": [2], "place_12": [2], "4_13": [2], "artist_14": [3], "javiera mu\u00f1oz_15": [4]}, "table_header": ["draw", "artist", "song", "points", "place"], "table_cont": [["1", "guide", "vi lever h\u00e4r , vi lever nu", "97", "5th"], ["2", "balsam boys", "bara du och jag", "54", "7th"], ["3", "barbados", "se mig", "146", "2nd"], ["4", "avengers", "n\u00e4r filmen \u00e4r slut", "0", "10th"], ["5", "tom nordahl", "alla \u00e4nglar sjunger", "32", "9th"], ["6", "roger pontare", "n\u00e4r vindarna viskar mitt namn", "227", "1st"], ["7", "javiera mu\u00f1oz", "varje timma , var minut", "139", "4th"], ["8", "midnight band", "tillsammans", "58", "6th"], ["9", "hanna hedlund", "anropar f\u00f6rsvunnen", "47", "8th"], ["10", "friends", "n\u00e4r jag t\u00e4nker p\u00e5 imorgon", "146", "2nd"]], "query": "and { eq { nth_min { all_rows ; place ; 4 } ; 4th } ; eq { hop { nth_argmin { all_rows ; place ; 4 } ; artist } ; javiera mu\u00f1oz } } = true", "question": "javiera mu\u00f1oz was in 4th place in the eurovision song contest 2000 in sweden ."}, {"topic": "united states house of representatives elections , 1994", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1994", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341522-13.html.csv", "action": "count", "sent": "newt gingrich beat political opponent ben l. jones with 64.2 % of the vote .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "64.2 %", "result": "1", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "64.2 %"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to 64.2 % .", "tostr": "filter_eq { all_rows ; opponent ; 64.2 % }"}], "result": "1", "ind": 1, "tostr": "count { filter_eq { all_rows ; opponent ; 64.2 % } }", "tointer": "select the rows whose opponent record fuzzily matches to 64.2 % . the number of such rows is 1 ."}, "1"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; opponent ; 64.2 % } } ; 1 } = true", "tointer": "select the rows whose opponent record fuzzily matches to 64.2 % . the number of such rows is 1 ."}, "logic_str": "eq { count { filter_eq { all_rows ; opponent ; 64.2 % } } ; 1 } = true", "interpret": "select the rows whose opponent record fuzzily matches to 64.2 % . the number of such rows is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "opponent_5": 5, "64.2%_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "opponent_5": "opponent", "64.2%_6": "64.2 %", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "opponent_5": [0], "64.2%_6": [0], "1_7": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "status", "opponent"], "table_cont": [["georgia2", "sanford bishop", "democratic", "1992", "re - elected", "sanford bishop ( d ) 66.2 % john clayton ( r ) 33.8 %"], ["georgia3", "mac collins", "republican", "1992", "re - elected", "mac collins ( r ) 65.5 % fred overby ( d ) 34.5 %"], ["georgia4", "john linder", "republican", "1992", "re - elected", "john linder ( r ) 57.9 % comer yates ( d ) 42.1 %"], ["georgia5", "john lewis", "democratic", "1986", "re - elected", "john lewis ( d ) 69.1 % dale dixon ( r ) 30.9 %"], ["georgia6", "newt gingrich", "republican", "1978", "re - elected", "newt gingrich ( r ) 64.2 % ben l jones ( d ) 35.8 %"], ["georgia7", "george darden", "democratic", "1983", "defeated republican gain", "bob barr ( r ) 51.9 % george darden ( d ) 48.1 %"], ["georgia8", "j roy rowland", "democratic", "1982", "retired republican gain", "saxby chambliss ( r ) 62.7 % craig mathis ( d ) 37.3 %"], ["georgia9", "nathan deal", "democratic", "1992", "re - elected", "nathan deal ( d ) 57.9 % robert l castello ( r ) 42.1 %"]], "query": "eq { count { filter_eq { all_rows ; opponent ; 64.2 % } } ; 1 } = true", "question": "newt gingrich beat political opponent ben l. jones with 64.2 % of the vote ."}, {"topic": "list of ultras of oceania", "wiki": "https://en.wikipedia.org/wiki/List_of_Ultras_of_Oceania", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-18946749-4.html.csv", "action": "majority", "sent": "in the list of ultras of oceania , all peaks with elevations more than 3000 m have prominence more than 2400 m.", "annotation": {"scope": "subset", "col": "6", "most_or_all": "all", "criterion": "greater_than", "value": "2400", "subset": {"col": "5", "criterion": "greater_than", "value": "3000"}}, "logic": {"func": "all_greater", "args": [{"func": "filter_greater", "args": ["all_rows", "elevation ( m )", "3000"], "result": null, "ind": 0, "tostr": "filter_greater { all_rows ; elevation ( m ) ; 3000 }", "tointer": "select the rows whose elevation ( m ) record is greater than 3000 ."}, "prominence ( m )", "2400"], "result": true, "ind": 1, "tointer": "select the rows whose elevation ( m ) record is greater than 3000 . for the prominence ( m ) records of these rows , all of them are greater than 2400 .", "tostr": "all_greater { filter_greater { all_rows ; elevation ( m ) ; 3000 } ; prominence ( m ) ; 2400 } = true"}, "logic_str": "all_greater { filter_greater { all_rows ; elevation ( m ) ; 3000 } ; prominence ( m ) ; 2400 } = true", "interpret": "select the rows whose elevation ( m ) record is greater than 3000 . for the prominence ( m ) records of these rows , all of them are greater than 2400 .", "num_func": 2, "nid": 2, "g_ids": {"all_greater_1": 1, "result_2": 2, "filter_greater_0": 0, "all_rows_3": 3, "elevation (m)_4": 4, "3000_5": 5, "prominence (m)_6": 6, "2400_7": 7}, "g_ids_features": {"all_greater_1": "all_greater", "result_2": "true", "filter_greater_0": "filter_greater", "all_rows_3": "all_rows", "elevation (m)_4": "elevation ( m )", "3000_5": "3000", "prominence (m)_6": "prominence ( m )", "2400_7": "2400"}, "g_adj": {"all_greater_1": [2], "result_2": [], "filter_greater_0": [1], "all_rows_3": [0], "elevation (m)_4": [0], "3000_5": [0], "prominence (m)_6": [1], "2400_7": [1]}, "table_header": ["rank", "peak", "country", "island", "elevation ( m )", "prominence ( m )", "col ( m )"], "table_cont": [["1", "aoraki / mount cook", "new zealand", "south island", "3755", "3755", "0"], ["2", "mount ruapehu", "new zealand", "north island", "2797", "2797", "0"], ["3", "mount aspiring / tititea", "new zealand", "south island", "3033", "2471", "562"], ["4", "mount taranaki / egmont", "new zealand", "north island", "2518", "2308", "210"], ["5", "mount tutoko", "new zealand", "south island", "2723", "2191", "532"], ["6", "mount tapuaenuku", "new zealand", "south island", "2884", "2021", "863"], ["7", "single cone", "new zealand", "south island", "2319", "1969", "350"], ["8", "manakau", "new zealand", "south island", "2608", "1798", "810"], ["9", "mount taylor", "new zealand", "south island", "2333", "1636", "698"]], "query": "all_greater { filter_greater { all_rows ; elevation ( m ) ; 3000 } ; prominence ( m ) ; 2400 } = true", "question": "in the list of ultras of oceania , all peaks with elevations more than 3000 m have prominence more than 2400 m."}, {"topic": "giuseppe buttari", "wiki": "https://en.wikipedia.org/wiki/Giuseppe_Buttari", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11880183-1.html.csv", "action": "count", "sent": "for giuseppe buttari , when it 's the 110 m hurdles , there were two times he placed below 3rd place .", "annotation": {"scope": "subset", "criterion": "greater_than", "value": "3", "result": "2", "col": "4", "subset": {"col": "5", "criterion": "equal", "value": "110 m hurdles"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": [{"func": "filter_str_eq", "args": ["all_rows", "extra", "110 m hurdles"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; extra ; 110 m hurdles }", "tointer": "select the rows whose extra record fuzzily matches to 110 m hurdles ."}, "result", "3"], "result": null, "ind": 1, "tointer": "select the rows whose extra record fuzzily matches to 110 m hurdles . among these rows , select the rows whose result record is greater than 3 .", "tostr": "filter_greater { filter_eq { all_rows ; extra ; 110 m hurdles } ; result ; 3 }"}], "result": "2", "ind": 2, "tostr": "count { filter_greater { filter_eq { all_rows ; extra ; 110 m hurdles } ; result ; 3 } }", "tointer": "select the rows whose extra record fuzzily matches to 110 m hurdles . among these rows , select the rows whose result record is greater than 3 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_greater { filter_eq { all_rows ; extra ; 110 m hurdles } ; result ; 3 } } ; 2 } = true", "tointer": "select the rows whose extra record fuzzily matches to 110 m hurdles . among these rows , select the rows whose result record is greater than 3 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_greater { filter_eq { all_rows ; extra ; 110 m hurdles } ; result ; 3 } } ; 2 } = true", "interpret": "select the rows whose extra record fuzzily matches to 110 m hurdles . among these rows , select the rows whose result record is greater than 3 . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_greater_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "extra_6": 6, "110 m hurdles_7": 7, "result_8": 8, "3_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_greater_1": "filter_greater", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "extra_6": "extra", "110 m hurdles_7": "110 m hurdles", "result_8": "result", "3_9": "3", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_greater_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "extra_6": [0], "110 m hurdles_7": [0], "result_8": [1], "3_9": [1], "2_10": [3]}, "table_header": ["year", "tournament", "venue", "result", "extra"], "table_cont": [["1974", "european indoor championships", "gothenburg , sweden", "5th", "60 m hurdles"], ["1974", "european championships", "rome , italy", "5th", "110 m hurdles"], ["1978", "european indoor championships", "milan , italy", "3rd", "60 m hurdles"], ["1978", "european championships", "prague , czechoslovakia", "4th", "110 m hurdles"], ["1979", "mediterranean games", "split , yugoslavia", "2nd", "110 m hurdles"]], "query": "eq { count { filter_greater { filter_eq { all_rows ; extra ; 110 m hurdles } ; result ; 3 } } ; 2 } = true", "question": "for giuseppe buttari , when it 's the 110 m hurdles , there were two times he placed below 3rd place ."}, {"topic": "1998 - 99 toronto raptors season", "wiki": "https://en.wikipedia.org/wiki/1998%E2%80%9399_Toronto_Raptors_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-13619105-3.html.csv", "action": "superlative", "sent": "in the 1998-99 toronto raptors season , the highest attendance occurred on february 21st .", "annotation": {"scope": "all", "col_superlative": "8", "row_superlative": "8", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "location attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; location attendance }"}, "date"], "result": "february 21", "ind": 1, "tostr": "hop { argmax { all_rows ; location attendance } ; date }"}, "february 21"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; location attendance } ; date } ; february 21 } = true", "tointer": "select the row whose location attendance record of all rows is maximum . the date record of this row is february 21 ."}, "logic_str": "eq { hop { argmax { all_rows ; location attendance } ; date } ; february 21 } = true", "interpret": "select the row whose location attendance record of all rows is maximum . the date record of this row is february 21 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "location attendance_5": 5, "date_6": 6, "february 21_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "location attendance_5": "location attendance", "date_6": "date", "february 21_7": "february 21"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "location attendance_5": [0], "date_6": [1], "february 21_7": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["1", "february 5", "boston", "w 103 - 92 ( ot )", "kevin willis ( 28 )", "kevin willis ( 16 )", "alvin williams ( 6 )", "fleetcenter 17892", "1 - 0"], ["2", "february 6", "washington", "l 97 - 98 ( ot )", "charles oakley ( 18 )", "charles oakley ( 8 )", "alvin williams ( 9 )", "mci center 19335", "1 - 1"], ["3", "february 9", "milwaukee", "l 77 - 91 ( ot )", "vince carter ( 22 )", "charles oakley , kevin willis ( 11 )", "dee brown ( 6 )", "maple leaf gardens 14577", "1 - 2"], ["4", "february 11", "miami", "l 84 - 102 ( ot )", "doug christie ( 20 )", "michael stewart ( 7 )", "doug christie , alvin williams ( 3 )", "miami arena 14832", "1 - 3"], ["5", "february 16", "new york", "l 85 - 95 ( ot )", "vince carter ( 17 )", "charles oakley ( 7 )", "doug christie ( 4 )", "madison square garden 19763", "1 - 4"], ["6", "february 18", "washington", "l 88 - 95 ( ot )", "kevin willis ( 25 )", "kevin willis ( 14 )", "doug christie ( 6 )", "skydome 14292", "1 - 5"], ["7", "february 19", "milwaukee", "w 90 - 82 ( ot )", "doug christie ( 20 )", "kevin willis ( 11 )", "tracy mcgrady ( 7 )", "skydome 14888", "2 - 5"], ["8", "february 21", "vancouver", "w 102 - 87 ( ot )", "vince carter ( 27 )", "kevin willis ( 15 )", "charles oakley ( 6 )", "air canada centre 19800", "3 - 5"], ["9", "february 23", "detroit", "l 80 - 106 ( ot )", "john wallace ( 14 )", "doug christie , john wallace ( 5 )", "doug christie , tracy mcgrady ( 4 )", "the palace of auburn hills 14187", "3 - 6"], ["10", "february 24", "indiana", "l 84 - 104 ( ot )", "vince carter ( 28 )", "kevin willis ( 13 )", "tracy mcgrady ( 3 )", "market square arena 14700", "3 - 7"], ["11", "february 26", "minnesota", "w 102 - 92 ( ot )", "vince carter ( 21 )", "kevin willis ( 16 )", "doug christie ( 9 )", "air canada centre 15122", "4 - 7"]], "query": "eq { hop { argmax { all_rows ; location attendance } ; date } ; february 21 } = true", "question": "in the 1998-99 toronto raptors season , the highest attendance occurred on february 21st ."}, {"topic": "1990 - 91 boston bruins season", "wiki": "https://en.wikipedia.org/wiki/1990%E2%80%9391_Boston_Bruins_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14057447-9.html.csv", "action": "superlative", "sent": "the game in may 9 had the highest number of goals scored by any team in the month of may of the bruins season .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "score"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; score }"}, "date"], "result": "may 9", "ind": 1, "tostr": "hop { argmax { all_rows ; score } ; date }"}, "may 9"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; score } ; date } ; may 9 } = true", "tointer": "select the row whose score record of all rows is maximum . the date record of this row is may 9 ."}, "logic_str": "eq { hop { argmax { all_rows ; score } ; date } ; may 9 } = true", "interpret": "select the row whose score record of all rows is maximum . the date record of this row is may 9 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "score_5": 5, "date_6": 6, "may 9_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "score_5": "score", "date_6": "date", "may 9_7": "may 9"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "score_5": [0], "date_6": [1], "may 9_7": [2]}, "table_header": ["date", "visitor", "score", "home", "record"], "table_cont": [["may 1", "pittsburgh penguins", "3 - 6", "boston bruins", "1 - 0"], ["may 3", "pittsburgh penguins", "4 - 5 ( ot )", "boston bruins", "2 - 0"], ["may 5", "boston bruins", "1 - 4", "pittsburgh penguins", "2 - 1"], ["may 7", "boston bruins", "1 - 4", "pittsburgh penguins", "2 - 2"], ["may 9", "pittsburgh penguins", "7 - 2", "boston bruins", "2 - 3"], ["may 11", "boston bruins", "3 - 5", "pittsburgh penguins", "2 - 4"]], "query": "eq { hop { argmax { all_rows ; score } ; date } ; may 9 } = true", "question": "the game in may 9 had the highest number of goals scored by any team in the month of may of the bruins season ."}, {"topic": "damian paul chopa", "wiki": "https://en.wikipedia.org/wiki/Damian_Paul_Chopa", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10265361-1.html.csv", "action": "ordinal", "sent": "damian paul chopa had his third best result in the year of 2007 .", "annotation": {"row": "5", "col": "4", "order": "3", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "result", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; result ; 3 }"}, "year"], "result": "2007", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; result ; 3 } ; year }"}, "2007"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; result ; 3 } ; year } ; 2007 } = true", "tointer": "select the row whose result record of all rows is 3rd minimum . the year record of this row is 2007 ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; result ; 3 } ; year } ; 2007 } = true", "interpret": "select the row whose result record of all rows is 3rd minimum . the year record of this row is 2007 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "result_5": 5, "3_6": 6, "year_7": 7, "2007_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "result_5": "result", "3_6": "3", "year_7": "year", "2007_8": "2007"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "result_5": [0], "3_6": [0], "year_7": [1], "2007_8": [2]}, "table_header": ["year", "tournament", "venue", "result", "extra"], "table_cont": [["2004", "world cross country championships", "brussels , belgium", "27th", "short race"], ["2005", "world cross country championships", "st etienne , france", "27th", "short race"], ["2006", "commonwealth games", "melbourne , australia", "6th", "5000 m , 13:24.03 pb"], ["2006", "african championships", "bambous , mauritius", "9th", "5000 m"], ["2007", "world cross country championships", "mombasa , kenya", "12th", "senior race"]], "query": "eq { hop { nth_argmin { all_rows ; result ; 3 } ; year } ; 2007 } = true", "question": "damian paul chopa had his third best result in the year of 2007 ."}, {"topic": "manila", "wiki": "https://en.wikipedia.org/wiki/Manila", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-184334-2.html.csv", "action": "unique", "sent": "intramuros is the only district of manila with a population of less 5000 in the 2010 census of manila .", "annotation": {"scope": "all", "row": "3", "col": "3", "col_other": "1", "criterion": "less_than", "value": "5000", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "population ( 2010 census )", "5000"], "result": null, "ind": 0, "tointer": "select the rows whose population ( 2010 census ) record is less than 5000 .", "tostr": "filter_less { all_rows ; population ( 2010 census ) ; 5000 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; population ( 2010 census ) ; 5000 } }", "tointer": "select the rows whose population ( 2010 census ) record is less than 5000 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "population ( 2010 census )", "5000"], "result": null, "ind": 0, "tointer": "select the rows whose population ( 2010 census ) record is less than 5000 .", "tostr": "filter_less { all_rows ; population ( 2010 census ) ; 5000 }"}, "district"], "result": "intramuros", "ind": 2, "tostr": "hop { filter_less { all_rows ; population ( 2010 census ) ; 5000 } ; district }"}, "intramuros"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; population ( 2010 census ) ; 5000 } ; district } ; intramuros }", "tointer": "the district record of this unqiue row is intramuros ."}], "result": true, "ind": 4, "tostr": "and { only { filter_less { all_rows ; population ( 2010 census ) ; 5000 } } ; eq { hop { filter_less { all_rows ; population ( 2010 census ) ; 5000 } ; district } ; intramuros } } = true", "tointer": "select the rows whose population ( 2010 census ) record is less than 5000 . there is only one such row in the table . the district record of this unqiue row is intramuros ."}, "logic_str": "and { only { filter_less { all_rows ; population ( 2010 census ) ; 5000 } } ; eq { hop { filter_less { all_rows ; population ( 2010 census ) ; 5000 } ; district } ; intramuros } } = true", "interpret": "select the rows whose population ( 2010 census ) record is less than 5000 . there is only one such row in the table . the district record of this unqiue row is intramuros .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_less_0": 0, "all_rows_6": 6, "population (2010 census)_7": 7, "5000_8": 8, "str_eq_3": 3, "str_hop_2": 2, "district_9": 9, "intramuros_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_6": "all_rows", "population (2010 census)_7": "population ( 2010 census )", "5000_8": "5000", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "district_9": "district", "intramuros_10": "intramuros"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_less_0": [1, 2], "all_rows_6": [0], "population (2010 census)_7": [0], "5000_8": [0], "str_eq_3": [4], "str_hop_2": [3], "district_9": [2], "intramuros_10": [3]}, "table_header": ["district", "s barangay", "population ( 2010 census )", "area ( has )", "pop density ( per km2 )"], "table_cont": [["binondo", "10", "12985", "66.11", "19641.5"], ["ermita", "13", "7143", "158.91", "4495.0"], ["intramuros", "5", "4925", "67.26", "7322.3"], ["malate", "57", "77513", "259.58", "29860.9"], ["paco", "43", "70978", "278.69", "25468.4"], ["pandacan", "38", "73895", "166.00", "44515.1"], ["port area", "5", "57405", "315.28", "18207.6"], ["quiapo", "16", "24886", "84.69", "29384.8"], ["sampaloc", "192", "241528", "513.71", "47016.4"], ["san andr\u00e3s", "65", "115942", "168.02", "69004.9"], ["san miguel", "12", "15992", "91.37", "17502.5"], ["san nicolas", "15", "44241", "163.85", "27000.9"], ["santa ana", "34", "60952", "169.42", "35976.9"], ["santa cruz", "82", "115747", "309.01", "37457.4"], ["santa mesa", "51", "99933", "261.01", "38287.0"], ["tondo", "259", "628106", "865.13", "72602.5"]], "query": "and { only { filter_less { all_rows ; population ( 2010 census ) ; 5000 } } ; eq { hop { filter_less { all_rows ; population ( 2010 census ) ; 5000 } ; district } ; intramuros } } = true", "question": "intramuros is the only district of manila with a population of less 5000 in the 2010 census of manila ."}, {"topic": "1997 world club championship", "wiki": "https://en.wikipedia.org/wiki/1997_World_Club_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10637415-3.html.csv", "action": "superlative", "sent": "wigan warriors had the highest number of points in standings in the 1997 world club championship .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "club"], "result": "wigan warriors", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; club }"}, "wigan warriors"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; club } ; wigan warriors } = true", "tointer": "select the row whose points record of all rows is maximum . the club record of this row is wigan warriors ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; club } ; wigan warriors } = true", "interpret": "select the row whose points record of all rows is maximum . the club record of this row is wigan warriors .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "club_6": 6, "wigan warriors_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "club_6": "club", "wigan warriors_7": "wigan warriors"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "club_6": [1], "wigan warriors_7": [2]}, "table_header": ["club", "played", "lost", "drawn", "against", "diff", "points"], "table_cont": [["wigan warriors", "6", "4", "0", "212", "- 123", "4"], ["london broncos", "6", "5", "0", "238", "- 102", "2"], ["bradford bulls", "6", "6", "0", "228", "- 146", "0"], ["st helens rlfc", "6", "6", "0", "270", "- 174", "0"], ["warrington wolves", "6", "6", "0", "256", "- 178", "0"], ["halifax blue sox", "6", "6", "0", "340", "- 284", "0"]], "query": "eq { hop { argmax { all_rows ; points } ; club } ; wigan warriors } = true", "question": "wigan warriors had the highest number of points in standings in the 1997 world club championship ."}, {"topic": "mark blundell", "wiki": "https://en.wikipedia.org/wiki/Mark_Blundell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1189516-2.html.csv", "action": "superlative", "sent": "mark blundell scored the highest number of points in his 1991-1995 formula one races in his race in 1995 .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "pts"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; pts }"}, "year"], "result": "1995", "ind": 1, "tostr": "hop { argmax { all_rows ; pts } ; year }"}, "1995"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; pts } ; year } ; 1995 } = true", "tointer": "select the row whose pts record of all rows is maximum . the year record of this row is 1995 ."}, "logic_str": "eq { hop { argmax { all_rows ; pts } ; year } ; 1995 } = true", "interpret": "select the row whose pts record of all rows is maximum . the year record of this row is 1995 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "pts_5": 5, "year_6": 6, "1995_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "pts_5": "pts", "year_6": "year", "1995_7": "1995"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "pts_5": [0], "year_6": [1], "1995_7": [2]}, "table_header": ["year", "entrant", "chassis", "engine", "pts"], "table_cont": [["1991", "motor racing developments ltd", "brabham bt59y", "yamaha v12", "1"], ["1991", "motor racing developments ltd", "brabham bt60y", "yamaha v12", "1"], ["1993", "ligier gitanes blondes", "ligier js39", "renault v10", "10"], ["1994", "tyrrell", "tyrrell 022", "yamaha v10", "8"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10", "mercedes v10", "13"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10b", "mercedes v10", "13"], ["1995", "marlboro mclaren mercedes", "mclaren mp4 / 10c", "mercedes v10", "13"]], "query": "eq { hop { argmax { all_rows ; pts } ; year } ; 1995 } = true", "question": "mark blundell scored the highest number of points in his 1991-1995 formula one races in his race in 1995 ."}, {"topic": "john powell", "wiki": "https://en.wikipedia.org/wiki/John_Powell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18638934-2.html.csv", "action": "comparative", "sent": "john powell worked on face/off before he worked on antz .", "annotation": {"row_1": "1", "row_2": "3", "col": "1", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "title", "face / off"], "result": null, "ind": 0, "tointer": "select the rows whose title record fuzzily matches to face / off .", "tostr": "filter_eq { all_rows ; title ; face / off }"}, "year"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; title ; face / off } ; year }", "tointer": "select the rows whose title record fuzzily matches to face / off . take the year record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "title", "antz"], "result": null, "ind": 1, "tointer": "select the rows whose title record fuzzily matches to antz .", "tostr": "filter_eq { all_rows ; title ; antz }"}, "year"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; title ; antz } ; year }", "tointer": "select the rows whose title record fuzzily matches to antz . take the year record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; title ; face / off } ; year } ; hop { filter_eq { all_rows ; title ; antz } ; year } } = true", "tointer": "select the rows whose title record fuzzily matches to face / off . take the year record of this row . select the rows whose title record fuzzily matches to antz . take the year record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; title ; face / off } ; year } ; hop { filter_eq { all_rows ; title ; antz } ; year } } = true", "interpret": "select the rows whose title record fuzzily matches to face / off . take the year record of this row . select the rows whose title record fuzzily matches to antz . take the year record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "title_7": 7, "face / off_8": 8, "year_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "title_11": 11, "antz_12": 12, "year_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "title_7": "title", "face / off_8": "face / off", "year_9": "year", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "title_11": "title", "antz_12": "antz", "year_13": "year"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "title_7": [0], "face / off_8": [0], "year_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "title_11": [1], "antz_12": [1], "year_13": [3]}, "table_header": ["year", "title", "director", "studio ( s )", "notes"], "table_cont": [["1997", "face / off", "john woo", "paramount pictures", "n / a"], ["1998", "with friends like these", "philip frank messina", "miramax films", "n / a"], ["1998", "antz", "eric darnell tim johnson", "dreamworks pictures dreamworks animation", "with harry gregson - williams"], ["1999", "endurance", "leslie woodhead bud greenspan", "walt disney pictures", "n / a"], ["1999", "forces of nature", "bronwen hughes", "dreamworks pictures", "n / a"], ["1999", "chill factor", "hugh johnson", "warner bros pictures", "with hans zimmer"]], "query": "less { hop { filter_eq { all_rows ; title ; face / off } ; year } ; hop { filter_eq { all_rows ; title ; antz } ; year } } = true", "question": "john powell worked on face/off before he worked on antz ."}, {"topic": "list of computer system emulators", "wiki": "https://en.wikipedia.org/wiki/List_of_computer_system_emulators", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11561331-17.html.csv", "action": "unique", "sent": "estyjs is the only atari emulator without a version number .", "annotation": {"scope": "all", "row": "10", "col": "2", "col_other": "1", "criterion": "equal", "value": "n / a", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "actual version", "n / a"], "result": null, "ind": 0, "tointer": "select the rows whose actual version record fuzzily matches to n / a .", "tostr": "filter_eq { all_rows ; actual version ; n / a }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; actual version ; n / a } }", "tointer": "select the rows whose actual version record fuzzily matches to n / a . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "actual version", "n / a"], "result": null, "ind": 0, "tointer": "select the rows whose actual version record fuzzily matches to n / a .", "tostr": "filter_eq { all_rows ; actual version ; n / a }"}, "name"], "result": "estyjs", "ind": 2, "tostr": "hop { filter_eq { all_rows ; actual version ; n / a } ; name }"}, "estyjs"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; actual version ; n / a } ; name } ; estyjs }", "tointer": "the name record of this unqiue row is estyjs ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; actual version ; n / a } } ; eq { hop { filter_eq { all_rows ; actual version ; n / a } ; name } ; estyjs } } = true", "tointer": "select the rows whose actual version record fuzzily matches to n / a . there is only one such row in the table . the name record of this unqiue row is estyjs ."}, "logic_str": "and { only { filter_eq { all_rows ; actual version ; n / a } } ; eq { hop { filter_eq { all_rows ; actual version ; n / a } ; name } ; estyjs } } = true", "interpret": "select the rows whose actual version record fuzzily matches to n / a . there is only one such row in the table . the name record of this unqiue row is estyjs .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "actual version_7": 7, "n / a_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "estyjs_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "actual version_7": "actual version", "n / a_8": "n / a", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "estyjs_10": "estyjs"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "actual version_7": [0], "n / a_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "estyjs_10": [3]}, "table_header": ["name", "actual version", "system", "platform", "license"], "table_cont": [["steem", "3.2", "atari st e", "windows , linux", "freeware"], ["saint", "2.20", "atari st / ste", "windows", "freeware"], ["gemulator", "9.0", "atari st", "windows", "commercial ( free )"], ["hatari", "1.6.2", "atari st / ste , atari tt , atari falcon", "cross - platform", "gpl"], ["pacifist", "0.49 b", "atari st", "dos , windows", "giftware"], ["stonx", "0.6.7.6", "atari st", "unix , dos , windows", "gpl"], ["winston", "0.1 r2", "atari st", "windows", "freeware"], ["aranym", "0.9.13", "atari st , atari tt , atari falcon", "cross - platform", "gpl"], ["mess", "0.147", "various computers and consoles", "cross - platform", "custom"], ["estyjs", "n / a", "atari st", "cross - platform", "-"]], "query": "and { only { filter_eq { all_rows ; actual version ; n / a } } ; eq { hop { filter_eq { all_rows ; actual version ; n / a } ; name } ; estyjs } } = true", "question": "estyjs is the only atari emulator without a version number ."}, {"topic": "fraternities and sororities in canada", "wiki": "https://en.wikipedia.org/wiki/Fraternities_and_sororities_in_Canada", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28436909-4.html.csv", "action": "aggregation", "sent": "sororities in the national panhellenic conference in canada have a total of 48 active chapters .", "annotation": {"scope": "all", "col": "7", "type": "sum", "result": "48", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "canadian chapters"], "result": "48", "ind": 0, "tostr": "sum { all_rows ; canadian chapters }"}, "48"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; canadian chapters } ; 48 } = true", "tointer": "the sum of the canadian chapters record of all rows is 48 ."}, "logic_str": "round_eq { sum { all_rows ; canadian chapters } ; 48 } = true", "interpret": "the sum of the canadian chapters record of all rows is 48 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "canadian chapters_4": 4, "48_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "canadian chapters_4": "canadian chapters", "48_5": "48"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "canadian chapters_4": [0], "48_5": [1]}, "table_header": ["letters", "organization", "nickname", "founding date", "founding university", "type", "canadian chapters"], "table_cont": [["\u03b1\u03b3\u03b4", "alpha gamma delta", "a g d or alpha gam or gams", "1904 - 05 - 30", "syracuse university", "social", "8 active , 2 inactive"], ["\u03b1\u03b4\u03c0", "alpha delta pi", "a d pi", "1851 - 05 - 15", "wesleyan college", "social", "3 active , 1 inactive"], ["a\u03b5\u03c6", "alpha epsilon phi", "a e phi or phisters", "1909 - 10 - 24", "barnard college", "jewish", "1 active , 2 inactive"], ["\u03b1\u03bf\u03c0", "alpha omicron pi", "aopi alphas alpha o 's", "1897 - 01 - 02", "barnard college", "social", "8 active"], ["a\u03c6", "alpha phi", "a - phi", "1872 - 10 - 10", "syracuse university", "social", "6 active , 1 inactive"], ["\u03b3\u03c6\u03b2", "gamma phi beta", "gamma phi , g - phi - b or g - phi", "1874 - 11 - 11", "syracuse university", "social", "3 active , 2 inactive"], ["\u03b4\u03b3", "delta gamma", "dg or deegee", "1873 - 12 - 25", "lewis school for girls", "social", "3 active , 2 inactive"], ["\u03b4\u03b4\u03b4", "delta delta delta", "tri delta", "1888 - 11 - 27", "boston university", "social", "2 active , 2 inactive"], ["\u03b4\u03b6", "delta zeta", "dz", "1902 - 10 - 24", "miami university", "social", "1 active , 1 inactive"], ["\u03b4\u03c6\u03b5", "delta phi epsilon", "dphie", "1917 - 03 - 17", "new york university law school", "social", "1 active , 5 inactive"], ["\u03ba\u03b1\u03b8", "kappa alpha theta", "theta or kat", "1870 - 01 - 27", "depauw university", "social", "4 active , 2 inactive"], ["\u03ba\u03ba\u03b3", "kappa kappa gamma", "kappa", "1870 - 10 - 13", "monmouth college", "social", "4 active , 1 inactive"], ["\u03c0\u03b2\u03c6", "pi beta phi", "pi phi", "1867 - 04 - 28", "monmouth college", "social", "4 active , 2 inactive"]], "query": "round_eq { sum { all_rows ; canadian chapters } ; 48 } = true", "question": "sororities in the national panhellenic conference in canada have a total of 48 active chapters ."}, {"topic": "manila", "wiki": "https://en.wikipedia.org/wiki/Manila", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-184334-2.html.csv", "action": "comparative", "sent": "the district intramuros and port area both share the same amount of s barangays , five , in manila .", "annotation": {"row_1": "3", "row_2": "7", "col": "2", "col_other": "1", "relation": "equal", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "district", "intramuros"], "result": null, "ind": 0, "tointer": "select the rows whose district record fuzzily matches to intramuros .", "tostr": "filter_eq { all_rows ; district ; intramuros }"}, "s barangay"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; district ; intramuros } ; s barangay }", "tointer": "select the rows whose district record fuzzily matches to intramuros . take the s barangay record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "district", "port area"], "result": null, "ind": 1, "tointer": "select the rows whose district record fuzzily matches to port area .", "tostr": "filter_eq { all_rows ; district ; port area }"}, "s barangay"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; district ; port area } ; s barangay }", "tointer": "select the rows whose district record fuzzily matches to port area . take the s barangay record of this row ."}], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; hop { filter_eq { all_rows ; district ; port area } ; s barangay } }", "tointer": "select the rows whose district record fuzzily matches to intramuros . take the s barangay record of this row . select the rows whose district record fuzzily matches to port area . take the s barangay record of this row . the first record is equal to the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "district", "intramuros"], "result": null, "ind": 0, "tointer": "select the rows whose district record fuzzily matches to intramuros .", "tostr": "filter_eq { all_rows ; district ; intramuros }"}, "s barangay"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; district ; intramuros } ; s barangay }", "tointer": "select the rows whose district record fuzzily matches to intramuros . take the s barangay record of this row ."}, "5"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; 5 }", "tointer": "the s barangay record of the first row is 5 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "district", "port area"], "result": null, "ind": 1, "tointer": "select the rows whose district record fuzzily matches to port area .", "tostr": "filter_eq { all_rows ; district ; port area }"}, "s barangay"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; district ; port area } ; s barangay }", "tointer": "select the rows whose district record fuzzily matches to port area . take the s barangay record of this row ."}, "5"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; district ; port area } ; s barangay } ; 5 }", "tointer": "the s barangay record of the second row is 5 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; 5 } ; eq { hop { filter_eq { all_rows ; district ; port area } ; s barangay } ; 5 } }", "tointer": "the s barangay record of the first row is 5 . the s barangay record of the second row is 5 ."}], "result": true, "ind": 8, "tostr": "and { eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; hop { filter_eq { all_rows ; district ; port area } ; s barangay } } ; and { eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; 5 } ; eq { hop { filter_eq { all_rows ; district ; port area } ; s barangay } ; 5 } } } = true", "tointer": "select the rows whose district record fuzzily matches to intramuros . take the s barangay record of this row . select the rows whose district record fuzzily matches to port area . take the s barangay record of this row . the first record is equal to the second record . the s barangay record of the first row is 5 . the s barangay record of the second row is 5 ."}, "logic_str": "and { eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; hop { filter_eq { all_rows ; district ; port area } ; s barangay } } ; and { eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; 5 } ; eq { hop { filter_eq { all_rows ; district ; port area } ; s barangay } ; 5 } } } = true", "interpret": "select the rows whose district record fuzzily matches to intramuros . take the s barangay record of this row . select the rows whose district record fuzzily matches to port area . take the s barangay record of this row . the first record is equal to the second record . the s barangay record of the first row is 5 . the s barangay record of the second row is 5 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "eq_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "district_11": 11, "intramuros_12": 12, "s barangay_13": 13, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "district_15": 15, "port area_16": 16, "s barangay_17": 17, "and_7": 7, "eq_5": 5, "5_18": 18, "eq_6": 6, "5_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "eq_4": "eq", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "district_11": "district", "intramuros_12": "intramuros", "s barangay_13": "s barangay", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "district_15": "district", "port area_16": "port area", "s barangay_17": "s barangay", "and_7": "and", "eq_5": "eq", "5_18": "5", "eq_6": "eq", "5_19": "5"}, "g_adj": {"and_8": [9], "result_9": [], "eq_4": [8], "num_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "district_11": [0], "intramuros_12": [0], "s barangay_13": [2], "num_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "district_15": [1], "port area_16": [1], "s barangay_17": [3], "and_7": [8], "eq_5": [7], "5_18": [5], "eq_6": [7], "5_19": [6]}, "table_header": ["district", "s barangay", "population ( 2010 census )", "area ( has )", "pop density ( per km2 )"], "table_cont": [["binondo", "10", "12985", "66.11", "19641.5"], ["ermita", "13", "7143", "158.91", "4495.0"], ["intramuros", "5", "4925", "67.26", "7322.3"], ["malate", "57", "77513", "259.58", "29860.9"], ["paco", "43", "70978", "278.69", "25468.4"], ["pandacan", "38", "73895", "166.00", "44515.1"], ["port area", "5", "57405", "315.28", "18207.6"], ["quiapo", "16", "24886", "84.69", "29384.8"], ["sampaloc", "192", "241528", "513.71", "47016.4"], ["san andr\u00e3s", "65", "115942", "168.02", "69004.9"], ["san miguel", "12", "15992", "91.37", "17502.5"], ["san nicolas", "15", "44241", "163.85", "27000.9"], ["santa ana", "34", "60952", "169.42", "35976.9"], ["santa cruz", "82", "115747", "309.01", "37457.4"], ["santa mesa", "51", "99933", "261.01", "38287.0"]], "query": "and { eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; hop { filter_eq { all_rows ; district ; port area } ; s barangay } } ; and { eq { hop { filter_eq { all_rows ; district ; intramuros } ; s barangay } ; 5 } ; eq { hop { filter_eq { all_rows ; district ; port area } ; s barangay } ; 5 } } } = true", "question": "the district intramuros and port area both share the same amount of s barangays , five , in manila ."}, {"topic": "orlando pizzolato", "wiki": "https://en.wikipedia.org/wiki/Orlando_Pizzolato", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15399415-1.html.csv", "action": "ordinal", "sent": "the 2nd to worst position that orlando pizzolato finshed in at a competition was in 1987 .", "annotation": {"row": "4", "col": "4", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "position", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; position ; 2 }"}, "year"], "result": "1987", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; position ; 2 } ; year }"}, "1987"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; position ; 2 } ; year } ; 1987 } = true", "tointer": "select the row whose position record of all rows is 2nd maximum . the year record of this row is 1987 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; position ; 2 } ; year } ; 1987 } = true", "interpret": "select the row whose position record of all rows is 2nd maximum . the year record of this row is 1987 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "position_5": 5, "2_6": 6, "year_7": 7, "1987_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "position_5": "position", "2_6": "2", "year_7": "year", "1987_8": "1987"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "position_5": [0], "2_6": [0], "year_7": [1], "1987_8": [2]}, "table_header": ["year", "competition", "venue", "position", "notes"], "table_cont": [["1984", "new york city marathon", "new york , united states", "1st", "2:14:53"], ["1985", "new york city marathon", "new york , united states", "1st", "2:11:34"], ["1986", "european championships", "stuttgart , west germany", "2nd", "2:10:57"], ["1987", "world championships", "rome , italy", "7th", "2:14:03"], ["1988", "olympic games", "seoul , south korea", "16th", "2:15:20"], ["1988", "venice marathon", "venice , italy", "1st", "2:15:24"]], "query": "eq { hop { nth_argmax { all_rows ; position ; 2 } ; year } ; 1987 } = true", "question": "the 2nd to worst position that orlando pizzolato finshed in at a competition was in 1987 ."}, {"topic": "philippine presidential election , 2010", "wiki": "https://en.wikipedia.org/wiki/Philippine_presidential_election%2C_2010", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22097588-9.html.csv", "action": "comparative", "sent": "joseph estrada spent a slight bit more per voter than jejomar binay in the2010 philippines presidental election .", "annotation": {"row_1": "2", "row_2": "6", "col": "6", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "candidate ( party )", "joseph estrada ( pmp )"], "result": null, "ind": 0, "tointer": "select the rows whose candidate ( party ) record fuzzily matches to joseph estrada ( pmp ) .", "tostr": "filter_eq { all_rows ; candidate ( party ) ; joseph estrada ( pmp ) }"}, "spent per voter ( php )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; candidate ( party ) ; joseph estrada ( pmp ) } ; spent per voter ( php ) }", "tointer": "select the rows whose candidate ( party ) record fuzzily matches to joseph estrada ( pmp ) . take the spent per voter ( php ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "candidate ( party )", "jejomar binay ( pdp - laban )"], "result": null, "ind": 1, "tointer": "select the rows whose candidate ( party ) record fuzzily matches to jejomar binay ( pdp - laban ) .", "tostr": "filter_eq { all_rows ; candidate ( party ) ; jejomar binay ( pdp - laban ) }"}, "spent per voter ( php )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; candidate ( party ) ; jejomar binay ( pdp - laban ) } ; spent per voter ( php ) }", "tointer": "select the rows whose candidate ( party ) record fuzzily matches to jejomar binay ( pdp - laban ) . take the spent per voter ( php ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; candidate ( party ) ; joseph estrada ( pmp ) } ; spent per voter ( php ) } ; hop { filter_eq { all_rows ; candidate ( party ) ; jejomar binay ( pdp - laban ) } ; spent per voter ( php ) } } = true", "tointer": "select the rows whose candidate ( party ) record fuzzily matches to joseph estrada ( pmp ) . take the spent per voter ( php ) record of this row . select the rows whose candidate ( party ) record fuzzily matches to jejomar binay ( pdp - laban ) . take the spent per voter ( php ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; candidate ( party ) ; joseph estrada ( pmp ) } ; spent per voter ( php ) } ; hop { filter_eq { all_rows ; candidate ( party ) ; jejomar binay ( pdp - laban ) } ; spent per voter ( php ) } } = true", "interpret": "select the rows whose candidate ( party ) record fuzzily matches to joseph estrada ( pmp ) . take the spent per voter ( php ) record of this row . select the rows whose candidate ( party ) record fuzzily matches to jejomar binay ( pdp - laban ) . take the spent per voter ( php ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "candidate (party)_7": 7, "joseph estrada (pmp)_8": 8, "spent per voter ( php )_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "candidate (party)_11": 11, "jejomar binay (pdp - laban)_12": 12, "spent per voter ( php )_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "candidate (party)_7": "candidate ( party )", "joseph estrada (pmp)_8": "joseph estrada ( pmp )", "spent per voter ( php )_9": "spent per voter ( php )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "candidate (party)_11": "candidate ( party )", "jejomar binay (pdp - laban)_12": "jejomar binay ( pdp - laban )", "spent per voter ( php )_13": "spent per voter ( php )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "candidate (party)_7": [0], "joseph estrada (pmp)_8": [0], "spent per voter ( php )_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "candidate (party)_11": [1], "jejomar binay (pdp - laban)_12": [1], "spent per voter ( php )_13": [3]}, "table_header": ["candidate ( party )", "amount raised ( php )", "amount spent ( php )", "votes", "spent per vote ( php )", "spent per voter ( php )"], "table_cont": [["benigno aquino iii ( lp )", "440050000 ( approx )", "403119981.81", "15208678", "26.51", "7.86"], ["joseph estrada ( pmp )", "8000000 ( approx )", "227500000", "9487837", "23.98", "4.44"], ["manny villar ( np )", "431557816", "431557816", "5573835", "77.43", "8.41"], ["gilberto teodoro ( lakas - kampi )", "64688.88", "3463307.21", "4095839", "0.85", "0.07"], ["jamby madrigal ( i )", "55182264", "55182264", "46489", "1187.00", "1.08"], ["jejomar binay ( pdp - laban )", "231480000 ( approx )", "217938289", "14645574", "14.88", "4.25"], ["mar roxas ( lp )", "246000000 ( approx )", "279351224", "13918490", "20.07", "5.45"], ["loren legarda ( npc )", "n / a", "210280000", "4294664", "48.96", "4.10"]], "query": "greater { hop { filter_eq { all_rows ; candidate ( party ) ; joseph estrada ( pmp ) } ; spent per voter ( php ) } ; hop { filter_eq { all_rows ; candidate ( party ) ; jejomar binay ( pdp - laban ) } ; spent per voter ( php ) } } = true", "question": "joseph estrada spent a slight bit more per voter than jejomar binay in the2010 philippines presidental election ."}, {"topic": "mandsaur ( lok sabha constituency )", "wiki": "https://en.wikipedia.org/wiki/Mandsaur_%28Lok_Sabha_constituency%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18518150-1.html.csv", "action": "ordinal", "sent": "the district with the second highest number of electorates was mandsaur .", "annotation": {"row": "2", "col": "5", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "number of electorates ( 2009 )", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; number of electorates ( 2009 ) ; 2 }"}, "name"], "result": "mandsour", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; number of electorates ( 2009 ) ; 2 } ; name }"}, "mandsour"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; number of electorates ( 2009 ) ; 2 } ; name } ; mandsour } = true", "tointer": "select the row whose number of electorates ( 2009 ) record of all rows is 2nd maximum . the name record of this row is mandsour ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; number of electorates ( 2009 ) ; 2 } ; name } ; mandsour } = true", "interpret": "select the row whose number of electorates ( 2009 ) record of all rows is 2nd maximum . the name record of this row is mandsour .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "number of electorates (2009)_5": 5, "2_6": 6, "name_7": 7, "mandsour_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "number of electorates (2009)_5": "number of electorates ( 2009 )", "2_6": "2", "name_7": "name", "mandsour_8": "mandsour"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "number of electorates (2009)_5": [0], "2_6": [0], "name_7": [1], "mandsour_8": [2]}, "table_header": ["constituency number", "name", "reserved for ( sc / st / none )", "district", "number of electorates ( 2009 )"], "table_cont": [["222", "jaora", "none", "ratlam", "165174"], ["224", "mandsour", "none", "mandsaur", "186581"], ["225", "malhargarh", "sc", "mandsaur", "183257"], ["226", "suwasra", "none", "mandsaur", "198249"], ["227", "garoth", "none", "mandsaur", "185692"], ["228", "manasa", "none", "neemuch", "147829"], ["229", "neemuch", "none", "neemuch", "167545"], ["230", "jawad", "none", "neemuch", "136640"], ["total :", "total :", "total :", "total :", "1370967"]], "query": "eq { hop { nth_argmax { all_rows ; number of electorates ( 2009 ) ; 2 } ; name } ; mandsour } = true", "question": "the district with the second highest number of electorates was mandsaur ."}, {"topic": "john powell", "wiki": "https://en.wikipedia.org/wiki/John_Powell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18638934-2.html.csv", "action": "superlative", "sent": "the earliest film that john powell worked on was face/off .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "year"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; year }"}, "title"], "result": "face / off", "ind": 1, "tostr": "hop { argmin { all_rows ; year } ; title }"}, "face / off"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; year } ; title } ; face / off } = true", "tointer": "select the row whose year record of all rows is minimum . the title record of this row is face / off ."}, "logic_str": "eq { hop { argmin { all_rows ; year } ; title } ; face / off } = true", "interpret": "select the row whose year record of all rows is minimum . the title record of this row is face / off .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "year_5": 5, "title_6": 6, "face / off_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "year_5": "year", "title_6": "title", "face / off_7": "face / off"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "year_5": [0], "title_6": [1], "face / off_7": [2]}, "table_header": ["year", "title", "director", "studio ( s )", "notes"], "table_cont": [["1997", "face / off", "john woo", "paramount pictures", "n / a"], ["1998", "with friends like these", "philip frank messina", "miramax films", "n / a"], ["1998", "antz", "eric darnell tim johnson", "dreamworks pictures dreamworks animation", "with harry gregson - williams"], ["1999", "endurance", "leslie woodhead bud greenspan", "walt disney pictures", "n / a"], ["1999", "forces of nature", "bronwen hughes", "dreamworks pictures", "n / a"], ["1999", "chill factor", "hugh johnson", "warner bros pictures", "with hans zimmer"]], "query": "eq { hop { argmin { all_rows ; year } ; title } ; face / off } = true", "question": "the earliest film that john powell worked on was face/off ."}, {"topic": "seattle supersonics all - time roster", "wiki": "https://en.wikipedia.org/wiki/Seattle_SuperSonics_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16772687-6.html.csv", "action": "comparative", "sent": "francisco elson played 8 years later thanpervis ellison .", "annotation": {"row_1": "4", "row_2": "3", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "francisco elson"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to francisco elson .", "tostr": "filter_eq { all_rows ; player ; francisco elson }"}, "years"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; francisco elson } ; years }", "tointer": "select the rows whose player record fuzzily matches to francisco elson . take the years record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "pervis ellison"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to pervis ellison .", "tostr": "filter_eq { all_rows ; player ; pervis ellison }"}, "years"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; pervis ellison } ; years }", "tointer": "select the rows whose player record fuzzily matches to pervis ellison . take the years record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; player ; francisco elson } ; years } ; hop { filter_eq { all_rows ; player ; pervis ellison } ; years } } = true", "tointer": "select the rows whose player record fuzzily matches to francisco elson . take the years record of this row . select the rows whose player record fuzzily matches to pervis ellison . take the years record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; player ; francisco elson } ; years } ; hop { filter_eq { all_rows ; player ; pervis ellison } ; years } } = true", "interpret": "select the rows whose player record fuzzily matches to francisco elson . take the years record of this row . select the rows whose player record fuzzily matches to pervis ellison . take the years record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "francisco elson_8": 8, "years_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "pervis ellison_12": 12, "years_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "francisco elson_8": "francisco elson", "years_9": "years", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "pervis ellison_12": "pervis ellison", "years_13": "years"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "francisco elson_8": [0], "years_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "pervis ellison_12": [1], "years_13": [3]}, "table_header": ["player", "nationality", "jersey number ( s )", "position", "years", "from"], "table_cont": [["craig ehlo", "united states", "3", "sg", "1996 - 1997", "washington state"], ["dale ellis", "united states", "3", "sg / sf", "1986 - 1991 1997 - 1999", "tennessee"], ["pervis ellison", "united states", "29", "c", "2000", "louisville"], ["francisco elson", "netherlands", "16", "c", "2008", "california"], ["reggie evans", "united states", "34 , 30", "pf", "2002 - 2006", "iowa"], ["patrick ewing", "united states", "33", "center", "2000 - 2001", "georgetown"]], "query": "greater { hop { filter_eq { all_rows ; player ; francisco elson } ; years } ; hop { filter_eq { all_rows ; player ; pervis ellison } ; years } } = true", "question": "francisco elson played 8 years later thanpervis ellison ."}, {"topic": "locomotives of the southern railway", "wiki": "https://en.wikipedia.org/wiki/Locomotives_of_the_Southern_Railway", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1169552-20.html.csv", "action": "comparative", "sent": "the newport locamotive was withdrawn before the cowes locomotive was withdrawn .", "annotation": {"row_1": "8", "row_2": "6", "col": "6", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "newport"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to newport .", "tostr": "filter_eq { all_rows ; name ; newport }"}, "year withdrawn"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; newport } ; year withdrawn }", "tointer": "select the rows whose name record fuzzily matches to newport . take the year withdrawn record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "cowes"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to cowes .", "tostr": "filter_eq { all_rows ; name ; cowes }"}, "year withdrawn"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; cowes } ; year withdrawn }", "tointer": "select the rows whose name record fuzzily matches to cowes . take the year withdrawn record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; name ; newport } ; year withdrawn } ; hop { filter_eq { all_rows ; name ; cowes } ; year withdrawn } } = true", "tointer": "select the rows whose name record fuzzily matches to newport . take the year withdrawn record of this row . select the rows whose name record fuzzily matches to cowes . take the year withdrawn record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; name ; newport } ; year withdrawn } ; hop { filter_eq { all_rows ; name ; cowes } ; year withdrawn } } = true", "interpret": "select the rows whose name record fuzzily matches to newport . take the year withdrawn record of this row . select the rows whose name record fuzzily matches to cowes . take the year withdrawn record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name_7": 7, "newport_8": 8, "year withdrawn_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name_11": 11, "cowes_12": 12, "year withdrawn_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name_7": "name", "newport_8": "newport", "year withdrawn_9": "year withdrawn", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "cowes_12": "cowes", "year withdrawn_13": "year withdrawn"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name_7": [0], "newport_8": [0], "year withdrawn_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name_11": [1], "cowes_12": [1], "year withdrawn_13": [3]}, "table_header": ["iwcr no", "name", "wheel arrangement", "sr no", "year made", "year withdrawn"], "table_cont": [["1 ( 1st )", "pioneer", "2 - 2 - 2t", "-", "1861", "1904"], ["2 ( 1st )", "precursor", "2 - 2 - 2t", "-", "1861", "1904"], ["1 ( 2nd )", "-", "0 - 4 - 0t", "-", "1906", "1918"], ["2 ( 2nd )", "-", "0 - 4 - 4t", "-", "1895", "1917"], ["3", "-", "0 - 4 - 2t", "-", "1870", "1918"], ["4", "cowes", "2 - 4 - 0t", "w4", "1876", "1925"], ["5", "osborne", "2 - 4 - 0t", "w5", "1876", "1926"], ["6 ( 1st )", "newport", "2 - 2 - 2t", "-", "1861", "1895"], ["6 ( 2nd )", "-", "4 - 4 - 0t", "w6", "1890", "1926"], ["7 ( 1st )", "-", "4 - 4 - 0t", "-", "1861", "1906"], ["7 ( 2nd )", "-", "2 - 4 - 0t", "w7", "1882", "1926"], ["8", "-", "2 - 4 - 0t", "w8", "1898", "1929"], ["9", "-", "0 - 6 - 0t", "w9", "1872", "1927"], ["10", "-", "0 - 6 - 0t", "w10", "1874", "1936"], ["11", "-", "0 - 6 - 0t", "w11", "1878", "1963"], ["12", "-", "0 - 6 - 0t", "w12", "1880", "1936"]], "query": "less { hop { filter_eq { all_rows ; name ; newport } ; year withdrawn } ; hop { filter_eq { all_rows ; name ; cowes } ; year withdrawn } } = true", "question": "the newport locamotive was withdrawn before the cowes locomotive was withdrawn ."}, {"topic": "duke of rohan", "wiki": "https://en.wikipedia.org/wiki/Duke_of_Rohan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10957315-3.html.csv", "action": "unique", "sent": "louis antoine de rohan-chabot was the only person to become duke of rohan due to an uncles death .", "annotation": {"scope": "all", "row": "4", "col": "4", "col_other": "1", "criterion": "fuzzily_match", "value": "uncles death", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "became duke", "uncles death"], "result": null, "ind": 0, "tointer": "select the rows whose became duke record fuzzily matches to uncles death .", "tostr": "filter_eq { all_rows ; became duke ; uncles death }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; became duke ; uncles death } }", "tointer": "select the rows whose became duke record fuzzily matches to uncles death . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "became duke", "uncles death"], "result": null, "ind": 0, "tointer": "select the rows whose became duke record fuzzily matches to uncles death .", "tostr": "filter_eq { all_rows ; became duke ; uncles death }"}, "name"], "result": "louis antoine de rohan - chabot", "ind": 2, "tostr": "hop { filter_eq { all_rows ; became duke ; uncles death } ; name }"}, "louis antoine de rohan - chabot"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; became duke ; uncles death } ; name } ; louis antoine de rohan - chabot }", "tointer": "the name record of this unqiue row is louis antoine de rohan - chabot ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; became duke ; uncles death } } ; eq { hop { filter_eq { all_rows ; became duke ; uncles death } ; name } ; louis antoine de rohan - chabot } } = true", "tointer": "select the rows whose became duke record fuzzily matches to uncles death . there is only one such row in the table . the name record of this unqiue row is louis antoine de rohan - chabot ."}, "logic_str": "and { only { filter_eq { all_rows ; became duke ; uncles death } } ; eq { hop { filter_eq { all_rows ; became duke ; uncles death } ; name } ; louis antoine de rohan - chabot } } = true", "interpret": "select the rows whose became duke record fuzzily matches to uncles death . there is only one such row in the table . the name record of this unqiue row is louis antoine de rohan - chabot .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "became duke_7": 7, "uncles death_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "louis antoine de rohan - chabot_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "became duke_7": "became duke", "uncles death_8": "uncles death", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "louis antoine de rohan - chabot_10": "louis antoine de rohan - chabot"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "became duke_7": [0], "uncles death_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "louis antoine de rohan - chabot_10": [3]}, "table_header": ["name", "birth", "marriage", "became duke", "ceased to be duke", "death", "spouse"], "table_cont": [["louis de rohan - chabot", "3 november 1652", "18 july 1678", "27 february 1655 father 's death", "17 august 1727", "17 august 1727", "marie \u00e9lisabeth du bec - crespin de grimaldi"], ["louis bretagne alain de rohan - chabot", "26 september 1679", "29 may 1708", "17 august 1727 father 's death", "10 august 1738", "10 august 1738", "fran\u00e7oise de roquelaure"], ["louis marie de rohan - chabot", "17 january 1710", "19 december 1735", "10 august 1738 father 's death", "28 november 1791", "28 november 1791", "charlotte rosalie de chtillon"], ["louis antoine de rohan - chabot", "20 april 1733", "12 april 1757", "28 november 1791 uncles death", "29 november 1807", "29 november 1807", "\u00e9lisabeth louise de la rochefoucauld"], ["alexandre de rohan - chabot", "3 december 1761", "29 may 1785", "29 november 1807 father 's death", "8 february 1816", "8 february 1816", "anne louise \u00e9lisabeth de montmorency"], ["louis fran\u00e7ois de rohan - chabot", "29 february 1788", "2 may 1808", "8 february 1816 father 's death", "8 february 1833", "8 february 1833", "marie georgine armandine de s\u00e9rent"], ["fernand de rohan - chabot", "14 october 1789", "19 may 1817", "8 february 1833 brothers death", "10 september 1869", "10 september 1869", "josephine fran\u00e7oise de gontaut - biron"], ["charles de rohan - chabot", "12 december 1819", "29 june 1843", "10 september 1869 father 's death", "6 august 1893", "6 august 1893", "octavie rouill\u00e9 de boissy"], ["alain de rohan - chabot", "1 december 1844", "26 june 1872", "6 august 1893 father 's death", "6 january 1914", "6 january 1914", "herminie de la brousse de verteillac"], ["josselin de rohan - chabot", "4 april 1879", "11 june 1906", "6 january 1914 father 's death", "13 july 1916", "13 july 1916", "marguerite marie de rohan - chabot"], ["alain louis auguste de rohan - chabot", "10 may 1913", "5 may 1937", "13 july 1916 father 's death", "17 may 1966", "17 may 1966", "helene claire marie de liencourt"], ["josselin de rohan - chabot", "5 june 1938", "17 november 1973", "17 may 1966 father 's death", "n / a", "n / a", "antoinette jeanne yvonne boegner"], ["name", "birth", "marriage", "became duke", "ceased to be duke", "death", "spouse"]], "query": "and { only { filter_eq { all_rows ; became duke ; uncles death } } ; eq { hop { filter_eq { all_rows ; became duke ; uncles death } ; name } ; louis antoine de rohan - chabot } } = true", "question": "louis antoine de rohan-chabot was the only person to become duke of rohan due to an uncles death ."}, {"topic": "list of paris saint - germain f.c. players", "wiki": "https://en.wikipedia.org/wiki/List_of_Paris_Saint-Germain_F.C._players", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24565004-22.html.csv", "action": "count", "sent": "three of the players on the paris saint - germain f.c. team played the forward position .", "annotation": {"scope": "all", "criterion": "equal", "value": "forward", "result": "3", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "forward"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to forward .", "tostr": "filter_eq { all_rows ; position ; forward }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; position ; forward } }", "tointer": "select the rows whose position record fuzzily matches to forward . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; position ; forward } } ; 3 } = true", "tointer": "select the rows whose position record fuzzily matches to forward . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; position ; forward } } ; 3 } = true", "interpret": "select the rows whose position record fuzzily matches to forward . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "position_5": 5, "forward_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "position_5": "position", "forward_6": "forward", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "position_5": [0], "forward_6": [0], "3_7": [2]}, "table_header": ["name", "position", "period", "appearances", "goals", "nationality square"], "table_cont": [["valdo", "midfielder", "1991 - 1995", "153", "16", "brazil"], ["vampeta", "midfielder", "2000 - 2001", "8", "1", "brazil"], ["franck vandecasteele", "forward", "1984 - 1988 , 1990 - 1992", "1", "0", "france"], ["gregory van der wiel", "defender", "2012", "29", "1", "netherlands"], ["richard vanquelef", "forward", "1970 - 1974", "1", "1", "france"], ["jean - luc vasseur", "defender", "1986 - 1988 , 1990 - 1992", "22", "0", "france"], ["pierre vermeulen", "forward", "1985 - 1987", "55", "1", "netherlands"], ["marco verratti", "midfielder", "2012", "39", "0", "italy"]], "query": "eq { count { filter_eq { all_rows ; position ; forward } } ; 3 } = true", "question": "three of the players on the paris saint - germain f.c. team played the forward position ."}, {"topic": "list of railway stations and tram stops in croydon", "wiki": "https://en.wikipedia.org/wiki/List_of_railway_stations_and_tram_stops_in_Croydon", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11802780-15.html.csv", "action": "aggregation", "sent": "there are a total of four platforms in the station at waddon .", "annotation": {"scope": "subset", "col": "4", "type": "sum", "result": "4", "subset": {"col": "2", "criterion": "equal", "value": "waddon"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_str_eq", "args": ["all_rows", "place", "waddon"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; place ; waddon }", "tointer": "select the rows whose place record fuzzily matches to waddon ."}, "platforms"], "result": "4", "ind": 1, "tostr": "sum { filter_eq { all_rows ; place ; waddon } ; platforms }"}, "4"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_eq { all_rows ; place ; waddon } ; platforms } ; 4 } = true", "tointer": "select the rows whose place record fuzzily matches to waddon . the sum of the platforms record of these rows is 4 ."}, "logic_str": "round_eq { sum { filter_eq { all_rows ; place ; waddon } ; platforms } ; 4 } = true", "interpret": "select the rows whose place record fuzzily matches to waddon . the sum of the platforms record of these rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "place_5": 5, "waddon_6": 6, "platforms_7": 7, "4_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "place_5": "place", "waddon_6": "waddon", "platforms_7": "platforms", "4_8": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "place_5": [0], "waddon_6": [0], "platforms_7": [1], "4_8": [2]}, "table_header": ["stations", "place", "managed by", "platforms", "zone"], "table_cont": [["waddon marsh tram stop", "waddon", "tramlink", "2", "5"], ["waddon railway station", "waddon", "southern", "2", "5"], ["wandle park tram stop", "croydon", "tramlink", "2", "5"], ["wellesley road tram stop", "croydon", "tramlink", "1", "5"], ["west croydon station", "croydon", "southern / tramlink", "2", "5"], ["woodmansterne railway station", "woodmansterne", "southern", "2", "6"], ["woodside tram stop", "woodside", "tramlink", "2", "4"]], "query": "round_eq { sum { filter_eq { all_rows ; place ; waddon } ; platforms } ; 4 } = true", "question": "there are a total of four platforms in the station at waddon ."}, {"topic": "leo\u0161 friedl", "wiki": "https://en.wikipedia.org/wiki/Leo%C5%A1_Friedl", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12859623-3.html.csv", "action": "unique", "sent": "the tournament on 19 june 2005 was the only tournament to take place on a grass surface .", "annotation": {"scope": "all", "row": "12", "col": "3", "col_other": "1", "criterion": "equal", "value": "grass", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "grass"], "result": null, "ind": 0, "tointer": "select the rows whose surface record fuzzily matches to grass .", "tostr": "filter_eq { all_rows ; surface ; grass }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; surface ; grass } }", "tointer": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "grass"], "result": null, "ind": 0, "tointer": "select the rows whose surface record fuzzily matches to grass .", "tostr": "filter_eq { all_rows ; surface ; grass }"}, "date"], "result": "19 june 2005", "ind": 2, "tostr": "hop { filter_eq { all_rows ; surface ; grass } ; date }"}, "19 june 2005"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; surface ; grass } ; date } ; 19 june 2005 }", "tointer": "the date record of this unqiue row is 19 june 2005 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; surface ; grass } } ; eq { hop { filter_eq { all_rows ; surface ; grass } ; date } ; 19 june 2005 } } = true", "tointer": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table . the date record of this unqiue row is 19 june 2005 ."}, "logic_str": "and { only { filter_eq { all_rows ; surface ; grass } } ; eq { hop { filter_eq { all_rows ; surface ; grass } ; date } ; 19 june 2005 } } = true", "interpret": "select the rows whose surface record fuzzily matches to grass . there is only one such row in the table . the date record of this unqiue row is 19 june 2005 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "surface_7": 7, "grass_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "19 june 2005_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "surface_7": "surface", "grass_8": "grass", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "19 june 2005_10": "19 june 2005"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "surface_7": [0], "grass_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "19 june 2005_10": [3]}, "table_header": ["date", "tournament", "surface", "partner", "opponents in final", "score"], "table_cont": [["26 august 2001", "long island , usa", "hard", "radek \u0161t\u011bp\u00e1nek", "jonathan stark kevin ullyett", "1 - 6 , 4 - 6"], ["29 september 2002", "palermo , italy", "clay", "franti\u0161ek \u010derm\u00e1k", "lucas arnold ker luis lobo", "4 - 6 , 6 - 4 , 2 - 6"], ["5 january 2003", "chennai , india", "hard", "franti\u0161ek \u010derm\u00e1k", "julian knowle michael kohlmann", "6 - 7 ( 1 - 7 ) , 6 - 7 ( 3 - 7 )"], ["11 january 2003", "auckland , new zealand", "hard", "tom\u00e1\u0161 cibulec", "david adams robbie koenig", "6 - 7 , 6 - 3 , 3 - 6"], ["16 february 2003", "vi\u00f1a del mar , chile", "clay", "franti\u0161ek \u010derm\u00e1k", "agust\u00edn calleri mariano hood", "3 - 6 , 6 - 1 , 4 - 6"], ["13 july 2003", "gstaad , switzerland", "clay", "franti\u0161ek \u010derm\u00e1k", "leander paes david rikl", "3 - 6 , 3 - 6"], ["3 august 2003", "sopot , poland", "clay", "franti\u0161ek \u010derm\u00e1k", "mariusz fyrstenberg marcin matkowski", "4 - 6 , 7 - 6 ( 9 - 7 ) , 3 - 6"], ["28 september 2003", "palermo , italy", "clay", "franti\u0161ek \u010derm\u00e1k", "lucas arnold ker mariano hood", "6 - 7 ( 6 - 8 ) , 7 - 6 ( 7 - 3 ) , 4 - 6"], ["28 february 2004", "costa do sauipe , brasil", "clay", "tomas behrend", "mariusz fyrstenberg marcin matkowski", "2 - 6 , 2 - 6"], ["18 april 2004", "estoril , portugal", "clay", "franti\u0161ek \u010derm\u00e1k", "juan ignacio chela gast\u00f3n gaudio", "2 - 6 , 1 - 6"], ["23 may 2004", "st p\u00f6lten , austria", "clay", "tom\u00e1\u0161 cibulec", "mariano hood petr p\u00e1la", "6 - 3 , 5 - 7 , 4 - 6"], ["19 june 2005", "'s - hertogenbosch , netherlands", "grass", "tom\u00e1\u0161 cibulec", "cyril suk pavel v\u00edzner", "3 - 6 , 4 - 6"], ["15 january 2006", "sydney , australia", "hard", "franti\u0161ek \u010derm\u00e1k", "fabrice santoro nenad zimonji\u0107", "1 - 6 , 4 - 6"], ["5 february 2006", "vi\u00f1a del mar , chile", "clay", "franti\u0161ek \u010derm\u00e1k", "jos\u00e9 acasuso sebasti\u00e1n prieto", "6 - 7 ( 2 - 7 ) , 4 - 6"], ["7 may 2006", "estoril , portugal", "clay", "lucas arnold ker", "luk\u00e1\u0161 dlouh\u00fd pavel v\u00edzner", "3 - 6 , 1 - 6"], ["20 may 2007", "p\u00f6rtschach , austria", "clay", "david \u0161koch", "simon aspelin julian knowle", "6 - 7 ( 6 - 8 ) , 7 - 5 ,"]], "query": "and { only { filter_eq { all_rows ; surface ; grass } } ; eq { hop { filter_eq { all_rows ; surface ; grass } ; date } ; 19 june 2005 } } = true", "question": "the tournament on 19 june 2005 was the only tournament to take place on a grass surface ."}, {"topic": "ar - 15 variants", "wiki": "https://en.wikipedia.org/wiki/AR-15_variants", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12834315-8.html.csv", "action": "majority", "sent": "most of the variants of the ar-15 rifle have an included bayonet lug .", "annotation": {"scope": "all", "col": "11", "most_or_all": "most", "criterion": "fuzzily_match", "value": "yes", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "bayonet lug", "yes"], "result": true, "ind": 0, "tointer": "for the bayonet lug records of all rows , most of them fuzzily match to yes .", "tostr": "most_eq { all_rows ; bayonet lug ; yes } = true"}, "logic_str": "most_eq { all_rows ; bayonet lug ; yes } = true", "interpret": "for the bayonet lug records of all rows , most of them fuzzily match to yes .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "bayonet lug_3": 3, "yes_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "bayonet lug_3": "bayonet lug", "yes_4": "yes"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "bayonet lug_3": [0], "yes_4": [0]}, "table_header": ["colt model no", "diemaco model", "stock", "fire control", "rear sight", "forward assist", "barrel length", "barrel profile", "barrel twist", "hand guards", "bayonet lug", "muzzle device"], "table_cont": [["715", "c7", "a2", "s - 1 - f", "a1", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["n / a", "c7ft", "a2", "s - 1 - f", "weaver", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["n / a", "c7a2", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["750", "colt / diemaco lmg / lsw", "a2", "s - f", "a2", "yes", "20 in", "hbar", "1:7", "square lmg", "no", "a2"], ["n / a", "lsw", "a2", "s - f", "weaver", "yes", "20 in", "hbar", "1:7", "square lmg", "no", "a2"], ["725", "c8", "3rd generation", "s - 1 - f", "a1", "yes", "14.5 in", "a1", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8ft", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "14.5 in", "a1", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8fthb", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "14.5 in", "a2", "1:7", "short ribbed", "yes", "a2"], ["n / a", "sfw", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "16 in", "sfw", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8cqb", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "10 in", "a2", "1:7", "short ribbed", "yes", "a2"]], "query": "most_eq { all_rows ; bayonet lug ; yes } = true", "question": "most of the variants of the ar-15 rifle have an included bayonet lug ."}, {"topic": "lark rise to candleford ( tv series )", "wiki": "https://en.wikipedia.org/wiki/Lark_Rise_to_Candleford_%28TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-15026994-3.html.csv", "action": "comparative", "sent": "the episode 5 of the second season of the tv series lark rise to candleford had higher viewing figure compared to episode 7 .", "annotation": {"row_1": "5", "row_2": "7", "col": "6", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "episode", "episode 5"], "result": null, "ind": 0, "tointer": "select the rows whose episode record fuzzily matches to episode 5 .", "tostr": "filter_eq { all_rows ; episode ; episode 5 }"}, "viewing figure"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; episode ; episode 5 } ; viewing figure }", "tointer": "select the rows whose episode record fuzzily matches to episode 5 . take the viewing figure record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "episode", "episode 7"], "result": null, "ind": 1, "tointer": "select the rows whose episode record fuzzily matches to episode 7 .", "tostr": "filter_eq { all_rows ; episode ; episode 7 }"}, "viewing figure"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; episode ; episode 7 } ; viewing figure }", "tointer": "select the rows whose episode record fuzzily matches to episode 7 . take the viewing figure record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; episode ; episode 5 } ; viewing figure } ; hop { filter_eq { all_rows ; episode ; episode 7 } ; viewing figure } } = true", "tointer": "select the rows whose episode record fuzzily matches to episode 5 . take the viewing figure record of this row . select the rows whose episode record fuzzily matches to episode 7 . take the viewing figure record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; episode ; episode 5 } ; viewing figure } ; hop { filter_eq { all_rows ; episode ; episode 7 } ; viewing figure } } = true", "interpret": "select the rows whose episode record fuzzily matches to episode 5 . take the viewing figure record of this row . select the rows whose episode record fuzzily matches to episode 7 . take the viewing figure record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "episode_7": 7, "episode 5_8": 8, "viewing figure_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "episode_11": 11, "episode 7_12": 12, "viewing figure_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "episode_7": "episode", "episode 5_8": "episode 5", "viewing figure_9": "viewing figure", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "episode_11": "episode", "episode 7_12": "episode 7", "viewing figure_13": "viewing figure"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "episode_7": [0], "episode 5_8": [0], "viewing figure_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "episode_11": [1], "episode 7_12": [1], "viewing figure_13": [3]}, "table_header": ["", "episode", "writer", "director", "original air date", "viewing figure"], "table_cont": [["11", "episode 1 ( 75 - minute christmas special )", "bill gallagher", "alan grint", "21 december 2008", "6.58 million"], ["12", "episode 2", "bill gallagher", "alan grint", "4 january 2009", "6.53 million"], ["13", "episode 3", "bill gallagher", "alan grint", "11 january 2009", "6.13 million"], ["14", "episode 4", "carolyn bonnyman", "maurice phillips", "18 january 2009", "6.49 million"], ["15", "episode 5", "bill gallagher", "julian holmes", "25 january 2009", "6.31 million"], ["16", "episode 6", "gaby chiappe", "moira armstrong", "1 february 2009", "6.54 million"], ["17", "episode 7", "gaby chiappe", "sue tully", "8 february 2009", "6.14 million"], ["18", "episode 8", "kate gartside", "alan grint", "15 february 2009", "6.20 million"], ["19", "episode 9", "kate gartside", "david tucker", "22 february 2009", "6.32 million"], ["20", "episode 10", "carolyn bonnyman", "patrick lau", "1 march 2009", "6.34 million"], ["21", "episode 11", "gaby chiappe", "paul marcus", "8 march 2009", "6.78 million"]], "query": "greater { hop { filter_eq { all_rows ; episode ; episode 5 } ; viewing figure } ; hop { filter_eq { all_rows ; episode ; episode 7 } ; viewing figure } } = true", "question": "the episode 5 of the second season of the tv series lark rise to candleford had higher viewing figure compared to episode 7 ."}, {"topic": "the universal masters collection ( grace jones album )", "wiki": "https://en.wikipedia.org/wiki/The_Universal_Masters_Collection_%28Grace_Jones_album%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11947078-2.html.csv", "action": "majority", "sent": "the universal masters collection of grace jones had a majority re-released on cd .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "cd", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "format ( s )", "cd"], "result": true, "ind": 0, "tointer": "for the format ( s ) records of all rows , most of them fuzzily match to cd .", "tostr": "most_eq { all_rows ; format ( s ) ; cd } = true"}, "logic_str": "most_eq { all_rows ; format ( s ) ; cd } = true", "interpret": "for the format ( s ) records of all rows , most of them fuzzily match to cd .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "format (s)_3": 3, "cd_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "format (s)_3": "format ( s )", "cd_4": "cd"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "format (s)_3": [0], "cd_4": [0]}, "table_header": ["region", "year", "name", "format ( s )", "label"], "table_cont": [["worldwide", "2003", "the universal masters collection", "cd", "universal"], ["japan", "2005", "best 1200", "cd", "universal"], ["worldwide", "2006", "colour collection", "cd", "universal"], ["germany", "2008", "star - club pr\u00e3 \u00a4 sentiert grace jones", "cd", "universal"], ["worldwide", "2008", "classic grace jones", "cd , download", "universal , spectrum"]], "query": "most_eq { all_rows ; format ( s ) ; cd } = true", "question": "the universal masters collection of grace jones had a majority re-released on cd ."}, {"topic": "1991 - 92 manchester united f.c. season", "wiki": "https://en.wikipedia.org/wiki/1991%E2%80%9392_Manchester_United_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17577144-1.html.csv", "action": "ordinal", "sent": "the 3rd game of the 1991-1992 season for manchester united was against viking .", "annotation": {"row": "3", "col": "1", "order": "3", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; date ; 3 }"}, "opponents"], "result": "viking", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; date ; 3 } ; opponents }"}, "viking"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 3 } ; opponents } ; viking } = true", "tointer": "select the row whose date record of all rows is 3rd minimum . the opponents record of this row is viking ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; date ; 3 } ; opponents } ; viking } = true", "interpret": "select the row whose date record of all rows is 3rd minimum . the opponents record of this row is viking .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "date_5": 5, "3_6": 6, "opponents_7": 7, "viking_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "date_5": "date", "3_6": "3", "opponents_7": "opponents", "viking_8": "viking"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "date_5": [0], "3_6": [0], "opponents_7": [1], "viking_8": [2]}, "table_header": ["date", "opponents", "h / a", "result f - a", "scorers"], "table_cont": [["24 july 1991", "mazda", "h", "1 - 2", "ferguson"], ["29 july 1991", "str\u00f8msgodset", "a", "3 - 1", "ince , beardsmore , wallace"], ["30 july 1991", "viking", "a", "1 - 0", "robins"], ["1 august 1991", "molde", "a", "3 - 1", "blackmore , hughes ( 2 )"], ["4 august 1991", "dumbarton", "a", "5 - 0", "robins ( 2 ) , hughes ( 2 ) , mcclair"], ["5 august 1991", "aberdeen", "a", "1 - 1 ( 4 - 3 p )", "hughes"], ["7 august 1991", "austria memphis", "a", "1 - 5", "mcclair"], ["11 august 1991", "republic of ireland xi", "h", "1 - 1", "robson"], ["3 may 1992", "everton", "h", "2 - 4", "ince , hughes"], ["8 may 1992", "manchester city", "a", "2 - 1", "bruce ( pen ) , toal"]], "query": "eq { hop { nth_argmin { all_rows ; date ; 3 } ; opponents } ; viking } = true", "question": "the 3rd game of the 1991-1992 season for manchester united was against viking ."}, {"topic": "list of computer system emulators", "wiki": "https://en.wikipedia.org/wiki/List_of_computer_system_emulators", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11561331-17.html.csv", "action": "majority", "sent": "most atari emulators are made to work on the windows platform .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "fuzzily_match", "value": "windows", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "platform", "windows"], "result": true, "ind": 0, "tointer": "for the platform records of all rows , most of them fuzzily match to windows .", "tostr": "most_eq { all_rows ; platform ; windows } = true"}, "logic_str": "most_eq { all_rows ; platform ; windows } = true", "interpret": "for the platform records of all rows , most of them fuzzily match to windows .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "platform_3": 3, "windows_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "platform_3": "platform", "windows_4": "windows"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "platform_3": [0], "windows_4": [0]}, "table_header": ["name", "actual version", "system", "platform", "license"], "table_cont": [["steem", "3.2", "atari st e", "windows , linux", "freeware"], ["saint", "2.20", "atari st / ste", "windows", "freeware"], ["gemulator", "9.0", "atari st", "windows", "commercial ( free )"], ["hatari", "1.6.2", "atari st / ste , atari tt , atari falcon", "cross - platform", "gpl"], ["pacifist", "0.49 b", "atari st", "dos , windows", "giftware"], ["stonx", "0.6.7.6", "atari st", "unix , dos , windows", "gpl"], ["winston", "0.1 r2", "atari st", "windows", "freeware"], ["aranym", "0.9.13", "atari st , atari tt , atari falcon", "cross - platform", "gpl"], ["mess", "0.147", "various computers and consoles", "cross - platform", "custom"], ["estyjs", "n / a", "atari st", "cross - platform", "-"]], "query": "most_eq { all_rows ; platform ; windows } = true", "question": "most atari emulators are made to work on the windows platform ."}, {"topic": "b\u00f6rje jansson", "wiki": "https://en.wikipedia.org/wiki/B%C3%B6rje_Jansson", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15161245-2.html.csv", "action": "aggregation", "sent": "borje jansson had a total of 4 career wins .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "4", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "wins"], "result": "4", "ind": 0, "tostr": "sum { all_rows ; wins }"}, "4"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; wins } ; 4 } = true", "tointer": "the sum of the wins record of all rows is 4 ."}, "logic_str": "round_eq { sum { all_rows ; wins } ; 4 } = true", "interpret": "the sum of the wins record of all rows is 4 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "wins_4": 4, "4_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "wins_4": "wins", "4_5": "4"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "wins_4": [0], "4_5": [1]}, "table_header": ["year", "class", "team", "points", "rank", "wins"], "table_cont": [["1969", "125cc", "maico", "4", "40th", "0"], ["1969", "250cc", "yamaha", "45", "5th", "0"], ["1970", "125cc", "maico", "62", "3rd", "0"], ["1970", "250cc", "yamaha", "34", "5th", "0"], ["1971", "125cc", "maico", "64", "3rd", "0"], ["1971", "250cc", "yamaha", "9", "21st", "0"], ["1972", "50cc", "jamathi", "10", "12th", "0"], ["1972", "125cc", "maico", "78", "4th", "2"], ["1972", "250cc", "yamaha", "36", "8th", "1"], ["1973", "125cc", "maico", "64", "4th", "1"], ["1973", "250cc", "yamaha", "12", "18th", "0"]], "query": "round_eq { sum { all_rows ; wins } ; 4 } = true", "question": "borje jansson had a total of 4 career wins ."}, {"topic": "finnish people 's democratic league", "wiki": "https://en.wikipedia.org/wiki/Finnish_People%27s_Democratic_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1517649-5.html.csv", "action": "superlative", "sent": "the finnish people 's democratic league got the most votes in the year 1962 .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "votes"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; votes }"}, "year"], "result": "1962", "ind": 1, "tostr": "hop { argmax { all_rows ; votes } ; year }"}, "1962"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; votes } ; year } ; 1962 } = true", "tointer": "select the row whose votes record of all rows is maximum . the year record of this row is 1962 ."}, "logic_str": "eq { hop { argmax { all_rows ; votes } ; year } ; 1962 } = true", "interpret": "select the row whose votes record of all rows is maximum . the year record of this row is 1962 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "votes_5": 5, "year_6": 6, "1962_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "votes_5": "votes", "year_6": "year", "1962_7": "1962"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "votes_5": [0], "year_6": [1], "1962_7": [2]}, "table_header": ["year", "electors", "votes", "share of votes", "candidate"], "table_cont": [["1950", "67", "338 035", "21 , 4 %", "mauno pekkala"], ["1956", "56", "354 575", "18 , 7 %", "eino kilpi"], ["1962", "63", "451 750", "20 , 5 %", "paavo aitio"], ["1968", "56", "345 609", "17 , 0 %", "seconded urho kekkonen of centre"], ["1978", "56", "445 098", "18 , 2 %", "seconded urho kekkonen of centre"], ["1982", "32", "348 359", "11 , 0 %", "kalevi kivist\u00f6"], ["1988", "26", "330 072 286 833", "10 , 7 % 9 , 6 %", "kalevi kivist\u00f6 liike 88"]], "query": "eq { hop { argmax { all_rows ; votes } ; year } ; 1962 } = true", "question": "the finnish people 's democratic league got the most votes in the year 1962 ."}, {"topic": "1933 vfl season", "wiki": "https://en.wikipedia.org/wiki/1933_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790397-7.html.csv", "action": "majority", "sent": "most of the matches in the 1933 vfl season had a crowd of at least 10000 .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than_eq", "value": "10000", "subset": null}, "logic": {"func": "most_greater_eq", "args": ["all_rows", "crowd", "10000"], "result": true, "ind": 0, "tointer": "for the crowd records of all rows , most of them are greater than or equal to 10000 .", "tostr": "most_greater_eq { all_rows ; crowd ; 10000 } = true"}, "logic_str": "most_greater_eq { all_rows ; crowd ; 10000 } = true", "interpret": "for the crowd records of all rows , most of them are greater than or equal to 10000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_eq_0": 0, "result_1": 1, "all_rows_2": 2, "crowd_3": 3, "10000_4": 4}, "g_ids_features": {"most_greater_eq_0": "most_greater_eq", "result_1": "true", "all_rows_2": "all_rows", "crowd_3": "crowd", "10000_4": "10000"}, "g_adj": {"most_greater_eq_0": [1], "result_1": [], "all_rows_2": [0], "crowd_3": [0], "10000_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "17.14 ( 116 )", "south melbourne", "13.15 ( 93 )", "corio oval", "14000", "10 june 1933"], ["fitzroy", "8.17 ( 65 )", "richmond", "10.13 ( 73 )", "brunswick street oval", "29500", "10 june 1933"], ["essendon", "15.6 ( 96 )", "hawthorn", "16.9 ( 105 )", "windy hill", "9000", "10 june 1933"], ["north melbourne", "11.12 ( 78 )", "footscray", "8.14 ( 62 )", "arden street oval", "20000", "10 june 1933"], ["melbourne", "13.19 ( 97 )", "collingwood", "18.18 ( 126 )", "mcg", "18020", "10 june 1933"], ["st kilda", "10.5 ( 65 )", "carlton", "20.10 ( 130 )", "junction oval", "21000", "10 june 1933"]], "query": "most_greater_eq { all_rows ; crowd ; 10000 } = true", "question": "most of the matches in the 1933 vfl season had a crowd of at least 10000 ."}, {"topic": "2008 - 09 denver nuggets season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Denver_Nuggets_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17355408-5.html.csv", "action": "superlative", "sent": "the denver nuggets ' highest score in december 2008 was 132 .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "1", "value_mentioned": "yes", "max_or_min": "max", "other_col": "n/a", "subset": null}, "logic": {"func": "eq", "args": [{"func": "max", "args": ["all_rows", "score"], "result": "w 132 - 93 ( ot )", "ind": 0, "tostr": "max { all_rows ; score }", "tointer": "the maximum score record of all rows is w 132 - 93 ( ot ) ."}, "w 132 - 93 ( ot )"], "result": true, "ind": 1, "tostr": "eq { max { all_rows ; score } ; w 132 - 93 ( ot ) } = true", "tointer": "the maximum score record of all rows is w 132 - 93 ( ot ) ."}, "logic_str": "eq { max { all_rows ; score } ; w 132 - 93 ( ot ) } = true", "interpret": "the maximum score record of all rows is w 132 - 93 ( ot ) .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "max_0": 0, "all_rows_3": 3, "score_4": 4, "w 132 - 93 (ot)_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "max_0": "max", "all_rows_3": "all_rows", "score_4": "score", "w 132 - 93 (ot)_5": "w 132 - 93 ( ot )"}, "g_adj": {"eq_1": [2], "result_2": [], "max_0": [1], "all_rows_3": [0], "score_4": [0], "w 132 - 93 (ot)_5": [1]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["19", "december 2", "toronto", "w 132 - 93 ( ot )", "chauncey billups ( 24 )", "nen\u00ea ( 11 )", "chauncey billups ( 14 )", "pepsi center 14243", "13 - 6"], ["20", "december 4", "san antonio", "l 91 - 108 ( ot )", "carmelo anthony ( 16 )", "j r smith ( 10 )", "j r smith , chauncey billups ( 4 )", "pepsi center 15866", "13 - 7"], ["21", "december 6", "sacramento", "w 118 - 85 ( ot )", "chauncey billups ( 24 )", "nen\u00ea , carmelo anthony ( 7 )", "chauncey billups ( 4 )", "arco arena 12322", "14 - 7"], ["22", "december 10", "minnesota", "w 116 - 105 ( ot )", "carmelo anthony ( 45 )", "carmelo anthony ( 11 )", "chauncey billups ( 6 )", "pepsi center 14007", "15 - 7"], ["23", "december 13", "golden state", "w 123 - 105 ( ot )", "carmelo anthony ( 27 )", "carmelo anthony ( 9 )", "chauncey billups ( 11 )", "pepsi center 15322", "16 - 7"], ["24", "december 15", "dallas", "w 98 - 88 ( ot )", "j r smith ( 25 )", "kenyon martin ( 10 )", "chauncey billups ( 8 )", "american airlines center 19969", "17 - 7"], ["25", "december 16", "houston", "l 96 - 108 ( ot )", "carmelo anthony ( 22 )", "kenyon martin ( 8 )", "chauncey billups ( 6 )", "toyota center 17737", "17 - 8"], ["26", "december 19", "cleveland", "l 88 - 105 ( ot )", "chauncey billups ( 16 )", "chris andersen ( 10 )", "anthony carter , j r smith ( 4 )", "pepsi center 19155", "17 - 9"], ["27", "december 20", "phoenix", "l 101 - 108 ( ot )", "j r smith ( 23 )", "nen\u00ea ( 15 )", "chauncey billups ( 8 )", "us airways center 18422", "17 - 10"], ["28", "december 22", "portland", "w 97 - 89 ( ot )", "chauncey billups , nen\u00ea ( 19 )", "kenyon martin ( 12 )", "chauncey billups ( 10 )", "pepsi center 18611", "18 - 10"], ["29", "december 23", "portland", "l 92 - 101 ( ot )", "linas kleiza ( 20 )", "nen\u00ea ( 13 )", "chucky atkins ( 4 )", "rose garden 20007", "18 - 11"], ["30", "december 26", "philadelphia", "w 105 - 101 ( ot )", "j r smith ( 27 )", "nen\u00ea ( 12 )", "chauncey billups ( 10 )", "pepsi center 19155", "19 - 11"], ["31", "december 28", "new york", "w 117 - 110 ( ot )", "carmelo anthony ( 32 )", "carmelo anthony , nen\u00ea ( 9 )", "chauncey billups ( 5 )", "madison square garden 19763", "20 - 11"], ["32", "december 29", "atlanta", "l 91 - 109 ( ot )", "kenyon martin ( 19 )", "chris andersen ( 6 )", "anthony carter ( 7 )", "philips arena 17131", "20 - 12"]], "query": "eq { max { all_rows ; score } ; w 132 - 93 ( ot ) } = true", "question": "the denver nuggets ' highest score in december 2008 was 132 ."}, {"topic": "1963 new york giants season", "wiki": "https://en.wikipedia.org/wiki/1963_New_York_Giants_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16660997-15.html.csv", "action": "majority", "sent": "during the 1963 new york giants season , the new york giants won most of their games .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "fuzzily_match", "value": "w", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "w"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to w .", "tostr": "most_eq { all_rows ; result ; w } = true"}, "logic_str": "most_eq { all_rows ; result ; w } = true", "interpret": "for the result records of all rows , most of them fuzzily match to w .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "w_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "w_4": "w"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "w_4": [0]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 15 , 1963", "baltimore colts", "w 37 - 28", "60029"], ["2", "september 22 , 1963", "pittsburgh steelers", "l 31 - 0", "46068"], ["3", "september 29 , 1963", "philadelphia eagles", "w 37 - 14", "60671"], ["4", "october 6 , 1963", "washington redskins", "w 24 - 14", "49419"], ["5", "october 13 , 1963", "cleveland browns", "l 35 - 24", "62956"], ["6", "october 20 , 1963", "dallas cowboys", "w 37 - 21", "62889"], ["7", "october 27 , 1963", "cleveland browns", "w 33 - 6", "84213"], ["8", "november 3 , 1963", "st louis cardinals", "w 38 - 21", "29482"], ["9", "november 10 , 1963", "philadelphia eagles", "w 42 - 14", "62936"], ["10", "november 17 , 1963", "san francisco 49ers", "w 48 - 14", "62982"], ["11", "november 24 , 1963", "st louis cardinals", "l 24 - 17", "62992"], ["12", "december 1 , 1963", "dallas cowboys", "w 34 - 27", "29653"], ["13", "december 8 , 1963", "washington redskins", "w 44 - 14", "62992"], ["14", "december 15 , 1963", "pittsburgh steelers", "w 33 - 17", "63240"]], "query": "most_eq { all_rows ; result ; w } = true", "question": "during the 1963 new york giants season , the new york giants won most of their games ."}, {"topic": "list of intel atom microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_Intel_Atom_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16729930-11.html.csv", "action": "majority", "sent": "all of the intel atom microprocessors are made with an l2 cache of 512 kb .", "annotation": {"scope": "all", "col": "4", "most_or_all": "all", "criterion": "equal", "value": "512 kb", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "l2 cache", "512 kb"], "result": true, "ind": 0, "tointer": "for the l2 cache records of all rows , all of them fuzzily match to 512 kb .", "tostr": "all_eq { all_rows ; l2 cache ; 512 kb } = true"}, "logic_str": "all_eq { all_rows ; l2 cache ; 512 kb } = true", "interpret": "for the l2 cache records of all rows , all of them fuzzily match to 512 kb .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "l2 cache_3": 3, "512 kb_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "l2 cache_3": "l2 cache", "512 kb_4": "512 kb"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "l2 cache_3": [0], "512 kb_4": [0]}, "table_header": ["model number", "sspec number", "frequency", "l2 cache", "fsb", "mult", "voltage", "tdp", "socket", "release date", "part number ( s )", "release price ( usd )"], "table_cont": [["atom z500", "slb6q ( c0 )", "800 mhz", "512 kb", "400 mt / s", "8", "0.712 - 1.1 v", "0.65 w", "bga 441", "april 2 , 2008", "ac80566uc800de", "45"], ["atom z510", "slb2c ( c0 )", "1.1 ghz", "512 kb", "400 mt / s", "11", "0.75 - 1.1 v", "2 w", "bga 441", "april 2 , 2008", "ac80566uc005de", "45"], ["atom z510p", "slgpq ( c0 )", "1.1 ghz", "512 kb", "400 mt / s", "11", "0.8 - 1.1 v", "2.2 w", "bga 437", "march 2 , 2009", "ch80566ec005dw", "n / a"], ["atom z510pt", "slgpr ( c0 )", "1.1 ghz", "512 kb", "400 mt / s", "11", "0.75 - 1.1 v", "2.2 w", "bga 437", "march 2 , 2009", "ch80566ec005dt", "n / a"], ["atom z515", "slgmg ( c0 )", "1.2 ghz", "512 kb", "400 mt / s", "12", "0.712 - 1v", "1.4 w", "bga 441", "april 8 , 2009", "ac80566uc009dv", "n / a"], ["atom z520", "slb2h ( c0 )", "1.33 ghz", "512 kb", "533 mt / s", "10", "0.75 - 1.1 v", "2 w", "bga 441", "april 2 , 2008", "ac80566ue014dw", "65"], ["atom z520pt", "slgpp ( c0 )", "1.33 ghz", "512 kb", "533 mt / s", "10", "0.9 - 1.1 v", "2.2 w", "bga 437", "march 2 , 2009", "ch80566ee014dt", "n / a"], ["atom z530", "slb6p ( c0 )", "1.6 ghz", "512 kb", "533 mt / s", "12", "0.75 - 1.1 v", "2 w", "bga 441", "april 2 , 2008", "ac80566ue025dw", "95"], ["atom z530p", "slgpn ( c0 )", "1.6 ghz", "512 kb", "533 mt / s", "12", "0.8 - 1.1 v", "2.2 w", "bga 437", "march 2 , 2009", "ch80566ee025dw", "n / a"], ["atom z540", "slb2 m ( c0 )", "1.87 ghz", "512 kb", "533 mt / s", "14", "0.75 - 1.1 v", "2.4 w", "bga 441", "april 2 , 2008", "ac80566ue036dw", "160"], ["atom z550", "slgpt ( c0 )", "2 ghz", "512 kb", "533 mt / s", "15", "0.75 - 1.1 v", "2.4 w", "bga 441", "april 8 , 2009", "ac80566ue041dw", "249.47 retail"]], "query": "all_eq { all_rows ; l2 cache ; 512 kb } = true", "question": "all of the intel atom microprocessors are made with an l2 cache of 512 kb ."}, {"topic": "yuki takahashi", "wiki": "https://en.wikipedia.org/wiki/Yuki_Takahashi", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15590360-2.html.csv", "action": "comparative", "sent": "the 250 cc class had more races than the moto 2 class in yuki takahashi .", "annotation": {"row_1": "2", "row_2": "4", "col": "3", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "class", "250 cc"], "result": null, "ind": 0, "tointer": "select the rows whose class record fuzzily matches to 250 cc .", "tostr": "filter_eq { all_rows ; class ; 250 cc }"}, "race"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; class ; 250 cc } ; race }", "tointer": "select the rows whose class record fuzzily matches to 250 cc . take the race record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "class", "moto2"], "result": null, "ind": 1, "tointer": "select the rows whose class record fuzzily matches to moto2 .", "tostr": "filter_eq { all_rows ; class ; moto2 }"}, "race"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; class ; moto2 } ; race }", "tointer": "select the rows whose class record fuzzily matches to moto2 . take the race record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; class ; 250 cc } ; race } ; hop { filter_eq { all_rows ; class ; moto2 } ; race } } = true", "tointer": "select the rows whose class record fuzzily matches to 250 cc . take the race record of this row . select the rows whose class record fuzzily matches to moto2 . take the race record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; class ; 250 cc } ; race } ; hop { filter_eq { all_rows ; class ; moto2 } ; race } } = true", "interpret": "select the rows whose class record fuzzily matches to 250 cc . take the race record of this row . select the rows whose class record fuzzily matches to moto2 . take the race record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "class_7": 7, "250 cc_8": 8, "race_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "class_11": 11, "moto2_12": 12, "race_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "class_7": "class", "250 cc_8": "250 cc", "race_9": "race", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "class_11": "class", "moto2_12": "moto2", "race_13": "race"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "class_7": [0], "250 cc_8": [0], "race_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "class_11": [1], "moto2_12": [1], "race_13": [3]}, "table_header": ["class", "season", "race", "podiums", "pole"], "table_cont": [["125 cc", "2001", "1", "0", "0"], ["250 cc", "2002 - 2008", "65", "7", "0"], ["motogp", "2009", "7", "0", "0"], ["moto2", "2010 -", "62", "4", "0"], ["total", "2002 - present", "135", "11", "0"]], "query": "greater { hop { filter_eq { all_rows ; class ; 250 cc } ; race } ; hop { filter_eq { all_rows ; class ; moto2 } ; race } } = true", "question": "the 250 cc class had more races than the moto 2 class in yuki takahashi ."}, {"topic": "2002 - 03 cleveland cavaliers season", "wiki": "https://en.wikipedia.org/wiki/2002%E2%80%9303_Cleveland_Cavaliers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16140345-7.html.csv", "action": "majority", "sent": "most of the cavaliers ' games in february were played at home .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "cavaliers", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "home", "cavaliers"], "result": true, "ind": 0, "tointer": "for the home records of all rows , most of them fuzzily match to cavaliers .", "tostr": "most_eq { all_rows ; home ; cavaliers } = true"}, "logic_str": "most_eq { all_rows ; home ; cavaliers } = true", "interpret": "for the home records of all rows , most of them fuzzily match to cavaliers .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "home_3": 3, "cavaliers_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "home_3": "home", "cavaliers_4": "cavaliers"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "home_3": [0], "cavaliers_4": [0]}, "table_header": ["date", "visitor", "score", "home", "leading scorer", "record"], "table_cont": [["2 february 2003", "trail blazers", "114 - 95", "cavaliers", "zydrunas ilgauskas ( 20 )", "9 - 39"], ["4 february 2003", "cavaliers", "84 - 93", "wizards", "dajuan wagner ( 19 )", "9 - 40"], ["5 february 2003", "rockets", "102 - 105", "cavaliers", "ricky davis ( 21 )", "10 - 40"], ["11 february 2003", "cavaliers", "96 - 107", "pacers", "jumaine jones ( 25 )", "10 - 41"], ["12 february 2003", "timberwolves", "102 - 91", "cavaliers", "ricky davis ( 26 )", "10 - 42"], ["16 february 2003", "pistons", "90 - 75", "cavaliers", "ricky davis ( 19 )", "10 - 43"], ["18 february 2003", "bulls", "107 - 101", "cavaliers", "carlos boozer ( 23 )", "10 - 44"], ["21 february 2003", "sixers", "119 - 99", "cavaliers", "zydrunas ilgauskas ( 19 )", "10 - 45"], ["23 february 2003", "cavaliers", "103 - 116", "sixers", "dajuan wagner ( 23 )", "10 - 46"], ["25 february 2003", "nets", "90 - 93", "cavaliers", "zydrunas ilgauskas ( 29 )", "11 - 46"], ["28 february 2003", "cavaliers", "95 - 118", "timberwolves", "two - way tie ( 16 )", "11 - 47"]], "query": "most_eq { all_rows ; home ; cavaliers } = true", "question": "most of the cavaliers ' games in february were played at home ."}, {"topic": "abebech negussie", "wiki": "https://en.wikipedia.org/wiki/Abebech_Negussie", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10067496-1.html.csv", "action": "aggregation", "sent": "abebech negussie placed an average of 2.2 in the international races that he competed in from 2000-2002 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "2.2", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "result"], "result": "2.2", "ind": 0, "tostr": "avg { all_rows ; result }"}, "2.2"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; result } ; 2.2 } = true", "tointer": "the average of the result record of all rows is 2.2 ."}, "logic_str": "round_eq { avg { all_rows ; result } ; 2.2 } = true", "interpret": "the average of the result record of all rows is 2.2 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "result_4": 4, "2.2_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "result_4": "result", "2.2_5": "2.2"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "result_4": [0], "2.2_5": [1]}, "table_header": ["year", "tournament", "venue", "result", "extra"], "table_cont": [["2000", "world junior championships", "santiago , chile", "1st", "1500 m"], ["2001", "world cross country championships", "ostend , belgium", "2nd", "junior race"], ["2001", "world cross country championships", "ostend , belgium", "1st", "junior team competition"], ["2002", "world cross country championships", "dublin , ireland", "6th", "short race"], ["2002", "world cross country championships", "dublin , ireland", "1st", "team competition"]], "query": "round_eq { avg { all_rows ; result } ; 2.2 } = true", "question": "abebech negussie placed an average of 2.2 in the international races that he competed in from 2000-2002 ."}, {"topic": "1978 vfl season", "wiki": "https://en.wikipedia.org/wiki/1978_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10887680-17.html.csv", "action": "majority", "sent": "all games of the 1978 vfl season was played on the 29th of july .", "annotation": {"scope": "all", "col": "7", "most_or_all": "all", "criterion": "equal", "value": "29 july 1978", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "date", "29 july 1978"], "result": true, "ind": 0, "tointer": "for the date records of all rows , all of them fuzzily match to 29 july 1978 .", "tostr": "all_eq { all_rows ; date ; 29 july 1978 } = true"}, "logic_str": "all_eq { all_rows ; date ; 29 july 1978 } = true", "interpret": "for the date records of all rows , all of them fuzzily match to 29 july 1978 .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "29 july 1978_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "29 july 1978_4": "29 july 1978"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "29 july 1978_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "20.21 ( 141 )", "melbourne", "13.11 ( 89 )", "moorabbin oval", "13118", "29 july 1978"], ["north melbourne", "18.14 ( 122 )", "geelong", "10.16 ( 76 )", "arden street oval", "15775", "29 july 1978"], ["south melbourne", "15.15 ( 105 )", "footscray", "13.13 ( 91 )", "lake oval", "14112", "29 july 1978"], ["richmond", "20.16 ( 136 )", "essendon", "13.18 ( 96 )", "mcg", "41878", "29 july 1978"], ["hawthorn", "13.17 ( 95 )", "carlton", "18.11 ( 119 )", "princes park", "28132", "29 july 1978"], ["collingwood", "16.11 ( 107 )", "fitzroy", "11.11 ( 77 )", "vfl park", "32246", "29 july 1978"]], "query": "all_eq { all_rows ; date ; 29 july 1978 } = true", "question": "all games of the 1978 vfl season was played on the 29th of july ."}, {"topic": "2002 - 03 hong kong first division league", "wiki": "https://en.wikipedia.org/wiki/2002%E2%80%9303_Hong_Kong_First_Division_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10661351-1.html.csv", "action": "majority", "sent": "all teams played 14 games in the 2002 - 03 hong kong first division league .", "annotation": {"scope": "all", "col": "2", "most_or_all": "all", "criterion": "equal", "value": "14", "subset": null}, "logic": {"func": "all_eq", "args": ["all_rows", "game", "14"], "result": true, "ind": 0, "tointer": "for the game records of all rows , all of them are equal to 14 .", "tostr": "all_eq { all_rows ; game ; 14 } = true"}, "logic_str": "all_eq { all_rows ; game ; 14 } = true", "interpret": "for the game records of all rows , all of them are equal to 14 .", "num_func": 1, "nid": 1, "g_ids": {"all_eq_0": 0, "result_1": 1, "all_rows_2": 2, "game_3": 3, "14_4": 4}, "g_ids_features": {"all_eq_0": "all_eq", "result_1": "true", "all_rows_2": "all_rows", "game_3": "game", "14_4": "14"}, "g_adj": {"all_eq_0": [1], "result_1": [], "all_rows_2": [0], "game_3": [0], "14_4": [0]}, "table_header": ["team", "game", "draw", "loss", "goal gain", "goal loss", "goal diff", "point"], "table_cont": [["happy valley", "14", "4", "1", "42", "16", "26", "31"], ["sun hei", "14", "6", "0", "40", "18", "22", "30"], ["buler rangers", "14", "4", "3", "24", "16", "8", "25"], ["south china", "14", "3", "4", "28", "17", "11", "24"], ["xiangxue pharmaceutical", "14", "2", "7", "14", "19", "- 5", "17"], ["fukien", "14", "2", "8", "17", "33", "- 16", "14"], ["double flower ( r )", "14", "0", "11", "10", "33", "- 23", "9"], ["hong kong fc ( r )", "14", "1", "11", "15", "38", "- 23", "7"]], "query": "all_eq { all_rows ; game ; 14 } = true", "question": "all teams played 14 games in the 2002 - 03 hong kong first division league ."}, {"topic": "scandinavian family name etymology", "wiki": "https://en.wikipedia.org/wiki/Scandinavian_family_name_etymology", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16605179-1.html.csv", "action": "ordinal", "sent": "nielsen is the second most popular scandinavian surname in denmark , as of 2009 ( and as of 1971 ) .", "annotation": {"row": "2", "col": "4", "order": "2", "col_other": "2,3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "number of bearers 2009", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; number of bearers 2009 ; 2 }"}, "surname"], "result": "nielsen", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; surname }"}, "nielsen"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; surname } ; nielsen }", "tointer": "select the row whose number of bearers 2009 record of all rows is 2nd maximum . the surname record of this row is nielsen ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "number of bearers 2009", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; number of bearers 2009 ; 2 }"}, "number of bearers 1971"], "result": "349.126", "ind": 3, "tostr": "hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; number of bearers 1971 }"}, "349.126"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; number of bearers 1971 } ; 349.126 }", "tointer": "the number of bearers 1971 record of this row is 349.126 ."}], "result": true, "ind": 5, "tostr": "and { eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; surname } ; nielsen } ; eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; number of bearers 1971 } ; 349.126 } } = true", "tointer": "select the row whose number of bearers 2009 record of all rows is 2nd maximum . the surname record of this row is nielsen . the number of bearers 1971 record of this row is 349.126 ."}, "logic_str": "and { eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; surname } ; nielsen } ; eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; number of bearers 1971 } ; 349.126 } } = true", "interpret": "select the row whose number of bearers 2009 record of all rows is 2nd maximum . the surname record of this row is nielsen . the number of bearers 1971 record of this row is 349.126 .", "num_func": 7, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "str_eq_2": 2, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_7": 7, "number of bearers 2009_8": 8, "2_9": 9, "surname_10": 10, "nielsen_11": 11, "eq_4": 4, "num_hop_3": 3, "number of bearers 1971_12": 12, "349.126_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "str_eq_2": "str_eq", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_7": "all_rows", "number of bearers 2009_8": "number of bearers 2009", "2_9": "2", "surname_10": "surname", "nielsen_11": "nielsen", "eq_4": "eq", "num_hop_3": "num_hop", "number of bearers 1971_12": "number of bearers 1971", "349.126_13": "349.126"}, "g_adj": {"and_5": [6], "result_6": [], "str_eq_2": [5], "str_hop_1": [2], "nth_argmax_0": [1, 3], "all_rows_7": [0], "number of bearers 2009_8": [0], "2_9": [0], "surname_10": [1], "nielsen_11": [2], "eq_4": [5], "num_hop_3": [4], "number of bearers 1971_12": [3], "349.126_13": [4]}, "table_header": ["rank", "surname", "number of bearers 1971", "number of bearers 2009", "type", "etymology"], "table_cont": [["1", "jensen", "368.631", "278.782", "patronymic", "son of jens"], ["2", "nielsen", "349.126", "275.744", "patronymic", "son of niels"], ["3", "hansen", "297.937", "231.221", "patronymic", "son of hans"], ["4", "pedersen", "203.426", "173.639", "patronymic", "son of peder"], ["5", "andersen", "188.359", "165.871", "patronymic", "son of anders"], ["6", "christensen", "159.943", "125.192", "patronymic", "son of christen"], ["7", "larsen", "148.214", "122.712", "patronymic", "son of lars"], ["8", "s\u00f8rensen", "139.111", "117.300", "patronymic", "son of s\u00f8ren"], ["9", "rasmussen", "117.355", "99.238", "patronymic", "son of rasmus"], ["10", "j\u00f8rgensen", "110.132", "93.182", "patronymic", "son of j\u00f8rgen"], ["11", "petersen", "130.236", "85.268", "patronymic", "son of peter"], ["12", "madsen", "76.441", "67.075", "patronymic", "son of mads"], ["13", "kristensen", "58.990", "62.549", "patronymic", "son of kristen"], ["14", "olsen", "65.194", "50.904", "patronymic", "son of ole"], ["15", "thomsen", "40.180", "39.860", "patronymic", "son of thomas"], ["16", "christiansen", "45.984", "38.528", "patronymic", "son of christian"], ["17", "poulsen", "36.544", "33.106", "patronymic", "son of poul"], ["18", "johansen", "36.470", "32.166", "patronymic", "son of johan"], ["19", "knudsen", "34.660", "30.634", "patronymic", "son of knud"], ["20", "m\u00f8ller", "31.645", "30.516", "occupational", "miller"]], "query": "and { eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; surname } ; nielsen } ; eq { hop { nth_argmax { all_rows ; number of bearers 2009 ; 2 } ; number of bearers 1971 } ; 349.126 } } = true", "question": "nielsen is the second most popular scandinavian surname in denmark , as of 2009 ( and as of 1971 ) ."}, {"topic": "list of presidents of fifa", "wiki": "https://en.wikipedia.org/wiki/List_of_presidents_of_FIFA", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11052-1.html.csv", "action": "ordinal", "sent": "jules rimet was the second earliest fifa president to be born .", "annotation": {"row": "3", "col": "3", "order": "2", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date of birth", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; date of birth ; 2 }"}, "president"], "result": "jules rimet", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; date of birth ; 2 } ; president }"}, "jules rimet"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; date of birth ; 2 } ; president } ; jules rimet } = true", "tointer": "select the row whose date of birth record of all rows is 2nd minimum . the president record of this row is jules rimet ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; date of birth ; 2 } ; president } ; jules rimet } = true", "interpret": "select the row whose date of birth record of all rows is 2nd minimum . the president record of this row is jules rimet .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "date of birth_5": 5, "2_6": 6, "president_7": 7, "jules rimet_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "date of birth_5": "date of birth", "2_6": "2", "president_7": "president", "jules rimet_8": "jules rimet"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "date of birth_5": [0], "2_6": [0], "president_7": [1], "jules rimet_8": [2]}, "table_header": ["presidency", "president", "date of birth", "took office", "left office"], "table_cont": [["1", "robert gu\u00e9rin", "1876", "1904", "1906"], ["2", "daniel burley woolfall", "june 15 , 1852", "1906", "1918"], ["3", "jules rimet", "october 14 , 1873", "1921", "1954"], ["4", "rodolphe seeldrayers", "december 16 , 1876", "1954", "1955"], ["5", "arthur drewry", "march 3 , 1891", "1955", "1961"], ["6", "stanley rous", "april 25 , 1895", "1961", "1974"], ["7", "jo\u00e3o havelange", "may 8 , 1916", "1974", "1998"], ["8", "sepp blatter", "march 10 , 1936", "1998", "incumbent"]], "query": "eq { hop { nth_argmin { all_rows ; date of birth ; 2 } ; president } ; jules rimet } = true", "question": "jules rimet was the second earliest fifa president to be born ."}, {"topic": "powerade tigers all - time roster", "wiki": "https://en.wikipedia.org/wiki/Powerade_Tigers_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15463188-8.html.csv", "action": "comparative", "sent": "bong hawkins joined the powerade tigers earlier than bakari hendrix .", "annotation": {"row_1": "3", "row_2": "4", "col": "4", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "bong hawkins"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to bong hawkins .", "tostr": "filter_eq { all_rows ; name ; bong hawkins }"}, "season"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; bong hawkins } ; season }", "tointer": "select the rows whose name record fuzzily matches to bong hawkins . take the season record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "bakari hendrix"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to bakari hendrix .", "tostr": "filter_eq { all_rows ; name ; bakari hendrix }"}, "season"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; bakari hendrix } ; season }", "tointer": "select the rows whose name record fuzzily matches to bakari hendrix . take the season record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; name ; bong hawkins } ; season } ; hop { filter_eq { all_rows ; name ; bakari hendrix } ; season } } = true", "tointer": "select the rows whose name record fuzzily matches to bong hawkins . take the season record of this row . select the rows whose name record fuzzily matches to bakari hendrix . take the season record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; name ; bong hawkins } ; season } ; hop { filter_eq { all_rows ; name ; bakari hendrix } ; season } } = true", "interpret": "select the rows whose name record fuzzily matches to bong hawkins . take the season record of this row . select the rows whose name record fuzzily matches to bakari hendrix . take the season record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name_7": 7, "bong hawkins_8": 8, "season_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name_11": 11, "bakari hendrix_12": 12, "season_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name_7": "name", "bong hawkins_8": "bong hawkins", "season_9": "season", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "bakari hendrix_12": "bakari hendrix", "season_13": "season"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name_7": [0], "bong hawkins_8": [0], "season_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name_11": [1], "bakari hendrix_12": [1], "season_13": [3]}, "table_header": ["name", "position", "number", "season", "acquisition via"], "table_cont": [["ron hale", "forward", "22", "2002", "import"], ["rudy hatfield", "forward", "99", "2002 - 2005", "free agency"], ["bong hawkins", "forward", "16", "2002", "free agency"], ["bakari hendrix", "forward", "23", "2005", "import"], ["reynel hugnatan", "forward", "21", "2003 - 2005", "rookie draft"]], "query": "less { hop { filter_eq { all_rows ; name ; bong hawkins } ; season } ; hop { filter_eq { all_rows ; name ; bakari hendrix } ; season } } = true", "question": "bong hawkins joined the powerade tigers earlier than bakari hendrix ."}, {"topic": "list of australian submissions for the academy award for best foreign language film", "wiki": "https://en.wikipedia.org/wiki/List_of_Australian_submissions_for_the_Academy_Award_for_Best_Foreign_Language_Film", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16254861-1.html.csv", "action": "unique", "sent": "in the list of australian submissions for the academy award for best foreign language film , the only film to make the january shortlist was samson and delilah .", "annotation": {"scope": "all", "row": "5", "col": "5", "col_other": "2", "criterion": "equal", "value": "made january shortlist", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "made january shortlist"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to made january shortlist .", "tostr": "filter_eq { all_rows ; result ; made january shortlist }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; result ; made january shortlist } }", "tointer": "select the rows whose result record fuzzily matches to made january shortlist . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "made january shortlist"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to made january shortlist .", "tostr": "filter_eq { all_rows ; result ; made january shortlist }"}, "film title used in nomination"], "result": "samson and delilah", "ind": 2, "tostr": "hop { filter_eq { all_rows ; result ; made january shortlist } ; film title used in nomination }"}, "samson and delilah"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; result ; made january shortlist } ; film title used in nomination } ; samson and delilah }", "tointer": "the film title used in nomination record of this unqiue row is samson and delilah ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; result ; made january shortlist } } ; eq { hop { filter_eq { all_rows ; result ; made january shortlist } ; film title used in nomination } ; samson and delilah } } = true", "tointer": "select the rows whose result record fuzzily matches to made january shortlist . there is only one such row in the table . the film title used in nomination record of this unqiue row is samson and delilah ."}, "logic_str": "and { only { filter_eq { all_rows ; result ; made january shortlist } } ; eq { hop { filter_eq { all_rows ; result ; made january shortlist } ; film title used in nomination } ; samson and delilah } } = true", "interpret": "select the rows whose result record fuzzily matches to made january shortlist . there is only one such row in the table . the film title used in nomination record of this unqiue row is samson and delilah .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "result_7": 7, "made january shortlist_8": 8, "str_eq_3": 3, "str_hop_2": 2, "film title used in nomination_9": 9, "samson and delilah_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "result_7": "result", "made january shortlist_8": "made january shortlist", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "film title used in nomination_9": "film title used in nomination", "samson and delilah_10": "samson and delilah"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "result_7": [0], "made january shortlist_8": [0], "str_eq_3": [4], "str_hop_2": [3], "film title used in nomination_9": [2], "samson and delilah_10": [3]}, "table_header": ["year ( ceremony )", "film title used in nomination", "language ( s )", "director", "result"], "table_cont": [["1996 ( 69th )", "floating life", "cantonese , english , german", "clara law", "not nominated"], ["2001 ( 74th )", "la spagnola", "spanish , english , italian", "steve jacobs", "not nominated"], ["2006 ( 79th )", "ten canoes", "yolngu matha , gunwinggu , english", "rolf de heer", "not nominated"], ["2007 ( 80th )", "the home song stories", "cantonese , english , mandarin", "tony ayres", "not nominated"], ["2009 ( 82nd )", "samson and delilah", "warlpiri , english", "warwick thornton", "made january shortlist"], ["2012 ( 85th )", "lore", "german", "cate shortland", "not nominated"]], "query": "and { only { filter_eq { all_rows ; result ; made january shortlist } } ; eq { hop { filter_eq { all_rows ; result ; made january shortlist } ; film title used in nomination } ; samson and delilah } } = true", "question": "in the list of australian submissions for the academy award for best foreign language film , the only film to make the january shortlist was samson and delilah ."}, {"topic": "catalina sandino moreno", "wiki": "https://en.wikipedia.org/wiki/Catalina_Sandino_Moreno", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1430940-3.html.csv", "action": "count", "sent": "maria full of grace was nominated for , but did not win , six awards .", "annotation": {"scope": "all", "criterion": "equal", "value": "nominated", "result": "6", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "nominated"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to nominated .", "tostr": "filter_eq { all_rows ; result ; nominated }"}], "result": "6", "ind": 1, "tostr": "count { filter_eq { all_rows ; result ; nominated } }", "tointer": "select the rows whose result record fuzzily matches to nominated . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; result ; nominated } } ; 6 } = true", "tointer": "select the rows whose result record fuzzily matches to nominated . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_eq { all_rows ; result ; nominated } } ; 6 } = true", "interpret": "select the rows whose result record fuzzily matches to nominated . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "result_5": 5, "nominated_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "result_5": "result", "nominated_6": "nominated", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "result_5": [0], "nominated_6": [0], "6_7": [2]}, "table_header": ["year", "award", "nominated work", "category", "result"], "table_cont": [["2004", "academy awards", "maria full of grace", "best actress", "nominated"], ["2004", "screen actors guild awards", "maria full of grace", "best actress", "nominated"], ["2004", "independent spirit awards", "maria full of grace", "best female lead", "won"], ["2004", "chicago film critics association", "maria full of grace", "most promising performer", "won"], ["2004", "colombian cinema award", "maria full of grace", "best actress", "won"], ["2004", "gotham awards", "maria full of grace", "breakthrough performance", "won"], ["2004", "imagen foundation awards", "maria full of grace", "best actress - film", "won"], ["2004", "los angeles film critics association awards", "maria full of grace", "award for new generation", "won"], ["2004", "online film critics society awards", "maria full of grace", "best breakthrough performance", "won"], ["2004", "premios ace", "maria full of grace", "best actress", "won"], ["2004", "seattle international film festival", "maria full of grace", "best actress", "won"], ["2004", "showest award", "maria full of grace", "international star of the year", "won"], ["2004", "berlin international film festival", "maria full of grace", "best actress", "won"], ["2004", "broadcast film critics association", "maria full of grace", "best actress", "nominated"], ["2004", "chlotrudis awards", "maria full of grace", "best actress", "nominated"], ["2004", "satellite awards", "maria full of grace", "best actress in a motion picture , drama", "nominated"], ["2005", "london critics circle film awards", "maria full of grace", "actress of the year", "nominated"]], "query": "eq { count { filter_eq { all_rows ; result ; nominated } } ; 6 } = true", "question": "maria full of grace was nominated for , but did not win , six awards ."}, {"topic": "1932 vfl season", "wiki": "https://en.wikipedia.org/wiki/1932_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790099-4.html.csv", "action": "comparative", "sent": "richmond had a higher away team score than hawthorn on may 21 , 1932 .", "annotation": {"row_1": "2", "row_2": "4", "col": "4", "col_other": "3", "relation": "greater", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "away team", "richmond"], "result": null, "ind": 0, "tointer": "select the rows whose away team record fuzzily matches to richmond .", "tostr": "filter_eq { all_rows ; away team ; richmond }"}, "away team score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; away team ; richmond } ; away team score }", "tointer": "select the rows whose away team record fuzzily matches to richmond . take the away team score record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "away team", "hawthorn"], "result": null, "ind": 1, "tointer": "select the rows whose away team record fuzzily matches to hawthorn .", "tostr": "filter_eq { all_rows ; away team ; hawthorn }"}, "away team score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score }", "tointer": "select the rows whose away team record fuzzily matches to hawthorn . take the away team score record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } }", "tointer": "select the rows whose away team record fuzzily matches to richmond . take the away team score record of this row . select the rows whose away team record fuzzily matches to hawthorn . take the away team score record of this row . the first record is greater than the second record ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "away team", "richmond"], "result": null, "ind": 0, "tointer": "select the rows whose away team record fuzzily matches to richmond .", "tostr": "filter_eq { all_rows ; away team ; richmond }"}, "away team score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; away team ; richmond } ; away team score }", "tointer": "select the rows whose away team record fuzzily matches to richmond . take the away team score record of this row ."}, "7.9 ( 51 )"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; 7.9 ( 51 ) }", "tointer": "the away team score record of the first row is 7.9 ( 51 ) ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "away team", "hawthorn"], "result": null, "ind": 1, "tointer": "select the rows whose away team record fuzzily matches to hawthorn .", "tostr": "filter_eq { all_rows ; away team ; hawthorn }"}, "away team score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score }", "tointer": "select the rows whose away team record fuzzily matches to hawthorn . take the away team score record of this row ."}, "7.7 ( 49 )"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } ; 7.7 ( 49 ) }", "tointer": "the away team score record of the second row is 7.7 ( 49 ) ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; 7.9 ( 51 ) } ; eq { hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } ; 7.7 ( 49 ) } }", "tointer": "the away team score record of the first row is 7.9 ( 51 ) . the away team score record of the second row is 7.7 ( 49 ) ."}], "result": true, "ind": 8, "tostr": "and { greater { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } } ; and { eq { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; 7.9 ( 51 ) } ; eq { hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } ; 7.7 ( 49 ) } } } = true", "tointer": "select the rows whose away team record fuzzily matches to richmond . take the away team score record of this row . select the rows whose away team record fuzzily matches to hawthorn . take the away team score record of this row . the first record is greater than the second record . the away team score record of the first row is 7.9 ( 51 ) . the away team score record of the second row is 7.7 ( 49 ) ."}, "logic_str": "and { greater { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } } ; and { eq { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; 7.9 ( 51 ) } ; eq { hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } ; 7.7 ( 49 ) } } } = true", "interpret": "select the rows whose away team record fuzzily matches to richmond . take the away team score record of this row . select the rows whose away team record fuzzily matches to hawthorn . take the away team score record of this row . the first record is greater than the second record . the away team score record of the first row is 7.9 ( 51 ) . the away team score record of the second row is 7.7 ( 49 ) .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "greater_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "away team_11": 11, "richmond_12": 12, "away team score_13": 13, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "away team_15": 15, "hawthorn_16": 16, "away team score_17": 17, "and_7": 7, "str_eq_5": 5, "7.9 (51)_18": 18, "str_eq_6": 6, "7.7 (49)_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "greater_4": "greater", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "away team_11": "away team", "richmond_12": "richmond", "away team score_13": "away team score", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "away team_15": "away team", "hawthorn_16": "hawthorn", "away team score_17": "away team score", "and_7": "and", "str_eq_5": "str_eq", "7.9 (51)_18": "7.9 ( 51 )", "str_eq_6": "str_eq", "7.7 (49)_19": "7.7 ( 49 )"}, "g_adj": {"and_8": [9], "result_9": [], "greater_4": [8], "str_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "away team_11": [0], "richmond_12": [0], "away team score_13": [2], "str_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "away team_15": [1], "hawthorn_16": [1], "away team score_17": [3], "and_7": [8], "str_eq_5": [7], "7.9 (51)_18": [5], "str_eq_6": [7], "7.7 (49)_19": [6]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["north melbourne", "9.16 ( 70 )", "south melbourne", "11.7 ( 73 )", "arden street oval", "23000", "21 may 1932"], ["footscray", "6.12 ( 48 )", "richmond", "7.9 ( 51 )", "western oval", "19000", "21 may 1932"], ["collingwood", "14.22 ( 106 )", "fitzroy", "11.9 ( 75 )", "victoria park", "17000", "21 may 1932"], ["carlton", "16.16 ( 112 )", "hawthorn", "7.7 ( 49 )", "princes park", "16000", "21 may 1932"], ["st kilda", "7.15 ( 57 )", "essendon", "12.15 ( 87 )", "junction oval", "16000", "21 may 1932"], ["geelong", "20.13 ( 133 )", "melbourne", "14.11 ( 95 )", "motordrome", "7000", "21 may 1932"]], "query": "and { greater { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } } ; and { eq { hop { filter_eq { all_rows ; away team ; richmond } ; away team score } ; 7.9 ( 51 ) } ; eq { hop { filter_eq { all_rows ; away team ; hawthorn } ; away team score } ; 7.7 ( 49 ) } } } = true", "question": "richmond had a higher away team score than hawthorn on may 21 , 1932 ."}, {"topic": "1960 green bay packers season", "wiki": "https://en.wikipedia.org/wiki/1960_Green_Bay_Packers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14887186-1.html.csv", "action": "superlative", "sent": "tom moore was the earliest player drafted by green bay packers in 1960 .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "pick"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; pick }"}, "player"], "result": "tom moore", "ind": 1, "tostr": "hop { argmin { all_rows ; pick } ; player }"}, "tom moore"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; pick } ; player } ; tom moore } = true", "tointer": "select the row whose pick record of all rows is minimum . the player record of this row is tom moore ."}, "logic_str": "eq { hop { argmin { all_rows ; pick } ; player } ; tom moore } = true", "interpret": "select the row whose pick record of all rows is minimum . the player record of this row is tom moore .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "pick_5": 5, "player_6": 6, "tom moore_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "pick_5": "pick", "player_6": "player", "tom moore_7": "tom moore"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "pick_5": [0], "player_6": [1], "tom moore_7": [2]}, "table_header": ["round", "pick", "player", "position", "school"], "table_cont": [["1", "5", "tom moore", "running back", "vanderbilt"], ["2", "17", "bob jeter", "cornerback", "iowa"], ["5", "51", "dale hackbart", "defensive back", "wisconsin"], ["6", "65", "mike wright", "tackle", "minnesota"], ["7", "77", "kirk phares", "guard", "south carolina"], ["8", "89", "don hitt", "center", "oklahoma state"], ["9", "101", "frank brixius", "tackle", "minnesota"], ["11", "125", "ron ray", "tackle", "howard payne"], ["12", "137", "harry ball", "tackle", "boston college"], ["13", "149", "paul winslow", "defensive back", "north carolina central"], ["14", "161", "jon gilliam", "center", "east texas state"], ["15", "173", "garney henley", "back", "huron"], ["16", "185", "john littlejohn", "back", "kansas state"], ["17", "197", "joe gomes", "back", "south carolina"], ["18", "209", "royce whittington", "tackle", "southwestern louisiana"], ["19", "221", "rich brooks", "end", "purdue"], ["20", "233", "gilmer lewis", "tackle", "oklahoma"]], "query": "eq { hop { argmin { all_rows ; pick } ; player } ; tom moore } = true", "question": "tom moore was the earliest player drafted by green bay packers in 1960 ."}, {"topic": "atlanta falcons draft history", "wiki": "https://en.wikipedia.org/wiki/Atlanta_Falcons_draft_history", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15198842-12.html.csv", "action": "unique", "sent": "in the history of the draft for the atlanta falcons , robert speer was the only player drafted from arkansas state .", "annotation": {"scope": "all", "row": "9", "col": "6", "col_other": "4", "criterion": "equal", "value": "arkansas state", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "arkansas state"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to arkansas state .", "tostr": "filter_eq { all_rows ; college ; arkansas state }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; college ; arkansas state } }", "tointer": "select the rows whose college record fuzzily matches to arkansas state . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "arkansas state"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to arkansas state .", "tostr": "filter_eq { all_rows ; college ; arkansas state }"}, "name"], "result": "robert speer", "ind": 2, "tostr": "hop { filter_eq { all_rows ; college ; arkansas state } ; name }"}, "robert speer"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; college ; arkansas state } ; name } ; robert speer }", "tointer": "the name record of this unqiue row is robert speer ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; college ; arkansas state } } ; eq { hop { filter_eq { all_rows ; college ; arkansas state } ; name } ; robert speer } } = true", "tointer": "select the rows whose college record fuzzily matches to arkansas state . there is only one such row in the table . the name record of this unqiue row is robert speer ."}, "logic_str": "and { only { filter_eq { all_rows ; college ; arkansas state } } ; eq { hop { filter_eq { all_rows ; college ; arkansas state } ; name } ; robert speer } } = true", "interpret": "select the rows whose college record fuzzily matches to arkansas state . there is only one such row in the table . the name record of this unqiue row is robert speer .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "college_7": 7, "arkansas state_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "robert speer_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "college_7": "college", "arkansas state_8": "arkansas state", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "robert speer_10": "robert speer"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "college_7": [0], "arkansas state_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "robert speer_10": [3]}, "table_header": ["round", "pick", "overall", "name", "position", "college"], "table_cont": [["1", "6", "6", "warren bryant", "offensive tackle", "kentucky"], ["1", "20", "20", "wilson faumuina", "defensive tackle", "san jos\u00e3 state"], ["2", "8", "36", "r c thielemann", "guard", "arkansas"], ["4", "6", "90", "allan leavitt", "kicker", "georgia"], ["5", "8", "120", "shelton diggs", "wide receiver", "usc"], ["6", "22", "161", "keith jenkins", "defensive back", "cincinnati"], ["8", "8", "203", "walter packer", "wide receiver", "mississippi state"], ["9", "7", "230", "john maxwell", "offensive tackle", "boston college"], ["9", "19", "242", "robert speer", "defensive end", "arkansas state"], ["10", "6", "257", "billy ryckman", "wide receiver", "louisiana tech"], ["11", "8", "287", "dave farmer", "running back", "usc"], ["12", "7", "312", "don parrish", "defensive tackle", "pittsburgh"]], "query": "and { only { filter_eq { all_rows ; college ; arkansas state } } ; eq { hop { filter_eq { all_rows ; college ; arkansas state } ; name } ; robert speer } } = true", "question": "in the history of the draft for the atlanta falcons , robert speer was the only player drafted from arkansas state ."}, {"topic": "1981 england rugby union tour of argentina", "wiki": "https://en.wikipedia.org/wiki/1981_England_rugby_union_tour_of_Argentina", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17007880-1.html.csv", "action": "majority", "sent": "the majority of matches in the 1981 england rugby union tour of argentina were tour matches .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "tour match", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "status", "tour match"], "result": true, "ind": 0, "tointer": "for the status records of all rows , most of them fuzzily match to tour match .", "tostr": "most_eq { all_rows ; status ; tour match } = true"}, "logic_str": "most_eq { all_rows ; status ; tour match } = true", "interpret": "for the status records of all rows , most of them fuzzily match to tour match .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "status_3": 3, "tour match_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "status_3": "status", "tour match_4": "tour match"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "status_3": [0], "tour match_4": [0]}, "table_header": ["opposing team", "against", "date", "venue", "status"], "table_cont": [["san isidro club", "14", "16 / 05 / 1981", "buenos aires", "tour match"], ["northern region xv", "12", "19 / 05 / 1981", "c\u00e3 cubicrdoba", "tour match"], ["buenos aires selection", "25", "23 / 05 / 1981", "buenos aires", "tour match"], ["southern region xv", "3", "25 / 05 / 1981", "mar del plata", "tour match"], ["argentina", "19", "30 / 05 / 1981", "ferrocarril stadium , buenos aires", "first test"], ["litoral region xv", "21", "02 / 06 / 1981", "rosario", "tour match"], ["argentina", "6", "06 / 06 / 1981", "ferrocarril stadium , buenos aires", "second test"]], "query": "most_eq { all_rows ; status ; tour match } = true", "question": "the majority of matches in the 1981 england rugby union tour of argentina were tour matches ."}, {"topic": "1956 - 57 tunisian ligue professionnelle 1", "wiki": "https://en.wikipedia.org/wiki/1956%E2%80%9357_Tunisian_Ligue_Professionnelle_1", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18314162-2.html.csv", "action": "superlative", "sent": "the stade tunisien club had the most points in the 1956 - 57 tunisian ligue professionnelle 1 .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "club"], "result": "stade tunisien", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; club }"}, "stade tunisien"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; club } ; stade tunisien } = true", "tointer": "select the row whose points record of all rows is maximum . the club record of this row is stade tunisien ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; club } ; stade tunisien } = true", "interpret": "select the row whose points record of all rows is maximum . the club record of this row is stade tunisien .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "club_6": 6, "stade tunisien_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "club_6": "club", "stade tunisien_7": "stade tunisien"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "club_6": [1], "stade tunisien_7": [2]}, "table_header": ["pos", "club", "points", "played", "wins", "draw", "lost"], "table_cont": [["1", "stade tunisien", "58", "22", "16", "4", "1"], ["2", "esp\u00e9rance de tunis", "55", "22", "13", "7", "2"], ["3", "etoile sportive du sahel ( ess )", "51", "22", "14", "1", "7"], ["4", "club africain", "47", "22", "9", "7", "6"], ["5", "jeunesse sportive methouienne", "47", "22", "8", "9", "5"], ["6", "club sportif de hammam - lif", "43", "22", "8", "5", "9"], ["7", "union sportive de ferryville", "43", "22", "7", "7", "8"], ["8", "club athl\u00e9tique bizertin", "41", "22", "7", "5", "10"], ["9", "olympique tunisien", "41", "22", "7", "5", "10"], ["10", "club tunisien", "39", "22", "5", "7", "10"], ["11", "patriote football club de bizerte", "37", "22", "4", "7", "11"], ["12", "sfax railways sports", "24", "22", "1", "2", "19"]], "query": "eq { hop { argmax { all_rows ; points } ; club } ; stade tunisien } = true", "question": "the stade tunisien club had the most points in the 1956 - 57 tunisian ligue professionnelle 1 ."}, {"topic": "fibt world championships", "wiki": "https://en.wikipedia.org/wiki/FIBT_World_Championships", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10982957-8.html.csv", "action": "aggregation", "sent": "for the fibt world championships the total gold medals was 70 .", "annotation": {"scope": "all", "col": "4", "type": "sum", "result": "70", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "gold"], "result": "70", "ind": 0, "tostr": "sum { all_rows ; gold }"}, "70"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; gold } ; 70 } = true", "tointer": "the sum of the gold record of all rows is 70 ."}, "logic_str": "round_eq { sum { all_rows ; gold } ; 70 } = true", "interpret": "the sum of the gold record of all rows is 70 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "gold_4": 4, "70_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "gold_4": "gold", "70_5": "70"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "gold_4": [0], "70_5": [1]}, "table_header": ["athlete", "country", "from", "gold", "silver", "total", "status"], "table_cont": [["eugenio monti", "italy", "1957", "9", "1", "10", "p"], ["andr\u00e9 lange", "germany", "2000", "8", "4", "14", "p"], ["christoph langen", "germany", "1991", "8", "4", "12", "p / a"], ["erich sch\u00e4rer", "switzerland", "1971", "7", "3", "14", "p / a"], ["fritz feierabend", "switzerland", "1935", "6", "3", "12", "p / a"], ["kevin kuske", "germany", "2003", "6", "3", "11", "a"], ["wolfgang hoppe", "east germany germany", "1983", "6", "1", "14", "p"], ["markus zimmermann", "germany", "1991", "5", "3", "8", "a"], ["ren\u00e9 hoppe", "germany", "2000", "5", "2", "8", "a"], ["renzo alver\u00e0", "italy", "1957", "5", "1", "6", "a"], ["sergio siorpaes", "italy", "1958", "5", "1", "6", "a"]], "query": "round_eq { sum { all_rows ; gold } ; 70 } = true", "question": "for the fibt world championships the total gold medals was 70 ."}, {"topic": "rt\u00e9 radio", "wiki": "https://en.wikipedia.org/wiki/RT%C3%89_Radio", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18475946-2.html.csv", "action": "superlative", "sent": "clermont carn has a much higher rnag ( mhz ) than any other transmitter .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "rnag ( mhz )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; rnag ( mhz ) }"}, "transmitter"], "result": "clermont carn", "ind": 1, "tostr": "hop { argmax { all_rows ; rnag ( mhz ) } ; transmitter }"}, "clermont carn"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; rnag ( mhz ) } ; transmitter } ; clermont carn } = true", "tointer": "select the row whose rnag ( mhz ) record of all rows is maximum . the transmitter record of this row is clermont carn ."}, "logic_str": "eq { hop { argmax { all_rows ; rnag ( mhz ) } ; transmitter } ; clermont carn } = true", "interpret": "select the row whose rnag ( mhz ) record of all rows is maximum . the transmitter record of this row is clermont carn .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "rnag (mhz)_5": 5, "transmitter_6": 6, "clermont carn_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "rnag (mhz)_5": "rnag ( mhz )", "transmitter_6": "transmitter", "clermont carn_7": "clermont carn"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "rnag (mhz)_5": [0], "transmitter_6": [1], "clermont carn_7": [2]}, "table_header": ["transmitter", "service area", "radio 1 ( mhz )", "2fm ( mhz )", "rnag ( mhz )", "lyric fm ( mhz )", "erp ( kw )"], "table_cont": [["cairn hill", "the midlands", "89.8", "n / a", "n / a", "n / a", "16"], ["clermont carn", "ne ireland , northern ireland", "87.8", "97.0", "102.7", "95.2", "40"], ["kippure", "dublin , wicklow , se midlands", "89.1", "91.3", "93.5", "98.7", "40"], ["maghera", "west ireland", "88.8", "91.0", "93.2", "98.4", "160"], ["mount leinster", "se ireland", "89.6", "91.8", "94.0", "99.2", "100"], ["mullaghanish", "sw ireland", "90.0", "92.2", "94.4", "99.6", "160"], ["three rock", "dublin city and county", "88.5", "90.7", "92.9", "96.7", "12.5"], ["truskmore", "nw ireland", "88.2", "90.4", "92.6", "97.8", "160"]], "query": "eq { hop { argmax { all_rows ; rnag ( mhz ) } ; transmitter } ; clermont carn } = true", "question": "clermont carn has a much higher rnag ( mhz ) than any other transmitter ."}, {"topic": "2010 - 11 primeira liga", "wiki": "https://en.wikipedia.org/wiki/2010%E2%80%9311_Primeira_Liga", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27133147-3.html.csv", "action": "unique", "sent": "in the 2010-11 primeira liga , jorge costa left a vacancy two days after rog\u00e9rio gon\u00e7alves left a vacancy .", "annotation": {"scope": "all", "row": "4", "col": "4", "col_other": "2", "criterion": "equal", "value": "21 december 2010", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date of vacancy", "21 december 2010"], "result": null, "ind": 0, "tointer": "select the rows whose date of vacancy record fuzzily matches to 21 december 2010 .", "tostr": "filter_eq { all_rows ; date of vacancy ; 21 december 2010 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } }", "tointer": "select the rows whose date of vacancy record fuzzily matches to 21 december 2010 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date of vacancy", "21 december 2010"], "result": null, "ind": 0, "tointer": "select the rows whose date of vacancy record fuzzily matches to 21 december 2010 .", "tostr": "filter_eq { all_rows ; date of vacancy ; 21 december 2010 }"}, "outgoing head coach"], "result": "jorge costa", "ind": 2, "tostr": "hop { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } ; outgoing head coach }"}, "jorge costa"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } ; outgoing head coach } ; jorge costa }", "tointer": "the outgoing head coach record of this unqiue row is jorge costa ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } } ; eq { hop { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } ; outgoing head coach } ; jorge costa } } = true", "tointer": "select the rows whose date of vacancy record fuzzily matches to 21 december 2010 . there is only one such row in the table . the outgoing head coach record of this unqiue row is jorge costa ."}, "logic_str": "and { only { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } } ; eq { hop { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } ; outgoing head coach } ; jorge costa } } = true", "interpret": "select the rows whose date of vacancy record fuzzily matches to 21 december 2010 . there is only one such row in the table . the outgoing head coach record of this unqiue row is jorge costa .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "date of vacancy_7": 7, "21 december 2010_8": 8, "str_eq_3": 3, "str_hop_2": 2, "outgoing head coach_9": 9, "jorge costa_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date of vacancy_7": "date of vacancy", "21 december 2010_8": "21 december 2010", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "outgoing head coach_9": "outgoing head coach", "jorge costa_10": "jorge costa"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "date of vacancy_7": [0], "21 december 2010_8": [0], "str_eq_3": [4], "str_hop_2": [3], "outgoing head coach_9": [2], "jorge costa_10": [3]}, "table_header": ["team", "outgoing head coach", "manner of departure", "date of vacancy", "position in table", "incoming head coach", "date of appointment"], "table_cont": [["uni\u00e3o de leiria", "lito vidigal", "sacked", "7 july 2010", "off - season", "pedro caixinha", "10 july 2010"], ["mar\u00edtimo", "mitchell van der gaag", "sacked", "14 september 2010", "15th", "pedro martins", "14 september 2010"], ["naval 1 de maio", "victor zvunka", "sacked", "27 september 2010", "14th", "rog\u00e9rio gon\u00e7alves", "6 october 2010"], ["acad\u00e9mica", "jorge costa", "resigned", "21 december 2010", "9th", "jos\u00e9 guilherme", "27 december 2010"], ["naval 1 de maio", "rog\u00e9rio gon\u00e7alves", "sacked", "19 december 2010", "16th", "carlos mozer", "30 december 2010"], ["portimonense", "litos", "sacked", "28 december 2011", "16th", "carlos azenha", "29 december 2010"], ["acad\u00e9mica", "jos\u00e9 guilherme", "resigned", "20 february 2011", "13th", "ulisses morais", "22 february 2011"], ["sporting", "paulo s\u00e9rgio", "resigned", "26 february 2011", "3rd", "jos\u00e9 couceiro", "26 february 2011"], ["beira - mar", "leonardo jardim", "resigned", "28 february 2011", "10th", "rui bento", "1 march 2011"], ["vit\u00f3ria de set\u00fabal", "manuel fernandes", "sacked", "1 march 2011", "14th", "bruno ribeiro", "1 march 2011"]], "query": "and { only { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } } ; eq { hop { filter_eq { all_rows ; date of vacancy ; 21 december 2010 } ; outgoing head coach } ; jorge costa } } = true", "question": "in the 2010-11 primeira liga , jorge costa left a vacancy two days after rog\u00e9rio gon\u00e7alves left a vacancy ."}, {"topic": "benedict ako", "wiki": "https://en.wikipedia.org/wiki/Benedict_Ako", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18564451-1.html.csv", "action": "majority", "sent": "benedict ako finished outside of the top 10 in the majority of races he participated in from 1997 to 2001 .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "greater_than_eq", "value": "10", "subset": null}, "logic": {"func": "most_greater_eq", "args": ["all_rows", "result", "10"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them are greater than or equal to 10 .", "tostr": "most_greater_eq { all_rows ; result ; 10 } = true"}, "logic_str": "most_greater_eq { all_rows ; result ; 10 } = true", "interpret": "for the result records of all rows , most of them are greater than or equal to 10 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "10_4": 4}, "g_ids_features": {"most_greater_eq_0": "most_greater_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "10_4": "10"}, "g_adj": {"most_greater_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "10_4": [0]}, "table_header": ["year", "tournament", "venue", "result", "event"], "table_cont": [["1997", "world cross country championships", "turin , italy", "25th", "long race"], ["1998", "world cross country championships", "marrakech , morocco", "26th", "long race"], ["1998", "world cross country championships", "marrakech , morocco", "6th", "team competition"], ["2001", "world half marathon championships", "bristol , england", "22nd", "half marathon"], ["2001", "world half marathon championships", "bristol , england", "3rd", "team competition"]], "query": "most_greater_eq { all_rows ; result ; 10 } = true", "question": "benedict ako finished outside of the top 10 in the majority of races he participated in from 1997 to 2001 ."}, {"topic": "1981 toronto blue jays season", "wiki": "https://en.wikipedia.org/wiki/1981_Toronto_Blue_Jays_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12207755-6.html.csv", "action": "comparative", "sent": "in the games listed the blue jays performance against the royal on august 18 was better than that against the same opponents on august 17 .", "annotation": {"row_1": "9", "row_2": "8", "col": "5", "col_other": "1,2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "august 18"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to august 18 .", "tostr": "filter_eq { all_rows ; date ; august 18 }"}, "record"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; august 18 } ; record }", "tointer": "select the rows whose date record fuzzily matches to august 18 . take the record record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "august 17"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to august 17 .", "tostr": "filter_eq { all_rows ; date ; august 17 }"}, "record"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; august 17 } ; record }", "tointer": "select the rows whose date record fuzzily matches to august 17 . take the record record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; date ; august 18 } ; record } ; hop { filter_eq { all_rows ; date ; august 17 } ; record } }", "tointer": "select the rows whose date record fuzzily matches to august 18 . take the record record of this row . select the rows whose date record fuzzily matches to august 17 . take the record record of this row . the first record is greater than the second record ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "august 18"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to august 18 .", "tostr": "filter_eq { all_rows ; date ; august 18 }"}, "opponent"], "result": "royals", "ind": 5, "tostr": "hop { filter_eq { all_rows ; date ; august 18 } ; opponent }"}, "royals"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; date ; august 18 } ; opponent } ; royals }", "tointer": "the opponent record of the first row is royals ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "august 17"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to august 17 .", "tostr": "filter_eq { all_rows ; date ; august 17 }"}, "opponent"], "result": "royals", "ind": 7, "tostr": "hop { filter_eq { all_rows ; date ; august 17 } ; opponent }"}, "royals"], "result": true, "ind": 8, "tostr": "eq { hop { filter_eq { all_rows ; date ; august 17 } ; opponent } ; royals }", "tointer": "the opponent record of the second row is royals ."}], "result": true, "ind": 9, "tostr": "and { eq { hop { filter_eq { all_rows ; date ; august 18 } ; opponent } ; royals } ; eq { hop { filter_eq { all_rows ; date ; august 17 } ; opponent } ; royals } }", "tointer": "the opponent record of the first row is royals . the opponent record of the second row is royals ."}], "result": true, "ind": 10, "tostr": "and { greater { hop { filter_eq { all_rows ; date ; august 18 } ; record } ; hop { filter_eq { all_rows ; date ; august 17 } ; record } } ; and { eq { hop { filter_eq { all_rows ; date ; august 18 } ; opponent } ; royals } ; eq { hop { filter_eq { all_rows ; date ; august 17 } ; opponent } ; royals } } } = true", "tointer": "select the rows whose date record fuzzily matches to august 18 . take the record record of this row . select the rows whose date record fuzzily matches to august 17 . take the record record of this row . the first record is greater than the second record . the opponent record of the first row is royals . the opponent record of the second row is royals ."}, "logic_str": "and { greater { hop { filter_eq { all_rows ; date ; august 18 } ; record } ; hop { filter_eq { all_rows ; date ; august 17 } ; record } } ; and { eq { hop { filter_eq { all_rows ; date ; august 18 } ; opponent } ; royals } ; eq { hop { filter_eq { all_rows ; date ; august 17 } ; opponent } ; royals } } } = true", "interpret": "select the rows whose date record fuzzily matches to august 18 . take the record record of this row . select the rows whose date record fuzzily matches to august 17 . take the record record of this row . the first record is greater than the second record . the opponent record of the first row is royals . the opponent record of the second row is royals .", "num_func": 13, "nid": 11, "g_ids": {"and_10": 10, "result_11": 11, "greater_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_12": 12, "date_13": 13, "august 18_14": 14, "record_15": 15, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_16": 16, "date_17": 17, "august 17_18": 18, "record_19": 19, "and_9": 9, "str_eq_6": 6, "str_hop_5": 5, "opponent_20": 20, "royals_21": 21, "str_eq_8": 8, "str_hop_7": 7, "opponent_22": 22, "royals_23": 23}, "g_ids_features": {"and_10": "and", "result_11": "true", "greater_4": "greater", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_12": "all_rows", "date_13": "date", "august 18_14": "august 18", "record_15": "record", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_16": "all_rows", "date_17": "date", "august 17_18": "august 17", "record_19": "record", "and_9": "and", "str_eq_6": "str_eq", "str_hop_5": "str_hop", "opponent_20": "opponent", "royals_21": "royals", "str_eq_8": "str_eq", "str_hop_7": "str_hop", "opponent_22": "opponent", "royals_23": "royals"}, "g_adj": {"and_10": [11], "result_11": [], "greater_4": [10], "str_hop_2": [4], "filter_str_eq_0": [2, 5], "all_rows_12": [0], "date_13": [0], "august 18_14": [0], "record_15": [2], "str_hop_3": [4], "filter_str_eq_1": [3, 7], "all_rows_16": [1], "date_17": [1], "august 17_18": [1], "record_19": [3], "and_9": [10], "str_eq_6": [9], "str_hop_5": [6], "opponent_20": [5], "royals_21": [6], "str_eq_8": [9], "str_hop_7": [8], "opponent_22": [7], "royals_23": [8]}, "table_header": ["date", "opponent", "score", "loss", "record"], "table_cont": [["august 10", "tigers", "4 - 3", "mclaughlin ( 0 - 5 )", "16 - 43"], ["august 11", "tigers", "6 - 4", "schatzeder ( 3 - 5 )", "17 - 43"], ["august 12", "tigers", "4 - 3", "morris ( 9 - 4 )", "18 - 43"], ["august 14", "brewers", "5 - 4", "easterly ( 2 - 2 )", "19 - 43"], ["august 15", "brewers", "4 - 3", "cleveland ( 2 - 2 )", "20 - 43"], ["august 16", "brewers", "6 - 2", "stieb ( 5 - 8 )", "20 - 44"], ["august 16", "brewers", "2 - 0", "todd ( 2 - 6 )", "20 - 45"], ["august 17", "royals", "5 - 3", "clancy ( 3 - 6 )", "20 - 46"], ["august 18", "royals", "5 - 3", "jones ( 1 - 1 )", "21 - 46"], ["august 19", "royals", "9 - 4", "leonard ( 7 - 8 )", "22 - 46"], ["august 21", "white sox", "5 - 4", "farmer ( 2 - 3 )", "23 - 46"], ["august 22", "white sox", "8 - 0", "clancy ( 3 - 7 )", "23 - 47"], ["august 23", "white sox", "13 - 2", "leal ( 4 - 9 )", "23 - 48"], ["august 24", "rangers", "3 - 0", "berenguer ( 2 - 5 )", "23 - 49"], ["august 25", "rangers", "6 - 1", "stieb ( 6 - 9 )", "23 - 50"], ["august 27", "royals", "11 - 5", "clancy ( 3 - 8 )", "23 - 51"], ["august 28", "royals", "4 - 3", "brett ( 1 - 1 )", "24 - 51"], ["august 29", "royals", "2 - 0", "berenguer ( 2 - 6 )", "24 - 52"], ["august 30", "royals", "postponed ( rain ) not rescheduled", "postponed ( rain ) not rescheduled", "postponed ( rain ) not rescheduled"], ["august 31", "rangers", "3 - 0", "jenkins ( 5 - 7 )", "25 - 52"]], "query": "and { greater { hop { filter_eq { all_rows ; date ; august 18 } ; record } ; hop { filter_eq { all_rows ; date ; august 17 } ; record } } ; and { eq { hop { filter_eq { all_rows ; date ; august 18 } ; opponent } ; royals } ; eq { hop { filter_eq { all_rows ; date ; august 17 } ; opponent } ; royals } } } = true", "question": "in the games listed the blue jays performance against the royal on august 18 was better than that against the same opponents on august 17 ."}, {"topic": "i brought you my bullets , you brought me your love", "wiki": "https://en.wikipedia.org/wiki/I_Brought_You_My_Bullets%2C_You_Brought_Me_Your_Love", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1449587-4.html.csv", "action": "majority", "sent": "the album \" i brought you my bullets , you brought me your love \" was usually released in cd format .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "cd", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "format", "cd"], "result": true, "ind": 0, "tointer": "for the format records of all rows , most of them fuzzily match to cd .", "tostr": "most_eq { all_rows ; format ; cd } = true"}, "logic_str": "most_eq { all_rows ; format ; cd } = true", "interpret": "for the format records of all rows , most of them fuzzily match to cd .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "format_3": 3, "cd_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "format_3": "format", "cd_4": "cd"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "format_3": [0], "cd_4": [0]}, "table_header": ["region", "date", "label", "format", "catalogue"], "table_cont": [["japan", "march 25 , 2009", "warner", "cd", "wpcr13347"], ["united kingdom", "april 12 , 2004", "eyeball , 20:20", "cd", "9866233"], ["united states", "july 23 , 2002", "eyeball", "cd", "eye20022"], ["united states", "june 21 , 2005", "eyeball", "cd", "7200222"], ["united states", "february 3 , 2009", "eyeball", "12 vinyl", "eye20059"]], "query": "most_eq { all_rows ; format ; cd } = true", "question": "the album \" i brought you my bullets , you brought me your love \" was usually released in cd format ."}, {"topic": "seat toledo", "wiki": "https://en.wikipedia.org/wiki/SEAT_Toledo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1176162-3.html.csv", "action": "count", "sent": "for the seat toledo , there were two models that had a displacement of over 2000 .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "2000", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "displacement cc", "2000"], "result": null, "ind": 0, "tointer": "select the rows whose displacement cc record is greater than 2000 .", "tostr": "filter_greater { all_rows ; displacement cc ; 2000 }"}], "result": "2", "ind": 1, "tostr": "count { filter_greater { all_rows ; displacement cc ; 2000 } }", "tointer": "select the rows whose displacement cc record is greater than 2000 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; displacement cc ; 2000 } } ; 2 } = true", "tointer": "select the rows whose displacement cc record is greater than 2000 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_greater { all_rows ; displacement cc ; 2000 } } ; 2 } = true", "interpret": "select the rows whose displacement cc record is greater than 2000 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "displacement cc_5": 5, "2000_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "displacement cc_5": "displacement cc", "2000_6": "2000", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "displacement cc_5": [0], "2000_6": [0], "2_7": [2]}, "table_header": ["model", "cylinders / valves", "displacement cc", "max power kw ( ps ) at rpm", "max torque ( nm ) at rpm", "engine code", "top speed ( km / h )", "production period"], "table_cont": [["1.4 16v", "r4 / 16", "1390", "55 ( 75 ) / 5000", "126 / 3800", "ahw / axp / akq / ape / aua / bca", "170", "1999 - 2004"], ["1.6", "r4 / 8", "1595", "74 ( 101 ) / 5600", "145 / 3800", "akl / aeh / apf", "188", "1999 - 2000"], ["1.6 16v", "r4 / 16", "1598", "77 ( 105 ) / 5700", "148 / 4500", "aus / azd / atn / bcb", "192", "2000 - 2004"], ["1.8 20v", "r4 / 20", "1781", "92 ( 125 ) / 6000", "170 / 4200", "agn / apg", "200", "1999 - 2003"], ["1.8 20v", "r4 / 20", "1781", "132 ( 180 ) / 5500", "235 / 1950 - 5000", "auq", "229", "2003 - 2004"], ["2.3 v5", "vr5 / 10", "2324", "110 ( 150 ) / 6000", "205 / 3200", "agz", "216", "1999 - 2000"], ["2.3 v5", "vr5 / 20", "2324", "125 ( 170 ) / 6200", "225 / 3300", "aqn", "225", "2000 - 2003"]], "query": "eq { count { filter_greater { all_rows ; displacement cc ; 2000 } } ; 2 } = true", "question": "for the seat toledo , there were two models that had a displacement of over 2000 ."}, {"topic": "1972 vfl season", "wiki": "https://en.wikipedia.org/wiki/1972_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10826385-11.html.csv", "action": "count", "sent": "in the 1972 vfl season , among the games played on june 12 , 2 of them had an attendance over 20,000 .", "annotation": {"scope": "subset", "criterion": "greater_than", "value": "20000", "result": "2", "col": "6", "subset": {"col": "7", "criterion": "equal", "value": "12 june 1972"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "12 june 1972"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; 12 june 1972 }", "tointer": "select the rows whose date record fuzzily matches to 12 june 1972 ."}, "crowd", "20000"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to 12 june 1972 . among these rows , select the rows whose crowd record is greater than 20000 .", "tostr": "filter_greater { filter_eq { all_rows ; date ; 12 june 1972 } ; crowd ; 20000 }"}], "result": "2", "ind": 2, "tostr": "count { filter_greater { filter_eq { all_rows ; date ; 12 june 1972 } ; crowd ; 20000 } }", "tointer": "select the rows whose date record fuzzily matches to 12 june 1972 . among these rows , select the rows whose crowd record is greater than 20000 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_greater { filter_eq { all_rows ; date ; 12 june 1972 } ; crowd ; 20000 } } ; 2 } = true", "tointer": "select the rows whose date record fuzzily matches to 12 june 1972 . among these rows , select the rows whose crowd record is greater than 20000 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_greater { filter_eq { all_rows ; date ; 12 june 1972 } ; crowd ; 20000 } } ; 2 } = true", "interpret": "select the rows whose date record fuzzily matches to 12 june 1972 . among these rows , select the rows whose crowd record is greater than 20000 . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_greater_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "date_6": 6, "12 june 1972_7": 7, "crowd_8": 8, "20000_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_greater_1": "filter_greater", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "date_6": "date", "12 june 1972_7": "12 june 1972", "crowd_8": "crowd", "20000_9": "20000", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_greater_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "date_6": [0], "12 june 1972_7": [0], "crowd_8": [1], "20000_9": [1], "2_10": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["richmond", "14.11 ( 95 )", "south melbourne", "2.19 ( 31 )", "mcg", "18692", "10 june 1972"], ["st kilda", "17.8 ( 110 )", "hawthorn", "7.14 ( 56 )", "moorabbin oval", "24000", "10 june 1972"], ["footscray", "7.9 ( 51 )", "carlton", "7.15 ( 57 )", "western oval", "23948", "10 june 1972"], ["fitzroy", "12.17 ( 89 )", "melbourne", "13.10 ( 88 )", "junction oval", "23103", "12 june 1972"], ["collingwood", "23.10 ( 148 )", "essendon", "13.15 ( 93 )", "victoria park", "42206", "12 june 1972"], ["geelong", "14.20 ( 104 )", "north melbourne", "14.11 ( 95 )", "vfl park", "13945", "12 june 1972"]], "query": "eq { count { filter_greater { filter_eq { all_rows ; date ; 12 june 1972 } ; crowd ; 20000 } } ; 2 } = true", "question": "in the 1972 vfl season , among the games played on june 12 , 2 of them had an attendance over 20,000 ."}, {"topic": "espn sunday night football results ( 1987 - 2005 )", "wiki": "https://en.wikipedia.org/wiki/ESPN_Sunday_Night_Football_results_%281987%E2%80%932005%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13193466-2.html.csv", "action": "superlative", "sent": "in the games played in november the highest points scored by a team was 38 .", "annotation": {"scope": "subset", "col_superlative": "3", "row_superlative": "4", "value_mentioned": "yes", "max_or_min": "max", "other_col": "1", "subset": {"col": "1", "criterion": "equal", "value": "november"}}, "logic": {"func": "eq", "args": [{"func": "max", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "november"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; november }", "tointer": "select the rows whose date record fuzzily matches to november ."}, "final score"], "result": "24 - 38", "ind": 1, "tostr": "max { filter_eq { all_rows ; date ; november } ; final score }", "tointer": "select the rows whose date record fuzzily matches to november . the maximum final score record of these rows is 24 - 38 ."}, "24 - 38"], "result": true, "ind": 2, "tostr": "eq { max { filter_eq { all_rows ; date ; november } ; final score } ; 24 - 38 } = true", "tointer": "select the rows whose date record fuzzily matches to november . the maximum final score record of these rows is 24 - 38 ."}, "logic_str": "eq { max { filter_eq { all_rows ; date ; november } ; final score } ; 24 - 38 } = true", "interpret": "select the rows whose date record fuzzily matches to november . the maximum final score record of these rows is 24 - 38 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "max_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "november_6": 6, "final score_7": 7, "24 - 38_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "max_1": "max", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "november_6": "november", "final score_7": "final score", "24 - 38_8": "24 - 38"}, "g_adj": {"eq_2": [3], "result_3": [], "max_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "november_6": [0], "final score_7": [1], "24 - 38_8": [2]}, "table_header": ["date", "visiting team", "final score", "host team", "stadium"], "table_cont": [["november 8", "new england patriots", "10 - 17", "new york giants", "giants stadium"], ["november 15", "los angeles raiders", "14 - 16", "san diego chargers", "jack murphy stadium"], ["november 22", "miami dolphins", "20 - 14", "dallas cowboys", "texas stadium"], ["november 29", "cleveland browns", "24 - 38", "san francisco 49ers", "candlestick park"], ["december 6", "chicago bears", "30 - 24", "minnesota vikings", "hubert h humphrey metrodome"], ["december 13", "denver broncos", "21 - 28", "seattle seahawks", "kingdome"], ["december 20", "washington redskins", "21 - 23", "miami dolphins", "joe robbie stadium"], ["december 27", "los angeles rams", "0 - 48", "san francisco 49ers", "candlestick park"]], "query": "eq { max { filter_eq { all_rows ; date ; november } ; final score } ; 24 - 38 } = true", "question": "in the games played in november the highest points scored by a team was 38 ."}, {"topic": "2006 atlantic championship season", "wiki": "https://en.wikipedia.org/wiki/2006_Atlantic_Championship_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16952105-2.html.csv", "action": "count", "sent": "raphael matos won one race in the 2006 atlantic championship season .", "annotation": {"scope": "all", "criterion": "equal", "value": "raphael matos", "result": "1", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "winning driver", "raphael matos"], "result": null, "ind": 0, "tointer": "select the rows whose winning driver record fuzzily matches to raphael matos .", "tostr": "filter_eq { all_rows ; winning driver ; raphael matos }"}], "result": "1", "ind": 1, "tostr": "count { filter_eq { all_rows ; winning driver ; raphael matos } }", "tointer": "select the rows whose winning driver record fuzzily matches to raphael matos . the number of such rows is 1 ."}, "1"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; winning driver ; raphael matos } } ; 1 } = true", "tointer": "select the rows whose winning driver record fuzzily matches to raphael matos . the number of such rows is 1 ."}, "logic_str": "eq { count { filter_eq { all_rows ; winning driver ; raphael matos } } ; 1 } = true", "interpret": "select the rows whose winning driver record fuzzily matches to raphael matos . the number of such rows is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "winning driver_5": 5, "raphael matos_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "winning driver_5": "winning driver", "raphael matos_6": "raphael matos", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "winning driver_5": [0], "raphael matos_6": [0], "1_7": [2]}, "table_header": ["round", "race name", "pole position", "winning driver", "winning team"], "table_cont": [["1", "2006 imperial capital bank atlantic race", "andreas wirth", "andreas wirth", "forsythe championship racing"], ["2", "2006 fast trac 100", "raphael matos", "andreas wirth", "forsythe championship racing"], ["3", "2006 monterrey", "graham rahal", "graham rahal", "mi - jack conquest racing"], ["4", "2006 trinity carpet 100k", "graham rahal", "james hinchcliffe", "forsythe championship racing"], ["5", "2006 gehl atlantic championship of cleveland 1", "andreas wirth", "graham rahal", "mi - jack conquest racing"], ["6", "2006 gehl atlantic championship of cleveland 2", "simon pagenaud", "graham rahal", "mi - jack conquest racing"], ["7", "2006 toronto", "graham rahal", "robbie pecorari", "gelles racing"], ["8", "2006 edmonton", "raphael matos", "simon pagenaud", "team australia"], ["9", "2006 san jos\u00e9", "raphael matos", "raphael matos", "sierra sierra enterprises"], ["10", "2006 denver", "graham rahal", "graham rahal", "mi - jack conquest racing"], ["11", "2006 montr\u00e9al", "james hinchcliffe", "graham rahal", "mi - jack conquest racing"], ["12", "2006 gehl championship finale", "raphael matos", "jonathan bomarito", "pr1 motorsports"]], "query": "eq { count { filter_eq { all_rows ; winning driver ; raphael matos } } ; 1 } = true", "question": "raphael matos won one race in the 2006 atlantic championship season ."}, {"topic": "scott savol", "wiki": "https://en.wikipedia.org/wiki/Scott_Savol", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1792668-1.html.csv", "action": "count", "sent": "scott savol had a bottom 3 status in a total of two different weeks in the competition .", "annotation": {"scope": "all", "criterion": "equal", "value": "bottom 3", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "status", "bottom 3"], "result": null, "ind": 0, "tointer": "select the rows whose status record fuzzily matches to bottom 3 .", "tostr": "filter_eq { all_rows ; status ; bottom 3 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; status ; bottom 3 } }", "tointer": "select the rows whose status record fuzzily matches to bottom 3 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; status ; bottom 3 } } ; 2 } = true", "tointer": "select the rows whose status record fuzzily matches to bottom 3 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; status ; bottom 3 } } ; 2 } = true", "interpret": "select the rows whose status record fuzzily matches to bottom 3 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "status_5": 5, "bottom 3_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "status_5": "status", "bottom 3_6": "bottom 3", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "status_5": [0], "bottom 3_6": [0], "2_7": [2]}, "table_header": ["week", "theme", "song sung", "artist", "status"], "table_cont": [["top 24", "semifinals top 12 ( men )", "you are my lady", "freddie jackson", "advanced"], ["top 20", "semifinals top 10 ( men )", "never too much", "luther vandross", "advanced"], ["top 16", "semifinals top 8 ( men )", "i ca n't help myself ( sugar pie honey bunch )", "four tops", "advanced"], ["top 12", "songs of the 1960s", "ai n't too proud to beg", "the temptations", "safe"], ["top 11", "billboard 1", "against all odds ( take a look at me now )", "phil collins", "safe"], ["top 10", "songs of the 1990s", "one last cry", "brian mcknight", "safe"], ["top 9", "songs of broadway", "the impossible dream ( the quest )", "man of la mancha", "bottom 2"], ["top 8", "year they were born", "she 's gone", "hall & oates", "bottom 3"], ["top 7", "1970s dance music", "everlasting love", "robert knight", "bottom 3"], ["top 6", "songs of the 21st century", "dance with my father", "luther vandross", "safe"], ["top 5", "leiber and stoller billboard top 40", "on broadway everytime you go away", "george benson brian mcknight", "eliminated"]], "query": "eq { count { filter_eq { all_rows ; status ; bottom 3 } } ; 2 } = true", "question": "scott savol had a bottom 3 status in a total of two different weeks in the competition ."}, {"topic": "75th united states congress", "wiki": "https://en.wikipedia.org/wiki/75th_United_States_Congress", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2159547-3.html.csv", "action": "count", "sent": "among the november 1937 dates of 75th united states congress seating , two of the successors were republicans ( r ) .", "annotation": {"scope": "subset", "criterion": "fuzzily_match", "value": "( r )", "result": "2", "col": "4", "subset": {"col": "5", "criterion": "fuzzily_match", "value": "november"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date successor seated", "november"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date successor seated ; november }", "tointer": "select the rows whose date successor seated record fuzzily matches to november ."}, "successor", "( r )"], "result": null, "ind": 1, "tointer": "select the rows whose date successor seated record fuzzily matches to november . among these rows , select the rows whose successor record fuzzily matches to ( r ) .", "tostr": "filter_eq { filter_eq { all_rows ; date successor seated ; november } ; successor ; ( r ) }"}], "result": "2", "ind": 2, "tostr": "count { filter_eq { filter_eq { all_rows ; date successor seated ; november } ; successor ; ( r ) } }", "tointer": "select the rows whose date successor seated record fuzzily matches to november . among these rows , select the rows whose successor record fuzzily matches to ( r ) . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_eq { all_rows ; date successor seated ; november } ; successor ; ( r ) } } ; 2 } = true", "tointer": "select the rows whose date successor seated record fuzzily matches to november . among these rows , select the rows whose successor record fuzzily matches to ( r ) . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { filter_eq { all_rows ; date successor seated ; november } ; successor ; ( r ) } } ; 2 } = true", "interpret": "select the rows whose date successor seated record fuzzily matches to november . among these rows , select the rows whose successor record fuzzily matches to ( r ) . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "date successor seated_6": 6, "november_7": 7, "successor_8": 8, "(r)_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "date successor seated_6": "date successor seated", "november_7": "november", "successor_8": "successor", "(r)_9": "( r )", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_eq_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "date successor seated_6": [0], "november_7": [0], "successor_8": [1], "(r)_9": [1], "2_10": [3]}, "table_header": ["district", "vacator", "reason for change", "successor", "date successor seated"], "table_cont": [["virginia 3rd", "andrew jackson montague ( d )", "died january 24 , 1937", "dave e satterfield , jr ( d )", "november 2 , 1937"], ["texas 10th", "james p buchanan ( d )", "died february 22 , 1937", "lyndon b johnson ( d )", "april 10 , 1937"], ["california 10th", "henry e stubbs ( d )", "died february 28 , 1937", "alfred j elliott ( d )", "may 4 , 1937"], ["pennsylvania 18th", "benjamin k focht ( r )", "died march 27 , 1937", "richard m simpson ( r )", "may 11 , 1937"], ["new york 27th", "philip a goodwin ( r )", "died june 6 , 1937", "lewis k rockefeller ( r )", "november 2 , 1937"], ["massachusetts 7th", "william p connery , jr ( d )", "died june 15 , 1937", "lawrence j connery ( d )", "september 28 , 1937"], ["new york 17th", "theodore a peyser ( d )", "died august 8 , 1937", "bruce f barton ( r )", "november 2 , 1937"], ["oklahoma 5th", "robert p hill ( d )", "died october 29 , 1937", "gomer griffith smith ( d )", "december 10 , 1937"], ["new jersey 9th", "edward a kenney ( d )", "died january 27 , 1938", "vacant until the next congress", "vacant until the next congress"], ["california 17th", "charles j colden ( d )", "died april 15 , 1938", "vacant until the next congress", "vacant until the next congress"], ["new hampshire 1st", "arthur b jenks ( r )", "lost contested election june 9 , 1938", "alphonse roy ( d )", "june 9 , 1938"], ["south carolina 6th", "allard h gasque ( d )", "died june 17 , 1938", "elizabeth hawley gasque ( d )", "september 13 , 1937"], ["new york 1st", "robert l bacon ( r )", "died september 12 , 1938", "vacant until the next congress", "vacant until the next congress"], ["resident commissioner of the philippines", "quintin paredes ( nac )", "resigned september 29 , 1938", "joaqu\u00e3\u00adn miguel elizalde ( nac )", "september 29 , 1938"], ["new york 15th", "john j boylan ( d )", "died october 5 , 1938", "vacant until the next congress", "vacant until the next congress"], ["new york 42nd", "james m mead ( d )", "resigned december 2 , 1938 to run for the us senate", "vacant until the next congress", "vacant until the next congress"]], "query": "eq { count { filter_eq { filter_eq { all_rows ; date successor seated ; november } ; successor ; ( r ) } } ; 2 } = true", "question": "among the november 1937 dates of 75th united states congress seating , two of the successors were republicans ( r ) ."}, {"topic": "2003 new england patriots season", "wiki": "https://en.wikipedia.org/wiki/2003_New_England_Patriots_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10716158-1.html.csv", "action": "count", "sent": "three of the players had the position \" defensive tackle . \" .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "defensive tackle", "result": "3", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "defensive tackle"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to defensive tackle .", "tostr": "filter_eq { all_rows ; position ; defensive tackle }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; position ; defensive tackle } }", "tointer": "select the rows whose position record fuzzily matches to defensive tackle . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; position ; defensive tackle } } ; 3 } = true", "tointer": "select the rows whose position record fuzzily matches to defensive tackle . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; position ; defensive tackle } } ; 3 } = true", "interpret": "select the rows whose position record fuzzily matches to defensive tackle . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "position_5": 5, "defensive tackle_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "position_5": "position", "defensive tackle_6": "defensive tackle", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "position_5": [0], "defensive tackle_6": [0], "3_7": [2]}, "table_header": ["round", "overall", "player", "position", "college"], "table_cont": [["1", "13", "ty warren", "defensive tackle", "texas a & m"], ["2", "36", "eugene wilson", "cornerback", "illinois"], ["2", "45", "bethel johnson", "wide receiver", "texas a & m"], ["4", "117", "dan klecko", "defensive tackle", "temple"], ["4", "120", "asante samuel", "cornerback", "central florida"], ["5", "164", "dan koppen", "center", "boston college"], ["6", "201", "kliff kingsbury", "quarterback", "texas tech"], ["7", "234", "spencer nead", "tight end", "byu"], ["7", "239", "tully banta - cain", "linebacker", "california"], ["7", "243", "ethan kelley", "defensive tackle", "baylor"]], "query": "eq { count { filter_eq { all_rows ; position ; defensive tackle } } ; 3 } = true", "question": "three of the players had the position \" defensive tackle . \" ."}, {"topic": "virginia derby", "wiki": "https://en.wikipedia.org/wiki/Virginia_Derby", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12262345-1.html.csv", "action": "majority", "sent": "most of the virginia derby winners finished in 2 minutes or more .", "annotation": {"scope": "all", "col": "7", "most_or_all": "most", "criterion": "greater_than_eq", "value": "2:00.00", "subset": null}, "logic": {"func": "most_greater_eq", "args": ["all_rows", "time", "2:00.00"], "result": true, "ind": 0, "tointer": "for the time records of all rows , most of them are greater than or equal to 2:00.00 .", "tostr": "most_greater_eq { all_rows ; time ; 2:00.00 } = true"}, "logic_str": "most_greater_eq { all_rows ; time ; 2:00.00 } = true", "interpret": "for the time records of all rows , most of them are greater than or equal to 2:00.00 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_eq_0": 0, "result_1": 1, "all_rows_2": 2, "time_3": 3, "2:00.00_4": 4}, "g_ids_features": {"most_greater_eq_0": "most_greater_eq", "result_1": "true", "all_rows_2": "all_rows", "time_3": "time", "2:00.00_4": "2:00.00"}, "g_adj": {"most_greater_eq_0": [1], "result_1": [], "all_rows_2": [0], "time_3": [0], "2:00.00_4": [0]}, "table_header": ["year", "winner", "jockey", "trainer", "owner", "distance ( miles )", "time"], "table_cont": [["2013", "war dancer", "alan garcia", "kenneth g mcpeek", "magdalena racing", "1 - 1 / 4", "2:03.57"], ["2012", "silver max", "robby albarado", "dale l romans", "bacon / wells", "1 - 1 / 4", "2:04.05"], ["2011", "air support", "alex solis", "shug mcgaughey", "stuart janney iii", "1 - 1 / 4", "2:00.80"], ["2010", "paddy o'prado", "kent j desormeaux", "dale l romans", "winchell thoroughbreds", "1 - 1 / 4", "2:02.58"], ["2009", "battle of hastings", "tyler baze", "jeff mullins", "michael house", "1 - 1 / 4", "2:03.29"], ["2008", "gio ponti", "garrett gomez", "christophe clement", "castleton lyons", "1 - 1 / 4", "2:02.22"], ["2007", "red giant", "horacio karamanos", "todd a pletcher", "peachtree stable", "1 - 1 / 4", "1:59.62"], ["2006", "go between", "garrett k gomez", "william i mott", "peter vegso", "1 - 1 / 4", "1:59.74"], ["2005", "english channel", "john r velazquez", "todd a pletcher", "james t scatuorchio", "1 - 1 / 4", "2:02.57"], ["2004", "kitten 's joy", "edgar s prado", "dale l romans", "ken and sarah ramsey", "1 - 1 / 4", "2:01.22"], ["2003", "silver tree", "edgar s prado", "william i mott", "peter vegso", "1 - 1 / 4", "2:01.11"], ["2002", "orchard park", "edgar s prado", "william i mott", "peter vegso", "1 - 1 / 4", "2:03.10"], ["2001", "potaro", "brent bartram", "jonathan sheppard", "augustin stable", "1 - 1 / 4", "2:02.18"], ["2000", "lightning paces", "greg hutton", "john j robb", "tulip hill farm", "1 - 1 / 4", "2:02.18"], ["1999", "phi beta doc", "ramon dominguez", "robert w leonard", "dennis foster / r leonard", "1 - 1 / 4", "1:59.97"], ["1998", "crowd pleaser", "jean - luc samyn", "jonathan sheppard", "augustin stable", "1 - 1 / 4", "2:00.28"]], "query": "most_greater_eq { all_rows ; time ; 2:00.00 } = true", "question": "most of the virginia derby winners finished in 2 minutes or more ."}, {"topic": "1939 vfl season", "wiki": "https://en.wikipedia.org/wiki/1939_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10806852-9.html.csv", "action": "aggregation", "sent": "the average crowd size during all games of the 1939 vfl season was 13916 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "13916", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "crowd"], "result": "13916", "ind": 0, "tostr": "avg { all_rows ; crowd }"}, "13916"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; crowd } ; 13916 } = true", "tointer": "the average of the crowd record of all rows is 13916 ."}, "logic_str": "round_eq { avg { all_rows ; crowd } ; 13916 } = true", "interpret": "the average of the crowd record of all rows is 13916 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "crowd_4": 4, "13916_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "crowd_4": "crowd", "13916_5": "13916"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "crowd_4": [0], "13916_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "12.14 ( 86 )", "st kilda", "19.16 ( 130 )", "western oval", "13500", "17 june 1939"], ["carlton", "19.19 ( 133 )", "melbourne", "15.13 ( 103 )", "princes park", "20000", "17 june 1939"], ["south melbourne", "15.18 ( 108 )", "hawthorn", "12.14 ( 86 )", "lake oval", "9000", "17 june 1939"], ["richmond", "12.22 ( 94 )", "geelong", "9.15 ( 69 )", "punt road oval", "17000", "17 june 1939"], ["fitzroy", "11.15 ( 81 )", "essendon", "13.12 ( 90 )", "brunswick street oval", "10000", "17 june 1939"], ["north melbourne", "10.18 ( 78 )", "collingwood", "14.21 ( 105 )", "arden street oval", "14000", "17 june 1939"]], "query": "round_eq { avg { all_rows ; crowd } ; 13916 } = true", "question": "the average crowd size during all games of the 1939 vfl season was 13916 ."}, {"topic": "2008 nascar craftsman truck series", "wiki": "https://en.wikipedia.org/wiki/2008_NASCAR_Craftsman_Truck_Series", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14292964-22.html.csv", "action": "count", "sent": "four of the trucks in the 2008 nascar craftsman truck series were made by toyota .", "annotation": {"scope": "all", "criterion": "equal", "value": "toyota", "result": "4", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "make", "toyota"], "result": null, "ind": 0, "tointer": "select the rows whose make record fuzzily matches to toyota .", "tostr": "filter_eq { all_rows ; make ; toyota }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; make ; toyota } }", "tointer": "select the rows whose make record fuzzily matches to toyota . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; make ; toyota } } ; 4 } = true", "tointer": "select the rows whose make record fuzzily matches to toyota . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; make ; toyota } } ; 4 } = true", "interpret": "select the rows whose make record fuzzily matches to toyota . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "make_5": 5, "toyota_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "make_5": "make", "toyota_6": "toyota", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "make_5": [0], "toyota_6": [0], "4_7": [2]}, "table_header": ["pos", "car", "driver", "make", "team"], "table_cont": [["1", "5", "mike skinner", "toyota", "bill davis racing"], ["2", "99", "erik darnell", "ford", "roush fenway racing"], ["3", "88", "matt crafton", "chevrolet", "thorsport racing"], ["4", "15", "john andretti", "toyota", "billy ballew motorsports"], ["5", "33", "ron hornaday", "chevrolet", "kevin harvick incorporated"], ["6", "51", "kyle busch", "toyota", "billy ballew motorsports"], ["7", "40", "jeff green", "chevrolet", "key motorsports"], ["8", "7", "t j bell", "chevrolet", "the racer 's group"], ["9", "30", "todd bodine", "toyota", "germain racing"], ["10", "81", "donny lia r", "chevrolet", "randy moss motorsports"]], "query": "eq { count { filter_eq { all_rows ; make ; toyota } } ; 4 } = true", "question": "four of the trucks in the 2008 nascar craftsman truck series were made by toyota ."}, {"topic": "indianapolis colts draft history", "wiki": "https://en.wikipedia.org/wiki/Indianapolis_Colts_draft_history", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13312898-46.html.csv", "action": "unique", "sent": "e g green was the only player that the indianapolis colts drafted from florida state college .", "annotation": {"scope": "all", "row": "3", "col": "6", "col_other": "4", "criterion": "equal", "value": "florida state", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "florida state"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to florida state .", "tostr": "filter_eq { all_rows ; college ; florida state }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; college ; florida state } }", "tointer": "select the rows whose college record fuzzily matches to florida state . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "florida state"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to florida state .", "tostr": "filter_eq { all_rows ; college ; florida state }"}, "name"], "result": "e g green", "ind": 2, "tostr": "hop { filter_eq { all_rows ; college ; florida state } ; name }"}, "e g green"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; college ; florida state } ; name } ; e g green }", "tointer": "the name record of this unqiue row is e g green ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; college ; florida state } } ; eq { hop { filter_eq { all_rows ; college ; florida state } ; name } ; e g green } } = true", "tointer": "select the rows whose college record fuzzily matches to florida state . there is only one such row in the table . the name record of this unqiue row is e g green ."}, "logic_str": "and { only { filter_eq { all_rows ; college ; florida state } } ; eq { hop { filter_eq { all_rows ; college ; florida state } ; name } ; e g green } } = true", "interpret": "select the rows whose college record fuzzily matches to florida state . there is only one such row in the table . the name record of this unqiue row is e g green .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "college_7": 7, "florida state_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "e g green_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "college_7": "college", "florida state_8": "florida state", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "e g green_10": "e g green"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "college_7": [0], "florida state_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "e g green_10": [3]}, "table_header": ["round", "pick", "overall", "name", "position", "college"], "table_cont": [["1", "1", "1", "peyton manning", "quarterback", "tennessee"], ["2", "2", "32", "jerome pathon", "wide receiver", "washington"], ["3", "10", "71", "e g green", "wide receiver", "florida state"], ["4", "1", "93", "steve mckinney", "guard", "texas a & m"], ["5", "12", "135", "antony jordan", "linebacker", "vanderbilt"], ["7", "1", "190", "aaron taylor", "guard", "nebraska"], ["7", "42", "231", "corey gaines", "defensive back", "tennessee"]], "query": "and { only { filter_eq { all_rows ; college ; florida state } } ; eq { hop { filter_eq { all_rows ; college ; florida state } ; name } ; e g green } } = true", "question": "e g green was the only player that the indianapolis colts drafted from florida state college ."}, {"topic": "list of intel core i7 microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_Intel_Core_i7_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18823880-12.html.csv", "action": "comparative", "sent": "the core i7 - 2649 m has a higher frequency than the core i7 - 2629 m.", "annotation": {"row_1": "6", "row_2": "5", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "model number", "core i7 - 2649 m"], "result": null, "ind": 0, "tointer": "select the rows whose model number record fuzzily matches to core i7 - 2649 m .", "tostr": "filter_eq { all_rows ; model number ; core i7 - 2649 m }"}, "frequency"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; model number ; core i7 - 2649 m } ; frequency }", "tointer": "select the rows whose model number record fuzzily matches to core i7 - 2649 m . take the frequency record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "model number", "core i7 - 2629 m"], "result": null, "ind": 1, "tointer": "select the rows whose model number record fuzzily matches to core i7 - 2629 m .", "tostr": "filter_eq { all_rows ; model number ; core i7 - 2629 m }"}, "frequency"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; model number ; core i7 - 2629 m } ; frequency }", "tointer": "select the rows whose model number record fuzzily matches to core i7 - 2629 m . take the frequency record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; model number ; core i7 - 2649 m } ; frequency } ; hop { filter_eq { all_rows ; model number ; core i7 - 2629 m } ; frequency } } = true", "tointer": "select the rows whose model number record fuzzily matches to core i7 - 2649 m . take the frequency record of this row . select the rows whose model number record fuzzily matches to core i7 - 2629 m . take the frequency record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; model number ; core i7 - 2649 m } ; frequency } ; hop { filter_eq { all_rows ; model number ; core i7 - 2629 m } ; frequency } } = true", "interpret": "select the rows whose model number record fuzzily matches to core i7 - 2649 m . take the frequency record of this row . select the rows whose model number record fuzzily matches to core i7 - 2629 m . take the frequency record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "model number_7": 7, "core i7 - 2649 m_8": 8, "frequency_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "model number_11": 11, "core i7 - 2629 m_12": 12, "frequency_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "model number_7": "model number", "core i7 - 2649 m_8": "core i7 - 2649 m", "frequency_9": "frequency", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "model number_11": "model number", "core i7 - 2629 m_12": "core i7 - 2629 m", "frequency_13": "frequency"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "model number_7": [0], "core i7 - 2649 m_8": [0], "frequency_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "model number_11": [1], "core i7 - 2629 m_12": [1], "frequency_13": [3]}, "table_header": ["model number", "sspec number", "cores", "frequency", "turbo", "l2 cache", "l3 cache", "gpu model", "gpu frequency", "socket", "i / o bus", "release date", "part number ( s )", "release price ( usd )"], "table_cont": [["standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power", "standard power"], ["core i7 - 2620 m", "sr03f ( j1 ) sr041 ( j1 )", "2", "2.7 ghz", "5 / 7", "2 256 kb", "4 mb", "hd graphics 3000", "650 - 1300 mhz", "socketg2 bga - 1023", "dmi 2.0", "february 2011", "ff8062700838809av8062700839009", "346"], ["core i7 - 2640 m", "sr03r ( j1 ) sr043 ( j1 )", "2", "2.8 ghz", "5 / 7", "2 256 kb", "4 mb", "hd graphics 3000", "650 - 1300 mhz", "socket g2bga - 1023", "dmi 2.0", "september 2011", "ff8062700838905av8062700839107", "346"], ["low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power", "low power"], ["core i7 - 2629 m", "sr04d ( j1 )", "2", "2.1 ghz", "6 / 9", "2 256 kb", "4 mb", "hd graphics 3000", "500 - 1100 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062700851111", "317"], ["core i7 - 2649 m", "sr04n ( j1 )", "2", "2.3 ghz", "6 / 9", "2 256 kb", "4 mb", "hd graphics 3000", "500 - 1100 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062700850010", "346"], ["low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded", "low power , embedded"], ["core i7 - 2655le", "sr078 ( d2 )", "2", "2.2 ghz", "5 / 7", "2 256 kb", "4 mb", "hd graphics 3000", "650 - 1000 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062700849508", "346"], ["ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power", "ultra - low power"], ["core i7 - 2617 m", "sr03t ( j1 )", "2", "1.5 ghz", "8 / 11", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 950 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062701040904", "289"], ["core i7 - 2637 m", "sr0d3 ( j1 )", "2", "1.7 ghz", "8 / 11", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 1200 mhz", "bga - 1023", "dmi 2.0", "june 2011", "av8062701041105", "289"], ["core i7 - 2657 m", "sr03s ( j1 )", "2", "1.6 ghz", "8 / 11", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 1000 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062701040804", "317"], ["core i7 - 2677 m", "sr0d2 ( j1 )", "2", "1.8 ghz", "8 / 11", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 1200 mhz", "bga - 1023", "dmi 2.0", "june 2011", "av8062701041005", "317"], ["ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded", "ultra - low power , embedded"], ["core i7 - 2610ue", "sr079 ( d2 )", "2", "1.5 ghz", "6 / 9", "2 256 kb", "4 mb", "hd graphics 3000", "350 - 850 mhz", "bga - 1023", "dmi 2.0", "february 2011", "av8062700849607", "317"]], "query": "greater { hop { filter_eq { all_rows ; model number ; core i7 - 2649 m } ; frequency } ; hop { filter_eq { all_rows ; model number ; core i7 - 2629 m } ; frequency } } = true", "question": "the core i7 - 2649 m has a higher frequency than the core i7 - 2629 m."}, {"topic": "list of presidents of fifa", "wiki": "https://en.wikipedia.org/wiki/List_of_presidents_of_FIFA", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11052-1.html.csv", "action": "count", "sent": "two presidents of fifa first took office in the 1950s decade .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "195", "result": "2", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "took office", "195"], "result": null, "ind": 0, "tointer": "select the rows whose took office record fuzzily matches to 195 .", "tostr": "filter_eq { all_rows ; took office ; 195 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; took office ; 195 } }", "tointer": "select the rows whose took office record fuzzily matches to 195 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; took office ; 195 } } ; 2 } = true", "tointer": "select the rows whose took office record fuzzily matches to 195 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; took office ; 195 } } ; 2 } = true", "interpret": "select the rows whose took office record fuzzily matches to 195 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "took office_5": 5, "195_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "took office_5": "took office", "195_6": "195", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "took office_5": [0], "195_6": [0], "2_7": [2]}, "table_header": ["presidency", "president", "date of birth", "took office", "left office"], "table_cont": [["1", "robert gu\u00e9rin", "1876", "1904", "1906"], ["2", "daniel burley woolfall", "june 15 , 1852", "1906", "1918"], ["3", "jules rimet", "october 14 , 1873", "1921", "1954"], ["4", "rodolphe seeldrayers", "december 16 , 1876", "1954", "1955"], ["5", "arthur drewry", "march 3 , 1891", "1955", "1961"], ["6", "stanley rous", "april 25 , 1895", "1961", "1974"], ["7", "jo\u00e3o havelange", "may 8 , 1916", "1974", "1998"], ["8", "sepp blatter", "march 10 , 1936", "1998", "incumbent"]], "query": "eq { count { filter_eq { all_rows ; took office ; 195 } } ; 2 } = true", "question": "two presidents of fifa first took office in the 1950s decade ."}, {"topic": "lark rise to candleford ( tv series )", "wiki": "https://en.wikipedia.org/wiki/Lark_Rise_to_Candleford_%28TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-15026994-3.html.csv", "action": "aggregation", "sent": "the second season of the tv series lark rise to candleford had an average viewing figure per episode of 6.40 million viewers .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "6.40 million", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "viewing figure"], "result": "6.40 million", "ind": 0, "tostr": "avg { all_rows ; viewing figure }"}, "6.40 million"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; viewing figure } ; 6.40 million } = true", "tointer": "the average of the viewing figure record of all rows is 6.40 million ."}, "logic_str": "round_eq { avg { all_rows ; viewing figure } ; 6.40 million } = true", "interpret": "the average of the viewing figure record of all rows is 6.40 million .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "viewing figure_4": 4, "6.40 million_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "viewing figure_4": "viewing figure", "6.40 million_5": "6.40 million"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "viewing figure_4": [0], "6.40 million_5": [1]}, "table_header": ["", "episode", "writer", "director", "original air date", "viewing figure"], "table_cont": [["11", "episode 1 ( 75 - minute christmas special )", "bill gallagher", "alan grint", "21 december 2008", "6.58 million"], ["12", "episode 2", "bill gallagher", "alan grint", "4 january 2009", "6.53 million"], ["13", "episode 3", "bill gallagher", "alan grint", "11 january 2009", "6.13 million"], ["14", "episode 4", "carolyn bonnyman", "maurice phillips", "18 january 2009", "6.49 million"], ["15", "episode 5", "bill gallagher", "julian holmes", "25 january 2009", "6.31 million"], ["16", "episode 6", "gaby chiappe", "moira armstrong", "1 february 2009", "6.54 million"], ["17", "episode 7", "gaby chiappe", "sue tully", "8 february 2009", "6.14 million"], ["18", "episode 8", "kate gartside", "alan grint", "15 february 2009", "6.20 million"], ["19", "episode 9", "kate gartside", "david tucker", "22 february 2009", "6.32 million"], ["20", "episode 10", "carolyn bonnyman", "patrick lau", "1 march 2009", "6.34 million"], ["21", "episode 11", "gaby chiappe", "paul marcus", "8 march 2009", "6.78 million"]], "query": "round_eq { avg { all_rows ; viewing figure } ; 6.40 million } = true", "question": "the second season of the tv series lark rise to candleford had an average viewing figure per episode of 6.40 million viewers ."}, {"topic": "northland conference ( ihsaa )", "wiki": "https://en.wikipedia.org/wiki/Northland_Conference_%28IHSAA%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18710130-1.html.csv", "action": "majority", "sent": "most of the schools joined the northland conference ( ihsaa ) in 1998 .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "1998", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "year joined", "1998"], "result": true, "ind": 0, "tointer": "for the year joined records of all rows , most of them are equal to 1998 .", "tostr": "most_eq { all_rows ; year joined ; 1998 } = true"}, "logic_str": "most_eq { all_rows ; year joined ; 1998 } = true", "interpret": "for the year joined records of all rows , most of them are equal to 1998 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "year joined_3": 3, "1998_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "year joined_3": "year joined", "1998_4": "1998"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "year joined_3": [0], "1998_4": [0]}, "table_header": ["school", "location", "mascot", "county", "year joined", "previous conference", "year left", "conference joined"], "table_cont": [["argos", "argos , in", "dragons", "50 marshall", "1998", "independent", "2008", "independent"], ["elkhart christian", "elkhart , in", "eagles", "20 elkhart", "2004", "new ihsaa school", "2008", "independent"], ["marquette catholic", "michigan city", "blazers", "46 laporte", "1998", "independent", "2007", "greater south shore"], ["oregon - davis", "hamlet , in", "bobcats", "75 starke", "1998", "independent", "2008", "independent"], ["river forest", "lake station", "ingots", "45 lake", "1998", "northwest hoosier conference", "2007", "greater south shore"], ["south central ( union mills )", "union mills", "satellites", "46 la porte", "1998", "independent", "2003", "porter county"], ["westville", "westville , in", "blackhawks", "46 la porte", "1998", "porter county", "2008", "independent"]], "query": "most_eq { all_rows ; year joined ; 1998 } = true", "question": "most of the schools joined the northland conference ( ihsaa ) in 1998 ."}, {"topic": "2007 eneco tour", "wiki": "https://en.wikipedia.org/wiki/2007_Eneco_Tour", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12608303-21.html.csv", "action": "count", "sent": "nick nuyens managed to earn the general classification five times .", "annotation": {"scope": "all", "criterion": "equal", "value": "nick nuyens", "result": "5", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "general classification", "nick nuyens"], "result": null, "ind": 0, "tointer": "select the rows whose general classification record fuzzily matches to nick nuyens .", "tostr": "filter_eq { all_rows ; general classification ; nick nuyens }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; general classification ; nick nuyens } }", "tointer": "select the rows whose general classification record fuzzily matches to nick nuyens . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; general classification ; nick nuyens } } ; 5 } = true", "tointer": "select the rows whose general classification record fuzzily matches to nick nuyens . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; general classification ; nick nuyens } } ; 5 } = true", "interpret": "select the rows whose general classification record fuzzily matches to nick nuyens . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "general classification_5": 5, "nick nuyens_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "general classification_5": "general classification", "nick nuyens_6": "nick nuyens", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "general classification_5": [0], "nick nuyens_6": [0], "5_7": [2]}, "table_header": ["stage", "winner", "general classification", "points classification", "team classification"], "table_cont": [["p", "michiel elijzen", "michiel elijzen", "not awarded", "cofidis"], ["1", "nick nuyens", "nick nuyens", "nick nuyens", "predictor - lotto"], ["2", "mark cavendish", "nick nuyens", "nick nuyens", "predictor - lotto"], ["3", "robbie mcewen", "nick nuyens", "mark cavendish", "predictor - lotto"], ["4", "wouter weylandt", "nick nuyens", "mark cavendish", "predictor - lotto"], ["5", "luciano pagliarini", "nick nuyens", "mark cavendish", "predictor - lotto"], ["6", "pablo lastras", "thomas dekker", "mark cavendish", "predictor - lotto"], ["7", "s\u00e9bastien rosseler", "iv\u00e1n guti\u00e9rrez", "mark cavendish", "quick step - innergetic"], ["final", "final", "iv\u00e1n guti\u00e9rrez", "mark cavendish", "quick step - innergetic"]], "query": "eq { count { filter_eq { all_rows ; general classification ; nick nuyens } } ; 5 } = true", "question": "nick nuyens managed to earn the general classification five times ."}, {"topic": "italy in the eurovision song contest 2011", "wiki": "https://en.wikipedia.org/wiki/Italy_in_the_Eurovision_Song_Contest_2011", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29857115-4.html.csv", "action": "count", "sent": "three of the singers on the 2nd evening were n/a .", "annotation": {"scope": "all", "criterion": "equal", "value": "n / a", "result": "3", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "2nd evening", "n / a"], "result": null, "ind": 0, "tointer": "select the rows whose 2nd evening record fuzzily matches to n / a .", "tostr": "filter_eq { all_rows ; 2nd evening ; n / a }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; 2nd evening ; n / a } }", "tointer": "select the rows whose 2nd evening record fuzzily matches to n / a . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; 2nd evening ; n / a } } ; 3 } = true", "tointer": "select the rows whose 2nd evening record fuzzily matches to n / a . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; 2nd evening ; n / a } } ; 3 } = true", "interpret": "select the rows whose 2nd evening record fuzzily matches to n / a . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "2nd evening_5": 5, "n / a_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "2nd evening_5": "2nd evening", "n / a_6": "n / a", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "2nd evening_5": [0], "n / a_6": [0], "3_7": [2]}, "table_header": ["position", "singer", "2nd evening", "3rd evening", "4th evening", "5th evening"], "table_cont": [["1", "raphael gualazzi", "pass", "n / a", "1st place", "selected as esc entrant"], ["2", "micaela", "n / a", "pass", "2nd place", "n / a"], ["3", "roberto amad\u00e3 \u00a8", "n / a", "pass", "3rd place", "n / a"], ["4", "serena abrami", "pass", "n / a", "4th place", "n / a"], ["5 - 8", "anansi", "out", "out", "out", "n / a"], ["5 - 8", "gabriella ferrone", "out", "out", "out", "n / a"], ["5 - 8", "marco menichini", "n / a", "out", "out", "n / a"]], "query": "eq { count { filter_eq { all_rows ; 2nd evening ; n / a } } ; 3 } = true", "question": "three of the singers on the 2nd evening were n/a ."}, {"topic": "goran relji\u0107", "wiki": "https://en.wikipedia.org/wiki/Goran_Relji%C4%87", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17302298-2.html.csv", "action": "majority", "sent": "the majority of goran relji\u0107 's mma fights resulted in wins for goran relji\u0107 .", "annotation": {"scope": "all", "col": "1", "most_or_all": "most", "criterion": "equal", "value": "win", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "res", "win"], "result": true, "ind": 0, "tointer": "for the res records of all rows , most of them fuzzily match to win .", "tostr": "most_eq { all_rows ; res ; win } = true"}, "logic_str": "most_eq { all_rows ; res ; win } = true", "interpret": "for the res records of all rows , most of them fuzzily match to win .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "res_3": 3, "win_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "res_3": "res", "win_4": "win"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "res_3": [0], "win_4": [0]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "location"], "table_cont": [["win", "12 - 4", "nikolay osokin", "ko ( liver kick )", "draka 2013", "1", "vladivostok , russia"], ["loss", "11 - 4", "jan b\u0142achowicz", "decision ( unanimous )", "ksw 22", "3", "warsaw , poland"], ["win", "11 - 3", "gadji magomedov", "decision ( unanimous )", "draka 8", "4", "nakhodka , russia"], ["win", "10 - 3", "rogent lloret", "tko ( punches )", "s & hc 5", "1", "geneva , switzerland"], ["win", "9 - 3", "goran scepanovic", "tko ( punches )", "bilic - eric security fight night 6", "1", "zagreb , croatia"], ["loss", "8 - 3", "krzysztof soszynski", "decision ( unanimous )", "ufc 122", "3", "oberhausen , germany"], ["loss", "8 - 2", "kendall grove", "decision ( split )", "ufc 116", "3", "nevada , united states"], ["loss", "8 - 1", "cb dollaway", "decision ( unanimous )", "ufc 110", "3", "sydney , australia"], ["win", "8 - 0", "wilson gouveia", "tko ( punches )", "ufc 84", "2", "nevada , united states"], ["win", "7 - 0", "waldemar golinski", "decision ( unanimous )", "be 2 - boxing explosion 2", "2", "celje , slovenia"], ["win", "6 - 0", "tomek smykowski", "submission ( armbar )", "cf - the real deal", "1", "maribor , slovenia"], ["win", "5 - 0", "petr kelner", "submission ( armbar )", "ultimate fight - challenge 1", "2", "samobor , croatia"], ["win", "4 - 0", "bojan mihajlovic", "submission ( kimura )", "ns 3 - noc skorpiona 3", "1", "\u0161ibenik , croatia"], ["win", "3 - 0", "nenad djuric", "tko ( punches )", "ns 1 - noc skorpiona 1", "2", "zadar , croatia"], ["win", "2 - 0", "andrej bregar", "submission ( arm triangle choke )", "trboulje 1 - croatia vs slovenia", "1", "ljubljana , slovenia"], ["win", "1 - 0", "bojan spalevic", "submission ( armbar )", "ufd - ultimate fight dubravc", "1", "zagreb , croatia"]], "query": "most_eq { all_rows ; res ; win } = true", "question": "the majority of goran relji\u0107 's mma fights resulted in wins for goran relji\u0107 ."}, {"topic": "united states house of representatives elections , 1978", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1978", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341663-26.html.csv", "action": "comparative", "sent": "gene taylor was first elected to the united states house of representatives four years before harold volkmer .", "annotation": {"row_1": "4", "row_2": "5", "col": "4", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "4 years", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "gene taylor"], "result": null, "ind": 0, "tointer": "select the rows whose incumbent record fuzzily matches to gene taylor .", "tostr": "filter_eq { all_rows ; incumbent ; gene taylor }"}, "first elected"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; incumbent ; gene taylor } ; first elected }", "tointer": "select the rows whose incumbent record fuzzily matches to gene taylor . take the first elected record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "harold volkmer"], "result": null, "ind": 1, "tointer": "select the rows whose incumbent record fuzzily matches to harold volkmer .", "tostr": "filter_eq { all_rows ; incumbent ; harold volkmer }"}, "first elected"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; incumbent ; harold volkmer } ; first elected }", "tointer": "select the rows whose incumbent record fuzzily matches to harold volkmer . take the first elected record of this row ."}], "result": "-4 years", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; incumbent ; gene taylor } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; harold volkmer } ; first elected } }"}, "-4 years"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; incumbent ; gene taylor } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; harold volkmer } ; first elected } } ; -4 years } = true", "tointer": "select the rows whose incumbent record fuzzily matches to gene taylor . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to harold volkmer . take the first elected record of this row . the second record is 4 years larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; incumbent ; gene taylor } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; harold volkmer } ; first elected } } ; -4 years } = true", "interpret": "select the rows whose incumbent record fuzzily matches to gene taylor . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to harold volkmer . take the first elected record of this row . the second record is 4 years larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"str_eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "incumbent_8": 8, "gene taylor_9": 9, "first elected_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "incumbent_12": 12, "harold volkmer_13": 13, "first elected_14": 14, "-4 years_15": 15}, "g_ids_features": {"str_eq_5": "str_eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "incumbent_8": "incumbent", "gene taylor_9": "gene taylor", "first elected_10": "first elected", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "incumbent_12": "incumbent", "harold volkmer_13": "harold volkmer", "first elected_14": "first elected", "-4 years_15": "-4 years"}, "g_adj": {"str_eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "incumbent_8": [0], "gene taylor_9": [0], "first elected_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "incumbent_12": [1], "harold volkmer_13": [1], "first elected_14": [3], "-4 years_15": [5]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["missouri 2", "robert a young", "democratic", "1976", "re - elected", "robert a young ( d ) 56.4 % bob chase ( r ) 43.6 %"], ["missouri 3", "dick gephardt", "democratic", "1976", "re - elected", "dick gephardt ( d ) 81.9 % lee buchschacher ( r ) 18.1 %"], ["missouri 4", "ike skelton", "democratic", "1976", "re - elected", "ike skelton ( d ) 72.8 % bill baker ( r ) 27.2 %"], ["missouri 7", "gene taylor", "republican", "1972", "re - elected", "gene taylor ( r ) 61.2 % jim thomas ( d ) 38.8 %"], ["missouri 9", "harold volkmer", "democratic", "1976", "re - elected", "harold volkmer ( d ) 74.7 % jerry dent ( r ) 25.3 %"]], "query": "eq { diff { hop { filter_eq { all_rows ; incumbent ; gene taylor } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; harold volkmer } ; first elected } } ; -4 years } = true", "question": "gene taylor was first elected to the united states house of representatives four years before harold volkmer ."}, {"topic": "binghamton dusters", "wiki": "https://en.wikipedia.org/wiki/Binghamton_Dusters", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2509505-1.html.csv", "action": "aggregation", "sent": "the binghamton dusters tied an average of 4.16 games per season .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "4.16", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "tied"], "result": "4.16", "ind": 0, "tostr": "avg { all_rows ; tied }"}, "4.16"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; tied } ; 4.16 } = true", "tointer": "the average of the tied record of all rows is 4.16 ."}, "logic_str": "round_eq { avg { all_rows ; tied } ; 4.16 } = true", "interpret": "the average of the tied record of all rows is 4.16 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "tied_4": 4, "4.16_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "tied_4": "tied", "4.16_5": "4.16"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "tied_4": [0], "4.16_5": [1]}, "table_header": ["season", "games", "won", "lost", "tied", "points", "goals for", "goals against", "standing"], "table_cont": [["1973 - 74", "74", "28", "41", "5", "61", "274", "352", "6th , nahl"], ["1974 - 75", "74", "39", "32", "3", "81", "293", "286", "3rd , nahl"], ["1975 - 76", "74", "27", "45", "2", "56", "258", "337", "5th , west"], ["1976 - 77", "74", "41", "31", "2", "84", "363", "324", "3rd , nahl"], ["1977 - 78", "81", "27", "46", "8", "62", "287", "377", "4th , north"], ["1978 - 79", "79", "32", "42", "5", "69", "300", "320", "3rd , south"]], "query": "round_eq { avg { all_rows ; tied } ; 4.16 } = true", "question": "the binghamton dusters tied an average of 4.16 games per season ."}, {"topic": "list of intel itanium microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_Intel_Itanium_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12740151-8.html.csv", "action": "unique", "sent": "the model number itanium 2 9010 is the only intel itanium microprocessor one with a single core .", "annotation": {"scope": "all", "row": "1", "col": "7", "col_other": "1", "criterion": "equal", "value": "1", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "cores", "1"], "result": null, "ind": 0, "tointer": "select the rows whose cores record is equal to 1 .", "tostr": "filter_eq { all_rows ; cores ; 1 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; cores ; 1 } }", "tointer": "select the rows whose cores record is equal to 1 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "cores", "1"], "result": null, "ind": 0, "tointer": "select the rows whose cores record is equal to 1 .", "tostr": "filter_eq { all_rows ; cores ; 1 }"}, "model number"], "result": "itanium 2 9010", "ind": 2, "tostr": "hop { filter_eq { all_rows ; cores ; 1 } ; model number }"}, "itanium 2 9010"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; cores ; 1 } ; model number } ; itanium 2 9010 }", "tointer": "the model number record of this unqiue row is itanium 2 9010 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; cores ; 1 } } ; eq { hop { filter_eq { all_rows ; cores ; 1 } ; model number } ; itanium 2 9010 } } = true", "tointer": "select the rows whose cores record is equal to 1 . there is only one such row in the table . the model number record of this unqiue row is itanium 2 9010 ."}, "logic_str": "and { only { filter_eq { all_rows ; cores ; 1 } } ; eq { hop { filter_eq { all_rows ; cores ; 1 } ; model number } ; itanium 2 9010 } } = true", "interpret": "select the rows whose cores record is equal to 1 . there is only one such row in the table . the model number record of this unqiue row is itanium 2 9010 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "cores_7": 7, "1_8": 8, "str_eq_3": 3, "str_hop_2": 2, "model number_9": 9, "itanium 2 9010_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "cores_7": "cores", "1_8": "1", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "model number_9": "model number", "itanium 2 9010_10": "itanium 2 9010"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "cores_7": [0], "1_8": [0], "str_eq_3": [4], "str_hop_2": [3], "model number_9": [2], "itanium 2 9010_10": [3]}, "table_header": ["model number", "clock speed", "l2", "l3", "fsb speed", "multiplier", "cores", "threads per core", "voltage", "tdp ( w )", "socket", "release date", "price ( usd )"], "table_cont": [["itanium 2 9010", "1.6 ghz", "256 kb", "6 mb", "533 mhz", "12", "1", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "696"], ["itanium 2 9015", "1.4 ghz", "256 kb", "12 mb", "400 mhz", "14", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "749"], ["itanium 2 9020", "1.42 ghz", "256 kb", "12 mb", "533 mhz", "10.5", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "910"], ["itanium 2 9030", "1.6 ghz", "256 kb", "8 mb", "533 mhz", "12", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "1552"], ["itanium 2 9040", "1.6 ghz", "256 kb", "18 mb", "533 mhz", "12", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "1980"]], "query": "and { only { filter_eq { all_rows ; cores ; 1 } } ; eq { hop { filter_eq { all_rows ; cores ; 1 } ; model number } ; itanium 2 9010 } } = true", "question": "the model number itanium 2 9010 is the only intel itanium microprocessor one with a single core ."}, {"topic": "papal election , september 1276", "wiki": "https://en.wikipedia.org/wiki/Papal_election%2C_September_1276", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16915939-1.html.csv", "action": "unique", "sent": "jo\u00e3o pedro juli\u00e3o was the only elector that was portuguese .", "annotation": {"scope": "all", "row": "1", "col": "2", "col_other": "1", "criterion": "equal", "value": "portuguese", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nationality", "portuguese"], "result": null, "ind": 0, "tointer": "select the rows whose nationality record fuzzily matches to portuguese .", "tostr": "filter_eq { all_rows ; nationality ; portuguese }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; nationality ; portuguese } }", "tointer": "select the rows whose nationality record fuzzily matches to portuguese . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nationality", "portuguese"], "result": null, "ind": 0, "tointer": "select the rows whose nationality record fuzzily matches to portuguese .", "tostr": "filter_eq { all_rows ; nationality ; portuguese }"}, "elector"], "result": "jo\u00e3o pedro juli\u00e3o", "ind": 2, "tostr": "hop { filter_eq { all_rows ; nationality ; portuguese } ; elector }"}, "jo\u00e3o pedro juli\u00e3o"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; nationality ; portuguese } ; elector } ; jo\u00e3o pedro juli\u00e3o }", "tointer": "the elector record of this unqiue row is jo\u00e3o pedro juli\u00e3o ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; nationality ; portuguese } } ; eq { hop { filter_eq { all_rows ; nationality ; portuguese } ; elector } ; jo\u00e3o pedro juli\u00e3o } } = true", "tointer": "select the rows whose nationality record fuzzily matches to portuguese . there is only one such row in the table . the elector record of this unqiue row is jo\u00e3o pedro juli\u00e3o ."}, "logic_str": "and { only { filter_eq { all_rows ; nationality ; portuguese } } ; eq { hop { filter_eq { all_rows ; nationality ; portuguese } ; elector } ; jo\u00e3o pedro juli\u00e3o } } = true", "interpret": "select the rows whose nationality record fuzzily matches to portuguese . there is only one such row in the table . the elector record of this unqiue row is jo\u00e3o pedro juli\u00e3o .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "nationality_7": 7, "portuguese_8": 8, "str_eq_3": 3, "str_hop_2": 2, "elector_9": 9, "jo\u00e3o pedro juli\u00e3o_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "nationality_7": "nationality", "portuguese_8": "portuguese", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "elector_9": "elector", "jo\u00e3o pedro juli\u00e3o_10": "jo\u00e3o pedro juli\u00e3o"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "nationality_7": [0], "portuguese_8": [0], "str_eq_3": [4], "str_hop_2": [3], "elector_9": [2], "jo\u00e3o pedro juli\u00e3o_10": [3]}, "table_header": ["elector", "nationality", "order and title", "elevated", "elevator"], "table_cont": [["jo\u00e3o pedro juli\u00e3o", "portuguese", "cardinal - bishop of frascati", "june 3 , 1273", "gregory x"], ["bertrand de saint - martin osb", "french", "cardinal - bishop of sabina", "june 3 , 1273", "gregory x"], ["simone paltineri", "n padua", "cardinal - priest of ss silvestro e martino", "december 17 , 1261", "urban iv"], ["anchero pantaleone", "french", "cardinal - priest of s prassede", "may 1262", "urban iv"], ["guillaume de bray", "french", "cardinal - priest of s marco", "may 1262", "urban iv"], ["riccardo annibaldi", "roman", "cardinal - deacon of s angelo in pescheria", "1238", "gregory ix"], ["giovanni gaetano orsini", "roman", "cardinal - deacon of s nicola in carcere tulliano", "may 28 , 1244", "innocent iv"], ["giacomo savelli", "roman", "cardinal - deacon of s maria in cosmedin", "december 17 , 1261", "urban iv"], ["goffredo da alatri", "alatri", "cardinal - deacon of s giorgio in velabro", "december 17 , 1261", "urban iv"], ["matteo orsini rosso", "roman", "cardinal - deacon of s maria in portico", "may 1262", "urban iv"]], "query": "and { only { filter_eq { all_rows ; nationality ; portuguese } } ; eq { hop { filter_eq { all_rows ; nationality ; portuguese } ; elector } ; jo\u00e3o pedro juli\u00e3o } } = true", "question": "jo\u00e3o pedro juli\u00e3o was the only elector that was portuguese ."}, {"topic": "charl schwartzel", "wiki": "https://en.wikipedia.org/wiki/Charl_Schwartzel", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1598164-9.html.csv", "action": "count", "sent": "charl schwartzel had 0 top-10 finishes at two different golf championship tournaments .", "annotation": {"scope": "all", "criterion": "equal", "value": "0", "result": "2", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "top - 10", "0"], "result": null, "ind": 0, "tointer": "select the rows whose top - 10 record is equal to 0 .", "tostr": "filter_eq { all_rows ; top - 10 ; 0 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; top - 10 ; 0 } }", "tointer": "select the rows whose top - 10 record is equal to 0 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; top - 10 ; 0 } } ; 2 } = true", "tointer": "select the rows whose top - 10 record is equal to 0 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; top - 10 ; 0 } } ; 2 } = true", "interpret": "select the rows whose top - 10 record is equal to 0 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "top - 10_5": 5, "0_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "top - 10_5": "top - 10", "0_6": "0", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "top - 10_5": [0], "0_6": [0], "2_7": [2]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "1", "1", "1", "2", "4", "4"], ["us open", "0", "0", "1", "3", "7", "6"], ["the open championship", "0", "0", "0", "4", "9", "4"], ["pga championship", "0", "0", "0", "2", "8", "5"], ["totals", "1", "1", "2", "11", "28", "19"]], "query": "eq { count { filter_eq { all_rows ; top - 10 ; 0 } } ; 2 } = true", "question": "charl schwartzel had 0 top-10 finishes at two different golf championship tournaments ."}, {"topic": "fil world luge championships 1961", "wiki": "https://en.wikipedia.org/wiki/FIL_World_Luge_Championships_1961", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11137150-4.html.csv", "action": "superlative", "sent": "west germany had the most number of silver medals among all the nations in the luge championship .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "silver"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; silver }"}, "nation"], "result": "west germany", "ind": 1, "tostr": "hop { argmax { all_rows ; silver } ; nation }"}, "west germany"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; silver } ; nation } ; west germany } = true", "tointer": "select the row whose silver record of all rows is maximum . the nation record of this row is west germany ."}, "logic_str": "eq { hop { argmax { all_rows ; silver } ; nation } ; west germany } = true", "interpret": "select the row whose silver record of all rows is maximum . the nation record of this row is west germany .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "silver_5": 5, "nation_6": 6, "west germany_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "silver_5": "silver", "nation_6": "nation", "west germany_7": "west germany"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "silver_5": [0], "nation_6": [1], "west germany_7": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "austria", "0", "0", "3", "3"], ["2", "italy", "1", "1", "0", "2"], ["3", "west germany", "0", "2", "0", "2"], ["4", "poland", "1", "0", "0", "1"], ["5", "switzerland", "1", "0", "0", "1"]], "query": "eq { hop { argmax { all_rows ; silver } ; nation } ; west germany } = true", "question": "west germany had the most number of silver medals among all the nations in the luge championship ."}, {"topic": "2008 - 09 f.c. internazionale milano season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_F.C._Internazionale_Milano_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17634886-3.html.csv", "action": "unique", "sent": "pel\u00e9 was the only player moved through a trade in the 2008 - 09 f.c. internazionale milano season .", "annotation": {"scope": "all", "row": "13", "col": "4", "col_other": "2", "criterion": "equal", "value": "trade", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "type", "trade"], "result": null, "ind": 0, "tointer": "select the rows whose type record fuzzily matches to trade .", "tostr": "filter_eq { all_rows ; type ; trade }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; type ; trade } }", "tointer": "select the rows whose type record fuzzily matches to trade . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "type", "trade"], "result": null, "ind": 0, "tointer": "select the rows whose type record fuzzily matches to trade .", "tostr": "filter_eq { all_rows ; type ; trade }"}, "name"], "result": "pel\u00e9", "ind": 2, "tostr": "hop { filter_eq { all_rows ; type ; trade } ; name }"}, "pel\u00e9"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; type ; trade } ; name } ; pel\u00e9 }", "tointer": "the name record of this unqiue row is pel\u00e9 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; type ; trade } } ; eq { hop { filter_eq { all_rows ; type ; trade } ; name } ; pel\u00e9 } } = true", "tointer": "select the rows whose type record fuzzily matches to trade . there is only one such row in the table . the name record of this unqiue row is pel\u00e9 ."}, "logic_str": "and { only { filter_eq { all_rows ; type ; trade } } ; eq { hop { filter_eq { all_rows ; type ; trade } ; name } ; pel\u00e9 } } = true", "interpret": "select the rows whose type record fuzzily matches to trade . there is only one such row in the table . the name record of this unqiue row is pel\u00e9 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "type_7": 7, "trade_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "pel\u00e9_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "type_7": "type", "trade_8": "trade", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "pel\u00e9_10": "pel\u00e9"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "type_7": [0], "trade_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "pel\u00e9_10": [3]}, "table_header": ["nat", "name", "moving to", "type", "transfer window"], "table_cont": [["ita", "ceccarelli", "milan", "co - ownership termination", "summer"], ["ita", "andreolli", "roma", "co - ownership termination", "summer"], ["ita", "cordaz", "treviso", "co - ownership termination", "summer"], ["cmr", "maa boumsong", "treviso", "co - ownership termination", "summer"], ["nga", "eliakwu", "triestina", "co - ownership termination", "summer"], ["hon", "suazo", "benfica", "loan", "summer"], ["por", "maniche", "atl\u00e9ticomadrid", "loan end", "summer"], ["arg esp", "solari", "san lorenzo", "contract expired", "summer"], ["uru", "recoba", "panionios", "contract expired", "summer"], ["bra", "c\u00e9sar", "bologna", "released", "summer"], ["hun", "filkor", "sassuolo", "loan", "summer"], ["uru", "ribas", "dijon", "transfer", "summer"], ["por", "pel\u00e9", "porto", "trade", "summer"], ["fra", "dacourt", "fulham", "loan", "winter"], ["por", "quaresma", "chelsea", "loan", "winter"], ["ita", "bonucci", "pisa", "loan", "winter"], ["bel mar", "maaroufi", "vicenza", "co - ownership", "winter"], ["ita", "viviano", "brescia", "loan", "winter"], ["bra", "adriano", "flamengo", "released", "winter"]], "query": "and { only { filter_eq { all_rows ; type ; trade } } ; eq { hop { filter_eq { all_rows ; type ; trade } ; name } ; pel\u00e9 } } = true", "question": "pel\u00e9 was the only player moved through a trade in the 2008 - 09 f.c. internazionale milano season ."}, {"topic": "1976 buffalo bills season", "wiki": "https://en.wikipedia.org/wiki/1976_Buffalo_Bills_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18842944-2.html.csv", "action": "unique", "sent": "week 4 was the only week that the buffalo bills played the kansas city chiefs .", "annotation": {"scope": "all", "row": "4", "col": "3", "col_other": "1", "criterion": "equal", "value": "kansas city chiefs", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "kansas city chiefs"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to kansas city chiefs .", "tostr": "filter_eq { all_rows ; opponent ; kansas city chiefs }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; opponent ; kansas city chiefs } }", "tointer": "select the rows whose opponent record fuzzily matches to kansas city chiefs . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "kansas city chiefs"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to kansas city chiefs .", "tostr": "filter_eq { all_rows ; opponent ; kansas city chiefs }"}, "week"], "result": "4", "ind": 2, "tostr": "hop { filter_eq { all_rows ; opponent ; kansas city chiefs } ; week }"}, "4"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; opponent ; kansas city chiefs } ; week } ; 4 }", "tointer": "the week record of this unqiue row is 4 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; opponent ; kansas city chiefs } } ; eq { hop { filter_eq { all_rows ; opponent ; kansas city chiefs } ; week } ; 4 } } = true", "tointer": "select the rows whose opponent record fuzzily matches to kansas city chiefs . there is only one such row in the table . the week record of this unqiue row is 4 ."}, "logic_str": "and { only { filter_eq { all_rows ; opponent ; kansas city chiefs } } ; eq { hop { filter_eq { all_rows ; opponent ; kansas city chiefs } ; week } ; 4 } } = true", "interpret": "select the rows whose opponent record fuzzily matches to kansas city chiefs . there is only one such row in the table . the week record of this unqiue row is 4 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "opponent_7": 7, "kansas city chiefs_8": 8, "eq_3": 3, "num_hop_2": 2, "week_9": 9, "4_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "opponent_7": "opponent", "kansas city chiefs_8": "kansas city chiefs", "eq_3": "eq", "num_hop_2": "num_hop", "week_9": "week", "4_10": "4"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "opponent_7": [0], "kansas city chiefs_8": [0], "eq_3": [4], "num_hop_2": [3], "week_9": [2], "4_10": [3]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 13 , 1976", "miami dolphins", "l 30 - 21", "77683"], ["2", "september 19 , 1976", "houston oilers", "l 13 - 3", "61384"], ["3", "september 26 , 1976", "tampa bay buccaneers", "w 14 - 9", "44505"], ["4", "october 3 , 1976", "kansas city chiefs", "w 50 - 17", "51909"], ["5", "october 10 , 1976", "new york jets", "l 17 - 14", "59110"], ["6", "october 17 , 1976", "baltimore colts", "l 31 - 13", "71009"], ["7", "october 24 , 1976", "new england patriots", "l 26 - 22", "45144"], ["8", "october 31 , 1976", "new york jets", "l 19 - 14", "41285"], ["9", "november 7 , 1976", "new england patriots", "l 20 - 10", "61157"], ["10", "november 15 , 1976", "dallas cowboys", "l 17 - 10", "51799"], ["11", "november 21 , 1976", "san diego chargers", "l 34 - 13", "36539"], ["12", "november 25 , 1976", "detroit lions", "l 27 - 14", "66875"], ["13", "december 5 , 1976", "miami dolphins", "l 45 - 27", "43475"], ["14", "december 12 , 1976", "baltimore colts", "l 58 - 20", "50451"]], "query": "and { only { filter_eq { all_rows ; opponent ; kansas city chiefs } } ; eq { hop { filter_eq { all_rows ; opponent ; kansas city chiefs } ; week } ; 4 } } = true", "question": "week 4 was the only week that the buffalo bills played the kansas city chiefs ."}, {"topic": "1981 toronto blue jays season", "wiki": "https://en.wikipedia.org/wiki/1981_Toronto_Blue_Jays_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12207755-6.html.csv", "action": "count", "sent": "in the games of the 1981 toronto blue jays season listed seven games were against the royals .", "annotation": {"scope": "all", "criterion": "equal", "value": "royals", "result": "7", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "royals"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to royals .", "tostr": "filter_eq { all_rows ; opponent ; royals }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; opponent ; royals } }", "tointer": "select the rows whose opponent record fuzzily matches to royals . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; opponent ; royals } } ; 7 } = true", "tointer": "select the rows whose opponent record fuzzily matches to royals . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; opponent ; royals } } ; 7 } = true", "interpret": "select the rows whose opponent record fuzzily matches to royals . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "opponent_5": 5, "royals_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "opponent_5": "opponent", "royals_6": "royals", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "opponent_5": [0], "royals_6": [0], "7_7": [2]}, "table_header": ["date", "opponent", "score", "loss", "record"], "table_cont": [["august 10", "tigers", "4 - 3", "mclaughlin ( 0 - 5 )", "16 - 43"], ["august 11", "tigers", "6 - 4", "schatzeder ( 3 - 5 )", "17 - 43"], ["august 12", "tigers", "4 - 3", "morris ( 9 - 4 )", "18 - 43"], ["august 14", "brewers", "5 - 4", "easterly ( 2 - 2 )", "19 - 43"], ["august 15", "brewers", "4 - 3", "cleveland ( 2 - 2 )", "20 - 43"], ["august 16", "brewers", "6 - 2", "stieb ( 5 - 8 )", "20 - 44"], ["august 16", "brewers", "2 - 0", "todd ( 2 - 6 )", "20 - 45"], ["august 17", "royals", "5 - 3", "clancy ( 3 - 6 )", "20 - 46"], ["august 18", "royals", "5 - 3", "jones ( 1 - 1 )", "21 - 46"], ["august 19", "royals", "9 - 4", "leonard ( 7 - 8 )", "22 - 46"], ["august 21", "white sox", "5 - 4", "farmer ( 2 - 3 )", "23 - 46"], ["august 22", "white sox", "8 - 0", "clancy ( 3 - 7 )", "23 - 47"], ["august 23", "white sox", "13 - 2", "leal ( 4 - 9 )", "23 - 48"], ["august 24", "rangers", "3 - 0", "berenguer ( 2 - 5 )", "23 - 49"], ["august 25", "rangers", "6 - 1", "stieb ( 6 - 9 )", "23 - 50"], ["august 27", "royals", "11 - 5", "clancy ( 3 - 8 )", "23 - 51"], ["august 28", "royals", "4 - 3", "brett ( 1 - 1 )", "24 - 51"], ["august 29", "royals", "2 - 0", "berenguer ( 2 - 6 )", "24 - 52"], ["august 30", "royals", "postponed ( rain ) not rescheduled", "postponed ( rain ) not rescheduled", "postponed ( rain ) not rescheduled"], ["august 31", "rangers", "3 - 0", "jenkins ( 5 - 7 )", "25 - 52"]], "query": "eq { count { filter_eq { all_rows ; opponent ; royals } } ; 7 } = true", "question": "in the games of the 1981 toronto blue jays season listed seven games were against the royals ."}, {"topic": "roberto ribaud", "wiki": "https://en.wikipedia.org/wiki/Roberto_Ribaud", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18125937-1.html.csv", "action": "count", "sent": "of the competitions that roberto ribaud participated in , there were two in west germany .", "annotation": {"scope": "all", "criterion": "equal", "value": "west germany", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "west germany"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to west germany .", "tostr": "filter_eq { all_rows ; venue ; west germany }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; venue ; west germany } }", "tointer": "select the rows whose venue record fuzzily matches to west germany . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; venue ; west germany } } ; 2 } = true", "tointer": "select the rows whose venue record fuzzily matches to west germany . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; venue ; west germany } } ; 2 } = true", "interpret": "select the rows whose venue record fuzzily matches to west germany . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "venue_5": 5, "west germany_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "venue_5": "venue", "west germany_6": "west germany", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "venue_5": [0], "west germany_6": [0], "2_7": [2]}, "table_header": ["year", "competition", "venue", "position", "event", "time"], "table_cont": [["1982", "european championships", "athens , greece", "6th", "4x400 m relay", "3:03.21"], ["1983", "world championships", "helsinki , finland", "5th", "4x400 m relay", "3:05.10"], ["1984", "olympic games", "los angeles , united states", "5th", "4x400 m relay", "3:01.44"], ["1986", "european championships", "stuttgart , west germany", "semi - finals", "400 m", "45.69"], ["1986", "european championships", "stuttgart , west germany", "4th", "4x400 m relay", "3:01.37"], ["1990", "european championships", "split , yugoslavia", "4th", "4x400 m relay", "3:01.78"]], "query": "eq { count { filter_eq { all_rows ; venue ; west germany } } ; 2 } = true", "question": "of the competitions that roberto ribaud participated in , there were two in west germany ."}, {"topic": "mauri rose", "wiki": "https://en.wikipedia.org/wiki/Mauri_Rose", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1236138-1.html.csv", "action": "superlative", "sent": "the highest qual that mauri rose has had was when the start was 5 .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "16", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "qual"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; qual }"}, "start"], "result": "5", "ind": 1, "tostr": "hop { argmax { all_rows ; qual } ; start }"}, "5"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; qual } ; start } ; 5 } = true", "tointer": "select the row whose qual record of all rows is maximum . the start record of this row is 5 ."}, "logic_str": "eq { hop { argmax { all_rows ; qual } ; start } ; 5 } = true", "interpret": "select the row whose qual record of all rows is maximum . the start record of this row is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "qual_5": 5, "start_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "qual_5": "qual", "start_6": "start", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "qual_5": [0], "start_6": [1], "5_7": [2]}, "table_header": ["start", "qual", "rank", "finish", "laps"], "table_cont": [["42", "117.649", "6", "35", "48"], ["4", "116.044", "7", "2", "200"], ["10", "116.470", "9", "20", "103"], ["30", "113.890", "21", "4", "200"], ["8", "118.540", "19", "18", "127"], ["9", "119.796", "20", "13", "165"], ["8", "124.896", "13", "8", "200"], ["3", "125.624", "3", "3", "200"], ["1", "128.691", "1", "26", "60"], ["17", "121.106", "25", "1", "128"], ["9", "124.065", "10", "23", "40"], ["3", "120.040", "20", "1", "200"], ["3", "129.129", "4", "1", "200"], ["10", "127.759", "19", "13", "192"], ["3", "132.319", "6", "3", "137"], ["5", "133.422", "18", "14", "126"]], "query": "eq { hop { argmax { all_rows ; qual } ; start } ; 5 } = true", "question": "the highest qual that mauri rose has had was when the start was 5 ."}, {"topic": "500 festival open invitation", "wiki": "https://en.wikipedia.org/wiki/500_Festival_Open_Invitation", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14112941-1.html.csv", "action": "majority", "sent": "most of the 500 festival open invitations were scheduled for the month of may .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "fuzzily_match", "value": "may", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "date", "may"], "result": true, "ind": 0, "tointer": "for the date records of all rows , most of them fuzzily match to may .", "tostr": "most_eq { all_rows ; date ; may } = true"}, "logic_str": "most_eq { all_rows ; date ; may } = true", "interpret": "for the date records of all rows , most of them fuzzily match to may .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "may_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "may_4": "may"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "may_4": [0]}, "table_header": ["year", "date", "winner", "score", "to par", "winner 's share"], "table_cont": [["1968", "jun 6 - 9", "billy casper", "70 + 71 + 69 + 70 = 280", "8", "20000"], ["1967", "jul 6 - 9", "frank beard", "70 + 71 + 69 + 69 = 279", "9", "20000"], ["1966", "jul 28 - 31", "billy casper", "69 + 70 + 68 + 70 = 277", "11", "16400"], ["1965", "may 24 - 27", "bruce crampton", "71 + 70 + 67 + 71 = 279", "5", "15200"], ["1964", "may 27 - 31", "gary player", "70 + 66 + 70 + 67 = 273", "11", "12000"], ["1963", "may 31 - jun 3", "dow finsterwald", "68 + 68 + 64 + 68 = 268", "16", "10000"], ["1962", "may 24 - 27", "billy casper", "66 + 67 + 67 + 64 = 264", "18", "9000"], ["1961", "may 25 - 28", "doug ford", "69 + 69 + 67 + 68 = 273", "12", "9000"], ["1960", "may 26 - 29", "doug ford", "66 + 68 + 68 + 68 = 270", "14", "9000"]], "query": "most_eq { all_rows ; date ; may } = true", "question": "most of the 500 festival open invitations were scheduled for the month of may ."}, {"topic": "1960 green bay packers season", "wiki": "https://en.wikipedia.org/wiki/1960_Green_Bay_Packers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14887186-1.html.csv", "action": "ordinal", "sent": "dale hackbart was the 3rd player being selected by green bay packers in the 1960 draft .", "annotation": {"row": "3", "col": "2", "order": "3", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "pick", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; pick ; 3 }"}, "player"], "result": "dale hackbart", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; pick ; 3 } ; player }"}, "dale hackbart"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; pick ; 3 } ; player } ; dale hackbart } = true", "tointer": "select the row whose pick record of all rows is 3rd minimum . the player record of this row is dale hackbart ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; pick ; 3 } ; player } ; dale hackbart } = true", "interpret": "select the row whose pick record of all rows is 3rd minimum . the player record of this row is dale hackbart .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "pick_5": 5, "3_6": 6, "player_7": 7, "dale hackbart_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "pick_5": "pick", "3_6": "3", "player_7": "player", "dale hackbart_8": "dale hackbart"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "pick_5": [0], "3_6": [0], "player_7": [1], "dale hackbart_8": [2]}, "table_header": ["round", "pick", "player", "position", "school"], "table_cont": [["1", "5", "tom moore", "running back", "vanderbilt"], ["2", "17", "bob jeter", "cornerback", "iowa"], ["5", "51", "dale hackbart", "defensive back", "wisconsin"], ["6", "65", "mike wright", "tackle", "minnesota"], ["7", "77", "kirk phares", "guard", "south carolina"], ["8", "89", "don hitt", "center", "oklahoma state"], ["9", "101", "frank brixius", "tackle", "minnesota"], ["11", "125", "ron ray", "tackle", "howard payne"], ["12", "137", "harry ball", "tackle", "boston college"], ["13", "149", "paul winslow", "defensive back", "north carolina central"], ["14", "161", "jon gilliam", "center", "east texas state"], ["15", "173", "garney henley", "back", "huron"], ["16", "185", "john littlejohn", "back", "kansas state"], ["17", "197", "joe gomes", "back", "south carolina"], ["18", "209", "royce whittington", "tackle", "southwestern louisiana"], ["19", "221", "rich brooks", "end", "purdue"], ["20", "233", "gilmer lewis", "tackle", "oklahoma"]], "query": "eq { hop { nth_argmin { all_rows ; pick ; 3 } ; player } ; dale hackbart } = true", "question": "dale hackbart was the 3rd player being selected by green bay packers in the 1960 draft ."}, {"topic": "naval campaign of the war of the pacific", "wiki": "https://en.wikipedia.org/wiki/Naval_Campaign_of_the_War_of_the_Pacific", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-23614702-2.html.csv", "action": "comparative", "sent": "in the naval campaign of the war of the pacific , the warship chacabuco went 3 knots faster than the warship abtao .", "annotation": {"row_1": "2", "row_2": "3", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "warship", "chacabuco"], "result": null, "ind": 0, "tointer": "select the rows whose warship record fuzzily matches to chacabuco .", "tostr": "filter_eq { all_rows ; warship ; chacabuco }"}, "speed ( knots )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; warship ; chacabuco } ; speed ( knots ) }", "tointer": "select the rows whose warship record fuzzily matches to chacabuco . take the speed ( knots ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "warship", "abtao"], "result": null, "ind": 1, "tointer": "select the rows whose warship record fuzzily matches to abtao .", "tostr": "filter_eq { all_rows ; warship ; abtao }"}, "speed ( knots )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; warship ; abtao } ; speed ( knots ) }", "tointer": "select the rows whose warship record fuzzily matches to abtao . take the speed ( knots ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; warship ; chacabuco } ; speed ( knots ) } ; hop { filter_eq { all_rows ; warship ; abtao } ; speed ( knots ) } } = true", "tointer": "select the rows whose warship record fuzzily matches to chacabuco . take the speed ( knots ) record of this row . select the rows whose warship record fuzzily matches to abtao . take the speed ( knots ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; warship ; chacabuco } ; speed ( knots ) } ; hop { filter_eq { all_rows ; warship ; abtao } ; speed ( knots ) } } = true", "interpret": "select the rows whose warship record fuzzily matches to chacabuco . take the speed ( knots ) record of this row . select the rows whose warship record fuzzily matches to abtao . take the speed ( knots ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "warship_7": 7, "chacabuco_8": 8, "speed ( knots )_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "warship_11": 11, "abtao_12": 12, "speed ( knots )_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "warship_7": "warship", "chacabuco_8": "chacabuco", "speed ( knots )_9": "speed ( knots )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "warship_11": "warship", "abtao_12": "abtao", "speed ( knots )_13": "speed ( knots )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "warship_7": [0], "chacabuco_8": [0], "speed ( knots )_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "warship_11": [1], "abtao_12": [1], "speed ( knots )_13": [3]}, "table_header": ["warship", "tons ( lton )", "horse - power", "speed ( knots )", "main artillery", "built year"], "table_cont": [["o'higgins", "1101", "300", "12", "3x115 - 2x70 - 2x12 - pounders", "1874"], ["chacabuco", "1101", "300", "11", "1x115 - 2x70 - 2x12 - pounders", "1874"], ["abtao", "1051", "300", "8", "3x115 - 3x30 - pounders", "1870"], ["magallanes", "772", "260", "115", "1x115 - 1x64 - 2x20 - pounders", "1874"], ["covadonga", "412", "140", "7", "2x70 - 3x40 - pounders", "1859"], ["esmeralda", "854", "200", "8", "16x32 - 2x12 - pounders", "1855"], ["uni\u00e3 cubicn", "1.150", "320", "13", "12x68 - 1x9 - pounders", "1864"]], "query": "greater { hop { filter_eq { all_rows ; warship ; chacabuco } ; speed ( knots ) } ; hop { filter_eq { all_rows ; warship ; abtao } ; speed ( knots ) } } = true", "question": "in the naval campaign of the war of the pacific , the warship chacabuco went 3 knots faster than the warship abtao ."}, {"topic": "swimming at the 2000 summer olympics - women 's 50 metre freestyle", "wiki": "https://en.wikipedia.org/wiki/Swimming_at_the_2000_Summer_Olympics_%E2%80%93_Women%27s_50_metre_freestyle", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12385343-6.html.csv", "action": "count", "sent": "two of the swimmers finished the race in 25.61 seconds .", "annotation": {"scope": "all", "criterion": "equal", "value": "25.61", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "time", "25.61"], "result": null, "ind": 0, "tointer": "select the rows whose time record is equal to 25.61 .", "tostr": "filter_eq { all_rows ; time ; 25.61 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; time ; 25.61 } }", "tointer": "select the rows whose time record is equal to 25.61 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; time ; 25.61 } } ; 2 } = true", "tointer": "select the rows whose time record is equal to 25.61 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; time ; 25.61 } } ; 2 } = true", "interpret": "select the rows whose time record is equal to 25.61 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "time_5": 5, "25.61_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "time_5": "time", "25.61_6": "25.61", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "time_5": [0], "25.61_6": [0], "2_7": [2]}, "table_header": ["rank", "lane", "name", "nationality", "time"], "table_cont": [["1", "4", "inge de bruijn", "netherlands", "24.13"], ["2", "5", "amy van dyken", "united states", "25.00"], ["3", "2", "alison sheppard", "great britain", "25.32"], ["4", "3", "martina moravcov\u00e3 \u00a1", "slovakia", "25.49"], ["5", "1", "anna - karin kammerling", "sweden", "25.61"], ["5", "6", "vivienne rignall", "new zealand", "25.61"], ["7", "7", "olga mukomol", "ukraine", "25.88"], ["8", "8", "rania elwani", "egypt", "25.95"]], "query": "eq { count { filter_eq { all_rows ; time ; 25.61 } } ; 2 } = true", "question": "two of the swimmers finished the race in 25.61 seconds ."}, {"topic": "list of municipalities in quebec", "wiki": "https://en.wikipedia.org/wiki/List_of_municipalities_in_Quebec", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11218948-15.html.csv", "action": "superlative", "sent": "the municipality of chibougamau held the largest population in quebec .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "4", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "population"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; population }"}, "name"], "result": "chibougamau", "ind": 1, "tostr": "hop { argmax { all_rows ; population } ; name }"}, "chibougamau"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; population } ; name } ; chibougamau } = true", "tointer": "select the row whose population record of all rows is maximum . the name record of this row is chibougamau ."}, "logic_str": "eq { hop { argmax { all_rows ; population } ; name } ; chibougamau } = true", "interpret": "select the row whose population record of all rows is maximum . the name record of this row is chibougamau .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "population_5": 5, "name_6": 6, "chibougamau_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "population_5": "population", "name_6": "name", "chibougamau_7": "chibougamau"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "population_5": [0], "name_6": [1], "chibougamau_7": [2]}, "table_header": ["code", "type", "name", "area ( km 2 )", "population", "regional county municipality", "region"], "table_cont": [["99005", "v", "lebel - sur - qu\u00e3villon", "44.74", "3140", "not part of a rcm", "10"], ["99015", "v", "matagami", "64.75", "1828", "not part of a rcm", "10"], ["99020", "v", "chapais", "62.78", "1755", "not part of a rcm", "10"], ["99025", "v", "chibougamau", "1041.97", "7747", "not part of a rcm", "10"], ["99060", "m", "baie - james", "333255.55", "1976", "not part of a rcm", "10"]], "query": "eq { hop { argmax { all_rows ; population } ; name } ; chibougamau } = true", "question": "the municipality of chibougamau held the largest population in quebec ."}, {"topic": "1955 vfl season", "wiki": "https://en.wikipedia.org/wiki/1955_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10773753-16.html.csv", "action": "majority", "sent": "all of the vfl games for the table were played on the date of 6 august 1955 .", "annotation": {"scope": "all", "col": "7", "most_or_all": "all", "criterion": "equal", "value": "6 august 1955", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "date", "6 august 1955"], "result": true, "ind": 0, "tointer": "for the date records of all rows , all of them fuzzily match to 6 august 1955 .", "tostr": "all_eq { all_rows ; date ; 6 august 1955 } = true"}, "logic_str": "all_eq { all_rows ; date ; 6 august 1955 } = true", "interpret": "for the date records of all rows , all of them fuzzily match to 6 august 1955 .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "6 august 1955_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "6 august 1955_4": "6 august 1955"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "6 august 1955_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "8.5 ( 53 )", "south melbourne", "11.16 ( 82 )", "junction oval", "10150", "6 august 1955"], ["footscray", "10.13 ( 73 )", "geelong", "10.16 ( 76 )", "western oval", "33902", "6 august 1955"], ["fitzroy", "6.17 ( 53 )", "richmond", "11.9 ( 75 )", "brunswick street oval", "14000", "6 august 1955"], ["north melbourne", "8.12 ( 60 )", "hawthorn", "8.5 ( 53 )", "arden street oval", "9000", "6 august 1955"], ["melbourne", "16.23 ( 119 )", "essendon", "7.12 ( 54 )", "mcg", "49352", "6 august 1955"], ["collingwood", "12.17 ( 89 )", "carlton", "7.10 ( 52 )", "victoria park", "28000", "6 august 1955"]], "query": "all_eq { all_rows ; date ; 6 august 1955 } = true", "question": "all of the vfl games for the table were played on the date of 6 august 1955 ."}, {"topic": "united states house of representatives elections , 1988", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1988", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341577-36.html.csv", "action": "count", "sent": "there were seven ohio representatives that were democrats in the united states house of representatives elections , 1988 .", "annotation": {"scope": "all", "criterion": "equal", "value": "democratic", "result": "7", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "party", "democratic"], "result": null, "ind": 0, "tointer": "select the rows whose party record fuzzily matches to democratic .", "tostr": "filter_eq { all_rows ; party ; democratic }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; party ; democratic } }", "tointer": "select the rows whose party record fuzzily matches to democratic . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; party ; democratic } } ; 7 } = true", "tointer": "select the rows whose party record fuzzily matches to democratic . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; party ; democratic } } ; 7 } = true", "interpret": "select the rows whose party record fuzzily matches to democratic . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "party_5": 5, "democratic_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "party_5": "party", "democratic_6": "democratic", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "party_5": [0], "democratic_6": [0], "7_7": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["ohio 1", "tom luken", "democratic", "1976", "re - elected", "tom luken ( d ) 56.5 % steve chabot ( r ) 43.5 %"], ["ohio 2", "bill gradison", "republican", "1974", "re - elected", "bill gradison ( r ) 72.3 % chuck r stidham ( d ) 27.7 %"], ["ohio 3", "tony p hall", "democratic", "1978", "re - elected", "tony p hall ( d ) 76.9 % ron crutcher ( r ) 23.1 %"], ["ohio 4", "mike oxley", "republican", "1972", "re - elected", "mike oxley ( r ) unopposed"], ["ohio 5", "del latta", "republican", "1958", "retired republican hold", "paul gillmor ( r ) 60.6 % tom murray ( d ) 39.4 %"], ["ohio 6", "bob mcewen", "republican", "1980", "re - elected", "bob mcewen ( r ) 74.3 % gordon r roberts ( d ) 25.7 %"], ["ohio 7", "mike dewine", "republican", "1982", "re - elected", "mike dewine ( r ) 73.9 % jack schira ( d ) 26.1 %"], ["ohio 8", "buz lukens", "republican", "1986", "re - elected", "buz lukens ( r ) 75.9 % john w griffin ( d ) 24.1 %"], ["ohio 9", "marcy kaptur", "democratic", "1982", "re - elected", "marcy kaptur ( d ) 81.3 % al hawkins ( r ) 18.7 %"], ["ohio 12", "john kasich", "republican", "1982", "re - elected", "john kasich ( r ) 80.1 % mark p brown ( d ) 19.9 %"], ["ohio 13", "don pease", "democratic", "1976", "re - elected", "don pease ( d ) 69.8 % dwight brown ( r ) 30.2 %"], ["ohio 14", "thomas c sawyer", "democratic", "1986", "re - elected", "thomas c sawyer ( d ) 74.7 % loretta lang ( r ) 25.3 %"], ["ohio 16", "ralph regula", "republican", "1972", "re - elected", "ralph regula ( r ) 78.6 % melvin j gravely ( d ) 21.4 %"], ["ohio 19", "ed feighan", "democratic", "1982", "re - elected", "ed feighan ( d ) 70.5 % noel f roberts ( r ) 29.5 %"], ["ohio 20", "mary rose oakar", "democratic", "1976", "re - elected", "mary rose oakar ( d ) 82.6 % michael sajna ( r ) 17.4 %"]], "query": "eq { count { filter_eq { all_rows ; party ; democratic } } ; 7 } = true", "question": "there were seven ohio representatives that were democrats in the united states house of representatives elections , 1988 ."}, {"topic": "2007 in hip hop music", "wiki": "https://en.wikipedia.org/wiki/2007_in_hip_hop_music", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11169458-2.html.csv", "action": "comparative", "sent": "american gangster had more 1st week sales than from nothin ' to somethin .", "annotation": {"row_1": "4", "row_2": "5", "col": "4", "col_other": "3", "relation": "greater", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "album", "american gangster"], "result": null, "ind": 0, "tointer": "select the rows whose album record fuzzily matches to american gangster .", "tostr": "filter_eq { all_rows ; album ; american gangster }"}, "1st week sales"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales }", "tointer": "select the rows whose album record fuzzily matches to american gangster . take the 1st week sales record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "album", "from nothin ' to somethin'"], "result": null, "ind": 1, "tointer": "select the rows whose album record fuzzily matches to from nothin ' to somethin' .", "tostr": "filter_eq { all_rows ; album ; from nothin ' to somethin' }"}, "1st week sales"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales }", "tointer": "select the rows whose album record fuzzily matches to from nothin ' to somethin' . take the 1st week sales record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } }", "tointer": "select the rows whose album record fuzzily matches to american gangster . take the 1st week sales record of this row . select the rows whose album record fuzzily matches to from nothin ' to somethin' . take the 1st week sales record of this row . the first record is greater than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "album", "american gangster"], "result": null, "ind": 0, "tointer": "select the rows whose album record fuzzily matches to american gangster .", "tostr": "filter_eq { all_rows ; album ; american gangster }"}, "1st week sales"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales }", "tointer": "select the rows whose album record fuzzily matches to american gangster . take the 1st week sales record of this row ."}, "426000"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; 426000 }", "tointer": "the 1st week sales record of the first row is 426000 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "album", "from nothin ' to somethin'"], "result": null, "ind": 1, "tointer": "select the rows whose album record fuzzily matches to from nothin ' to somethin' .", "tostr": "filter_eq { all_rows ; album ; from nothin ' to somethin' }"}, "1st week sales"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales }", "tointer": "select the rows whose album record fuzzily matches to from nothin ' to somethin' . take the 1st week sales record of this row ."}, "159000"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } ; 159000 }", "tointer": "the 1st week sales record of the second row is 159000 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; 426000 } ; eq { hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } ; 159000 } }", "tointer": "the 1st week sales record of the first row is 426000 . the 1st week sales record of the second row is 159000 ."}], "result": true, "ind": 8, "tostr": "and { greater { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } } ; and { eq { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; 426000 } ; eq { hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } ; 159000 } } } = true", "tointer": "select the rows whose album record fuzzily matches to american gangster . take the 1st week sales record of this row . select the rows whose album record fuzzily matches to from nothin ' to somethin' . take the 1st week sales record of this row . the first record is greater than the second record . the 1st week sales record of the first row is 426000 . the 1st week sales record of the second row is 159000 ."}, "logic_str": "and { greater { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } } ; and { eq { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; 426000 } ; eq { hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } ; 159000 } } } = true", "interpret": "select the rows whose album record fuzzily matches to american gangster . take the 1st week sales record of this row . select the rows whose album record fuzzily matches to from nothin ' to somethin' . take the 1st week sales record of this row . the first record is greater than the second record . the 1st week sales record of the first row is 426000 . the 1st week sales record of the second row is 159000 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "greater_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "album_11": 11, "american gangster_12": 12, "1st week sales_13": 13, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "album_15": 15, "from nothin' to somethin'_16": 16, "1st week sales_17": 17, "and_7": 7, "eq_5": 5, "426000_18": 18, "eq_6": 6, "159000_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "greater_4": "greater", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "album_11": "album", "american gangster_12": "american gangster", "1st week sales_13": "1st week sales", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "album_15": "album", "from nothin' to somethin'_16": "from nothin ' to somethin'", "1st week sales_17": "1st week sales", "and_7": "and", "eq_5": "eq", "426000_18": "426000", "eq_6": "eq", "159000_19": "159000"}, "g_adj": {"and_8": [9], "result_9": [], "greater_4": [8], "num_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "album_11": [0], "american gangster_12": [0], "1st week sales_13": [2], "num_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "album_15": [1], "from nothin' to somethin'_16": [1], "1st week sales_17": [3], "and_7": [8], "eq_5": [7], "426000_18": [5], "eq_6": [7], "159000_19": [6]}, "table_header": ["number", "artist", "album", "1st week sales", "1st week position"], "table_cont": [["1", "kanye west", "graduation", "957000", "1"], ["2", "50 cent", "curtis", "697000", "2"], ["3", "ti", "ti vs tip", "468000", "1"], ["4", "jay - z", "american gangster", "426000", "1"], ["5", "fabolous", "from nothin ' to somethin'", "159000", "2"], ["6", "common", "finding forever", "158000", "1"], ["7", "lupe fiasco", "the cool", "143000", "14"], ["8", "young buck", "buck the world", "141000", "3"], ["9", "timbaland", "shock value", "138000", "1"], ["10", "bone thugs - n - harmony", "strength & loyalty", "119000", "2"]], "query": "and { greater { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } } ; and { eq { hop { filter_eq { all_rows ; album ; american gangster } ; 1st week sales } ; 426000 } ; eq { hop { filter_eq { all_rows ; album ; from nothin ' to somethin' } ; 1st week sales } ; 159000 } } } = true", "question": "american gangster had more 1st week sales than from nothin ' to somethin ."}, {"topic": "2009 - 10 temple owls men 's basketball team", "wiki": "https://en.wikipedia.org/wiki/2009%E2%80%9310_Temple_Owls_men%27s_basketball_team", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-25461946-5.html.csv", "action": "unique", "sent": "the only time the temple owls lost was on november 17th to georgetown .", "annotation": {"scope": "all", "row": "2", "col": "4", "col_other": "3", "criterion": "fuzzily_match", "value": "l", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "l"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to l .", "tostr": "filter_eq { all_rows ; score ; l }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; score ; l } }", "tointer": "select the rows whose score record fuzzily matches to l . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "l"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to l .", "tostr": "filter_eq { all_rows ; score ; l }"}, "team"], "result": "georgetown ( 19 )", "ind": 2, "tostr": "hop { filter_eq { all_rows ; score ; l } ; team }"}, "georgetown ( 19 )"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; score ; l } ; team } ; georgetown ( 19 ) }", "tointer": "the team record of this unqiue row is georgetown ( 19 ) ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; score ; l } } ; eq { hop { filter_eq { all_rows ; score ; l } ; team } ; georgetown ( 19 ) } } = true", "tointer": "select the rows whose score record fuzzily matches to l . there is only one such row in the table . the team record of this unqiue row is georgetown ( 19 ) ."}, "logic_str": "and { only { filter_eq { all_rows ; score ; l } } ; eq { hop { filter_eq { all_rows ; score ; l } ; team } ; georgetown ( 19 ) } } = true", "interpret": "select the rows whose score record fuzzily matches to l . there is only one such row in the table . the team record of this unqiue row is georgetown ( 19 ) .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "score_7": 7, "l_8": 8, "str_eq_3": 3, "str_hop_2": 2, "team_9": 9, "georgetown (19)_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "score_7": "score", "l_8": "l", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "team_9": "team", "georgetown (19)_10": "georgetown ( 19 )"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "score_7": [0], "l_8": [0], "str_eq_3": [4], "str_hop_2": [3], "team_9": [2], "georgetown (19)_10": [3]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["1", "november 14", "delaware", "w 76 - 56", "ryan brooks - 23", "lavoy allen - 15", "juan fernandez - 5", "bob carpenter center , newark , de ( 3080 )", "1 - 0"], ["2", "november 17", "georgetown ( 19 )", "l 46 - 45", "allen - 12", "allen - 14", "luiz guzman - 6", "verizon center , washington , dc ( 8712 )", "1 - 1"], ["3", "november 21", "siena", "w 73 - 69", "fernandez - 20", "allen - 7", "allen - 5", "liacouras center , philadelphia , pa ( 6759 )", "2 - 1"], ["4", "november 24", "ball state", "w 66 - 46", "brooks - 17", "allen - 9", "allen / brooks - 7", "liacouras center , philadelphia , pa ( 3597 )", "3 - 1"], ["5", "november 27", "virginia tech", "w 61 - 50", "allen - 18", "allen - 10", "fernandez - 6", "palestra , philadelphia , pa ( 3750 )", "4 - 1"]], "query": "and { only { filter_eq { all_rows ; score ; l } } ; eq { hop { filter_eq { all_rows ; score ; l } ; team } ; georgetown ( 19 ) } } = true", "question": "the only time the temple owls lost was on november 17th to georgetown ."}, {"topic": "rowing at the 2008 summer olympics - men 's double sculls", "wiki": "https://en.wikipedia.org/wiki/Rowing_at_the_2008_Summer_Olympics_%E2%80%93_Men%27s_double_sculls", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18662686-4.html.csv", "action": "superlative", "sent": "in the sport of rowing at the 2008 summer olympics , the team with the fastest time was australia .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "time"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; time }"}, "country"], "result": "australia", "ind": 1, "tostr": "hop { argmin { all_rows ; time } ; country }"}, "australia"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; time } ; country } ; australia } = true", "tointer": "select the row whose time record of all rows is minimum . the country record of this row is australia ."}, "logic_str": "eq { hop { argmin { all_rows ; time } ; country } ; australia } = true", "interpret": "select the row whose time record of all rows is minimum . the country record of this row is australia .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "time_5": 5, "country_6": 6, "australia_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "time_5": "time", "country_6": "country", "australia_7": "australia"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "time_5": [0], "country_6": [1], "australia_7": [2]}, "table_header": ["rank", "rowers", "country", "time", "notes"], "table_cont": [["1", "david crawshay , scott brennan", "australia", "6:21.39", "sa / b"], ["2", "jean - baptiste macquet , adrien hardy", "france", "6:21.92", "sa / b"], ["3", "luka \u0161pik , iztok \u010dop", "slovenia", "6:39.49", "sa / b"], ["4", "martin yanakiev , ivo yanakiev", "bulgaria", "6:45.03", "r"], ["5", "su hui , zhang liang", "china", "excluded", "excluded"]], "query": "eq { hop { argmin { all_rows ; time } ; country } ; australia } = true", "question": "in the sport of rowing at the 2008 summer olympics , the team with the fastest time was australia ."}, {"topic": "1996 - 97 european challenge cup", "wiki": "https://en.wikipedia.org/wiki/1996%E2%80%9397_European_Challenge_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16770037-3.html.csv", "action": "aggregation", "sent": "the average tries for for each team in the 1996-97 european challenge cup was 15.5 .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "15.5", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "tries for"], "result": "15.5", "ind": 0, "tostr": "avg { all_rows ; tries for }"}, "15.5"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; tries for } ; 15.5 } = true", "tointer": "the average of the tries for record of all rows is 15.5 ."}, "logic_str": "round_eq { avg { all_rows ; tries for } ; 15.5 } = true", "interpret": "the average of the tries for record of all rows is 15.5 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "tries for_4": 4, "15.5_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "tries for_4": "tries for", "15.5_5": "15.5"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "tries for_4": [0], "15.5_5": [1]}, "table_header": ["team", "tries for", "tries against", "try diff", "points for", "points against", "points diff"], "table_cont": [["castres olympique", "29", "6", "+ 23", "207", "71", "+ 136"], ["narbonne", "21", "6", "+ 15", "161", "90", "+ 71"], ["dinamo - bucure\u015fti", "12", "32", "20", "109", "213", "104"], ["bridgend", "10", "14", "4", "94", "120", "26"], ["bristol shoguns", "11", "12", "1", "128", "99", "+ 29"], ["treorchy", "10", "23", "13", "72", "178", "106"]], "query": "round_eq { avg { all_rows ; tries for } ; 15.5 } = true", "question": "the average tries for for each team in the 1996-97 european challenge cup was 15.5 ."}, {"topic": "northern nevada 4a region", "wiki": "https://en.wikipedia.org/wiki/Northern_Nevada_4A_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11044765-1.html.csv", "action": "majority", "sent": "in the northern nevada 4a region , most schools are located in reno , nevada .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "reno , nevada", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "location", "reno , nevada"], "result": true, "ind": 0, "tointer": "for the location records of all rows , most of them fuzzily match to reno , nevada .", "tostr": "most_eq { all_rows ; location ; reno , nevada } = true"}, "logic_str": "most_eq { all_rows ; location ; reno , nevada } = true", "interpret": "for the location records of all rows , most of them fuzzily match to reno , nevada .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "location_3": 3, "reno, nevada_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "location_3": "location", "reno, nevada_4": "reno , nevada"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "location_3": [0], "reno, nevada_4": [0]}, "table_header": ["school", "mascot", "location", "league", "enrollment"], "table_cont": [["carson", "senators", "carson city , nevada", "sierra", "2503"], ["damonte ranch", "mustangs", "reno , nevada", "sierra", "1253"], ["douglas", "tigers", "minden , nevada", "sierra", "1522"], ["galena", "grizzlies", "reno , nevada", "sierra", "1510"], ["hug", "hawks", "reno , nevada", "high desert", "1266"], ["manogue", "miners", "reno , nevada", "sierra", "650"], ["mcqueen", "lancers", "reno , nevada", "high desert", "1945"], ["north valleys", "panthers", "reno , nevada", "high desert", "2227"], ["reed", "raiders", "sparks , nevada", "high desert", "2464"], ["reno", "huskies", "reno , nevada", "high desert", "1896"], ["spanish springs", "cougars", "sparks , nevada", "high desert", "2186"], ["wooster", "colts", "reno , nevada", "sierra", "1519"]], "query": "most_eq { all_rows ; location ; reno , nevada } = true", "question": "in the northern nevada 4a region , most schools are located in reno , nevada ."}, {"topic": "2006 asp world tour", "wiki": "https://en.wikipedia.org/wiki/2006_ASP_World_Tour", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16135024-3.html.csv", "action": "unique", "sent": "layne beachley was the winner for only a single event .", "annotation": {"scope": "all", "row": "4", "col": "5", "col_other": "n/a", "criterion": "equal", "value": "layne beachley ( aus )", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "winner", "layne beachley ( aus )"], "result": null, "ind": 0, "tointer": "select the rows whose winner record fuzzily matches to layne beachley ( aus ) .", "tostr": "filter_eq { all_rows ; winner ; layne beachley ( aus ) }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; winner ; layne beachley ( aus ) } } = true", "tointer": "select the rows whose winner record fuzzily matches to layne beachley ( aus ) . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; winner ; layne beachley ( aus ) } } = true", "interpret": "select the rows whose winner record fuzzily matches to layne beachley ( aus ) . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "winner_4": 4, "layne beachley ( aus )_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "winner_4": "winner", "layne beachley ( aus )_5": "layne beachley ( aus )"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "winner_4": [0], "layne beachley ( aus )_5": [0]}, "table_header": ["date", "location", "country", "event", "winner", "runner - up"], "table_cont": [["february 28 - march 12", "gold coast", "australia", "roxy pro gold coast", "melanie redman - carr ( aus )", "layne beachley ( aus )"], ["april 22 - april 29", "tavarua", "fiji", "roxy pro fiji", "melanie redman - carr ( aus )", "layne beachley ( aus )"], ["may 4 - may 16", "teahupoo , tahiti", "french polynesia", "billabong pro tahiti women", "melanie redman - carr ( aus )", "chelsea georgeson ( aus )"], ["august 21 - august 28", "itacar\u00e3", "brazil", "billabong girls pro", "layne beachley ( aus )", "jessi miley - dyer ( aus )"], ["august 31 - september 5", "hossegor", "france", "rip curl pro mademoiselle", "chelsea georgeson ( aus )", "melanie redman - carr ( aus )"], ["october 9 - october 15", "manly beach", "australia", "havaianas beachley classic", "stephanie gilmore ( aus )", "layne beachley ( aus )"], ["november 24 - december 6", "sunset beach , hawaii", "united states", "roxy pro", "melanie bartels ( haw )", "stephanie gilmore ( aus )"], ["december 8 - december 20", "honolua bay , hawaii", "united states", "billabong pro", "jessi miley - dyer ( aus )", "keala kennelly ( haw )"]], "query": "only { filter_eq { all_rows ; winner ; layne beachley ( aus ) } } = true", "question": "layne beachley was the winner for only a single event ."}, {"topic": "coast province", "wiki": "https://en.wikipedia.org/wiki/Coast_Province", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1404456-1.html.csv", "action": "count", "sent": "three of the counties in coast province have an area of under 10000 square kilometers .", "annotation": {"scope": "all", "criterion": "less_than", "value": "10000", "result": "3", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_less", "args": ["all_rows", "area ( km 2 )", "10000"], "result": null, "ind": 0, "tointer": "select the rows whose area ( km 2 ) record is less than 10000 .", "tostr": "filter_less { all_rows ; area ( km 2 ) ; 10000 }"}], "result": "3", "ind": 1, "tostr": "count { filter_less { all_rows ; area ( km 2 ) ; 10000 } }", "tointer": "select the rows whose area ( km 2 ) record is less than 10000 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_less { all_rows ; area ( km 2 ) ; 10000 } } ; 3 } = true", "tointer": "select the rows whose area ( km 2 ) record is less than 10000 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_less { all_rows ; area ( km 2 ) ; 10000 } } ; 3 } = true", "interpret": "select the rows whose area ( km 2 ) record is less than 10000 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_less_0": 0, "all_rows_4": 4, "area (km 2 )_5": 5, "10000_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_less_0": "filter_less", "all_rows_4": "all_rows", "area (km 2 )_5": "area ( km 2 )", "10000_6": "10000", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_less_0": [1], "all_rows_4": [0], "area (km 2 )_5": [0], "10000_6": [0], "3_7": [2]}, "table_header": ["code", "county", "former province", "area ( km 2 )", "population census 2009", "capital"], "table_cont": [["1", "mombasa", "coast", "212.5", "939370", "mombasa ( city )"], ["2", "kwale", "coast", "8270.3", "649931", "kwale"], ["3", "kilifi", "coast", "12245.9", "1109735", "kilifi"], ["4", "tana river", "coast", "35375.8", "240075", "hola"], ["5", "lamu", "coast", "6497.7", "101539", "lamu"], ["6", "taita - taveta", "coast", "17083.9", "284657", "voi"]], "query": "eq { count { filter_less { all_rows ; area ( km 2 ) ; 10000 } } ; 3 } = true", "question": "three of the counties in coast province have an area of under 10000 square kilometers ."}, {"topic": "list of cinema and movie theater chains", "wiki": "https://en.wikipedia.org/wiki/List_of_cinema_and_movie_theater_chains", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13274048-1.html.csv", "action": "comparative", "sent": "of the cinema and movie theater chains , marcus theatres has 7 less sites than rave motion pictures .", "annotation": {"row_1": "7", "row_2": "6", "col": "5", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "7", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "circuit", "marcus theatres"], "result": null, "ind": 0, "tointer": "select the rows whose circuit record fuzzily matches to marcus theatres .", "tostr": "filter_eq { all_rows ; circuit ; marcus theatres }"}, "sites"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; circuit ; marcus theatres } ; sites }", "tointer": "select the rows whose circuit record fuzzily matches to marcus theatres . take the sites record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "circuit", "rave motion pictures"], "result": null, "ind": 1, "tointer": "select the rows whose circuit record fuzzily matches to rave motion pictures .", "tostr": "filter_eq { all_rows ; circuit ; rave motion pictures }"}, "sites"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; circuit ; rave motion pictures } ; sites }", "tointer": "select the rows whose circuit record fuzzily matches to rave motion pictures . take the sites record of this row ."}], "result": "-7", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; circuit ; marcus theatres } ; sites } ; hop { filter_eq { all_rows ; circuit ; rave motion pictures } ; sites } }"}, "-7"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; circuit ; marcus theatres } ; sites } ; hop { filter_eq { all_rows ; circuit ; rave motion pictures } ; sites } } ; -7 } = true", "tointer": "select the rows whose circuit record fuzzily matches to marcus theatres . take the sites record of this row . select the rows whose circuit record fuzzily matches to rave motion pictures . take the sites record of this row . the second record is 7 larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; circuit ; marcus theatres } ; sites } ; hop { filter_eq { all_rows ; circuit ; rave motion pictures } ; sites } } ; -7 } = true", "interpret": "select the rows whose circuit record fuzzily matches to marcus theatres . take the sites record of this row . select the rows whose circuit record fuzzily matches to rave motion pictures . take the sites record of this row . the second record is 7 larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "circuit_8": 8, "marcus theatres_9": 9, "sites_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "circuit_12": 12, "rave motion pictures_13": 13, "sites_14": 14, "-7_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "circuit_8": "circuit", "marcus theatres_9": "marcus theatres", "sites_10": "sites", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "circuit_12": "circuit", "rave motion pictures_13": "rave motion pictures", "sites_14": "sites", "-7_15": "-7"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "circuit_8": [0], "marcus theatres_9": [0], "sites_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "circuit_12": [1], "rave motion pictures_13": [1], "sites_14": [3], "-7_15": [5]}, "table_header": ["rank", "circuit", "headquarters", "screens", "sites"], "table_cont": [["1", "regal entertainment group", "knoxville , tn", "7367", "580"], ["2", "amc entertainment inc", "kansas city , mo", "5894", "483"], ["3", "cinemark theatres", "plano , tx", "3895", "298"], ["4", "carmike cinemas , inc", "columbus , ga", "2242", "232"], ["5", "cineplex entertainment", "toronto , on", "1438", "133"], ["6", "rave motion pictures", "dallas , tx", "939", "62"], ["7", "marcus theatres", "milwaukee , wi", "687", "55"], ["8", "national amusements", "dedham , ma", "450", "34"], ["9", "empire theatres", "stellarton , ns", "438", "53"]], "query": "eq { diff { hop { filter_eq { all_rows ; circuit ; marcus theatres } ; sites } ; hop { filter_eq { all_rows ; circuit ; rave motion pictures } ; sites } } ; -7 } = true", "question": "of the cinema and movie theater chains , marcus theatres has 7 less sites than rave motion pictures ."}, {"topic": "1984 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1984_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17231267-4.html.csv", "action": "count", "sent": "five of the players finished with scores of two strokes over par .", "annotation": {"scope": "all", "criterion": "equal", "value": "+ 2", "result": "5", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "to par", "+ 2"], "result": null, "ind": 0, "tointer": "select the rows whose to par record fuzzily matches to + 2 .", "tostr": "filter_eq { all_rows ; to par ; + 2 }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; to par ; + 2 } }", "tointer": "select the rows whose to par record fuzzily matches to + 2 . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; to par ; + 2 } } ; 5 } = true", "tointer": "select the rows whose to par record fuzzily matches to + 2 . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; to par ; + 2 } } ; 5 } = true", "interpret": "select the rows whose to par record fuzzily matches to + 2 . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "to par_5": 5, "+ 2_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "to par_5": "to par", "+ 2_6": "+ 2", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "to par_5": [0], "+ 2_6": [0], "5_7": [2]}, "table_header": ["place", "player", "country", "score", "to par"], "table_cont": [["1", "hale irwin", "united states", "68 + 68 = 136", "- 4"], ["2", "fuzzy zoeller", "united states", "71 + 66 = 137", "-- 3"], ["t3", "david canipe", "united states", "69 + 69 = 138", "- 2"], ["t3", "greg norman", "australia", "70 + 68 = 138", "- 2"], ["t5", "curtis strange", "united states", "70 + 69 = 139", "- 1"], ["t5", "jim thorpe", "united states", "68 + 71 = 139", "- 1"], ["7", "fred couples", "united states", "69 + 71 = 140", "e"], ["t8", "andy bean", "united states", "70 + 71 = 141", "+ 1"], ["t8", "jay sigel ( a )", "united states", "69 + 72 = 141", "+ 1"], ["t10", "isao aoki", "japan", "72 + 70 = 142", "+ 2"], ["t10", "seve ballesteros", "spain", "69 + 73 = 142", "+ 2"], ["t10", "johnny miller", "united states", "74 + 68 = 142", "+ 2"], ["t10", "jack nicklaus", "united states", "71 + 71 = 142", "+ 2"], ["t10", "mike reid", "united states", "70 + 72 = 142", "+ 2"]], "query": "eq { count { filter_eq { all_rows ; to par ; + 2 } } ; 5 } = true", "question": "five of the players finished with scores of two strokes over par ."}, {"topic": "1990 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1990_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17129548-1.html.csv", "action": "count", "sent": "there are two golfers in the 1990 us open to finish the tournament with 3 strokes below par .", "annotation": {"scope": "all", "criterion": "equal", "value": "-3", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "to par", "-3"], "result": null, "ind": 0, "tointer": "select the rows whose to par record is equal to -3 .", "tostr": "filter_eq { all_rows ; to par ; -3 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; to par ; -3 } }", "tointer": "select the rows whose to par record is equal to -3 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; to par ; -3 } } ; 2 } = true", "tointer": "select the rows whose to par record is equal to -3 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; to par ; -3 } } ; 2 } = true", "interpret": "select the rows whose to par record is equal to -3 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "to par_5": 5, "-3_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "to par_5": "to par", "-3_6": "-3", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "to par_5": [0], "-3_6": [0], "2_7": [2]}, "table_header": ["player", "country", "year ( s ) won", "total", "to par", "finish"], "table_cont": [["hale irwin", "united states", "1974 , 1979", "280", "- 8", "1"], ["fuzzy zoeller", "united states", "1984", "284", "- 4", "t8"], ["larry nelson", "united states", "1983", "285", "- 3", "t14"], ["scott simpson", "united states", "1987", "285", "- 3", "t14"], ["curtis strange", "united states", "1988 , 1989", "286", "- 2", "t21"], ["jack nicklaus", "united states", "1962 , 1967 , 1972 , 1980", "289", "+ 1", "t33"], ["andy north", "united states", "1978 , 1985", "292", "+ 4", "t51"], ["david graham", "australia", "1981", "298", "+ 10", "64"]], "query": "eq { count { filter_eq { all_rows ; to par ; -3 } } ; 2 } = true", "question": "there are two golfers in the 1990 us open to finish the tournament with 3 strokes below par ."}, {"topic": "list of corporations by market capitalization", "wiki": "https://en.wikipedia.org/wiki/List_of_corporations_by_market_capitalization", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14094649-6.html.csv", "action": "aggregation", "sent": "the average first quarter market capitalization of companies in the top 10 was 305221 .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "305221", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "first quarter"], "result": "305221", "ind": 0, "tostr": "avg { all_rows ; first quarter }"}, "305221"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; first quarter } ; 305221 } = true", "tointer": "the average of the first quarter record of all rows is 305221 ."}, "logic_str": "round_eq { avg { all_rows ; first quarter } ; 305221 } = true", "interpret": "the average of the first quarter record of all rows is 305221 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "first quarter_4": 4, "305221_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "first quarter_4": "first quarter", "305221_5": "305221"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "first quarter_4": [0], "305221_5": [1]}, "table_header": ["rank", "first quarter", "second quarter", "third quarter", "fourth quarter"], "table_cont": [["1", "exxon mobil 452505", "exxon mobil 465652", "exxon mobil 403366", "exxon mobil 406067"], ["2", "petrochina 423996", "petrochina 341140.3", "petrochina 325097.5", "petrochina 259836"], ["3", "general electric 369569", "industrial and commercial bank of china 257004.4", "industrial and commercial bank of china 237951.5", "wal - mart 219898"], ["4", "gazprom 299764", "microsoft 211546.2", "microsoft 229630.7", "china mobile 201291"], ["5", "china mobile 298093", "china mobile 200832.4", "hsbc 198561.1", "procter & gamble 184576"], ["6", "industrial and commercial bank of china 277236", "wal - mart 188752.0", "china mobile 195680.4", "industrial and commercial bank of china 173930"], ["7", "microsoft 264132", "china construction bank 182186.7", "wal - mart 189331.6", "microsoft 172929"], ["8", "at & t 231168", "petrobras 165056.9", "petrobras 189027.7", "at & t 167950"], ["9", "royal dutch shell 220110", "johnson & johnson 156515.9", "china construction bank 186816.7", "johnson & johnson 166002"], ["10", "procter & gamble 215640", "royal dutch shell 156386.7", "royal dutch shell 175986.1", "general electric 161278"]], "query": "round_eq { avg { all_rows ; first quarter } ; 305221 } = true", "question": "the average first quarter market capitalization of companies in the top 10 was 305221 ."}, {"topic": "1966 los angeles dodgers season", "wiki": "https://en.wikipedia.org/wiki/1966_Los_Angeles_Dodgers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12937301-12.html.csv", "action": "majority", "sent": "the majority of players drafted in the 1966 los angeles dodgers season ultimately signed with the dodgers .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "fuzzily_match", "value": "yes", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "signed", "yes"], "result": true, "ind": 0, "tointer": "for the signed records of all rows , most of them fuzzily match to yes .", "tostr": "most_eq { all_rows ; signed ; yes } = true"}, "logic_str": "most_eq { all_rows ; signed ; yes } = true", "interpret": "for the signed records of all rows , most of them fuzzily match to yes .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "signed_3": 3, "yes_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "signed_3": "signed", "yes_4": "yes"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "signed_3": [0], "yes_4": [0]}, "table_header": ["round", "name", "position", "school", "signed"], "table_cont": [["1", "bob stinson", "c", "miami - dade college", "yes"], ["2", "richard schryer", "of", "university of michigan", "yes"], ["3", "james carter", "3b", "trinity university", "yes"], ["4", "john green", "rhp", "gulf coast community college", "no"], ["5", "john herbst", "lhp", "university of southern california", "no twins - 1967"]], "query": "most_eq { all_rows ; signed ; yes } = true", "question": "the majority of players drafted in the 1966 los angeles dodgers season ultimately signed with the dodgers ."}, {"topic": "high - rise ( horse )", "wiki": "https://en.wikipedia.org/wiki/High-Rise_%28horse%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12934739-1.html.csv", "action": "count", "sent": "the horse high-rise had a 1st placing in a total of five different races .", "annotation": {"scope": "all", "criterion": "equal", "value": "1", "result": "5", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "placing", "1"], "result": null, "ind": 0, "tointer": "select the rows whose placing record is equal to 1 .", "tostr": "filter_eq { all_rows ; placing ; 1 }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; placing ; 1 } }", "tointer": "select the rows whose placing record is equal to 1 . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; placing ; 1 } } ; 5 } = true", "tointer": "select the rows whose placing record is equal to 1 . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; placing ; 1 } } ; 5 } = true", "interpret": "select the rows whose placing record is equal to 1 . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "placing_5": 5, "1_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "placing_5": "placing", "1_6": "1", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "placing_5": [0], "1_6": [0], "5_7": [2]}, "table_header": ["race", "dist ( f )", "course", "prize ( k )", "runners", "placing", "margin", "jockey", "trainer"], "table_cont": [["ebf cooperative bank maiden stakes", "7", "doncaster", "3", "18", "1", "short head", "royston ffrench", "luca cumani"], ["buttercross limited stakes", "10", "pontefract", "5", "8", "1", "3.5", "jason weaver", "luca cumani"], ["ebf hedgehope maiden stakes", "12", "lingfield", "31", "6", "1", "neck", "frankie dettori", "luca cumani"], ["derby", "12", "epsom", "598", "15", "1", "head", "olivier peslier", "luca cumani"], ["king george vi & queen elizabeth stakes", "12", "ascot", "354", "8", "2", "1", "olivier peslier", "luca cumani"], ["prix de l'arc de triomphe", "12", "longchamp", "404", "14", "7", "3.25", "michael kinane", "luca cumani"], ["dubai world cup", "10", "nad al sheba", "10", "8", "8", "45", "frankie dettori", "saeed bin suroor"], ["arc trial", "11", "newbury", "28", "6", "2", "0.75", "olivier peslier", "saeed bin suroor"], ["champion stakes", "10", "newmarket rowley", "228", "13", "6", "3", "olivier peslier", "saeed bin suroor"], ["japan cup", "12", "tokyo", "1071", "15", "3", "1.5", "frankie dettori", "saeed bin suroor"], ["dubai city of gold", "12", "nad al sheba", "34", "7", "1", "2.5", "frankie dettori", "saeed bin suroor"], ["dubai sheema classic", "12", "nad al sheba", "731", "16", "3", "5", "frankie dettori", "saeed bin suroor"], ["manhattan handicap", "10", "belmont park", "146", "9", "8", "19.5", "john r velazquez", "kiaran mclaughlin"]], "query": "eq { count { filter_eq { all_rows ; placing ; 1 } } ; 5 } = true", "question": "the horse high-rise had a 1st placing in a total of five different races ."}, {"topic": "1991 - 92 new york rangers season", "wiki": "https://en.wikipedia.org/wiki/1991%E2%80%9392_New_York_Rangers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14034807-7.html.csv", "action": "unique", "sent": "in the 1991 - 92 new york rangers season , in games where one of the teams scored 2 goals , the only time the opponent was the minnesota north stars was on february 1 .", "annotation": {"scope": "subset", "row": "1", "col": "3", "col_other": "2", "criterion": "equal", "value": "minnesota north stars", "subset": {"col": "4", "criterion": "fuzzily_match", "value": "2"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "2"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; score ; 2 }", "tointer": "select the rows whose score record fuzzily matches to 2 ."}, "opponent", "minnesota north stars"], "result": null, "ind": 1, "tointer": "select the rows whose score record fuzzily matches to 2 . among these rows , select the rows whose opponent record fuzzily matches to minnesota north stars .", "tostr": "filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } }", "tointer": "select the rows whose score record fuzzily matches to 2 . among these rows , select the rows whose opponent record fuzzily matches to minnesota north stars . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "2"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; score ; 2 }", "tointer": "select the rows whose score record fuzzily matches to 2 ."}, "opponent", "minnesota north stars"], "result": null, "ind": 1, "tointer": "select the rows whose score record fuzzily matches to 2 . among these rows , select the rows whose opponent record fuzzily matches to minnesota north stars .", "tostr": "filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars }"}, "february"], "result": "1", "ind": 3, "tostr": "hop { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } ; february }"}, "1"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } ; february } ; 1 }", "tointer": "the february record of this unqiue row is 1 ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } ; february } ; 1 } } = true", "tointer": "select the rows whose score record fuzzily matches to 2 . among these rows , select the rows whose opponent record fuzzily matches to minnesota north stars . there is only one such row in the table . the february record of this unqiue row is 1 ."}, "logic_str": "and { only { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } ; february } ; 1 } } = true", "interpret": "select the rows whose score record fuzzily matches to 2 . among these rows , select the rows whose opponent record fuzzily matches to minnesota north stars . there is only one such row in the table . the february record of this unqiue row is 1 .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_7": 7, "score_8": 8, "2_9": 9, "opponent_10": 10, "minnesota north stars_11": 11, "eq_4": 4, "num_hop_3": 3, "february_12": 12, "1_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "score_8": "score", "2_9": "2", "opponent_10": "opponent", "minnesota north stars_11": "minnesota north stars", "eq_4": "eq", "num_hop_3": "num_hop", "february_12": "february", "1_13": "1"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_str_eq_1": [2, 3], "filter_str_eq_0": [1], "all_rows_7": [0], "score_8": [0], "2_9": [0], "opponent_10": [1], "minnesota north stars_11": [1], "eq_4": [5], "num_hop_3": [4], "february_12": [3], "1_13": [4]}, "table_header": ["game", "february", "opponent", "score", "record"], "table_cont": [["53", "1", "minnesota north stars", "2 - 1", "34 - 17 - 2"], ["54", "5", "pittsburgh penguins", "4 - 3", "35 - 17 - 2"], ["55", "7", "washington capitals", "6 - 2", "35 - 18 - 2"], ["56", "9", "detroit red wings", "5 - 5 ot", "35 - 18 - 3"], ["57", "12", "vancouver canucks", "5 - 2", "36 - 18 - 3"], ["58", "14", "new york islanders", "9 - 2", "37 - 18 - 3"], ["59", "16", "new jersey devils", "4 - 2", "37 - 19 - 3"], ["60", "17", "vancouver canucks", "3 - 3 ot", "37 - 19 - 4"], ["61", "20", "new york islanders", "6 - 2", "37 - 20 - 4"], ["62", "21", "minnesota north stars", "5 - 4", "38 - 20 - 4"], ["63", "23", "philadelphia flyers", "2 - 1 ot", "39 - 20 - 4"], ["64", "25", "chicago blackhawks", "4 - 1", "40 - 20 - 4"]], "query": "and { only { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; 2 } ; opponent ; minnesota north stars } ; february } ; 1 } } = true", "question": "in the 1991 - 92 new york rangers season , in games where one of the teams scored 2 goals , the only time the opponent was the minnesota north stars was on february 1 ."}, {"topic": "1963 england rugby union tour of australasia", "wiki": "https://en.wikipedia.org/wiki/1963_England_rugby_union_tour_of_Australasia", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16994527-1.html.csv", "action": "count", "sent": "there were 6 venues used during the 1963 england rugby union tour of australasia .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "6", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "venue"], "result": null, "ind": 0, "tointer": "select the rows whose venue record is arbitrary .", "tostr": "filter_all { all_rows ; venue }"}], "result": "6", "ind": 1, "tostr": "count { filter_all { all_rows ; venue } }", "tointer": "select the rows whose venue record is arbitrary . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; venue } } ; 6 } = true", "tointer": "select the rows whose venue record is arbitrary . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_all { all_rows ; venue } } ; 6 } = true", "interpret": "select the rows whose venue record is arbitrary . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "venue_5": 5, "6_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "venue_5": "venue", "6_6": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "venue_5": [0], "6_6": [2]}, "table_header": ["opposing team", "against", "date", "venue", "status"], "table_cont": [["wellington", "9", "may 18 , 1963", "athletic park , wellington", "tour match"], ["otago", "14", "may 22 , 1963", "carisbrook , dunedin", "tour match"], ["new zealand", "21", "may 25 , 1963", "eden park , auckland", "test match"], ["hawke 's bay", "20", "may 28 , 1963", "mclean park , napier", "tour match"], ["new zealand", "9", "june 1 , 1963", "lancaster park , christchurch", "test match"], ["australia", "18", "june 4 , 1963", "sportground , sydney", "test match"]], "query": "eq { count { filter_all { all_rows ; venue } } ; 6 } = true", "question": "there were 6 venues used during the 1963 england rugby union tour of australasia ."}, {"topic": "list of amd mobile microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_AMD_mobile_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27277284-8.html.csv", "action": "count", "sent": "2 amd mobile microprocessor models have a mult 1 value of 8x .", "annotation": {"scope": "all", "criterion": "equal", "value": "8x", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "mult 1", "8x"], "result": null, "ind": 0, "tointer": "select the rows whose mult 1 record fuzzily matches to 8x .", "tostr": "filter_eq { all_rows ; mult 1 ; 8x }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; mult 1 ; 8x } }", "tointer": "select the rows whose mult 1 record fuzzily matches to 8x . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; mult 1 ; 8x } } ; 2 } = true", "tointer": "select the rows whose mult 1 record fuzzily matches to 8x . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; mult 1 ; 8x } } ; 2 } = true", "interpret": "select the rows whose mult 1 record fuzzily matches to 8x . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "mult 1_5": 5, "8x_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "mult 1_5": "mult 1", "8x_6": "8x", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "mult 1_5": [0], "8x_6": [0], "2_7": [2]}, "table_header": ["model number", "frequency", "l2 cache", "ht", "mult 1", "v core", "tdp", "socket", "release date", "part number ( s )"], "table_cont": [["mobile athlon 64 2700 +", "1600 mhz", "512 kb", "800 mhz", "8x", "1.50 v", "19 - 81.5 w", "socket754", "may 2004", "ama2700bey4ap ( c0 )"], ["mobile athlon 64 2800 +", "1600 mhz", "1024kb", "800 mhz", "8x", "1.50 v", "19 - 81.5 w", "socket 754", "february 2004", "ama2800bex5ap ( c0 ) ama2800bex5ar ( cg )"], ["mobile athlon 64 3000 +", "1800 mhz", "1024kb", "800 mhz", "9x", "1.50 v", "19 - 81.5 w", "socket 754", "september 2003", "ama3000bex5ap ( c0 ) ama3000bex5ar ( cg )"], ["mobile athlon 64 3200 +", "2000 mhz", "1024kb", "800 mhz", "10x", "1.50 v", "19 - 81.5 w", "socket 754", "september 2003", "ama3200bex5ap ( c0 ) ama3200bex5ar ( cg )"], ["mobile athlon 64 3400 +", "2200 mhz", "1024kb", "800 mhz", "11x", "1.50 v", "19 - 81.5 w", "socket 754", "september 2003", "ama3400bex5ap ( c0 ) ama3400bex5ar ( cg )"]], "query": "eq { count { filter_eq { all_rows ; mult 1 ; 8x } } ; 2 } = true", "question": "2 amd mobile microprocessor models have a mult 1 value of 8x ."}, {"topic": "k league challenge", "wiki": "https://en.wikipedia.org/wiki/K_League_Challenge", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15795426-1.html.csv", "action": "unique", "sent": "of the venues in the k league challenge , the only one with a capacity of 15042 is sangju civic stadium .", "annotation": {"scope": "all", "row": "7", "col": "5", "col_other": "4", "criterion": "equal", "value": "15042", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "capacity", "15042"], "result": null, "ind": 0, "tointer": "select the rows whose capacity record is equal to 15042 .", "tostr": "filter_eq { all_rows ; capacity ; 15042 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; capacity ; 15042 } }", "tointer": "select the rows whose capacity record is equal to 15042 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "capacity", "15042"], "result": null, "ind": 0, "tointer": "select the rows whose capacity record is equal to 15042 .", "tostr": "filter_eq { all_rows ; capacity ; 15042 }"}, "home venue"], "result": "sangju civic stadium", "ind": 2, "tostr": "hop { filter_eq { all_rows ; capacity ; 15042 } ; home venue }"}, "sangju civic stadium"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; capacity ; 15042 } ; home venue } ; sangju civic stadium }", "tointer": "the home venue record of this unqiue row is sangju civic stadium ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; capacity ; 15042 } } ; eq { hop { filter_eq { all_rows ; capacity ; 15042 } ; home venue } ; sangju civic stadium } } = true", "tointer": "select the rows whose capacity record is equal to 15042 . there is only one such row in the table . the home venue record of this unqiue row is sangju civic stadium ."}, "logic_str": "and { only { filter_eq { all_rows ; capacity ; 15042 } } ; eq { hop { filter_eq { all_rows ; capacity ; 15042 } ; home venue } ; sangju civic stadium } } = true", "interpret": "select the rows whose capacity record is equal to 15042 . there is only one such row in the table . the home venue record of this unqiue row is sangju civic stadium .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "capacity_7": 7, "15042_8": 8, "str_eq_3": 3, "str_hop_2": 2, "home venue_9": 9, "sangju civic stadium_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "capacity_7": "capacity", "15042_8": "15042", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "home venue_9": "home venue", "sangju civic stadium_10": "sangju civic stadium"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "capacity_7": [0], "15042_8": [0], "str_eq_3": [4], "str_hop_2": [3], "home venue_9": [2], "sangju civic stadium_10": [3]}, "table_header": ["team", "city", "state", "home venue", "capacity"], "table_cont": [["fc anyang", "anyang", "gyeonggi", "anyang stadium", "17143"], ["bucheon fc 1995", "bucheon", "gyeonggi", "bucheon stadium", "34545"], ["chungju hummel fc", "chungju", "chungbuk", "chungju stadium", "15000"], ["goyang hi fc", "goyang", "gyeonggi", "goyang stadium", "41311"], ["gwangju fc", "gwangju", "jeolla", "gwangju world cup stadium", "44118"], ["police fc", "n / a", "n / a", "n / a", "n / a"], ["sangju sangmu", "sangju", "gyeongbuk", "sangju civic stadium", "15042"], ["suwon fc", "suwon", "gyeonggi", "suwon sports complex", "24670"]], "query": "and { only { filter_eq { all_rows ; capacity ; 15042 } } ; eq { hop { filter_eq { all_rows ; capacity ; 15042 } ; home venue } ; sangju civic stadium } } = true", "question": "of the venues in the k league challenge , the only one with a capacity of 15042 is sangju civic stadium ."}, {"topic": "mission albany", "wiki": "https://en.wikipedia.org/wiki/Mission_Albany", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12026040-1.html.csv", "action": "ordinal", "sent": "in mission albany , when the airborne unit is pathfinders , the lowest drop zone time is when the drop zone is a.", "annotation": {"scope": "subset", "row": "1", "col": "7", "order": "1", "col_other": "6", "max_or_min": "min_to_max", "value_mentioned": "no", "subset": {"col": "2", "criterion": "equal", "value": "pathfinders"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": [{"func": "filter_str_eq", "args": ["all_rows", "airborne unit", "pathfinders"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; airborne unit ; pathfinders }", "tointer": "select the rows whose airborne unit record fuzzily matches to pathfinders ."}, "drop zone time", "1"], "result": null, "ind": 1, "tostr": "nth_argmin { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone time ; 1 }"}, "drop zone"], "result": "a", "ind": 2, "tostr": "hop { nth_argmin { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone time ; 1 } ; drop zone }"}, "a"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmin { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone time ; 1 } ; drop zone } ; a } = true", "tointer": "select the rows whose airborne unit record fuzzily matches to pathfinders . select the row whose drop zone time record of these rows is 1st minimum . the drop zone record of this row is a ."}, "logic_str": "eq { hop { nth_argmin { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone time ; 1 } ; drop zone } ; a } = true", "interpret": "select the rows whose airborne unit record fuzzily matches to pathfinders . select the row whose drop zone time record of these rows is 1st minimum . the drop zone record of this row is a .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "nth_argmin_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "airborne unit_6": 6, "pathfinders_7": 7, "drop zone time_8": 8, "1_9": 9, "drop zone_10": 10, "a_11": 11}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "nth_argmin_1": "nth_argmin", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "airborne unit_6": "airborne unit", "pathfinders_7": "pathfinders", "drop zone time_8": "drop zone time", "1_9": "1", "drop zone_10": "drop zone", "a_11": "a"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "nth_argmin_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "airborne unit_6": [0], "pathfinders_7": [0], "drop zone time_8": [1], "1_9": [1], "drop zone_10": [2], "a_11": [3]}, "table_header": ["serial", "airborne unit", "troop carrier group", "of c - 47s", "uk base", "drop zone", "drop zone time"], "table_cont": [["1", "pathfinders", "1st pathfinder prov", "3", "raf north witham", "a", "0020"], ["2", "pathfinders", "1st pathfinder prov", "3", "raf north witham", "c", "0025"], ["6a", "pathfinders", "1st pathfinder prov", "2", "raf north witham", "c", "0027"], ["3", "pathfinders", "1st pathfinder prov", "3", "raf north witham", "d", "0035"], ["7", "2d bn 502d pir", "438th tcg", "36", "raf greenham common", "a", "0048"], ["8", "3rd bn 502d pir", "438th tcg", "45", "raf greenham common", "a", "0050"], ["9", "1st bn 502d pir", "436th tcg", "36", "raf membury", "a", "0055"], ["10", "377th para fa", "436th tcg", "54", "raf membury", "a", "0108"], ["11", "1st bn 506th pir", "439th tcg", "45", "raf upottery", "c", "0114"], ["12", "2nd bn 506th pir", "439th tcg", "36", "raf upottery", "c", "0120"], ["13", "3rd bn 501st pir div hq", "435th tcg", "45", "raf welford", "c", "0120"], ["14", "1st bn 501st pir", "441st tcg", "45", "raf merryfield", "d", "0126"], ["15", "2d bn 501st pir", "441st tcg", "45", "raf merryfield", "d", "0134"], ["16", "3rd bn 506th pir co c 326th engr bn", "440th tcg", "45", "raf exeter", "d", "0140"]], "query": "eq { hop { nth_argmin { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone time ; 1 } ; drop zone } ; a } = true", "question": "in mission albany , when the airborne unit is pathfinders , the lowest drop zone time is when the drop zone is a."}, {"topic": "1990 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1990_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17129548-1.html.csv", "action": "aggregation", "sent": "the finalists in the 1990 us open had an average final score of about 286 strokes .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "287", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "total"], "result": "287", "ind": 0, "tostr": "avg { all_rows ; total }"}, "287"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; total } ; 287 } = true", "tointer": "the average of the total record of all rows is 287 ."}, "logic_str": "round_eq { avg { all_rows ; total } ; 287 } = true", "interpret": "the average of the total record of all rows is 287 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "total_4": 4, "287_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "total_4": "total", "287_5": "287"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "total_4": [0], "287_5": [1]}, "table_header": ["player", "country", "year ( s ) won", "total", "to par", "finish"], "table_cont": [["hale irwin", "united states", "1974 , 1979", "280", "- 8", "1"], ["fuzzy zoeller", "united states", "1984", "284", "- 4", "t8"], ["larry nelson", "united states", "1983", "285", "- 3", "t14"], ["scott simpson", "united states", "1987", "285", "- 3", "t14"], ["curtis strange", "united states", "1988 , 1989", "286", "- 2", "t21"], ["jack nicklaus", "united states", "1962 , 1967 , 1972 , 1980", "289", "+ 1", "t33"], ["andy north", "united states", "1978 , 1985", "292", "+ 4", "t51"], ["david graham", "australia", "1981", "298", "+ 10", "64"]], "query": "round_eq { avg { all_rows ; total } ; 287 } = true", "question": "the finalists in the 1990 us open had an average final score of about 286 strokes ."}, {"topic": "grassroots party", "wiki": "https://en.wikipedia.org/wiki/Grassroots_Party", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1238577-2.html.csv", "action": "superlative", "sent": "in the 1994 elections , the grassroots party candidate colleen bonniwell had the highest popular vote count .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "popular votes"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; popular votes }"}, "candidate"], "result": "colleen bonniwell", "ind": 1, "tostr": "hop { argmax { all_rows ; popular votes } ; candidate }"}, "colleen bonniwell"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; popular votes } ; candidate } ; colleen bonniwell } = true", "tointer": "select the row whose popular votes record of all rows is maximum . the candidate record of this row is colleen bonniwell ."}, "logic_str": "eq { hop { argmax { all_rows ; popular votes } ; candidate } ; colleen bonniwell } = true", "interpret": "select the row whose popular votes record of all rows is maximum . the candidate record of this row is colleen bonniwell .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "popular votes_5": 5, "candidate_6": 6, "colleen bonniwell_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "popular votes_5": "popular votes", "candidate_6": "candidate", "colleen bonniwell_7": "colleen bonniwell"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "popular votes_5": [0], "candidate_6": [1], "colleen bonniwell_7": [2]}, "table_header": ["year", "office", "candidate", "popular votes", "percentage"], "table_cont": [["1986", "mn attorney general", "derrick grimmer", "16394", "1.17 %"], ["1990", "mn governor", "ross s culverhouse", "17176", "0.96 %"], ["1990", "mn treasurer", "colleen bonniwell", "84919", "4.94 %"], ["1994", "mn governor", "will shetterly", "20785", "1.20 %"], ["1994", "mn secretary of state", "dale d wilkinson", "54009", "3.12 %"], ["1994", "mn attorney general", "dean w amundson", "69776", "4.17 %"], ["1994", "mn auditor", "steven c anderson", "80811", "4.79 %"], ["1994", "mn treasurer", "colleen bonniwell", "84486", "5.20 %"], ["1996", "mn senator 62", "steven c anderson", "2032", "6.63 %"], ["1998", "mn governor", "chris wright", "1727", "0.10 %"], ["1998", "mn representative 59a", "dale d wilkinson", "1270", "9.66 %"], ["2010", "mn governor", "chris wright", "7513", "0.4 %"]], "query": "eq { hop { argmax { all_rows ; popular votes } ; candidate } ; colleen bonniwell } = true", "question": "in the 1994 elections , the grassroots party candidate colleen bonniwell had the highest popular vote count ."}, {"topic": "greg norman", "wiki": "https://en.wikipedia.org/wiki/Greg_Norman", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-157447-2.html.csv", "action": "comparative", "sent": "phil mickelson was the runner-up by a wider margin of victory than dudley hart was .", "annotation": {"row_1": "20", "row_2": "19", "col": "4", "col_other": "5", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "runner ( s ) - up", "phil mickelson"], "result": null, "ind": 0, "tointer": "select the rows whose runner ( s ) - up record fuzzily matches to phil mickelson .", "tostr": "filter_eq { all_rows ; runner ( s ) - up ; phil mickelson }"}, "margin of victory"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; runner ( s ) - up ; phil mickelson } ; margin of victory }", "tointer": "select the rows whose runner ( s ) - up record fuzzily matches to phil mickelson . take the margin of victory record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "runner ( s ) - up", "dudley hart"], "result": null, "ind": 1, "tointer": "select the rows whose runner ( s ) - up record fuzzily matches to dudley hart .", "tostr": "filter_eq { all_rows ; runner ( s ) - up ; dudley hart }"}, "margin of victory"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; runner ( s ) - up ; dudley hart } ; margin of victory }", "tointer": "select the rows whose runner ( s ) - up record fuzzily matches to dudley hart . take the margin of victory record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; runner ( s ) - up ; phil mickelson } ; margin of victory } ; hop { filter_eq { all_rows ; runner ( s ) - up ; dudley hart } ; margin of victory } } = true", "tointer": "select the rows whose runner ( s ) - up record fuzzily matches to phil mickelson . take the margin of victory record of this row . select the rows whose runner ( s ) - up record fuzzily matches to dudley hart . take the margin of victory record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; runner ( s ) - up ; phil mickelson } ; margin of victory } ; hop { filter_eq { all_rows ; runner ( s ) - up ; dudley hart } ; margin of victory } } = true", "interpret": "select the rows whose runner ( s ) - up record fuzzily matches to phil mickelson . take the margin of victory record of this row . select the rows whose runner ( s ) - up record fuzzily matches to dudley hart . take the margin of victory record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "runner (s) - up_7": 7, "phil mickelson_8": 8, "margin of victory_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "runner (s) - up_11": 11, "dudley hart_12": 12, "margin of victory_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "runner (s) - up_7": "runner ( s ) - up", "phil mickelson_8": "phil mickelson", "margin of victory_9": "margin of victory", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "runner (s) - up_11": "runner ( s ) - up", "dudley hart_12": "dudley hart", "margin of victory_13": "margin of victory"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "runner (s) - up_7": [0], "phil mickelson_8": [0], "margin of victory_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "runner (s) - up_11": [1], "dudley hart_12": [1], "margin of victory_13": [3]}, "table_header": ["date", "tournament", "winning score", "margin of victory", "runner ( s ) - up"], "table_cont": [["3 jun 1984", "kemper open", "- 8 ( 68 + 68 + 71 + 73 = 280 )", "5 strokes", "mark o'meara"], ["1 jul 1984", "canadian open", "- 10 ( 73 + 68 + 70 + 67 = 278 )", "2 strokes", "jack nicklaus"], ["4 may 1986", "panasonic las vegas invitational", "- 27 ( 73 - 63 + 68 + 64 + 65 = 333 )", "7 strokes", "dan pohl"], ["1 jun 1986", "kemper open", "- 11 ( 72 + 69 + 70 + 66 = 277 )", "playoff", "larry mize"], ["20 jul 1986", "the open championship", "even ( 74 + 63 + 74 + 69 = 280 )", "5 strokes", "gordon j brand"], ["17 apr 1988", "mci heritage golf classic", "- 13 ( 65 + 69 + 71 + 66 = 271 )", "1 stroke", "david frost , gil morgan"], ["20 aug 1989", "the international", "13 points ( 5 - 4 - 11 - 13 )", "2 points", "clarence rose"], ["3 sep 1989", "greater milwaukee open", "- 19 ( 64 + 69 + 66 + 70 = 269 )", "3 strokes", "andy bean"], ["4 mar 1990", "doral - ryder open", "- 15 ( 68 + 73 + 70 + 62 = 273 )", "playoff", "tim simpson , mark calcavecchia , paul azinger"], ["13 may 1990", "memorial tournament", "even ( 73 + 74 + 69 = 216 )", "1 stroke", "payne stewart"], ["13 sep 1992", "canadian open", "- 8 ( 73 + 66 + 71 + 70 = 280 )", "playoff", "bruce lietzke"], ["7 mar 1993", "doral - ryder open", "- 23 ( 65 + 68 + 62 + 70 = 265 )", "4 strokes", "paul azinger , mark mccumber"], ["18 jul 1993", "the open championship", "- 13 ( 66 + 68 + 69 + 64 = 267 )", "2 strokes", "nick faldo"], ["27 mar 1994", "the players championship", "- 24 ( 63 + 67 + 67 + 67 = 264 )", "4 strokes", "fuzzy zoeller"], ["4 jun 1995", "memorial tournament", "- 19 ( 66 + 70 + 67 + 66 = 269 )", "4 strokes", "mark calcavecchia , david duval , steve elkington"], ["25 jun 1995", "canon greater hartford open", "- 13 ( 67 + 64 + 65 + 71 = 267 )", "2 strokes", "dave stockton , kirk triplett , grant waite"], ["27 aug 1995", "nec world series of golf", "- 2 ( 73 + 68 + 70 + 67 = 278 )", "playoff", "billy mayfair , nick price"], ["3 mar 1996", "doral - ryder open", "- 19 ( 67 + 69 + 67 + 66 = 269 )", "2 strokes", "michael bradley , vijay singh"], ["29 jun 1997", "fedex st jude classic", "- 16 ( 68 + 65 + 69 + 66 = 268 )", "1 stroke", "dudley hart"], ["24 aug 1997", "nec world series of golf", "- 7 ( 68 + 68 + 70 + 67 = 273 )", "4 strokes", "phil mickelson"]], "query": "greater { hop { filter_eq { all_rows ; runner ( s ) - up ; phil mickelson } ; margin of victory } ; hop { filter_eq { all_rows ; runner ( s ) - up ; dudley hart } ; margin of victory } } = true", "question": "phil mickelson was the runner-up by a wider margin of victory than dudley hart was ."}, {"topic": "jacques cornu", "wiki": "https://en.wikipedia.org/wiki/Jacques_Cornu", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14890412-3.html.csv", "action": "comparative", "sent": "jacques cornu scored more points in 1987 than he did in 1980 .", "annotation": {"row_1": "10", "row_2": "2", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1987"], "result": null, "ind": 0, "tointer": "select the rows whose year record fuzzily matches to 1987 .", "tostr": "filter_eq { all_rows ; year ; 1987 }"}, "points"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; year ; 1987 } ; points }", "tointer": "select the rows whose year record fuzzily matches to 1987 . take the points record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1980"], "result": null, "ind": 1, "tointer": "select the rows whose year record fuzzily matches to 1980 .", "tostr": "filter_eq { all_rows ; year ; 1980 }"}, "points"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; year ; 1980 } ; points }", "tointer": "select the rows whose year record fuzzily matches to 1980 . take the points record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; year ; 1987 } ; points } ; hop { filter_eq { all_rows ; year ; 1980 } ; points } } = true", "tointer": "select the rows whose year record fuzzily matches to 1987 . take the points record of this row . select the rows whose year record fuzzily matches to 1980 . take the points record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; year ; 1987 } ; points } ; hop { filter_eq { all_rows ; year ; 1980 } ; points } } = true", "interpret": "select the rows whose year record fuzzily matches to 1987 . take the points record of this row . select the rows whose year record fuzzily matches to 1980 . take the points record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "year_7": 7, "1987_8": 8, "points_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "year_11": 11, "1980_12": 12, "points_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "year_7": "year", "1987_8": "1987", "points_9": "points", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "year_11": "year", "1980_12": "1980", "points_13": "points"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "year_7": [0], "1987_8": [0], "points_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "year_11": [1], "1980_12": [1], "points_13": [3]}, "table_header": ["year", "class", "team", "points", "rank", "wins"], "table_cont": [["1980", "250cc", "yamaha", "26", "8th", "0"], ["1980", "350cc", "motul - yamaha", "21", "7th", "0"], ["1981", "350cc", "yamaha", "20", "8th", "0"], ["1982", "250cc", "hostettler - yamaha", "17", "17th", "0"], ["1982", "350cc", "hostettler - yamaha", "31", "7th", "0"], ["1983", "250cc", "hostettler - yamaha", "32", "9th", "0"], ["1984", "250cc", "hostettler - yamaha", "60", "6th", "0"], ["1985", "250cc", "parisienne - honda", "25", "10th", "0"], ["1986", "250cc", "parisienne - honda", "32", "7th", "0"], ["1987", "250cc", "parisienne - honda", "50", "9th", "0"], ["1988", "250cc", "parisienne - honda", "166", "3rd", "2"], ["1989", "250cc", "lucky strike - honda", "187", "3rd", "1"], ["1990", "250cc", "lucky strike - honda", "86", "9th", "0"]], "query": "greater { hop { filter_eq { all_rows ; year ; 1987 } ; points } ; hop { filter_eq { all_rows ; year ; 1980 } ; points } } = true", "question": "jacques cornu scored more points in 1987 than he did in 1980 ."}, {"topic": "united states house of representatives elections , 1946", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1946", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1342233-32.html.csv", "action": "comparative", "sent": "jay le fevre has a first elected year which is earlier than that of hadwen c fuller .", "annotation": {"row_1": "4", "row_2": "5", "col": "4", "col_other": "6", "relation": "less", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "candidates", "jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 %"], "result": null, "ind": 0, "tointer": "select the rows whose candidates record fuzzily matches to jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % .", "tostr": "filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % }"}, "first elected"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected }", "tointer": "select the rows whose candidates record fuzzily matches to jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % . take the first elected record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "candidates", "hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 %"], "result": null, "ind": 1, "tointer": "select the rows whose candidates record fuzzily matches to hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % .", "tostr": "filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % }"}, "first elected"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected }", "tointer": "select the rows whose candidates record fuzzily matches to hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % . take the first elected record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } }", "tointer": "select the rows whose candidates record fuzzily matches to jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % . take the first elected record of this row . select the rows whose candidates record fuzzily matches to hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % . take the first elected record of this row . the first record is less than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "candidates", "jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 %"], "result": null, "ind": 0, "tointer": "select the rows whose candidates record fuzzily matches to jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % .", "tostr": "filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % }"}, "first elected"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected }", "tointer": "select the rows whose candidates record fuzzily matches to jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % . take the first elected record of this row ."}, "1942"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; 1942 }", "tointer": "the first elected record of the first row is 1942 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "candidates", "hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 %"], "result": null, "ind": 1, "tointer": "select the rows whose candidates record fuzzily matches to hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % .", "tostr": "filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % }"}, "first elected"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected }", "tointer": "select the rows whose candidates record fuzzily matches to hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % . take the first elected record of this row ."}, "1943"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } ; 1943 }", "tointer": "the first elected record of the second row is 1943 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; 1942 } ; eq { hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } ; 1943 } }", "tointer": "the first elected record of the first row is 1942 . the first elected record of the second row is 1943 ."}], "result": true, "ind": 8, "tostr": "and { less { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } } ; and { eq { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; 1942 } ; eq { hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } ; 1943 } } } = true", "tointer": "select the rows whose candidates record fuzzily matches to jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % . take the first elected record of this row . select the rows whose candidates record fuzzily matches to hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % . take the first elected record of this row . the first record is less than the second record . the first elected record of the first row is 1942 . the first elected record of the second row is 1943 ."}, "logic_str": "and { less { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } } ; and { eq { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; 1942 } ; eq { hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } ; 1943 } } } = true", "interpret": "select the rows whose candidates record fuzzily matches to jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % . take the first elected record of this row . select the rows whose candidates record fuzzily matches to hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % . take the first elected record of this row . the first record is less than the second record . the first elected record of the first row is 1942 . the first elected record of the second row is 1943 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "less_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "candidates_11": 11, "jay le fevre (r) 69.5% john f killgrew (d) 30.5%_12": 12, "first elected_13": 13, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "candidates_15": 15, "hadwen c fuller (r) 54.3% frank a emma (d) 45.7%_16": 16, "first elected_17": 17, "and_7": 7, "eq_5": 5, "1942_18": 18, "eq_6": 6, "1943_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "less_4": "less", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "candidates_11": "candidates", "jay le fevre (r) 69.5% john f killgrew (d) 30.5%_12": "jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 %", "first elected_13": "first elected", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "candidates_15": "candidates", "hadwen c fuller (r) 54.3% frank a emma (d) 45.7%_16": "hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 %", "first elected_17": "first elected", "and_7": "and", "eq_5": "eq", "1942_18": "1942", "eq_6": "eq", "1943_19": "1943"}, "g_adj": {"and_8": [9], "result_9": [], "less_4": [8], "num_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "candidates_11": [0], "jay le fevre (r) 69.5% john f killgrew (d) 30.5%_12": [0], "first elected_13": [2], "num_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "candidates_15": [1], "hadwen c fuller (r) 54.3% frank a emma (d) 45.7%_16": [1], "first elected_17": [3], "and_7": [8], "eq_5": [7], "1942_18": [5], "eq_6": [7], "1943_19": [6]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["new york 16", "ellsworth b buck", "republican", "1944", "re - elected", "ellsworth b buck ( r ) 61.2 % john burry ( d ) 38.8 %"], ["new york 20", "sol bloom", "democratic", "1923", "re - elected", "sol bloom ( d ) 61.1 % jules j justin ( r ) 38.9 %"], ["new york 28", "ralph a gamble", "republican", "1937", "re - elected", "ralph a gamble ( r ) 75.4 % morris karnes ( d ) 24.6 %"], ["new york 30", "jay le fevre", "republican", "1942", "re - elected", "jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 %"], ["new york 35", "hadwen c fuller", "republican", "1943", "re - elected", "hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 %"]], "query": "and { less { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } } ; and { eq { hop { filter_eq { all_rows ; candidates ; jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 % } ; first elected } ; 1942 } ; eq { hop { filter_eq { all_rows ; candidates ; hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 % } ; first elected } ; 1943 } } } = true", "question": "jay le fevre has a first elected year which is earlier than that of hadwen c fuller ."}, {"topic": "1998 icc knockout trophy", "wiki": "https://en.wikipedia.org/wiki/1998_ICC_KnockOut_Trophy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11950720-6.html.csv", "action": "count", "sent": "there is a total of 1 player ( s ) that bowl with the style of left hand orthodox spin .", "annotation": {"scope": "all", "criterion": "equal", "value": "left arm orthodox spin", "result": "1", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "bowling style", "left arm orthodox spin"], "result": null, "ind": 0, "tointer": "select the rows whose bowling style record fuzzily matches to left arm orthodox spin .", "tostr": "filter_eq { all_rows ; bowling style ; left arm orthodox spin }"}], "result": "1", "ind": 1, "tostr": "count { filter_eq { all_rows ; bowling style ; left arm orthodox spin } }", "tointer": "select the rows whose bowling style record fuzzily matches to left arm orthodox spin . the number of such rows is 1 ."}, "1"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; bowling style ; left arm orthodox spin } } ; 1 } = true", "tointer": "select the rows whose bowling style record fuzzily matches to left arm orthodox spin . the number of such rows is 1 ."}, "logic_str": "eq { count { filter_eq { all_rows ; bowling style ; left arm orthodox spin } } ; 1 } = true", "interpret": "select the rows whose bowling style record fuzzily matches to left arm orthodox spin . the number of such rows is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "bowling style_5": 5, "left arm orthodox spin_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "bowling style_5": "bowling style", "left arm orthodox spin_6": "left arm orthodox spin", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "bowling style_5": [0], "left arm orthodox spin_6": [0], "1_7": [2]}, "table_header": ["player", "date of birth", "batting style", "bowling style", "first class team"], "table_cont": [["hansie cronje ( captain )", "25 september 1969", "right hand bat", "right arm medium", "free state"], ["dale benkenstein", "9 june 1974", "right hand bat", "right arm medium right arm off break", "kwazulu - natal"], ["nicky boje", "20 march 1973", "left hand bat", "left arm orthodox spin", "free state"], ["mark boucher ( wicket - keeper )", "3 december 1976", "right hand bat", "wicket - keeper", "border"], ["derek crookes", "5 march 1969", "right hand bat", "right arm off break", "gauteng"], ["daryll cullinan", "4 march 1967", "right hand bat", "right arm off break", "gauteng"], ["alan dawson", "27 november 1969", "right hand bat", "right arm fast - medium", "western province"], ["steve elworthy", "23 february 1965", "right hand bat", "right arm fast - medium", "northerns"], ["jacques kallis", "16 october 1975", "right hand bat", "right arm fast - medium", "western province"], ["gary kirsten", "23 november 1967", "left hand bat", "right arm off break", "western province"], ["makhaya ntini", "6 july 1977", "right hand bat", "right arm fast", "border"], ["shaun pollock", "16 july 1973", "right hand bat", "right arm fast - medium", "kwazulu - natal"], ["jonty rhodes", "27 july 1969", "right hand bat", "right arm medium", "kwazulu - natal"], ["pat symcox", "14 april 1960", "right hand bat", "right arm off break", "griqualand west"]], "query": "eq { count { filter_eq { all_rows ; bowling style ; left arm orthodox spin } } ; 1 } = true", "question": "there is a total of 1 player ( s ) that bowl with the style of left hand orthodox spin ."}, {"topic": "1974 vfl season", "wiki": "https://en.wikipedia.org/wiki/1974_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10869646-10.html.csv", "action": "aggregation", "sent": "the average crowd size during the 1974 vfl season was approximately 18,504 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "18504", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "crowd"], "result": "18504", "ind": 0, "tostr": "avg { all_rows ; crowd }"}, "18504"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; crowd } ; 18504 } = true", "tointer": "the average of the crowd record of all rows is 18504 ."}, "logic_str": "round_eq { avg { all_rows ; crowd } ; 18504 } = true", "interpret": "the average of the crowd record of all rows is 18504 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "crowd_4": 4, "18504_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "crowd_4": "crowd", "18504_5": "18504"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "crowd_4": [0], "18504_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["collingwood", "12.10 ( 82 )", "north melbourne", "8.15 ( 63 )", "victoria park", "25892", "8 june 1974"], ["south melbourne", "9.13 ( 67 )", "richmond", "23.9 ( 147 )", "lake oval", "12054", "8 june 1974"], ["st kilda", "9.9 ( 63 )", "footscray", "11.10 ( 76 )", "moorabbin oval", "17667", "8 june 1974"], ["melbourne", "19.10 ( 124 )", "fitzroy", "13.15 ( 93 )", "mcg", "12414", "8 june 1974"], ["essendon", "9.14 ( 68 )", "carlton", "16.7 ( 103 )", "windy hill", "24436", "8 june 1974"], ["hawthorn", "14.13 ( 97 )", "geelong", "10.6 ( 66 )", "vfl park", "18562", "8 june 1974"]], "query": "round_eq { avg { all_rows ; crowd } ; 18504 } = true", "question": "the average crowd size during the 1974 vfl season was approximately 18,504 ."}, {"topic": "2004 cfl draft", "wiki": "https://en.wikipedia.org/wiki/2004_CFL_Draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10975034-1.html.csv", "action": "unique", "sent": "in the 2004 cfl draft , the only player to go to college at wake forest was mark moroz .", "annotation": {"scope": "all", "row": "4", "col": "5", "col_other": "3", "criterion": "equal", "value": "wake forest", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "wake forest"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to wake forest .", "tostr": "filter_eq { all_rows ; college ; wake forest }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; college ; wake forest } }", "tointer": "select the rows whose college record fuzzily matches to wake forest . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "wake forest"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to wake forest .", "tostr": "filter_eq { all_rows ; college ; wake forest }"}, "player"], "result": "mark moroz", "ind": 2, "tostr": "hop { filter_eq { all_rows ; college ; wake forest } ; player }"}, "mark moroz"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; college ; wake forest } ; player } ; mark moroz }", "tointer": "the player record of this unqiue row is mark moroz ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; college ; wake forest } } ; eq { hop { filter_eq { all_rows ; college ; wake forest } ; player } ; mark moroz } } = true", "tointer": "select the rows whose college record fuzzily matches to wake forest . there is only one such row in the table . the player record of this unqiue row is mark moroz ."}, "logic_str": "and { only { filter_eq { all_rows ; college ; wake forest } } ; eq { hop { filter_eq { all_rows ; college ; wake forest } ; player } ; mark moroz } } = true", "interpret": "select the rows whose college record fuzzily matches to wake forest . there is only one such row in the table . the player record of this unqiue row is mark moroz .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "college_7": 7, "wake forest_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "mark moroz_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "college_7": "college", "wake forest_8": "wake forest", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "mark moroz_10": "mark moroz"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "college_7": [0], "wake forest_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "mark moroz_10": [3]}, "table_header": ["pick", "cfl team", "player", "position", "college"], "table_cont": [["1", "hamilton tiger - cats", "wayne smith", "ol", "appalachian state"], ["2", "ottawa renegades", "ibrahim khan", "ol", "simon fraser"], ["3", "ottawa renegades", "david azzi", "wr", "ottawa"], ["4", "toronto argonauts", "mark moroz", "ol", "wake forest"], ["5", "bc lions", "oj atogwe", "s", "stanford"], ["6", "saskatchewan roughriders", "ducamel augustin", "fb", "villanova"], ["7", "toronto argonauts", "jean - fredric tremblay", "wr", "laval"], ["8", "montreal alouettes", "alain kashama", "dl", "michigan"], ["9", "edmonton eskimos", "amarpreet sanghera", "ol", "british columbia"]], "query": "and { only { filter_eq { all_rows ; college ; wake forest } } ; eq { hop { filter_eq { all_rows ; college ; wake forest } ; player } ; mark moroz } } = true", "question": "in the 2004 cfl draft , the only player to go to college at wake forest was mark moroz ."}, {"topic": "indiana high school athletics conferences : ohio river valley - western indiana", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Ohio_River_Valley_%E2%80%93_Western_Indiana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18974097-6.html.csv", "action": "majority", "sent": "all of the schools in the ohio river valley - western indiana conference are in the aaa ihsaa class .", "annotation": {"scope": "all", "col": "5", "most_or_all": "all", "criterion": "equal", "value": "aaa", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "ihsaa class", "aaa"], "result": true, "ind": 0, "tointer": "for the ihsaa class records of all rows , all of them fuzzily match to aaa .", "tostr": "all_eq { all_rows ; ihsaa class ; aaa } = true"}, "logic_str": "all_eq { all_rows ; ihsaa class ; aaa } = true", "interpret": "for the ihsaa class records of all rows , all of them fuzzily match to aaa .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "ihsaa class_3": 3, "aaa_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "ihsaa class_3": "ihsaa class", "aaa_4": "aaa"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "ihsaa class_3": [0], "aaa_4": [0]}, "table_header": ["school", "location", "mascot", "enrollment", "ihsaa class", "ihsaa football class", "county"], "table_cont": [["crawfordsville", "crawfordsville", "athenians", "689", "aaa", "aaa", "54 montgomery"], ["danville", "danville", "warriors", "824", "aaa", "aaa", "32 hendricks"], ["frankfort", "frankfort", "hot dogs", "887", "aaa", "aaaa", "12 clinton"], ["lebanon", "lebanon", "tigers", "1038", "aaa", "aaaa", "06 boone"], ["north montgomery", "crawfordsville", "chargers", "641", "aaa", "aaa", "54 montgomery"], ["southmont", "crawfordsville", "mounties", "612", "aaa", "aaa", "54 montgomery"], ["tri - west", "lizton", "bruins", "620", "aaa", "aaa", "32 hendricks"], ["western boone", "thorntown", "stars", "592", "aaa", "aaa", "06 boone"]], "query": "all_eq { all_rows ; ihsaa class ; aaa } = true", "question": "all of the schools in the ohio river valley - western indiana conference are in the aaa ihsaa class ."}, {"topic": "united states house of representatives elections , 1816", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1816", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2668347-17.html.csv", "action": "unique", "sent": "only william piper was the incumbent elected in 1810 .", "annotation": {"scope": "all", "row": "4", "col": "4", "col_other": "2", "criterion": "equal", "value": "1810", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "first elected", "1810"], "result": null, "ind": 0, "tointer": "select the rows whose first elected record is equal to 1810 .", "tostr": "filter_eq { all_rows ; first elected ; 1810 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; first elected ; 1810 } }", "tointer": "select the rows whose first elected record is equal to 1810 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "first elected", "1810"], "result": null, "ind": 0, "tointer": "select the rows whose first elected record is equal to 1810 .", "tostr": "filter_eq { all_rows ; first elected ; 1810 }"}, "incumbent"], "result": "william piper", "ind": 2, "tostr": "hop { filter_eq { all_rows ; first elected ; 1810 } ; incumbent }"}, "william piper"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; first elected ; 1810 } ; incumbent } ; william piper }", "tointer": "the incumbent record of this unqiue row is william piper ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; first elected ; 1810 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1810 } ; incumbent } ; william piper } } = true", "tointer": "select the rows whose first elected record is equal to 1810 . there is only one such row in the table . the incumbent record of this unqiue row is william piper ."}, "logic_str": "and { only { filter_eq { all_rows ; first elected ; 1810 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1810 } ; incumbent } ; william piper } } = true", "interpret": "select the rows whose first elected record is equal to 1810 . there is only one such row in the table . the incumbent record of this unqiue row is william piper .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "first elected_7": 7, "1810_8": 8, "str_eq_3": 3, "str_hop_2": 2, "incumbent_9": 9, "william piper_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "first elected_7": "first elected", "1810_8": "1810", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "incumbent_9": "incumbent", "william piper_10": "william piper"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "first elected_7": [0], "1810_8": [0], "str_eq_3": [4], "str_hop_2": [3], "incumbent_9": [2], "william piper_10": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["pennsylvania 4", "hugh glasgow", "democratic - republican", "1812", "retired democratic - republican hold", "jacob spangler ( dr ) 67.1 % jacob hay ( f ) 32.9 %"], ["pennsylvania 6 plural district with 2 seats", "samuel d ingham", "democratic - republican", "1812", "re - elected", "john ross ( dr ) 50.8 % samuel d ingham ( dr ) 49.2 %"], ["pennsylvania 6 plural district with 2 seats", "john ross", "democratic - republican", "1814", "re - elected", "john ross ( dr ) 50.8 % samuel d ingham ( dr ) 49.2 %"], ["pennsylvania 8", "william piper", "democratic - republican", "1810", "retired democratic - republican hold", "alexander ogle ( dr ) 99.7 %"], ["pennsylvania 12", "aaron lyle", "democratic - republican", "1808", "retired democratic - republican hold", "thomas patterson ( dr ) 87.2 % john hughes ( f ) 12.8 %"], ["pennsylvania 14", "john woods", "federalist", "1814", "retired democratic - republican gain", "henry baldwin ( dr ) 61.6 % walter lowrie ( dr ) 38.4 %"]], "query": "and { only { filter_eq { all_rows ; first elected ; 1810 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1810 } ; incumbent } ; william piper } } = true", "question": "only william piper was the incumbent elected in 1810 ."}, {"topic": "united states house of representatives elections , 1924", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1924", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1342393-10.html.csv", "action": "unique", "sent": "the only candidate in the georgia house of representatives that resulted in a retired democratic hold was james w. wise .", "annotation": {"scope": "all", "row": "5", "col": "5", "col_other": "2", "criterion": "equal", "value": "retired democratic hold", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "retired democratic hold"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to retired democratic hold .", "tostr": "filter_eq { all_rows ; result ; retired democratic hold }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; result ; retired democratic hold } }", "tointer": "select the rows whose result record fuzzily matches to retired democratic hold . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "retired democratic hold"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to retired democratic hold .", "tostr": "filter_eq { all_rows ; result ; retired democratic hold }"}, "incumbent"], "result": "james w wise", "ind": 2, "tostr": "hop { filter_eq { all_rows ; result ; retired democratic hold } ; incumbent }"}, "james w wise"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; result ; retired democratic hold } ; incumbent } ; james w wise }", "tointer": "the incumbent record of this unqiue row is james w wise ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; result ; retired democratic hold } } ; eq { hop { filter_eq { all_rows ; result ; retired democratic hold } ; incumbent } ; james w wise } } = true", "tointer": "select the rows whose result record fuzzily matches to retired democratic hold . there is only one such row in the table . the incumbent record of this unqiue row is james w wise ."}, "logic_str": "and { only { filter_eq { all_rows ; result ; retired democratic hold } } ; eq { hop { filter_eq { all_rows ; result ; retired democratic hold } ; incumbent } ; james w wise } } = true", "interpret": "select the rows whose result record fuzzily matches to retired democratic hold . there is only one such row in the table . the incumbent record of this unqiue row is james w wise .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "result_7": 7, "retired democratic hold_8": 8, "str_eq_3": 3, "str_hop_2": 2, "incumbent_9": 9, "james w wise_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "result_7": "result", "retired democratic hold_8": "retired democratic hold", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "incumbent_9": "incumbent", "james w wise_10": "james w wise"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "result_7": [0], "retired democratic hold_8": [0], "str_eq_3": [4], "str_hop_2": [3], "incumbent_9": [2], "james w wise_10": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["georgia 2", "frank park", "democratic", "1912", "lost renomination democratic hold", "edward e cox ( d ) unopposed"], ["georgia 3", "charles r crisp", "democratic", "1912", "re - elected", "charles r crisp ( d ) unopposed"], ["georgia 4", "william c wright", "democratic", "1918", "re - elected", "william c wright ( d ) unopposed"], ["georgia 5", "william d upshaw", "democratic", "1918", "re - elected", "william d upshaw ( d ) unopposed"], ["georgia 6", "james w wise", "democratic", "1914", "retired democratic hold", "samuel rutherford ( d ) unopposed"], ["georgia 7", "gordon lee", "democratic", "1904", "re - elected", "gordon lee ( d ) 99.9 % a t atwater ( i ) 0.1 %"], ["georgia 8", "charles h brand", "democratic", "1916", "re - elected", "charles h brand ( d ) unopposed"], ["georgia 10", "carl vinson", "democratic", "1914", "re - elected", "carl vinson ( d ) unopposed"], ["georgia 11", "william c lankford", "democratic", "1918", "re - elected", "william c lankford ( d ) unopposed"]], "query": "and { only { filter_eq { all_rows ; result ; retired democratic hold } } ; eq { hop { filter_eq { all_rows ; result ; retired democratic hold } ; incumbent } ; james w wise } } = true", "question": "the only candidate in the georgia house of representatives that resulted in a retired democratic hold was james w. wise ."}, {"topic": "2010 afc champions league", "wiki": "https://en.wikipedia.org/wiki/2010_AFC_Champions_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19412902-1.html.csv", "action": "majority", "sent": "most of the teams in the 2010 afc champions league did not win a play-off .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "play - off", "0"], "result": true, "ind": 0, "tointer": "for the play - off records of all rows , most of them are equal to 0 .", "tostr": "most_eq { all_rows ; play - off ; 0 } = true"}, "logic_str": "most_eq { all_rows ; play - off ; 0 } = true", "interpret": "for the play - off records of all rows , most of them are equal to 0 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "play - off_3": 3, "0_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "play - off_3": "play - off", "0_4": "0"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "play - off_3": [0], "0_4": [0]}, "table_header": ["pos", "member association", "points ( total 500 )", "clubs", "group stage", "play - off", "afc cup"], "table_cont": [["4", "saudi arabia", "365", "12", "4", "0", "0"], ["5", "uae", "356", "12", "3", "1", "0"], ["7", "iran", "340", "18", "4", "0", "0"], ["9", "uzbekistan", "289", "16", "2", "0", "1"], ["10", "qatar", "270", "10", "2", "0", "0"]], "query": "most_eq { all_rows ; play - off ; 0 } = true", "question": "most of the teams in the 2010 afc champions league did not win a play-off ."}, {"topic": "2003 - 04 detroit red wings season", "wiki": "https://en.wikipedia.org/wiki/2003%E2%80%9304_Detroit_Red_Wings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13135264-4.html.csv", "action": "count", "sent": "joseph received the decision a total of four times in the 2003 - 04 detroit red wings season .", "annotation": {"scope": "all", "criterion": "equal", "value": "joseph", "result": "4", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "decision", "joseph"], "result": null, "ind": 0, "tointer": "select the rows whose decision record fuzzily matches to joseph .", "tostr": "filter_eq { all_rows ; decision ; joseph }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; decision ; joseph } }", "tointer": "select the rows whose decision record fuzzily matches to joseph . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; decision ; joseph } } ; 4 } = true", "tointer": "select the rows whose decision record fuzzily matches to joseph . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; decision ; joseph } } ; 4 } = true", "interpret": "select the rows whose decision record fuzzily matches to joseph . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "decision_5": 5, "joseph_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "decision_5": "decision", "joseph_6": "joseph", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "decision_5": [0], "joseph_6": [0], "4_7": [2]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["november 1", "detroit", "4 - 4", "edmonton", "legace", "16839", "5 - 5 - 1 - 0"], ["november 3", "detroit", "1 - 5", "vancouver", "legace", "18630", "5 - 6 - 1 - 0"], ["november 4", "detroit", "3 - 0", "calgary", "joseph", "15259", "6 - 6 - 1 - 0"], ["november 8", "nashville", "4 - 3", "detroit", "joseph", "20066", "6 - 7 - 1 - 0"], ["november 10", "chicago", "0 - 3", "detroit", "hasek", "20066", "7 - 7 - 1 - 0"], ["november 12", "detroit", "6 - 2", "dallas", "hasek", "18532", "8 - 7 - 1 - 0"], ["november 14", "detroit", "4 - 3", "chicago", "hasek", "21856", "9 - 7 - 1 - 0"], ["november 15", "detroit", "1 - 1", "minnesota", "hasek", "18568", "9 - 7 - 2 - 0"], ["november 19", "columbus", "1 - 5", "detroit", "legace", "20066", "10 - 7 - 2 - 0"], ["november 20", "detroit", "0 - 3", "columbus", "legace", "18136", "10 - 8 - 2 - 0"], ["november 22", "detroit", "5 - 2", "minnesota", "joseph", "18568", "11 - 8 - 2 - 0"], ["november 24", "washington", "4 - 1", "detroit", "joseph", "20066", "11 - 9 - 2 - 0"], ["november 26", "edmonton", "1 - 7", "detroit", "legace", "20066", "12 - 9 - 2 - 0"], ["november 28", "ny islanders", "0 - 6", "detroit", "legace", "20066", "13 - 9 - 2 - 0"], ["november 29", "detroit", "2 - 1", "st louis", "legace", "20006", "14 - 9 - 2 - 0"]], "query": "eq { count { filter_eq { all_rows ; decision ; joseph } } ; 4 } = true", "question": "joseph received the decision a total of four times in the 2003 - 04 detroit red wings season ."}, {"topic": "octagonal", "wiki": "https://en.wikipedia.org/wiki/Octagonal", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1284347-1.html.csv", "action": "majority", "sent": "a majority of races in the octagonal were ran by jockey g cooksley .", "annotation": {"scope": "all", "col": "8", "most_or_all": "most", "criterion": "equal", "value": "g cooksley", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "jockey", "g cooksley"], "result": true, "ind": 0, "tointer": "for the jockey records of all rows , most of them fuzzily match to g cooksley .", "tostr": "most_eq { all_rows ; jockey ; g cooksley } = true"}, "logic_str": "most_eq { all_rows ; jockey ; g cooksley } = true", "interpret": "for the jockey records of all rows , most of them fuzzily match to g cooksley .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "jockey_3": 3, "g cooksley_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "jockey_3": "jockey", "g cooksley_4": "g cooksley"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "jockey_3": [0], "g cooksley_4": [0]}, "table_header": ["result", "date", "race", "venue", "group", "distance", "weight ( kg )", "jockey", "winner / 2nd"], "table_cont": [["won", "3 dec 1994", "2yo hcp colts & geldings", "rosehill", "na", "1100 m", "53", "m evans", "2nd - fracture"], ["won", "25 mar 1995", "todman stakes", "rosehill", "g2", "1200 m", "55.5", "g cooksley", "2nd - our maizcay"], ["2nd", "8 apr 1995", "golden slipper", "rosehill", "g1", "1200 m", "55.5", "g cooksley", "1st - flying spur"], ["won", "17 apr 1995", "sires produce stakes", "randwick", "g1", "1400 m", "55.5", "g cooksley", "2nd - isolda"], ["2nd", "29 apr 1995", "champagne stakes", "randwick", "g1", "1600 m", "55.5", "g cooksley", "1st - isolda"]], "query": "most_eq { all_rows ; jockey ; g cooksley } = true", "question": "a majority of races in the octagonal were ran by jockey g cooksley ."}, {"topic": "2003 - 04 detroit red wings season", "wiki": "https://en.wikipedia.org/wiki/2003%E2%80%9304_Detroit_Red_Wings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13135264-4.html.csv", "action": "superlative", "sent": "the game played on november 14 drew the highest attendance in the 2003 - 04 detroit red wings season .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "7", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance }"}, "date"], "result": "november 14", "ind": 1, "tostr": "hop { argmax { all_rows ; attendance } ; date }"}, "november 14"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; attendance } ; date } ; november 14 } = true", "tointer": "select the row whose attendance record of all rows is maximum . the date record of this row is november 14 ."}, "logic_str": "eq { hop { argmax { all_rows ; attendance } ; date } ; november 14 } = true", "interpret": "select the row whose attendance record of all rows is maximum . the date record of this row is november 14 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "date_6": 6, "november 14_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "date_6": "date", "november 14_7": "november 14"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "date_6": [1], "november 14_7": [2]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["november 1", "detroit", "4 - 4", "edmonton", "legace", "16839", "5 - 5 - 1 - 0"], ["november 3", "detroit", "1 - 5", "vancouver", "legace", "18630", "5 - 6 - 1 - 0"], ["november 4", "detroit", "3 - 0", "calgary", "joseph", "15259", "6 - 6 - 1 - 0"], ["november 8", "nashville", "4 - 3", "detroit", "joseph", "20066", "6 - 7 - 1 - 0"], ["november 10", "chicago", "0 - 3", "detroit", "hasek", "20066", "7 - 7 - 1 - 0"], ["november 12", "detroit", "6 - 2", "dallas", "hasek", "18532", "8 - 7 - 1 - 0"], ["november 14", "detroit", "4 - 3", "chicago", "hasek", "21856", "9 - 7 - 1 - 0"], ["november 15", "detroit", "1 - 1", "minnesota", "hasek", "18568", "9 - 7 - 2 - 0"], ["november 19", "columbus", "1 - 5", "detroit", "legace", "20066", "10 - 7 - 2 - 0"], ["november 20", "detroit", "0 - 3", "columbus", "legace", "18136", "10 - 8 - 2 - 0"], ["november 22", "detroit", "5 - 2", "minnesota", "joseph", "18568", "11 - 8 - 2 - 0"], ["november 24", "washington", "4 - 1", "detroit", "joseph", "20066", "11 - 9 - 2 - 0"], ["november 26", "edmonton", "1 - 7", "detroit", "legace", "20066", "12 - 9 - 2 - 0"], ["november 28", "ny islanders", "0 - 6", "detroit", "legace", "20066", "13 - 9 - 2 - 0"], ["november 29", "detroit", "2 - 1", "st louis", "legace", "20006", "14 - 9 - 2 - 0"]], "query": "eq { hop { argmax { all_rows ; attendance } ; date } ; november 14 } = true", "question": "the game played on november 14 drew the highest attendance in the 2003 - 04 detroit red wings season ."}, {"topic": "water polo at the 2004 summer olympics - men 's team rosters", "wiki": "https://en.wikipedia.org/wiki/Water_polo_at_the_2004_Summer_Olympics_%E2%80%93_Men%27s_team_rosters", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17759945-2.html.csv", "action": "unique", "sent": "gavin woods is the only player from the 2004 summer olympic water polo team from the balmain tigers club .", "annotation": {"scope": "all", "row": "10", "col": "6", "col_other": "1", "criterion": "equal", "value": "balmain tigers", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "club", "balmain tigers"], "result": null, "ind": 0, "tointer": "select the rows whose club record fuzzily matches to balmain tigers .", "tostr": "filter_eq { all_rows ; club ; balmain tigers }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; club ; balmain tigers } }", "tointer": "select the rows whose club record fuzzily matches to balmain tigers . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "club", "balmain tigers"], "result": null, "ind": 0, "tointer": "select the rows whose club record fuzzily matches to balmain tigers .", "tostr": "filter_eq { all_rows ; club ; balmain tigers }"}, "name"], "result": "gavin woods", "ind": 2, "tostr": "hop { filter_eq { all_rows ; club ; balmain tigers } ; name }"}, "gavin woods"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; club ; balmain tigers } ; name } ; gavin woods }", "tointer": "the name record of this unqiue row is gavin woods ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; club ; balmain tigers } } ; eq { hop { filter_eq { all_rows ; club ; balmain tigers } ; name } ; gavin woods } } = true", "tointer": "select the rows whose club record fuzzily matches to balmain tigers . there is only one such row in the table . the name record of this unqiue row is gavin woods ."}, "logic_str": "and { only { filter_eq { all_rows ; club ; balmain tigers } } ; eq { hop { filter_eq { all_rows ; club ; balmain tigers } ; name } ; gavin woods } } = true", "interpret": "select the rows whose club record fuzzily matches to balmain tigers . there is only one such row in the table . the name record of this unqiue row is gavin woods .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "club_7": 7, "balmain tigers_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "gavin woods_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "club_7": "club", "balmain tigers_8": "balmain tigers", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "gavin woods_10": "gavin woods"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "club_7": [0], "balmain tigers_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "gavin woods_10": [3]}, "table_header": ["name", "pos", "height", "weight", "date of birth", "club"], "table_cont": [["james stanton", "gk", "m ( ft 6in )", "-", "1983 - 07 - 21", "fremantle mariners"], ["dean semmens", "cb", "m ( ft 2in )", "-", "1979 - 11 - 22", "cn sant andreu"], ["trent franklin", "d", "m ( ft 0in )", "-", "1979 - 02 - 12", "sydney university lions"], ["pietro figlioli", "d", "m ( ft 2in )", "-", "1984 - 05 - 29", "cn barcelona"], ["craig miller", "d", "m ( ft 3in )", "-", "1971 - 11 - 23", "cronulla sharks"], ["toby jenkins", "cf", "m ( ft 4in )", "-", "1979 - 11 - 26", "brisbane barracudas"], ["tim neesham", "d", "m ( ft 0in )", "-", "1979 - 10 - 20", "firenze pallanuoto"], ["sam mcgregor", "cb", "m ( ft 4in )", "-", "1984 - 08 - 12", "cn terassa"], ["thomas whalan", "cb", "m ( ft 4in )", "-", "1980 - 10 - 13", "cn atl\u00e3 \u00a8 tic - barceloneta"], ["gavin woods", "cf", "m ( ft 6in )", "-", "1978 - 03 - 01", "balmain tigers"], ["alex osadchuk", "d", "m ( ft 11in )", "-", "1972 - 02 - 19", "brisbane barracudas"], ["nathan thomas", "d", "m ( ft 4in )", "-", "1972 - 08 - 28", "cn barcelona"], ["rafael sterk", "gk", "m ( ft 1in )", "-", "1978 - 01 - 27", "brisbane barracudas"]], "query": "and { only { filter_eq { all_rows ; club ; balmain tigers } } ; eq { hop { filter_eq { all_rows ; club ; balmain tigers } ; name } ; gavin woods } } = true", "question": "gavin woods is the only player from the 2004 summer olympic water polo team from the balmain tigers club ."}, {"topic": "stephin merritt discography", "wiki": "https://en.wikipedia.org/wiki/Stephin_Merritt_discography", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15593730-1.html.csv", "action": "majority", "sent": "the majority of stephin merritt 's albums were released in the lp format .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "lp", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "format", "lp"], "result": true, "ind": 0, "tointer": "for the format records of all rows , most of them fuzzily match to lp .", "tostr": "most_eq { all_rows ; format ; lp } = true"}, "logic_str": "most_eq { all_rows ; format ; lp } = true", "interpret": "for the format records of all rows , most of them fuzzily match to lp .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "format_3": 3, "lp_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "format_3": "format", "lp_4": "lp"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "format_3": [0], "lp_4": [0]}, "table_header": ["album title", "format", "year", "original label", "chart positions"], "table_cont": [["distant plastic trees", "lp", "1991", "red flame", "-"], ["the wayward bus", "lp", "1992", "popup", "-"], ["the house of tomorrow", "ep", "1992", "feel good all over", "-"], ["the charm of the highway strip", "lp", "1994", "merge records", "-"], ["holiday", "lp", "1994", "feel good all over", "-"], ["get lost", "lp", "1995", "merge records", "-"], ["69 love songs", "lp", "1999", "merge records", "-"], ["i", "lp", "2004", "nonesuch records", "152 ( billboard 200 )"], ["distortion", "lp", "2008", "nonesuch records", "77 ( billboard 200 )"], ["realism", "lp", "2010", "nonesuch records", "110 ( billboard 200 )"], ["love at the bottom of the sea", "lp", "2012", "merge records", "89 ( billboard 200 )"]], "query": "most_eq { all_rows ; format ; lp } = true", "question": "the majority of stephin merritt 's albums were released in the lp format ."}, {"topic": "2010 afc champions league", "wiki": "https://en.wikipedia.org/wiki/2010_AFC_Champions_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19412902-1.html.csv", "action": "count", "sent": "there are three member associations with more than 300 points .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "300", "result": "3", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "points ( total 500 )", "300"], "result": null, "ind": 0, "tointer": "select the rows whose points ( total 500 ) record is greater than 300 .", "tostr": "filter_greater { all_rows ; points ( total 500 ) ; 300 }"}], "result": "3", "ind": 1, "tostr": "count { filter_greater { all_rows ; points ( total 500 ) ; 300 } }", "tointer": "select the rows whose points ( total 500 ) record is greater than 300 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; points ( total 500 ) ; 300 } } ; 3 } = true", "tointer": "select the rows whose points ( total 500 ) record is greater than 300 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_greater { all_rows ; points ( total 500 ) ; 300 } } ; 3 } = true", "interpret": "select the rows whose points ( total 500 ) record is greater than 300 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "points (total 500)_5": 5, "300_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "points (total 500)_5": "points ( total 500 )", "300_6": "300", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "points (total 500)_5": [0], "300_6": [0], "3_7": [2]}, "table_header": ["pos", "member association", "points ( total 500 )", "clubs", "group stage", "play - off", "afc cup"], "table_cont": [["4", "saudi arabia", "365", "12", "4", "0", "0"], ["5", "uae", "356", "12", "3", "1", "0"], ["7", "iran", "340", "18", "4", "0", "0"], ["9", "uzbekistan", "289", "16", "2", "0", "1"], ["10", "qatar", "270", "10", "2", "0", "0"]], "query": "eq { count { filter_greater { all_rows ; points ( total 500 ) ; 300 } } ; 3 } = true", "question": "there are three member associations with more than 300 points ."}, {"topic": "1978 new zealand rugby union tour of britain and ireland", "wiki": "https://en.wikipedia.org/wiki/1978_New_Zealand_rugby_union_tour_of_Britain_and_Ireland", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18844321-1.html.csv", "action": "ordinal", "sent": "in the 1978 new zealand rugby union tour of britain and ireland , the 2nd lowest against was north and midland of scotland .", "annotation": {"row": "15", "col": "2", "order": "2", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "against", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; against ; 2 }"}, "opposing team"], "result": "north and midland of scotland", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; against ; 2 } ; opposing team }"}, "north and midland of scotland"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; against ; 2 } ; opposing team } ; north and midland of scotland } = true", "tointer": "select the row whose against record of all rows is 2nd minimum . the opposing team record of this row is north and midland of scotland ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; against ; 2 } ; opposing team } ; north and midland of scotland } = true", "interpret": "select the row whose against record of all rows is 2nd minimum . the opposing team record of this row is north and midland of scotland .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "against_5": 5, "2_6": 6, "opposing team_7": 7, "north and midland of scotland_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "against_5": "against", "2_6": "2", "opposing team_7": "opposing team", "north and midland of scotland_8": "north and midland of scotland"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "against_5": [0], "2_6": [0], "opposing team_7": [1], "north and midland of scotland_8": [2]}, "table_header": ["opposing team", "against", "date", "venue", "status"], "table_cont": [["cambridge university", "12", "18 october 1978", "grange road , cambridge", "tour match"], ["cardiff", "7", "21 october 1978", "cardiff arms park , cardiff", "tour match"], ["west wales xv", "7", "25 october 1978", "st helen 's , swansea", "tour match"], ["london counties", "12", "28 october 1978", "twickenham , london", "tour match"], ["munster", "12", "31 october 1978", "thomond park , limerick", "tour match"], ["ireland", "6", "4 november 1978", "lansdowne road , dublin", "test match"], ["ulster", "7", "7 november 1978", "ravenhill , belfast", "tour match"], ["wales", "12", "11 november 1978", "cardiff arms park , cardiff", "test match"], ["south and south - west counties", "0", "15 november 1978", "memorial ground , bristol", "tour match"], ["midland counties", "15", "18 november 1978", "welford road , leicester", "tour match"], ["combined services", "6", "21 november 1978", "aldershot military stadium , aldershot", "tour match"], ["england", "6", "25 november 1978", "twickenham , london", "test match"], ["monmouthshire", "9", "29 november 1978", "rodney parade , newport", "tour match"], ["north of england", "6", "2 december 1978", "birkenhead park , birkenhead", "tour match"], ["north and midland of scotland", "3", "5 december 1978", "linksfield stadium , aberdeen", "tour match"], ["scotland", "9", "9 december 1978", "murrayfield , edinburgh", "test match"], ["bridgend", "6", "13 december 1978", "brewery field , bridgend", "tour match"], ["barbarians", "16", "16 december 1978", "cardiff arms park , cardiff", "tour match"]], "query": "eq { hop { nth_argmin { all_rows ; against ; 2 } ; opposing team } ; north and midland of scotland } = true", "question": "in the 1978 new zealand rugby union tour of britain and ireland , the 2nd lowest against was north and midland of scotland ."}, {"topic": "1979 - 80 new york rangers season", "wiki": "https://en.wikipedia.org/wiki/1979%E2%80%9380_New_York_Rangers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17562956-13.html.csv", "action": "count", "sent": "the new york rangers drafted two players in the c position .", "annotation": {"scope": "all", "criterion": "equal", "value": "c", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "c"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to c .", "tostr": "filter_eq { all_rows ; position ; c }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; position ; c } }", "tointer": "select the rows whose position record fuzzily matches to c . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; position ; c } } ; 2 } = true", "tointer": "select the rows whose position record fuzzily matches to c . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; position ; c } } ; 2 } = true", "interpret": "select the rows whose position record fuzzily matches to c . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "position_5": 5, "c_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "position_5": "position", "c_6": "c", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "position_5": [0], "c_6": [0], "2_7": [2]}, "table_header": ["round", "player", "position", "nationality", "college / junior / club team ( league )"], "table_cont": [["1", "doug sulliman", "lw", "canada", "kitchener rangers ( oha )"], ["2", "ed hospodar", "d", "united states", "ottawa 67 's ( oha )"], ["4", "pat conacher", "c", "canada", "saskatoon blades ( wchl )"], ["5", "dan makuch", "rw", "canada", "clarkson university ( ncaa )"], ["6", "stan adams", "c", "canada", "niagara falls flyers ( oha )"]], "query": "eq { count { filter_eq { all_rows ; position ; c } } ; 2 } = true", "question": "the new york rangers drafted two players in the c position ."}, {"topic": "list of presidents of fifa", "wiki": "https://en.wikipedia.org/wiki/List_of_presidents_of_FIFA", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11052-1.html.csv", "action": "comparative", "sent": "jo\u00e3o havelange took office as the president of fifa earlier than sepp blatter .", "annotation": {"row_1": "7", "row_2": "8", "col": "4", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "president", "jo\u00e3o havelange"], "result": null, "ind": 0, "tointer": "select the rows whose president record fuzzily matches to jo\u00e3o havelange .", "tostr": "filter_eq { all_rows ; president ; jo\u00e3o havelange }"}, "took office"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; president ; jo\u00e3o havelange } ; took office }", "tointer": "select the rows whose president record fuzzily matches to jo\u00e3o havelange . take the took office record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "president", "sepp blatter"], "result": null, "ind": 1, "tointer": "select the rows whose president record fuzzily matches to sepp blatter .", "tostr": "filter_eq { all_rows ; president ; sepp blatter }"}, "took office"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; president ; sepp blatter } ; took office }", "tointer": "select the rows whose president record fuzzily matches to sepp blatter . take the took office record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; president ; jo\u00e3o havelange } ; took office } ; hop { filter_eq { all_rows ; president ; sepp blatter } ; took office } } = true", "tointer": "select the rows whose president record fuzzily matches to jo\u00e3o havelange . take the took office record of this row . select the rows whose president record fuzzily matches to sepp blatter . take the took office record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; president ; jo\u00e3o havelange } ; took office } ; hop { filter_eq { all_rows ; president ; sepp blatter } ; took office } } = true", "interpret": "select the rows whose president record fuzzily matches to jo\u00e3o havelange . take the took office record of this row . select the rows whose president record fuzzily matches to sepp blatter . take the took office record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "president_7": 7, "jo\u00e3o havelange_8": 8, "took office_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "president_11": 11, "sepp blatter_12": 12, "took office_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "president_7": "president", "jo\u00e3o havelange_8": "jo\u00e3o havelange", "took office_9": "took office", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "president_11": "president", "sepp blatter_12": "sepp blatter", "took office_13": "took office"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "president_7": [0], "jo\u00e3o havelange_8": [0], "took office_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "president_11": [1], "sepp blatter_12": [1], "took office_13": [3]}, "table_header": ["presidency", "president", "date of birth", "took office", "left office"], "table_cont": [["1", "robert gu\u00e9rin", "1876", "1904", "1906"], ["2", "daniel burley woolfall", "june 15 , 1852", "1906", "1918"], ["3", "jules rimet", "october 14 , 1873", "1921", "1954"], ["4", "rodolphe seeldrayers", "december 16 , 1876", "1954", "1955"], ["5", "arthur drewry", "march 3 , 1891", "1955", "1961"], ["6", "stanley rous", "april 25 , 1895", "1961", "1974"], ["7", "jo\u00e3o havelange", "may 8 , 1916", "1974", "1998"], ["8", "sepp blatter", "march 10 , 1936", "1998", "incumbent"]], "query": "less { hop { filter_eq { all_rows ; president ; jo\u00e3o havelange } ; took office } ; hop { filter_eq { all_rows ; president ; sepp blatter } ; took office } } = true", "question": "jo\u00e3o havelange took office as the president of fifa earlier than sepp blatter ."}, {"topic": "tom weiskopf", "wiki": "https://en.wikipedia.org/wiki/Tom_Weiskopf", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1579748-6.html.csv", "action": "unique", "sent": "of the tournaments that tom weiskopf participated in , the only one with 1 win was the open championship .", "annotation": {"scope": "all", "row": "3", "col": "2", "col_other": "1", "criterion": "equal", "value": "1", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "wins", "1"], "result": null, "ind": 0, "tointer": "select the rows whose wins record is equal to 1 .", "tostr": "filter_eq { all_rows ; wins ; 1 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; wins ; 1 } }", "tointer": "select the rows whose wins record is equal to 1 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "wins", "1"], "result": null, "ind": 0, "tointer": "select the rows whose wins record is equal to 1 .", "tostr": "filter_eq { all_rows ; wins ; 1 }"}, "tournament"], "result": "the open championship", "ind": 2, "tostr": "hop { filter_eq { all_rows ; wins ; 1 } ; tournament }"}, "the open championship"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; wins ; 1 } ; tournament } ; the open championship }", "tointer": "the tournament record of this unqiue row is the open championship ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; wins ; 1 } } ; eq { hop { filter_eq { all_rows ; wins ; 1 } ; tournament } ; the open championship } } = true", "tointer": "select the rows whose wins record is equal to 1 . there is only one such row in the table . the tournament record of this unqiue row is the open championship ."}, "logic_str": "and { only { filter_eq { all_rows ; wins ; 1 } } ; eq { hop { filter_eq { all_rows ; wins ; 1 } ; tournament } ; the open championship } } = true", "interpret": "select the rows whose wins record is equal to 1 . there is only one such row in the table . the tournament record of this unqiue row is the open championship .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "wins_7": 7, "1_8": 8, "str_eq_3": 3, "str_hop_2": 2, "tournament_9": 9, "the open championship_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "wins_7": "wins", "1_8": "1", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "tournament_9": "tournament", "the open championship_10": "the open championship"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "wins_7": [0], "1_8": [0], "str_eq_3": [4], "str_hop_2": [3], "tournament_9": [2], "the open championship_10": [3]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "4", "7", "12", "16", "15"], ["us open", "0", "5", "6", "11", "18", "16"], ["the open championship", "1", "1", "3", "9", "19", "12"], ["pga championship", "0", "2", "5", "6", "18", "12"], ["totals", "1", "12", "21", "38", "71", "55"]], "query": "and { only { filter_eq { all_rows ; wins ; 1 } } ; eq { hop { filter_eq { all_rows ; wins ; 1 } ; tournament } ; the open championship } } = true", "question": "of the tournaments that tom weiskopf participated in , the only one with 1 win was the open championship ."}, {"topic": "1955 vfl season", "wiki": "https://en.wikipedia.org/wiki/1955_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10773753-16.html.csv", "action": "superlative", "sent": "the game that took place at the mcg venue drew the largest crowd size .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "5", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "crowd"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; crowd }"}, "venue"], "result": "mcg", "ind": 1, "tostr": "hop { argmax { all_rows ; crowd } ; venue }"}, "mcg"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; crowd } ; venue } ; mcg } = true", "tointer": "select the row whose crowd record of all rows is maximum . the venue record of this row is mcg ."}, "logic_str": "eq { hop { argmax { all_rows ; crowd } ; venue } ; mcg } = true", "interpret": "select the row whose crowd record of all rows is maximum . the venue record of this row is mcg .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "crowd_5": 5, "venue_6": 6, "mcg_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "crowd_5": "crowd", "venue_6": "venue", "mcg_7": "mcg"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "crowd_5": [0], "venue_6": [1], "mcg_7": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "8.5 ( 53 )", "south melbourne", "11.16 ( 82 )", "junction oval", "10150", "6 august 1955"], ["footscray", "10.13 ( 73 )", "geelong", "10.16 ( 76 )", "western oval", "33902", "6 august 1955"], ["fitzroy", "6.17 ( 53 )", "richmond", "11.9 ( 75 )", "brunswick street oval", "14000", "6 august 1955"], ["north melbourne", "8.12 ( 60 )", "hawthorn", "8.5 ( 53 )", "arden street oval", "9000", "6 august 1955"], ["melbourne", "16.23 ( 119 )", "essendon", "7.12 ( 54 )", "mcg", "49352", "6 august 1955"], ["collingwood", "12.17 ( 89 )", "carlton", "7.10 ( 52 )", "victoria park", "28000", "6 august 1955"]], "query": "eq { hop { argmax { all_rows ; crowd } ; venue } ; mcg } = true", "question": "the game that took place at the mcg venue drew the largest crowd size ."}, {"topic": "achmed labasanov", "wiki": "https://en.wikipedia.org/wiki/Achmed_Labasanov", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17430272-2.html.csv", "action": "comparative", "sent": "achmed labasanov 's fight against lee hasdell went more rounds than his fight against zabir elbiev .", "annotation": {"row_1": "10", "row_2": "11", "col": "6", "col_other": "3", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "lee hasdell"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to lee hasdell .", "tostr": "filter_eq { all_rows ; opponent ; lee hasdell }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; opponent ; lee hasdell } ; round }", "tointer": "select the rows whose opponent record fuzzily matches to lee hasdell . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "zabir elbiev"], "result": null, "ind": 1, "tointer": "select the rows whose opponent record fuzzily matches to zabir elbiev .", "tostr": "filter_eq { all_rows ; opponent ; zabir elbiev }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; opponent ; zabir elbiev } ; round }", "tointer": "select the rows whose opponent record fuzzily matches to zabir elbiev . take the round record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; opponent ; lee hasdell } ; round } ; hop { filter_eq { all_rows ; opponent ; zabir elbiev } ; round } } = true", "tointer": "select the rows whose opponent record fuzzily matches to lee hasdell . take the round record of this row . select the rows whose opponent record fuzzily matches to zabir elbiev . take the round record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; opponent ; lee hasdell } ; round } ; hop { filter_eq { all_rows ; opponent ; zabir elbiev } ; round } } = true", "interpret": "select the rows whose opponent record fuzzily matches to lee hasdell . take the round record of this row . select the rows whose opponent record fuzzily matches to zabir elbiev . take the round record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "opponent_7": 7, "lee hasdell_8": 8, "round_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "opponent_11": 11, "zabir elbiev_12": 12, "round_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "opponent_7": "opponent", "lee hasdell_8": "lee hasdell", "round_9": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "opponent_11": "opponent", "zabir elbiev_12": "zabir elbiev", "round_13": "round"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "opponent_7": [0], "lee hasdell_8": [0], "round_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "opponent_11": [1], "zabir elbiev_12": [1], "round_13": [3]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "location"], "table_cont": [["loss", "7 - 5", "gary goodridge", "decision ( split )", "pride 21", "3", "saitama , japan"], ["win", "7 - 4", "mindaugas kulikauskas", "decision", "rings lithuania : bushido rings 3", "2", "lithuania"], ["loss", "6 - 4", "andrey juravkov", "decision", "bars - bars", "3", "moscow , russia"], ["win", "6 - 3", "stanislav nuschik", "tko", "bars - moscow vs st petersburg", "2", "moscow , russia"], ["loss", "5 - 3", "islam dadalov", "decision", "iafc - pankration russian championship 2001", "n / a", "yaroslavl , russia"], ["loss", "5 - 2", "ant\u00e3nio rodrigo nogueira", "submission ( armbar )", "rings : king of kings 2000 block a", "1", "tokyo , japan"], ["win", "5 - 1", "vepcho bardanashvili", "submission ( achilles lock )", "rings : russia vs georgia", "1", "ekaterinburg , russia"], ["win", "4 - 1", "valentijn overeem", "submission ( achilles lock )", "rings russia : russia vs the world", "1", "ekaterinburg , russia"], ["win", "3 - 1", "vyacheslav kiselyov", "submission ( armbar )", "iafc - pankration world championship 2000", "1", "moscow , russia"], ["loss", "2 - 1", "lee hasdell", "tko ( kick )", "rings : king of kings 1999 block a", "2", "tokyo , japan"], ["win", "2 - 0", "zabir elbiev", "tko ( cut )", "iafc - pankration russian championship 1999", "1", "russia"], ["win", "1 - 0", "denis shibankov", "submission ( strikes )", "iafc - pankration european championship 1998", "1", "moscow , russia"]], "query": "greater { hop { filter_eq { all_rows ; opponent ; lee hasdell } ; round } ; hop { filter_eq { all_rows ; opponent ; zabir elbiev } ; round } } = true", "question": "achmed labasanov 's fight against lee hasdell went more rounds than his fight against zabir elbiev ."}, {"topic": "washington redskins draft history", "wiki": "https://en.wikipedia.org/wiki/Washington_Redskins_draft_history", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17100961-44.html.csv", "action": "count", "sent": "the washington redskins drafted a total of two players in the lb position .", "annotation": {"scope": "all", "criterion": "equal", "value": "lb", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "lb"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to lb .", "tostr": "filter_eq { all_rows ; position ; lb }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; position ; lb } }", "tointer": "select the rows whose position record fuzzily matches to lb . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; position ; lb } } ; 2 } = true", "tointer": "select the rows whose position record fuzzily matches to lb . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; position ; lb } } ; 2 } = true", "interpret": "select the rows whose position record fuzzily matches to lb . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "position_5": 5, "lb_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "position_5": "position", "lb_6": "lb", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "position_5": [0], "lb_6": [0], "2_7": [2]}, "table_header": ["round", "pick", "overall", "name", "position", "college"], "table_cont": [["6", "14", "144", "jon keyworth", "rb", "colorado"], ["7", "24", "180", "mike varty", "lb", "northwestern"], ["8", "14", "196", "darwin robinson", "rb", "dakota state"], ["9", "10", "218", "mark sens", "de", "colorado"], ["9", "20", "228", "mike flater", "k", "colo school of mines"], ["9", "25", "233", "jim kennedy", "te", "colorado state"], ["10", "24", "258", "johnny vann", "db", "south dakota"], ["11", "22", "282", "joe miller", "ot", "villanova"], ["13", "20", "332", "stu o'dell", "lb", "indiana"], ["14", "23", "361", "don van galder", "qb", "utah"], ["16", "21", "411", "nate anderson", "rb", "eastern illinois"]], "query": "eq { count { filter_eq { all_rows ; position ; lb } } ; 2 } = true", "question": "the washington redskins drafted a total of two players in the lb position ."}, {"topic": "london underground", "wiki": "https://en.wikipedia.org/wiki/London_Underground", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17839-1.html.csv", "action": "superlative", "sent": "the newest line on the london underground is the jubilee line .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "first operated"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; first operated }"}, "name"], "result": "jubilee line", "ind": 1, "tostr": "hop { argmax { all_rows ; first operated } ; name }"}, "jubilee line"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; first operated } ; name } ; jubilee line } = true", "tointer": "select the row whose first operated record of all rows is maximum . the name record of this row is jubilee line ."}, "logic_str": "eq { hop { argmax { all_rows ; first operated } ; name } ; jubilee line } = true", "interpret": "select the row whose first operated record of all rows is maximum . the name record of this row is jubilee line .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "first operated_5": 5, "name_6": 6, "jubilee line_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "first operated_5": "first operated", "name_6": "name", "jubilee line_7": "jubilee line"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "first operated_5": [0], "name_6": [1], "jubilee line_7": [2]}, "table_header": ["name", "map colour", "first operated", "type", "length", "no sta", "current stock", "future stock", "trips per annum ( 1000 )", "avg trips per mile ( 1000 )"], "table_cont": [["bakerloo line", "brown", "1906", "deep tube", "23.2 km 14.5 mi", "25", "1972 stock", "n / a", "111136", "7665"], ["central line", "red", "1900", "deep tube", "74 0 km 46 0 mi", "49", "1992 stock", "n / a", "260916", "5672"], ["circle line", "yellow", "1871", "sub surface", "27.2 km 17 0 mi", "36", "c stock s stock", "s stock ( currently replacing c stock )", "114609", "4716"], ["district line", "green", "1868", "sub surface", "64 0 km 40 0 mi", "60", "c stock and d78 stock", "s stock from 2014", "208317", "5208"], ["hammersmith & city line", "pink", "1864", "sub surface", "25.5 km 15.9 mi", "29", "c stock s stock", "s stock ( currently replacing c stock )", "114609", "4716"], ["jubilee line", "silver", "1979", "deep tube", "36.2 km 22.5 mi", "27", "1996 stock", "n / a", "213554", "9491"], ["metropolitan line", "purple", "1863", "sub surface", "66.7 km 41.5 mi", "34", "s stock", "n / a", "66779", "1609"], ["northern line", "black", "1890", "deep tube", "58 0 km 36 0 mi", "50", "1995 stock", "n / a", "252310", "7009"], ["piccadilly line", "dark blue", "1906", "deep tube", "71 0 km 44.3 mi", "53", "1973 stock", "n / a", "210169", "4744"], ["victoria line", "light blue", "1968", "deep tube", "21 0 km 13.3 mi", "16", "2009 stock", "n / a", "199988", "15093"], ["waterloo & city line", "turquoise", "1898", "deep tube", "2.5 km 1.5 mi", "2", "1992 stock", "n / a", "15892", "10595"]], "query": "eq { hop { argmax { all_rows ; first operated } ; name } ; jubilee line } = true", "question": "the newest line on the london underground is the jubilee line ."}, {"topic": "1969 player 's county league", "wiki": "https://en.wikipedia.org/wiki/1969_Player%27s_County_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28797906-3.html.csv", "action": "comparative", "sent": "ken biggs took fewer wickets than stuart turner .", "annotation": {"row_1": "4", "row_2": "3", "col": "4", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "ken higgs"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to ken higgs .", "tostr": "filter_eq { all_rows ; player ; ken higgs }"}, "wickets"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; ken higgs } ; wickets }", "tointer": "select the rows whose player record fuzzily matches to ken higgs . take the wickets record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "stuart turner"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to stuart turner .", "tostr": "filter_eq { all_rows ; player ; stuart turner }"}, "wickets"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; stuart turner } ; wickets }", "tointer": "select the rows whose player record fuzzily matches to stuart turner . take the wickets record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; ken higgs } ; wickets } ; hop { filter_eq { all_rows ; player ; stuart turner } ; wickets } } = true", "tointer": "select the rows whose player record fuzzily matches to ken higgs . take the wickets record of this row . select the rows whose player record fuzzily matches to stuart turner . take the wickets record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; player ; ken higgs } ; wickets } ; hop { filter_eq { all_rows ; player ; stuart turner } ; wickets } } = true", "interpret": "select the rows whose player record fuzzily matches to ken higgs . take the wickets record of this row . select the rows whose player record fuzzily matches to stuart turner . take the wickets record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "ken higgs_8": 8, "wickets_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "stuart turner_12": 12, "wickets_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "ken higgs_8": "ken higgs", "wickets_9": "wickets", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "stuart turner_12": "stuart turner", "wickets_13": "wickets"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "ken higgs_8": [0], "wickets_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "stuart turner_12": [1], "wickets_13": [3]}, "table_header": ["player", "county", "balls", "wickets", "average", "economy", "bbi", "4wi", "5wi"], "table_cont": [["keith boyce", "essex", "708", "26", "12.00", "2.54", "3 / 15", "0", "0"], ["peter sainsbury", "hampshire", "644", "28", "13.96", "3.64", "4 / 23", "2", "0"], ["stuart turner", "essex", "639", "27", "14.85", "3.76", "4 / 14", "1", "0"], ["ken higgs", "lancashire", "673", "26", "15.23", "3.53", "4 / 22", "1", "0"], ["ray east", "essex", "660", "29", "15.24", "4.01", "6 / 18", "0", "2"], ["butch white", "hampshire", "698", "26", "17.92", "4.00", "5 / 31", "1", "1"]], "query": "less { hop { filter_eq { all_rows ; player ; ken higgs } ; wickets } ; hop { filter_eq { all_rows ; player ; stuart turner } ; wickets } } = true", "question": "ken biggs took fewer wickets than stuart turner ."}, {"topic": "2007 - 08 kfc twenty20 big bash", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_KFC_Twenty20_Big_Bash", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12562212-5.html.csv", "action": "aggregation", "sent": "the average score for the 2007 - 08 kfc twenty20 big bash was 74.8 .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "74.8", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "score"], "result": "74.8", "ind": 0, "tostr": "avg { all_rows ; score }"}, "74.8"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; score } ; 74.8 } = true", "tointer": "the average of the score record of all rows is 74.8 ."}, "logic_str": "round_eq { avg { all_rows ; score } ; 74.8 } = true", "interpret": "the average of the score record of all rows is 74.8 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "score_4": 4, "74.8_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "score_4": "score", "74.8_5": "74.8"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "score_4": [0], "74.8_5": [1]}, "table_header": ["player", "score", "balls", "opponent", "ground"], "table_cont": [["shaun marsh ( western australia )", "86", "55", "victoria", "waca ground"], ["luke pomersbach ( western australia )", "79", "45", "tasmania", "waca ground"], ["david hussey ( victoria )", "70", "40", "new south wales", "melbourne cricket ground"], ["shaun marsh ( western australia )", "70", "49", "queensland", "waca ground"], ["shane watson ( queensland )", "69", "32", "tasmania", "brisbane cricket ground"]], "query": "round_eq { avg { all_rows ; score } ; 74.8 } = true", "question": "the average score for the 2007 - 08 kfc twenty20 big bash was 74.8 ."}, {"topic": "benedict ako", "wiki": "https://en.wikipedia.org/wiki/Benedict_Ako", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18564451-1.html.csv", "action": "aggregation", "sent": "benedict ako had an average finish of around 15th from 1997 to 2001 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "15th", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "result"], "result": "15th", "ind": 0, "tostr": "avg { all_rows ; result }"}, "15th"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; result } ; 15th } = true", "tointer": "the average of the result record of all rows is 15th ."}, "logic_str": "round_eq { avg { all_rows ; result } ; 15th } = true", "interpret": "the average of the result record of all rows is 15th .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "result_4": 4, "15th_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "result_4": "result", "15th_5": "15th"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "result_4": [0], "15th_5": [1]}, "table_header": ["year", "tournament", "venue", "result", "event"], "table_cont": [["1997", "world cross country championships", "turin , italy", "25th", "long race"], ["1998", "world cross country championships", "marrakech , morocco", "26th", "long race"], ["1998", "world cross country championships", "marrakech , morocco", "6th", "team competition"], ["2001", "world half marathon championships", "bristol , england", "22nd", "half marathon"], ["2001", "world half marathon championships", "bristol , england", "3rd", "team competition"]], "query": "round_eq { avg { all_rows ; result } ; 15th } = true", "question": "benedict ako had an average finish of around 15th from 1997 to 2001 ."}, {"topic": "moussa sow", "wiki": "https://en.wikipedia.org/wiki/Moussa_Sow", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12726056-3.html.csv", "action": "superlative", "sent": "the game played on 9 october 2010 had the highest number of goals scored .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "result"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; result }"}, "date"], "result": "9 october 2010", "ind": 1, "tostr": "hop { argmax { all_rows ; result } ; date }"}, "9 october 2010"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; result } ; date } ; 9 october 2010 } = true", "tointer": "select the row whose result record of all rows is maximum . the date record of this row is 9 october 2010 ."}, "logic_str": "eq { hop { argmax { all_rows ; result } ; date } ; 9 october 2010 } = true", "interpret": "select the row whose result record of all rows is maximum . the date record of this row is 9 october 2010 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "result_5": 5, "date_6": 6, "9 october 2010_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "result_5": "result", "date_6": "date", "9 october 2010_7": "9 october 2010"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "result_5": [0], "date_6": [1], "9 october 2010_7": [2]}, "table_header": ["goal", "date", "venue", "score", "result", "competition"], "table_cont": [["1", "5 september 2010", "lubumbashi , dr congo", "1 - 0", "4 - 0", "2012 africa cup of nations qualifying"], ["2", "9 october 2010", "dakar , senegal", "4 - 0", "7 - 0", "2012 africa cup of nations qualifying"], ["3", "9 february 2011", "dakar , senegal", "2 - 0", "3 - 0", "friendly"], ["4", "3 september 2011", "dakar , senegal", "1 - 0", "2 - 0", "2012 africa cup of nations qualifying"], ["5", "3 september 2011", "dakar , senegal", "2 - 0", "2 - 0", "2012 africa cup of nations qualifying"], ["6", "25 january 2012", "bata , equatorial guinea", "1 - 1", "2 - 1", "2012 africa cup of nations"], ["7", "5 february 2013", "paris , france", "1 - 0", "1 - 1", "friendly"], ["8", "23 march 2013", "conakry , guinea", "1 - 0", "1 - 1", "2014 fifa world cup qualification"]], "query": "eq { hop { argmax { all_rows ; result } ; date } ; 9 october 2010 } = true", "question": "the game played on 9 october 2010 had the highest number of goals scored ."}, {"topic": "ar - 15 variants", "wiki": "https://en.wikipedia.org/wiki/AR-15_variants", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12834315-8.html.csv", "action": "aggregation", "sent": "the average barrel length of all ar-15 variants is somewhere around 16.5 inches .", "annotation": {"scope": "all", "col": "7", "type": "average", "result": "16.5 inches", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "barrel length"], "result": "16.5 inches", "ind": 0, "tostr": "avg { all_rows ; barrel length }"}, "16.5 inches"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; barrel length } ; 16.5 inches } = true", "tointer": "the average of the barrel length record of all rows is 16.5 inches ."}, "logic_str": "round_eq { avg { all_rows ; barrel length } ; 16.5 inches } = true", "interpret": "the average of the barrel length record of all rows is 16.5 inches .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "barrel length_4": 4, "16.5 inches_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "barrel length_4": "barrel length", "16.5 inches_5": "16.5 inches"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "barrel length_4": [0], "16.5 inches_5": [1]}, "table_header": ["colt model no", "diemaco model", "stock", "fire control", "rear sight", "forward assist", "barrel length", "barrel profile", "barrel twist", "hand guards", "bayonet lug", "muzzle device"], "table_cont": [["715", "c7", "a2", "s - 1 - f", "a1", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["n / a", "c7ft", "a2", "s - 1 - f", "weaver", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["n / a", "c7a2", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["750", "colt / diemaco lmg / lsw", "a2", "s - f", "a2", "yes", "20 in", "hbar", "1:7", "square lmg", "no", "a2"], ["n / a", "lsw", "a2", "s - f", "weaver", "yes", "20 in", "hbar", "1:7", "square lmg", "no", "a2"], ["725", "c8", "3rd generation", "s - 1 - f", "a1", "yes", "14.5 in", "a1", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8ft", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "14.5 in", "a1", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8fthb", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "14.5 in", "a2", "1:7", "short ribbed", "yes", "a2"], ["n / a", "sfw", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "16 in", "sfw", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8cqb", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "10 in", "a2", "1:7", "short ribbed", "yes", "a2"]], "query": "round_eq { avg { all_rows ; barrel length } ; 16.5 inches } = true", "question": "the average barrel length of all ar-15 variants is somewhere around 16.5 inches ."}, {"topic": "2008 in paraguayan football", "wiki": "https://en.wikipedia.org/wiki/2008_in_Paraguayan_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17334827-4.html.csv", "action": "superlative", "sent": "the libertad team had the most points in the 2008 paraguayan football season .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "team"], "result": "libertad", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; team }"}, "libertad"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; team } ; libertad } = true", "tointer": "select the row whose points record of all rows is maximum . the team record of this row is libertad ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; team } ; libertad } = true", "interpret": "select the row whose points record of all rows is maximum . the team record of this row is libertad .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "team_6": 6, "libertad_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "team_6": "team", "libertad_7": "libertad"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "team_6": [1], "libertad_7": [2]}, "table_header": ["team", "average", "points", "played", "2006", "2007", "2008"], "table_cont": [["libertad", "2.179", "279", "126", "83 / 40", "95 / 44", "101 / 44"], ["cerro porte\u00f1o", "2.023", "259", "126", "92 / 40", "92 / 44", "75 / 44"], ["nacional", "1.484", "190", "126", "53 / 40", "60 / 44", "77 / 44"], ["olimpia", "1.406", "180", "126", "50 / 40", "76 / 44", "54 / 44"], ["sol de am\u00e9rica", "1.363", "120", "86", "n / a", "57 / 44", "63 / 44"], ["sportivo luque\u00f1o", "1.335", "171", "126", "56 / 40", "66 / 44", "49 / 44"], ["tacuary", "1.335", "171", "126", "66 / 40", "51 / 44", "54 / 44"], ["guaran\u00ed", "1.265", "162", "126", "42 / 40", "41 / 44", "79 / 44"], ["2 de mayo", "1.126", "142", "126", "58 / 40", "34 / 44", "50 / 42"], ["12 de octubre", "1.132", "145", "126", "42 / 40", "49 / 44", "53 / 44"], ["3 de febrero", "1.062", "136", "126", "36 / 40", "49 / 44", "51 / 44"], ["silvio pettirossi", "0.500", "22", "42", "n / a", "n / a", "22 / 44"]], "query": "eq { hop { argmax { all_rows ; points } ; team } ; libertad } = true", "question": "the libertad team had the most points in the 2008 paraguayan football season ."}, {"topic": "list of yukon territorial highways", "wiki": "https://en.wikipedia.org/wiki/List_of_Yukon_territorial_highways", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1360044-1.html.csv", "action": "aggregation", "sent": "the yukon territorial highways run for a total length of 2,336.25 miles .", "annotation": {"scope": "all", "col": "5", "type": "sum", "result": "2,336.25", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "length ( mi )"], "result": "2,336.25", "ind": 0, "tostr": "sum { all_rows ; length ( mi ) }"}, "2,336.25"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; length ( mi ) } ; 2,336.25 } = true", "tointer": "the sum of the length ( mi ) record of all rows is 2,336.25 ."}, "logic_str": "round_eq { sum { all_rows ; length ( mi ) } ; 2,336.25 } = true", "interpret": "the sum of the length ( mi ) record of all rows is 2,336.25 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "length (mi)_4": 4, "2,336.25_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "length (mi)_4": "length ( mi )", "2,336.25_5": "2,336.25"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "length (mi)_4": [0], "2,336.25_5": [1]}, "table_header": ["name", "number", "from", "length ( km )", "length ( mi )"], "table_cont": [["alaska highway", "1", "towards fort nelson , bc", "957.15", "594.75"], ["south klondike highway", "2", "towards skagway , ak", "133.7", "83.1"], ["north klondike highway", "2", "north of whitehorse ( hwy 1 )", "524", "326"], ["haines road", "3", "towards haines , ak", "175.0", "108.7"], ["robert campbell highway", "4", "watson lake ( hwy 1 )", "583", "362"], ["dempster highway", "5", "flat creek ( hwy 2 )", "465", "289"], ["south canol road", "6", "johnson 's crossing ( hwy 6 )", "219.1", "136.1"], ["north canol road", "6", "ross river ( hwy 4 )", "234.7", "145.8"], ["atlin road", "7", "jake 's corner ( hwy 8 )", "42.4", "26.3"], ["tagish road", "8", "jake 's corner ( hwy 1 )", "54", "34"], ["top of the world highway", "9", "dawson city ( hwy 2 )", "105", "65"], ["nahanni range road", "10", "north of watson lake ( hwy 4 )", "134", "83"], ["silver trail", "11", "stewart crossing ( hwy 2 )", "110", "68"], ["takhini hot springs road", "14", "north of whitehorse ( hwy 2 )", "9.2", "5.7"], ["mitchell road", "15", "south of faro ( hwy 4 )", "10.8", "6.7"], ["cassiar highway", "37", "west of watson lake ( hwy 1 )", "3.4", "2.1"]], "query": "round_eq { sum { all_rows ; length ( mi ) } ; 2,336.25 } = true", "question": "the yukon territorial highways run for a total length of 2,336.25 miles ."}, {"topic": "list of schools in the hawke 's bay region", "wiki": "https://en.wikipedia.org/wiki/List_of_schools_in_the_Hawke%27s_Bay_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12195931-1.html.csv", "action": "count", "sent": "all but one of the schools are managed by the state authority .", "annotation": {"scope": "all", "criterion": "equal", "value": "state integrated", "result": "1", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "authority", "state integrated"], "result": null, "ind": 0, "tointer": "select the rows whose authority record fuzzily matches to state integrated .", "tostr": "filter_eq { all_rows ; authority ; state integrated }"}], "result": "1", "ind": 1, "tostr": "count { filter_eq { all_rows ; authority ; state integrated } }", "tointer": "select the rows whose authority record fuzzily matches to state integrated . the number of such rows is 1 ."}, "1"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; authority ; state integrated } } ; 1 } = true", "tointer": "select the rows whose authority record fuzzily matches to state integrated . the number of such rows is 1 ."}, "logic_str": "eq { count { filter_eq { all_rows ; authority ; state integrated } } ; 1 } = true", "interpret": "select the rows whose authority record fuzzily matches to state integrated . the number of such rows is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "authority_5": 5, "state integrated_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "authority_5": "authority", "state integrated_6": "state integrated", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "authority_5": [0], "state integrated_6": [0], "1_7": [2]}, "table_header": ["name", "years", "gender", "area", "authority", "decile", "roll"], "table_cont": [["frasertown school", "1 - 6", "coed", "frasertown", "state", "4", "107"], ["kotemaori school", "1 - 8", "coed", "kotemaori", "state", "4", "6"], ["mohaka school", "1 - 8", "coed", "mohaka", "state", "1", "36"], ["nuhaka school", "1 - 8", "coed", "nuhaka", "state", "2", "123"], ["ohuka school", "1 - 8", "coed", "ohuka", "state", "10", "12"], ["putere school", "1 - 8", "coed", "putere", "state", "2", "12"], ["ruakituri school", "1 - 8", "coed", "ruakituri", "state", "7", "9"], ["st joseph 's school", "1 - 8", "coed", "wairoa", "state integrated", "3", "122"], ["te kura o waikaremoana", "1 - 8", "coed", "tuai", "state", "2", "27"], ["te mahia school", "1 - 8", "coed", "mahia", "state", "1", "48"], ["tiaho primary school", "1 - 6", "coed", "wairoa", "state", "2", "150"], ["tkkm o ngati kahungunu o te wairoa", "1 - 8", "coed", "wairoa", "state", "1", "61"], ["wairoa college", "7 - 15", "coed", "wairoa", "state", "2", "544"], ["wairoa primary school", "1 - 6", "coed", "wairoa", "state", "2", "228"]], "query": "eq { count { filter_eq { all_rows ; authority ; state integrated } } ; 1 } = true", "question": "all but one of the schools are managed by the state authority ."}, {"topic": "cities of east asia", "wiki": "https://en.wikipedia.org/wiki/Cities_of_East_Asia", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16489766-7.html.csv", "action": "comparative", "sent": "the population of seongnam is higher than the population of namyangju .", "annotation": {"row_1": "10", "row_2": "19", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "city", "seongnam"], "result": null, "ind": 0, "tointer": "select the rows whose city record fuzzily matches to seongnam .", "tostr": "filter_eq { all_rows ; city ; seongnam }"}, "population ( 2010 )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; city ; seongnam } ; population ( 2010 ) }", "tointer": "select the rows whose city record fuzzily matches to seongnam . take the population ( 2010 ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "city", "namyangju"], "result": null, "ind": 1, "tointer": "select the rows whose city record fuzzily matches to namyangju .", "tostr": "filter_eq { all_rows ; city ; namyangju }"}, "population ( 2010 )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; city ; namyangju } ; population ( 2010 ) }", "tointer": "select the rows whose city record fuzzily matches to namyangju . take the population ( 2010 ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; city ; seongnam } ; population ( 2010 ) } ; hop { filter_eq { all_rows ; city ; namyangju } ; population ( 2010 ) } } = true", "tointer": "select the rows whose city record fuzzily matches to seongnam . take the population ( 2010 ) record of this row . select the rows whose city record fuzzily matches to namyangju . take the population ( 2010 ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; city ; seongnam } ; population ( 2010 ) } ; hop { filter_eq { all_rows ; city ; namyangju } ; population ( 2010 ) } } = true", "interpret": "select the rows whose city record fuzzily matches to seongnam . take the population ( 2010 ) record of this row . select the rows whose city record fuzzily matches to namyangju . take the population ( 2010 ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "city_7": 7, "seongnam_8": 8, "population (2010)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "city_11": 11, "namyangju_12": 12, "population (2010)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "city_7": "city", "seongnam_8": "seongnam", "population (2010)_9": "population ( 2010 )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "city_11": "city", "namyangju_12": "namyangju", "population (2010)_13": "population ( 2010 )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "city_7": [0], "seongnam_8": [0], "population (2010)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "city_11": [1], "namyangju_12": [1], "population (2010)_13": [3]}, "table_header": ["city", "korean", "hanja", "province", "population ( 2010 )"], "table_cont": [["seoul", "\uc11c\uc6b8", "\uc11c\uc6b8", "special city", "9794304"], ["busan", "\ubd80\uc0b0", "\u91dc\u5c71", "metropolitan city", "3414950"], ["incheon", "\uc778\ucc9c", "\u4ec1\u5ddd", "metropolitan city", "2662509"], ["daegu", "\ub300\uad6c", "\u5927\u90b1", "metropolitan city", "2446418"], ["daejeon", "\ub300\uc804", "\u5927\u7530", "metropolitan city", "1501859"], ["gwangju", "\uad11\uc8fc", "\u5149\u5dde", "metropolitan city", "1469293"], ["ulsan", "\uc6b8\uc0b0", "\u851a\u5c71", "metropolitan city", "1082567"], ["suwon", "\uc218\uc6d0", "\u6c34\u539f", "gyeonggi", "1071913"], ["changwon", "\ucc3d\uc6d0", "\u660c\u539f", "south gyeongsang", "1058021"], ["seongnam", "\uc131\ub0a8", "\u57ce\u5357", "gyeonggi", "949964"], ["goyang", "\uace0\uc591", "\u9ad8\u967d", "gyeonggi", "905076"], ["yongin", "\uc6a9\uc778", "\u9f8d\u4ec1", "gyeonggi", "856765"], ["bucheon", "\ubd80\ucc9c", "\u5bcc\u5ddd", "gyeonggi", "853039"], ["ansan", "\uc548\uc0b0", "\u5b89\u5c71", "gyeonggi", "728775"], ["cheongju", "\uccad\uc8fc", "\u6df8\u5dde", "north chungcheong", "666924"], ["jeonju", "\uc804\uc8fc", "\u5168\u5dde", "north jeolla", "649728"], ["anyang", "\uc548\uc591", "\u5b89\u990a", "gyeonggi", "602122"], ["cheonan", "\ucc9c\uc548", "\u5929\u5b89", "south chungcheong", "574623"], ["namyangju", "\ub0a8\uc591\uc8fc", "\u5357\u694a\u5dde", "gyeonggi", "529898"], ["pohang", "\ud3ec\ud56d", "\u6d66\u9805", "north gyeongsang", "511390"]], "query": "greater { hop { filter_eq { all_rows ; city ; seongnam } ; population ( 2010 ) } ; hop { filter_eq { all_rows ; city ; namyangju } ; population ( 2010 ) } } = true", "question": "the population of seongnam is higher than the population of namyangju ."}, {"topic": "china open ( badminton )", "wiki": "https://en.wikipedia.org/wiki/China_Open_%28badminton%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12204717-1.html.csv", "action": "comparative", "sent": "in the china open , alan budi kusuma won the mens singles one year before hermawan susanto .", "annotation": {"row_1": "1", "row_2": "2", "col": "1", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "1 year", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "mens singles", "alan budi kusuma"], "result": null, "ind": 0, "tointer": "select the rows whose mens singles record fuzzily matches to alan budi kusuma .", "tostr": "filter_eq { all_rows ; mens singles ; alan budi kusuma }"}, "year"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; mens singles ; alan budi kusuma } ; year }", "tointer": "select the rows whose mens singles record fuzzily matches to alan budi kusuma . take the year record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "mens singles", "hermawan susanto"], "result": null, "ind": 1, "tointer": "select the rows whose mens singles record fuzzily matches to hermawan susanto .", "tostr": "filter_eq { all_rows ; mens singles ; hermawan susanto }"}, "year"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; mens singles ; hermawan susanto } ; year }", "tointer": "select the rows whose mens singles record fuzzily matches to hermawan susanto . take the year record of this row ."}], "result": "-1 year", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; mens singles ; alan budi kusuma } ; year } ; hop { filter_eq { all_rows ; mens singles ; hermawan susanto } ; year } }"}, "-1 year"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; mens singles ; alan budi kusuma } ; year } ; hop { filter_eq { all_rows ; mens singles ; hermawan susanto } ; year } } ; -1 year } = true", "tointer": "select the rows whose mens singles record fuzzily matches to alan budi kusuma . take the year record of this row . select the rows whose mens singles record fuzzily matches to hermawan susanto . take the year record of this row . the second record is 1 year larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; mens singles ; alan budi kusuma } ; year } ; hop { filter_eq { all_rows ; mens singles ; hermawan susanto } ; year } } ; -1 year } = true", "interpret": "select the rows whose mens singles record fuzzily matches to alan budi kusuma . take the year record of this row . select the rows whose mens singles record fuzzily matches to hermawan susanto . take the year record of this row . the second record is 1 year larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"str_eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "mens singles_8": 8, "alan budi kusuma_9": 9, "year_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "mens singles_12": 12, "hermawan susanto_13": 13, "year_14": 14, "-1 year_15": 15}, "g_ids_features": {"str_eq_5": "str_eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "mens singles_8": "mens singles", "alan budi kusuma_9": "alan budi kusuma", "year_10": "year", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "mens singles_12": "mens singles", "hermawan susanto_13": "hermawan susanto", "year_14": "year", "-1 year_15": "-1 year"}, "g_adj": {"str_eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "mens singles_8": [0], "alan budi kusuma_9": [0], "year_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "mens singles_12": [1], "hermawan susanto_13": [1], "year_14": [3], "-1 year_15": [5]}, "table_header": ["year", "mens singles", "womens singles", "mens doubles", "womens doubles", "mixed doubles"], "table_cont": [["1991", "alan budi kusuma", "huang hua", "li yongbo tian bingyi", "chung myung - hee hwang hye - young", "liu jianjun wang xiaoyuan"], ["1992", "hermawan susanto", "yao yan", "ricky subagja rexy mainaky", "yao fen lin yanfen", "aryono miranat eliza nathanael"], ["1993", "joko suprianto", "han jingna", "rudy gunawan bambang suprianto", "wu yuhong chen ying", "chen xingdong sun man"], ["1995", "dong jiong", "ye zhaoying", "huang zhanzhong jiang xin", "ge fei gu jun", "peng xinyong chen xingdong"], ["1997", "dong jiong", "gong zhichao", "ge cheng tao xiaoqiang", "ge fei gu jun", "kim dong - moon ra kyung - min"], ["1999", "dong jiong", "zhou mi", "ha tae - kwon kim dong - moon", "ge fei gu jun", "liu yong ge fei"], ["2001", "xia xuanze", "zhou mi", "zhang wei zhang jun", "zhang jiewen wei yili", "liu yong chen lin"], ["2002", "wong choong hann", "gong ruina", "pramote teerawiwatana tesana panvisvas", "gao ling huang sui", "zhang jun gao ling"], ["2003", "lin dan", "zhou mi", "lars paaske jonas rasmussen", "gao ling huang sui", "zhang jun gao ling"], ["2004", "lin dan", "xie xingfang", "candra wijaya sigit budiarto", "yang wei zhang jiewen", "jens eriksen mette schjoldager"], ["2005", "chen hong", "zhang ning", "candra wijaya sigit budiarto", "yang wei zhang jiewen", "nathan robertson gail emms"], ["2006", "chen hong", "zhang ning", "markis kido hendra setiawan", "yang wei zhang jiewen", "xie zhongbo zhang yawen"], ["2007", "bao chunlai", "wong mew choo", "markis kido hendra setiawan", "gao ling zhao tingting", "nova widianto lilyana natsir"], ["2008", "lin dan", "jiang yanjiao", "jung jae - sung lee yong - dae", "zhang yawen zhao tingting", "lee yong - dae lee hyo - jung"], ["2009", "lin dan", "jiang yanjiao", "jung jae - sung lee yong - dae", "tian qing zhang yawen", "lee yong - dae lee hyo - jung"], ["2010", "chen long", "jiang yanjiao", "jung jae - sung lee yong - dae", "cheng shu zhao yunlei", "tao jiaming tian qing"], ["2011", "lin dan", "wang yihan", "mathias boe carsten mogensen", "wang xiaoli yu yang", "zhang nan zhao yunlei"], ["2012", "chen long", "li xuerui", "mathias boe carsten mogensen", "wang xiaoli yu yang", "xu chen ma jin"]], "query": "eq { diff { hop { filter_eq { all_rows ; mens singles ; alan budi kusuma } ; year } ; hop { filter_eq { all_rows ; mens singles ; hermawan susanto } ; year } } ; -1 year } = true", "question": "in the china open , alan budi kusuma won the mens singles one year before hermawan susanto ."}, {"topic": "albania in the eurovision song contest 2008", "wiki": "https://en.wikipedia.org/wiki/Albania_in_the_Eurovision_Song_Contest_2008", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14314911-1.html.csv", "action": "comparative", "sent": "for albanian singers in the eurovision song contest in 2008 , samanta karavello got twenty more points than teuta kurti .", "annotation": {"row_1": "12", "row_2": "11", "col": "4", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "20", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "singer", "samanta karavello"], "result": null, "ind": 0, "tointer": "select the rows whose singer record fuzzily matches to samanta karavello .", "tostr": "filter_eq { all_rows ; singer ; samanta karavello }"}, "points"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; singer ; samanta karavello } ; points }", "tointer": "select the rows whose singer record fuzzily matches to samanta karavello . take the points record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "singer", "teuta kurti"], "result": null, "ind": 1, "tointer": "select the rows whose singer record fuzzily matches to teuta kurti .", "tostr": "filter_eq { all_rows ; singer ; teuta kurti }"}, "points"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; singer ; teuta kurti } ; points }", "tointer": "select the rows whose singer record fuzzily matches to teuta kurti . take the points record of this row ."}], "result": "20", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; singer ; samanta karavello } ; points } ; hop { filter_eq { all_rows ; singer ; teuta kurti } ; points } }"}, "20"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; singer ; samanta karavello } ; points } ; hop { filter_eq { all_rows ; singer ; teuta kurti } ; points } } ; 20 } = true", "tointer": "select the rows whose singer record fuzzily matches to samanta karavello . take the points record of this row . select the rows whose singer record fuzzily matches to teuta kurti . take the points record of this row . the first record is 20 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; singer ; samanta karavello } ; points } ; hop { filter_eq { all_rows ; singer ; teuta kurti } ; points } } ; 20 } = true", "interpret": "select the rows whose singer record fuzzily matches to samanta karavello . take the points record of this row . select the rows whose singer record fuzzily matches to teuta kurti . take the points record of this row . the first record is 20 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "singer_8": 8, "samanta karavello_9": 9, "points_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "singer_12": 12, "teuta kurti_13": 13, "points_14": 14, "20_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "singer_8": "singer", "samanta karavello_9": "samanta karavello", "points_10": "points", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "singer_12": "singer", "teuta kurti_13": "teuta kurti", "points_14": "points", "20_15": "20"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "singer_8": [0], "samanta karavello_9": [0], "points_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "singer_12": [1], "teuta kurti_13": [1], "points_14": [3], "20_15": [5]}, "table_header": ["draw", "singer", "song", "points", "place"], "table_cont": [["1", "manjola nallbani", "kjo bot\u00eb merr frym\u00eb nga dashuria", "27", "7"], ["2", "produkt 28", "30 sekonda", "3", "15"], ["3", "eneida tarifa", "e para let\u00ebr", "11", "10"], ["4", "mariza ikonomi", "mall i tretur", "20", "9"], ["5", "greta ko\u00e7i", "nat\u00ebn t\u00eb k\u00ebrkova", "35", "6"], ["6", "flaka krelani & doruntina disha", "jeta k\u00ebrkon dashuri", "57", "2"], ["7", "mira kon\u00e7i & redon makashi", "n\u00ebn nj\u00eb qiell", "37", "5"], ["8", "kthjellu", "dhoma", "9", "11"], ["9", "kozma dushi", "tatuazh n\u00eb kujtes\u00eb", "1", "16"], ["10", "devis xherahu", "endacaku", "0", "17"], ["11", "teuta kurti", "qyteti i dashuris\u00eb", "3", "14"], ["12", "samanta karavello", "pse u harrua dashuria", "23", "8"], ["13", "juliana pasha", "nj\u00eb qiell t\u00eb ri", "54", "3"], ["14", "agim poshka", "kujt i them t\u00eb dua", "8", "12"], ["15", "jonida maliqi", "s ' ka fajtor n\u00eb dashuri", "36", "4"], ["16", "olta boka", "zemr\u00ebn e lam\u00eb peng", "67", "1"], ["17", "rosela gjylbegu", "po lind nj\u00eb yll", "8", "13"]], "query": "eq { diff { hop { filter_eq { all_rows ; singer ; samanta karavello } ; points } ; hop { filter_eq { all_rows ; singer ; teuta kurti } ; points } } ; 20 } = true", "question": "for albanian singers in the eurovision song contest in 2008 , samanta karavello got twenty more points than teuta kurti ."}, {"topic": "list of south american countries by gdp ( ppp ) per capita", "wiki": "https://en.wikipedia.org/wiki/List_of_South_American_countries_by_GDP_%28PPP%29_per_capita", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2249087-1.html.csv", "action": "ordinal", "sent": "according to the imf , uruguay had the third highest gdp per capita of south american countries in 2011 .", "annotation": {"row": "3", "col": "4", "order": "3", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "2011 ( imf )", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; 2011 ( imf ) ; 3 }"}, "nation"], "result": "uruguay", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; 2011 ( imf ) ; 3 } ; nation }"}, "uruguay"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; 2011 ( imf ) ; 3 } ; nation } ; uruguay } = true", "tointer": "select the row whose 2011 ( imf ) record of all rows is 3rd maximum . the nation record of this row is uruguay ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; 2011 ( imf ) ; 3 } ; nation } ; uruguay } = true", "interpret": "select the row whose 2011 ( imf ) record of all rows is 3rd maximum . the nation record of this row is uruguay .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "2011 (imf)_5": 5, "3_6": 6, "nation_7": 7, "uruguay_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "2011 (imf)_5": "2011 ( imf )", "3_6": "3", "nation_7": "nation", "uruguay_8": "uruguay"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "2011 (imf)_5": [0], "3_6": [0], "nation_7": [1], "uruguay_8": [2]}, "table_header": ["south american rank", "world rank", "nation", "2011 ( imf )", "2008 ( cia factbook )"], "table_cont": [["1", "51", "argentina", "17376", "14500"], ["2", "55", "chile", "16171", "15400"], ["3", "59", "uruguay", "15469", "12300"], ["4", "71", "venezuela", "12407", "13500"], ["5", "74", "brazil", "11845", "10513"], ["6", "82", "colombia", "10155", "9000"], ["7", "83", "peru", "10000", "8500"], ["8", "86", "suriname", "9492", "8900"], ["9", "91", "ecuador", "8335", "7700"], ["10", "96", "guyana", "7541", "4000"], ["11", "110", "paraguay", "5548", "4400"]], "query": "eq { hop { nth_argmax { all_rows ; 2011 ( imf ) ; 3 } ; nation } ; uruguay } = true", "question": "according to the imf , uruguay had the third highest gdp per capita of south american countries in 2011 ."}, {"topic": "united states house of representatives elections , 1990", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1990", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341568-24.html.csv", "action": "majority", "sent": "most of the incumbents for the districts in minnesota were registered democrats in the 1990 united states house of representative elections .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "democratic", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "party", "democratic"], "result": true, "ind": 0, "tointer": "for the party records of all rows , most of them fuzzily match to democratic .", "tostr": "most_eq { all_rows ; party ; democratic } = true"}, "logic_str": "most_eq { all_rows ; party ; democratic } = true", "interpret": "for the party records of all rows , most of them fuzzily match to democratic .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "party_3": 3, "democratic_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "party_3": "party", "democratic_4": "democratic"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "party_3": [0], "democratic_4": [0]}, "table_header": ["district", "incumbent", "party", "elected", "status", "opponent"], "table_cont": [["minnesota1", "tim penny", "democratic", "1982", "re - elected", "tim penny ( d ) 78.1 % doug andersen ( r ) 21.9 %"], ["minnesota2", "vin weber", "republican", "1980", "re - elected", "vin weber ( r ) 61.8 % jim stone ( d ) 38.1 %"], ["minnesota3", "bill frenzel", "republican", "1970", "retired republican hold", "jim ramstad ( r ) 66.9 % lou demars ( d ) 32.9 %"], ["minnesota4", "bruce vento", "democratic", "1976", "re - elected", "bruce vento ( d ) 64.7 % ian maitland ( r ) 35.1 %"], ["minnesota6", "gerry sikorski", "democratic", "1982", "re - elected", "gerry sikorski ( d ) 64.6 % bruce anderson ( r ) 35.3 %"]], "query": "most_eq { all_rows ; party ; democratic } = true", "question": "most of the incumbents for the districts in minnesota were registered democrats in the 1990 united states house of representative elections ."}, {"topic": "1973 world figure skating championships", "wiki": "https://en.wikipedia.org/wiki/1973_World_Figure_Skating_Championships", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16831299-5.html.csv", "action": "ordinal", "sent": "west germany recorded the 2nd highest number of points in the 1973 world figure skating championships .", "annotation": {"row": "2", "col": "4", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "points", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; points ; 2 }"}, "name"], "result": "angelika buck / erich buck", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; points ; 2 } ; name }"}, "angelika buck / erich buck"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; name } ; angelika buck / erich buck } = true", "tointer": "select the row whose points record of all rows is 2nd maximum . the name record of this row is angelika buck / erich buck ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; name } ; angelika buck / erich buck } = true", "interpret": "select the row whose points record of all rows is 2nd maximum . the name record of this row is angelika buck / erich buck .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "points_5": 5, "2_6": 6, "name_7": 7, "angelika buck / erich buck_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "points_5": "points", "2_6": "2", "name_7": "name", "angelika buck / erich buck_8": "angelika buck / erich buck"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "points_5": [0], "2_6": [0], "name_7": [1], "angelika buck / erich buck_8": [2]}, "table_header": ["rank", "name", "nation", "points", "placings"], "table_cont": [["1", "liudmila pakhomova / alexander gorshkov", "soviet union", "524.20", "9"], ["2", "angelika buck / erich buck", "west germany", "514.55", "18"], ["3", "hilary green / glyn watts", "united kingdom", "499.05", "29"], ["4", "janet sawbridge / peter dalby", "united kingdom", "493.25", "38"], ["5", "tatiana voitiuk / viacheslav zhigalin", "soviet union", "488.30", "43"], ["6", "mary karen campbell / johnny johns", "united states", "479.30", "60"], ["7", "irina moiseeva / andrei minenkov", "soviet union", "475.80", "63.5"], ["8", "diana skotnick\u00e1 / martin skotnick\u00fd", "czechoslovakia", "470.85", "72.5"], ["9", "louise soper / barry soper", "canada", "471.00", "73"], ["10", "anne millier / harvey millier iii", "united states", "459.15", "93"], ["11", "matilde ciccia / lamberto ceserani", "italy", "452.10", "100"], ["12", "rodalind druce / david baker", "united kingdom", "448.70", "107"], ["13", "krisztina reg\u0151czy / andr\u00e1s sallay", "hungary", "442.70", "115"], ["14", "halina gordon / wojciech bankowski", "poland", "425.80", "130"], ["15", "barbara berezowski / david porter", "canada", "426.35", "131"], ["16", "anne - claude wolfers / roland mars", "france", "408.80", "146"], ["17", "christina henke / udo d\u00f6nsdorf", "west germany", "402.00", "151"], ["18", "brigitte scheijbal / walter leschetizky", "austria", "393.65", "160"]], "query": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; name } ; angelika buck / erich buck } = true", "question": "west germany recorded the 2nd highest number of points in the 1973 world figure skating championships ."}, {"topic": "list of people in playboy 2000 - 09", "wiki": "https://en.wikipedia.org/wiki/List_of_people_in_Playboy_2000%E2%80%9309", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1566852-4.html.csv", "action": "ordinal", "sent": "the fifth cover model of playboy in 2003 was torrie wilson .", "annotation": {"row": "5", "col": "1", "order": "5", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "date", "5"], "result": "5 - 03", "ind": 0, "tostr": "nth_min { all_rows ; date ; 5 }", "tointer": "the 5th minimum date record of all rows is 5 - 03 ."}, "5 - 03"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; date ; 5 } ; 5 - 03 }", "tointer": "the 5th minimum date record of all rows is 5 - 03 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "5"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; date ; 5 }"}, "centerfold model"], "result": "laurie fetter", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; date ; 5 } ; centerfold model }"}, "laurie fetter"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 5 } ; centerfold model } ; laurie fetter }", "tointer": "the centerfold model record of the row with 5th minimum date record is laurie fetter ."}], "result": true, "ind": 5, "tostr": "and { eq { nth_min { all_rows ; date ; 5 } ; 5 - 03 } ; eq { hop { nth_argmin { all_rows ; date ; 5 } ; centerfold model } ; laurie fetter } } = true", "tointer": "the 5th minimum date record of all rows is 5 - 03 . the centerfold model record of the row with 5th minimum date record is laurie fetter ."}, "logic_str": "and { eq { nth_min { all_rows ; date ; 5 } ; 5 - 03 } ; eq { hop { nth_argmin { all_rows ; date ; 5 } ; centerfold model } ; laurie fetter } } = true", "interpret": "the 5th minimum date record of all rows is 5 - 03 . the centerfold model record of the row with 5th minimum date record is laurie fetter .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "nth_min_0": 0, "all_rows_7": 7, "date_8": 8, "5_9": 9, "5 - 03_10": 10, "str_eq_4": 4, "str_hop_3": 3, "nth_argmin_2": 2, "all_rows_11": 11, "date_12": 12, "5_13": 13, "centerfold model_14": 14, "laurie fetter_15": 15}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "nth_min_0": "nth_min", "all_rows_7": "all_rows", "date_8": "date", "5_9": "5", "5 - 03_10": "5 - 03", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "nth_argmin_2": "nth_argmin", "all_rows_11": "all_rows", "date_12": "date", "5_13": "5", "centerfold model_14": "centerfold model", "laurie fetter_15": "laurie fetter"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "nth_min_0": [1], "all_rows_7": [0], "date_8": [0], "5_9": [0], "5 - 03_10": [1], "str_eq_4": [5], "str_hop_3": [4], "nth_argmin_2": [3], "all_rows_11": [2], "date_12": [2], "5_13": [2], "centerfold model_14": [3], "laurie fetter_15": [4]}, "table_header": ["date", "cover model", "centerfold model", "interview subject", "20 questions", "pictorials"], "table_cont": [["1 - 03", "tia carrere", "rebecca anne ramos", "halle berry", "ron insana", "tia carrere"], ["2 - 03", "alison eastwood", "charis boyle", "jimmy kimmel", "bernie mac", "allison eastwood , cyber girls"], ["3 - 03", "dorismar", "pennelope jimenez", "colin farrell", "juliette lewis", "ladies of latin tv , katrina barellova"], ["4 - 03", "carmen electra", "carmella decesare", "jay - z", "andy richter", "carmen electra"], ["5 - 03", "torrie wilson", "laurie fetter", "billy bob thornton", "jorja fox", "torrie wilson"], ["6 - 03", "sarah kozer", "tailor james", "mike piazza", "nelly", "sarah kozer , pmoy christina santiago"], ["7 - 03", "nikki ziering", "marketa janska", "lisa marie presley", "rachel weisz", "nikki ziering , 2 fast 2 furious 2 fine"], ["8 - 03", "jenna morasca , heidi strobel", "colleen marie", "tobey maguire", "charles rangel", "jenna morasca and heidi strobel , carnie wilson"], ["9 - 03", "signe nordli", "luci victoria", "jon gruden", "nicolas cage", "women of starbucks , jenny haase"], ["10 - 03", "lauren hill", "audra lynn", "oj simpson", "joe rogan", "girls of big ten , deanna merryman"]], "query": "and { eq { nth_min { all_rows ; date ; 5 } ; 5 - 03 } ; eq { hop { nth_argmin { all_rows ; date ; 5 } ; centerfold model } ; laurie fetter } } = true", "question": "the fifth cover model of playboy in 2003 was torrie wilson ."}, {"topic": "gil morgan", "wiki": "https://en.wikipedia.org/wiki/Gil_Morgan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1859485-1.html.csv", "action": "aggregation", "sent": "for gil morgan , when there was no playoff , his average margin of victory was 2.5 .", "annotation": {"scope": "subset", "col": "4", "type": "average", "result": "2.5", "subset": {"col": "4", "criterion": "not_equal", "value": "playoff"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "margin of victory", "playoff"], "result": null, "ind": 0, "tostr": "filter_not_eq { all_rows ; margin of victory ; playoff }", "tointer": "select the rows whose margin of victory record does not match to playoff ."}, "margin of victory"], "result": "2.5", "ind": 1, "tostr": "avg { filter_not_eq { all_rows ; margin of victory ; playoff } ; margin of victory }"}, "2.5"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_not_eq { all_rows ; margin of victory ; playoff } ; margin of victory } ; 2.5 } = true", "tointer": "select the rows whose margin of victory record does not match to playoff . the average of the margin of victory record of these rows is 2.5 ."}, "logic_str": "round_eq { avg { filter_not_eq { all_rows ; margin of victory ; playoff } ; margin of victory } ; 2.5 } = true", "interpret": "select the rows whose margin of victory record does not match to playoff . the average of the margin of victory record of these rows is 2.5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_not_eq_0": 0, "all_rows_4": 4, "margin of victory_5": 5, "playoff_6": 6, "margin of victory_7": 7, "2.5_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_not_eq_0": "filter_str_not_eq", "all_rows_4": "all_rows", "margin of victory_5": "margin of victory", "playoff_6": "playoff", "margin of victory_7": "margin of victory", "2.5_8": "2.5"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_not_eq_0": [1], "all_rows_4": [0], "margin of victory_5": [0], "playoff_6": [0], "margin of victory_7": [1], "2.5_8": [2]}, "table_header": ["date", "tournament", "winning score", "margin of victory", "runner ( s ) - up"], "table_cont": [["sep 11 , 1977", "bc open", "14 ( 67 + 65 + 69 + 69 = 270 )", "5 strokes", "lee elder"], ["feb 19 , 1978", "glen campbell - los angeles open", "6 ( 66 + 69 + 73 + 70 = 278 )", "2 strokes", "jack nicklaus"], ["jan 9 , 1978", "world series of golf", "2 ( 71 + 72 + 67 + 68 = 278 )", "playoff", "hubert green"], ["jul 1 , 1979", "danny thomas memphis classic", "10 ( 72 + 71 + 69 + 66 = 278 )", "playoff", "larry nelson"], ["jan 9 , 1983", "joe garagiola - tucson open", "9 ( 65 + 71 + 68 + 67 = 271 )", "playoff", "curtis strange , lanny wadkins"], ["jan 16 , 1983", "glen campbell - los angeles open", "14 ( 71 + 68 + 63 + 68 = 270 )", "2 strokes", "lanny wadkins"], ["jun 3 , 1990", "kemper open", "13 ( 68 + 67 + 70 + 69 = 274 )", "1 stroke", "ian baker - finch"]], "query": "round_eq { avg { filter_not_eq { all_rows ; margin of victory ; playoff } ; margin of victory } ; 2.5 } = true", "question": "for gil morgan , when there was no playoff , his average margin of victory was 2.5 ."}, {"topic": "2006 - 07 seattle supersonics season", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_Seattle_SuperSonics_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28768469-5.html.csv", "action": "count", "sent": "in november of the 2006 - 07 season , the seattle supersonics won 6 games .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "w", "result": "6", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "w"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to w .", "tostr": "filter_eq { all_rows ; score ; w }"}], "result": "6", "ind": 1, "tostr": "count { filter_eq { all_rows ; score ; w } }", "tointer": "select the rows whose score record fuzzily matches to w . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; score ; w } } ; 6 } = true", "tointer": "select the rows whose score record fuzzily matches to w . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_eq { all_rows ; score ; w } } ; 6 } = true", "interpret": "select the rows whose score record fuzzily matches to w . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "score_5": 5, "w_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "score_5": "score", "w_6": "w", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "score_5": [0], "w_6": [0], "6_7": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["1", "november 1", "portland", "l 106 - 110", "rashard lewis ( 25 )", "rashard lewis ( 8 )", "luke ridnour ( 13 )", "keyarena 17072", "0 - 1"], ["2", "november 3", "l a lakers", "l 112 - 118", "ray allen ( 30 )", "chris wilcox ( 12 )", "earl watson ( 7 )", "staples center 18997", "0 - 2"], ["3", "november 5", "l a lakers", "w 117 - 101", "ray allen ( 32 )", "chris wilcox ( 8 )", "luke ridnour ( 7 )", "keyarena 17072", "1 - 2"], ["4", "november 7", "miami", "l 87 - 90", "rashard lewis ( 23 )", "nick collison ( 10 )", "earl watson ( 6 )", "american airlines arena 19600", "1 - 3"], ["5", "november 8", "orlando", "l 87 - 88", "ray allen ( 21 )", "danny fortson ( 8 )", "luke ridnour ( 6 )", "amway arena 16312", "1 - 4"], ["6", "november 10", "charlotte", "w 99 - 85", "ray allen ( 26 )", "nick collison ( 15 )", "luke ridnour ( 7 )", "charlotte bobcats arena 13515", "2 - 4"], ["7", "november 11", "atlanta", "w 113 - 112 ( ot )", "ray allen ( 33 )", "chris wilcox ( 15 )", "luke ridnour ( 5 )", "philips arena 19309", "3 - 4"], ["8", "november 13", "new jersey", "w 119 - 113", "luke ridnour ( 32 )", "rashard lewis ( 11 )", "luke ridnour , earl watson ( 7 )", "continental airlines arena 14392", "4 - 4"], ["9", "november 15", "philadelphia", "l 90 - 96", "rashard lewis ( 25 )", "rashard lewis , chris wilcox ( 15 )", "luke ridnour ( 7 )", "keyarena 14936", "4 - 5"], ["10", "november 17", "utah", "l 109 - 118", "ray allen ( 32 )", "chris wilcox ( 11 )", "luke ridnour ( 7 )", "keyarena 15513", "4 - 6"], ["11", "november 18", "golden state", "l 95 - 107", "ray allen ( 34 )", "ray allen ( 11 )", "earl watson ( 7 )", "oracle arena 17205", "4 - 7"], ["12", "november 20", "new jersey", "w 99 - 87", "ray allen ( 29 )", "ray allen ( 9 )", "ray allen , luke ridnour ( 5 )", "keyarena 14621", "5 - 7"], ["13", "november 22", "l a clippers", "w 95 - 85", "rashard lewis ( 35 )", "nick collison , rashard lewis ( 13 )", "luke ridnour ( 9 )", "staples center 16290", "6 - 7"], ["14", "november 24", "sacramento", "l 100 - 109", "rashard lewis ( 26 )", "chris wilcox ( 13 )", "luke ridnour ( 8 )", "keyarena 16757", "6 - 8"], ["15", "november 26", "san antonio", "l 78 - 98", "ray allen ( 21 )", "johan petro ( 9 )", "chris wilcox ( 5 )", "keyarena 15483", "6 - 9"]], "query": "eq { count { filter_eq { all_rows ; score ; w } } ; 6 } = true", "question": "in november of the 2006 - 07 season , the seattle supersonics won 6 games ."}, {"topic": "list of tallest buildings in boston", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Boston", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1115824-6.html.csv", "action": "comparative", "sent": "of the buildings that have been the tallest buildings in boston , the prudential tower has 8 less floors than hancock place .", "annotation": {"row_1": "6", "row_2": "7", "col": "5", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "8", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "prudential tower"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to prudential tower .", "tostr": "filter_eq { all_rows ; name ; prudential tower }"}, "floors"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; prudential tower } ; floors }", "tointer": "select the rows whose name record fuzzily matches to prudential tower . take the floors record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "hancock place"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to hancock place .", "tostr": "filter_eq { all_rows ; name ; hancock place }"}, "floors"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; hancock place } ; floors }", "tointer": "select the rows whose name record fuzzily matches to hancock place . take the floors record of this row ."}], "result": "-8", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; name ; prudential tower } ; floors } ; hop { filter_eq { all_rows ; name ; hancock place } ; floors } }"}, "-8"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; name ; prudential tower } ; floors } ; hop { filter_eq { all_rows ; name ; hancock place } ; floors } } ; -8 } = true", "tointer": "select the rows whose name record fuzzily matches to prudential tower . take the floors record of this row . select the rows whose name record fuzzily matches to hancock place . take the floors record of this row . the second record is 8 larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; name ; prudential tower } ; floors } ; hop { filter_eq { all_rows ; name ; hancock place } ; floors } } ; -8 } = true", "interpret": "select the rows whose name record fuzzily matches to prudential tower . take the floors record of this row . select the rows whose name record fuzzily matches to hancock place . take the floors record of this row . the second record is 8 larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "name_8": 8, "prudential tower_9": 9, "floors_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "name_12": 12, "hancock place_13": 13, "floors_14": 14, "-8_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "name_8": "name", "prudential tower_9": "prudential tower", "floors_10": "floors", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "name_12": "name", "hancock place_13": "hancock place", "floors_14": "floors", "-8_15": "-8"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "name_8": [0], "prudential tower_9": [0], "floors_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "name_12": [1], "hancock place_13": [1], "floors_14": [3], "-8_15": [5]}, "table_header": ["name", "street address", "years as tallest", "height ft ( m )", "floors"], "table_cont": [["old state house", "206 washington street", "1713 - 1745", "08.0 65 ( 20 )", "3"], ["old north church", "193 salem street", "1745 - 1810", "08.0 175 ( 53 )", "1"], ["park street church", "1 park street", "1810 - 1867", "07.0 217 ( 66 )", "1"], ["church of the covenant", "67 newbury street", "1867 - 1915", "06.0 236 ( 72 )", "1"], ["custom house tower", "3 mckinley square", "1915 - 1964", "05.0 496 ( 151 )", "32"], ["prudential tower", "800 boylston street", "1964 - 1976", "04.0 749 ( 228 )", "52"], ["hancock place", "200 clarendon street", "1976 - present", "03.0 790 ( 241 )", "60"]], "query": "eq { diff { hop { filter_eq { all_rows ; name ; prudential tower } ; floors } ; hop { filter_eq { all_rows ; name ; hancock place } ; floors } } ; -8 } = true", "question": "of the buildings that have been the tallest buildings in boston , the prudential tower has 8 less floors than hancock place ."}, {"topic": "1959 vfl season", "wiki": "https://en.wikipedia.org/wiki/1959_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10775038-6.html.csv", "action": "comparative", "sent": "in the 1959 vfl season , the match that took place at the venue glenferrie oval had a larger crowd than the match that took place at victoria park .", "annotation": {"row_1": "6", "row_2": "3", "col": "6", "col_other": "5", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "glenferrie oval"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to glenferrie oval .", "tostr": "filter_eq { all_rows ; venue ; glenferrie oval }"}, "crowd"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; glenferrie oval } ; crowd }", "tointer": "select the rows whose venue record fuzzily matches to glenferrie oval . take the crowd record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "victoria park"], "result": null, "ind": 1, "tointer": "select the rows whose venue record fuzzily matches to victoria park .", "tostr": "filter_eq { all_rows ; venue ; victoria park }"}, "crowd"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; venue ; victoria park } ; crowd }", "tointer": "select the rows whose venue record fuzzily matches to victoria park . take the crowd record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; venue ; glenferrie oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; victoria park } ; crowd } } = true", "tointer": "select the rows whose venue record fuzzily matches to glenferrie oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to victoria park . take the crowd record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; venue ; glenferrie oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; victoria park } ; crowd } } = true", "interpret": "select the rows whose venue record fuzzily matches to glenferrie oval . take the crowd record of this row . select the rows whose venue record fuzzily matches to victoria park . take the crowd record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "venue_7": 7, "glenferrie oval_8": 8, "crowd_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "venue_11": 11, "victoria park_12": 12, "crowd_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "venue_7": "venue", "glenferrie oval_8": "glenferrie oval", "crowd_9": "crowd", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "venue_11": "venue", "victoria park_12": "victoria park", "crowd_13": "crowd"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "venue_7": [0], "glenferrie oval_8": [0], "crowd_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "venue_11": [1], "victoria park_12": [1], "crowd_13": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["richmond", "11.17 ( 83 )", "st kilda", "16.10 ( 106 )", "punt road oval", "23000", "30 may 1959"], ["geelong", "11.10 ( 76 )", "melbourne", "19.15 ( 129 )", "kardinia park", "16736", "30 may 1959"], ["collingwood", "16.16 ( 112 )", "footscray", "10.11 ( 71 )", "victoria park", "24740", "30 may 1959"], ["south melbourne", "8.18 ( 66 )", "north melbourne", "13.18 ( 96 )", "lake oval", "20700", "30 may 1959"], ["fitzroy", "11.9 ( 75 )", "essendon", "12.22 ( 94 )", "brunswick street oval", "22000", "30 may 1959"], ["hawthorn", "11.9 ( 75 )", "carlton", "12.11 ( 83 )", "glenferrie oval", "28000", "30 may 1959"]], "query": "greater { hop { filter_eq { all_rows ; venue ; glenferrie oval } ; crowd } ; hop { filter_eq { all_rows ; venue ; victoria park } ; crowd } } = true", "question": "in the 1959 vfl season , the match that took place at the venue glenferrie oval had a larger crowd than the match that took place at victoria park ."}, {"topic": "devin gardner", "wiki": "https://en.wikipedia.org/wiki/Devin_Gardner", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26108103-2.html.csv", "action": "aggregation", "sent": "of the games listed denard robinson achieved a total of 948 offensive yard in his games against notre dame .", "annotation": {"scope": "subset", "col": "7", "type": "sum", "result": "948", "subset": {"col": "4", "criterion": "equal", "value": "notre dame"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "notre dame"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; opponent ; notre dame }", "tointer": "select the rows whose opponent record fuzzily matches to notre dame ."}, "total offense"], "result": "948", "ind": 1, "tostr": "sum { filter_eq { all_rows ; opponent ; notre dame } ; total offense }"}, "948"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_eq { all_rows ; opponent ; notre dame } ; total offense } ; 948 } = true", "tointer": "select the rows whose opponent record fuzzily matches to notre dame . the sum of the total offense record of these rows is 948 ."}, "logic_str": "round_eq { sum { filter_eq { all_rows ; opponent ; notre dame } ; total offense } ; 948 } = true", "interpret": "select the rows whose opponent record fuzzily matches to notre dame . the sum of the total offense record of these rows is 948 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "opponent_5": 5, "notre dame_6": 6, "total offense_7": 7, "948_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "opponent_5": "opponent", "notre dame_6": "notre dame", "total offense_7": "total offense", "948_8": "948"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "opponent_5": [0], "notre dame_6": [0], "total offense_7": [1], "948_8": [2]}, "table_header": ["rank", "player", "year", "opponent", "passing yards", "rushing yards", "total offense"], "table_cont": [["1", "devin gardner", "2013", "indiana", "503", "81", "584"], ["2", "denard robinson", "2010", "notre dame", "244", "258", "502"], ["3", "denard robinson", "2010", "indiana", "277", "217", "494"], ["4", "denard robinson", "2011", "northwestern", "337", "117", "454"], ["5", "denard robinson", "2011", "notre dame", "338", "108", "446"], ["6", "denard robinson", "2012", "air force", "208", "218", "426"], ["7", "denard robinson", "2012", "umass", "291", "106", "397"], ["8", "denard robinson", "2010", "connecticut", "186", "197", "383"], ["9", "denard robinson", "2010", "penn state", "190", "191", "381"]], "query": "round_eq { sum { filter_eq { all_rows ; opponent ; notre dame } ; total offense } ; 948 } = true", "question": "of the games listed denard robinson achieved a total of 948 offensive yard in his games against notre dame ."}, {"topic": "golden gate transit", "wiki": "https://en.wikipedia.org/wiki/Golden_Gate_Transit", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1524075-3.html.csv", "action": "aggregation", "sent": "the average number of seats on golden gate transit buses is 44 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "44", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "number of seats"], "result": "44", "ind": 0, "tostr": "avg { all_rows ; number of seats }"}, "44"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; number of seats } ; 44 } = true", "tointer": "the average of the number of seats record of all rows is 44 ."}, "logic_str": "round_eq { avg { all_rows ; number of seats } ; 44 } = true", "interpret": "the average of the number of seats record of all rows is 44 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "number of seats_4": 4, "44_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "number of seats_4": "number of seats", "44_5": "44"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "number of seats_4": [0], "44_5": [1]}, "table_header": ["make", "year placed in service", "quantity", "number of seats", "wheelchair accessible", "current status"], "table_cont": [["gm new look", "1971 , 1972", "132", "45", "no", "retired , one bus retained for historical purposes"], ["gm advanced design", "1981", "16", "43", "yes", "retired"], ["gm advanced design", "1983", "50", "41", "yes", "retired"], ["gillig", "1986", "4", "26", "yes", "retired"], ["mci", "1987", "21", "45", "yes", "retired"], ["tmc", "1990", "48", "39", "yes", "retired"], ["tmc", "1991", "49", "40", "yes", "retired ( 26 ) , reserve fleet ( 10 ) , for sale ( 13 )"], ["flxible", "1994", "40", "45", "yes", "retired"], ["mci", "1996 , 1997", "32", "57", "yes", "for sale ( 21 ) , unknown ( 11 )"], ["novabus", "1997", "10", "43", "yes", "retired"], ["new flyer", "2003", "8", "62", "yes", "retired"]], "query": "round_eq { avg { all_rows ; number of seats } ; 44 } = true", "question": "the average number of seats on golden gate transit buses is 44 ."}, {"topic": "derek daly", "wiki": "https://en.wikipedia.org/wiki/Derek_Daly", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1219760-3.html.csv", "action": "majority", "sent": "derek daly raced a majority of the time using a ford cosworth dfx engine .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "ford cosworth dfx", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "engine", "ford cosworth dfx"], "result": true, "ind": 0, "tointer": "for the engine records of all rows , most of them fuzzily match to ford cosworth dfx .", "tostr": "most_eq { all_rows ; engine ; ford cosworth dfx } = true"}, "logic_str": "most_eq { all_rows ; engine ; ford cosworth dfx } = true", "interpret": "for the engine records of all rows , most of them fuzzily match to ford cosworth dfx .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "engine_3": 3, "ford cosworth dfx_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "engine_3": "engine", "ford cosworth dfx_4": "ford cosworth dfx"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "engine_3": [0], "ford cosworth dfx_4": [0]}, "table_header": ["year", "team", "chassis", "engine", "rank", "points"], "table_cont": [["1982", "wysard racing", "march 82c", "ford cosworth dfx", "nc", "0"], ["1983", "wysard racing", "march 82c", "ford cosworth dfx", "27th", "4"], ["1983", "wysard racing", "march 83c", "ford cosworth dfx", "27th", "4"], ["1983", "provimi racing", "march 82 / 83c", "ford cosworth dfx", "27th", "4"], ["1984", "provimi racing", "march 84c", "ford cosworth dfx", "19th", "26"], ["1985", "tom hess racing", "lola t900", "ford cosworth dfx", "40th", "1"], ["1986", "team menard", "march 86c", "ford cosworth dfx", "23rd", "11"], ["1986", "curb motorsports", "march 86c", "ford cosworth dfx", "23rd", "11"], ["1987", "pace racing", "march 87c", "buick v6 ( t / c )", "15th", "27"], ["1987", "raynor motorsports", "lola t87 / 00", "ford cosworth dfx", "15th", "27"], ["1988", "raynor motorsports", "lola t88 / 00", "ford cosworth dfx", "9th", "53"], ["1989", "raynor motorsports", "lola t89 / 00", "judd av", "12th", "25"]], "query": "most_eq { all_rows ; engine ; ford cosworth dfx } = true", "question": "derek daly raced a majority of the time using a ford cosworth dfx engine ."}, {"topic": "united states house of representatives elections , 1974", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1974", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341690-35.html.csv", "action": "majority", "sent": "the majority of incumbents in the 1974 united states house of representatives elections belonged to the republican party .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "republican", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "party", "republican"], "result": true, "ind": 0, "tointer": "for the party records of all rows , most of them fuzzily match to republican .", "tostr": "most_eq { all_rows ; party ; republican } = true"}, "logic_str": "most_eq { all_rows ; party ; republican } = true", "interpret": "for the party records of all rows , most of them fuzzily match to republican .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "party_3": 3, "republican_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "party_3": "party", "republican_4": "republican"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "party_3": [0], "republican_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["ohio 1", "tom luken", "democratic", "1974", "lost re - election republican gain", "bill gradison ( r ) 50.9 % tom luken ( d ) 49.1 %"], ["ohio 3", "charles w whalen , jr", "republican", "1966", "re - elected", "charles w whalen , jr ( r ) unopposed"], ["ohio 5", "del latta", "republican", "1958", "re - elected", "del latta ( r ) 62.5 % bruce edwards ( d ) 37.5 %"], ["ohio 6", "bill harsha", "republican", "1960", "re - elected", "bill harsha ( r ) 68.8 % lloyd allan wood ( d ) 31.2 %"], ["ohio 12", "samuel l devine", "republican", "1958", "re - elected", "samuel l devine ( r ) 50.9 % fran ryan ( d ) 49.1 %"], ["ohio 16", "ralph regula", "republican", "1972", "re - elected", "ralph regula ( r ) 65.6 % john g freedom ( d ) 34.4 %"], ["ohio 18", "wayne l hays", "democratic", "1948", "re - elected", "wayne l hays ( d ) 65.6 % ralph h romig ( r ) 34.4 %"], ["ohio 21", "louis stokes", "democratic", "1968", "re - elected", "louis stokes ( d ) 82.0 % bill mack ( r ) 18.0 %"]], "query": "most_eq { all_rows ; party ; republican } = true", "question": "the majority of incumbents in the 1974 united states house of representatives elections belonged to the republican party ."}, {"topic": "rowing at the 2008 summer olympics - women 's single sculls", "wiki": "https://en.wikipedia.org/wiki/Rowing_at_the_2008_Summer_Olympics_%E2%80%93_Women%27s_single_sculls", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18662695-13.html.csv", "action": "aggregation", "sent": "the average time for all women 's single sculls rowing at the 2008 summer olympics was 8:17.94 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "8:17.94", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "time"], "result": "8:17.94", "ind": 0, "tostr": "avg { all_rows ; time }"}, "8:17.94"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; time } ; 8:17.94 } = true", "tointer": "the average of the time record of all rows is 8:17.94 ."}, "logic_str": "round_eq { avg { all_rows ; time } ; 8:17.94 } = true", "interpret": "the average of the time record of all rows is 8:17.94 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "time_4": 4, "8:17.94_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "time_4": "time", "8:17.94_5": "8:17.94"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "time_4": [0], "8:17.94_5": [1]}, "table_header": ["rank", "athlete", "country", "time", "notes"], "table_cont": [["1", "rika geyser", "south africa", "7:59.67", "fc"], ["2", "soraya jadue", "chile", "8:13.67", "fc"], ["3", "inga dudchenko", "kazakhstan", "8:16.95", "fc"], ["4", "camila vargas", "el salvador", "8:22.35", "fd"], ["5", "latt shwe zin", "myanmar", "8:24.23", "fd"], ["6", "lee ka man", "hong kong", "8:30.80", "fe"]], "query": "round_eq { avg { all_rows ; time } ; 8:17.94 } = true", "question": "the average time for all women 's single sculls rowing at the 2008 summer olympics was 8:17.94 ."}, {"topic": "hannes van asseldonk", "wiki": "https://en.wikipedia.org/wiki/Hannes_van_Asseldonk", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27631002-1.html.csv", "action": "superlative", "sent": "hanes van asseldonk acquired the highest number of points of any other season in the toyota racing series .", "annotation": {"scope": "all", "col_superlative": "9", "row_superlative": "10", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "series"], "result": "toyota racing series", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; series }"}, "toyota racing series"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; series } ; toyota racing series } = true", "tointer": "select the row whose points record of all rows is maximum . the series record of this row is toyota racing series ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; series } ; toyota racing series } = true", "interpret": "select the row whose points record of all rows is maximum . the series record of this row is toyota racing series .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "series_6": 6, "toyota racing series_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "series_6": "series", "toyota racing series_7": "toyota racing series"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "series_6": [1], "toyota racing series_7": [2]}, "table_header": ["season", "series", "team", "races", "wins", "poles", "f / laps", "podiums", "points", "position"], "table_cont": [["2010", "formula bmw europe", "josef kaufmann racing", "16", "0", "0", "1", "2", "174", "7th"], ["2010", "formula bmw pacific", "motaworld racing", "2", "0", "0", "0", "0", "0", "nc"], ["2010", "formula abarth", "prema junior", "6", "3", "1", "1", "3", "76", "6th"], ["2011", "fia formula 3 international trophy", "van amersfoort racing", "4", "0", "0", "0", "0", "0", "nc"], ["2011", "fia formula 3 international trophy", "hitech racing", "4", "0", "0", "0", "0", "0", "nc"], ["2011", "german formula three championship", "van amersfoort racing", "18", "0", "2", "1", "5", "61", "5th"], ["2011", "british formula three championship", "van amersfoort racing", "3", "0", "0", "1", "0", "0", "nc"], ["2011", "austria formel 3 cup", "van amersfoort racing", "2", "1", "2", "2", "2", "35", "10th"], ["2011", "macau grand prix", "hitech racing", "1", "0", "0", "0", "0", "n / a", "5th"], ["2012", "toyota racing series", "giles motorsport", "15", "3", "2", "3", "7", "738", "2nd"]], "query": "eq { hop { argmax { all_rows ; points } ; series } ; toyota racing series } = true", "question": "hanes van asseldonk acquired the highest number of points of any other season in the toyota racing series ."}, {"topic": "1982 detroit lions season", "wiki": "https://en.wikipedia.org/wiki/1982_Detroit_Lions_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18811930-2.html.csv", "action": "superlative", "sent": "during the 1982 season , the detroit lions ' highest scoring game came against the minnesota vikings .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "8", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "lions points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; lions points }"}, "opponent"], "result": "minnesota vikings", "ind": 1, "tostr": "hop { argmax { all_rows ; lions points } ; opponent }"}, "minnesota vikings"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; lions points } ; opponent } ; minnesota vikings } = true", "tointer": "select the row whose lions points record of all rows is maximum . the opponent record of this row is minnesota vikings ."}, "logic_str": "eq { hop { argmax { all_rows ; lions points } ; opponent } ; minnesota vikings } = true", "interpret": "select the row whose lions points record of all rows is maximum . the opponent record of this row is minnesota vikings .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "lions points_5": 5, "opponent_6": 6, "minnesota vikings_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "lions points_5": "lions points", "opponent_6": "opponent", "minnesota vikings_7": "minnesota vikings"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "lions points_5": [0], "opponent_6": [1], "minnesota vikings_7": [2]}, "table_header": ["game", "date", "opponent", "result", "lions points", "opponents", "record", "streak", "attendance"], "table_cont": [["1", "sept 12", "chicago bears", "win", "17", "10", "1 - 0", "win 1", "71337"], ["2", "sept 19", "los angeles rams", "win", "19", "14", "2 - 0", "win 2", "59470"], ["player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games"], ["3", "nov 21", "chicago bears", "loss", "17", "20", "2 - 1", "lose 1", "46783"], ["4", "nov 25", "new york giants", "loss", "6", "13", "2 - 2", "lose 2", "64348"], ["5", "dec 6", "new york jets", "loss", "13", "28", "2 - 3", "lose 3", "79361"], ["6", "dec 12", "green bay packers", "win", "30", "10", "3 - 3", "win 1", "51875"], ["7", "dec 19", "minnesota vikings", "loss", "31", "34", "3 - 4", "lose 1", "73058"], ["8", "dec 26", "tampa bay buccaneers", "loss", "21", "23", "3 - 5", "lose 2", "65997"], ["9", "jan 2", "green bay packers", "win", "27", "24", "4 - 5", "win 1", "64377"]], "query": "eq { hop { argmax { all_rows ; lions points } ; opponent } ; minnesota vikings } = true", "question": "during the 1982 season , the detroit lions ' highest scoring game came against the minnesota vikings ."}, {"topic": "list of pacific - 12 conference champions", "wiki": "https://en.wikipedia.org/wiki/List_of_Pacific-12_Conference_champions", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27816698-2.html.csv", "action": "comparative", "sent": "boise state university has a higher enrollment than california state university , bakersfield .", "annotation": {"row_1": "1", "row_2": "3", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "institution", "boise state university"], "result": null, "ind": 0, "tointer": "select the rows whose institution record fuzzily matches to boise state university .", "tostr": "filter_eq { all_rows ; institution ; boise state university }"}, "enrollment"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; institution ; boise state university } ; enrollment }", "tointer": "select the rows whose institution record fuzzily matches to boise state university . take the enrollment record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "institution", "california state university , bakersfield"], "result": null, "ind": 1, "tointer": "select the rows whose institution record fuzzily matches to california state university , bakersfield .", "tostr": "filter_eq { all_rows ; institution ; california state university , bakersfield }"}, "enrollment"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; institution ; california state university , bakersfield } ; enrollment }", "tointer": "select the rows whose institution record fuzzily matches to california state university , bakersfield . take the enrollment record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; institution ; boise state university } ; enrollment } ; hop { filter_eq { all_rows ; institution ; california state university , bakersfield } ; enrollment } } = true", "tointer": "select the rows whose institution record fuzzily matches to boise state university . take the enrollment record of this row . select the rows whose institution record fuzzily matches to california state university , bakersfield . take the enrollment record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; institution ; boise state university } ; enrollment } ; hop { filter_eq { all_rows ; institution ; california state university , bakersfield } ; enrollment } } = true", "interpret": "select the rows whose institution record fuzzily matches to boise state university . take the enrollment record of this row . select the rows whose institution record fuzzily matches to california state university , bakersfield . take the enrollment record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "institution_7": 7, "boise state university_8": 8, "enrollment_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "institution_11": 11, "california state university , bakersfield_12": 12, "enrollment_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "institution_7": "institution", "boise state university_8": "boise state university", "enrollment_9": "enrollment", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "institution_11": "institution", "california state university , bakersfield_12": "california state university , bakersfield", "enrollment_13": "enrollment"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "institution_7": [0], "boise state university_8": [0], "enrollment_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "institution_11": [1], "california state university , bakersfield_12": [1], "enrollment_13": [3]}, "table_header": ["institution", "location", "founded", "type", "enrollment", "nickname", "current conference", "pac - 12 sports"], "table_cont": [["boise state university", "boise , idaho", "1932", "public", "19667", "broncos", "mountain west", "wrestling"], ["california polytechnic state university", "san luis obispo , california", "1901", "public", "19777", "mustangs", "big west", "men 's swimming and diving , wrestling"], ["california state university , bakersfield", "bakersfield , california", "1965", "public", "7493", "roadrunners", "independent", "wrestling"], ["california state university , fullerton", "fullerton , california", "1957", "public", "36996", "titans", "big west", "wrestling"], ["san diego state university", "san diego , california", "1897", "public", "34500", "aztecs", "mountain west", "men 's soccer"], ["university of california , davis", "davis , california", "1908", "public", "31426", "aggies", "big west", "wrestling"]], "query": "greater { hop { filter_eq { all_rows ; institution ; boise state university } ; enrollment } ; hop { filter_eq { all_rows ; institution ; california state university , bakersfield } ; enrollment } } = true", "question": "boise state university has a higher enrollment than california state university , bakersfield ."}, {"topic": "devin gardner", "wiki": "https://en.wikipedia.org/wiki/Devin_Gardner", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26108103-2.html.csv", "action": "superlative", "sent": "devin gardner has the record for the the most total offensive yards in a game .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "total offense"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; total offense }"}, "player"], "result": "devin gardner", "ind": 1, "tostr": "hop { argmax { all_rows ; total offense } ; player }"}, "devin gardner"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; total offense } ; player } ; devin gardner } = true", "tointer": "select the row whose total offense record of all rows is maximum . the player record of this row is devin gardner ."}, "logic_str": "eq { hop { argmax { all_rows ; total offense } ; player } ; devin gardner } = true", "interpret": "select the row whose total offense record of all rows is maximum . the player record of this row is devin gardner .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "total offense_5": 5, "player_6": 6, "devin gardner_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "total offense_5": "total offense", "player_6": "player", "devin gardner_7": "devin gardner"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "total offense_5": [0], "player_6": [1], "devin gardner_7": [2]}, "table_header": ["rank", "player", "year", "opponent", "passing yards", "rushing yards", "total offense"], "table_cont": [["1", "devin gardner", "2013", "indiana", "503", "81", "584"], ["2", "denard robinson", "2010", "notre dame", "244", "258", "502"], ["3", "denard robinson", "2010", "indiana", "277", "217", "494"], ["4", "denard robinson", "2011", "northwestern", "337", "117", "454"], ["5", "denard robinson", "2011", "notre dame", "338", "108", "446"], ["6", "denard robinson", "2012", "air force", "208", "218", "426"], ["7", "denard robinson", "2012", "umass", "291", "106", "397"], ["8", "denard robinson", "2010", "connecticut", "186", "197", "383"], ["9", "denard robinson", "2010", "penn state", "190", "191", "381"]], "query": "eq { hop { argmax { all_rows ; total offense } ; player } ; devin gardner } = true", "question": "devin gardner has the record for the the most total offensive yards in a game ."}, {"topic": "kjrt", "wiki": "https://en.wikipedia.org/wiki/KJRT", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14035388-2.html.csv", "action": "comparative", "sent": "for station kjrt , their frequency in plainview , texas is .8 lower than the frequency in pampa , texas .", "annotation": {"row_1": "3", "row_2": "4", "col": "2", "col_other": "3", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "0.8", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "city of license", "plainview , texas"], "result": null, "ind": 0, "tointer": "select the rows whose city of license record fuzzily matches to plainview , texas .", "tostr": "filter_eq { all_rows ; city of license ; plainview , texas }"}, "frequency mhz"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; city of license ; plainview , texas } ; frequency mhz }", "tointer": "select the rows whose city of license record fuzzily matches to plainview , texas . take the frequency mhz record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "city of license", "pampa , texas"], "result": null, "ind": 1, "tointer": "select the rows whose city of license record fuzzily matches to pampa , texas .", "tostr": "filter_eq { all_rows ; city of license ; pampa , texas }"}, "frequency mhz"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; city of license ; pampa , texas } ; frequency mhz }", "tointer": "select the rows whose city of license record fuzzily matches to pampa , texas . take the frequency mhz record of this row ."}], "result": "-0.8", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; city of license ; plainview , texas } ; frequency mhz } ; hop { filter_eq { all_rows ; city of license ; pampa , texas } ; frequency mhz } }"}, "-0.8"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; city of license ; plainview , texas } ; frequency mhz } ; hop { filter_eq { all_rows ; city of license ; pampa , texas } ; frequency mhz } } ; -0.8 } = true", "tointer": "select the rows whose city of license record fuzzily matches to plainview , texas . take the frequency mhz record of this row . select the rows whose city of license record fuzzily matches to pampa , texas . take the frequency mhz record of this row . the second record is 0.8 larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; city of license ; plainview , texas } ; frequency mhz } ; hop { filter_eq { all_rows ; city of license ; pampa , texas } ; frequency mhz } } ; -0.8 } = true", "interpret": "select the rows whose city of license record fuzzily matches to plainview , texas . take the frequency mhz record of this row . select the rows whose city of license record fuzzily matches to pampa , texas . take the frequency mhz record of this row . the second record is 0.8 larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "city of license_8": 8, "plainview , texas_9": 9, "frequency mhz_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "city of license_12": 12, "pampa , texas_13": 13, "frequency mhz_14": 14, "-0.8_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "city of license_8": "city of license", "plainview , texas_9": "plainview , texas", "frequency mhz_10": "frequency mhz", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "city of license_12": "city of license", "pampa , texas_13": "pampa , texas", "frequency mhz_14": "frequency mhz", "-0.8_15": "-0.8"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "city of license_8": [0], "plainview , texas_9": [0], "frequency mhz_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "city of license_12": [1], "pampa , texas_13": [1], "frequency mhz_14": [3], "-0.8_15": [5]}, "table_header": ["call sign", "frequency mhz", "city of license", "erp w", "class", "fcc info"], "table_cont": [["k201bm", "88.1", "canadian , texas", "74", "d", "fcc"], ["k202ck", "88.3", "childress , texas", "200", "d", "fcc"], ["k216 gg", "91.1", "plainview , texas", "40", "a", "fcc"], ["k220cp", "91.9", "pampa , texas", "67", "d", "fcc"], ["k220iz", "91.9", "perryton , texas", "250", "d", "fcc"], ["k220jz", "91.9", "memphis , texas", "25", "d", "fcc"], ["k219lo", "91.7", "hereford , texas", "10", "d", "fcc"], ["k229by", "93.7", "tulia , texas", "100", "d", "fcc"], ["k291aq", "106.1", "dumas , texas", "92", "d", "fcc"], ["k202ag", "88.3", "elk city , oklahoma", "38", "d", "fcc"]], "query": "eq { diff { hop { filter_eq { all_rows ; city of license ; plainview , texas } ; frequency mhz } ; hop { filter_eq { all_rows ; city of license ; pampa , texas } ; frequency mhz } } ; -0.8 } = true", "question": "for station kjrt , their frequency in plainview , texas is .8 lower than the frequency in pampa , texas ."}, {"topic": "2007 - 08 minnesota wild season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Minnesota_Wild_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11739153-7.html.csv", "action": "comparative", "sent": "more people attended the game on the 2nd than on the 29th .", "annotation": {"row_1": "1", "row_2": "14", "col": "6", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "february 2"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to february 2 .", "tostr": "filter_eq { all_rows ; date ; february 2 }"}, "attendance"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; february 2 } ; attendance }", "tointer": "select the rows whose date record fuzzily matches to february 2 . take the attendance record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "february 29"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to february 29 .", "tostr": "filter_eq { all_rows ; date ; february 29 }"}, "attendance"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; february 29 } ; attendance }", "tointer": "select the rows whose date record fuzzily matches to february 29 . take the attendance record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; date ; february 2 } ; attendance } ; hop { filter_eq { all_rows ; date ; february 29 } ; attendance } } = true", "tointer": "select the rows whose date record fuzzily matches to february 2 . take the attendance record of this row . select the rows whose date record fuzzily matches to february 29 . take the attendance record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; date ; february 2 } ; attendance } ; hop { filter_eq { all_rows ; date ; february 29 } ; attendance } } = true", "interpret": "select the rows whose date record fuzzily matches to february 2 . take the attendance record of this row . select the rows whose date record fuzzily matches to february 29 . take the attendance record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "date_7": 7, "february 2_8": 8, "attendance_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "date_11": 11, "february 29_12": 12, "attendance_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date_7": "date", "february 2_8": "february 2", "attendance_9": "attendance", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "date_11": "date", "february 29_12": "february 29", "attendance_13": "attendance"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "date_7": [0], "february 2_8": [0], "attendance_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "date_11": [1], "february 29_12": [1], "attendance_13": [3]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["february 2", "minnesota", "4 - 1", "columbus", "backstrom", "18529", "30 - 19 - 3"], ["february 5", "detroit", "3 - 2", "minnesota", "backstrom", "18568", "30 - 19 - 4"], ["february 7", "dallas", "1 - 0", "minnesota", "backstrom", "18568", "30 - 20 - 4"], ["february 9", "ny islanders", "3 - 4", "minnesota", "backstrom", "18568", "31 - 20 - 4"], ["february 10", "minnesota", "2 - 1", "st louis", "harding", "16477", "32 - 20 - 4"], ["february 12", "minnesota", "2 - 4", "edmonton", "harding", "16839", "32 - 21 - 4"], ["february 14", "minnesota", "5 - 4", "vancouver", "backstrom", "18630", "33 - 21 - 4"], ["february 17", "nashville", "4 - 5", "minnesota", "backstrom", "18568", "34 - 21 - 4"], ["february 19", "vancouver", "3 - 2", "minnesota", "backstrom", "18568", "34 - 21 - 5"], ["february 20", "minnesota", "0 - 3", "chicago", "harding", "17812", "34 - 22 - 5"], ["february 24", "calgary", "2 - 1", "minnesota", "backstrom", "18568", "34 - 23 - 5"], ["february 26", "minnesota", "1 - 4", "washington", "backstrom", "17391", "34 - 24 - 5"], ["february 27", "minnesota", "3 - 2", "tampa bay", "backstrom", "17211", "35 - 24 - 5"], ["february 29", "minnesota", "3 - 2", "florida", "backstrom", "16927", "36 - 24 - 5"]], "query": "greater { hop { filter_eq { all_rows ; date ; february 2 } ; attendance } ; hop { filter_eq { all_rows ; date ; february 29 } ; attendance } } = true", "question": "more people attended the game on the 2nd than on the 29th ."}, {"topic": "jorge aguilar", "wiki": "https://en.wikipedia.org/wiki/Jorge_Aguilar", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10713126-4.html.csv", "action": "majority", "sent": "all tournaments jorge aguilar played in were played on a clay surface .", "annotation": {"scope": "all", "col": "4", "most_or_all": "all", "criterion": "equal", "value": "clay", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "surface", "clay"], "result": true, "ind": 0, "tointer": "for the surface records of all rows , all of them fuzzily match to clay .", "tostr": "all_eq { all_rows ; surface ; clay } = true"}, "logic_str": "all_eq { all_rows ; surface ; clay } = true", "interpret": "for the surface records of all rows , all of them fuzzily match to clay .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "surface_3": 3, "clay_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "surface_3": "surface", "clay_4": "clay"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "surface_3": [0], "clay_4": [0]}, "table_header": ["outcome", "date", "tournament", "surface", "partner", "opponent", "score"], "table_cont": [["runner - up", "23 january 2006", "santiago", "clay", "felipe parada", "m\u00e1ximo gonz\u00e1lez sergio roitman", "4 - 6 , 3 - 6"], ["runner - up", "2 april 2007", "san luis potos\u00ed", "clay", "pablo gonzalez", "j\u00e9r\u00e9my chardy marcelo melo", "0 - 6 , 3 - 6"], ["runner - up", "4 october 2010", "buenos aires", "clay", "federico delbonis", "carlos berlocq brian dabul", "3 - 6 , 2 - 6"], ["runner - up", "30 may 2011", "furth", "clay", "julio c\u00e9sar campozano", "rameez junaid frank moser", "2 - 6 , 7 - 6 ( 2 ) , 7 - 10"], ["winner", "1 august 2011", "trani", "clay", "andres molteni", "giulio di meo stefano ianni", "6 - 4 , 6 - 4"], ["winner", "15 april 2013", "panama city", "clay", "sergio gald\u00f3s", "alejandro gonz\u00e1lez julio c\u00e9sar campozano", "6 - 4 , 6 - 4"]], "query": "all_eq { all_rows ; surface ; clay } = true", "question": "all tournaments jorge aguilar played in were played on a clay surface ."}, {"topic": "49ers - rams rivalry", "wiki": "https://en.wikipedia.org/wiki/49ers%E2%80%93Rams_rivalry", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18226024-8.html.csv", "action": "count", "sent": "in the 49ers - rams rivalry , three of the games were at candlestick park .", "annotation": {"scope": "all", "criterion": "equal", "value": "candlestick park", "result": "3", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "candlestick park"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to candlestick park .", "tostr": "filter_eq { all_rows ; venue ; candlestick park }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; venue ; candlestick park } }", "tointer": "select the rows whose venue record fuzzily matches to candlestick park . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; venue ; candlestick park } } ; 3 } = true", "tointer": "select the rows whose venue record fuzzily matches to candlestick park . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; venue ; candlestick park } } ; 3 } = true", "interpret": "select the rows whose venue record fuzzily matches to candlestick park . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "venue_5": 5, "candlestick park_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "venue_5": "venue", "candlestick park_6": "candlestick park", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "venue_5": [0], "candlestick park_6": [0], "3_7": [2]}, "table_header": ["year", "date", "home team", "result", "visiting team", "venue"], "table_cont": [["2010", "november 14", "san francisco 49ers", "23 - 20 ot", "st louis rams", "candlestick park"], ["2010", "december 26", "st louis rams", "25 - 17", "san francisco 49ers", "edward jones dome"], ["2011", "december 4", "san francisco 49ers", "26 - 0", "st louis rams", "candlestick park"], ["2011", "january 1", "st louis rams", "27 - 34", "san francisco 49ers", "edward jones dome"], ["2012", "november 11", "san francisco 49ers", "24 - 24 ot", "st louis rams", "candlestick park"], ["2012", "december 2", "st louis rams", "16 - 13 ot", "san francisco 49ers", "edward jones dome"]], "query": "eq { count { filter_eq { all_rows ; venue ; candlestick park } } ; 3 } = true", "question": "in the 49ers - rams rivalry , three of the games were at candlestick park ."}, {"topic": "1930 vfl season", "wiki": "https://en.wikipedia.org/wiki/1930_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10767641-2.html.csv", "action": "count", "sent": "in the 1930 vfl season , 3 of the games where home team scored above 10.00 had attendance below 20,000 .", "annotation": {"scope": "subset", "criterion": "less_than", "value": "20000", "result": "3", "col": "6", "subset": {"col": "2", "criterion": "greater_than", "value": "10"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_less", "args": [{"func": "filter_greater", "args": ["all_rows", "home team score", "10"], "result": null, "ind": 0, "tostr": "filter_greater { all_rows ; home team score ; 10 }", "tointer": "select the rows whose home team score record is greater than 10 ."}, "crowd", "20000"], "result": null, "ind": 1, "tointer": "select the rows whose home team score record is greater than 10 . among these rows , select the rows whose crowd record is less than 20000 .", "tostr": "filter_less { filter_greater { all_rows ; home team score ; 10 } ; crowd ; 20000 }"}], "result": "3", "ind": 2, "tostr": "count { filter_less { filter_greater { all_rows ; home team score ; 10 } ; crowd ; 20000 } }", "tointer": "select the rows whose home team score record is greater than 10 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 3, "tostr": "eq { count { filter_less { filter_greater { all_rows ; home team score ; 10 } ; crowd ; 20000 } } ; 3 } = true", "tointer": "select the rows whose home team score record is greater than 10 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_less { filter_greater { all_rows ; home team score ; 10 } ; crowd ; 20000 } } ; 3 } = true", "interpret": "select the rows whose home team score record is greater than 10 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 3 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_less_1": 1, "filter_greater_0": 0, "all_rows_5": 5, "home team score_6": 6, "10_7": 7, "crowd_8": 8, "20000_9": 9, "3_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_less_1": "filter_less", "filter_greater_0": "filter_greater", "all_rows_5": "all_rows", "home team score_6": "home team score", "10_7": "10", "crowd_8": "crowd", "20000_9": "20000", "3_10": "3"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_less_1": [2], "filter_greater_0": [1], "all_rows_5": [0], "home team score_6": [0], "10_7": [0], "crowd_8": [1], "20000_9": [1], "3_10": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "16.10 ( 106 )", "south melbourne", "11.12 ( 78 )", "junction oval", "21500", "10 may 1930"], ["collingwood", "11.12 ( 78 )", "hawthorn", "10.10 ( 70 )", "victoria park", "19000", "10 may 1930"], ["carlton", "17.14 ( 116 )", "richmond", "7.5 ( 47 )", "princes park", "35000", "10 may 1930"], ["melbourne", "14.16 ( 100 )", "geelong", "8.15 ( 63 )", "mcg", "14909", "10 may 1930"], ["north melbourne", "6.9 ( 45 )", "fitzroy", "9.11 ( 65 )", "arden street oval", "9000", "10 may 1930"], ["footscray", "10.14 ( 74 )", "essendon", "9.4 ( 58 )", "western oval", "18000", "10 may 1930"]], "query": "eq { count { filter_less { filter_greater { all_rows ; home team score ; 10 } ; crowd ; 20000 } } ; 3 } = true", "question": "in the 1930 vfl season , 3 of the games where home team scored above 10.00 had attendance below 20,000 ."}, {"topic": "u.s. cities with teams from four major league sports", "wiki": "https://en.wikipedia.org/wiki/U.S._cities_with_teams_from_four_major_league_sports", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1205598-1.html.csv", "action": "superlative", "sent": "detroit , michigan has hosted four teams the longest time of us cities with four major league sports .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "min", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "hosted 4 teams since"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; hosted 4 teams since }"}, "metropolitan area"], "result": "detroit , michigan", "ind": 1, "tostr": "hop { argmin { all_rows ; hosted 4 teams since } ; metropolitan area }"}, "detroit , michigan"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; hosted 4 teams since } ; metropolitan area } ; detroit , michigan } = true", "tointer": "select the row whose hosted 4 teams since record of all rows is minimum . the metropolitan area record of this row is detroit , michigan ."}, "logic_str": "eq { hop { argmin { all_rows ; hosted 4 teams since } ; metropolitan area } ; detroit , michigan } = true", "interpret": "select the row whose hosted 4 teams since record of all rows is minimum . the metropolitan area record of this row is detroit , michigan .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "hosted 4 teams since_5": 5, "metropolitan area_6": 6, "detroit , michigan_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "hosted 4 teams since_5": "hosted 4 teams since", "metropolitan area_6": "metropolitan area", "detroit , michigan_7": "detroit , michigan"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "hosted 4 teams since_5": [0], "metropolitan area_6": [1], "detroit , michigan_7": [2]}, "table_header": ["metropolitan area", "media market ranking", "hosted 4 teams since", "nfl team ( s )", "mlb team ( s )", "nba team ( s )", "nhl team ( s )"], "table_cont": [["boston , massachusetts", "7", "1960", "patriots ( foxborough , ma )", "red sox", "celtics", "bruins"], ["chicago , illinois", "3", "1966", "bears", "cubs white sox", "bulls", "blackhawks"], ["dallas - fort worth , texas", "5", "1993", "cowboys ( arlington , tx )", "rangers ( arlington , tx )", "mavericks ( dallas )", "stars ( dallas )"], ["denver , colorado", "17", "1995", "broncos", "rockies", "nuggets", "avalanche"], ["detroit , michigan", "11", "1957", "lions", "tigers", "pistons ( auburn hills , mi )", "red wings"], ["miami , florida", "16", "1993", "dolphins ( miami gardens , fl )", "marlins", "heat", "panthers ( sunrise , fl )"], ["minneapolis - st paul , minnesota", "15", "2000", "vikings ( minneapolis )", "twins ( minneapolis )", "timberwolves ( minneapolis )", "wild ( st paul )"], ["philadelphia , pennsylvania", "4", "1967", "eagles", "phillies", "76ers", "flyers"], ["phoenix , arizona", "13", "1998", "cardinals ( glendale , az )", "diamondbacks", "suns", "coyotes ( glendale , az )"], ["san francisco bay area , california", "6", "1991", "49ers ( san francisco ) raiders ( oakland )", "giants ( san francisco ) athletics ( oakland )", "warriors ( oakland )", "sharks ( san jose )"]], "query": "eq { hop { argmin { all_rows ; hosted 4 teams since } ; metropolitan area } ; detroit , michigan } = true", "question": "detroit , michigan has hosted four teams the longest time of us cities with four major league sports ."}, {"topic": "nordic skiing", "wiki": "https://en.wikipedia.org/wiki/Nordic_skiing", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-174491-5.html.csv", "action": "comparative", "sent": "for nordic skiing , thomas wassberg was the winner 9 years before gunde svan .", "annotation": {"row_1": "4", "row_2": "5", "col": "4", "col_other": "1", "relation": "diff", "record_mentioned": "yes", "diff_result": {"diff_value": "9", "bigger": "row2"}}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "winner", "thomas wassberg"], "result": null, "ind": 0, "tointer": "select the rows whose winner record fuzzily matches to thomas wassberg .", "tostr": "filter_eq { all_rows ; winner ; thomas wassberg }"}, "fis nordic world ski championships"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships }", "tointer": "select the rows whose winner record fuzzily matches to thomas wassberg . take the fis nordic world ski championships record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "winner", "gunde svan"], "result": null, "ind": 1, "tointer": "select the rows whose winner record fuzzily matches to gunde svan .", "tostr": "filter_eq { all_rows ; winner ; gunde svan }"}, "fis nordic world ski championships"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships }", "tointer": "select the rows whose winner record fuzzily matches to gunde svan . take the fis nordic world ski championships record of this row ."}], "result": "-9", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } }"}, "-9"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } } ; -9 }", "tointer": "select the rows whose winner record fuzzily matches to thomas wassberg . take the fis nordic world ski championships record of this row . select the rows whose winner record fuzzily matches to gunde svan . take the fis nordic world ski championships record of this row . the second record is 9 larger than the first record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "winner", "thomas wassberg"], "result": null, "ind": 0, "tointer": "select the rows whose winner record fuzzily matches to thomas wassberg .", "tostr": "filter_eq { all_rows ; winner ; thomas wassberg }"}, "fis nordic world ski championships"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships }", "tointer": "select the rows whose winner record fuzzily matches to thomas wassberg . take the fis nordic world ski championships record of this row ."}, "1980"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; 1980 }", "tointer": "the fis nordic world ski championships record of the first row is 1980 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "winner", "gunde svan"], "result": null, "ind": 1, "tointer": "select the rows whose winner record fuzzily matches to gunde svan .", "tostr": "filter_eq { all_rows ; winner ; gunde svan }"}, "fis nordic world ski championships"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships }", "tointer": "select the rows whose winner record fuzzily matches to gunde svan . take the fis nordic world ski championships record of this row ."}, "1989"], "result": true, "ind": 7, "tostr": "eq { hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } ; 1989 }", "tointer": "the fis nordic world ski championships record of the second row is 1989 ."}], "result": true, "ind": 8, "tostr": "and { eq { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; 1980 } ; eq { hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } ; 1989 } }", "tointer": "the fis nordic world ski championships record of the first row is 1980 . the fis nordic world ski championships record of the second row is 1989 ."}], "result": true, "ind": 9, "tostr": "and { eq { diff { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } } ; -9 } ; and { eq { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; 1980 } ; eq { hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } ; 1989 } } } = true", "tointer": "select the rows whose winner record fuzzily matches to thomas wassberg . take the fis nordic world ski championships record of this row . select the rows whose winner record fuzzily matches to gunde svan . take the fis nordic world ski championships record of this row . the second record is 9 larger than the first record . the fis nordic world ski championships record of the first row is 1980 . the fis nordic world ski championships record of the second row is 1989 ."}, "logic_str": "and { eq { diff { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } } ; -9 } ; and { eq { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; 1980 } ; eq { hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } ; 1989 } } } = true", "interpret": "select the rows whose winner record fuzzily matches to thomas wassberg . take the fis nordic world ski championships record of this row . select the rows whose winner record fuzzily matches to gunde svan . take the fis nordic world ski championships record of this row . the second record is 9 larger than the first record . the fis nordic world ski championships record of the first row is 1980 . the fis nordic world ski championships record of the second row is 1989 .", "num_func": 14, "nid": 10, "g_ids": {"and_9": 9, "result_10": 10, "eq_5": 5, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_11": 11, "winner_12": 12, "thomas wassberg_13": 13, "fis nordic world ski championships_14": 14, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_15": 15, "winner_16": 16, "gunde svan_17": 17, "fis nordic world ski championships_18": 18, "-9_19": 19, "and_8": 8, "eq_6": 6, "1980_20": 20, "eq_7": 7, "1989_21": 21}, "g_ids_features": {"and_9": "and", "result_10": "true", "eq_5": "eq", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_11": "all_rows", "winner_12": "winner", "thomas wassberg_13": "thomas wassberg", "fis nordic world ski championships_14": "fis nordic world ski championships", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_15": "all_rows", "winner_16": "winner", "gunde svan_17": "gunde svan", "fis nordic world ski championships_18": "fis nordic world ski championships", "-9_19": "-9", "and_8": "and", "eq_6": "eq", "1980_20": "1980", "eq_7": "eq", "1989_21": "1989"}, "g_adj": {"and_9": [10], "result_10": [], "eq_5": [9], "diff_4": [5], "num_hop_2": [4, 6], "filter_str_eq_0": [2], "all_rows_11": [0], "winner_12": [0], "thomas wassberg_13": [0], "fis nordic world ski championships_14": [2], "num_hop_3": [4, 7], "filter_str_eq_1": [3], "all_rows_15": [1], "winner_16": [1], "gunde svan_17": [1], "fis nordic world ski championships_18": [3], "-9_19": [5], "and_8": [9], "eq_6": [8], "1980_20": [6], "eq_7": [8], "1989_21": [7]}, "table_header": ["winner", "country", "winter olympics", "fis nordic world ski championships", "holmenkollen"], "table_cont": [["hallgeir brenden", "norway", "1956", "1956", "1956"], ["eero m\u00e4ntyranta", "finland", "1964", "1964", "1962 , 1964 , 1968"], ["harald gr\u00f8nningen", "norway", "1968", "1968", "1960 , 1961"], ["thomas wassberg", "sweden", "1980", "1980", "1979 , 1985"], ["gunde svan", "sweden", "1984", "1989", "1985"]], "query": "and { eq { diff { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } } ; -9 } ; and { eq { hop { filter_eq { all_rows ; winner ; thomas wassberg } ; fis nordic world ski championships } ; 1980 } ; eq { hop { filter_eq { all_rows ; winner ; gunde svan } ; fis nordic world ski championships } ; 1989 } } } = true", "question": "for nordic skiing , thomas wassberg was the winner 9 years before gunde svan ."}, {"topic": "lithuania davis cup team", "wiki": "https://en.wikipedia.org/wiki/Lithuania_Davis_Cup_team", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10295819-5.html.csv", "action": "aggregation", "sent": "the lithuanian davis cup team scored a total of 7 points when playing on a clay surface .", "annotation": {"scope": "subset", "col": "7", "type": "sum", "result": "7", "subset": {"col": "6", "criterion": "equal", "value": "clay"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "clay"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; surface ; clay }", "tointer": "select the rows whose surface record fuzzily matches to clay ."}, "score"], "result": "7", "ind": 1, "tostr": "sum { filter_eq { all_rows ; surface ; clay } ; score }"}, "7"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_eq { all_rows ; surface ; clay } ; score } ; 7 } = true", "tointer": "select the rows whose surface record fuzzily matches to clay . the sum of the score record of these rows is 7 ."}, "logic_str": "round_eq { sum { filter_eq { all_rows ; surface ; clay } ; score } ; 7 } = true", "interpret": "select the rows whose surface record fuzzily matches to clay . the sum of the score record of these rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "surface_5": 5, "clay_6": 6, "score_7": 7, "7_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "surface_5": "surface", "clay_6": "clay", "score_7": "score", "7_8": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "surface_5": [0], "clay_6": [0], "score_7": [1], "7_8": [2]}, "table_header": ["year", "group", "round", "date", "location", "surface", "score", "outcome"], "table_cont": [["2010", "europe / africa zone group ii", "1r", "5 - 7 march", "vilnius , lithuania", "hard ( i )", "3 - 2", "won"], ["2010", "europe / africa zone group ii", "2r", "9 - 11 july", "dublin , ireland", "carpet ( i )", "3 - 2", "won"], ["2010", "europe / africa zone group ii", "q", "17 - 19 september", "vilnius , lithuania", "hard ( i )", "3 - 2", "lost"], ["2011", "europe / africa zone group ii", "1r", "4 - 6 march", "tallinn , estonia", "hard ( i )", "2 - 3", "lost"], ["2011", "europe / africa zone group ii", "po", "8 - 10 july", "vilnius , lithuania", "clay", "0 - 5", "lost"], ["2012", "europe zone group iii", "rr", "3 may", "sofia , bulgaria", "clay", "3 - 0", "won"], ["2012", "europe zone group iii", "rr", "4 may", "sofia , bulgaria", "clay", "2 - 0", "won"], ["2012", "europe zone group iii", "po", "5 may", "sofia , bulgaria", "clay", "2 - 1", "won"], ["2013", "europe / africa zone group ii", "1r", "1 - 3 february", "\u0161iauliai , lithuania", "hard ( i )", "4 - 1", "won"], ["2013", "europe / africa zone group ii", "2r", "5 - 7 april", "lisbon , portugal", "clay", "0 - 5", "lost"]], "query": "round_eq { sum { filter_eq { all_rows ; surface ; clay } ; score } ; 7 } = true", "question": "the lithuanian davis cup team scored a total of 7 points when playing on a clay surface ."}, {"topic": "television in italy", "wiki": "https://en.wikipedia.org/wiki/Television_in_Italy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15887683-22.html.csv", "action": "unique", "sent": "of the television channels in italy , la7 is the only the channel owned by cairo communication .", "annotation": {"scope": "all", "row": "7", "col": "4", "col_other": "2", "criterion": "fuzzily_match", "value": "cairo communication", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "owner", "cairo communication"], "result": null, "ind": 0, "tointer": "select the rows whose owner record fuzzily matches to cairo communication .", "tostr": "filter_eq { all_rows ; owner ; cairo communication }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; owner ; cairo communication } }", "tointer": "select the rows whose owner record fuzzily matches to cairo communication . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "owner", "cairo communication"], "result": null, "ind": 0, "tointer": "select the rows whose owner record fuzzily matches to cairo communication .", "tostr": "filter_eq { all_rows ; owner ; cairo communication }"}, "channel"], "result": "la7", "ind": 2, "tostr": "hop { filter_eq { all_rows ; owner ; cairo communication } ; channel }"}, "la7"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; owner ; cairo communication } ; channel } ; la7 }", "tointer": "the channel record of this unqiue row is la7 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; owner ; cairo communication } } ; eq { hop { filter_eq { all_rows ; owner ; cairo communication } ; channel } ; la7 } } = true", "tointer": "select the rows whose owner record fuzzily matches to cairo communication . there is only one such row in the table . the channel record of this unqiue row is la7 ."}, "logic_str": "and { only { filter_eq { all_rows ; owner ; cairo communication } } ; eq { hop { filter_eq { all_rows ; owner ; cairo communication } ; channel } ; la7 } } = true", "interpret": "select the rows whose owner record fuzzily matches to cairo communication . there is only one such row in the table . the channel record of this unqiue row is la7 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "owner_7": 7, "cairo communication_8": 8, "str_eq_3": 3, "str_hop_2": 2, "channel_9": 9, "la7_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "owner_7": "owner", "cairo communication_8": "cairo communication", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "channel_9": "channel", "la7_10": "la7"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "owner_7": [0], "cairo communication_8": [0], "str_eq_3": [4], "str_hop_2": [3], "channel_9": [2], "la7_10": [3]}, "table_header": ["position", "channel", "launch date", "owner", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013 ( p )"], "table_cont": [["1", "rai 1", "1954", "rai", "22.86", "22.99", "22.33", "21.80", "20.63", "19.86", "18.1", "18.3", "19.12"], ["2", "canale 5", "1980", "mediaset", "21.82", "20.96", "20.67", "20.33", "20.50", "18.78", "17.0", "15.9", "15.25"], ["3", "rai 3", "1979", "rai", "9.11", "9.31", "9.06", "9.07", "8.46", "7.75", "8.5", "7.7", "7.93"], ["4", "rai 2", "1961", "rai", "11.29", "11.27", "10.38", "10.60", "8.90", "9.02", "8.3", "7.6", "6.81"], ["5", "italia 1", "1982", "mediaset", "11.48", "11.09", "11.18", "10.83", "10.68", "9.22", "8.3", "6.18", "6.48"], ["6", "rete 4", "1982", "mediaset", "8.63", "8.22", "8.68", "8.28", "7.47", "6.79", "6.7", "5.42", "5.26"], ["7", "la7", "2001", "cairo communication", "2.71", "3.02", "2.97", "3.08", "2.90", "3.67", "3.8", "3.68", "4.29"], ["8", "real time", "2005", "discovery networks", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.09", "1.4", "1.49"], ["9", "iris", "2007", "mediaset", "ne", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.1", "1.27"], ["10", "rai yoyo", "2006", "rai", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "0.90", "1.24"], ["11", "dmax", "2011", "discovery networks", "ne", "ne", "ne", "ne", "ne", "ne", "< 0.90", "< 0.90", "1.17"], ["12", "rai premium", "2003", "rai", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.25", "1.11"], ["13", "rai movie", "1999", "rai", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "0.92", "0.93"], ["14", "rai 4", "2008", "rai", "ne", "ne", "ne", "< 0.90", "< 0.90", "< 0.90", "0.98", "1.1", "0.91"]], "query": "and { only { filter_eq { all_rows ; owner ; cairo communication } } ; eq { hop { filter_eq { all_rows ; owner ; cairo communication } ; channel } ; la7 } } = true", "question": "of the television channels in italy , la7 is the only the channel owned by cairo communication ."}, {"topic": "dick rathmann", "wiki": "https://en.wikipedia.org/wiki/Dick_Rathmann", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1235982-1.html.csv", "action": "comparative", "sent": "dick rathmann completed more laps in the indianapolis 500 in 1956 than in 1959 .", "annotation": {"row_1": "2", "row_2": "5", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1956"], "result": null, "ind": 0, "tointer": "select the rows whose year record fuzzily matches to 1956 .", "tostr": "filter_eq { all_rows ; year ; 1956 }"}, "laps"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; year ; 1956 } ; laps }", "tointer": "select the rows whose year record fuzzily matches to 1956 . take the laps record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1959"], "result": null, "ind": 1, "tointer": "select the rows whose year record fuzzily matches to 1959 .", "tostr": "filter_eq { all_rows ; year ; 1959 }"}, "laps"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; year ; 1959 } ; laps }", "tointer": "select the rows whose year record fuzzily matches to 1959 . take the laps record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; year ; 1956 } ; laps } ; hop { filter_eq { all_rows ; year ; 1959 } ; laps } } = true", "tointer": "select the rows whose year record fuzzily matches to 1956 . take the laps record of this row . select the rows whose year record fuzzily matches to 1959 . take the laps record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; year ; 1956 } ; laps } ; hop { filter_eq { all_rows ; year ; 1959 } ; laps } } = true", "interpret": "select the rows whose year record fuzzily matches to 1956 . take the laps record of this row . select the rows whose year record fuzzily matches to 1959 . take the laps record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "year_7": 7, "1956_8": 8, "laps_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "year_11": 11, "1959_12": 12, "laps_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "year_7": "year", "1956_8": "1956", "laps_9": "laps", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "year_11": "year", "1959_12": "1959", "laps_13": "laps"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "year_7": [0], "1956_8": [0], "laps_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "year_11": [1], "1959_12": [1], "laps_13": [3]}, "table_header": ["year", "qual", "rank", "finish", "laps"], "table_cont": [["1950", "130.928", "17", "32", "25"], ["1956", "144.471", "6", "5", "200"], ["1957", "140.780", "withdrew", "withdrew", "withdrew"], ["1958", "145.974", "1", "27", "0"], ["1959", "144.248", "5", "20", "150"], ["1960", "145.543", "6", "31", "42"], ["1961", "146.033", "8", "13", "164"], ["1962", "147.161", "13", "24", "51"], ["1963", "149.130", "14", "10", "200"], ["1964", "151.860", "17", "7", "197"]], "query": "greater { hop { filter_eq { all_rows ; year ; 1956 } ; laps } ; hop { filter_eq { all_rows ; year ; 1959 } ; laps } } = true", "question": "dick rathmann completed more laps in the indianapolis 500 in 1956 than in 1959 ."}, {"topic": "1944 vfl season", "wiki": "https://en.wikipedia.org/wiki/1944_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10809142-7.html.csv", "action": "aggregation", "sent": "the average crowd attendance at games in the 1944 vfl season was 13333 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "13333", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "crowd"], "result": "13333", "ind": 0, "tostr": "avg { all_rows ; crowd }"}, "13333"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; crowd } ; 13333 } = true", "tointer": "the average of the crowd record of all rows is 13333 ."}, "logic_str": "round_eq { avg { all_rows ; crowd } ; 13333 } = true", "interpret": "the average of the crowd record of all rows is 13333 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "crowd_4": 4, "13333_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "crowd_4": "crowd", "13333_5": "13333"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "crowd_4": [0], "13333_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "9.13 ( 67 )", "south melbourne", "8.10 ( 58 )", "western oval", "15000", "17 june 1944"], ["fitzroy", "14.13 ( 97 )", "hawthorn", "7.10 ( 52 )", "brunswick street oval", "10000", "17 june 1944"], ["collingwood", "12.21 ( 93 )", "essendon", "9.10 ( 64 )", "victoria park", "10000", "17 june 1944"], ["north melbourne", "15.20 ( 110 )", "melbourne", "12.10 ( 82 )", "arden street oval", "12000", "17 june 1944"], ["richmond", "25.23 ( 173 )", "geelong", "9.2 ( 56 )", "punt road oval", "10000", "17 june 1944"], ["st kilda", "6.12 ( 48 )", "carlton", "15.13 ( 103 )", "junction oval", "23000", "17 june 1944"]], "query": "round_eq { avg { all_rows ; crowd } ; 13333 } = true", "question": "the average crowd attendance at games in the 1944 vfl season was 13333 ."}, {"topic": "list of pacific - 12 conference champions", "wiki": "https://en.wikipedia.org/wiki/List_of_Pacific-12_Conference_champions", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27816698-2.html.csv", "action": "unique", "sent": "california state university , bakersfield is the only one of these universities whose mascot is the roadrunners .", "annotation": {"scope": "all", "row": "3", "col": "6", "col_other": "1", "criterion": "equal", "value": "roadrunners", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nickname", "roadrunners"], "result": null, "ind": 0, "tointer": "select the rows whose nickname record fuzzily matches to roadrunners .", "tostr": "filter_eq { all_rows ; nickname ; roadrunners }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; nickname ; roadrunners } }", "tointer": "select the rows whose nickname record fuzzily matches to roadrunners . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nickname", "roadrunners"], "result": null, "ind": 0, "tointer": "select the rows whose nickname record fuzzily matches to roadrunners .", "tostr": "filter_eq { all_rows ; nickname ; roadrunners }"}, "institution"], "result": "california state university , bakersfield", "ind": 2, "tostr": "hop { filter_eq { all_rows ; nickname ; roadrunners } ; institution }"}, "california state university , bakersfield"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; nickname ; roadrunners } ; institution } ; california state university , bakersfield }", "tointer": "the institution record of this unqiue row is california state university , bakersfield ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; nickname ; roadrunners } } ; eq { hop { filter_eq { all_rows ; nickname ; roadrunners } ; institution } ; california state university , bakersfield } } = true", "tointer": "select the rows whose nickname record fuzzily matches to roadrunners . there is only one such row in the table . the institution record of this unqiue row is california state university , bakersfield ."}, "logic_str": "and { only { filter_eq { all_rows ; nickname ; roadrunners } } ; eq { hop { filter_eq { all_rows ; nickname ; roadrunners } ; institution } ; california state university , bakersfield } } = true", "interpret": "select the rows whose nickname record fuzzily matches to roadrunners . there is only one such row in the table . the institution record of this unqiue row is california state university , bakersfield .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "nickname_7": 7, "roadrunners_8": 8, "str_eq_3": 3, "str_hop_2": 2, "institution_9": 9, "california state university , bakersfield_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "nickname_7": "nickname", "roadrunners_8": "roadrunners", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "institution_9": "institution", "california state university , bakersfield_10": "california state university , bakersfield"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "nickname_7": [0], "roadrunners_8": [0], "str_eq_3": [4], "str_hop_2": [3], "institution_9": [2], "california state university , bakersfield_10": [3]}, "table_header": ["institution", "location", "founded", "type", "enrollment", "nickname", "current conference", "pac - 12 sports"], "table_cont": [["boise state university", "boise , idaho", "1932", "public", "19667", "broncos", "mountain west", "wrestling"], ["california polytechnic state university", "san luis obispo , california", "1901", "public", "19777", "mustangs", "big west", "men 's swimming and diving , wrestling"], ["california state university , bakersfield", "bakersfield , california", "1965", "public", "7493", "roadrunners", "independent", "wrestling"], ["california state university , fullerton", "fullerton , california", "1957", "public", "36996", "titans", "big west", "wrestling"], ["san diego state university", "san diego , california", "1897", "public", "34500", "aztecs", "mountain west", "men 's soccer"], ["university of california , davis", "davis , california", "1908", "public", "31426", "aggies", "big west", "wrestling"]], "query": "and { only { filter_eq { all_rows ; nickname ; roadrunners } } ; eq { hop { filter_eq { all_rows ; nickname ; roadrunners } ; institution } ; california state university , bakersfield } } = true", "question": "california state university , bakersfield is the only one of these universities whose mascot is the roadrunners ."}, {"topic": "sanya", "wiki": "https://en.wikipedia.org/wiki/Sanya", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1638437-2.html.csv", "action": "aggregation", "sent": "the subdivisions of the city sanya have an average population of 60970 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "60970", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "population"], "result": "60970", "ind": 0, "tostr": "avg { all_rows ; population }"}, "60970"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; population } ; 60970 } = true", "tointer": "the average of the population record of all rows is 60970 ."}, "logic_str": "round_eq { avg { all_rows ; population } ; 60970 } = true", "interpret": "the average of the population record of all rows is 60970 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "population_4": 4, "60970_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "population_4": "population", "60970_5": "60970"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "population_4": [0], "60970_5": [1]}, "table_header": ["english name", "simplified", "traditional", "pinyin", "area", "population", "density"], "table_cont": [["hexi district", "\u6cb3\u897f\u533a", "\u6cb3\u897f\u5340", "h\u00e9x\u012b q\u016b", "10", "134026", "13403"], ["hedong district", "\u6cb3\u4e1c\u533a", "\u6cb3\u6771\u5340", "h\u00e9d\u014dng q\u016b", "35", "147944", "4227"], ["haitangwan", "\u6d77\u68e0\u6e7e\u9547", "\u6d77\u68e0\u7063\u93ae", "h\u01ceit\u00e1ngw\u0101n zh\u00e8n", "254", "44617", "176"], ["jiyang", "\u5409\u9633\u9547", "\u5409\u967d\u93ae", "j\u00edy\u00e1ng zh\u00e8n", "199", "92316", "464"], ["fenghuang", "\u51e4\u51f0\u9547", "\u9cf3\u51f0\u93ae", "f\u00e8nghu\u00e1ng zh\u00e8n", "487", "66801", "137"], ["yacheng", "\u5d16\u57ce\u9547", "\u5d16\u57ce\u93ae", "y\u00e1ch\u00e9ng zh\u00e8n", "383", "74779", "195"], ["tianya", "\u5929\u6daf\u9547", "\u5929\u6daf\u93ae", "ti\u0101ny\u00e1 zh\u00e8n", "269", "34934", "130"], ["yucai", "\u80b2\u624d\u9547", "\u80b2\u624d\u93ae", "y\u00f9c\u00e1i zh\u00e8n", "315", "17515", "56"], ["nantian farm", "\u56fd\u8425\u5357\u7530\u519c\u573a", "\u570b\u71df\u5357\u7530\u8fb2\u5834", "gu\u00f3y\u00edng n\u00e1nti\u00e1n n\u00f3ngch\u01ceng", "nd", "24280", "nd"], ["nanxin farm", "\u56fd\u8425\u5357\u65b0\u519c\u573a", "\u570b\u71df\u5357\u65b0\u8fb2\u5834", "gu\u00f3y\u00edng n\u00e1nx\u012bn n\u00f3ngch\u01ceng", "nd", "16801", "nd"], ["licai farm", "\u56fd\u8425\u7acb\u624d\u519c\u573a", "\u570b\u71df\u7acb\u624d\u8fb2\u5834", "gu\u00f3y\u00edng l\u00ecc\u00e1i n\u00f3ngch\u01ceng", "nd", "16659", "nd"]], "query": "round_eq { avg { all_rows ; population } ; 60970 } = true", "question": "the subdivisions of the city sanya have an average population of 60970 ."}, {"topic": "sheffield shield", "wiki": "https://en.wikipedia.org/wiki/Sheffield_Shield", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1585656-18.html.csv", "action": "unique", "sent": "clarrie grimmett was the only player in the sheffield shield from victoria/south australia .", "annotation": {"scope": "all", "row": "1", "col": "3", "col_other": "n/a", "criterion": "fuzzily_match", "value": "vic / sa", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "vic / sa"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to vic / sa .", "tostr": "filter_eq { all_rows ; player ; vic / sa }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; player ; vic / sa } } = true", "tointer": "select the rows whose player record fuzzily matches to vic / sa . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; player ; vic / sa } } = true", "interpret": "select the rows whose player record fuzzily matches to vic / sa . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "player_4": 4, "vic / sa_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "player_4": "player", "vic / sa_5": "vic / sa"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "player_4": [0], "vic / sa_5": [0]}, "table_header": ["rank", "s wicket", "player", "matches", "average"], "table_cont": [["1", "513", "clarrie grimmett ( vic / sa )", "79", "25.29"], ["2", "441", "michael kasprowicz ( qld )", "101", "24.56"], ["3", "430", "andy bichel ( qld )", "89", "23.24"], ["4", "419", "jo angel ( wa )", "105", "24.86"], ["5", "384", "terry alderman ( wa )", "97", "24.21"]], "query": "only { filter_eq { all_rows ; player ; vic / sa } } = true", "question": "clarrie grimmett was the only player in the sheffield shield from victoria/south australia ."}, {"topic": "1978 new zealand rugby union tour of britain and ireland", "wiki": "https://en.wikipedia.org/wiki/1978_New_Zealand_rugby_union_tour_of_Britain_and_Ireland", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18844321-1.html.csv", "action": "unique", "sent": "in the 1978 new zealand rugby union tour of britain and ireland , the only time the venue was in aberdeen was on december 5th , 1978 .", "annotation": {"scope": "all", "row": "15", "col": "4", "col_other": "3", "criterion": "equal", "value": "aberdeen", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "aberdeen"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to aberdeen .", "tostr": "filter_eq { all_rows ; venue ; aberdeen }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; venue ; aberdeen } }", "tointer": "select the rows whose venue record fuzzily matches to aberdeen . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "aberdeen"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to aberdeen .", "tostr": "filter_eq { all_rows ; venue ; aberdeen }"}, "date"], "result": "5 december 1978", "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; aberdeen } ; date }"}, "5 december 1978"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; venue ; aberdeen } ; date } ; 5 december 1978 }", "tointer": "the date record of this unqiue row is 5 december 1978 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; venue ; aberdeen } } ; eq { hop { filter_eq { all_rows ; venue ; aberdeen } ; date } ; 5 december 1978 } } = true", "tointer": "select the rows whose venue record fuzzily matches to aberdeen . there is only one such row in the table . the date record of this unqiue row is 5 december 1978 ."}, "logic_str": "and { only { filter_eq { all_rows ; venue ; aberdeen } } ; eq { hop { filter_eq { all_rows ; venue ; aberdeen } ; date } ; 5 december 1978 } } = true", "interpret": "select the rows whose venue record fuzzily matches to aberdeen . there is only one such row in the table . the date record of this unqiue row is 5 december 1978 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "venue_7": 7, "aberdeen_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "5 december 1978_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "venue_7": "venue", "aberdeen_8": "aberdeen", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "5 december 1978_10": "5 december 1978"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "venue_7": [0], "aberdeen_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "5 december 1978_10": [3]}, "table_header": ["opposing team", "against", "date", "venue", "status"], "table_cont": [["cambridge university", "12", "18 october 1978", "grange road , cambridge", "tour match"], ["cardiff", "7", "21 october 1978", "cardiff arms park , cardiff", "tour match"], ["west wales xv", "7", "25 october 1978", "st helen 's , swansea", "tour match"], ["london counties", "12", "28 october 1978", "twickenham , london", "tour match"], ["munster", "12", "31 october 1978", "thomond park , limerick", "tour match"], ["ireland", "6", "4 november 1978", "lansdowne road , dublin", "test match"], ["ulster", "7", "7 november 1978", "ravenhill , belfast", "tour match"], ["wales", "12", "11 november 1978", "cardiff arms park , cardiff", "test match"], ["south and south - west counties", "0", "15 november 1978", "memorial ground , bristol", "tour match"], ["midland counties", "15", "18 november 1978", "welford road , leicester", "tour match"], ["combined services", "6", "21 november 1978", "aldershot military stadium , aldershot", "tour match"], ["england", "6", "25 november 1978", "twickenham , london", "test match"], ["monmouthshire", "9", "29 november 1978", "rodney parade , newport", "tour match"], ["north of england", "6", "2 december 1978", "birkenhead park , birkenhead", "tour match"], ["north and midland of scotland", "3", "5 december 1978", "linksfield stadium , aberdeen", "tour match"], ["scotland", "9", "9 december 1978", "murrayfield , edinburgh", "test match"], ["bridgend", "6", "13 december 1978", "brewery field , bridgend", "tour match"], ["barbarians", "16", "16 december 1978", "cardiff arms park , cardiff", "tour match"]], "query": "and { only { filter_eq { all_rows ; venue ; aberdeen } } ; eq { hop { filter_eq { all_rows ; venue ; aberdeen } ; date } ; 5 december 1978 } } = true", "question": "in the 1978 new zealand rugby union tour of britain and ireland , the only time the venue was in aberdeen was on december 5th , 1978 ."}, {"topic": "drayton manor theme park", "wiki": "https://en.wikipedia.org/wiki/Drayton_Manor_Theme_Park", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1520959-1.html.csv", "action": "superlative", "sent": "the ben 10 - ultimate mission ride is the newest ride at drayton manor theme park .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "opened"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; opened }"}, "name"], "result": "ben 10 - ultimate mission", "ind": 1, "tostr": "hop { argmax { all_rows ; opened } ; name }"}, "ben 10 - ultimate mission"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; opened } ; name } ; ben 10 - ultimate mission } = true", "tointer": "select the row whose opened record of all rows is maximum . the name record of this row is ben 10 - ultimate mission ."}, "logic_str": "eq { hop { argmax { all_rows ; opened } ; name } ; ben 10 - ultimate mission } = true", "interpret": "select the row whose opened record of all rows is maximum . the name record of this row is ben 10 - ultimate mission .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "opened_5": 5, "name_6": 6, "ben 10 - ultimate mission_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "opened_5": "opened", "name_6": "name", "ben 10 - ultimate mission_7": "ben 10 - ultimate mission"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "opened_5": [0], "name_6": [1], "ben 10 - ultimate mission_7": [2]}, "table_header": ["name", "style", "opened", "manufacturer", "themed area"], "table_cont": [["the shock wave", "standing up rollercoaster", "1994", "intamin", "action park"], ["g force", "steel sit down", "2005", "mauer s\u00f6hne", "action park"], ["ben 10 - ultimate mission", "steel sit down", "2011", "vekoma", "aerial park"], ["buffalo mountain coaster", "steel sit down", "1987", "zamperla", "aerial park"], ["troublesome trucks runaway coaster", "steel sit down", "2008", "gerstlauer", "thomas land"]], "query": "eq { hop { argmax { all_rows ; opened } ; name } ; ben 10 - ultimate mission } = true", "question": "the ben 10 - ultimate mission ride is the newest ride at drayton manor theme park ."}, {"topic": "modern guilt", "wiki": "https://en.wikipedia.org/wiki/Modern_Guilt", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17388337-3.html.csv", "action": "majority", "sent": "all of the versions of the album modern guilt were released on the date july 8 , 2008 .", "annotation": {"scope": "all", "col": "2", "most_or_all": "all", "criterion": "equal", "value": "july 8 , 2008", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "date", "july 8 , 2008"], "result": true, "ind": 0, "tointer": "for the date records of all rows , all of them fuzzily match to july 8 , 2008 .", "tostr": "all_eq { all_rows ; date ; july 8 , 2008 } = true"}, "logic_str": "all_eq { all_rows ; date ; july 8 , 2008 } = true", "interpret": "for the date records of all rows , all of them fuzzily match to july 8 , 2008 .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "july 8 , 2008_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "july 8 , 2008_4": "july 8 , 2008"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "july 8 , 2008_4": [0]}, "table_header": ["region", "date", "label", "format", "catalog"], "table_cont": [["world", "july 8 , 2008", "dgc", "digital download", ""], ["argentina", "july 8 , 2008", "dgc", "cd", "1775441"], ["australia", "july 8 , 2008", "dgc", "cd", "1775441"], ["canada", "july 8 , 2008", "dgc", "cd", "b001150702"], ["united states", "july 8 , 2008", "dgc", "cd", "b0011507 - 02"], ["united states", "july 8 , 2008", "dgc", "lp", "b0011630 - 01"], ["united kingdom", "july 8 , 2008", "dgc", "cd", "b001150702"], ["united kingdom", "july 8 , 2008", "xl", "cd", "xlcd369"], ["united kingdom", "july 8 , 2008", "xl", "lp", "xllp 369"], ["europe", "july 8 , 2008", "xl", "lp", "xllp 369"], ["europe", "july 8 , 2008", "xl", "cd", "xlcd369"]], "query": "all_eq { all_rows ; date ; july 8 , 2008 } = true", "question": "all of the versions of the album modern guilt were released on the date july 8 , 2008 ."}, {"topic": "uk singles chart records and statistics", "wiki": "https://en.wikipedia.org/wiki/UK_Singles_Chart_records_and_statistics", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1477679-2.html.csv", "action": "unique", "sent": "of the top uk singles , only one had a run at the top of the chart longer than 16 weeks .", "annotation": {"scope": "all", "row": "1", "col": "5", "col_other": "n/a", "criterion": "greater_than", "value": "16", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "weeks", "16"], "result": null, "ind": 0, "tointer": "select the rows whose weeks record is greater than 16 .", "tostr": "filter_greater { all_rows ; weeks ; 16 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; weeks ; 16 } } = true", "tointer": "select the rows whose weeks record is greater than 16 . there is only one such row in the table ."}, "logic_str": "only { filter_greater { all_rows ; weeks ; 16 } } = true", "interpret": "select the rows whose weeks record is greater than 16 . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_greater_0": 0, "all_rows_3": 3, "weeks_4": 4, "16_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_greater_0": "filter_greater", "all_rows_3": "all_rows", "weeks_4": "weeks", "16_5": "16"}, "g_adj": {"only_1": [2], "result_2": [], "filter_greater_0": [1], "all_rows_3": [0], "weeks_4": [0], "16_5": [0]}, "table_header": ["position", "artist", "single", "year", "weeks"], "table_cont": [["1st", "frankie laine", "i believe", "1953", "18 weeks"], ["2nd", "bryan adams", "( everything i do ) i do it for you", "1991", "16 weeks"], ["3rd", "wet wet wet", "love is all around", "1994", "15 weeks"], ["4th", "queen", "bohemian rhapsody", "1975 / 76 & 1991 / 92", "14 weeks"], ["5th", "slim whitman", "rose marie", "1955", "11 weeks"], ["6th", "david whitfield", "cara mia", "1954", "10 weeks"], ["6th", "whitney houston", "i will always love you", "1992", "10 weeks"], ["6th", "rihanna ( feat jay - z )", "umbrella", "2007", "10 weeks"]], "query": "only { filter_greater { all_rows ; weeks ; 16 } } = true", "question": "of the top uk singles , only one had a run at the top of the chart longer than 16 weeks ."}, {"topic": "politics of khuzestan province", "wiki": "https://en.wikipedia.org/wiki/Politics_of_Khuzestan_Province", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1827900-1.html.csv", "action": "superlative", "sent": "of the candidates in the 2005 iranian presidential election , mehdi karroubi got the most votes in the khuzestan province .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "% of votes khuzestan"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; % of votes khuzestan }"}, "candidates"], "result": "mehdi karroubi", "ind": 1, "tostr": "hop { argmax { all_rows ; % of votes khuzestan } ; candidates }"}, "mehdi karroubi"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; % of votes khuzestan } ; candidates } ; mehdi karroubi } = true", "tointer": "select the row whose % of votes khuzestan record of all rows is maximum . the candidates record of this row is mehdi karroubi ."}, "logic_str": "eq { hop { argmax { all_rows ; % of votes khuzestan } ; candidates } ; mehdi karroubi } = true", "interpret": "select the row whose % of votes khuzestan record of all rows is maximum . the candidates record of this row is mehdi karroubi .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "% of votes khuzestan_5": 5, "candidates_6": 6, "mehdi karroubi_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "% of votes khuzestan_5": "% of votes khuzestan", "candidates_6": "candidates", "mehdi karroubi_7": "mehdi karroubi"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "% of votes khuzestan_5": [0], "candidates_6": [1], "mehdi karroubi_7": [2]}, "table_header": ["candidates", "votes khuzestan", "% of votes khuzestan", "votes nationally", "% of votes nationally"], "table_cont": [["akbar hashemi rafsanjani", "319883", "20.50", "6211937", "21.13"], ["mahmoud ahmadinejad", "224427", "14.40", "5711696", "19.43"], ["mehdi karroubi", "539158", "34.50", "5070114", "17.24"], ["mostafa moeen", "148375", "9.50", "4095827", "13.93"], ["mohammad bagher ghalibaf", "148207", "9.50", "4083951", "13.89"], ["ali larijani", "58554", "3.70", "1713810", "5.83"]], "query": "eq { hop { argmax { all_rows ; % of votes khuzestan } ; candidates } ; mehdi karroubi } = true", "question": "of the candidates in the 2005 iranian presidential election , mehdi karroubi got the most votes in the khuzestan province ."}, {"topic": "list of largest airlines in south america", "wiki": "https://en.wikipedia.org/wiki/List_of_largest_airlines_in_South_America", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11898258-5.html.csv", "action": "comparative", "sent": "of largest airlines in south america , tam is ranked one better than gol .", "annotation": {"row_1": "1", "row_2": "2", "col": "1", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "1 better", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "airline", "tam"], "result": null, "ind": 0, "tointer": "select the rows whose airline record fuzzily matches to tam .", "tostr": "filter_eq { all_rows ; airline ; tam }"}, "rank"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; airline ; tam } ; rank }", "tointer": "select the rows whose airline record fuzzily matches to tam . take the rank record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "airline", "gol"], "result": null, "ind": 1, "tointer": "select the rows whose airline record fuzzily matches to gol .", "tostr": "filter_eq { all_rows ; airline ; gol }"}, "rank"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; airline ; gol } ; rank }", "tointer": "select the rows whose airline record fuzzily matches to gol . take the rank record of this row ."}], "result": "-1 better", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; airline ; tam } ; rank } ; hop { filter_eq { all_rows ; airline ; gol } ; rank } }"}, "-1 better"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; airline ; tam } ; rank } ; hop { filter_eq { all_rows ; airline ; gol } ; rank } } ; -1 better } = true", "tointer": "select the rows whose airline record fuzzily matches to tam . take the rank record of this row . select the rows whose airline record fuzzily matches to gol . take the rank record of this row . the second record is 1 better larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; airline ; tam } ; rank } ; hop { filter_eq { all_rows ; airline ; gol } ; rank } } ; -1 better } = true", "interpret": "select the rows whose airline record fuzzily matches to tam . take the rank record of this row . select the rows whose airline record fuzzily matches to gol . take the rank record of this row . the second record is 1 better larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"str_eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "airline_8": 8, "tam_9": 9, "rank_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "airline_12": 12, "gol_13": 13, "rank_14": 14, "-1 better_15": 15}, "g_ids_features": {"str_eq_5": "str_eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "airline_8": "airline", "tam_9": "tam", "rank_10": "rank", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "airline_12": "airline", "gol_13": "gol", "rank_14": "rank", "-1 better_15": "-1 better"}, "g_adj": {"str_eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "airline_8": [0], "tam_9": [0], "rank_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "airline_12": [1], "gol_13": [1], "rank_14": [3], "-1 better_15": [5]}, "table_header": ["rank", "airline", "country", "remarks", "alliance"], "table_cont": [["1", "tam", "brazil", "in process of fusion with lan to form latam", "star alliance"], ["2", "gol", "brazil", "n / a", "n / a"], ["3", "lan airlines", "chile", "in process of merger with tam to form latam", "oneworld"], ["4", "avianca", "colombia", "it only includes avianca colombia", "star alliance"], ["5", "aerol\u00e3\u00adneas argentinas", "argentina", "including austral", "skyteam ( 2012 )"]], "query": "eq { diff { hop { filter_eq { all_rows ; airline ; tam } ; rank } ; hop { filter_eq { all_rows ; airline ; gol } ; rank } } ; -1 better } = true", "question": "of largest airlines in south america , tam is ranked one better than gol ."}, {"topic": "fiba europe under - 18 championship", "wiki": "https://en.wikipedia.org/wiki/FIBA_Europe_Under-18_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17838113-5.html.csv", "action": "aggregation", "sent": "in the fiba europe under - 18 championship , teams earned an average of 3 total medals .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "3", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "total"], "result": "3", "ind": 0, "tostr": "avg { all_rows ; total }"}, "3"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; total } ; 3 } = true", "tointer": "the average of the total record of all rows is 3 ."}, "logic_str": "round_eq { avg { all_rows ; total } ; 3 } = true", "interpret": "the average of the total record of all rows is 3 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "total_4": 4, "3_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "total_4": "total", "3_5": "3"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "total_4": [0], "3_5": [1]}, "table_header": ["rank", "gold", "silver", "bronze", "total"], "table_cont": [["1", "1", "3", "0", "4"], ["2", "1", "1", "3", "5"], ["3", "1", "1", "2", "4"], ["4", "1", "1", "0", "2"], ["6", "1", "0", "1", "2"], ["7", "1", "0", "0", "1"], ["10", "0", "1", "0", "1"], ["12", "0", "0", "3", "3"]], "query": "round_eq { avg { all_rows ; total } ; 3 } = true", "question": "in the fiba europe under - 18 championship , teams earned an average of 3 total medals ."}, {"topic": "papal conclave , 1389", "wiki": "https://en.wikipedia.org/wiki/Papal_conclave%2C_1389", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12141437-1.html.csv", "action": "count", "sent": "a total of six electors had the order cardinal-deacon in the 1389 papal conclave .", "annotation": {"scope": "all", "criterion": "equal", "value": "cardinal-deacon", "result": "6", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "order", "cardinal-deacon"], "result": null, "ind": 0, "tointer": "select the rows whose order record fuzzily matches to cardinal-deacon .", "tostr": "filter_eq { all_rows ; order ; cardinal-deacon }"}], "result": "6", "ind": 1, "tostr": "count { filter_eq { all_rows ; order ; cardinal-deacon } }", "tointer": "select the rows whose order record fuzzily matches to cardinal-deacon . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; order ; cardinal-deacon } } ; 6 } = true", "tointer": "select the rows whose order record fuzzily matches to cardinal-deacon . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_eq { all_rows ; order ; cardinal-deacon } } ; 6 } = true", "interpret": "select the rows whose order record fuzzily matches to cardinal-deacon . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "order_5": 5, "cardinal-deacon_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "order_5": "order", "cardinal-deacon_6": "cardinal-deacon", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "order_5": [0], "cardinal-deacon_6": [0], "6_7": [2]}, "table_header": ["elector", "order", "title", "elevated", "elevator"], "table_cont": [["francesco moricotti prignani", "cardinal - bishop", "bishop of palestrina", "1378 , september 18", "urban vi"], ["andrea bontempi martini", "cardinal - priest", "titulus ss marcellino e pietro", "1378 , september 18", "urban vi"], ["poncello orsini", "cardinal - priest", "titulus s clemente", "1378 , september 18", "urban vi"], ["pietro tomacelli", "cardinal - priest", "titulus s anastasia", "1381 , december 21", "urban vi"], ["angelo acciaioli", "cardinal - priest", "titulus s lorenzo in damaso", "1384 , december 17", "urban vi"], ["francesco carbone tomacelli , ocist", "cardinal - priest", "titulus s susanna", "1384 , december 17", "urban vi"], ["stefano palosio", "cardinal - priest", "titulus s marcello", "1384 , december 17", "urban vi"], ["tommaso orsini dei conti di manupello", "cardinal - deacon", "deacon of s maria in domnica", "circa 13831379", "urban vi"], ["francesco renzio", "cardinal - deacon", "deacon of s eustachio", "1381 , december 21", "urban vi"], ["marino bulcani", "cardinal - deacon", "deacon of s maria nuova", "1384 , december 17", "urban vi"], ["rinaldo brancaccio", "cardinal - deacon", "deacon of ss vito e modesto", "1384 , december 17", "urban vi"], ["ludovico fieschi", "cardinal - deacon", "deacon of s adriano", "1384 , december 17", "urban vi"], ["angelo d'anna de sommariva , ocamald", "cardinal - deacon", "deacon of s lucia in septisolio", "1384 , december 17", "urban vi"]], "query": "eq { count { filter_eq { all_rows ; order ; cardinal-deacon } } ; 6 } = true", "question": "a total of six electors had the order cardinal-deacon in the 1389 papal conclave ."}, {"topic": "1963 icf canoe sprint world championships", "wiki": "https://en.wikipedia.org/wiki/1963_ICF_Canoe_Sprint_World_Championships", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18540480-4.html.csv", "action": "ordinal", "sent": "the soviet union won the third most bronze medals at the 1963 icf canoe sprint world championships .", "annotation": {"row": "2", "col": "5", "order": "3", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "bronze", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; bronze ; 3 }"}, "nation"], "result": "soviet union", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; bronze ; 3 } ; nation }"}, "soviet union"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; bronze ; 3 } ; nation } ; soviet union } = true", "tointer": "select the row whose bronze record of all rows is 3rd maximum . the nation record of this row is soviet union ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; bronze ; 3 } ; nation } ; soviet union } = true", "interpret": "select the row whose bronze record of all rows is 3rd maximum . the nation record of this row is soviet union .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "bronze_5": 5, "3_6": 6, "nation_7": 7, "soviet union_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "bronze_5": "bronze", "3_6": "3", "nation_7": "nation", "soviet union_8": "soviet union"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "bronze_5": [0], "3_6": [0], "nation_7": [1], "soviet union_8": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "romania", "6", "4", "1", "11"], ["2", "soviet union", "4", "4", "3", "11"], ["3", "east germany", "1", "3", "5", "9"], ["4", "west germany", "2", "2", "2", "6"], ["5", "hungary", "2", "0", "4", "6"], ["6", "denmark", "1", "1", "0", "2"], ["7", "sweden", "0", "2", "0", "2"], ["8", "austria", "0", "0", "1", "1"], ["total", "total", "16", "16", "16", "48"]], "query": "eq { hop { nth_argmax { all_rows ; bronze ; 3 } ; nation } ; soviet union } = true", "question": "the soviet union won the third most bronze medals at the 1963 icf canoe sprint world championships ."}, {"topic": "laredo , texas", "wiki": "https://en.wikipedia.org/wiki/Laredo%2C_Texas", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-136773-10.html.csv", "action": "comparative", "sent": "the radio channel with the callsign xemr broadcasts on a higher frequency than the radio channel with the callsign xeg .", "annotation": {"row_1": "8", "row_2": "7", "col": "1", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "callsign", "xemr"], "result": null, "ind": 0, "tointer": "select the rows whose callsign record fuzzily matches to xemr .", "tostr": "filter_eq { all_rows ; callsign ; xemr }"}, "frequency"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; callsign ; xemr } ; frequency }", "tointer": "select the rows whose callsign record fuzzily matches to xemr . take the frequency record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "callsign", "xeg"], "result": null, "ind": 1, "tointer": "select the rows whose callsign record fuzzily matches to xeg .", "tostr": "filter_eq { all_rows ; callsign ; xeg }"}, "frequency"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; callsign ; xeg } ; frequency }", "tointer": "select the rows whose callsign record fuzzily matches to xeg . take the frequency record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; callsign ; xemr } ; frequency } ; hop { filter_eq { all_rows ; callsign ; xeg } ; frequency } } = true", "tointer": "select the rows whose callsign record fuzzily matches to xemr . take the frequency record of this row . select the rows whose callsign record fuzzily matches to xeg . take the frequency record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; callsign ; xemr } ; frequency } ; hop { filter_eq { all_rows ; callsign ; xeg } ; frequency } } = true", "interpret": "select the rows whose callsign record fuzzily matches to xemr . take the frequency record of this row . select the rows whose callsign record fuzzily matches to xeg . take the frequency record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "callsign_7": 7, "xemr_8": 8, "frequency_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "callsign_11": 11, "xeg_12": 12, "frequency_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "callsign_7": "callsign", "xemr_8": "xemr", "frequency_9": "frequency", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "callsign_11": "callsign", "xeg_12": "xeg", "frequency_13": "frequency"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "callsign_7": [0], "xemr_8": [0], "frequency_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "callsign_11": [1], "xeg_12": [1], "frequency_13": [3]}, "table_header": ["frequency", "callsign", "brand", "city of license", "website", "webcast"], "table_cont": [["680", "kkyx", "country legends 680", "san antonio", "kkyxcom", "listen live"], ["720", "ksah", "norte\u00f1o 720", "san antonio", "-", "-"], ["740", "ktrh", "newsradio 740 ktrh", "houston", "ktrhcom", "listen live"], ["760", "ktkr", "ticket 760 am", "san antonio", "ticket760.com", "listen live"], ["990", "xet", "la t grande", "monterrey", "-", "listen live"], ["1030", "kcta", "kcta 1030 am", "corpus christi", "kctaradiocom", "listen live"], ["1050", "xeg", "ranchera de monterrey", "monterrey", "rancherademonterreycom", "listen live"], ["1140", "xemr", "mr deportes", "monterrey", "-", "-"], ["1200", "woai", "news radio 1200", "san antonio", "radiowoaicom", "listen live"], ["1210", "kubr", "radio cristiana", "san juan", "-", "listen live"], ["1530", "kgbt", "la tremenda 1530", "harlingen", "latremenda1530.com", "-"]], "query": "greater { hop { filter_eq { all_rows ; callsign ; xemr } ; frequency } ; hop { filter_eq { all_rows ; callsign ; xeg } ; frequency } } = true", "question": "the radio channel with the callsign xemr broadcasts on a higher frequency than the radio channel with the callsign xeg ."}, {"topic": "forbes global 2000", "wiki": "https://en.wikipedia.org/wiki/Forbes_Global_2000", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1682026-9.html.csv", "action": "aggregation", "sent": "the average sales of the top 10 ranked companies on the forbes global 2000 list is 155.6 billion .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "155.6", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "sales ( billion )"], "result": "155.6", "ind": 0, "tostr": "avg { all_rows ; sales ( billion ) }"}, "155.6"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; sales ( billion ) } ; 155.6 } = true", "tointer": "the average of the sales ( billion ) record of all rows is 155.6 ."}, "logic_str": "round_eq { avg { all_rows ; sales ( billion ) } ; 155.6 } = true", "interpret": "the average of the sales ( billion ) record of all rows is 155.6 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "sales (billion )_4": 4, "155.6_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "sales (billion )_4": "sales ( billion )", "155.6_5": "155.6"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "sales (billion )_4": [0], "155.6_5": [1]}, "table_header": ["rank", "company", "country", "industry", "sales ( billion )", "profits ( billion )", "assets ( billion )", "market value ( billion )"], "table_cont": [["1", "citigroup", "usa", "banking", "108.28", "17.05", "1 , 4.10", "247.66"], ["2", "general electric", "usa", "conglomerates", "152.36", "16.59", "750.33", "372.14"], ["3", "american international group", "usa", "insurance", "95.04", "10.91", "776.42", "173.99"], ["4", "bank of america", "usa", "banking", "65.45", "14.14", "1110.46", "188.77"], ["5", "hsbc", "uk", "banking", "62.97", "9.52", "1031.29", "186.74"], ["6", "exxonmobil", "usa", "oil & gas", "263.99", "25.33", "195.26", "405.25"], ["7", "royal dutch shell", "netherlands", "oil & gas", "265.19", "18.54", "193.83", "221.49"], ["8", "bp", "uk", "oil & gas", "285.06", "15.73", "191.11", "231.88"], ["9", "ing group", "netherlands", "diversified financials", "92.01", "8.10", "1175.16", "68.04"], ["10", "toyota", "japan", "automotive", "165.68", "11.13", "211.15", "140.89"]], "query": "round_eq { avg { all_rows ; sales ( billion ) } ; 155.6 } = true", "question": "the average sales of the top 10 ranked companies on the forbes global 2000 list is 155.6 billion ."}, {"topic": "randy lajoie", "wiki": "https://en.wikipedia.org/wiki/Randy_LaJoie", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2182562-1.html.csv", "action": "superlative", "sent": "the highest amount that randy lajoie ever earned was in the year 1998 .", "annotation": {"scope": "all", "col_superlative": "9", "row_superlative": "8", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "winnings"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; winnings }"}, "year"], "result": "1998", "ind": 1, "tostr": "hop { argmax { all_rows ; winnings } ; year }"}, "1998"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; winnings } ; year } ; 1998 } = true", "tointer": "select the row whose winnings record of all rows is maximum . the year record of this row is 1998 ."}, "logic_str": "eq { hop { argmax { all_rows ; winnings } ; year } ; 1998 } = true", "interpret": "select the row whose winnings record of all rows is maximum . the year record of this row is 1998 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "winnings_5": 5, "year_6": 6, "1998_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "winnings_5": "winnings", "year_6": "year", "1998_7": "1998"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "winnings_5": [0], "year_6": [1], "1998_7": [2]}, "table_header": ["year", "starts", "wins", "top 5", "top 10", "poles", "avg start", "avg finish", "winnings", "position", "team ( s )"], "table_cont": [["1985", "1", "0", "0", "0", "0", "16.0", "14.0", "2925", "101st", "07 bob johnson racing"], ["1986", "1", "0", "0", "0", "0", "20.0", "29.0", "1815", "107th", "07 bob johnson racing"], ["1988", "1", "0", "0", "0", "0", "29.0", "37.0", "1460", "97th", "74 wawak racing"], ["1989", "1", "0", "0", "0", "0", "32.0", "28.0", "2725", "83rd", "63 linro motorsports"], ["1990", "2", "0", "0", "0", "0", "33.0", "35.5", "6675", "73rd", "13 linro motorsports"], ["1994", "3", "0", "0", "0", "0", "20.3", "19.7", "30565", "48th", "20 moroso racing 02 tw taylor"], ["1995", "14", "0", "0", "0", "0", "29.4", "27.4", "281945", "40th", "22 bill davis racing 40 brooks / sabco racing"], ["1998", "9", "0", "1", "3", "0", "25.3", "26.2", "336905", "49th", "50 hendrick motorsports"], ["1999", "2", "0", "0", "0", "0", "19.0", "38.5", "71200", "61st", "14 no fear racing"], ["2004", "3", "0", "0", "0", "0", "41.0", "40.3", "160261", "68th", "80 hover motorsports 98 mach 1 motorsports"]], "query": "eq { hop { argmax { all_rows ; winnings } ; year } ; 1998 } = true", "question": "the highest amount that randy lajoie ever earned was in the year 1998 ."}, {"topic": "1995 buffalo bills season", "wiki": "https://en.wikipedia.org/wiki/1995_Buffalo_Bills_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17386115-2.html.csv", "action": "count", "sent": "in the 1995 buffalo bills season , among the games played in december , 2 of them were played in rich stadium .", "annotation": {"scope": "subset", "criterion": "equal", "value": "rich stadium", "result": "2", "col": "6", "subset": {"col": "2", "criterion": "fuzzily_match", "value": "december"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "december"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; december }", "tointer": "select the rows whose date record fuzzily matches to december ."}, "game site", "rich stadium"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to december . among these rows , select the rows whose game site record fuzzily matches to rich stadium .", "tostr": "filter_eq { filter_eq { all_rows ; date ; december } ; game site ; rich stadium }"}], "result": "2", "ind": 2, "tostr": "count { filter_eq { filter_eq { all_rows ; date ; december } ; game site ; rich stadium } }", "tointer": "select the rows whose date record fuzzily matches to december . among these rows , select the rows whose game site record fuzzily matches to rich stadium . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_eq { all_rows ; date ; december } ; game site ; rich stadium } } ; 2 } = true", "tointer": "select the rows whose date record fuzzily matches to december . among these rows , select the rows whose game site record fuzzily matches to rich stadium . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { filter_eq { all_rows ; date ; december } ; game site ; rich stadium } } ; 2 } = true", "interpret": "select the rows whose date record fuzzily matches to december . among these rows , select the rows whose game site record fuzzily matches to rich stadium . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "date_6": 6, "december_7": 7, "game site_8": 8, "rich stadium_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "date_6": "date", "december_7": "december", "game site_8": "game site", "rich stadium_9": "rich stadium", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_eq_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "date_6": [0], "december_7": [0], "game site_8": [1], "rich stadium_9": [1], "2_10": [3]}, "table_header": ["week", "date", "opponent", "result", "record", "game site", "attendance"], "table_cont": [["1", "september 3 , 1995", "denver broncos", "l 7 - 22", "0 - 1", "mile high stadium", "75157"], ["2", "september 10 , 1995", "carolina panthers", "w 31 - 9", "1 - 1", "rich stadium", "79190"], ["3", "september 17 , 1995", "indianapolis colts", "w 20 - 14", "2 - 1", "rich stadium", "62499"], ["4", "-", "-", "-", "-", "-", ""], ["5", "october 2 , 1995", "cleveland browns", "w 22 - 19", "3 - 1", "cleveland municipal stadium", "76211"], ["6", "october 8 , 1995", "new york jets", "w 29 - 10", "4 - 1", "rich stadium", "79485"], ["7", "october 15 , 1995", "seattle seahawks", "w 27 - 21", "5 - 1", "rich stadium", "74362"], ["8", "october 23 , 1995", "new england patriots", "l 14 - 27", "5 - 2", "foxboro stadium", "60203"], ["9", "october 29 , 1995", "miami dolphins", "l 6 - 23", "5 - 3", "joe robbie stadium", "71060"], ["10", "november 5 , 1995", "indianapolis colts", "w 16 - 10", "6 - 3", "rca dome", "59612"], ["11", "november 12 , 1995", "atlanta falcons", "w 23 - 17", "7 - 3", "rich stadium", "62690"], ["12", "november 19 , 1995", "new york jets", "w 28 - 26", "8 - 3", "the meadowlands", "54436"], ["13", "november 26 , 1995", "new england patriots", "l 25 - 35", "8 - 4", "rich stadium", "69384"], ["14", "december 3 , 1995", "san francisco 49ers", "l 17 - 27", "8 - 5", "candlestick park", "65568"], ["15", "december 10 , 1995", "st louis rams", "w 45 - 27", "9 - 5", "trans world dome", "64623"], ["16", "december 17 , 1995", "miami dolphins", "w 23 - 20", "10 - 5", "rich stadium", "79531"], ["17", "december 24 , 1995", "houston oilers", "l 28 - 17", "10 - 6", "rich stadium", "45253"]], "query": "eq { count { filter_eq { filter_eq { all_rows ; date ; december } ; game site ; rich stadium } } ; 2 } = true", "question": "in the 1995 buffalo bills season , among the games played in december , 2 of them were played in rich stadium ."}, {"topic": "fifa beach soccer world cup", "wiki": "https://en.wikipedia.org/wiki/FIFA_Beach_Soccer_World_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1864131-3.html.csv", "action": "aggregation", "sent": "between 2005 and 2006 , there were 33 goals scored against madjer in the fifa beach soccer world cup .", "annotation": {"scope": "subset", "col": "4", "type": "sum", "result": "33", "subset": {"col": "1", "criterion": "less_than_eq", "value": "2006"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_less_eq", "args": ["all_rows", "year", "2006"], "result": null, "ind": 0, "tostr": "filter_less_eq { all_rows ; year ; 2006 }", "tointer": "select the rows whose year record is less than or equal to 2006 ."}, "player of the tournament"], "result": "33", "ind": 1, "tostr": "sum { filter_less_eq { all_rows ; year ; 2006 } ; player of the tournament }"}, "33"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_less_eq { all_rows ; year ; 2006 } ; player of the tournament } ; 33 } = true", "tointer": "select the rows whose year record is less than or equal to 2006 . the sum of the player of the tournament record of these rows is 33 ."}, "logic_str": "round_eq { sum { filter_less_eq { all_rows ; year ; 2006 } ; player of the tournament } ; 33 } = true", "interpret": "select the rows whose year record is less than or equal to 2006 . the sum of the player of the tournament record of these rows is 33 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_less_eq_0": 0, "all_rows_4": 4, "year_5": 5, "2006_6": 6, "player of the tournament_7": 7, "33_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_less_eq_0": "filter_less_eq", "all_rows_4": "all_rows", "year_5": "year", "2006_6": "2006", "player of the tournament_7": "player of the tournament", "33_8": "33"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_less_eq_0": [1], "all_rows_4": [0], "year_5": [0], "2006_6": [0], "player of the tournament_7": [1], "33_8": [2]}, "table_header": ["year", "location", "number of teams", "player of the tournament", "top goalscorer ( s )", "best goalkeeper"], "table_cont": [["2009 details", "jumeirah beach , dubai , united arab emirates", "dejan stankovic ( sui )", "16 goals dejan stankovic ( sui )", "m\u00e3o ( bra )", "269 ( 8.7 )"], ["2008 details", "plage du prado , marseille , france", "amarelle ( esp )", "13 goals madjer ( por )", "roberto valeiro ( esp )", "258 ( 8.3 )"], ["2007 details", "copacabana beach , rio de janeiro , brazil", "buru ( bra )", "10 goals buru ( bra )", "not awarded", "261 ( 8.2 )"], ["2006 details", "copacabana beach , rio de janeiro , brazil", "madjer ( por )", "21 goals madjer ( por )", "not awarded", "286 ( 8.9 )"], ["2005 details", "copacabana beach , rio de janeiro , brazil", "madjer ( por )", "12 goals madjer ( por )", "not awarded", "164 ( 8.2 )"]], "query": "round_eq { sum { filter_less_eq { all_rows ; year ; 2006 } ; player of the tournament } ; 33 } = true", "question": "between 2005 and 2006 , there were 33 goals scored against madjer in the fifa beach soccer world cup ."}, {"topic": "jean - philippe belloc", "wiki": "https://en.wikipedia.org/wiki/Jean-Philippe_Belloc", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16514890-1.html.csv", "action": "superlative", "sent": "in 2007 , team oreca completed the highest number of laps of any team .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "7", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "laps"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; laps }"}, "year"], "result": "2007", "ind": 1, "tostr": "hop { argmax { all_rows ; laps } ; year }"}, "2007"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; laps } ; year } ; 2007 } = true", "tointer": "select the row whose laps record of all rows is maximum . the year record of this row is 2007 ."}, "logic_str": "eq { hop { argmax { all_rows ; laps } ; year } ; 2007 } = true", "interpret": "select the row whose laps record of all rows is maximum . the year record of this row is 2007 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "laps_5": 5, "year_6": 6, "2007_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "laps_5": "laps", "year_6": "year", "2007_7": "2007"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "laps_5": [0], "year_6": [1], "2007_7": [2]}, "table_header": ["year", "team", "co - drivers", "class", "laps", "pos", "class pos"], "table_cont": [["1997", "la fili\u00e8re elf", "henri pescarolo emmanuel cl\u00e9rico", "lmp", "319", "7th", "4th"], ["1998", "courage comp\u00e9tition", "didier cottaz marc goossens", "lmp1", "232", "dnf", "dnf"], ["1999", "viper team oreca", "david donohue soheil ayari", "gts", "271", "dnf", "dnf"], ["2000", "mopar team oreca", "yannick dalmas nicolas minassian", "lmp900", "1", "dnf", "dnf"], ["2001", "larbre comp\u00e9tition", "christophe bouchut tiago monteiro", "gts", "234", "20th", "4th"], ["2002", "equipe de france ffsa oreca", "jonathan cochet beno\u00eet tr\u00e9luyer", "gts", "326", "14th", "3rd"], ["2007", "team oreca", "laurent groppi nicolas prost", "gt1", "337", "10th", "5th"], ["2011", "larbre comp\u00e9tition", "christophe bourret pascal gibon", "gte am", "301", "21st", "2nd"], ["2012", "larbre comp\u00e9tition", "christophe bourret pascal gibon", "gte am", "309", "28th", "5th"]], "query": "eq { hop { argmax { all_rows ; laps } ; year } ; 2007 } = true", "question": "in 2007 , team oreca completed the highest number of laps of any team ."}, {"topic": "2008 kentucky derby", "wiki": "https://en.wikipedia.org/wiki/2008_Kentucky_Derby", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17232312-2.html.csv", "action": "superlative", "sent": "big brown was the horse with the highest finish in the 2008 kentucky derby .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "20", "value_mentioned": "no", "max_or_min": "min", "other_col": "4", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "finished"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; finished }"}, "horse"], "result": "big brown", "ind": 1, "tostr": "hop { argmin { all_rows ; finished } ; horse }"}, "big brown"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; finished } ; horse } ; big brown } = true", "tointer": "select the row whose finished record of all rows is minimum . the horse record of this row is big brown ."}, "logic_str": "eq { hop { argmin { all_rows ; finished } ; horse } ; big brown } = true", "interpret": "select the row whose finished record of all rows is minimum . the horse record of this row is big brown .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "finished_5": 5, "horse_6": 6, "big brown_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "finished_5": "finished", "horse_6": "horse", "big brown_7": "big brown"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "finished_5": [0], "horse_6": [1], "big brown_7": [2]}, "table_header": ["finished", "time / behind", "post", "horse", "jockey", "trainer", "owner"], "table_cont": [["15", "31 \u00be", "1", "cool coal man", "julien leparoux", "nick zito", "robert v lapenta"], ["4", "11", "2", "tale of ekati", "eibar coa", "barclay tagg", "charles e fipke"], ["7", "15", "3", "anak nakal", "rafael bejarano", "nick zito", "four roses thoroughbreds llc"], ["13", "24 \u00bc", "4", "court vision", "garrett gomez", "william i mott", "ieah stables & winstar farm llc"], ["2", "04 \u00be", "5", "eight belles", "gabriel saez", "larry jones", "fox hill farms , inc"], ["10", "19 \u00bd", "6", "z fortune", "robby albarado", "steve asmussen", "zayat stables , llc"], ["18", "48 \u00be", "7", "big truck", "javier castellano", "barclay tagg", "eric fein"], ["12", "22 \u00be", "8", "visionaire", "jose lezcano", "michael matz", "team valor & vision racing llc"], ["8", "15", "9", "pyro", "shaun bridgmohan", "steve asmussen", "winchell thoroughbreds llc"], ["6", "14 \u00bc", "10", "colonel john", "corey nakatani", "eoin g harty", "winstar farm llc"], ["14", "24 \u00bd", "11", "z humor", "rene douglas", "william i mott", "zayat stables , llc"], ["11", "21", "12", "smooth air", "manoel cruz", "bennie stutts jr", "mount joy stables , inc"], ["16", "32", "13", "bob black jack", "richard migliore", "james kasparoff", "jeff harmon & tim kasparoff"], ["20", "59 \u00bc", "14", "monba", "ramon dominguez", "todd pletcher", "starlight , lucarelli & saylor"], ["19", "50 \u00be", "15", "adriano", "edgar prado", "graham motion", "courtlandt farms"], ["3", "08 \u00bc", "16", "denis of cork", "calvin borel", "david carroll", "mr & mrs william k warren jr"], ["9", "15 \u00be", "17", "cowboy cal", "john velazquez", "todd pletcher", "stonerside stable"], ["5", "11 \u00be", "18", "recapturetheglory", "e t baird", "louie j roussel iii", "louie j roussel iii & ronald lamarque"], ["17", "36 \u00be", "19", "gayego", "mike smith", "paulo lobo", "cubanacan stables"], ["1", "- 2:01.82", "20", "big brown", "kent desormeaux", "richard e dutrow , jr", "ieah stables & paul pompa jr"]], "query": "eq { hop { argmin { all_rows ; finished } ; horse } ; big brown } = true", "question": "big brown was the horse with the highest finish in the 2008 kentucky derby ."}, {"topic": "gary unmarried", "wiki": "https://en.wikipedia.org/wiki/Gary_Unmarried", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17443121-2.html.csv", "action": "majority", "sent": "all of the episodes are in the wednesday 8:30 time slot .", "annotation": {"scope": "all", "col": "3", "most_or_all": "all", "criterion": "equal", "value": "wednesday 8:30 pm", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "timeslot", "wednesday 8:30 pm"], "result": true, "ind": 0, "tointer": "for the timeslot records of all rows , all of them fuzzily match to wednesday 8:30 pm .", "tostr": "all_eq { all_rows ; timeslot ; wednesday 8:30 pm } = true"}, "logic_str": "all_eq { all_rows ; timeslot ; wednesday 8:30 pm } = true", "interpret": "for the timeslot records of all rows , all of them fuzzily match to wednesday 8:30 pm .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "timeslot_3": 3, "wednesday 8:30 pm_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "timeslot_3": "timeslot", "wednesday 8:30 pm_4": "wednesday 8:30 pm"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "timeslot_3": [0], "wednesday 8:30 pm_4": [0]}, "table_header": ["episode", "air date", "timeslot", "18 - 49", "viewers"], "table_cont": [["pilot", "september 24 , 2008", "wednesday 8:30 pm", "2.3 / 6", "6.84"], ["gary gets boundaries", "october 1 , 2008", "wednesday 8:30 pm", "2.2 / 6", "6.97"], ["gary marries off his ex", "october 8 , 2008", "wednesday 8:30 pm", "2.2 / 6", "7.43"], ["gary gets his stuff back", "october 15 , 2008", "wednesday 8:30 pm", "2.4 / 7", "7.71"], ["gary breaks up his ex - wife and girlfriend", "october 22 , 2008", "wednesday 8:30 pm", "2.5 / 7", "7.85"], ["gary meets the gang", "november 5 , 2008", "wednesday 8:30 pm", "2.1 / 6", "6.44"], ["gary and allison 's restaurant", "november 12 , 2008", "wednesday 8:30 pm", "2.1 / 5", "6.71"], ["gary and allison brooks", "november 19 , 2008", "wednesday 8:30 pm", "2.7 / 7", "8.14"], ["gary gives thanks", "november 26 , 2008", "wednesday 8:30 pm", "2.2 / 7", "7.72"], ["gary goes first", "december 10 , 2008", "wednesday 8:30 pm", "2.4 / 7", "8.03"], ["gary toughens up tom", "december 17 , 2008", "wednesday 8:30 pm", "2.3 / 7", "7.55"], ["gary dates louise 's teacher", "january 14 , 2009", "wednesday 8:30 pm", "2.1 / 5", "7.07"], ["gary moves back in", "january 21 , 2009", "wednesday 8:30 pm", "2.2 / 5", "7.07"], ["gary and dennis ' sister", "february 11 , 2009", "wednesday 8:30 pm", "2.1 / 5", "6.86"], ["gary 's ex - brother - in - law", "february 18 , 2009", "wednesday 8:30 pm", "2.1 / 5", "7.26"], ["gary uses his veto", "march 11 , 2009", "wednesday 8:30 pm", "2.3 / 7", "7.71"], ["gary hooks up allison", "march 18 , 2009", "wednesday 8:30 pm", "2.3 / 7", "7.57"], ["gary and the trophy", "april 8 , 2009", "wednesday 8:30 pm", "2.2 / 7", "7.30"], ["gary and his half brother", "may 6 , 2009", "wednesday 8:30 pm", "2.0 / 6", "6.66"], ["gary fixes allison 's garbage disposal", "may 20 , 2009", "wednesday 8:30 pm", "1.7 / 5", "5.55"]], "query": "all_eq { all_rows ; timeslot ; wednesday 8:30 pm } = true", "question": "all of the episodes are in the wednesday 8:30 time slot ."}, {"topic": "2008 - 09 detroit red wings season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Detroit_Red_Wings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17371135-13.html.csv", "action": "count", "sent": "in the 2008-09 detroit red wings season , there were three times when detroit was the home team .", "annotation": {"scope": "all", "criterion": "equal", "value": "detroit", "result": "3", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "home", "detroit"], "result": null, "ind": 0, "tointer": "select the rows whose home record fuzzily matches to detroit .", "tostr": "filter_eq { all_rows ; home ; detroit }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; home ; detroit } }", "tointer": "select the rows whose home record fuzzily matches to detroit . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; home ; detroit } } ; 3 } = true", "tointer": "select the rows whose home record fuzzily matches to detroit . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; home ; detroit } } ; 3 } = true", "interpret": "select the rows whose home record fuzzily matches to detroit . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "home_5": 5, "detroit_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "home_5": "home", "detroit_6": "detroit", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "home_5": [0], "detroit_6": [0], "3_7": [2]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "series"], "table_cont": [["may 17", "chicago", "2 - 5", "detroit", "osgood", "20066", "1 - 0"], ["may 19", "chicago", "2 - 3", "detroit", "osgood", "20066", "2 - 0"], ["may 22", "detroit", "3 - 4", "chicago", "osgood", "22678", "2 - 1"], ["may 24", "detroit", "6 - 1", "chicago", "conklin", "22663", "3 - 1"], ["may 27", "chicago", "1 - 2", "detroit", "osgood", "20066", "4 - 1"]], "query": "eq { count { filter_eq { all_rows ; home ; detroit } } ; 3 } = true", "question": "in the 2008-09 detroit red wings season , there were three times when detroit was the home team ."}, {"topic": "johnnie parsons", "wiki": "https://en.wikipedia.org/wiki/Johnnie_Parsons", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1252116-1.html.csv", "action": "aggregation", "sent": "the average rank for johnnie parsons was 12.7 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "12.7", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "rank"], "result": "12.7", "ind": 0, "tostr": "avg { all_rows ; rank }"}, "12.7"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; rank } ; 12.7 } = true", "tointer": "the average of the rank record of all rows is 12.7 ."}, "logic_str": "round_eq { avg { all_rows ; rank } ; 12.7 } = true", "interpret": "the average of the rank record of all rows is 12.7 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "rank_4": 4, "12.7_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "rank_4": "rank", "12.7_5": "12.7"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "rank_4": [0], "12.7_5": [1]}, "table_header": ["year", "start", "qual", "rank", "finish", "laps"], "table_cont": [["1949", "12", "132.900", "2", "2", "200"], ["1950", "5", "132.044", "8", "1", "138"], ["1951", "8", "132.154", "28", "21", "87"], ["1952", "31", "135.328", "19", "10", "200"], ["1953", "8", "137.667", "3", "26", "86"], ["1954", "15", "139.578", "6", "32", "79"], ["1955", "27", "136.809", "27", "21", "119"], ["1956", "6", "144.144", "7", "4", "200"], ["1957", "17", "140.784", "21", "16", "195"], ["1958", "6", "144.683", "6", "12", "200"]], "query": "round_eq { avg { all_rows ; rank } ; 12.7 } = true", "question": "the average rank for johnnie parsons was 12.7 ."}, {"topic": "1999 cincinnati bengals season", "wiki": "https://en.wikipedia.org/wiki/1999_Cincinnati_Bengals_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16778188-2.html.csv", "action": "count", "sent": "during the 1999 season of the cincinnati bengals , 1 of its 4 games in november had more than 60,000 in attendance .", "annotation": {"scope": "subset", "criterion": "greater_than", "value": "60,000", "result": "1", "col": "5", "subset": {"col": "2", "criterion": "fuzzily_match", "value": "november"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "november"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; november }", "tointer": "select the rows whose date record fuzzily matches to november ."}, "attendance", "60,000"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 60,000 .", "tostr": "filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 60,000 }"}], "result": "1", "ind": 2, "tostr": "count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 60,000 } }", "tointer": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 60,000 . the number of such rows is 1 ."}, "1"], "result": true, "ind": 3, "tostr": "eq { count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 60,000 } } ; 1 } = true", "tointer": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 60,000 . the number of such rows is 1 ."}, "logic_str": "eq { count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 60,000 } } ; 1 } = true", "interpret": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 60,000 . the number of such rows is 1 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_greater_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "date_6": 6, "november_7": 7, "attendance_8": 8, "60,000_9": 9, "1_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_greater_1": "filter_greater", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "date_6": "date", "november_7": "november", "attendance_8": "attendance", "60,000_9": "60,000", "1_10": "1"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_greater_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "date_6": [0], "november_7": [0], "attendance_8": [1], "60,000_9": [1], "1_10": [3]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 12 , 1999", "tennessee titans", "l 36 - 35", "65272"], ["2", "september 19 , 1999", "san diego chargers", "l 34 - 7", "47660"], ["3", "september 26 , 1999", "carolina panthers", "l 27 - 3", "61269"], ["4", "october 3 , 1999", "st louis rams", "l 38 - 10", "45481"], ["5", "october 10 , 1999", "cleveland browns", "w 18 - 17", "73048"], ["6", "october 17 , 1999", "pittsburgh steelers", "l 17 - 3", "59669"], ["7", "october 24 , 1999", "indianapolis colts", "l 31 - 10", "55996"], ["8", "october 31 , 1999", "jacksonville jaguars", "l 41 - 10", "49138"], ["9", "november 7 , 1999", "seattle seahawks", "l 37 - 20", "66303"], ["10", "november 14 , 1999", "tennessee titans", "l 24 - 14", "46017"], ["11", "november 21 , 1999", "baltimore ravens", "l 34 - 31", "43279"], ["12", "november 28 , 1999", "pittsburgh steelers", "w 27 - 20", "50907"], ["13", "december 5 , 1999", "san francisco 49ers", "w 44 - 30", "53463"], ["14", "december 12 , 1999", "cleveland browns", "w 44 - 28", "59972"], ["16", "december 26 , 1999", "baltimore ravens", "l 22 - 0", "68036"], ["17", "january 2 , 2000", "jacksonville jaguars", "l 24 - 7", "70532"]], "query": "eq { count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 60,000 } } ; 1 } = true", "question": "during the 1999 season of the cincinnati bengals , 1 of its 4 games in november had more than 60,000 in attendance ."}, {"topic": "roberto ribaud", "wiki": "https://en.wikipedia.org/wiki/Roberto_Ribaud", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18125937-1.html.csv", "action": "comparative", "sent": "of the competitions that roberto ribaud participated in , the one in greece was one year before the one in finland .", "annotation": {"row_1": "1", "row_2": "2", "col": "1", "col_other": "3", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "1", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "athens , greece"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to athens , greece .", "tostr": "filter_eq { all_rows ; venue ; athens , greece }"}, "year"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; athens , greece } ; year }", "tointer": "select the rows whose venue record fuzzily matches to athens , greece . take the year record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "helsinki , finland"], "result": null, "ind": 1, "tointer": "select the rows whose venue record fuzzily matches to helsinki , finland .", "tostr": "filter_eq { all_rows ; venue ; helsinki , finland }"}, "year"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; venue ; helsinki , finland } ; year }", "tointer": "select the rows whose venue record fuzzily matches to helsinki , finland . take the year record of this row ."}], "result": "-1", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; venue ; athens , greece } ; year } ; hop { filter_eq { all_rows ; venue ; helsinki , finland } ; year } }"}, "-1"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; venue ; athens , greece } ; year } ; hop { filter_eq { all_rows ; venue ; helsinki , finland } ; year } } ; -1 } = true", "tointer": "select the rows whose venue record fuzzily matches to athens , greece . take the year record of this row . select the rows whose venue record fuzzily matches to helsinki , finland . take the year record of this row . the second record is 1 larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; venue ; athens , greece } ; year } ; hop { filter_eq { all_rows ; venue ; helsinki , finland } ; year } } ; -1 } = true", "interpret": "select the rows whose venue record fuzzily matches to athens , greece . take the year record of this row . select the rows whose venue record fuzzily matches to helsinki , finland . take the year record of this row . the second record is 1 larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "venue_8": 8, "athens , greece_9": 9, "year_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "venue_12": 12, "helsinki , finland_13": 13, "year_14": 14, "-1_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "venue_8": "venue", "athens , greece_9": "athens , greece", "year_10": "year", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "venue_12": "venue", "helsinki , finland_13": "helsinki , finland", "year_14": "year", "-1_15": "-1"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "venue_8": [0], "athens , greece_9": [0], "year_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "venue_12": [1], "helsinki , finland_13": [1], "year_14": [3], "-1_15": [5]}, "table_header": ["year", "competition", "venue", "position", "event", "time"], "table_cont": [["1982", "european championships", "athens , greece", "6th", "4x400 m relay", "3:03.21"], ["1983", "world championships", "helsinki , finland", "5th", "4x400 m relay", "3:05.10"], ["1984", "olympic games", "los angeles , united states", "5th", "4x400 m relay", "3:01.44"], ["1986", "european championships", "stuttgart , west germany", "semi - finals", "400 m", "45.69"], ["1986", "european championships", "stuttgart , west germany", "4th", "4x400 m relay", "3:01.37"], ["1990", "european championships", "split , yugoslavia", "4th", "4x400 m relay", "3:01.78"]], "query": "eq { diff { hop { filter_eq { all_rows ; venue ; athens , greece } ; year } ; hop { filter_eq { all_rows ; venue ; helsinki , finland } ; year } } ; -1 } = true", "question": "of the competitions that roberto ribaud participated in , the one in greece was one year before the one in finland ."}, {"topic": "1990 detroit lions season", "wiki": "https://en.wikipedia.org/wiki/1990_Detroit_Lions_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18814667-2.html.csv", "action": "majority", "sent": "in the 1990 detroit lions season , when the date is december , all of the crowds were under 75000 .", "annotation": {"scope": "subset", "col": "5", "most_or_all": "all", "criterion": "less_than", "value": "75000", "subset": {"col": "2", "criterion": "fuzzily_match", "value": "december"}}, "logic": {"func": "all_less", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "december"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; december }", "tointer": "select the rows whose date record fuzzily matches to december ."}, "attendance", "75000"], "result": true, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to december . for the attendance records of these rows , all of them are less than 75000 .", "tostr": "all_less { filter_eq { all_rows ; date ; december } ; attendance ; 75000 } = true"}, "logic_str": "all_less { filter_eq { all_rows ; date ; december } ; attendance ; 75000 } = true", "interpret": "select the rows whose date record fuzzily matches to december . for the attendance records of these rows , all of them are less than 75000 .", "num_func": 2, "nid": 2, "g_ids": {"all_less_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "date_4": 4, "december_5": 5, "attendance_6": 6, "75000_7": 7}, "g_ids_features": {"all_less_1": "all_less", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "date_4": "date", "december_5": "december", "attendance_6": "attendance", "75000_7": "75000"}, "g_adj": {"all_less_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "date_4": [0], "december_5": [0], "attendance_6": [1], "75000_7": [1]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 9 , 1990", "tampa bay buccaneers", "l 38 - 21", "56692"], ["2", "september 16 , 1990", "atlanta falcons", "w 21 - 14", "48961"], ["3", "september 23 , 1990", "tampa bay buccaneers", "l 23 - 20", "55075"], ["4", "september 30 , 1990", "green bay packers", "l 24 - 21", "64509"], ["5", "october 7 , 1990", "minnesota vikings", "w 34 - 27", "57586"], ["6", "october 14 , 1990", "kansas city chiefs", "l 43 - 24", "74312"], ["8", "october 28 , 1990", "new orleans saints", "w 27 - 10", "64368"], ["9", "november 4 , 1990", "washington redskins", "l 41 - 38 ot", "69326"], ["10", "november 11 , 1990", "minnesota vikings", "l 17 - 7", "68264"], ["11", "november 18 , 1990", "new york giants", "l 20 - 0", "76109"], ["12", "november 22 , 1990", "denver broncos", "w 40 - 27", "73896"], ["13", "december 2 , 1990", "chicago bears", "l 23 - 17 ot", "62313"], ["14", "december 10 , 1990", "los angeles raiders", "l 38 - 31", "72190"], ["15", "december 16 , 1990", "chicago bears", "w 38 - 21", "67759"], ["16", "december 22 , 1990", "green bay packers", "w 24 - 17", "46700"], ["17", "december 30 , 1990", "seattle seahawks", "l 30 - 10", "50681"]], "query": "all_less { filter_eq { all_rows ; date ; december } ; attendance ; 75000 } = true", "question": "in the 1990 detroit lions season , when the date is december , all of the crowds were under 75000 ."}, {"topic": "thomas h\u00e4\u00dfler", "wiki": "https://en.wikipedia.org/wiki/Thomas_H%C3%A4%C3%9Fler", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1462547-3.html.csv", "action": "count", "sent": "thomas h\u00e4\u00dfler played in two games on october 9th , 1996 in yerevan , armenia .", "annotation": {"scope": "all", "criterion": "equal", "value": "yerevan , armenia", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "yerevan , armenia"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to yerevan , armenia .", "tostr": "filter_eq { all_rows ; venue ; yerevan , armenia }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; venue ; yerevan , armenia } }", "tointer": "select the rows whose venue record fuzzily matches to yerevan , armenia . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; venue ; yerevan , armenia } } ; 2 } = true", "tointer": "select the rows whose venue record fuzzily matches to yerevan , armenia . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; venue ; yerevan , armenia } } ; 2 } = true", "interpret": "select the rows whose venue record fuzzily matches to yerevan , armenia . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "venue_5": 5, "yerevan, armenia_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "venue_5": "venue", "yerevan, armenia_6": "yerevan , armenia", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "venue_5": [0], "yerevan, armenia_6": [0], "2_7": [2]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["15 november 1989", "m\u00fcngersdorfer stadion , cologne , germany", "2 - 1", "2 - 1", "fifa world cup 1990 qualifying"], ["18 december 1991", "ulrich - haberland - stadion , leverkusen , germany", "4 - 0", "4 - 0", "uefa euro 1992 qualifying"], ["22 april 1992", "stadion eden , prague , czechoslovakia", "1 - 0", "1 - 1", "friendly"], ["12 june 1992", "idrottsparken , norrk\u00f6ping , sweden", "1 - 1", "1 - 1", "uefa euro 1992"], ["21 june 1992", "r\u00e5sunda stadium , stockholm , sweden", "1 - 0", "3 - 2", "uefa euro 1992"], ["20 december 1992", "estadio centenario , montevideo , uruguay", "3 - 0", "4 - 1", "friendly"], ["23 june 1995", "wankdorf stadium , bern , switzerland", "1 - 0", "2 - 1", "friendly"], ["15 november 1995", "olympic stadium , berlin , germany", "2 - 1", "3 - 1", "uefa euro 1996 qualifying"], ["9 october 1996", "hrazdan stadium , yerevan , armenia", "1 - 0", "5 - 1", "fifa world cup 1998 qualifying"], ["9 october 1996", "hrazdan stadium , yerevan , armenia", "3 - 0", "5 - 1", "fifa world cup 1998 qualifying"], ["10 september 1997", "westfalenstadion , dortmund , germany", "3 - 0", "4 - 0", "fifa world cup 1998 qualifying"]], "query": "eq { count { filter_eq { all_rows ; venue ; yerevan , armenia } } ; 2 } = true", "question": "thomas h\u00e4\u00dfler played in two games on october 9th , 1996 in yerevan , armenia ."}, {"topic": "list of active finnish navy ships", "wiki": "https://en.wikipedia.org/wiki/List_of_active_Finnish_Navy_ships", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11627546-3.html.csv", "action": "count", "sent": "six finnish navy ships have pennant numbers that are higher than 500 .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "500", "result": "6", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "pennant number", "500"], "result": null, "ind": 0, "tointer": "select the rows whose pennant number record is greater than 500 .", "tostr": "filter_greater { all_rows ; pennant number ; 500 }"}], "result": "6", "ind": 1, "tostr": "count { filter_greater { all_rows ; pennant number ; 500 } }", "tointer": "select the rows whose pennant number record is greater than 500 . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; pennant number ; 500 } } ; 6 } = true", "tointer": "select the rows whose pennant number record is greater than 500 . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_greater { all_rows ; pennant number ; 500 } } ; 6 } = true", "interpret": "select the rows whose pennant number record is greater than 500 . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "pennant number_5": 5, "500_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "pennant number_5": "pennant number", "500_6": "500", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "pennant number_5": [0], "500_6": [0], "6_7": [2]}, "table_header": ["class", "ships in class", "pennant number", "builder", "commissioned"], "table_cont": [["katanp\u00e4\u00e4 class", "katanp\u00e4\u00e4", "40", "intermarine spa , sarzana , italy", "2012 -"], ["katanp\u00e4\u00e4 class", "purunp\u00e4\u00e4", "41", "intermarine spa , sarzana , italy", "2012 -"], ["katanp\u00e4\u00e4 class", "vahterp\u00e4\u00e4", "42", "intermarine spa , sarzana , italy", "2012 -"], ["kuha class", "kuha 21", "21", "laivateollisuus , turku , finland", "1974 - 1975"], ["kuha class", "kuha 23", "23", "laivateollisuus , turku , finland", "1974 - 1975"], ["kuha class", "kuha 24", "24", "laivateollisuus , turku , finland", "1974 - 1975"], ["kuha class", "kuha 26", "26", "laivateollisuus , turku , finland", "1974 - 1975"], ["kiiski class", "kiiski 1", "521", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 3", "523", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 4", "524", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 5", "525", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 6", "526", "fiskars oy , turku , finland", "1982 - 1984"], ["kiiski class", "kiiski 7", "527", "fiskars oy , turku , finland", "1982 - 1984"]], "query": "eq { count { filter_greater { all_rows ; pennant number ; 500 } } ; 6 } = true", "question": "six finnish navy ships have pennant numbers that are higher than 500 ."}, {"topic": "1976 buffalo bills season", "wiki": "https://en.wikipedia.org/wiki/1976_Buffalo_Bills_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18842944-2.html.csv", "action": "aggregation", "sent": "the average attendance for buffalo bills games was 54452 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "54452", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "attendance"], "result": "54452", "ind": 0, "tostr": "avg { all_rows ; attendance }"}, "54452"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; attendance } ; 54452 } = true", "tointer": "the average of the attendance record of all rows is 54452 ."}, "logic_str": "round_eq { avg { all_rows ; attendance } ; 54452 } = true", "interpret": "the average of the attendance record of all rows is 54452 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "attendance_4": 4, "54452_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "attendance_4": "attendance", "54452_5": "54452"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "attendance_4": [0], "54452_5": [1]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 13 , 1976", "miami dolphins", "l 30 - 21", "77683"], ["2", "september 19 , 1976", "houston oilers", "l 13 - 3", "61384"], ["3", "september 26 , 1976", "tampa bay buccaneers", "w 14 - 9", "44505"], ["4", "october 3 , 1976", "kansas city chiefs", "w 50 - 17", "51909"], ["5", "october 10 , 1976", "new york jets", "l 17 - 14", "59110"], ["6", "october 17 , 1976", "baltimore colts", "l 31 - 13", "71009"], ["7", "october 24 , 1976", "new england patriots", "l 26 - 22", "45144"], ["8", "october 31 , 1976", "new york jets", "l 19 - 14", "41285"], ["9", "november 7 , 1976", "new england patriots", "l 20 - 10", "61157"], ["10", "november 15 , 1976", "dallas cowboys", "l 17 - 10", "51799"], ["11", "november 21 , 1976", "san diego chargers", "l 34 - 13", "36539"], ["12", "november 25 , 1976", "detroit lions", "l 27 - 14", "66875"], ["13", "december 5 , 1976", "miami dolphins", "l 45 - 27", "43475"], ["14", "december 12 , 1976", "baltimore colts", "l 58 - 20", "50451"]], "query": "round_eq { avg { all_rows ; attendance } ; 54452 } = true", "question": "the average attendance for buffalo bills games was 54452 ."}, {"topic": "wru division two north", "wiki": "https://en.wikipedia.org/wiki/WRU_Division_Two_North", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17921347-4.html.csv", "action": "majority", "sent": "most of the rugby clubs in the wru division two north played a total of 14 matches .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "14", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "played", "14"], "result": true, "ind": 0, "tointer": "for the played records of all rows , most of them are equal to 14 .", "tostr": "most_eq { all_rows ; played ; 14 } = true"}, "logic_str": "most_eq { all_rows ; played ; 14 } = true", "interpret": "for the played records of all rows , most of them are equal to 14 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "played_3": 3, "14_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "played_3": "played", "14_4": "14"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "played_3": [0], "14_4": [0]}, "table_header": ["club", "played", "drawn", "lost", "points for", "points against", "tries for", "tries against", "try bonus"], "table_cont": [["club", "played", "drawn", "lost", "points for", "points against", "tries for", "tries against", "try bonus"], ["pwllheli rfc", "14", "0", "1", "623", "133", "101", "13", "14"], ["bro ffestiniog rfc", "14", "0", "3", "452", "155", "67", "25", "8"], ["bethesda rfc", "14", "0", "5", "373", "202", "56", "30", "8"], ["caereinion obra", "14", "0", "5", "254", "253", "36", "38", "4"], ["machynlleth rfc", "14", "0", "6", "283", "329", "39", "48", "4"], ["rhyl and district rfc", "14", "0", "11", "184", "484", "31", "77", "3"], ["welshpool rfc", "14", "0", "11", "205", "397", "25", "60", "2"], ["rhosllanerchrugog rfc", "14", "0", "14", "142", "563", "24", "88", "1"], ["bangor rfc ''", "0", "0", "0", "0", "0", "0", "0", "0"], ["rhayader rfc", "0", "0", "0", "0", "0", "0", "0", "0"], ["wrexham rfc", "0", "0", "0", "0", "0", "0", "0", "0"]], "query": "most_eq { all_rows ; played ; 14 } = true", "question": "most of the rugby clubs in the wru division two north played a total of 14 matches ."}, {"topic": "list of south american countries by gdp ( ppp ) per capita", "wiki": "https://en.wikipedia.org/wiki/List_of_South_American_countries_by_GDP_%28PPP%29_per_capita", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2249087-1.html.csv", "action": "comparative", "sent": "ecuador had a higher 2011 gdp per capita than paraguay according to the imf .", "annotation": {"row_1": "9", "row_2": "11", "col": "4", "col_other": "3", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nation", "ecuador"], "result": null, "ind": 0, "tointer": "select the rows whose nation record fuzzily matches to ecuador .", "tostr": "filter_eq { all_rows ; nation ; ecuador }"}, "2011 ( imf )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; nation ; ecuador } ; 2011 ( imf ) }", "tointer": "select the rows whose nation record fuzzily matches to ecuador . take the 2011 ( imf ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nation", "paraguay"], "result": null, "ind": 1, "tointer": "select the rows whose nation record fuzzily matches to paraguay .", "tostr": "filter_eq { all_rows ; nation ; paraguay }"}, "2011 ( imf )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; nation ; paraguay } ; 2011 ( imf ) }", "tointer": "select the rows whose nation record fuzzily matches to paraguay . take the 2011 ( imf ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; nation ; ecuador } ; 2011 ( imf ) } ; hop { filter_eq { all_rows ; nation ; paraguay } ; 2011 ( imf ) } } = true", "tointer": "select the rows whose nation record fuzzily matches to ecuador . take the 2011 ( imf ) record of this row . select the rows whose nation record fuzzily matches to paraguay . take the 2011 ( imf ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; nation ; ecuador } ; 2011 ( imf ) } ; hop { filter_eq { all_rows ; nation ; paraguay } ; 2011 ( imf ) } } = true", "interpret": "select the rows whose nation record fuzzily matches to ecuador . take the 2011 ( imf ) record of this row . select the rows whose nation record fuzzily matches to paraguay . take the 2011 ( imf ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "nation_7": 7, "ecuador_8": 8, "2011 (imf)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "nation_11": 11, "paraguay_12": 12, "2011 (imf)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "nation_7": "nation", "ecuador_8": "ecuador", "2011 (imf)_9": "2011 ( imf )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "nation_11": "nation", "paraguay_12": "paraguay", "2011 (imf)_13": "2011 ( imf )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "nation_7": [0], "ecuador_8": [0], "2011 (imf)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "nation_11": [1], "paraguay_12": [1], "2011 (imf)_13": [3]}, "table_header": ["south american rank", "world rank", "nation", "2011 ( imf )", "2008 ( cia factbook )"], "table_cont": [["1", "51", "argentina", "17376", "14500"], ["2", "55", "chile", "16171", "15400"], ["3", "59", "uruguay", "15469", "12300"], ["4", "71", "venezuela", "12407", "13500"], ["5", "74", "brazil", "11845", "10513"], ["6", "82", "colombia", "10155", "9000"], ["7", "83", "peru", "10000", "8500"], ["8", "86", "suriname", "9492", "8900"], ["9", "91", "ecuador", "8335", "7700"], ["10", "96", "guyana", "7541", "4000"], ["11", "110", "paraguay", "5548", "4400"]], "query": "greater { hop { filter_eq { all_rows ; nation ; ecuador } ; 2011 ( imf ) } ; hop { filter_eq { all_rows ; nation ; paraguay } ; 2011 ( imf ) } } = true", "question": "ecuador had a higher 2011 gdp per capita than paraguay according to the imf ."}, {"topic": "raphael butler", "wiki": "https://en.wikipedia.org/wiki/Raphael_Butler", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10516844-3.html.csv", "action": "majority", "sent": "the majority of raphael butler 's fights ended in the first round .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "1", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "round", "1"], "result": true, "ind": 0, "tointer": "for the round records of all rows , most of them are equal to 1 .", "tostr": "most_eq { all_rows ; round ; 1 } = true"}, "logic_str": "most_eq { all_rows ; round ; 1 } = true", "interpret": "for the round records of all rows , most of them are equal to 1 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "round_3": 3, "1_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "round_3": "round", "1_4": "1"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "round_3": [0], "1_4": [0]}, "table_header": ["res", "record", "opponent", "method", "round", "time", "location"], "table_cont": [["win", "7 - 0", "joseph bryant", "tko ( strikes )", "1", "1:04", "rio rancho , new mexico , united states"], ["win", "6 - 0", "jeremiah o'neal", "ko ( punches )", "1", "2:19", "thackerville , oklahoma , united states"], ["win", "5 - 0", "brett murphy", "ko ( punch )", "1", "0:13", "st paul , minnesota , united states"], ["win", "4 - 0", "steven shaw", "submission ( armbar )", "1", "4:35", "maplewood , minnesota , united states"], ["win", "3 - 0", "richard white", "submission ( punches )", "2", "3:18", "rochester , minnesota , united states"], ["win", "2 - 0", "jeremy beck", "ko ( punches )", "1", "3:36", "red wing , minnesota , united states"], ["win", "1 - 0", "gabe hobbs", "ko ( punch )", "1", "0:36", "welch , minnesota , united states"]], "query": "most_eq { all_rows ; round ; 1 } = true", "question": "the majority of raphael butler 's fights ended in the first round ."}, {"topic": "2008 - 09 san antonio spurs season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_San_Antonio_Spurs_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17288845-7.html.csv", "action": "majority", "sent": "in the january games in which the spur won in 2008-09 season , tim duncan was the highest in points in most of the games .", "annotation": {"scope": "subset", "col": "5", "most_or_all": "most", "criterion": "fuzzily_match", "value": "tim duncan", "subset": {"col": "4", "criterion": "fuzzily_match", "value": "w"}}, "logic": {"func": "most_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "w"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; score ; w }", "tointer": "select the rows whose score record fuzzily matches to w ."}, "high points", "tim duncan"], "result": true, "ind": 1, "tointer": "select the rows whose score record fuzzily matches to w . for the high points records of these rows , most of them fuzzily match to tim duncan .", "tostr": "most_eq { filter_eq { all_rows ; score ; w } ; high points ; tim duncan } = true"}, "logic_str": "most_eq { filter_eq { all_rows ; score ; w } ; high points ; tim duncan } = true", "interpret": "select the rows whose score record fuzzily matches to w . for the high points records of these rows , most of them fuzzily match to tim duncan .", "num_func": 2, "nid": 2, "g_ids": {"most_str_eq_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "score_4": 4, "w_5": 5, "high points_6": 6, "tim duncan_7": 7}, "g_ids_features": {"most_str_eq_1": "most_str_eq", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "score_4": "score", "w_5": "w", "high points_6": "high points", "tim duncan_7": "tim duncan"}, "g_adj": {"most_str_eq_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "score_4": [0], "w_5": [0], "high points_6": [1], "tim duncan_7": [1]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["32", "january 2", "memphis", "w 91 - 80 ( ot )", "tim duncan ( 20 )", "tim duncan ( 10 )", "manu gin\u00f3bili ( 6 )", "fedexforum 12597", "21 - 11"], ["33", "january 3", "philadelphia", "w 108 - 106 ( ot )", "tim duncan ( 26 )", "tim duncan ( 12 )", "tony parker ( 10 )", "at & t center 18797", "22 - 11"], ["34", "january 5", "miami", "w 91 - 84 ( ot )", "tim duncan ( 19 )", "tim duncan ( 9 )", "tony parker ( 7 )", "american airlines arena 19600", "23 - 11"], ["35", "january 8", "la clippers", "w 106 - 84 ( ot )", "tony parker ( 19 )", "kurt thomas ( 9 )", "tim duncan ( 9 )", "at & t center 17873", "24 - 11"], ["36", "january 11", "orlando", "l 98 - 105 ( ot )", "tony parker ( 31 )", "tim duncan ( 10 )", "tony parker ( 6 )", "at & t center 18216", "24 - 12"], ["37", "january 14", "la lakers", "w 112 - 111 ( ot )", "manu gin\u00f3bili ( 27 )", "tim duncan ( 10 )", "tim duncan ( 8 )", "at & t center 18797", "25 - 12"], ["38", "january 16", "philadelphia", "l 87 - 109 ( ot )", "tim duncan ( 20 )", "tim duncan ( 12 )", "tony parker ( 6 )", "wachovia center 18739", "25 - 13"], ["39", "january 17", "chicago", "w 92 - 87 ( ot )", "manu gin\u00f3bili ( 21 )", "tim duncan ( 14 )", "tony parker ( 8 )", "united center 22100", "26 - 13"], ["40", "january 19", "charlotte", "w 86 - 84 ( ot )", "tim duncan ( 17 )", "tim duncan ( 11 )", "tony parker ( 10 )", "time warner cable arena 16160", "27 - 13"], ["41", "january 20", "indiana", "w 99 - 81 ( ot )", "tim duncan ( 27 )", "tim duncan ( 10 )", "tony parker ( 7 )", "at & t center 18181", "28 - 13"], ["42", "january 23", "new jersey", "w 94 - 91 ( ot )", "tim duncan ( 30 )", "tim duncan ( 15 )", "tim duncan ( 5 )", "at & t center 18797", "29 - 13"], ["43", "january 25", "la lakers", "l 85 - 99 ( ot )", "tony parker ( 19 )", "tim duncan , manu gin\u00f3bili ( 8 )", "tony parker ( 6 )", "staples center 18997", "29 - 14"], ["44", "january 27", "utah", "w 106 - 100 ( ot )", "tony parker , tim duncan ( 24 )", "manu gin\u00f3bili , tim duncan ( 9 )", "tim duncan ( 8 )", "energysolutions arena 19911", "30 - 14"], ["45", "january 29", "phoenix", "w 114 - 104 ( ot )", "manu gin\u00f3bili ( 30 )", "tim duncan ( 15 )", "tony parker ( 5 )", "us airways center 18422", "31 - 14"], ["46", "january 31", "new orleans", "w 106 - 93 ( ot )", "tony parker ( 25 )", "tim duncan ( 8 )", "tony parker , tim duncan ( 7 )", "at & t center 18797", "32 - 14"]], "query": "most_eq { filter_eq { all_rows ; score ; w } ; high points ; tim duncan } = true", "question": "in the january games in which the spur won in 2008-09 season , tim duncan was the highest in points in most of the games ."}, {"topic": "united states house of representatives elections , 1994", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1994", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341522-13.html.csv", "action": "majority", "sent": "of the u.s. house of representatives listed , the political party with majority representation is democrats .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "fuzzily_match", "value": "democratic", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "party", "democratic"], "result": true, "ind": 0, "tointer": "for the party records of all rows , most of them fuzzily match to democratic .", "tostr": "most_eq { all_rows ; party ; democratic } = true"}, "logic_str": "most_eq { all_rows ; party ; democratic } = true", "interpret": "for the party records of all rows , most of them fuzzily match to democratic .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "party_3": 3, "democratic_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "party_3": "party", "democratic_4": "democratic"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "party_3": [0], "democratic_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "status", "opponent"], "table_cont": [["georgia2", "sanford bishop", "democratic", "1992", "re - elected", "sanford bishop ( d ) 66.2 % john clayton ( r ) 33.8 %"], ["georgia3", "mac collins", "republican", "1992", "re - elected", "mac collins ( r ) 65.5 % fred overby ( d ) 34.5 %"], ["georgia4", "john linder", "republican", "1992", "re - elected", "john linder ( r ) 57.9 % comer yates ( d ) 42.1 %"], ["georgia5", "john lewis", "democratic", "1986", "re - elected", "john lewis ( d ) 69.1 % dale dixon ( r ) 30.9 %"], ["georgia6", "newt gingrich", "republican", "1978", "re - elected", "newt gingrich ( r ) 64.2 % ben l jones ( d ) 35.8 %"], ["georgia7", "george darden", "democratic", "1983", "defeated republican gain", "bob barr ( r ) 51.9 % george darden ( d ) 48.1 %"], ["georgia8", "j roy rowland", "democratic", "1982", "retired republican gain", "saxby chambliss ( r ) 62.7 % craig mathis ( d ) 37.3 %"], ["georgia9", "nathan deal", "democratic", "1992", "re - elected", "nathan deal ( d ) 57.9 % robert l castello ( r ) 42.1 %"]], "query": "most_eq { all_rows ; party ; democratic } = true", "question": "of the u.s. house of representatives listed , the political party with majority representation is democrats ."}, {"topic": "2011 world rally championship season", "wiki": "https://en.wikipedia.org/wiki/2011_World_Rally_Championship_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-23385853-20.html.csv", "action": "aggregation", "sent": "teams using the ford fiesta chassis scored a combined total of 727 points in the 2011 world rally championship season .", "annotation": {"scope": "subset", "col": "10", "type": "sum", "result": "727", "subset": {"col": "3", "criterion": "equal", "value": "ford fiesta"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_str_eq", "args": ["all_rows", "chassis", "ford fiesta"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; chassis ; ford fiesta }", "tointer": "select the rows whose chassis record fuzzily matches to ford fiesta ."}, "points"], "result": "727", "ind": 1, "tostr": "sum { filter_eq { all_rows ; chassis ; ford fiesta } ; points }"}, "727"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_eq { all_rows ; chassis ; ford fiesta } ; points } ; 727 } = true", "tointer": "select the rows whose chassis record fuzzily matches to ford fiesta . the sum of the points record of these rows is 727 ."}, "logic_str": "round_eq { sum { filter_eq { all_rows ; chassis ; ford fiesta } ; points } ; 727 } = true", "interpret": "select the rows whose chassis record fuzzily matches to ford fiesta . the sum of the points record of these rows is 727 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "chassis_5": 5, "ford fiesta_6": 6, "points_7": 7, "727_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "chassis_5": "chassis", "ford fiesta_6": "ford fiesta", "points_7": "points", "727_8": "727"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "chassis_5": [0], "ford fiesta_6": [0], "points_7": [1], "727_8": [2]}, "table_header": ["pos", "constructor", "chassis", "starts", "finishes", "wins", "podiums", "stage wins", "power stage wins", "points"], "table_cont": [["1", "citro\u00ebn total world rally team", "citro\u00ebn ds3 wrc", "26", "22", "10", "16", "121", "7", "403"], ["2", "ford abu dhabi world rally team", "ford fiesta rs wrc", "26", "25", "3", "16", "103", "4", "376"], ["3", "m - sport stobart ford world rally team", "ford fiesta rs wrc", "47", "34", "0", "3", "4", "0", "178"], ["4", "petter solberg world rally team", "citro\u00ebn ds3 wrc", "13", "10", "0", "2", "30", "1", "98"], ["5", "ferm power tools world rally team", "ford fiesta rs wrc", "17", "12", "0", "0", "0", "0", "54"], ["6", "team abu dhabi", "ford fiesta rs wrc", "9", "9", "0", "0", "0", "0", "54"], ["7", "munchi 's ford world rally team", "ford fiesta rs wrc", "7", "6", "0", "0", "0", "0", "38"], ["8", "monster world rally team", "ford fiesta rs wrc", "7", "6", "0", "0", "0", "0", "27"], ["9", "van merksteijn motorsport", "citro\u00ebn ds3 wrc", "12", "4", "0", "0", "0", "0", "16"], ["10", "brazil world rally team", "mini john cooper works wrc", "11", "5", "0", "0", "0", "0", "7"], ["11", "ice 1 racing", "citro\u00ebn ds3 wrc", "9", "6", "0", "0", "0", "0", "48"]], "query": "round_eq { sum { filter_eq { all_rows ; chassis ; ford fiesta } ; points } ; 727 } = true", "question": "teams using the ford fiesta chassis scored a combined total of 727 points in the 2011 world rally championship season ."}, {"topic": "greg norman", "wiki": "https://en.wikipedia.org/wiki/Greg_Norman", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-157447-2.html.csv", "action": "unique", "sent": "the competition on 17 april 1988 was the only event that was part of the mci heritage golf classic tournament .", "annotation": {"scope": "all", "row": "6", "col": "2", "col_other": "1", "criterion": "equal", "value": "mci heritage golf classic", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "mci heritage golf classic"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to mci heritage golf classic .", "tostr": "filter_eq { all_rows ; tournament ; mci heritage golf classic }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; tournament ; mci heritage golf classic } }", "tointer": "select the rows whose tournament record fuzzily matches to mci heritage golf classic . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "mci heritage golf classic"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to mci heritage golf classic .", "tostr": "filter_eq { all_rows ; tournament ; mci heritage golf classic }"}, "date"], "result": "17 apr 1988", "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; mci heritage golf classic } ; date }"}, "17 apr 1988"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; tournament ; mci heritage golf classic } ; date } ; 17 apr 1988 }", "tointer": "the date record of this unqiue row is 17 apr 1988 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; tournament ; mci heritage golf classic } } ; eq { hop { filter_eq { all_rows ; tournament ; mci heritage golf classic } ; date } ; 17 apr 1988 } } = true", "tointer": "select the rows whose tournament record fuzzily matches to mci heritage golf classic . there is only one such row in the table . the date record of this unqiue row is 17 apr 1988 ."}, "logic_str": "and { only { filter_eq { all_rows ; tournament ; mci heritage golf classic } } ; eq { hop { filter_eq { all_rows ; tournament ; mci heritage golf classic } ; date } ; 17 apr 1988 } } = true", "interpret": "select the rows whose tournament record fuzzily matches to mci heritage golf classic . there is only one such row in the table . the date record of this unqiue row is 17 apr 1988 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "tournament_7": 7, "mci heritage golf classic_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "17 apr 1988_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "tournament_7": "tournament", "mci heritage golf classic_8": "mci heritage golf classic", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "17 apr 1988_10": "17 apr 1988"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "tournament_7": [0], "mci heritage golf classic_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "17 apr 1988_10": [3]}, "table_header": ["date", "tournament", "winning score", "margin of victory", "runner ( s ) - up"], "table_cont": [["3 jun 1984", "kemper open", "- 8 ( 68 + 68 + 71 + 73 = 280 )", "5 strokes", "mark o'meara"], ["1 jul 1984", "canadian open", "- 10 ( 73 + 68 + 70 + 67 = 278 )", "2 strokes", "jack nicklaus"], ["4 may 1986", "panasonic las vegas invitational", "- 27 ( 73 - 63 + 68 + 64 + 65 = 333 )", "7 strokes", "dan pohl"], ["1 jun 1986", "kemper open", "- 11 ( 72 + 69 + 70 + 66 = 277 )", "playoff", "larry mize"], ["20 jul 1986", "the open championship", "even ( 74 + 63 + 74 + 69 = 280 )", "5 strokes", "gordon j brand"], ["17 apr 1988", "mci heritage golf classic", "- 13 ( 65 + 69 + 71 + 66 = 271 )", "1 stroke", "david frost , gil morgan"], ["20 aug 1989", "the international", "13 points ( 5 - 4 - 11 - 13 )", "2 points", "clarence rose"], ["3 sep 1989", "greater milwaukee open", "- 19 ( 64 + 69 + 66 + 70 = 269 )", "3 strokes", "andy bean"], ["4 mar 1990", "doral - ryder open", "- 15 ( 68 + 73 + 70 + 62 = 273 )", "playoff", "tim simpson , mark calcavecchia , paul azinger"], ["13 may 1990", "memorial tournament", "even ( 73 + 74 + 69 = 216 )", "1 stroke", "payne stewart"], ["13 sep 1992", "canadian open", "- 8 ( 73 + 66 + 71 + 70 = 280 )", "playoff", "bruce lietzke"], ["7 mar 1993", "doral - ryder open", "- 23 ( 65 + 68 + 62 + 70 = 265 )", "4 strokes", "paul azinger , mark mccumber"], ["18 jul 1993", "the open championship", "- 13 ( 66 + 68 + 69 + 64 = 267 )", "2 strokes", "nick faldo"], ["27 mar 1994", "the players championship", "- 24 ( 63 + 67 + 67 + 67 = 264 )", "4 strokes", "fuzzy zoeller"], ["4 jun 1995", "memorial tournament", "- 19 ( 66 + 70 + 67 + 66 = 269 )", "4 strokes", "mark calcavecchia , david duval , steve elkington"], ["25 jun 1995", "canon greater hartford open", "- 13 ( 67 + 64 + 65 + 71 = 267 )", "2 strokes", "dave stockton , kirk triplett , grant waite"], ["27 aug 1995", "nec world series of golf", "- 2 ( 73 + 68 + 70 + 67 = 278 )", "playoff", "billy mayfair , nick price"], ["3 mar 1996", "doral - ryder open", "- 19 ( 67 + 69 + 67 + 66 = 269 )", "2 strokes", "michael bradley , vijay singh"], ["29 jun 1997", "fedex st jude classic", "- 16 ( 68 + 65 + 69 + 66 = 268 )", "1 stroke", "dudley hart"], ["24 aug 1997", "nec world series of golf", "- 7 ( 68 + 68 + 70 + 67 = 273 )", "4 strokes", "phil mickelson"]], "query": "and { only { filter_eq { all_rows ; tournament ; mci heritage golf classic } } ; eq { hop { filter_eq { all_rows ; tournament ; mci heritage golf classic } ; date } ; 17 apr 1988 } } = true", "question": "the competition on 17 april 1988 was the only event that was part of the mci heritage golf classic tournament ."}, {"topic": "list of hewitts and nuttalls in england", "wiki": "https://en.wikipedia.org/wiki/List_of_Hewitts_and_Nuttalls_in_England", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10814429-12.html.csv", "action": "aggregation", "sent": "the average height of hewitts and nuttalls in england is roughly about 670m .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "670", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "height ( m )"], "result": "670", "ind": 0, "tostr": "avg { all_rows ; height ( m ) }"}, "670"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; height ( m ) } ; 670 } = true", "tointer": "the average of the height ( m ) record of all rows is 670 ."}, "logic_str": "round_eq { avg { all_rows ; height ( m ) } ; 670 } = true", "interpret": "the average of the height ( m ) record of all rows is 670 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "height (m)_4": 4, "670_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "height (m)_4": "height ( m )", "670_5": "670"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "height (m)_4": [0], "670_5": [1]}, "table_header": ["peak", "height ( m )", "prom ( m )", "class", "parent"], "table_cont": [["whernside", "736", "408", "marilyn", "cross fell"], ["ingleborough", "724", "428", "marilyn", "cross fell"], ["great whernside", "704", "288", "marilyn", "whernside"], ["buckden pike", "702", "207", "marilyn", "great whernside"], ["pen - y - ghent", "694", "306", "marilyn", "whernside"], ["great coum", "687", "221", "marilyn", "whernside"], ["plover hill", "680", "59", "hewitt", "pen - y - ghent"], ["great knoutberry hill", "672", "254", "marilyn", "great whernside"], ["dodd fell hill", "668", "230", "marilyn", "great knoutberry hill"], ["fountains fell", "668", "243", "marilyn", "pen - y - ghent"], ["fountains fell south top", "662", "15", "nuttall", "fountains fell"], ["simon fell", "650", "35", "hewitt", "ingleborough"], ["yockenthwaite moor", "643", "86", "hewitt", "dodd fell hill"], ["green hill", "628", "24", "nuttall", "great coum"], ["gragareth", "627", "30", "hewitt", "great coum"], ["darnbrook fell", "624", "40", "hewitt", "fountains fell"], ["drumaldrace", "614", "66", "hewitt", "dodd fell hill"], ["birks fell", "610", "158", "marilyn", "pen - y - ghent"]], "query": "round_eq { avg { all_rows ; height ( m ) } ; 670 } = true", "question": "the average height of hewitts and nuttalls in england is roughly about 670m ."}, {"topic": "2008 formula 3 euro series season", "wiki": "https://en.wikipedia.org/wiki/2008_Formula_3_Euro_Series_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15660445-7.html.csv", "action": "comparative", "sent": "richard philippe had a higher nor1 score than stefano coletti .", "annotation": {"row_1": "5", "row_2": "7", "col": "2", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "driver", "richard philippe"], "result": null, "ind": 0, "tointer": "select the rows whose driver record fuzzily matches to richard philippe .", "tostr": "filter_eq { all_rows ; driver ; richard philippe }"}, "nor 1"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; driver ; richard philippe } ; nor 1 }", "tointer": "select the rows whose driver record fuzzily matches to richard philippe . take the nor 1 record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "driver", "stefano coletti"], "result": null, "ind": 1, "tointer": "select the rows whose driver record fuzzily matches to stefano coletti .", "tostr": "filter_eq { all_rows ; driver ; stefano coletti }"}, "nor 1"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; driver ; stefano coletti } ; nor 1 }", "tointer": "select the rows whose driver record fuzzily matches to stefano coletti . take the nor 1 record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; driver ; richard philippe } ; nor 1 } ; hop { filter_eq { all_rows ; driver ; stefano coletti } ; nor 1 } } = true", "tointer": "select the rows whose driver record fuzzily matches to richard philippe . take the nor 1 record of this row . select the rows whose driver record fuzzily matches to stefano coletti . take the nor 1 record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; driver ; richard philippe } ; nor 1 } ; hop { filter_eq { all_rows ; driver ; stefano coletti } ; nor 1 } } = true", "interpret": "select the rows whose driver record fuzzily matches to richard philippe . take the nor 1 record of this row . select the rows whose driver record fuzzily matches to stefano coletti . take the nor 1 record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "driver_7": 7, "richard philippe_8": 8, "nor 1_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "driver_11": 11, "stefano coletti_12": 12, "nor 1_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "driver_7": "driver", "richard philippe_8": "richard philippe", "nor 1_9": "nor 1", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "driver_11": "driver", "stefano coletti_12": "stefano coletti", "nor 1_13": "nor 1"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "driver_7": [0], "richard philippe_8": [0], "nor 1_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "driver_11": [1], "stefano coletti_12": [1], "nor 1_13": [3]}, "table_header": ["driver", "nor 1", "nor 2", "zan 1", "zan 2", "n\u00fcr 1", "n\u00fcr 2"], "table_cont": [["erik jani\u0161", "8", "22", "12", "10", "ret", "12"], ["mika m\u00e4ki", "ret", "18", "2", "5", "4", "ret"], ["jules bianchi", "ret", "9", "3", "9", "2", "3"], ["jon lancaster", "5", "ret", "ret", "ret", "7", "1"], ["richard philippe", "22", "16", "16", "12", "10", "18"], ["robert wickens", "7", "2", "8", "ret", "12", "16"], ["stefano coletti", "11", "6", "19", "ret", "9", "ret"], ["daniel campos - hull", "17", "11", "23", "14", "20", "8"], ["henkie waldschmidt", "9", "ret", "17", "ret", "15", "17"], ["jens klingmann", "15", "10", "21", "18", "16", "10"], ["martin plowman", "ret", "ret", "20", "17", "17", "21"], ["driver", "nor 1", "nor 2", "zan 1", "zan 2", "n\u00fcr 1", "n\u00fcr 2"]], "query": "greater { hop { filter_eq { all_rows ; driver ; richard philippe } ; nor 1 } ; hop { filter_eq { all_rows ; driver ; stefano coletti } ; nor 1 } } = true", "question": "richard philippe had a higher nor1 score than stefano coletti ."}, {"topic": "lost ( season 6 )", "wiki": "https://en.wikipedia.org/wiki/Lost_%28season_6%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11562149-1.html.csv", "action": "ordinal", "sent": "the second episode of the sixth season of lost had the second most viewers of the season .", "annotation": {"row": "2", "col": "8", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "us viewers ( million )", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; us viewers ( million ) ; 2 }"}, "no in season"], "result": "3", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; us viewers ( million ) ; 2 } ; no in season }"}, "3"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; us viewers ( million ) ; 2 } ; no in season } ; 3 } = true", "tointer": "select the row whose us viewers ( million ) record of all rows is 2nd maximum . the no in season record of this row is 3 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; us viewers ( million ) ; 2 } ; no in season } ; 3 } = true", "interpret": "select the row whose us viewers ( million ) record of all rows is 2nd maximum . the no in season record of this row is 3 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "us viewers (million)_5": 5, "2_6": 6, "no in season_7": 7, "3_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "us viewers (million)_5": "us viewers ( million )", "2_6": "2", "no in season_7": "no in season", "3_8": "3"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "us viewers (million)_5": [0], "2_6": [0], "no in season_7": [1], "3_8": [2]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "featured character ( s )", "original air date", "us viewers ( million )"], "table_cont": [["104 / 105", "1 / 2", "la x", "jack bender", "damon lindelof & carlton cuse", "various", "february 2 , 2010", "12.09"], ["106", "3", "what kate does", "paul edwards", "edward kitsis & adam horowitz", "kate", "february 9 , 2010", "11.05"], ["107", "4", "the substitute", "tucker gates", "elizabeth sarnoff & melinda hsu taylor", "locke", "february 16 , 2010", "9.82"], ["108", "5", "lighthouse", "jack bender", "carlton cuse & damon lindelof", "jack", "february 23 , 2010", "9.95"], ["109", "6", "sundown", "bobby roth", "paul zbyszewski & graham roland", "sayid", "march 2 , 2010", "9.29"], ["110", "7", "dr linus", "mario van peebles", "edward kitsis & adam horowitz", "ben", "march 9 , 2010", "9.49"], ["111", "8", "recon", "jack bender", "elizabeth sarnoff & jim galasso", "sawyer", "march 16 , 2010", "8.87"], ["112", "9", "ab aeterno", "tucker gates", "melinda hsu taylor & greggory nations", "richard", "march 23 , 2010", "9.31"], ["113", "10", "the package", "paul edwards", "paul zbyszewski & graham roland", "sun & jin", "march 30 , 2010", "10.13"], ["114", "11", "happily ever after", "jack bender", "carlton cuse & damon lindelof", "desmond", "april 6 , 2010", "9.55"], ["115", "12", "everybody loves hugo", "daniel attias", "edward kitsis & adam horowitz", "hurley", "april 13 , 2010", "9.48"], ["116", "13", "the last recruit", "stephen semel", "paul zbyszewski & graham roland", "various", "april 20 , 2010", "9.53"], ["117", "14", "the candidate", "jack bender", "elizabeth sarnoff & jim galasso", "jack & locke", "may 4 , 2010", "9.59"], ["118", "15", "across the sea", "tucker gates", "carlton cuse & damon lindelof", "jacob & man in black", "may 11 , 2010", "10.32"], ["119", "16", "what they died for", "paul edwards", "edward kitsis , adam horowitz & elizabeth sarnoff", "various", "may 18 , 2010", "10.47"]], "query": "eq { hop { nth_argmax { all_rows ; us viewers ( million ) ; 2 } ; no in season } ; 3 } = true", "question": "the second episode of the sixth season of lost had the second most viewers of the season ."}, {"topic": "list of game of the year awards", "wiki": "https://en.wikipedia.org/wiki/List_of_Game_of_the_Year_awards", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1851722-32.html.csv", "action": "majority", "sent": "most of the games on the list of game of the year awards work on the windows platform .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "windows", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "platform ( s )", "windows"], "result": true, "ind": 0, "tointer": "for the platform ( s ) records of all rows , most of them fuzzily match to windows .", "tostr": "most_eq { all_rows ; platform ( s ) ; windows } = true"}, "logic_str": "most_eq { all_rows ; platform ( s ) ; windows } = true", "interpret": "for the platform ( s ) records of all rows , most of them fuzzily match to windows .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "platform (s)_3": 3, "windows_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "platform (s)_3": "platform ( s )", "windows_4": "windows"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "platform (s)_3": [0], "windows_4": [0]}, "table_header": ["year", "game", "genre", "platform ( s )", "developer ( s )"], "table_cont": [["2008", "grand theft auto iv", "open world action", "windows , playstation 3 , xbox 360", "rockstar north"], ["2009", "uncharted 2 : among thieves", "third - person shooter", "playstation 3", "naughty dog"], ["2010", "mass effect 2", "rpg", "xbox 360 , windows , playstation 3", "bioware"], ["2011", "the elder scrolls v : skyrim", "role - playing game", "windows , xbox 360", "bethesda game studios"], ["2012", "xcom : enemy unknown", "turn - based strategy", "windows , xbox 360 , playstation 3", "firaxis games"]], "query": "most_eq { all_rows ; platform ( s ) ; windows } = true", "question": "most of the games on the list of game of the year awards work on the windows platform ."}, {"topic": "first hull trains", "wiki": "https://en.wikipedia.org/wiki/First_Hull_Trains", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1617901-2.html.csv", "action": "count", "sent": "two of the first hull train classes had four instances built of each .", "annotation": {"scope": "all", "criterion": "equal", "value": "4", "result": "2", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "number", "4"], "result": null, "ind": 0, "tointer": "select the rows whose number record is equal to 4 .", "tostr": "filter_eq { all_rows ; number ; 4 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; number ; 4 } }", "tointer": "select the rows whose number record is equal to 4 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; number ; 4 } } ; 2 } = true", "tointer": "select the rows whose number record is equal to 4 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; number ; 4 } } ; 2 } = true", "interpret": "select the rows whose number record is equal to 4 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "number_5": 5, "4_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "number_5": "number", "4_6": "4", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "number_5": [0], "4_6": [0], "2_7": [2]}, "table_header": ["class", "type", "built", "number", "withdrawn"], "table_cont": [["class 170 turbostar", "diesel multiple unit", "1999 - 2004", "4", "2005"], ["class 222 pioneer", "diesel multiple unit", "2005", "4", "2009"], ["class 86", "electric locomotive", "1965 - 1966", "1", "2008"], ["mark 3 carriage", "passenger carriage", "1975 - 1988", "5", "2008"], ["mark 3 carriage", "driving van trailer", "1988", "1", "2008"]], "query": "eq { count { filter_eq { all_rows ; number ; 4 } } ; 2 } = true", "question": "two of the first hull train classes had four instances built of each ."}, {"topic": "united states house of representatives elections , 1924", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1924", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1342393-10.html.csv", "action": "comparative", "sent": "frank park was originally elected to office before carl vinson was .", "annotation": {"row_1": "1", "row_2": "8", "col": "4", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "frank park"], "result": null, "ind": 0, "tointer": "select the rows whose incumbent record fuzzily matches to frank park .", "tostr": "filter_eq { all_rows ; incumbent ; frank park }"}, "first elected"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; incumbent ; frank park } ; first elected }", "tointer": "select the rows whose incumbent record fuzzily matches to frank park . take the first elected record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "carl vinson"], "result": null, "ind": 1, "tointer": "select the rows whose incumbent record fuzzily matches to carl vinson .", "tostr": "filter_eq { all_rows ; incumbent ; carl vinson }"}, "first elected"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; incumbent ; carl vinson } ; first elected }", "tointer": "select the rows whose incumbent record fuzzily matches to carl vinson . take the first elected record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; incumbent ; frank park } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; carl vinson } ; first elected } } = true", "tointer": "select the rows whose incumbent record fuzzily matches to frank park . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to carl vinson . take the first elected record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; incumbent ; frank park } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; carl vinson } ; first elected } } = true", "interpret": "select the rows whose incumbent record fuzzily matches to frank park . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to carl vinson . take the first elected record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "incumbent_7": 7, "frank park_8": 8, "first elected_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "incumbent_11": 11, "carl vinson_12": 12, "first elected_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "incumbent_7": "incumbent", "frank park_8": "frank park", "first elected_9": "first elected", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "incumbent_11": "incumbent", "carl vinson_12": "carl vinson", "first elected_13": "first elected"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "incumbent_7": [0], "frank park_8": [0], "first elected_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "incumbent_11": [1], "carl vinson_12": [1], "first elected_13": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["georgia 2", "frank park", "democratic", "1912", "lost renomination democratic hold", "edward e cox ( d ) unopposed"], ["georgia 3", "charles r crisp", "democratic", "1912", "re - elected", "charles r crisp ( d ) unopposed"], ["georgia 4", "william c wright", "democratic", "1918", "re - elected", "william c wright ( d ) unopposed"], ["georgia 5", "william d upshaw", "democratic", "1918", "re - elected", "william d upshaw ( d ) unopposed"], ["georgia 6", "james w wise", "democratic", "1914", "retired democratic hold", "samuel rutherford ( d ) unopposed"], ["georgia 7", "gordon lee", "democratic", "1904", "re - elected", "gordon lee ( d ) 99.9 % a t atwater ( i ) 0.1 %"], ["georgia 8", "charles h brand", "democratic", "1916", "re - elected", "charles h brand ( d ) unopposed"], ["georgia 10", "carl vinson", "democratic", "1914", "re - elected", "carl vinson ( d ) unopposed"], ["georgia 11", "william c lankford", "democratic", "1918", "re - elected", "william c lankford ( d ) unopposed"]], "query": "less { hop { filter_eq { all_rows ; incumbent ; frank park } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; carl vinson } ; first elected } } = true", "question": "frank park was originally elected to office before carl vinson was ."}, {"topic": "2007 - 08 philadelphia 76ers season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Philadelphia_76ers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11960196-3.html.csv", "action": "superlative", "sent": "playing detroit in the 2007-08 season , dalembert had the highest number of points in a single game for the 76ers .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "5", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "high points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; high points }"}, "high points"], "result": "dalembert ( 23 )", "ind": 1, "tostr": "hop { argmax { all_rows ; high points } ; high points }"}, "dalembert ( 23 )"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; high points } ; high points } ; dalembert ( 23 ) } = true", "tointer": "select the row whose high points record of all rows is maximum . the high points record of this row is dalembert ( 23 ) ."}, "logic_str": "eq { hop { argmax { all_rows ; high points } ; high points } ; dalembert ( 23 ) } = true", "interpret": "select the row whose high points record of all rows is maximum . the high points record of this row is dalembert ( 23 ) .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "high points_5": 5, "high points_6": 6, "dalembert (23)_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "high points_5": "high points", "high points_6": "high points", "dalembert (23)_7": "dalembert ( 23 )"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "high points_5": [0], "high points_6": [1], "dalembert (23)_7": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "series"], "table_cont": [["1", "april 20", "detroit", "90 - 86", "miller ( 20 )", "evans ( 14 )", "iguodala ( 8 )", "the palace of auburn hills 22076", "1 - 0"], ["2", "april 23", "detroit", "88 - 105", "williams ( 17 )", "evans ( 11 )", "iguodala ( 4 )", "the palace of auburn hills 22076", "1 - 1"], ["3", "april 25", "detroit", "95 - 75", "dalembert ( 23 )", "dalembert ( 16 )", "green , iguodala ( 6 )", "wachovia center 18805", "2 - 1"], ["4", "april 27", "detroit", "84 - 93", "young ( 15 )", "dalembert ( 12 )", "iguodala ( 5 )", "wachovia center 18347", "2 - 2"], ["5", "april 29", "detroit", "81 - 98", "iguodala ( 21 )", "evans ( 7 )", "iguodala ( 6 )", "the palace of auburn hills 22076", "2 - 3"], ["6", "may 1", "detroit", "77 - 100", "iguodala ( 16 )", "evans ( 7 )", "evans , ollie ( 3 )", "wachovia center 14130", "2 - 4"]], "query": "eq { hop { argmax { all_rows ; high points } ; high points } ; dalembert ( 23 ) } = true", "question": "playing detroit in the 2007-08 season , dalembert had the highest number of points in a single game for the 76ers ."}, {"topic": "list of paris saint - germain f.c. players", "wiki": "https://en.wikipedia.org/wiki/List_of_Paris_Saint-Germain_F.C._players", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24565004-22.html.csv", "action": "aggregation", "sent": "the players on paris saint - germain f.c. scored a combined total of 20 goals .", "annotation": {"scope": "all", "col": "5", "type": "sum", "result": "20", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "goals"], "result": "20", "ind": 0, "tostr": "sum { all_rows ; goals }"}, "20"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; goals } ; 20 } = true", "tointer": "the sum of the goals record of all rows is 20 ."}, "logic_str": "round_eq { sum { all_rows ; goals } ; 20 } = true", "interpret": "the sum of the goals record of all rows is 20 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "goals_4": 4, "20_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "goals_4": "goals", "20_5": "20"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "goals_4": [0], "20_5": [1]}, "table_header": ["name", "position", "period", "appearances", "goals", "nationality square"], "table_cont": [["valdo", "midfielder", "1991 - 1995", "153", "16", "brazil"], ["vampeta", "midfielder", "2000 - 2001", "8", "1", "brazil"], ["franck vandecasteele", "forward", "1984 - 1988 , 1990 - 1992", "1", "0", "france"], ["gregory van der wiel", "defender", "2012", "29", "1", "netherlands"], ["richard vanquelef", "forward", "1970 - 1974", "1", "1", "france"], ["jean - luc vasseur", "defender", "1986 - 1988 , 1990 - 1992", "22", "0", "france"], ["pierre vermeulen", "forward", "1985 - 1987", "55", "1", "netherlands"], ["marco verratti", "midfielder", "2012", "39", "0", "italy"]], "query": "round_eq { sum { all_rows ; goals } ; 20 } = true", "question": "the players on paris saint - germain f.c. scored a combined total of 20 goals ."}, {"topic": "hughes hall college boat club", "wiki": "https://en.wikipedia.org/wiki/Hughes_Hall_College_Boat_Club", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18880596-3.html.csv", "action": "aggregation", "sent": "the average finish position for the hughes hall college boat club was 42.8 .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "42.8", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "finish position"], "result": "42.8", "ind": 0, "tostr": "avg { all_rows ; finish position }"}, "42.8"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; finish position } ; 42.8 } = true", "tointer": "the average of the finish position record of all rows is 42.8 ."}, "logic_str": "round_eq { avg { all_rows ; finish position } ; 42.8 } = true", "interpret": "the average of the finish position record of all rows is 42.8 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "finish position_4": 4, "42.8_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "finish position_4": "finish position", "42.8_5": "42.8"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "finish position_4": [0], "42.8_5": [1]}, "table_header": ["year", "finish position", "1st day", "2nd day", "3rd day", "4th day"], "table_cont": [["2008", "50th", "bumped emmanuel", "rowed - over", "bumped by peterhouse", "rowed - over"], ["2009", "46th", "bumped trinity hall", "bumped jesus", "bumped robinson", "bumped girton"], ["2010", "43rd", "bumped peterhouse", "rowed - over", "bumped churchill", "bumped fitzwilliam"], ["2011", "39th", "bumped magdalene", "bumped 1st & 3rd trinity", "bumped lady margaret", "bumped selwyn"], ["2012", "36th", "bumped emmanuel", "bumped st catharine 's", "rowed - over", "bumped darwin"]], "query": "round_eq { avg { all_rows ; finish position } ; 42.8 } = true", "question": "the average finish position for the hughes hall college boat club was 42.8 ."}, {"topic": "fraternities and sororities in canada", "wiki": "https://en.wikipedia.org/wiki/Fraternities_and_sororities_in_Canada", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28436909-4.html.csv", "action": "comparative", "sent": "of the sororities in the national panhellenic conference in canada , delta zeta was founded before alpha gamma delta .", "annotation": {"row_1": "9", "row_2": "1", "col": "4", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "organization", "delta zeta"], "result": null, "ind": 0, "tointer": "select the rows whose organization record fuzzily matches to delta zeta .", "tostr": "filter_eq { all_rows ; organization ; delta zeta }"}, "founding date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; organization ; delta zeta } ; founding date }", "tointer": "select the rows whose organization record fuzzily matches to delta zeta . take the founding date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "organization", "alpha gamma delta"], "result": null, "ind": 1, "tointer": "select the rows whose organization record fuzzily matches to alpha gamma delta .", "tostr": "filter_eq { all_rows ; organization ; alpha gamma delta }"}, "founding date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; organization ; alpha gamma delta } ; founding date }", "tointer": "select the rows whose organization record fuzzily matches to alpha gamma delta . take the founding date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; organization ; delta zeta } ; founding date } ; hop { filter_eq { all_rows ; organization ; alpha gamma delta } ; founding date } } = true", "tointer": "select the rows whose organization record fuzzily matches to delta zeta . take the founding date record of this row . select the rows whose organization record fuzzily matches to alpha gamma delta . take the founding date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; organization ; delta zeta } ; founding date } ; hop { filter_eq { all_rows ; organization ; alpha gamma delta } ; founding date } } = true", "interpret": "select the rows whose organization record fuzzily matches to delta zeta . take the founding date record of this row . select the rows whose organization record fuzzily matches to alpha gamma delta . take the founding date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "organization_7": 7, "delta zeta_8": 8, "founding date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "organization_11": 11, "alpha gamma delta_12": 12, "founding date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "organization_7": "organization", "delta zeta_8": "delta zeta", "founding date_9": "founding date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "organization_11": "organization", "alpha gamma delta_12": "alpha gamma delta", "founding date_13": "founding date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "organization_7": [0], "delta zeta_8": [0], "founding date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "organization_11": [1], "alpha gamma delta_12": [1], "founding date_13": [3]}, "table_header": ["letters", "organization", "nickname", "founding date", "founding university", "type", "canadian chapters"], "table_cont": [["\u03b1\u03b3\u03b4", "alpha gamma delta", "a g d or alpha gam or gams", "1904 - 05 - 30", "syracuse university", "social", "8 active , 2 inactive"], ["\u03b1\u03b4\u03c0", "alpha delta pi", "a d pi", "1851 - 05 - 15", "wesleyan college", "social", "3 active , 1 inactive"], ["a\u03b5\u03c6", "alpha epsilon phi", "a e phi or phisters", "1909 - 10 - 24", "barnard college", "jewish", "1 active , 2 inactive"], ["\u03b1\u03bf\u03c0", "alpha omicron pi", "aopi alphas alpha o 's", "1897 - 01 - 02", "barnard college", "social", "8 active"], ["a\u03c6", "alpha phi", "a - phi", "1872 - 10 - 10", "syracuse university", "social", "6 active , 1 inactive"], ["\u03b3\u03c6\u03b2", "gamma phi beta", "gamma phi , g - phi - b or g - phi", "1874 - 11 - 11", "syracuse university", "social", "3 active , 2 inactive"], ["\u03b4\u03b3", "delta gamma", "dg or deegee", "1873 - 12 - 25", "lewis school for girls", "social", "3 active , 2 inactive"], ["\u03b4\u03b4\u03b4", "delta delta delta", "tri delta", "1888 - 11 - 27", "boston university", "social", "2 active , 2 inactive"], ["\u03b4\u03b6", "delta zeta", "dz", "1902 - 10 - 24", "miami university", "social", "1 active , 1 inactive"], ["\u03b4\u03c6\u03b5", "delta phi epsilon", "dphie", "1917 - 03 - 17", "new york university law school", "social", "1 active , 5 inactive"], ["\u03ba\u03b1\u03b8", "kappa alpha theta", "theta or kat", "1870 - 01 - 27", "depauw university", "social", "4 active , 2 inactive"], ["\u03ba\u03ba\u03b3", "kappa kappa gamma", "kappa", "1870 - 10 - 13", "monmouth college", "social", "4 active , 1 inactive"], ["\u03c0\u03b2\u03c6", "pi beta phi", "pi phi", "1867 - 04 - 28", "monmouth college", "social", "4 active , 2 inactive"]], "query": "less { hop { filter_eq { all_rows ; organization ; delta zeta } ; founding date } ; hop { filter_eq { all_rows ; organization ; alpha gamma delta } ; founding date } } = true", "question": "of the sororities in the national panhellenic conference in canada , delta zeta was founded before alpha gamma delta ."}, {"topic": "list of intel itanium microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_Intel_Itanium_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12740151-8.html.csv", "action": "majority", "sent": "all model numbers of the intel itanium microprocessors have the same release date .", "annotation": {"scope": "all", "col": "12", "most_or_all": "all", "criterion": "fuzzily_match", "value": "q1 , 2007", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "release date", "q1 , 2007"], "result": true, "ind": 0, "tointer": "for the release date records of all rows , all of them fuzzily match to q1 , 2007 .", "tostr": "all_eq { all_rows ; release date ; q1 , 2007 } = true"}, "logic_str": "all_eq { all_rows ; release date ; q1 , 2007 } = true", "interpret": "for the release date records of all rows , all of them fuzzily match to q1 , 2007 .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "release date_3": 3, "q1 , 2007_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "release date_3": "release date", "q1 , 2007_4": "q1 , 2007"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "release date_3": [0], "q1 , 2007_4": [0]}, "table_header": ["model number", "clock speed", "l2", "l3", "fsb speed", "multiplier", "cores", "threads per core", "voltage", "tdp ( w )", "socket", "release date", "price ( usd )"], "table_cont": [["itanium 2 9010", "1.6 ghz", "256 kb", "6 mb", "533 mhz", "12", "1", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "696"], ["itanium 2 9015", "1.4 ghz", "256 kb", "12 mb", "400 mhz", "14", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "749"], ["itanium 2 9020", "1.42 ghz", "256 kb", "12 mb", "533 mhz", "10.5", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "910"], ["itanium 2 9030", "1.6 ghz", "256 kb", "8 mb", "533 mhz", "12", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "1552"], ["itanium 2 9040", "1.6 ghz", "256 kb", "18 mb", "533 mhz", "12", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "1980"]], "query": "all_eq { all_rows ; release date ; q1 , 2007 } = true", "question": "all model numbers of the intel itanium microprocessors have the same release date ."}, {"topic": "cleveland open", "wiki": "https://en.wikipedia.org/wiki/Cleveland_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12919860-2.html.csv", "action": "aggregation", "sent": "at the cleveland open a total of 241,700 in 1st prize compensation was awarded .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "241700", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "1st prize"], "result": "241700", "ind": 0, "tostr": "sum { all_rows ; 1st prize }"}, "241700"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; 1st prize } ; 241700 } = true", "tointer": "the sum of the 1st prize record of all rows is 241700 ."}, "logic_str": "round_eq { sum { all_rows ; 1st prize } ; 241700 } = true", "interpret": "the sum of the 1st prize record of all rows is 241700 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "1st prize_4": 4, "241700_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "1st prize_4": "1st prize", "241700_5": "241700"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "1st prize_4": [0], "241700_5": [1]}, "table_header": ["year", "winner", "country", "score", "to par", "1st prize"], "table_cont": [["1972", "david graham", "australia", "278", "6", "30000"], ["1971", "bobby mitchell", "united states", "262", "22", "30000"], ["1970", "bruce devlin", "australia", "268", "12", "30000"], ["1969", "charles coody", "united states", "271", "9", "22000"], ["1968", "dave stockton", "united states", "276", "8", "22000"], ["1967", "gardner dickinson", "united states", "271", "9", "20700"], ["1966", "r h sikes", "united states", "268", "16", "20000"], ["1965", "dan sikes", "united states", "272", "12", "25000"], ["1964", "tony lema", "united states", "270", "14", "20000"], ["1963", "arnold palmer", "united states", "273", "11", "22000"]], "query": "round_eq { sum { all_rows ; 1st prize } ; 241700 } = true", "question": "at the cleveland open a total of 241,700 in 1st prize compensation was awarded ."}, {"topic": "list of craters on venus", "wiki": "https://en.wikipedia.org/wiki/List_of_craters_on_Venus", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1145513-24.html.csv", "action": "unique", "sent": "the xi wang crater is the only one in the \" positive \" position on venus .", "annotation": {"scope": "all", "row": "3", "col": "2", "col_other": "1", "criterion": "greater_than", "value": "0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "latitude", "0"], "result": null, "ind": 0, "tointer": "select the rows whose latitude record is greater than 0 .", "tostr": "filter_greater { all_rows ; latitude ; 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; latitude ; 0 } }", "tointer": "select the rows whose latitude record is greater than 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "latitude", "0"], "result": null, "ind": 0, "tointer": "select the rows whose latitude record is greater than 0 .", "tostr": "filter_greater { all_rows ; latitude ; 0 }"}, "name"], "result": "xi wang", "ind": 2, "tostr": "hop { filter_greater { all_rows ; latitude ; 0 } ; name }"}, "xi wang"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; latitude ; 0 } ; name } ; xi wang }", "tointer": "the name record of this unqiue row is xi wang ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; latitude ; 0 } } ; eq { hop { filter_greater { all_rows ; latitude ; 0 } ; name } ; xi wang } } = true", "tointer": "select the rows whose latitude record is greater than 0 . there is only one such row in the table . the name record of this unqiue row is xi wang ."}, "logic_str": "and { only { filter_greater { all_rows ; latitude ; 0 } } ; eq { hop { filter_greater { all_rows ; latitude ; 0 } ; name } ; xi wang } } = true", "interpret": "select the rows whose latitude record is greater than 0 . there is only one such row in the table . the name record of this unqiue row is xi wang .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "latitude_7": 7, "0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "xi wang_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "latitude_7": "latitude", "0_8": "0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "xi wang_10": "xi wang"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "latitude_7": [0], "0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "xi wang_10": [3]}, "table_header": ["name", "latitude", "longitude", "diameter ( km )", "named after"], "table_cont": [["xantippe", "- 10.9", "11.8", "40.4", "xanthippe , the wife of socrates"], ["xenia", "- 30.3", "249.4", "13.5", "greek first name"], ["xi wang", "14", "208", "7.7", "chinese first name"], ["xiao hong", "- 43.5", "101.7", "38.7", "xiao hong , chinese novelist ( 19111942 )"], ["ximena", "- 68.2", "243.6", "12.8", "portuguese first name"]], "query": "and { only { filter_greater { all_rows ; latitude ; 0 } } ; eq { hop { filter_greater { all_rows ; latitude ; 0 } ; name } ; xi wang } } = true", "question": "the xi wang crater is the only one in the \" positive \" position on venus ."}, {"topic": "goran relji\u0107", "wiki": "https://en.wikipedia.org/wiki/Goran_Relji%C4%87", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17302298-2.html.csv", "action": "comparative", "sent": "goran relji\u0107 's fight against petr kelner lasted more rounds than his fight against andrej bregar .", "annotation": {"row_1": "12", "row_2": "15", "col": "6", "col_other": "3", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "petr kelner"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to petr kelner .", "tostr": "filter_eq { all_rows ; opponent ; petr kelner }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; opponent ; petr kelner } ; round }", "tointer": "select the rows whose opponent record fuzzily matches to petr kelner . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "andrej bregar"], "result": null, "ind": 1, "tointer": "select the rows whose opponent record fuzzily matches to andrej bregar .", "tostr": "filter_eq { all_rows ; opponent ; andrej bregar }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; opponent ; andrej bregar } ; round }", "tointer": "select the rows whose opponent record fuzzily matches to andrej bregar . take the round record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; opponent ; petr kelner } ; round } ; hop { filter_eq { all_rows ; opponent ; andrej bregar } ; round } } = true", "tointer": "select the rows whose opponent record fuzzily matches to petr kelner . take the round record of this row . select the rows whose opponent record fuzzily matches to andrej bregar . take the round record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; opponent ; petr kelner } ; round } ; hop { filter_eq { all_rows ; opponent ; andrej bregar } ; round } } = true", "interpret": "select the rows whose opponent record fuzzily matches to petr kelner . take the round record of this row . select the rows whose opponent record fuzzily matches to andrej bregar . take the round record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "opponent_7": 7, "petr kelner_8": 8, "round_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "opponent_11": 11, "andrej bregar_12": 12, "round_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "opponent_7": "opponent", "petr kelner_8": "petr kelner", "round_9": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "opponent_11": "opponent", "andrej bregar_12": "andrej bregar", "round_13": "round"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "opponent_7": [0], "petr kelner_8": [0], "round_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "opponent_11": [1], "andrej bregar_12": [1], "round_13": [3]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "location"], "table_cont": [["win", "12 - 4", "nikolay osokin", "ko ( liver kick )", "draka 2013", "1", "vladivostok , russia"], ["loss", "11 - 4", "jan b\u0142achowicz", "decision ( unanimous )", "ksw 22", "3", "warsaw , poland"], ["win", "11 - 3", "gadji magomedov", "decision ( unanimous )", "draka 8", "4", "nakhodka , russia"], ["win", "10 - 3", "rogent lloret", "tko ( punches )", "s & hc 5", "1", "geneva , switzerland"], ["win", "9 - 3", "goran scepanovic", "tko ( punches )", "bilic - eric security fight night 6", "1", "zagreb , croatia"], ["loss", "8 - 3", "krzysztof soszynski", "decision ( unanimous )", "ufc 122", "3", "oberhausen , germany"], ["loss", "8 - 2", "kendall grove", "decision ( split )", "ufc 116", "3", "nevada , united states"], ["loss", "8 - 1", "cb dollaway", "decision ( unanimous )", "ufc 110", "3", "sydney , australia"], ["win", "8 - 0", "wilson gouveia", "tko ( punches )", "ufc 84", "2", "nevada , united states"], ["win", "7 - 0", "waldemar golinski", "decision ( unanimous )", "be 2 - boxing explosion 2", "2", "celje , slovenia"], ["win", "6 - 0", "tomek smykowski", "submission ( armbar )", "cf - the real deal", "1", "maribor , slovenia"], ["win", "5 - 0", "petr kelner", "submission ( armbar )", "ultimate fight - challenge 1", "2", "samobor , croatia"], ["win", "4 - 0", "bojan mihajlovic", "submission ( kimura )", "ns 3 - noc skorpiona 3", "1", "\u0161ibenik , croatia"], ["win", "3 - 0", "nenad djuric", "tko ( punches )", "ns 1 - noc skorpiona 1", "2", "zadar , croatia"], ["win", "2 - 0", "andrej bregar", "submission ( arm triangle choke )", "trboulje 1 - croatia vs slovenia", "1", "ljubljana , slovenia"], ["win", "1 - 0", "bojan spalevic", "submission ( armbar )", "ufd - ultimate fight dubravc", "1", "zagreb , croatia"]], "query": "greater { hop { filter_eq { all_rows ; opponent ; petr kelner } ; round } ; hop { filter_eq { all_rows ; opponent ; andrej bregar } ; round } } = true", "question": "goran relji\u0107 's fight against petr kelner lasted more rounds than his fight against andrej bregar ."}, {"topic": "2007 - 08 new jersey devils season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_New_Jersey_Devils_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11902366-4.html.csv", "action": "ordinal", "sent": "on november 17th , the new jersey devils ' game recorded the highest attendance of the 2007 - 08 season .", "annotation": {"row": "9", "col": "6", "order": "1", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 1 }"}, "date"], "result": "november 17", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 1 } ; date }"}, "november 17"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; november 17 } = true", "tointer": "select the row whose attendance record of all rows is 1st maximum . the date record of this row is november 17 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; november 17 } = true", "interpret": "select the row whose attendance record of all rows is 1st maximum . the date record of this row is november 17 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "1_6": 6, "date_7": 7, "november 17_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "1_6": "1", "date_7": "date", "november 17_8": "november 17"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "1_6": [0], "date_7": [1], "november 17_8": [2]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["november 2", "toronto", "2 - 3", "new jersey", "brodeur", "14523", "5 - 6 - 1"], ["november 3", "new jersey", "1 - 2", "ny rangers", "brodeur", "18200", "5 - 6 - 2"], ["november 5", "pittsburgh", "5 - 0", "new jersey", "brodeur", "14032", "5 - 7 - 2"], ["november 8", "philadelphia", "1 - 4", "new jersey", "brodeur", "14948", "6 - 7 - 2"], ["november 10", "new jersey", "1 - 2", "ny islanders", "brodeur", "15361", "6 - 8 - 2"], ["november 12", "new jersey", "3 - 2", "pittsburgh", "weekes", "17096", "7 - 8 - 2"], ["november 14", "ny rangers", "4 - 2", "new jersey", "brodeur", "17625", "7 - 9 - 2"], ["november 16", "ny islanders", "1 - 0", "new jersey", "brodeur", "15076", "7 - 10 - 2"], ["november 17", "new jersey", "6 - 2", "philadelphia", "brodeur", "19621", "8 - 10 - 2"], ["november 21", "new jersey", "2 - 1", "pittsburgh", "brodeur", "17132", "9 - 10 - 2"], ["november 23", "new jersey", "3 - 0", "atlanta", "brodeur", "18545", "10 - 10 - 2"], ["november 24", "new jersey", "3 - 2", "tampa bay", "brodeur", "19077", "11 - 10 - 2"], ["november 28", "dallas", "2 - 4", "new jersey", "brodeur", "13665", "12 - 10 - 2"], ["november 30", "montreal", "0 - 4", "new jersey", "brodeur", "15081", "13 - 10 - 2"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; november 17 } = true", "question": "on november 17th , the new jersey devils ' game recorded the highest attendance of the 2007 - 08 season ."}, {"topic": "comparison of microsoft windows versions", "wiki": "https://en.wikipedia.org/wiki/Comparison_of_Microsoft_Windows_versions", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10758793-13.html.csv", "action": "unique", "sent": "the microsoft windows version with ntfs v1 .2 is the only one with partial hpfs support .", "annotation": {"scope": "all", "row": "2", "col": "3", "col_other": "5", "criterion": "equal", "value": "partial", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "hpfs", "partial"], "result": null, "ind": 0, "tointer": "select the rows whose hpfs record fuzzily matches to partial .", "tostr": "filter_eq { all_rows ; hpfs ; partial }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; hpfs ; partial } }", "tointer": "select the rows whose hpfs record fuzzily matches to partial . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "hpfs", "partial"], "result": null, "ind": 0, "tointer": "select the rows whose hpfs record fuzzily matches to partial .", "tostr": "filter_eq { all_rows ; hpfs ; partial }"}, "ntfs"], "result": "yes v1 .2", "ind": 2, "tostr": "hop { filter_eq { all_rows ; hpfs ; partial } ; ntfs }"}, "yes v1 .2"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; hpfs ; partial } ; ntfs } ; yes v1 .2 }", "tointer": "the ntfs record of this unqiue row is yes v1 .2 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; hpfs ; partial } } ; eq { hop { filter_eq { all_rows ; hpfs ; partial } ; ntfs } ; yes v1 .2 } } = true", "tointer": "select the rows whose hpfs record fuzzily matches to partial . there is only one such row in the table . the ntfs record of this unqiue row is yes v1 .2 ."}, "logic_str": "and { only { filter_eq { all_rows ; hpfs ; partial } } ; eq { hop { filter_eq { all_rows ; hpfs ; partial } ; ntfs } ; yes v1 .2 } } = true", "interpret": "select the rows whose hpfs record fuzzily matches to partial . there is only one such row in the table . the ntfs record of this unqiue row is yes v1 .2 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "hpfs_7": 7, "partial_8": 8, "str_eq_3": 3, "str_hop_2": 2, "ntfs_9": 9, "yes v1.2_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "hpfs_7": "hpfs", "partial_8": "partial", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "ntfs_9": "ntfs", "yes v1.2_10": "yes v1 .2"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "hpfs_7": [0], "partial_8": [0], "str_eq_3": [4], "str_hop_2": [3], "ntfs_9": [2], "yes v1.2_10": [3]}, "table_header": ["fat16", "fat32", "hpfs", "iso 9660", "ntfs", "refs"], "table_cont": [["yes", "no", "yes", "yes", "yes v1 .0 / v1 .1", "no"], ["yes", "no", "partial", "yes", "yes v1 .2", "no"], ["yes", "yes", "no", "yes", "yes v3 .0", "no"], ["yes", "yes", "no", "yes", "yes v3 .1", "no"], ["yes", "yes", "no", "yes", "yes v5", "no"], ["yes", "yes", "no", "yes", "yes v5", "yes"]], "query": "and { only { filter_eq { all_rows ; hpfs ; partial } } ; eq { hop { filter_eq { all_rows ; hpfs ; partial } ; ntfs } ; yes v1 .2 } } = true", "question": "the microsoft windows version with ntfs v1 .2 is the only one with partial hpfs support ."}, {"topic": "2008 kentucky derby", "wiki": "https://en.wikipedia.org/wiki/2008_Kentucky_Derby", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17232312-2.html.csv", "action": "comparative", "sent": "colonel john had a higher finish in the 2008 kentucky derby than cowboy cal .", "annotation": {"row_1": "10", "row_2": "17", "col": "1", "col_other": "4", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "horse", "colonel john"], "result": null, "ind": 0, "tointer": "select the rows whose horse record fuzzily matches to colonel john .", "tostr": "filter_eq { all_rows ; horse ; colonel john }"}, "finished"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; horse ; colonel john } ; finished }", "tointer": "select the rows whose horse record fuzzily matches to colonel john . take the finished record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "horse", "cowboy cal"], "result": null, "ind": 1, "tointer": "select the rows whose horse record fuzzily matches to cowboy cal .", "tostr": "filter_eq { all_rows ; horse ; cowboy cal }"}, "finished"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; horse ; cowboy cal } ; finished }", "tointer": "select the rows whose horse record fuzzily matches to cowboy cal . take the finished record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; horse ; colonel john } ; finished } ; hop { filter_eq { all_rows ; horse ; cowboy cal } ; finished } } = true", "tointer": "select the rows whose horse record fuzzily matches to colonel john . take the finished record of this row . select the rows whose horse record fuzzily matches to cowboy cal . take the finished record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; horse ; colonel john } ; finished } ; hop { filter_eq { all_rows ; horse ; cowboy cal } ; finished } } = true", "interpret": "select the rows whose horse record fuzzily matches to colonel john . take the finished record of this row . select the rows whose horse record fuzzily matches to cowboy cal . take the finished record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "horse_7": 7, "colonel john_8": 8, "finished_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "horse_11": 11, "cowboy cal_12": 12, "finished_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "horse_7": "horse", "colonel john_8": "colonel john", "finished_9": "finished", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "horse_11": "horse", "cowboy cal_12": "cowboy cal", "finished_13": "finished"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "horse_7": [0], "colonel john_8": [0], "finished_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "horse_11": [1], "cowboy cal_12": [1], "finished_13": [3]}, "table_header": ["finished", "time / behind", "post", "horse", "jockey", "trainer", "owner"], "table_cont": [["15", "31 \u00be", "1", "cool coal man", "julien leparoux", "nick zito", "robert v lapenta"], ["4", "11", "2", "tale of ekati", "eibar coa", "barclay tagg", "charles e fipke"], ["7", "15", "3", "anak nakal", "rafael bejarano", "nick zito", "four roses thoroughbreds llc"], ["13", "24 \u00bc", "4", "court vision", "garrett gomez", "william i mott", "ieah stables & winstar farm llc"], ["2", "04 \u00be", "5", "eight belles", "gabriel saez", "larry jones", "fox hill farms , inc"], ["10", "19 \u00bd", "6", "z fortune", "robby albarado", "steve asmussen", "zayat stables , llc"], ["18", "48 \u00be", "7", "big truck", "javier castellano", "barclay tagg", "eric fein"], ["12", "22 \u00be", "8", "visionaire", "jose lezcano", "michael matz", "team valor & vision racing llc"], ["8", "15", "9", "pyro", "shaun bridgmohan", "steve asmussen", "winchell thoroughbreds llc"], ["6", "14 \u00bc", "10", "colonel john", "corey nakatani", "eoin g harty", "winstar farm llc"], ["14", "24 \u00bd", "11", "z humor", "rene douglas", "william i mott", "zayat stables , llc"], ["11", "21", "12", "smooth air", "manoel cruz", "bennie stutts jr", "mount joy stables , inc"], ["16", "32", "13", "bob black jack", "richard migliore", "james kasparoff", "jeff harmon & tim kasparoff"], ["20", "59 \u00bc", "14", "monba", "ramon dominguez", "todd pletcher", "starlight , lucarelli & saylor"], ["19", "50 \u00be", "15", "adriano", "edgar prado", "graham motion", "courtlandt farms"], ["3", "08 \u00bc", "16", "denis of cork", "calvin borel", "david carroll", "mr & mrs william k warren jr"], ["9", "15 \u00be", "17", "cowboy cal", "john velazquez", "todd pletcher", "stonerside stable"], ["5", "11 \u00be", "18", "recapturetheglory", "e t baird", "louie j roussel iii", "louie j roussel iii & ronald lamarque"], ["17", "36 \u00be", "19", "gayego", "mike smith", "paulo lobo", "cubanacan stables"], ["1", "- 2:01.82", "20", "big brown", "kent desormeaux", "richard e dutrow , jr", "ieah stables & paul pompa jr"]], "query": "less { hop { filter_eq { all_rows ; horse ; colonel john } ; finished } ; hop { filter_eq { all_rows ; horse ; cowboy cal } ; finished } } = true", "question": "colonel john had a higher finish in the 2008 kentucky derby than cowboy cal ."}, {"topic": "1984 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1984_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17231267-5.html.csv", "action": "majority", "sent": "most of the top players at the 1984 u.s. open were from the united states .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "united states", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "country", "united states"], "result": true, "ind": 0, "tointer": "for the country records of all rows , most of them fuzzily match to united states .", "tostr": "most_eq { all_rows ; country ; united states } = true"}, "logic_str": "most_eq { all_rows ; country ; united states } = true", "interpret": "for the country records of all rows , most of them fuzzily match to united states .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "country_3": 3, "united states_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "country_3": "country", "united states_4": "united states"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "country_3": [0], "united states_4": [0]}, "table_header": ["place", "player", "country", "score", "to par"], "table_cont": [["1", "hale irwin", "united states", "68 + 68 + 69 = 205", "- 5"], ["2", "fuzzy zoeller", "united states", "71 + 66 + 69 = 206", "- 4"], ["3", "greg norman", "australia", "70 + 68 + 69 = 207", "- 3"], ["4", "jim thorpe", "united states", "68 + 71 + 70 = 209", "- 1"], ["5", "tim simpson", "united states", "72 + 71 + 68 = 211", "+ 1"], ["t6", "morris hatalsky", "united states", "70 + 73 + 69 = 212", "+ 2"], ["t6", "johnny miller", "united states", "74 + 68 + 70 = 212", "+ 2"], ["t6", "jack nicklaus", "united states", "71 + 71 + 70 = 212", "+ 2"], ["t6", "lee trevino", "united states", "71 + 72 + 69 = 212", "+ 2"], ["t10", "david graham", "australia", "71 + 72 + 70 = 213", "+ 3"], ["t10", "curtis strange", "united states", "69 + 66 + 77 = 213", "+ 3"], ["t10", "mike sullivan", "united states", "70 + 73 + 70 = 213", "+ 3"]], "query": "most_eq { all_rows ; country ; united states } = true", "question": "most of the top players at the 1984 u.s. open were from the united states ."}, {"topic": "athletics at the 1935 central american and caribbean games", "wiki": "https://en.wikipedia.org/wiki/Athletics_at_the_1935_Central_American_and_Caribbean_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10102961-2.html.csv", "action": "ordinal", "sent": "mexico had the 2nd highest total in athletics at the 1935 central american and caribbean games .", "annotation": {"row": "2", "col": "6", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "total", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; total ; 2 }"}, "nation"], "result": "mexico", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; total ; 2 } ; nation }"}, "mexico"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; total ; 2 } ; nation } ; mexico } = true", "tointer": "select the row whose total record of all rows is 2nd maximum . the nation record of this row is mexico ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; total ; 2 } ; nation } ; mexico } = true", "interpret": "select the row whose total record of all rows is 2nd maximum . the nation record of this row is mexico .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "total_5": 5, "2_6": 6, "nation_7": 7, "mexico_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "total_5": "total", "2_6": "2", "nation_7": "nation", "mexico_8": "mexico"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "total_5": [0], "2_6": [0], "nation_7": [1], "mexico_8": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "cuba", "8", "9", "7", "24"], ["2", "mexico", "7", "6", "8", "21"], ["3", "puerto rico", "4", "4", "3", "11"], ["4", "guatemala", "1", "1", "1", "3"], ["5", "panama", "0", "0", "1", "1"]], "query": "eq { hop { nth_argmax { all_rows ; total ; 2 } ; nation } ; mexico } = true", "question": "mexico had the 2nd highest total in athletics at the 1935 central american and caribbean games ."}, {"topic": "2007 - 08 minnesota wild season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Minnesota_Wild_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11739153-7.html.csv", "action": "aggregation", "sent": "between february 2 and february 5 , the attendance was over 36,000 for the minnesota wild season .", "annotation": {"scope": "subset", "col": "6", "type": "sum", "result": "37097", "subset": {"col": "1", "criterion": "less_than_eq", "value": "february 5"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_less_eq", "args": ["all_rows", "date", "february 5"], "result": null, "ind": 0, "tostr": "filter_less_eq { all_rows ; date ; february 5 }", "tointer": "select the rows whose date record is less than or equal to february 5 ."}, "attendance"], "result": "37097", "ind": 1, "tostr": "sum { filter_less_eq { all_rows ; date ; february 5 } ; attendance }"}, "37097"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_less_eq { all_rows ; date ; february 5 } ; attendance } ; 37097 } = true", "tointer": "select the rows whose date record is less than or equal to february 5 . the sum of the attendance record of these rows is 37097 ."}, "logic_str": "round_eq { sum { filter_less_eq { all_rows ; date ; february 5 } ; attendance } ; 37097 } = true", "interpret": "select the rows whose date record is less than or equal to february 5 . the sum of the attendance record of these rows is 37097 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_less_eq_0": 0, "all_rows_4": 4, "date_5": 5, "february 5_6": 6, "attendance_7": 7, "37097_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_less_eq_0": "filter_less_eq", "all_rows_4": "all_rows", "date_5": "date", "february 5_6": "february 5", "attendance_7": "attendance", "37097_8": "37097"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_less_eq_0": [1], "all_rows_4": [0], "date_5": [0], "february 5_6": [0], "attendance_7": [1], "37097_8": [2]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["february 2", "minnesota", "4 - 1", "columbus", "backstrom", "18529", "30 - 19 - 3"], ["february 5", "detroit", "3 - 2", "minnesota", "backstrom", "18568", "30 - 19 - 4"], ["february 7", "dallas", "1 - 0", "minnesota", "backstrom", "18568", "30 - 20 - 4"], ["february 9", "ny islanders", "3 - 4", "minnesota", "backstrom", "18568", "31 - 20 - 4"], ["february 10", "minnesota", "2 - 1", "st louis", "harding", "16477", "32 - 20 - 4"], ["february 12", "minnesota", "2 - 4", "edmonton", "harding", "16839", "32 - 21 - 4"], ["february 14", "minnesota", "5 - 4", "vancouver", "backstrom", "18630", "33 - 21 - 4"], ["february 17", "nashville", "4 - 5", "minnesota", "backstrom", "18568", "34 - 21 - 4"], ["february 19", "vancouver", "3 - 2", "minnesota", "backstrom", "18568", "34 - 21 - 5"], ["february 20", "minnesota", "0 - 3", "chicago", "harding", "17812", "34 - 22 - 5"], ["february 24", "calgary", "2 - 1", "minnesota", "backstrom", "18568", "34 - 23 - 5"], ["february 26", "minnesota", "1 - 4", "washington", "backstrom", "17391", "34 - 24 - 5"], ["february 27", "minnesota", "3 - 2", "tampa bay", "backstrom", "17211", "35 - 24 - 5"], ["february 29", "minnesota", "3 - 2", "florida", "backstrom", "16927", "36 - 24 - 5"]], "query": "round_eq { sum { filter_less_eq { all_rows ; date ; february 5 } ; attendance } ; 37097 } = true", "question": "between february 2 and february 5 , the attendance was over 36,000 for the minnesota wild season ."}, {"topic": "2007 - 08 los angeles kings season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Los_Angeles_Kings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11821711-13.html.csv", "action": "comparative", "sent": "linden rowat was selected one round after dwight king .", "annotation": {"row_1": "7", "row_2": "6", "col": "1", "col_other": "2", "relation": "diff", "record_mentioned": "yes", "diff_result": {"diff_value": "1", "bigger": "row1"}}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "linden rowat ( g )"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to linden rowat ( g ) .", "tostr": "filter_eq { all_rows ; player ; linden rowat ( g ) }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round }", "tointer": "select the rows whose player record fuzzily matches to linden rowat ( g ) . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "dwight king ( c )"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to dwight king ( c ) .", "tostr": "filter_eq { all_rows ; player ; dwight king ( c ) }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round }", "tointer": "select the rows whose player record fuzzily matches to dwight king ( c ) . take the round record of this row ."}], "result": "1", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } }"}, "1"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } } ; 1 }", "tointer": "select the rows whose player record fuzzily matches to linden rowat ( g ) . take the round record of this row . select the rows whose player record fuzzily matches to dwight king ( c ) . take the round record of this row . the first record is 1 larger than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "linden rowat ( g )"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to linden rowat ( g ) .", "tostr": "filter_eq { all_rows ; player ; linden rowat ( g ) }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round }", "tointer": "select the rows whose player record fuzzily matches to linden rowat ( g ) . take the round record of this row ."}, "5"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; 5 }", "tointer": "the round record of the first row is 5 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "dwight king ( c )"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to dwight king ( c ) .", "tostr": "filter_eq { all_rows ; player ; dwight king ( c ) }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round }", "tointer": "select the rows whose player record fuzzily matches to dwight king ( c ) . take the round record of this row ."}, "4"], "result": true, "ind": 7, "tostr": "eq { hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } ; 4 }", "tointer": "the round record of the second row is 4 ."}], "result": true, "ind": 8, "tostr": "and { eq { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; 5 } ; eq { hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } ; 4 } }", "tointer": "the round record of the first row is 5 . the round record of the second row is 4 ."}], "result": true, "ind": 9, "tostr": "and { eq { diff { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } } ; 1 } ; and { eq { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; 5 } ; eq { hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } ; 4 } } } = true", "tointer": "select the rows whose player record fuzzily matches to linden rowat ( g ) . take the round record of this row . select the rows whose player record fuzzily matches to dwight king ( c ) . take the round record of this row . the first record is 1 larger than the second record . the round record of the first row is 5 . the round record of the second row is 4 ."}, "logic_str": "and { eq { diff { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } } ; 1 } ; and { eq { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; 5 } ; eq { hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } ; 4 } } } = true", "interpret": "select the rows whose player record fuzzily matches to linden rowat ( g ) . take the round record of this row . select the rows whose player record fuzzily matches to dwight king ( c ) . take the round record of this row . the first record is 1 larger than the second record . the round record of the first row is 5 . the round record of the second row is 4 .", "num_func": 14, "nid": 10, "g_ids": {"and_9": 9, "result_10": 10, "eq_5": 5, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_11": 11, "player_12": 12, "linden rowat (g)_13": 13, "round_14": 14, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_15": 15, "player_16": 16, "dwight king (c)_17": 17, "round_18": 18, "1_19": 19, "and_8": 8, "eq_6": 6, "5_20": 20, "eq_7": 7, "4_21": 21}, "g_ids_features": {"and_9": "and", "result_10": "true", "eq_5": "eq", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_11": "all_rows", "player_12": "player", "linden rowat (g)_13": "linden rowat ( g )", "round_14": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_15": "all_rows", "player_16": "player", "dwight king (c)_17": "dwight king ( c )", "round_18": "round", "1_19": "1", "and_8": "and", "eq_6": "eq", "5_20": "5", "eq_7": "eq", "4_21": "4"}, "g_adj": {"and_9": [10], "result_10": [], "eq_5": [9], "diff_4": [5], "num_hop_2": [4, 6], "filter_str_eq_0": [2], "all_rows_11": [0], "player_12": [0], "linden rowat (g)_13": [0], "round_14": [2], "num_hop_3": [4, 7], "filter_str_eq_1": [3], "all_rows_15": [1], "player_16": [1], "dwight king (c)_17": [1], "round_18": [3], "1_19": [5], "and_8": [9], "eq_6": [8], "5_20": [6], "eq_7": [8], "4_21": [7]}, "table_header": ["round", "player", "nationality", "nhl team", "college / junior / club team ( league )"], "table_cont": [["1", "thomas hickey ( d )", "canada", "los angeles kings", "seattle thunderbirds ( whl )"], ["2", "oscar moller ( c )", "sweden", "los angeles kings", "chilliwack bruins ( whl )"], ["2", "wayne simmonds ( rw )", "canada", "los angeles kings", "owen sound attack ( whl )"], ["3", "bryan cameron ( c )", "canada", "los angeles kings", "belleville bulls ( ohl )"], ["4", "alec martinez ( d )", "united states", "los angeles kings", "miami university ( ncaa )"], ["4", "dwight king ( c )", "canada", "los angeles kings", "lethbridge hurricanes ( whl )"], ["5", "linden rowat ( g )", "canada", "los angeles kings", "regina pats ( whl )"], ["5", "joshua turnbull ( c )", "united states", "los angeles kings", "waterloo black hawks ( ushl )"], ["7", "josh kidd ( d )", "canada", "los angeles kings", "erie otters ( ohl )"], ["7", "matt fillier ( lw )", "canada", "los angeles kings", "st john 's fog devils ( qmjhl )"]], "query": "and { eq { diff { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } } ; 1 } ; and { eq { hop { filter_eq { all_rows ; player ; linden rowat ( g ) } ; round } ; 5 } ; eq { hop { filter_eq { all_rows ; player ; dwight king ( c ) } ; round } ; 4 } } } = true", "question": "linden rowat was selected one round after dwight king ."}, {"topic": "television in the united kingdom", "wiki": "https://en.wikipedia.org/wiki/Television_in_the_United_Kingdom", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-182410-14.html.csv", "action": "comparative", "sent": "the apollo 13 splashdown drew more viewers than the wedding of princess anne and mark phillips in the united kingdom .", "annotation": {"row_1": "5", "row_2": "8", "col": "3", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "show", "apollo 13 splashdown"], "result": null, "ind": 0, "tointer": "select the rows whose show record fuzzily matches to apollo 13 splashdown .", "tostr": "filter_eq { all_rows ; show ; apollo 13 splashdown }"}, "number of viewers"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; show ; apollo 13 splashdown } ; number of viewers }", "tointer": "select the rows whose show record fuzzily matches to apollo 13 splashdown . take the number of viewers record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "show", "wedding of princess anne and mark phillips"], "result": null, "ind": 1, "tointer": "select the rows whose show record fuzzily matches to wedding of princess anne and mark phillips .", "tostr": "filter_eq { all_rows ; show ; wedding of princess anne and mark phillips }"}, "number of viewers"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; show ; wedding of princess anne and mark phillips } ; number of viewers }", "tointer": "select the rows whose show record fuzzily matches to wedding of princess anne and mark phillips . take the number of viewers record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; show ; apollo 13 splashdown } ; number of viewers } ; hop { filter_eq { all_rows ; show ; wedding of princess anne and mark phillips } ; number of viewers } } = true", "tointer": "select the rows whose show record fuzzily matches to apollo 13 splashdown . take the number of viewers record of this row . select the rows whose show record fuzzily matches to wedding of princess anne and mark phillips . take the number of viewers record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; show ; apollo 13 splashdown } ; number of viewers } ; hop { filter_eq { all_rows ; show ; wedding of princess anne and mark phillips } ; number of viewers } } = true", "interpret": "select the rows whose show record fuzzily matches to apollo 13 splashdown . take the number of viewers record of this row . select the rows whose show record fuzzily matches to wedding of princess anne and mark phillips . take the number of viewers record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "show_7": 7, "apollo 13 splashdown_8": 8, "number of viewers_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "show_11": 11, "wedding of princess anne and mark phillips_12": 12, "number of viewers_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "show_7": "show", "apollo 13 splashdown_8": "apollo 13 splashdown", "number of viewers_9": "number of viewers", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "show_11": "show", "wedding of princess anne and mark phillips_12": "wedding of princess anne and mark phillips", "number of viewers_13": "number of viewers"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "show_7": [0], "apollo 13 splashdown_8": [0], "number of viewers_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "show_11": [1], "wedding of princess anne and mark phillips_12": [1], "number of viewers_13": [3]}, "table_header": ["rank", "show", "number of viewers", "date", "network"], "table_cont": [["1", "1966 world cup final", "32.30 million", "30 july 1966", "bbc one"], ["2", "funeral of princess diana", "32.10 million", "6 september 1997", "bbc one"], ["3", "british royal family documentary", "30.69 million", "1969", "bbc1"], ["4", "eastenders", "30.15 million", "25 december 1986", "bbc one"], ["5", "apollo 13 splashdown", "28.60 million", "17 april 1970", "bbc one"], ["6", "fa cup replay : chelsea vs leeds", "28.49 million", "29 april 1970", "bbc one"], ["7", "royal wedding of charles & diana", "28.40 million", "29 july 1981", "bbc one"], ["8", "wedding of princess anne and mark phillips", "27.60 million", "14 november 1973", "bbc one"], ["9", "coronation street", "26.65 million", "25 december 1987", "itv"], ["10", "2012 summer olympics closing ceremony in london", "24.46 million", "12 august 2012", "bbc one"]], "query": "greater { hop { filter_eq { all_rows ; show ; apollo 13 splashdown } ; number of viewers } ; hop { filter_eq { all_rows ; show ; wedding of princess anne and mark phillips } ; number of viewers } } = true", "question": "the apollo 13 splashdown drew more viewers than the wedding of princess anne and mark phillips in the united kingdom ."}, {"topic": "k league challenge", "wiki": "https://en.wikipedia.org/wiki/K_League_Challenge", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15795426-1.html.csv", "action": "ordinal", "sent": "the second highest capacity in the k league challenge was when the city was goyang .", "annotation": {"row": "4", "col": "5", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "capacity", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; capacity ; 2 }"}, "team"], "result": "goyang hi fc", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; capacity ; 2 } ; team }"}, "goyang hi fc"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; capacity ; 2 } ; team } ; goyang hi fc } = true", "tointer": "select the row whose capacity record of all rows is 2nd maximum . the team record of this row is goyang hi fc ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; capacity ; 2 } ; team } ; goyang hi fc } = true", "interpret": "select the row whose capacity record of all rows is 2nd maximum . the team record of this row is goyang hi fc .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "capacity_5": 5, "2_6": 6, "team_7": 7, "goyang hi fc_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "capacity_5": "capacity", "2_6": "2", "team_7": "team", "goyang hi fc_8": "goyang hi fc"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "capacity_5": [0], "2_6": [0], "team_7": [1], "goyang hi fc_8": [2]}, "table_header": ["team", "city", "state", "home venue", "capacity"], "table_cont": [["fc anyang", "anyang", "gyeonggi", "anyang stadium", "17143"], ["bucheon fc 1995", "bucheon", "gyeonggi", "bucheon stadium", "34545"], ["chungju hummel fc", "chungju", "chungbuk", "chungju stadium", "15000"], ["goyang hi fc", "goyang", "gyeonggi", "goyang stadium", "41311"], ["gwangju fc", "gwangju", "jeolla", "gwangju world cup stadium", "44118"], ["police fc", "n / a", "n / a", "n / a", "n / a"], ["sangju sangmu", "sangju", "gyeongbuk", "sangju civic stadium", "15042"], ["suwon fc", "suwon", "gyeonggi", "suwon sports complex", "24670"]], "query": "eq { hop { nth_argmax { all_rows ; capacity ; 2 } ; team } ; goyang hi fc } = true", "question": "the second highest capacity in the k league challenge was when the city was goyang ."}, {"topic": "ali al saadi", "wiki": "https://en.wikipedia.org/wiki/Ali_Al_Saadi", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17004178-1.html.csv", "action": "count", "sent": "among the games played by ali al saadi in beirut , he won two of them .", "annotation": {"scope": "subset", "criterion": "not_equal", "value": "win", "result": "2", "col": "4", "subset": {"col": "2", "criterion": "equal", "value": "beirut"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_not_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "beirut"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; venue ; beirut }", "tointer": "select the rows whose venue record fuzzily matches to beirut ."}, "result", "win"], "result": null, "ind": 1, "tointer": "select the rows whose venue record fuzzily matches to beirut . among these rows , select the rows whose result record does not match to win .", "tostr": "filter_not_eq { filter_eq { all_rows ; venue ; beirut } ; result ; win }"}], "result": "2", "ind": 2, "tostr": "count { filter_not_eq { filter_eq { all_rows ; venue ; beirut } ; result ; win } }", "tointer": "select the rows whose venue record fuzzily matches to beirut . among these rows , select the rows whose result record does not match to win . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_not_eq { filter_eq { all_rows ; venue ; beirut } ; result ; win } } ; 2 } = true", "tointer": "select the rows whose venue record fuzzily matches to beirut . among these rows , select the rows whose result record does not match to win . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_not_eq { filter_eq { all_rows ; venue ; beirut } ; result ; win } } ; 2 } = true", "interpret": "select the rows whose venue record fuzzily matches to beirut . among these rows , select the rows whose result record does not match to win . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_not_eq_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "venue_6": 6, "beirut_7": 7, "result_8": 8, "win_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_not_eq_1": "filter_str_not_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "venue_6": "venue", "beirut_7": "beirut", "result_8": "result", "win_9": "win", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_not_eq_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "venue_6": [0], "beirut_7": [0], "result_8": [1], "win_9": [1], "2_10": [3]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["19 august 2009", "new delhi", "1 - 0", "win", "2009 nehru cup"], ["22 august 2009", "new delhi", "3 - 4", "loss", "2009 nehru cup"], ["23 july 2011", "beirut", "4 - 0", "win", "2014 fifa world cup qualification"], ["15 november 2011", "beirut", "2 - 1", "win", "2014 fifa world cup qualification"], ["18 may 2012", "beirut", "1 - 2", "loss", "friendly"], ["8 june 2012", "beirut", "1 - 1", "draw", "2014 fifa world cup qualification"]], "query": "eq { count { filter_not_eq { filter_eq { all_rows ; venue ; beirut } ; result ; win } } ; 2 } = true", "question": "among the games played by ali al saadi in beirut , he won two of them ."}, {"topic": "2010 nba all - star game", "wiki": "https://en.wikipedia.org/wiki/2010_NBA_All-Star_Game", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15753220-17.html.csv", "action": "count", "sent": "in the 2010 nba all star game , there were 4 players who had a height of 6-5 .", "annotation": {"scope": "all", "criterion": "equal", "value": "6 - 5", "result": "4", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "height", "6 - 5"], "result": null, "ind": 0, "tointer": "select the rows whose height record fuzzily matches to 6 - 5 .", "tostr": "filter_eq { all_rows ; height ; 6 - 5 }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; height ; 6 - 5 } }", "tointer": "select the rows whose height record fuzzily matches to 6 - 5 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; height ; 6 - 5 } } ; 4 } = true", "tointer": "select the rows whose height record fuzzily matches to 6 - 5 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; height ; 6 - 5 } } ; 4 } = true", "interpret": "select the rows whose height record fuzzily matches to 6 - 5 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "height_5": 5, "6 - 5_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "height_5": "height", "6 - 5_6": "6 - 5", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "height_5": [0], "6 - 5_6": [0], "4_7": [2]}, "table_header": ["pos", "player", "team", "height", "weight"], "table_cont": [["g", "pat carroll", "iowa energy", "6 - 5", "190"], ["f", "trey gilder", "maine red claws", "6 - 9", "185"], ["f", "carlos powell", "albuquerque thunderbirds", "6 - 7", "225"], ["f", "romel beck", "dakota wizards", "6 - 8", "195"], ["f", "brian butch", "bakersfield jam", "6 - 11", "240"], ["f", "desmon farmer", "reno bighorns", "6 - 5", "210"], ["f", "mike harris", "rio grande valley vipers", "6 - 6", "235"], ["g", "donell taylor", "idaho stampede", "6 - 5", "215"], ["g", "curtis jerrells", "austin toros", "6 - 1", "195"], ["g", "mustafa shakur", "tulsa 66ers", "6 - 3", "190"], ["f", "diamon simpson", "los angeles d - fenders", "6 - 7", "230"], ["f", "reggie williams", "sioux falls skyforce", "6 - 6", "210"], ["g", "dontell jefferson", "utah flash", "6 - 5", "190"]], "query": "eq { count { filter_eq { all_rows ; height ; 6 - 5 } } ; 4 } = true", "question": "in the 2010 nba all star game , there were 4 players who had a height of 6-5 ."}, {"topic": "2003 new england patriots season", "wiki": "https://en.wikipedia.org/wiki/2003_New_England_Patriots_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10716158-1.html.csv", "action": "unique", "sent": "spencer nead was the only player whose position was tight end .", "annotation": {"scope": "all", "row": "8", "col": "4", "col_other": "3", "criterion": "equal", "value": "tight end", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "tight end"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to tight end .", "tostr": "filter_eq { all_rows ; position ; tight end }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; position ; tight end } }", "tointer": "select the rows whose position record fuzzily matches to tight end . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "tight end"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to tight end .", "tostr": "filter_eq { all_rows ; position ; tight end }"}, "player"], "result": "spencer nead", "ind": 2, "tostr": "hop { filter_eq { all_rows ; position ; tight end } ; player }"}, "spencer nead"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; position ; tight end } ; player } ; spencer nead }", "tointer": "the player record of this unqiue row is spencer nead ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; position ; tight end } } ; eq { hop { filter_eq { all_rows ; position ; tight end } ; player } ; spencer nead } } = true", "tointer": "select the rows whose position record fuzzily matches to tight end . there is only one such row in the table . the player record of this unqiue row is spencer nead ."}, "logic_str": "and { only { filter_eq { all_rows ; position ; tight end } } ; eq { hop { filter_eq { all_rows ; position ; tight end } ; player } ; spencer nead } } = true", "interpret": "select the rows whose position record fuzzily matches to tight end . there is only one such row in the table . the player record of this unqiue row is spencer nead .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "position_7": 7, "tight end_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "spencer nead_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "position_7": "position", "tight end_8": "tight end", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "spencer nead_10": "spencer nead"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "position_7": [0], "tight end_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "spencer nead_10": [3]}, "table_header": ["round", "overall", "player", "position", "college"], "table_cont": [["1", "13", "ty warren", "defensive tackle", "texas a & m"], ["2", "36", "eugene wilson", "cornerback", "illinois"], ["2", "45", "bethel johnson", "wide receiver", "texas a & m"], ["4", "117", "dan klecko", "defensive tackle", "temple"], ["4", "120", "asante samuel", "cornerback", "central florida"], ["5", "164", "dan koppen", "center", "boston college"], ["6", "201", "kliff kingsbury", "quarterback", "texas tech"], ["7", "234", "spencer nead", "tight end", "byu"], ["7", "239", "tully banta - cain", "linebacker", "california"], ["7", "243", "ethan kelley", "defensive tackle", "baylor"]], "query": "and { only { filter_eq { all_rows ; position ; tight end } } ; eq { hop { filter_eq { all_rows ; position ; tight end } ; player } ; spencer nead } } = true", "question": "spencer nead was the only player whose position was tight end ."}, {"topic": "indiana high school athletics conferences : mid - eastern - northwestern", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Mid-Eastern_%E2%80%93_Northwestern", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18942405-6.html.csv", "action": "comparative", "sent": "the school martinsville has a larger enrollment than the school mooresville .", "annotation": {"row_1": "4", "row_2": "5", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "school", "martinsville"], "result": null, "ind": 0, "tointer": "select the rows whose school record fuzzily matches to martinsville .", "tostr": "filter_eq { all_rows ; school ; martinsville }"}, "enrollment"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; school ; martinsville } ; enrollment }", "tointer": "select the rows whose school record fuzzily matches to martinsville . take the enrollment record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "school", "mooresville"], "result": null, "ind": 1, "tointer": "select the rows whose school record fuzzily matches to mooresville .", "tostr": "filter_eq { all_rows ; school ; mooresville }"}, "enrollment"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; school ; mooresville } ; enrollment }", "tointer": "select the rows whose school record fuzzily matches to mooresville . take the enrollment record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; school ; martinsville } ; enrollment } ; hop { filter_eq { all_rows ; school ; mooresville } ; enrollment } } = true", "tointer": "select the rows whose school record fuzzily matches to martinsville . take the enrollment record of this row . select the rows whose school record fuzzily matches to mooresville . take the enrollment record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; school ; martinsville } ; enrollment } ; hop { filter_eq { all_rows ; school ; mooresville } ; enrollment } } = true", "interpret": "select the rows whose school record fuzzily matches to martinsville . take the enrollment record of this row . select the rows whose school record fuzzily matches to mooresville . take the enrollment record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "school_7": 7, "martinsville_8": 8, "enrollment_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "school_11": 11, "mooresville_12": 12, "enrollment_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "school_7": "school", "martinsville_8": "martinsville", "enrollment_9": "enrollment", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "school_11": "school", "mooresville_12": "mooresville", "enrollment_13": "enrollment"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "school_7": [0], "martinsville_8": [0], "enrollment_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "school_11": [1], "mooresville_12": [1], "enrollment_13": [3]}, "table_header": ["school", "mascot", "location", "enrollment", "ihsaa class", "ihsaa football class", "county"], "table_cont": [["indianapolis decatur central", "hawks", "indianapolis", "1870", "aaaa", "aaaaa", "49 marion"], ["franklin community", "grizzly cubs", "franklin", "1601", "aaaa", "aaaaa", "41 johnson"], ["greenwood", "woodmen", "greenwood", "1167", "aaaa", "aaaa", "41 johnson"], ["martinsville", "artesians", "martinsville", "1661", "aaaa", "aaaaa", "55 morgan"], ["mooresville", "pioneers", "mooresville", "1348", "aaaa", "aaaa", "55 morgan"], ["plainfield", "quakers", "plainfield", "1388", "aaaa", "aaaa", "32 hendricks"], ["whiteland community", "warriors", "whiteland", "1713", "aaaa", "aaaaa", "41 johnson"]], "query": "greater { hop { filter_eq { all_rows ; school ; martinsville } ; enrollment } ; hop { filter_eq { all_rows ; school ; mooresville } ; enrollment } } = true", "question": "the school martinsville has a larger enrollment than the school mooresville ."}, {"topic": "pedro de la rosa", "wiki": "https://en.wikipedia.org/wiki/Pedro_de_la_Rosa", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1226513-3.html.csv", "action": "count", "sent": "pedro was on the team for jaguar racing 3 times .", "annotation": {"scope": "all", "criterion": "equal", "value": "jaguar racing", "result": "3", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "entrant", "jaguar racing"], "result": null, "ind": 0, "tointer": "select the rows whose entrant record fuzzily matches to jaguar racing .", "tostr": "filter_eq { all_rows ; entrant ; jaguar racing }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; entrant ; jaguar racing } }", "tointer": "select the rows whose entrant record fuzzily matches to jaguar racing . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; entrant ; jaguar racing } } ; 3 } = true", "tointer": "select the rows whose entrant record fuzzily matches to jaguar racing . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; entrant ; jaguar racing } } ; 3 } = true", "interpret": "select the rows whose entrant record fuzzily matches to jaguar racing . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "entrant_5": 5, "jaguar racing_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "entrant_5": "entrant", "jaguar racing_6": "jaguar racing", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "entrant_5": [0], "jaguar racing_6": [0], "3_7": [2]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1999", "repsol arrows", "arrows a20", "arrows t2 - f1 3.0 v10", "1"], ["2000", "arrows f1 team", "arrows a21", "supertec fb02 3.0 v10", "2"], ["2001", "jaguar racing", "jaguar r2", "cosworth cr - 3 3.0 v10", "3"], ["2002", "jaguar racing", "jaguar r3", "cosworth cr - 3 3.0 v10", "0"], ["2002", "jaguar racing", "jaguar r3b", "cosworth cr - 4 3.0 v10", "0"], ["2005", "west mclaren mercedes", "mclaren mp4 - 20", "mercedes fo 110r 3.0 v10", "4"], ["2006", "team mclaren mercedes", "mclaren mp4 - 21", "mercedes fo 108s 2.4 v8", "19"], ["2010", "bmw sauber f1 team", "sauber c29", "ferrari 056 2.4 v8", "6"], ["2011", "sauber f1 team", "sauber c30", "ferrari 056 2.4 v8", "0"], ["2012", "hrt f1 team", "hrt f112", "cosworth ca2012 v8", "0"]], "query": "eq { count { filter_eq { all_rows ; entrant ; jaguar racing } } ; 3 } = true", "question": "pedro was on the team for jaguar racing 3 times ."}, {"topic": "superettan", "wiki": "https://en.wikipedia.org/wiki/Superettan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1560673-1.html.csv", "action": "aggregation", "sent": "the football clubs have spent a combined total of 76 seasons in the superettan league .", "annotation": {"scope": "all", "col": "5", "type": "sum", "result": "76", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "number of seasons in superettan"], "result": "76", "ind": 0, "tostr": "sum { all_rows ; number of seasons in superettan }"}, "76"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; number of seasons in superettan } ; 76 } = true", "tointer": "the sum of the number of seasons in superettan record of all rows is 76 ."}, "logic_str": "round_eq { sum { all_rows ; number of seasons in superettan } ; 76 } = true", "interpret": "the sum of the number of seasons in superettan record of all rows is 76 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "number of seasons in superettan_4": 4, "76_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "number of seasons in superettan_4": "number of seasons in superettan", "76_5": "76"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "number of seasons in superettan_4": [0], "76_5": [1]}, "table_header": ["club", "position in 2013", "first season", "first season of current spell", "number of seasons in superettan", "number of seasons in second tier"], "table_cont": [["assyriska ff", "8th", "2000", "2008", "12", "17"], ["degerfors if", "4th", "2005", "2010", "8", "35"], ["gais", "7th", "2001", "2013", "4", "29"], ["hammarby if", "5th", "2010", "2010", "4", "36.5"], ["husqvarna ff", "1st in div 1 s\u00f6dra", "2014", "2014", "0", "1"], ["j\u00f6nk\u00f6pings s\u00f6dra", "11th", "2006", "2006", "8", "35"], ["landskrona bois", "12th", "2000", "2006", "10", "51"], ["ljungskile sk", "9th", "2000", "2009", "9", "14"], ["ik sirius", "1st in div 1 norra", "2007", "2014", "3", "23"], ["syrianska fc", "16th in allsvenskan", "2009", "2014", "2", "2"], ["\u00e4ngelholms ff", "6th", "2002", "2008", "7", "11"], ["\u00f6sters if", "15th in allsvenskan", "2000", "2014", "9", "19"]], "query": "round_eq { sum { all_rows ; number of seasons in superettan } ; 76 } = true", "question": "the football clubs have spent a combined total of 76 seasons in the superettan league ."}, {"topic": "2006 - 07 in welsh rugby union", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_in_Welsh_rugby_union", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27293285-4.html.csv", "action": "unique", "sent": "in the 2006-2007 season , abercynon rfc was the only welsh rugby union team that had two matches end in a draw .", "annotation": {"scope": "all", "row": "12", "col": "4", "col_other": "1", "criterion": "equal", "value": "2", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "drawn", "2"], "result": null, "ind": 0, "tointer": "select the rows whose drawn record is equal to 2 .", "tostr": "filter_eq { all_rows ; drawn ; 2 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; drawn ; 2 } }", "tointer": "select the rows whose drawn record is equal to 2 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "drawn", "2"], "result": null, "ind": 0, "tointer": "select the rows whose drawn record is equal to 2 .", "tostr": "filter_eq { all_rows ; drawn ; 2 }"}, "club"], "result": "abercynon rfc", "ind": 2, "tostr": "hop { filter_eq { all_rows ; drawn ; 2 } ; club }"}, "abercynon rfc"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; drawn ; 2 } ; club } ; abercynon rfc }", "tointer": "the club record of this unqiue row is abercynon rfc ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; drawn ; 2 } } ; eq { hop { filter_eq { all_rows ; drawn ; 2 } ; club } ; abercynon rfc } } = true", "tointer": "select the rows whose drawn record is equal to 2 . there is only one such row in the table . the club record of this unqiue row is abercynon rfc ."}, "logic_str": "and { only { filter_eq { all_rows ; drawn ; 2 } } ; eq { hop { filter_eq { all_rows ; drawn ; 2 } ; club } ; abercynon rfc } } = true", "interpret": "select the rows whose drawn record is equal to 2 . there is only one such row in the table . the club record of this unqiue row is abercynon rfc .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "drawn_7": 7, "2_8": 8, "str_eq_3": 3, "str_hop_2": 2, "club_9": 9, "abercynon rfc_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "drawn_7": "drawn", "2_8": "2", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "club_9": "club", "abercynon rfc_10": "abercynon rfc"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "drawn_7": [0], "2_8": [0], "str_eq_3": [4], "str_hop_2": [3], "club_9": [2], "abercynon rfc_10": [3]}, "table_header": ["club", "played", "won", "drawn", "lost", "points for", "points against", "tries for", "points"], "table_cont": [["club", "played", "won", "drawn", "lost", "points for", "points against", "tries for", "points"], ["beddau rfc", "22", "19", "0", "3", "654", "321", "85", "57"], ["bargoed rfc", "22", "17", "0", "5", "665", "436", "89", "51"], ["newbridge rfc", "22", "17", "0", "5", "516", "281", "63", "51"], ["pontypool rfc", "22", "15", "0", "7", "515", "370", "59", "45"], ["fleur de lys rfc", "22", "10", "0", "12", "422", "523", "49", "30"], ["uwic rfc", "22", "9", "1", "12", "625", "604", "74", "28"], ["newport saracens rfc", "22", "9", "1", "12", "368", "457", "46", "28"], ["llanharan rfc", "22", "9", "0", "13", "546", "565", "66", "27"], ["caerphilly rfc", "22", "9", "0", "14", "402", "572", "47", "24"], ["blackwood rfc", "22", "6", "1", "15", "433", "511", "51", "19"], ["abercynon rfc", "22", "5", "2", "15", "365", "718", "45", "17"], ["ystrad rhondda rfc", "22", "5", "1", "16", "417", "570", "47", "16"]], "query": "and { only { filter_eq { all_rows ; drawn ; 2 } } ; eq { hop { filter_eq { all_rows ; drawn ; 2 } ; club } ; abercynon rfc } } = true", "question": "in the 2006-2007 season , abercynon rfc was the only welsh rugby union team that had two matches end in a draw ."}, {"topic": "marek ham\u0161\u00edk", "wiki": "https://en.wikipedia.org/wiki/Marek_Ham%C5%A1%C3%ADk", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11895475-1.html.csv", "action": "count", "sent": "five of the competitions were friendly match competitions .", "annotation": {"scope": "all", "criterion": "equal", "value": "friendly match", "result": "5", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "competition", "friendly match"], "result": null, "ind": 0, "tointer": "select the rows whose competition record fuzzily matches to friendly match .", "tostr": "filter_eq { all_rows ; competition ; friendly match }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; competition ; friendly match } }", "tointer": "select the rows whose competition record fuzzily matches to friendly match . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; competition ; friendly match } } ; 5 } = true", "tointer": "select the rows whose competition record fuzzily matches to friendly match . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; competition ; friendly match } } ; 5 } = true", "interpret": "select the rows whose competition record fuzzily matches to friendly match . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "competition_5": 5, "friendly match_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "competition_5": "competition", "friendly match_6": "friendly match", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "competition_5": [0], "friendly match_6": [0], "5_7": [2]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["13 october 2007", "\u0161tadi\u00f3n zimn\u00fd , dubnica , slovakia", "1 - 0", "7 - 0", "uefa euro 2008 qualifying"], ["21 november 2007", "stadio olimpico , serravalle , san marino", "3 - 0", "5 - 0", "uefa euro 2008 qualifying"], ["6 september 2008", "teheln\u00e9 pole , bratislava , slovakia", "2 - 0", "2 - 1", "2010 fifa world cup qualification"], ["19 november 2008", "stadium pod dub\u0148om , \u017eilina , slovakia", "1 - 0", "4 - 0", "friendly match"], ["19 november 2008", "stadium pod dub\u0148om , \u017eilina , slovakia", "2 - 0", "4 - 0", "friendly match"], ["10 february 2009", "tsirion stadium , limassol , cyprus", "2 - 0", "2 - 3", "friendly match"], ["5 september 2009", "teheln\u00e9 pole , bratislava , slovakia", "2 - 1", "2 - 2", "2010 fifa world cup qualification"], ["14 november 2009", "teheln\u00e9 pole , bratislava , slovakia", "1 - 0", "1 - 0", "friendly match"], ["15 august 2012", "tre - for park , odense , denmark", "2 - 1", "3 - 1", "friendly match"], ["12 october 2012", "\u0161tadi\u00f3n pasienky , bratislava , slovakia", "1 - 0", "2 - 1", "2014 fifa world cup qualification"], ["10 september 2013", "\u0161tadi\u00f3n pod dub\u0148om , \u017eilina , slovakia", "1 - 0", "1 - 2", "2014 fifa world cup qualification"]], "query": "eq { count { filter_eq { all_rows ; competition ; friendly match } } ; 5 } = true", "question": "five of the competitions were friendly match competitions ."}, {"topic": "list of inter milan records and statistics", "wiki": "https://en.wikipedia.org/wiki/List_of_Inter_Milan_records_and_statistics", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17160236-2.html.csv", "action": "comparative", "sent": "in terms of inter milan records and statistics , benito lorenzi was ranked two positions better than christian vieri .", "annotation": {"row_1": "6", "row_2": "8", "col": "1", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "2", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "benito lorenzi"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to benito lorenzi .", "tostr": "filter_eq { all_rows ; name ; benito lorenzi }"}, "rank"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; benito lorenzi } ; rank }", "tointer": "select the rows whose name record fuzzily matches to benito lorenzi . take the rank record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "christian vieri"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to christian vieri .", "tostr": "filter_eq { all_rows ; name ; christian vieri }"}, "rank"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; christian vieri } ; rank }", "tointer": "select the rows whose name record fuzzily matches to christian vieri . take the rank record of this row ."}], "result": "-2", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; name ; benito lorenzi } ; rank } ; hop { filter_eq { all_rows ; name ; christian vieri } ; rank } }"}, "-2"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; name ; benito lorenzi } ; rank } ; hop { filter_eq { all_rows ; name ; christian vieri } ; rank } } ; -2 } = true", "tointer": "select the rows whose name record fuzzily matches to benito lorenzi . take the rank record of this row . select the rows whose name record fuzzily matches to christian vieri . take the rank record of this row . the second record is 2 larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; name ; benito lorenzi } ; rank } ; hop { filter_eq { all_rows ; name ; christian vieri } ; rank } } ; -2 } = true", "interpret": "select the rows whose name record fuzzily matches to benito lorenzi . take the rank record of this row . select the rows whose name record fuzzily matches to christian vieri . take the rank record of this row . the second record is 2 larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "name_8": 8, "benito lorenzi_9": 9, "rank_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "name_12": 12, "christian vieri_13": 13, "rank_14": 14, "-2_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "name_8": "name", "benito lorenzi_9": "benito lorenzi", "rank_10": "rank", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "name_12": "name", "christian vieri_13": "christian vieri", "rank_14": "rank", "-2_15": "-2"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "name_8": [0], "benito lorenzi_9": [0], "rank_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "name_12": [1], "christian vieri_13": [1], "rank_14": [3], "-2_15": [5]}, "table_header": ["rank", "name", "years", "league", "total"], "table_cont": [["1", "giuseppe meazza", "1927 - 1940 1946 - 1947", "247", "284"], ["2", "alessandro altobelli", "1977 - 1988", "128", "209"], ["3", "roberto boninsegna", "1969 - 1976", "113", "171"], ["4", "sandro mazzola", "1960 - 1977", "116", "160"], ["5", "luigi cevenini", "1912 - 1915 1919 - 1921 1922 - 1927", "158", "158"], ["6", "benito lorenzi", "1947 - 1958", "138", "143"], ["7", "istv\u00e1n nyers", "1948 - 1954", "133", "133"], ["8", "christian vieri", "1999 - 2005", "103", "123"], ["9", "ermanno aebi", "1909 - 1915 1919 - 1923", "106", "106"], ["10", "mario corso", "1958 - 1973", "75", "94"]], "query": "eq { diff { hop { filter_eq { all_rows ; name ; benito lorenzi } ; rank } ; hop { filter_eq { all_rows ; name ; christian vieri } ; rank } } ; -2 } = true", "question": "in terms of inter milan records and statistics , benito lorenzi was ranked two positions better than christian vieri ."}, {"topic": "lesser antilles", "wiki": "https://en.wikipedia.org/wiki/Lesser_Antilles", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-160659-1.html.csv", "action": "unique", "sent": "in the lesser antilles 2005 antiqua and barbuda in the subdivison redonda is the only place with a 0 for the population .", "annotation": {"scope": "all", "row": "3", "col": "4", "col_other": "2", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "population ( 1 july 2005 est )", "0"], "result": null, "ind": 0, "tointer": "select the rows whose population ( 1 july 2005 est ) record is equal to 0 .", "tostr": "filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } }", "tointer": "select the rows whose population ( 1 july 2005 est ) record is equal to 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "population ( 1 july 2005 est )", "0"], "result": null, "ind": 0, "tointer": "select the rows whose population ( 1 july 2005 est ) record is equal to 0 .", "tostr": "filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 }"}, "subdivisions"], "result": "redonda", "ind": 2, "tostr": "hop { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } ; subdivisions }"}, "redonda"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } ; subdivisions } ; redonda }", "tointer": "the subdivisions record of this unqiue row is redonda ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } } ; eq { hop { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } ; subdivisions } ; redonda } } = true", "tointer": "select the rows whose population ( 1 july 2005 est ) record is equal to 0 . there is only one such row in the table . the subdivisions record of this unqiue row is redonda ."}, "logic_str": "and { only { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } } ; eq { hop { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } ; subdivisions } ; redonda } } = true", "interpret": "select the rows whose population ( 1 july 2005 est ) record is equal to 0 . there is only one such row in the table . the subdivisions record of this unqiue row is redonda .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "population (1 july 2005 est)_7": 7, "0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "subdivisions_9": 9, "redonda_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "population (1 july 2005 est)_7": "population ( 1 july 2005 est )", "0_8": "0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "subdivisions_9": "subdivisions", "redonda_10": "redonda"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "population (1 july 2005 est)_7": [0], "0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "subdivisions_9": [2], "redonda_10": [3]}, "table_header": ["name", "subdivisions", "area ( km square )", "population ( 1 july 2005 est )", "population density ( per km square )", "capital"], "table_cont": [["antigua and barbuda", "parishes", "440", "85632", "195", "st john 's"], ["antigua and barbuda", "barbuda", "161", "1370", "9.65", "codrington"], ["antigua and barbuda", "redonda", "2", "0", "0", "n / a"], ["barbados", "parishes", "431", "284589", "660", "bridgetown"], ["dominica", "parishes", "754", "72660", "96.3", "roseau"], ["grenada", "parishes", "344", "110000", "319.8", "st georges"], ["saint kitts and nevis", "parishes", "261", "42696", "163.5", "basseterre"], ["saint kitts and nevis", "nevis", "93", "12106", "130.1", "charlestown"], ["saint lucia", "quarters", "616", "173765", "282", "castries"], ["saint vincent and the grenadines", "parishes", "389", "120000", "308.4", "kingstown"], ["trinidad and tobago", "regional corporations", "5131", "1299953", "253.3", "port of spain"], ["trinidad and tobago", "tobago", "300", "54000", "180", "scarborough"]], "query": "and { only { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } } ; eq { hop { filter_eq { all_rows ; population ( 1 july 2005 est ) ; 0 } ; subdivisions } ; redonda } } = true", "question": "in the lesser antilles 2005 antiqua and barbuda in the subdivison redonda is the only place with a 0 for the population ."}, {"topic": "outline of denmark", "wiki": "https://en.wikipedia.org/wiki/Outline_of_Denmark", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16278602-1.html.csv", "action": "superlative", "sent": "the central denmark region has the highest area of any region of denmark .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "area ( km square )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; area ( km square ) }"}, "english name"], "result": "central denmark region", "ind": 1, "tostr": "hop { argmax { all_rows ; area ( km square ) } ; english name }"}, "central denmark region"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; area ( km square ) } ; english name } ; central denmark region } = true", "tointer": "select the row whose area ( km square ) record of all rows is maximum . the english name record of this row is central denmark region ."}, "logic_str": "eq { hop { argmax { all_rows ; area ( km square ) } ; english name } ; central denmark region } = true", "interpret": "select the row whose area ( km square ) record of all rows is maximum . the english name record of this row is central denmark region .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "area (km square)_5": 5, "english name_6": 6, "central denmark region_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "area (km square)_5": "area ( km square )", "english name_6": "english name", "central denmark region_7": "central denmark region"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "area (km square)_5": [0], "english name_6": [1], "central denmark region_7": [2]}, "table_header": ["danish name", "english name", "seat of administration", "largest city", "population ( january 1 , 2008 )", "area ( km square )", "pop density ( per km square )"], "table_cont": [["region hovedstaden", "capital region of denmark", "hiller\u00f8d", "copenhagen", "1645825", "2561", "642.6"], ["region midtjylland", "central denmark region", "viborg", "\u00e5rhus", "1237041", "13142", "94.2"], ["region nordjylland", "north denmark region", "aalborg", "aalborg", "578839", "7927", "73.2"], ["region sj\u00e6lland", "region zealand", "sor\u00f8", "roskilde", "819427", "7273", "112.7"], ["region syddanmark", "region of southern denmark", "vejle", "odense", "1194659", "12191", "97.99"]], "query": "eq { hop { argmax { all_rows ; area ( km square ) } ; english name } ; central denmark region } = true", "question": "the central denmark region has the highest area of any region of denmark ."}, {"topic": "powerade tigers all - time roster", "wiki": "https://en.wikipedia.org/wiki/Powerade_Tigers_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15463188-2.html.csv", "action": "count", "sent": "there are 12 listed players in the powerade tigers all - time roster .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "12", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "name"], "result": null, "ind": 0, "tointer": "select the rows whose name record is arbitrary .", "tostr": "filter_all { all_rows ; name }"}], "result": "12", "ind": 1, "tostr": "count { filter_all { all_rows ; name } }", "tointer": "select the rows whose name record is arbitrary . the number of such rows is 12 ."}, "12"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; name } } ; 12 } = true", "tointer": "select the rows whose name record is arbitrary . the number of such rows is 12 ."}, "logic_str": "eq { count { filter_all { all_rows ; name } } ; 12 } = true", "interpret": "select the rows whose name record is arbitrary . the number of such rows is 12 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "name_5": 5, "12_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "name_5": "name", "12_6": "12"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "name_5": [0], "12_6": [2]}, "table_header": ["name", "position", "number", "season", "acquisition via"], "table_cont": [["edwin bacani", "guard", "88", "2006", "trade"], ["froilan baguion", "guard", "17", "2008", "free agency"], ["estong ballesteros", "forward", "16", "2002", "free agency"], ["bryant basemore", "guard", "8", "2002", "import"], ["nic belasco", "forward", "3 , 33", "2008 - 2009 , 2012", "trade , free agency"], ["rashard bell", "forward", "1 , 3", "2007 , 2010", "import"], ["chris bolado", "center", "24", "2002 - 2003", "free agency"], ["ken bono", "center", "7", "2009 - 2010", "trade"], ["lawrence bonus", "center", "10", "2008 - 2009", "free agency"], ["torraye braggs", "center", "50", "2002", "import"], ["lowell briones", "forward", "4", "2002", "free agency"], ["ronjay buenafe", "guard", "9", "2007 - 2009", "rookie draft"]], "query": "eq { count { filter_all { all_rows ; name } } ; 12 } = true", "question": "there are 12 listed players in the powerade tigers all - time roster ."}, {"topic": "extreme engineering", "wiki": "https://en.wikipedia.org/wiki/Extreme_Engineering", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1792122-11.html.csv", "action": "count", "sent": "there was a total of 4 episodes that aired during april of 2011 .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "april", "result": "4", "col": "7", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "original air date", "april"], "result": null, "ind": 0, "tointer": "select the rows whose original air date record fuzzily matches to april .", "tostr": "filter_eq { all_rows ; original air date ; april }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; original air date ; april } }", "tointer": "select the rows whose original air date record fuzzily matches to april . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; original air date ; april } } ; 4 } = true", "tointer": "select the rows whose original air date record fuzzily matches to april . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; original air date ; april } } ; 4 } = true", "interpret": "select the rows whose original air date record fuzzily matches to april . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "original air date_5": 5, "april_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "original air date_5": "original air date", "april_6": "april", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "original air date_5": [0], "april_6": [0], "4_7": [2]}, "table_header": ["no in series", "no in season", "title", "country", "project", "status at production", "original air date"], "table_cont": [["70", "1", "rebuilding new york city 's subway", "united states", "new york city subway expansion", "under construction", "april 8 , 2011"], ["71", "2", "drought - proofing australia", "australia", "wonthaggi desalination plant", "under construction", "april 15 , 2011"], ["72", "3", "azerbaijan 's amazing transformation", "azerbaijan", "flame towers and heydar aliyev cultural centre", "under construction", "april 22 , 2011"], ["73", "4", "london 's olympic aquatic stadium", "united kingdom", "london aquatics centre", "under construction", "april 29 , 2011"], ["74", "5", "constructing serbia 's largest bridge", "serbia", "ada bridge", "under construction", "june 18 , 2011"], ["75", "6", "amsterdam 's futuristic floating city", "netherlands", "netherlands land expansion", "under construction", "june 25 , 2011"], ["76", "7", "building mumbai 's modern airport", "india", "chhatrapati shivaji international airport", "under construction", "july 2 , 2011"]], "query": "eq { count { filter_eq { all_rows ; original air date ; april } } ; 4 } = true", "question": "there was a total of 4 episodes that aired during april of 2011 ."}, {"topic": "1983 miami dolphins season", "wiki": "https://en.wikipedia.org/wiki/1983_Miami_Dolphins_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16023753-2.html.csv", "action": "majority", "sent": "the majority of games in the 1983 miami dolphins season ended in wins for the dolphins .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "fuzzily_match", "value": "w", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "w"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to w .", "tostr": "most_eq { all_rows ; result ; w } = true"}, "logic_str": "most_eq { all_rows ; result ; w } = true", "interpret": "for the result records of all rows , most of them fuzzily match to w .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "w_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "w_4": "w"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "w_4": [0]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 4 , 1983", "buffalo bills", "w 12 - 0", "78715"], ["2", "september 11 , 1983", "new england patriots", "w 34 - 24", "59343"], ["3", "september 19 , 1983", "los angeles raiders", "l 27 - 14", "57796"], ["4", "september 25 , 1983", "kansas city chiefs", "w 14 - 6", "50785"], ["5", "october 2 , 1983", "new orleans saints", "l 17 - 7", "66489"], ["6", "october 9 , 1983", "buffalo bills", "l 38 - 35", "59948"], ["7", "october 16 , 1983", "new york jets", "w 32 - 14", "58615"], ["8", "october 23 , 1983", "baltimore colts", "w 21 - 7", "32343"], ["9", "october 30 , 1983", "los angeles rams", "w 30 - 14", "72175"], ["10", "november 6 , 1983", "san francisco 49ers", "w 20 - 17", "57832"], ["11", "november 13 , 1983", "new england patriots", "l 17 - 6", "60771"], ["12", "november 20 , 1983", "baltimore colts", "w 37 - 0", "54482"], ["13", "november 28 , 1983", "cincinnati bengals", "w 38 - 14", "74506"], ["14", "december 4 , 1983", "houston oilers", "w 24 - 17", "39434"], ["15", "december 10 , 1983", "atlanta falcons", "w 31 - 24", "56725"], ["16", "december 16 , 1983", "new york jets", "w 34 - 14", "59975"]], "query": "most_eq { all_rows ; result ; w } = true", "question": "the majority of games in the 1983 miami dolphins season ended in wins for the dolphins ."}, {"topic": "2006 asp world tour", "wiki": "https://en.wikipedia.org/wiki/2006_ASP_World_Tour", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16135024-3.html.csv", "action": "count", "sent": "seven of the individuals that were the runner up were from aus .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "aus", "result": "7", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "runner - up", "aus"], "result": null, "ind": 0, "tointer": "select the rows whose runner - up record fuzzily matches to aus .", "tostr": "filter_eq { all_rows ; runner - up ; aus }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; runner - up ; aus } }", "tointer": "select the rows whose runner - up record fuzzily matches to aus . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; runner - up ; aus } } ; 7 } = true", "tointer": "select the rows whose runner - up record fuzzily matches to aus . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; runner - up ; aus } } ; 7 } = true", "interpret": "select the rows whose runner - up record fuzzily matches to aus . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "runner - up_5": 5, "aus_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "runner - up_5": "runner - up", "aus_6": "aus", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "runner - up_5": [0], "aus_6": [0], "7_7": [2]}, "table_header": ["date", "location", "country", "event", "winner", "runner - up"], "table_cont": [["february 28 - march 12", "gold coast", "australia", "roxy pro gold coast", "melanie redman - carr ( aus )", "layne beachley ( aus )"], ["april 22 - april 29", "tavarua", "fiji", "roxy pro fiji", "melanie redman - carr ( aus )", "layne beachley ( aus )"], ["may 4 - may 16", "teahupoo , tahiti", "french polynesia", "billabong pro tahiti women", "melanie redman - carr ( aus )", "chelsea georgeson ( aus )"], ["august 21 - august 28", "itacar\u00e3", "brazil", "billabong girls pro", "layne beachley ( aus )", "jessi miley - dyer ( aus )"], ["august 31 - september 5", "hossegor", "france", "rip curl pro mademoiselle", "chelsea georgeson ( aus )", "melanie redman - carr ( aus )"], ["october 9 - october 15", "manly beach", "australia", "havaianas beachley classic", "stephanie gilmore ( aus )", "layne beachley ( aus )"], ["november 24 - december 6", "sunset beach , hawaii", "united states", "roxy pro", "melanie bartels ( haw )", "stephanie gilmore ( aus )"], ["december 8 - december 20", "honolua bay , hawaii", "united states", "billabong pro", "jessi miley - dyer ( aus )", "keala kennelly ( haw )"]], "query": "eq { count { filter_eq { all_rows ; runner - up ; aus } } ; 7 } = true", "question": "seven of the individuals that were the runner up were from aus ."}, {"topic": "1956 - 57 tunisian ligue professionnelle 1", "wiki": "https://en.wikipedia.org/wiki/1956%E2%80%9357_Tunisian_Ligue_Professionnelle_1", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18314162-2.html.csv", "action": "majority", "sent": "all clubs which participated in the 1956 - 57 tunisian ligue professionnelle 1 season games each played 22 matches .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "22", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "played", "22"], "result": true, "ind": 0, "tointer": "for the played records of all rows , most of them are equal to 22 .", "tostr": "most_eq { all_rows ; played ; 22 } = true"}, "logic_str": "most_eq { all_rows ; played ; 22 } = true", "interpret": "for the played records of all rows , most of them are equal to 22 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "played_3": 3, "22_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "played_3": "played", "22_4": "22"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "played_3": [0], "22_4": [0]}, "table_header": ["pos", "club", "points", "played", "wins", "draw", "lost"], "table_cont": [["1", "stade tunisien", "58", "22", "16", "4", "1"], ["2", "esp\u00e9rance de tunis", "55", "22", "13", "7", "2"], ["3", "etoile sportive du sahel ( ess )", "51", "22", "14", "1", "7"], ["4", "club africain", "47", "22", "9", "7", "6"], ["5", "jeunesse sportive methouienne", "47", "22", "8", "9", "5"], ["6", "club sportif de hammam - lif", "43", "22", "8", "5", "9"], ["7", "union sportive de ferryville", "43", "22", "7", "7", "8"], ["8", "club athl\u00e9tique bizertin", "41", "22", "7", "5", "10"], ["9", "olympique tunisien", "41", "22", "7", "5", "10"], ["10", "club tunisien", "39", "22", "5", "7", "10"], ["11", "patriote football club de bizerte", "37", "22", "4", "7", "11"], ["12", "sfax railways sports", "24", "22", "1", "2", "19"]], "query": "most_eq { all_rows ; played ; 22 } = true", "question": "all clubs which participated in the 1956 - 57 tunisian ligue professionnelle 1 season games each played 22 matches ."}, {"topic": "1983 miami dolphins season", "wiki": "https://en.wikipedia.org/wiki/1983_Miami_Dolphins_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16023753-2.html.csv", "action": "aggregation", "sent": "the average attendance at games in the 1983 miami dolphins season was 58746 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "58746", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "attendance"], "result": "58746", "ind": 0, "tostr": "avg { all_rows ; attendance }"}, "58746"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; attendance } ; 58746 } = true", "tointer": "the average of the attendance record of all rows is 58746 ."}, "logic_str": "round_eq { avg { all_rows ; attendance } ; 58746 } = true", "interpret": "the average of the attendance record of all rows is 58746 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "attendance_4": 4, "58746_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "attendance_4": "attendance", "58746_5": "58746"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "attendance_4": [0], "58746_5": [1]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 4 , 1983", "buffalo bills", "w 12 - 0", "78715"], ["2", "september 11 , 1983", "new england patriots", "w 34 - 24", "59343"], ["3", "september 19 , 1983", "los angeles raiders", "l 27 - 14", "57796"], ["4", "september 25 , 1983", "kansas city chiefs", "w 14 - 6", "50785"], ["5", "october 2 , 1983", "new orleans saints", "l 17 - 7", "66489"], ["6", "october 9 , 1983", "buffalo bills", "l 38 - 35", "59948"], ["7", "october 16 , 1983", "new york jets", "w 32 - 14", "58615"], ["8", "october 23 , 1983", "baltimore colts", "w 21 - 7", "32343"], ["9", "october 30 , 1983", "los angeles rams", "w 30 - 14", "72175"], ["10", "november 6 , 1983", "san francisco 49ers", "w 20 - 17", "57832"], ["11", "november 13 , 1983", "new england patriots", "l 17 - 6", "60771"], ["12", "november 20 , 1983", "baltimore colts", "w 37 - 0", "54482"], ["13", "november 28 , 1983", "cincinnati bengals", "w 38 - 14", "74506"], ["14", "december 4 , 1983", "houston oilers", "w 24 - 17", "39434"], ["15", "december 10 , 1983", "atlanta falcons", "w 31 - 24", "56725"], ["16", "december 16 , 1983", "new york jets", "w 34 - 14", "59975"]], "query": "round_eq { avg { all_rows ; attendance } ; 58746 } = true", "question": "the average attendance at games in the 1983 miami dolphins season was 58746 ."}, {"topic": "deccan chargers", "wiki": "https://en.wikipedia.org/wiki/Deccan_Chargers", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15868081-6.html.csv", "action": "superlative", "sent": "the season in which the deccan chargers played 16 games and won 9 has the highest win percentage .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "1,2", "subset": null}, "logic": {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "win %"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; win % }"}, "played"], "result": "16", "ind": 1, "tostr": "hop { argmax { all_rows ; win % } ; played }"}, "16"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; win % } ; played } ; 16 }", "tointer": "select the row whose win % record of all rows is maximum . the played record of this row is 16 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "win %"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; win % }"}, "wins"], "result": "9", "ind": 3, "tostr": "hop { argmax { all_rows ; win % } ; wins }"}, "9"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; win % } ; wins } ; 9 }", "tointer": "the wins record of this row is 9 ."}], "result": true, "ind": 5, "tostr": "and { eq { hop { argmax { all_rows ; win % } ; played } ; 16 } ; eq { hop { argmax { all_rows ; win % } ; wins } ; 9 } } = true", "tointer": "select the row whose win % record of all rows is maximum . the played record of this row is 16 . the wins record of this row is 9 ."}, "logic_str": "and { eq { hop { argmax { all_rows ; win % } ; played } ; 16 } ; eq { hop { argmax { all_rows ; win % } ; wins } ; 9 } } = true", "interpret": "select the row whose win % record of all rows is maximum . the played record of this row is 16 . the wins record of this row is 9 .", "num_func": 7, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "str_eq_2": 2, "str_hop_1": 1, "argmax_0": 0, "all_rows_7": 7, "win %_8": 8, "played_9": 9, "16_10": 10, "str_eq_4": 4, "str_hop_3": 3, "wins_11": 11, "9_12": 12}, "g_ids_features": {"and_5": "and", "result_6": "true", "str_eq_2": "str_eq", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_7": "all_rows", "win %_8": "win %", "played_9": "played", "16_10": "16", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "wins_11": "wins", "9_12": "9"}, "g_adj": {"and_5": [6], "result_6": [], "str_eq_2": [5], "str_hop_1": [2], "argmax_0": [1, 3], "all_rows_7": [0], "win %_8": [0], "played_9": [1], "16_10": [2], "str_eq_4": [5], "str_hop_3": [4], "wins_11": [3], "9_12": [4]}, "table_header": ["played", "wins", "losses", "tied", "win %"], "table_cont": [["ipl", "ipl", "ipl", "ipl", "ipl"], ["14", "2", "12", "0", "14 %"], ["16", "9", "7", "0", "56 %"], ["16", "8", "8", "0", "50 %"], ["14", "6", "8", "0", "42 %"], ["15", "4", "11", "0", "26.67 %"], ["75", "29", "46", "0", "38.67 %"], ["2", "0", "2", "0", "0 %"], ["77", "29", "48", "0", "37.67 %"]], "query": "and { eq { hop { argmax { all_rows ; win % } ; played } ; 16 } ; eq { hop { argmax { all_rows ; win % } ; wins } ; 9 } } = true", "question": "the season in which the deccan chargers played 16 games and won 9 has the highest win percentage ."}, {"topic": "sanya", "wiki": "https://en.wikipedia.org/wiki/Sanya", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1638437-2.html.csv", "action": "comparative", "sent": "hexi district has a higher population density than fenghuang does .", "annotation": {"row_1": "1", "row_2": "5", "col": "7", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "english name", "hexi district"], "result": null, "ind": 0, "tointer": "select the rows whose english name record fuzzily matches to hexi district .", "tostr": "filter_eq { all_rows ; english name ; hexi district }"}, "density"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; english name ; hexi district } ; density }", "tointer": "select the rows whose english name record fuzzily matches to hexi district . take the density record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "english name", "fenghuang"], "result": null, "ind": 1, "tointer": "select the rows whose english name record fuzzily matches to fenghuang .", "tostr": "filter_eq { all_rows ; english name ; fenghuang }"}, "density"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; english name ; fenghuang } ; density }", "tointer": "select the rows whose english name record fuzzily matches to fenghuang . take the density record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; english name ; hexi district } ; density } ; hop { filter_eq { all_rows ; english name ; fenghuang } ; density } } = true", "tointer": "select the rows whose english name record fuzzily matches to hexi district . take the density record of this row . select the rows whose english name record fuzzily matches to fenghuang . take the density record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; english name ; hexi district } ; density } ; hop { filter_eq { all_rows ; english name ; fenghuang } ; density } } = true", "interpret": "select the rows whose english name record fuzzily matches to hexi district . take the density record of this row . select the rows whose english name record fuzzily matches to fenghuang . take the density record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "english name_7": 7, "hexi district_8": 8, "density_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "english name_11": 11, "fenghuang_12": 12, "density_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "english name_7": "english name", "hexi district_8": "hexi district", "density_9": "density", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "english name_11": "english name", "fenghuang_12": "fenghuang", "density_13": "density"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "english name_7": [0], "hexi district_8": [0], "density_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "english name_11": [1], "fenghuang_12": [1], "density_13": [3]}, "table_header": ["english name", "simplified", "traditional", "pinyin", "area", "population", "density"], "table_cont": [["hexi district", "\u6cb3\u897f\u533a", "\u6cb3\u897f\u5340", "h\u00e9x\u012b q\u016b", "10", "134026", "13403"], ["hedong district", "\u6cb3\u4e1c\u533a", "\u6cb3\u6771\u5340", "h\u00e9d\u014dng q\u016b", "35", "147944", "4227"], ["haitangwan", "\u6d77\u68e0\u6e7e\u9547", "\u6d77\u68e0\u7063\u93ae", "h\u01ceit\u00e1ngw\u0101n zh\u00e8n", "254", "44617", "176"], ["jiyang", "\u5409\u9633\u9547", "\u5409\u967d\u93ae", "j\u00edy\u00e1ng zh\u00e8n", "199", "92316", "464"], ["fenghuang", "\u51e4\u51f0\u9547", "\u9cf3\u51f0\u93ae", "f\u00e8nghu\u00e1ng zh\u00e8n", "487", "66801", "137"], ["yacheng", "\u5d16\u57ce\u9547", "\u5d16\u57ce\u93ae", "y\u00e1ch\u00e9ng zh\u00e8n", "383", "74779", "195"], ["tianya", "\u5929\u6daf\u9547", "\u5929\u6daf\u93ae", "ti\u0101ny\u00e1 zh\u00e8n", "269", "34934", "130"], ["yucai", "\u80b2\u624d\u9547", "\u80b2\u624d\u93ae", "y\u00f9c\u00e1i zh\u00e8n", "315", "17515", "56"], ["nantian farm", "\u56fd\u8425\u5357\u7530\u519c\u573a", "\u570b\u71df\u5357\u7530\u8fb2\u5834", "gu\u00f3y\u00edng n\u00e1nti\u00e1n n\u00f3ngch\u01ceng", "nd", "24280", "nd"], ["nanxin farm", "\u56fd\u8425\u5357\u65b0\u519c\u573a", "\u570b\u71df\u5357\u65b0\u8fb2\u5834", "gu\u00f3y\u00edng n\u00e1nx\u012bn n\u00f3ngch\u01ceng", "nd", "16801", "nd"], ["licai farm", "\u56fd\u8425\u7acb\u624d\u519c\u573a", "\u570b\u71df\u7acb\u624d\u8fb2\u5834", "gu\u00f3y\u00edng l\u00ecc\u00e1i n\u00f3ngch\u01ceng", "nd", "16659", "nd"]], "query": "greater { hop { filter_eq { all_rows ; english name ; hexi district } ; density } ; hop { filter_eq { all_rows ; english name ; fenghuang } ; density } } = true", "question": "hexi district has a higher population density than fenghuang does ."}, {"topic": "1932 vfl season", "wiki": "https://en.wikipedia.org/wiki/1932_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790099-5.html.csv", "action": "superlative", "sent": "the event at the brunswick street oval had the highest away team score .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "5", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "away team score"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; away team score }"}, "venue"], "result": "brunswick street oval", "ind": 1, "tostr": "hop { argmax { all_rows ; away team score } ; venue }"}, "brunswick street oval"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; away team score } ; venue } ; brunswick street oval } = true", "tointer": "select the row whose away team score record of all rows is maximum . the venue record of this row is brunswick street oval ."}, "logic_str": "eq { hop { argmax { all_rows ; away team score } ; venue } ; brunswick street oval } = true", "interpret": "select the row whose away team score record of all rows is maximum . the venue record of this row is brunswick street oval .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "away team score_5": 5, "venue_6": 6, "brunswick street oval_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "away team score_5": "away team score", "venue_6": "venue", "brunswick street oval_7": "brunswick street oval"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "away team score_5": [0], "venue_6": [1], "brunswick street oval_7": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "13.14 ( 92 )", "st kilda", "8.10 ( 58 )", "western oval", "14000", "28 may 1932"], ["fitzroy", "12.6 ( 78 )", "geelong", "20.10 ( 130 )", "brunswick street oval", "13000", "28 may 1932"], ["carlton", "13.15 ( 93 )", "collingwood", "11.7 ( 73 )", "princes park", "32000", "28 may 1932"], ["north melbourne", "18.10 ( 118 )", "melbourne", "12.16 ( 88 )", "arden street oval", "12000", "28 may 1932"], ["richmond", "13.18 ( 96 )", "hawthorn", "6.9 ( 45 )", "punt road oval", "10000", "28 may 1932"], ["south melbourne", "14.15 ( 99 )", "essendon", "9.11 ( 65 )", "lake oval", "28000", "28 may 1932"]], "query": "eq { hop { argmax { all_rows ; away team score } ; venue } ; brunswick street oval } = true", "question": "the event at the brunswick street oval had the highest away team score ."}, {"topic": "list of england national rugby union team results 1990 - 99", "wiki": "https://en.wikipedia.org/wiki/List_of_England_national_rugby_union_team_results_1990%E2%80%9399", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18178534-7.html.csv", "action": "unique", "sent": "scotland was the only team to play against the england national rugby union team in edinburgh .", "annotation": {"scope": "all", "row": "3", "col": "4", "col_other": "1", "criterion": "fuzzily_match", "value": "edinburgh", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "edinburgh"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to edinburgh .", "tostr": "filter_eq { all_rows ; venue ; edinburgh }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; venue ; edinburgh } }", "tointer": "select the rows whose venue record fuzzily matches to edinburgh . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "edinburgh"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to edinburgh .", "tostr": "filter_eq { all_rows ; venue ; edinburgh }"}, "opposing teams"], "result": "scotland", "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; edinburgh } ; opposing teams }"}, "scotland"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; venue ; edinburgh } ; opposing teams } ; scotland }", "tointer": "the opposing teams record of this unqiue row is scotland ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; venue ; edinburgh } } ; eq { hop { filter_eq { all_rows ; venue ; edinburgh } ; opposing teams } ; scotland } } = true", "tointer": "select the rows whose venue record fuzzily matches to edinburgh . there is only one such row in the table . the opposing teams record of this unqiue row is scotland ."}, "logic_str": "and { only { filter_eq { all_rows ; venue ; edinburgh } } ; eq { hop { filter_eq { all_rows ; venue ; edinburgh } ; opposing teams } ; scotland } } = true", "interpret": "select the rows whose venue record fuzzily matches to edinburgh . there is only one such row in the table . the opposing teams record of this unqiue row is scotland .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "venue_7": 7, "edinburgh_8": 8, "str_eq_3": 3, "str_hop_2": 2, "opposing teams_9": 9, "scotland_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "venue_7": "venue", "edinburgh_8": "edinburgh", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "opposing teams_9": "opposing teams", "scotland_10": "scotland"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "venue_7": [0], "edinburgh_8": [0], "str_eq_3": [4], "str_hop_2": [3], "opposing teams_9": [2], "scotland_10": [3]}, "table_header": ["opposing teams", "against", "date", "venue", "status"], "table_cont": [["france", "15", "20 / 01 / 1996", "parc des princes , paris", "five nations"], ["wales", "15", "03 / 02 / 1996", "twickenham , london", "five nations"], ["scotland", "9", "02 / 03 / 1996", "murrayfield , edinburgh", "five nations"], ["ireland", "15", "16 / 03 / 1996", "twickenham , london", "five nations"], ["italy", "21", "23 / 11 / 1996", "twickenham , london", "test match"], ["argentina", "18", "14 / 12 / 1996", "twickenham , london", "test match"]], "query": "and { only { filter_eq { all_rows ; venue ; edinburgh } } ; eq { hop { filter_eq { all_rows ; venue ; edinburgh } ; opposing teams } ; scotland } } = true", "question": "scotland was the only team to play against the england national rugby union team in edinburgh ."}, {"topic": "archery at the asian games", "wiki": "https://en.wikipedia.org/wiki/Archery_at_the_Asian_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14769579-3.html.csv", "action": "count", "sent": "the archery competition at the asian games was held in bangkok twice .", "annotation": {"scope": "all", "criterion": "equal", "value": "bangkok", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "location", "bangkok"], "result": null, "ind": 0, "tointer": "select the rows whose location record fuzzily matches to bangkok .", "tostr": "filter_eq { all_rows ; location ; bangkok }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; location ; bangkok } }", "tointer": "select the rows whose location record fuzzily matches to bangkok . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; location ; bangkok } } ; 2 } = true", "tointer": "select the rows whose location record fuzzily matches to bangkok . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; location ; bangkok } } ; 2 } = true", "interpret": "select the rows whose location record fuzzily matches to bangkok . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "location_5": 5, "bangkok_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "location_5": "location", "bangkok_6": "bangkok", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "location_5": [0], "bangkok_6": [0], "2_7": [2]}, "table_header": ["year", "location", "gold", "silver", "bronze"], "table_cont": [["1978", "bangkok", "ichiro shimamura", "yoshiro miyata", "izumi sato"], ["1982", "new delhi", "hiroshi yamamoto", "kim young - woon", "takayoshi matsushita"], ["1986", "seoul", "takayoshi matsushita", "yang chung - hoon", "koo ja - chong"], ["1990", "beijing", "yang chung - hoon", "takayoshi matsushita", "kim sun - bin"], ["1994", "hiroshima", "park kyung - mo", "chung jae - hun", "wu tsung - yi"], ["1998", "bangkok", "han seung - hoon", "kim kyung - ho", "wataru haraguchi"], ["2002", "busan", "hiroshi yamamoto", "yuji hamano", "im dong - hyun"], ["2006", "doha", "im dong - hyun", "tomokazu wakino", "kuo cheng - wei"], ["2010", "guangzhou", "kim woo - jin", "tarundeep rai", "sung chia - chun"]], "query": "eq { count { filter_eq { all_rows ; location ; bangkok } } ; 2 } = true", "question": "the archery competition at the asian games was held in bangkok twice ."}, {"topic": "list of rizzoli & isles episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Rizzoli_%26_Isles_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27969432-3.html.csv", "action": "count", "sent": "three episodes of rizzoli & isles were directed by michael zinberg .", "annotation": {"scope": "all", "criterion": "equal", "value": "michael zinberg", "result": "3", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "directed by", "michael zinberg"], "result": null, "ind": 0, "tointer": "select the rows whose directed by record fuzzily matches to michael zinberg .", "tostr": "filter_eq { all_rows ; directed by ; michael zinberg }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; directed by ; michael zinberg } }", "tointer": "select the rows whose directed by record fuzzily matches to michael zinberg . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; directed by ; michael zinberg } } ; 3 } = true", "tointer": "select the rows whose directed by record fuzzily matches to michael zinberg . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; directed by ; michael zinberg } } ; 3 } = true", "interpret": "select the rows whose directed by record fuzzily matches to michael zinberg . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "directed by_5": 5, "michael zinberg_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "directed by_5": "directed by", "michael zinberg_6": "michael zinberg", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "directed by_5": [0], "michael zinberg_6": [0], "3_7": [2]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "original air date", "production", "us viewers ( in millions )"], "table_cont": [["11", "1", "we do n't need another hero", "michael zinberg", "janet tamaro", "july 11 , 2011", "2 m5601", "6.38"], ["12", "2", "living proof", "bethany rooney", "dee johnson", "july 18 , 2011", "2 m5602", "6.39"], ["13", "3", "sailor man", "michael zinberg", "joel fields", "july 25 , 2011", "2 m5603", "6.04"], ["14", "4", "brown eyed girl", "mark haber", "julie h\u00e3bert", "august 1 , 2011", "2 m5607", "6.45"], ["15", "5", "do n't hate the player", "holly dale", "david gould & janet tamaro", "august 8 , 2011", "2 m5604", "6.46"], ["16", "6", "rebel without a pause", "nelson mccormick", "elizabeth benjamin & janet tamaro", "august 15 , 2011", "2 m5605", "6.74"], ["17", "7", "bloodlines", "michael zinberg", "elizabeth benjamin & dee johnson", "august 22 , 2011", "2 m5606", "6.27"], ["18", "8", "my own worst enemy", "terrence o'hara", "joel fields & emilia serrano", "august 29 , 2011", "2 m5608", "6.71"], ["19", "9", "gone daddy gone", "fred toye", "david gould & dee johnson", "september 5 , 2011", "2 m5609", "6.69"], ["20", "10", "remember me", "randy zisk", "david j north & janet tamaro", "september 12 , 2011", "2 m5610", "5.63"], ["21", "11", "can i get a witness", "andy wolk", "janet tamaro & elizabeth benjamin", "november 28 , 2011", "2 m5611", "4.78"], ["22", "12", "he ai n't heavy , he 's my brother", "steve robin", "david gould & dee johnson", "december 5 , 2011", "2 m5612", "3.86"], ["23", "13", "seventeen ai n't so sweet", "rod holcomb", "shelley meals & darin goldberg", "december 12 , 2011", "2 m5613", "4.91"]], "query": "eq { count { filter_eq { all_rows ; directed by ; michael zinberg } } ; 3 } = true", "question": "three episodes of rizzoli & isles were directed by michael zinberg ."}, {"topic": "media in the quad cities", "wiki": "https://en.wikipedia.org/wiki/Media_in_the_Quad_Cities", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-25034983-2.html.csv", "action": "superlative", "sent": "moody bible institute owns the station with the lowest frequency among the stations that require 1000 w day power .", "annotation": {"scope": "subset", "col_superlative": "1", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "min", "other_col": "4,6", "subset": {"col": "6", "criterion": "equal", "value": "1000"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": [{"func": "filter_eq", "args": ["all_rows", "day power ( w )", "1000"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; day power ( w ) ; 1000 }", "tointer": "select the rows whose day power ( w ) record is equal to 1000 ."}, "freq"], "result": null, "ind": 1, "tostr": "argmin { filter_eq { all_rows ; day power ( w ) ; 1000 } ; freq }"}, "owner"], "result": "moody bible institute", "ind": 2, "tostr": "hop { argmin { filter_eq { all_rows ; day power ( w ) ; 1000 } ; freq } ; owner }"}, "moody bible institute"], "result": true, "ind": 3, "tostr": "eq { hop { argmin { filter_eq { all_rows ; day power ( w ) ; 1000 } ; freq } ; owner } ; moody bible institute } = true", "tointer": "select the rows whose day power ( w ) record is equal to 1000 . select the row whose freq record of these rows is minimum . the owner record of this row is moody bible institute ."}, "logic_str": "eq { hop { argmin { filter_eq { all_rows ; day power ( w ) ; 1000 } ; freq } ; owner } ; moody bible institute } = true", "interpret": "select the rows whose day power ( w ) record is equal to 1000 . select the row whose freq record of these rows is minimum . the owner record of this row is moody bible institute .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "argmin_1": 1, "filter_eq_0": 0, "all_rows_5": 5, "day power ( w )_6": 6, "1000_7": 7, "freq_8": 8, "owner_9": 9, "moody bible institute_10": 10}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "argmin_1": "argmin", "filter_eq_0": "filter_eq", "all_rows_5": "all_rows", "day power ( w )_6": "day power ( w )", "1000_7": "1000", "freq_8": "freq", "owner_9": "owner", "moody bible institute_10": "moody bible institute"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "argmin_1": [2], "filter_eq_0": [1], "all_rows_5": [0], "day power ( w )_6": [0], "1000_7": [0], "freq_8": [1], "owner_9": [2], "moody bible institute_10": [3]}, "table_header": ["freq", "call", "city", "owner", "start", "day power ( w )", "night power", "nickname", "format", "stereo"], "table_cont": [["860", "kwpc", "muscatine", "prairie radio communications", "1947", "250", "8", "voice of muscatine", "soft oldies", "no"], ["960", "wdlm", "east moline", "moody bible institute", "1960", "1000", "102", "wdlm", "christian talk", "no"], ["1170", "kjoc", "davenport", "cumulus", "1946", "1000", "1000", "true oldies 1170", "oldies", "no"], ["1230", "wfxn", "moline", "clear channel", "1946", "1000", "1000", "fox sports 1230", "sports", "no"], ["1270", "wkbf", "rock island", "la jefa latino broadcasting", "1925", "5000", "5000", "la jefa 1270", "regional mexican", "no"]], "query": "eq { hop { argmin { filter_eq { all_rows ; day power ( w ) ; 1000 } ; freq } ; owner } ; moody bible institute } = true", "question": "moody bible institute owns the station with the lowest frequency among the stations that require 1000 w day power ."}, {"topic": "2007 - 08 football league one", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Football_League_One", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28181347-6.html.csv", "action": "majority", "sent": "the majority of managers in football league one departed with mutual consent .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "mutual consent", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "manner of departure", "mutual consent"], "result": true, "ind": 0, "tointer": "for the manner of departure records of all rows , most of them fuzzily match to mutual consent .", "tostr": "most_eq { all_rows ; manner of departure ; mutual consent } = true"}, "logic_str": "most_eq { all_rows ; manner of departure ; mutual consent } = true", "interpret": "for the manner of departure records of all rows , most of them fuzzily match to mutual consent .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "manner of departure_3": 3, "mutual consent_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "manner of departure_3": "manner of departure", "mutual consent_4": "mutual consent"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "manner of departure_3": [0], "mutual consent_4": [0]}, "table_header": ["team", "outgoing manager", "manner of departure", "date of vacancy", "replaced by", "date of appointment", "position in table"], "table_cont": [["carlisle united", "neil mcdonald", "contract terminated", "13 august 2007", "john ward", "2 october 2007", "8th"], ["gillingham", "ronnie jepson", "mutual consent", "9 september 2007", "mark stimson", "1 november 2007", "22nd"], ["port vale", "martin foyle", "mutual consent", "26 september 2007", "lee sinnott", "5 november 2007", "23rd"], ["cheltenham town", "john ward", "mutual consent ( hired by carlisle united )", "2 october 2007", "keith downing", "2 november 2007", "23rd"], ["millwall", "willie donachie", "contract terminated", "8 october 2007", "kenny jackett", "6 november 2007", "24th"], ["swindon town", "paul sturrock", "mutual consent ( hired by plymouth argyle )", "27 november 2007", "maurice malpas", "15 january 2008", "11th"], ["luton town", "kevin blackwell", "contract terminated", "16 january 2008", "mick harford", "16 january 2008", "22nd"], ["huddersfield town", "andy ritchie", "mutual consent", "1 april 2008", "stan ternent", "24 april 2008", "14th"]], "query": "most_eq { all_rows ; manner of departure ; mutual consent } = true", "question": "the majority of managers in football league one departed with mutual consent ."}, {"topic": "forbes global 2000", "wiki": "https://en.wikipedia.org/wiki/Forbes_Global_2000", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1682026-9.html.csv", "action": "comparative", "sent": "royal dutch shell has a higher market value than american international group .", "annotation": {"row_1": "7", "row_2": "3", "col": "8", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "company", "royal dutch shell"], "result": null, "ind": 0, "tointer": "select the rows whose company record fuzzily matches to royal dutch shell .", "tostr": "filter_eq { all_rows ; company ; royal dutch shell }"}, "market value ( billion )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; company ; royal dutch shell } ; market value ( billion ) }", "tointer": "select the rows whose company record fuzzily matches to royal dutch shell . take the market value ( billion ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "company", "american international group"], "result": null, "ind": 1, "tointer": "select the rows whose company record fuzzily matches to american international group .", "tostr": "filter_eq { all_rows ; company ; american international group }"}, "market value ( billion )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; company ; american international group } ; market value ( billion ) }", "tointer": "select the rows whose company record fuzzily matches to american international group . take the market value ( billion ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; company ; royal dutch shell } ; market value ( billion ) } ; hop { filter_eq { all_rows ; company ; american international group } ; market value ( billion ) } } = true", "tointer": "select the rows whose company record fuzzily matches to royal dutch shell . take the market value ( billion ) record of this row . select the rows whose company record fuzzily matches to american international group . take the market value ( billion ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; company ; royal dutch shell } ; market value ( billion ) } ; hop { filter_eq { all_rows ; company ; american international group } ; market value ( billion ) } } = true", "interpret": "select the rows whose company record fuzzily matches to royal dutch shell . take the market value ( billion ) record of this row . select the rows whose company record fuzzily matches to american international group . take the market value ( billion ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "company_7": 7, "royal dutch shell_8": 8, "market value (billion )_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "company_11": 11, "american international group_12": 12, "market value (billion )_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "company_7": "company", "royal dutch shell_8": "royal dutch shell", "market value (billion )_9": "market value ( billion )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "company_11": "company", "american international group_12": "american international group", "market value (billion )_13": "market value ( billion )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "company_7": [0], "royal dutch shell_8": [0], "market value (billion )_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "company_11": [1], "american international group_12": [1], "market value (billion )_13": [3]}, "table_header": ["rank", "company", "country", "industry", "sales ( billion )", "profits ( billion )", "assets ( billion )", "market value ( billion )"], "table_cont": [["1", "citigroup", "usa", "banking", "108.28", "17.05", "1 , 4.10", "247.66"], ["2", "general electric", "usa", "conglomerates", "152.36", "16.59", "750.33", "372.14"], ["3", "american international group", "usa", "insurance", "95.04", "10.91", "776.42", "173.99"], ["4", "bank of america", "usa", "banking", "65.45", "14.14", "1110.46", "188.77"], ["5", "hsbc", "uk", "banking", "62.97", "9.52", "1031.29", "186.74"], ["6", "exxonmobil", "usa", "oil & gas", "263.99", "25.33", "195.26", "405.25"], ["7", "royal dutch shell", "netherlands", "oil & gas", "265.19", "18.54", "193.83", "221.49"], ["8", "bp", "uk", "oil & gas", "285.06", "15.73", "191.11", "231.88"], ["9", "ing group", "netherlands", "diversified financials", "92.01", "8.10", "1175.16", "68.04"], ["10", "toyota", "japan", "automotive", "165.68", "11.13", "211.15", "140.89"]], "query": "greater { hop { filter_eq { all_rows ; company ; royal dutch shell } ; market value ( billion ) } ; hop { filter_eq { all_rows ; company ; american international group } ; market value ( billion ) } } = true", "question": "royal dutch shell has a higher market value than american international group ."}, {"topic": "2005 houston astros season", "wiki": "https://en.wikipedia.org/wiki/2005_Houston_Astros_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-13710464-1.html.csv", "action": "majority", "sent": "most of the 2005 houston astros season games were scheduled for the month of may .", "annotation": {"scope": "all", "col": "1", "most_or_all": "most", "criterion": "equal", "value": "may", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "date", "may"], "result": true, "ind": 0, "tointer": "for the date records of all rows , most of them fuzzily match to may .", "tostr": "most_eq { all_rows ; date ; may } = true"}, "logic_str": "most_eq { all_rows ; date ; may } = true", "interpret": "for the date records of all rows , most of them fuzzily match to may .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "may_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "may_4": "may"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "may_4": [0]}, "table_header": ["date", "winning team", "score", "winning pitcher", "losing pitcher", "attendance", "location"], "table_cont": [["may 20", "texas", "7 - 3", "kenny rogers", "brandon backe", "38109", "arlington"], ["may 21", "texas", "18 - 3", "chris young", "ezequiel astacio", "35781", "arlington"], ["may 22", "texas", "2 - 0", "chan ho park", "roy oswalt", "40583", "arlington"], ["june 24", "houston", "5 - 2", "roy oswalt", "ricardo rodriguez", "36199", "houston"], ["june 25", "texas", "6 - 5", "chris young", "brandon backe", "41868", "houston"]], "query": "most_eq { all_rows ; date ; may } = true", "question": "most of the 2005 houston astros season games were scheduled for the month of may ."}, {"topic": "b\u00f6rje jansson", "wiki": "https://en.wikipedia.org/wiki/B%C3%B6rje_Jansson", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15161245-2.html.csv", "action": "superlative", "sent": "borje jansson had his best season for points scored in 1972 in the 125cc class , with 78 points .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "8", "value_mentioned": "yes", "max_or_min": "max", "other_col": "1,2", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "max", "args": ["all_rows", "points"], "result": "78", "ind": 0, "tostr": "max { all_rows ; points }", "tointer": "the maximum points record of all rows is 78 ."}, "78"], "result": true, "ind": 1, "tostr": "eq { max { all_rows ; points } ; 78 }", "tointer": "the maximum points record of all rows is 78 ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 2, "tostr": "argmax { all_rows ; points }"}, "year"], "result": "1972", "ind": 3, "tostr": "hop { argmax { all_rows ; points } ; year }"}, "1972"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; points } ; year } ; 1972 }", "tointer": "the year record of the row with superlative points record is 1972 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 2, "tostr": "argmax { all_rows ; points }"}, "class"], "result": "125cc", "ind": 5, "tostr": "hop { argmax { all_rows ; points } ; class }"}, "125cc"], "result": true, "ind": 6, "tostr": "eq { hop { argmax { all_rows ; points } ; class } ; 125cc }", "tointer": "the class record of the row with superlative points record is 125cc ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { argmax { all_rows ; points } ; year } ; 1972 } ; eq { hop { argmax { all_rows ; points } ; class } ; 125cc } }", "tointer": "the year record of the row with superlative points record is 1972 . the class record of the row with superlative points record is 125cc ."}], "result": true, "ind": 8, "tostr": "and { eq { max { all_rows ; points } ; 78 } ; and { eq { hop { argmax { all_rows ; points } ; year } ; 1972 } ; eq { hop { argmax { all_rows ; points } ; class } ; 125cc } } } = true", "tointer": "the maximum points record of all rows is 78 . the year record of the row with superlative points record is 1972 . the class record of the row with superlative points record is 125cc ."}, "logic_str": "and { eq { max { all_rows ; points } ; 78 } ; and { eq { hop { argmax { all_rows ; points } ; year } ; 1972 } ; eq { hop { argmax { all_rows ; points } ; class } ; 125cc } } } = true", "interpret": "the maximum points record of all rows is 78 . the year record of the row with superlative points record is 1972 . the class record of the row with superlative points record is 125cc .", "num_func": 10, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "eq_1": 1, "max_0": 0, "all_rows_10": 10, "points_11": 11, "78_12": 12, "and_7": 7, "eq_4": 4, "num_hop_3": 3, "argmax_2": 2, "all_rows_13": 13, "points_14": 14, "year_15": 15, "1972_16": 16, "str_eq_6": 6, "str_hop_5": 5, "class_17": 17, "125cc_18": 18}, "g_ids_features": {"and_8": "and", "result_9": "true", "eq_1": "eq", "max_0": "max", "all_rows_10": "all_rows", "points_11": "points", "78_12": "78", "and_7": "and", "eq_4": "eq", "num_hop_3": "num_hop", "argmax_2": "argmax", "all_rows_13": "all_rows", "points_14": "points", "year_15": "year", "1972_16": "1972", "str_eq_6": "str_eq", "str_hop_5": "str_hop", "class_17": "class", "125cc_18": "125cc"}, "g_adj": {"and_8": [9], "result_9": [], "eq_1": [8], "max_0": [1], "all_rows_10": [0], "points_11": [0], "78_12": [1], "and_7": [8], "eq_4": [7], "num_hop_3": [4], "argmax_2": [3, 5], "all_rows_13": [2], "points_14": [2], "year_15": [3], "1972_16": [4], "str_eq_6": [7], "str_hop_5": [6], "class_17": [5], "125cc_18": [6]}, "table_header": ["year", "class", "team", "points", "rank", "wins"], "table_cont": [["1969", "125cc", "maico", "4", "40th", "0"], ["1969", "250cc", "yamaha", "45", "5th", "0"], ["1970", "125cc", "maico", "62", "3rd", "0"], ["1970", "250cc", "yamaha", "34", "5th", "0"], ["1971", "125cc", "maico", "64", "3rd", "0"], ["1971", "250cc", "yamaha", "9", "21st", "0"], ["1972", "50cc", "jamathi", "10", "12th", "0"], ["1972", "125cc", "maico", "78", "4th", "2"], ["1972", "250cc", "yamaha", "36", "8th", "1"], ["1973", "125cc", "maico", "64", "4th", "1"], ["1973", "250cc", "yamaha", "12", "18th", "0"]], "query": "and { eq { max { all_rows ; points } ; 78 } ; and { eq { hop { argmax { all_rows ; points } ; year } ; 1972 } ; eq { hop { argmax { all_rows ; points } ; class } ; 125cc } } } = true", "question": "borje jansson had his best season for points scored in 1972 in the 125cc class , with 78 points ."}, {"topic": "duke of rohan", "wiki": "https://en.wikipedia.org/wiki/Duke_of_Rohan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10957315-3.html.csv", "action": "majority", "sent": "most of the dukes of rohan were born in the before 1800 .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "less_than", "value": "1800", "subset": null}, "logic": {"func": "most_less", "args": ["all_rows", "birth", "1800"], "result": true, "ind": 0, "tointer": "for the birth records of all rows , most of them are less than 1800 .", "tostr": "most_less { all_rows ; birth ; 1800 } = true"}, "logic_str": "most_less { all_rows ; birth ; 1800 } = true", "interpret": "for the birth records of all rows , most of them are less than 1800 .", "num_func": 1, "nid": 1, "g_ids": {"most_less_0": 0, "result_1": 1, "all_rows_2": 2, "birth_3": 3, "1800_4": 4}, "g_ids_features": {"most_less_0": "most_less", "result_1": "true", "all_rows_2": "all_rows", "birth_3": "birth", "1800_4": "1800"}, "g_adj": {"most_less_0": [1], "result_1": [], "all_rows_2": [0], "birth_3": [0], "1800_4": [0]}, "table_header": ["name", "birth", "marriage", "became duke", "ceased to be duke", "death", "spouse"], "table_cont": [["louis de rohan - chabot", "3 november 1652", "18 july 1678", "27 february 1655 father 's death", "17 august 1727", "17 august 1727", "marie \u00e9lisabeth du bec - crespin de grimaldi"], ["louis bretagne alain de rohan - chabot", "26 september 1679", "29 may 1708", "17 august 1727 father 's death", "10 august 1738", "10 august 1738", "fran\u00e7oise de roquelaure"], ["louis marie de rohan - chabot", "17 january 1710", "19 december 1735", "10 august 1738 father 's death", "28 november 1791", "28 november 1791", "charlotte rosalie de chtillon"], ["louis antoine de rohan - chabot", "20 april 1733", "12 april 1757", "28 november 1791 uncles death", "29 november 1807", "29 november 1807", "\u00e9lisabeth louise de la rochefoucauld"], ["alexandre de rohan - chabot", "3 december 1761", "29 may 1785", "29 november 1807 father 's death", "8 february 1816", "8 february 1816", "anne louise \u00e9lisabeth de montmorency"], ["louis fran\u00e7ois de rohan - chabot", "29 february 1788", "2 may 1808", "8 february 1816 father 's death", "8 february 1833", "8 february 1833", "marie georgine armandine de s\u00e9rent"], ["fernand de rohan - chabot", "14 october 1789", "19 may 1817", "8 february 1833 brothers death", "10 september 1869", "10 september 1869", "josephine fran\u00e7oise de gontaut - biron"], ["charles de rohan - chabot", "12 december 1819", "29 june 1843", "10 september 1869 father 's death", "6 august 1893", "6 august 1893", "octavie rouill\u00e9 de boissy"], ["alain de rohan - chabot", "1 december 1844", "26 june 1872", "6 august 1893 father 's death", "6 january 1914", "6 january 1914", "herminie de la brousse de verteillac"], ["josselin de rohan - chabot", "4 april 1879", "11 june 1906", "6 january 1914 father 's death", "13 july 1916", "13 july 1916", "marguerite marie de rohan - chabot"], ["alain louis auguste de rohan - chabot", "10 may 1913", "5 may 1937", "13 july 1916 father 's death", "17 may 1966", "17 may 1966", "helene claire marie de liencourt"], ["josselin de rohan - chabot", "5 june 1938", "17 november 1973", "17 may 1966 father 's death", "n / a", "n / a", "antoinette jeanne yvonne boegner"], ["name", "birth", "marriage", "became duke", "ceased to be duke", "death", "spouse"]], "query": "most_less { all_rows ; birth ; 1800 } = true", "question": "most of the dukes of rohan were born in the before 1800 ."}, {"topic": "1949 vfl season", "wiki": "https://en.wikipedia.org/wiki/1949_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10809351-14.html.csv", "action": "aggregation", "sent": "there was a total crowd attendance of 79,000 during the 1949 vfl season .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "79,000", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "crowd"], "result": "79,000", "ind": 0, "tostr": "sum { all_rows ; crowd }"}, "79,000"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; crowd } ; 79,000 } = true", "tointer": "the sum of the crowd record of all rows is 79,000 ."}, "logic_str": "round_eq { sum { all_rows ; crowd } ; 79,000 } = true", "interpret": "the sum of the crowd record of all rows is 79,000 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "crowd_4": 4, "79,000_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "crowd_4": "crowd", "79,000_5": "79,000"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "crowd_4": [0], "79,000_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "11.8 ( 74 )", "melbourne", "10.12 ( 72 )", "western oval", "13000", "23 july 1949"], ["essendon", "13.17 ( 95 )", "st kilda", "9.10 ( 64 )", "windy hill", "9500", "23 july 1949"], ["richmond", "8.24 ( 72 )", "north melbourne", "17.11 ( 113 )", "punt road oval", "19000", "23 july 1949"], ["south melbourne", "11.15 ( 81 )", "geelong", "14.13 ( 97 )", "lake oval", "7500", "23 july 1949"], ["fitzroy", "10.11 ( 71 )", "collingwood", "11.15 ( 81 )", "brunswick street oval", "21000", "23 july 1949"], ["hawthorn", "8.5 ( 53 )", "carlton", "9.17 ( 71 )", "glenferrie oval", "9000", "23 july 1949"]], "query": "round_eq { sum { all_rows ; crowd } ; 79,000 } = true", "question": "there was a total crowd attendance of 79,000 during the 1949 vfl season ."}, {"topic": "1960 green bay packers season", "wiki": "https://en.wikipedia.org/wiki/1960_Green_Bay_Packers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14887186-1.html.csv", "action": "unique", "sent": "tom moore was the only running back that the green bay packers drafted in 1960 .", "annotation": {"scope": "all", "row": "1", "col": "4", "col_other": "3", "criterion": "equal", "value": "running back", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "running back"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to running back .", "tostr": "filter_eq { all_rows ; position ; running back }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; position ; running back } }", "tointer": "select the rows whose position record fuzzily matches to running back . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "running back"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to running back .", "tostr": "filter_eq { all_rows ; position ; running back }"}, "player"], "result": "tom moore", "ind": 2, "tostr": "hop { filter_eq { all_rows ; position ; running back } ; player }"}, "tom moore"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; position ; running back } ; player } ; tom moore }", "tointer": "the player record of this unqiue row is tom moore ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; position ; running back } } ; eq { hop { filter_eq { all_rows ; position ; running back } ; player } ; tom moore } } = true", "tointer": "select the rows whose position record fuzzily matches to running back . there is only one such row in the table . the player record of this unqiue row is tom moore ."}, "logic_str": "and { only { filter_eq { all_rows ; position ; running back } } ; eq { hop { filter_eq { all_rows ; position ; running back } ; player } ; tom moore } } = true", "interpret": "select the rows whose position record fuzzily matches to running back . there is only one such row in the table . the player record of this unqiue row is tom moore .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "position_7": 7, "running back_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "tom moore_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "position_7": "position", "running back_8": "running back", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "tom moore_10": "tom moore"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "position_7": [0], "running back_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "tom moore_10": [3]}, "table_header": ["round", "pick", "player", "position", "school"], "table_cont": [["1", "5", "tom moore", "running back", "vanderbilt"], ["2", "17", "bob jeter", "cornerback", "iowa"], ["5", "51", "dale hackbart", "defensive back", "wisconsin"], ["6", "65", "mike wright", "tackle", "minnesota"], ["7", "77", "kirk phares", "guard", "south carolina"], ["8", "89", "don hitt", "center", "oklahoma state"], ["9", "101", "frank brixius", "tackle", "minnesota"], ["11", "125", "ron ray", "tackle", "howard payne"], ["12", "137", "harry ball", "tackle", "boston college"], ["13", "149", "paul winslow", "defensive back", "north carolina central"], ["14", "161", "jon gilliam", "center", "east texas state"], ["15", "173", "garney henley", "back", "huron"], ["16", "185", "john littlejohn", "back", "kansas state"], ["17", "197", "joe gomes", "back", "south carolina"], ["18", "209", "royce whittington", "tackle", "southwestern louisiana"], ["19", "221", "rich brooks", "end", "purdue"], ["20", "233", "gilmer lewis", "tackle", "oklahoma"]], "query": "and { only { filter_eq { all_rows ; position ; running back } } ; eq { hop { filter_eq { all_rows ; position ; running back } ; player } ; tom moore } } = true", "question": "tom moore was the only running back that the green bay packers drafted in 1960 ."}, {"topic": "1993 pba draft", "wiki": "https://en.wikipedia.org/wiki/1993_PBA_draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18772258-1.html.csv", "action": "aggregation", "sent": "the average pick number of these pba players was approximately 4.5 .", "annotation": {"scope": "all", "col": "1", "type": "average", "result": "4.5", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "pick"], "result": "4.5", "ind": 0, "tostr": "avg { all_rows ; pick }"}, "4.5"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; pick } ; 4.5 } = true", "tointer": "the average of the pick record of all rows is 4.5 ."}, "logic_str": "round_eq { avg { all_rows ; pick } ; 4.5 } = true", "interpret": "the average of the pick record of all rows is 4.5 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "pick_4": 4, "4.5_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "pick_4": "pick", "4.5_5": "4.5"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "pick_4": [0], "4.5_5": [1]}, "table_header": ["pick", "player", "country of origin", "pba team", "college"], "table_cont": [["1", "zandro limpot , jr", "philippines", "sta lucia realtors", "la salle - manila"], ["2", "victor pablo", "philippines", "ginebra san miguel", "far eastern"], ["3", "johnny abarrientos", "philippines", "alaska milkmen", "far eastern"], ["4", "dwight lago", "philippines", "coney island ice cream stars", "la salle - manila"], ["5", "benito cheng", "philippines", "coney island ice cream stars", "mapua"], ["6", "johnedel cardel", "philippines", "alaska milkmen", "la salle - manila"], ["7", "teodorico fernandez iii", "philippines", "swift mighty meaties", "san agustin"], ["8", "richard bachmann", "philippines", "alaska milkmen", "la salle - manila"]], "query": "round_eq { avg { all_rows ; pick } ; 4.5 } = true", "question": "the average pick number of these pba players was approximately 4.5 ."}, {"topic": "cooke locomotive and machine works", "wiki": "https://en.wikipedia.org/wiki/Cooke_Locomotive_and_Machine_Works", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1057316-1.html.csv", "action": "majority", "sent": "most wheel arrangement of the cooke locomotive and machine works was 4 - 6 - 0 .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "4 - 6 - 0", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "wheel arrangement ( whyte notation )", "4 - 6 - 0"], "result": true, "ind": 0, "tointer": "for the wheel arrangement ( whyte notation ) records of all rows , most of them fuzzily match to 4 - 6 - 0 .", "tostr": "most_eq { all_rows ; wheel arrangement ( whyte notation ) ; 4 - 6 - 0 } = true"}, "logic_str": "most_eq { all_rows ; wheel arrangement ( whyte notation ) ; 4 - 6 - 0 } = true", "interpret": "for the wheel arrangement ( whyte notation ) records of all rows , most of them fuzzily match to 4 - 6 - 0 .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "wheel arrangement ( whyte notation )_3": 3, "4 - 6 - 0_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "wheel arrangement ( whyte notation )_3": "wheel arrangement ( whyte notation )", "4 - 6 - 0_4": "4 - 6 - 0"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "wheel arrangement ( whyte notation )_3": [0], "4 - 6 - 0_4": [0]}, "table_header": ["serial number", "wheel arrangement ( whyte notation )", "build date", "operational owner ( s )", "disposition"], "table_cont": [["unknown", "4 - 4 - 0", "october 1856", "western and atlantic railroad 49 texas", "static display in grant park , atlanta , georgia"], ["1555", "2 - 6 - 0", "february 1884", "colorado and southern railway 9", "georgetown loop railroad , silver plume , colorado"], ["1861", "4 - 4 - 0", "february 1888", "dardanelle and russelville 8", "nevada state railroad museum , carson city , nevada"], ["2053", "4 - 6 - 0", "october , 1890", "union pacific railroad 1242", "lion 's park , cheyenne , wyoming"], ["2054", "4 - 6 - 0", "october , 1890", "union pacific railroad 1243", "durham western heritage museum , omaha , nebraska"], ["2202", "4 - 6 - 0", "april 1892", "texas and new orleans railroad 319", "riverdale , georgia"], ["2341", "4 - 6 - 0", "july 1896", "southern pacific railroad 2248", "grapevine vintage railroad , grapevine , texas"]], "query": "most_eq { all_rows ; wheel arrangement ( whyte notation ) ; 4 - 6 - 0 } = true", "question": "most wheel arrangement of the cooke locomotive and machine works was 4 - 6 - 0 ."}, {"topic": "2002 - 03 hong kong first division league", "wiki": "https://en.wikipedia.org/wiki/2002%E2%80%9303_Hong_Kong_First_Division_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10661351-1.html.csv", "action": "ordinal", "sent": "south china had the third highest goal gain in the 2002 - 03 hong kong first division league .", "annotation": {"row": "4", "col": "5", "order": "3", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "goal gain", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; goal gain ; 3 }"}, "team"], "result": "south china", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; goal gain ; 3 } ; team }"}, "south china"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; goal gain ; 3 } ; team } ; south china } = true", "tointer": "select the row whose goal gain record of all rows is 3rd maximum . the team record of this row is south china ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; goal gain ; 3 } ; team } ; south china } = true", "interpret": "select the row whose goal gain record of all rows is 3rd maximum . the team record of this row is south china .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "goal gain_5": 5, "3_6": 6, "team_7": 7, "south china_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "goal gain_5": "goal gain", "3_6": "3", "team_7": "team", "south china_8": "south china"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "goal gain_5": [0], "3_6": [0], "team_7": [1], "south china_8": [2]}, "table_header": ["team", "game", "draw", "loss", "goal gain", "goal loss", "goal diff", "point"], "table_cont": [["happy valley", "14", "4", "1", "42", "16", "26", "31"], ["sun hei", "14", "6", "0", "40", "18", "22", "30"], ["buler rangers", "14", "4", "3", "24", "16", "8", "25"], ["south china", "14", "3", "4", "28", "17", "11", "24"], ["xiangxue pharmaceutical", "14", "2", "7", "14", "19", "- 5", "17"], ["fukien", "14", "2", "8", "17", "33", "- 16", "14"], ["double flower ( r )", "14", "0", "11", "10", "33", "- 23", "9"], ["hong kong fc ( r )", "14", "1", "11", "15", "38", "- 23", "7"]], "query": "eq { hop { nth_argmax { all_rows ; goal gain ; 3 } ; team } ; south china } = true", "question": "south china had the third highest goal gain in the 2002 - 03 hong kong first division league ."}, {"topic": "damian paul chopa", "wiki": "https://en.wikipedia.org/wiki/Damian_Paul_Chopa", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10265361-1.html.csv", "action": "count", "sent": "damian paul chopa has participated in the world cross country championships 3 times .", "annotation": {"scope": "all", "criterion": "equal", "value": "world cross country championships", "result": "3", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "world cross country championships"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to world cross country championships .", "tostr": "filter_eq { all_rows ; tournament ; world cross country championships }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; tournament ; world cross country championships } }", "tointer": "select the rows whose tournament record fuzzily matches to world cross country championships . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; tournament ; world cross country championships } } ; 3 } = true", "tointer": "select the rows whose tournament record fuzzily matches to world cross country championships . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; tournament ; world cross country championships } } ; 3 } = true", "interpret": "select the rows whose tournament record fuzzily matches to world cross country championships . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "tournament_5": 5, "world cross country championships_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "tournament_5": "tournament", "world cross country championships_6": "world cross country championships", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "tournament_5": [0], "world cross country championships_6": [0], "3_7": [2]}, "table_header": ["year", "tournament", "venue", "result", "extra"], "table_cont": [["2004", "world cross country championships", "brussels , belgium", "27th", "short race"], ["2005", "world cross country championships", "st etienne , france", "27th", "short race"], ["2006", "commonwealth games", "melbourne , australia", "6th", "5000 m , 13:24.03 pb"], ["2006", "african championships", "bambous , mauritius", "9th", "5000 m"], ["2007", "world cross country championships", "mombasa , kenya", "12th", "senior race"]], "query": "eq { count { filter_eq { all_rows ; tournament ; world cross country championships } } ; 3 } = true", "question": "damian paul chopa has participated in the world cross country championships 3 times ."}, {"topic": "the shining ( violent j album )", "wiki": "https://en.wikipedia.org/wiki/The_Shining_%28Violent_J_album%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18815934-2.html.csv", "action": "majority", "sent": "the majority of songs on the shining album were produced by mike e clark .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "mike e clark", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "producer ( s )", "mike e clark"], "result": true, "ind": 0, "tointer": "for the producer ( s ) records of all rows , most of them fuzzily match to mike e clark .", "tostr": "most_eq { all_rows ; producer ( s ) ; mike e clark } = true"}, "logic_str": "most_eq { all_rows ; producer ( s ) ; mike e clark } = true", "interpret": "for the producer ( s ) records of all rows , most of them fuzzily match to mike e clark .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "producer (s)_3": 3, "mike e clark_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "producer (s)_3": "producer ( s )", "mike e clark_4": "mike e clark"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "producer (s)_3": [0], "mike e clark_4": [0]}, "table_header": ["title", "time", "writer ( s )", "performer ( s )", "producer ( s )", "recorded at"], "table_cont": [["intro", "2:01", "violent j eric davie", "violent j", "violent j eric davie akuma", "the cabin in the woods studio"], ["wake up", "3:50", "violent j mike e clark", "violent j", "mike e clark", "funhouse studios"], ["fight club", "3:27", "violent j mike e clark", "violent j necro esham", "mike e clark", "funhouse studios"], ["when i rap", "2:05", "violent j eric davie", "violent j", "violent j eric davie akuma", "the cabin in the woods studio"], ["candy land", "4:00", "violent j esham", "violent j esham", "violent j mike e clark", "funhouse studios"], ["get out the way", "3:03", "violent j mike e clark", "violent j", "mike e clark", "the cabin in the woods studio"], ["14 year old", "4:03", "violent j mike e clark", "violent j", "mike e clark", "the cabin in the woods studio"], ["i get mad", "3:32", "violent j mike e clark", "violent j", "mike e clark", "the cabin in the woods studio"], ["faster", "4:22", "violent j mike e clark", "violent j", "mike e clark", "the cabin in the woods studio"], ["jealousy", "3:25", "violent j mike e clark", "violent j razor ray", "mike e clark", "funhouse studios"], ["home invasion", "4:03", "violent j mike e clark", "violent j shaggy 2 dope", "mike e clark", "the cabin in the woods studio"], ["4 the hoes", "2:50", "violent j eric davie", "violent j", "violent j eric davie akuma", "the cabin in the woods studio"], ["pyromaniac", "3:37", "violent j mike e clark", "violent j", "mike e clark", "the cabin in the woods studio"], ["let it go", "3:16", "violent j mike e clark", "violent j", "mike e clark", "the cabin in the woods studio"], ["freeway killer", "5:16", "violent j mike e clark", "violent j", "mike e clark", "the cabin in the woods studio"]], "query": "most_eq { all_rows ; producer ( s ) ; mike e clark } = true", "question": "the majority of songs on the shining album were produced by mike e clark ."}, {"topic": "1993 san diego chargers season", "wiki": "https://en.wikipedia.org/wiki/1993_San_Diego_Chargers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15345444-1.html.csv", "action": "comparative", "sent": "in the san diego chargers ' 1993 season , the first game had a higher attendance than the last game .", "annotation": {"row_1": "1", "row_2": "16", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "week", "1"], "result": null, "ind": 0, "tointer": "select the rows whose week record fuzzily matches to 1 .", "tostr": "filter_eq { all_rows ; week ; 1 }"}, "attendance"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; week ; 1 } ; attendance }", "tointer": "select the rows whose week record fuzzily matches to 1 . take the attendance record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "week", "18"], "result": null, "ind": 1, "tointer": "select the rows whose week record fuzzily matches to 18 .", "tostr": "filter_eq { all_rows ; week ; 18 }"}, "attendance"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; week ; 18 } ; attendance }", "tointer": "select the rows whose week record fuzzily matches to 18 . take the attendance record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; week ; 1 } ; attendance } ; hop { filter_eq { all_rows ; week ; 18 } ; attendance } } = true", "tointer": "select the rows whose week record fuzzily matches to 1 . take the attendance record of this row . select the rows whose week record fuzzily matches to 18 . take the attendance record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; week ; 1 } ; attendance } ; hop { filter_eq { all_rows ; week ; 18 } ; attendance } } = true", "interpret": "select the rows whose week record fuzzily matches to 1 . take the attendance record of this row . select the rows whose week record fuzzily matches to 18 . take the attendance record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "week_7": 7, "1_8": 8, "attendance_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "week_11": 11, "18_12": 12, "attendance_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "week_7": "week", "1_8": "1", "attendance_9": "attendance", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "week_11": "week", "18_12": "18", "attendance_13": "attendance"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "week_7": [0], "1_8": [0], "attendance_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "week_11": [1], "18_12": [1], "attendance_13": [3]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 5 , 1993", "seattle seahawks", "w 18 - 12", "58039"], ["2", "september 12 , 1993", "denver broncos", "l 34 - 17", "75074"], ["3", "september 19 , 1993", "houston oilers", "w 18 - 17", "58519"], ["5", "october 3 , 1993", "seattle seahawks", "l 31 - 14", "54778"], ["6", "october 10 , 1993", "pittsburgh steelers", "l 16 - 3", "55264"], ["7", "october 17 , 1993", "kansas city chiefs", "l 17 - 14", "60729"], ["9", "october 31 , 1993", "los angeles raiders", "w 30 - 23", "45122"], ["10", "november 7 , 1993", "minnesota vikings", "w 30 - 17", "55527"], ["11", "november 14 , 1993", "chicago bears", "l 16 - 13", "58459"], ["12", "november 21 , 1993", "los angeles raiders", "l 12 - 7", "60615"], ["13", "november 29 , 1993", "indianapolis colts", "w 31 - 0", "54110"], ["14", "december 5 , 1993", "denver broncos", "w 13 - 10", "60233"], ["15", "december 12 , 1993", "green bay packers", "l 20 - 13", "57930"], ["16", "december 19 , 1993", "kansas city chiefs", "l 28 - 24", "74778"], ["17", "december 27 , 1993", "miami dolphins", "w 45 - 20", "60311"], ["18", "january 2 , 1994", "tampa bay buccaneers", "w 32 - 17", "35587"]], "query": "greater { hop { filter_eq { all_rows ; week ; 1 } ; attendance } ; hop { filter_eq { all_rows ; week ; 18 } ; attendance } } = true", "question": "in the san diego chargers ' 1993 season , the first game had a higher attendance than the last game ."}, {"topic": "1955 vfl season", "wiki": "https://en.wikipedia.org/wiki/1955_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10773753-16.html.csv", "action": "aggregation", "sent": "the average crowd size for the games played was 24067 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "24067", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "crowd"], "result": "24067", "ind": 0, "tostr": "avg { all_rows ; crowd }"}, "24067"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; crowd } ; 24067 } = true", "tointer": "the average of the crowd record of all rows is 24067 ."}, "logic_str": "round_eq { avg { all_rows ; crowd } ; 24067 } = true", "interpret": "the average of the crowd record of all rows is 24067 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "crowd_4": 4, "24067_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "crowd_4": "crowd", "24067_5": "24067"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "crowd_4": [0], "24067_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "8.5 ( 53 )", "south melbourne", "11.16 ( 82 )", "junction oval", "10150", "6 august 1955"], ["footscray", "10.13 ( 73 )", "geelong", "10.16 ( 76 )", "western oval", "33902", "6 august 1955"], ["fitzroy", "6.17 ( 53 )", "richmond", "11.9 ( 75 )", "brunswick street oval", "14000", "6 august 1955"], ["north melbourne", "8.12 ( 60 )", "hawthorn", "8.5 ( 53 )", "arden street oval", "9000", "6 august 1955"], ["melbourne", "16.23 ( 119 )", "essendon", "7.12 ( 54 )", "mcg", "49352", "6 august 1955"], ["collingwood", "12.17 ( 89 )", "carlton", "7.10 ( 52 )", "victoria park", "28000", "6 august 1955"]], "query": "round_eq { avg { all_rows ; crowd } ; 24067 } = true", "question": "the average crowd size for the games played was 24067 ."}, {"topic": "magdal\u00e9na ryb\u00e1rikov\u00e1", "wiki": "https://en.wikipedia.org/wiki/Magdal%C3%A9na_Ryb%C3%A1rikov%C3%A1", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18058018-8.html.csv", "action": "ordinal", "sent": "the game against monica niculescu was magdal\u00e9na ryb\u00e1rikov\u00e1 's earliest final tournament game .", "annotation": {"row": "1", "col": "2", "order": "1", "col_other": "5", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "1"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; date ; 1 }"}, "opponent in the final"], "result": "monica niculescu", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; date ; 1 } ; opponent in the final }"}, "monica niculescu"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opponent in the final } ; monica niculescu } = true", "tointer": "select the row whose date record of all rows is 1st minimum . the opponent in the final record of this row is monica niculescu ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opponent in the final } ; monica niculescu } = true", "interpret": "select the row whose date record of all rows is 1st minimum . the opponent in the final record of this row is monica niculescu .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "date_5": 5, "1_6": 6, "opponent in the final_7": 7, "monica niculescu_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "date_5": "date", "1_6": "1", "opponent in the final_7": "opponent in the final", "monica niculescu_8": "monica niculescu"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "date_5": [0], "1_6": [0], "opponent in the final_7": [1], "monica niculescu_8": [2]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent in the final", "score in the final"], "table_cont": [["runner - up", "27 march 2005", "ain alsoukhna , egypt", "clay", "monica niculescu", "3 - 6 , 4 - 6"], ["winner", "9 april 2005", "cairo , egypt", "clay", "sarah raab", "6 - 1 , 6 - 3"], ["runner - up", "14 august 2005", "hechingen , germany", "clay", "kirsten flipkens", "4 - 6 , 3 - 6"], ["winner", "17 september 2005", "mestre , italy", "clay", "kira nagy", "6 - 2 , 7 - 5"], ["runner - up", "18 february 2007", "pr\u016fhonice - prague , czech republic", "carpet ( i )", "petra kvitov\u00e1", "5 - 7 , 6 - 7 ( 2 - 7 )"], ["runner - up", "9 december 2007", "p\u0159erov , czech republic", "hard ( i )", "petra kvitov\u00e1", "5 - 7 , 3 - 6"], ["winner", "22 march 2008", "st petersburg - vsevolozhsk , russia", "hard ( i )", "anna lapushchenkova", "6 - 4 , 6 - 2"], ["winner", "5 april 2008", "patras , greece", "hard", "anne keothavong", "6 - 3 , 7 - 5"], ["runner - up", "10 august 2008", "monterrey , mexico", "hard", "yaroslava shvedova", "4 - 6 , 1 - 6"], ["runner - up", "10 october 2010", "ningbo , china", "hard", "alberta brianti", "4 - 6 , 4 - 6"], ["winner", "15 may 2011", "prague , czech republic", "clay", "petra kvitov\u00e1", "6 - 3 , 6 - 4"]], "query": "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opponent in the final } ; monica niculescu } = true", "question": "the game against monica niculescu was magdal\u00e9na ryb\u00e1rikov\u00e1 's earliest final tournament game ."}, {"topic": "2004 world junior figure skating championships", "wiki": "https://en.wikipedia.org/wiki/2004_World_Junior_Figure_Skating_Championships", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11691613-1.html.csv", "action": "ordinal", "sent": "during the 2004 world junior skating championships , japan recieved the second highest number of gold medals .", "annotation": {"row": "3", "col": "3", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "gold", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; gold ; 2 }"}, "nation"], "result": "japan", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; gold ; 2 } ; nation }"}, "japan"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; gold ; 2 } ; nation } ; japan } = true", "tointer": "select the row whose gold record of all rows is 2nd maximum . the nation record of this row is japan ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; gold ; 2 } ; nation } ; japan } = true", "interpret": "select the row whose gold record of all rows is 2nd maximum . the nation record of this row is japan .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "gold_5": 5, "2_6": 6, "nation_7": 7, "japan_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "gold_5": "gold", "2_6": "2", "nation_7": "nation", "japan_8": "japan"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "gold_5": [0], "2_6": [0], "nation_7": [1], "japan_8": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "united states", "0", "2", "3", "5"], ["2", "russia", "3", "0", "1", "4"], ["3", "japan", "1", "0", "0", "1"], ["3", "canada", "0", "1", "0", "1"], ["3", "hungary", "0", "1", "0", "1"]], "query": "eq { hop { nth_argmax { all_rows ; gold ; 2 } ; nation } ; japan } = true", "question": "during the 2004 world junior skating championships , japan recieved the second highest number of gold medals ."}, {"topic": "napa auto parts 200", "wiki": "https://en.wikipedia.org/wiki/NAPA_Auto_Parts_200", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10716893-3.html.csv", "action": "ordinal", "sent": "the 2nd most recent year for the napa auto parts 200 was when marty reid was the host .", "annotation": {"row": "2", "col": "1", "order": "2", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "year", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; year ; 2 }"}, "host"], "result": "marty reid", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; year ; 2 } ; host }"}, "marty reid"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; host } ; marty reid } = true", "tointer": "select the row whose year record of all rows is 2nd maximum . the host record of this row is marty reid ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; host } ; marty reid } = true", "interpret": "select the row whose year record of all rows is 2nd maximum . the host record of this row is marty reid .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "year_5": 5, "2_6": 6, "host_7": 7, "marty reid_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "year_5": "year", "2_6": "2", "host_7": "host", "marty reid_8": "marty reid"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "year_5": [0], "2_6": [0], "host_7": [1], "marty reid_8": [2]}, "table_header": ["year", "network", "host", "pre - race analyst", "lap - by - lap", "color commentator ( s )", "pit reporters"], "table_cont": [["2012", "espn", "shannon spake", "n / a", "marty reid", "ricky craven", "rick debruhl jim noble shannon spake"], ["2011", "espn", "marty reid", "n / a", "marty reid", "rusty wallace ricky craven", "rick debruhl jim noble shannon spake"], ["2010", "espn2", "allen bestwick", "n / a", "allen bestwick", "andy petree rusty wallace", "mike massaro vince welch shannon spake"], ["2009", "espn2", "shannon spake", "n / a", "marty reid", "andy petree rusty wallace", "dave burns jamie little shannon spake"], ["2008", "espn2", "jack arute", "n / a", "marty reid", "randy lajoie rusty wallace", "jack arute vince welch mike massaro"], ["2007", "espn2", "allen bestwick", "n / a", "allen bestwick", "randy lajoie", "marty smith vince welch gary gerould"]], "query": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; host } ; marty reid } = true", "question": "the 2nd most recent year for the napa auto parts 200 was when marty reid was the host ."}, {"topic": "2007 - 08 kfc twenty20 big bash", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_KFC_Twenty20_Big_Bash", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12562212-5.html.csv", "action": "majority", "sent": "most of the scores at the 2007 - 08 kfc twenty20 big bash were at least 70 .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "greater_than_eq", "value": "70", "subset": null}, "logic": {"func": "most_greater_eq", "args": ["all_rows", "score", "70"], "result": true, "ind": 0, "tointer": "for the score records of all rows , most of them are greater than or equal to 70 .", "tostr": "most_greater_eq { all_rows ; score ; 70 } = true"}, "logic_str": "most_greater_eq { all_rows ; score ; 70 } = true", "interpret": "for the score records of all rows , most of them are greater than or equal to 70 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_eq_0": 0, "result_1": 1, "all_rows_2": 2, "score_3": 3, "70_4": 4}, "g_ids_features": {"most_greater_eq_0": "most_greater_eq", "result_1": "true", "all_rows_2": "all_rows", "score_3": "score", "70_4": "70"}, "g_adj": {"most_greater_eq_0": [1], "result_1": [], "all_rows_2": [0], "score_3": [0], "70_4": [0]}, "table_header": ["player", "score", "balls", "opponent", "ground"], "table_cont": [["shaun marsh ( western australia )", "86", "55", "victoria", "waca ground"], ["luke pomersbach ( western australia )", "79", "45", "tasmania", "waca ground"], ["david hussey ( victoria )", "70", "40", "new south wales", "melbourne cricket ground"], ["shaun marsh ( western australia )", "70", "49", "queensland", "waca ground"], ["shane watson ( queensland )", "69", "32", "tasmania", "brisbane cricket ground"]], "query": "most_greater_eq { all_rows ; score ; 70 } = true", "question": "most of the scores at the 2007 - 08 kfc twenty20 big bash were at least 70 ."}, {"topic": "1999 cincinnati bengals season", "wiki": "https://en.wikipedia.org/wiki/1999_Cincinnati_Bengals_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16778188-2.html.csv", "action": "ordinal", "sent": "the 2nd cincinatti bengals win of the 1999 season was on november 28 .", "annotation": {"scope": "subset", "row": "12", "col": "2", "order": "2", "col_other": "n/a", "max_or_min": "min_to_max", "value_mentioned": "yes", "subset": {"col": "4", "criterion": "fuzzily_match", "value": "w"}}, "logic": {"func": "eq", "args": [{"func": "nth_min", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "w"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; result ; w }", "tointer": "select the rows whose result record fuzzily matches to w ."}, "date", "2"], "result": "november 28 , 1999", "ind": 1, "tostr": "nth_min { filter_eq { all_rows ; result ; w } ; date ; 2 }", "tointer": "select the rows whose result record fuzzily matches to w . the 2nd minimum date record of these rows is november 28 , 1999 ."}, "november 28 , 1999"], "result": true, "ind": 2, "tostr": "eq { nth_min { filter_eq { all_rows ; result ; w } ; date ; 2 } ; november 28 , 1999 } = true", "tointer": "select the rows whose result record fuzzily matches to w . the 2nd minimum date record of these rows is november 28 , 1999 ."}, "logic_str": "eq { nth_min { filter_eq { all_rows ; result ; w } ; date ; 2 } ; november 28 , 1999 } = true", "interpret": "select the rows whose result record fuzzily matches to w . the 2nd minimum date record of these rows is november 28 , 1999 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "nth_min_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "result_5": 5, "w_6": 6, "date_7": 7, "2_8": 8, "november 28 , 1999_9": 9}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "nth_min_1": "nth_min", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "result_5": "result", "w_6": "w", "date_7": "date", "2_8": "2", "november 28 , 1999_9": "november 28 , 1999"}, "g_adj": {"eq_2": [3], "result_3": [], "nth_min_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "result_5": [0], "w_6": [0], "date_7": [1], "2_8": [1], "november 28 , 1999_9": [2]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 12 , 1999", "tennessee titans", "l 36 - 35", "65272"], ["2", "september 19 , 1999", "san diego chargers", "l 34 - 7", "47660"], ["3", "september 26 , 1999", "carolina panthers", "l 27 - 3", "61269"], ["4", "october 3 , 1999", "st louis rams", "l 38 - 10", "45481"], ["5", "october 10 , 1999", "cleveland browns", "w 18 - 17", "73048"], ["6", "october 17 , 1999", "pittsburgh steelers", "l 17 - 3", "59669"], ["7", "october 24 , 1999", "indianapolis colts", "l 31 - 10", "55996"], ["8", "october 31 , 1999", "jacksonville jaguars", "l 41 - 10", "49138"], ["9", "november 7 , 1999", "seattle seahawks", "l 37 - 20", "66303"], ["10", "november 14 , 1999", "tennessee titans", "l 24 - 14", "46017"], ["11", "november 21 , 1999", "baltimore ravens", "l 34 - 31", "43279"], ["12", "november 28 , 1999", "pittsburgh steelers", "w 27 - 20", "50907"], ["13", "december 5 , 1999", "san francisco 49ers", "w 44 - 30", "53463"], ["14", "december 12 , 1999", "cleveland browns", "w 44 - 28", "59972"], ["16", "december 26 , 1999", "baltimore ravens", "l 22 - 0", "68036"], ["17", "january 2 , 2000", "jacksonville jaguars", "l 24 - 7", "70532"]], "query": "eq { nth_min { filter_eq { all_rows ; result ; w } ; date ; 2 } ; november 28 , 1999 } = true", "question": "the 2nd cincinatti bengals win of the 1999 season was on november 28 ."}, {"topic": "leo\u0161 friedl", "wiki": "https://en.wikipedia.org/wiki/Leo%C5%A1_Friedl", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12859623-3.html.csv", "action": "majority", "sent": "the majority of these tournaments took place on a clay surface .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "clay", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "surface", "clay"], "result": true, "ind": 0, "tointer": "for the surface records of all rows , most of them fuzzily match to clay .", "tostr": "most_eq { all_rows ; surface ; clay } = true"}, "logic_str": "most_eq { all_rows ; surface ; clay } = true", "interpret": "for the surface records of all rows , most of them fuzzily match to clay .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "surface_3": 3, "clay_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "surface_3": "surface", "clay_4": "clay"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "surface_3": [0], "clay_4": [0]}, "table_header": ["date", "tournament", "surface", "partner", "opponents in final", "score"], "table_cont": [["26 august 2001", "long island , usa", "hard", "radek \u0161t\u011bp\u00e1nek", "jonathan stark kevin ullyett", "1 - 6 , 4 - 6"], ["29 september 2002", "palermo , italy", "clay", "franti\u0161ek \u010derm\u00e1k", "lucas arnold ker luis lobo", "4 - 6 , 6 - 4 , 2 - 6"], ["5 january 2003", "chennai , india", "hard", "franti\u0161ek \u010derm\u00e1k", "julian knowle michael kohlmann", "6 - 7 ( 1 - 7 ) , 6 - 7 ( 3 - 7 )"], ["11 january 2003", "auckland , new zealand", "hard", "tom\u00e1\u0161 cibulec", "david adams robbie koenig", "6 - 7 , 6 - 3 , 3 - 6"], ["16 february 2003", "vi\u00f1a del mar , chile", "clay", "franti\u0161ek \u010derm\u00e1k", "agust\u00edn calleri mariano hood", "3 - 6 , 6 - 1 , 4 - 6"], ["13 july 2003", "gstaad , switzerland", "clay", "franti\u0161ek \u010derm\u00e1k", "leander paes david rikl", "3 - 6 , 3 - 6"], ["3 august 2003", "sopot , poland", "clay", "franti\u0161ek \u010derm\u00e1k", "mariusz fyrstenberg marcin matkowski", "4 - 6 , 7 - 6 ( 9 - 7 ) , 3 - 6"], ["28 september 2003", "palermo , italy", "clay", "franti\u0161ek \u010derm\u00e1k", "lucas arnold ker mariano hood", "6 - 7 ( 6 - 8 ) , 7 - 6 ( 7 - 3 ) , 4 - 6"], ["28 february 2004", "costa do sauipe , brasil", "clay", "tomas behrend", "mariusz fyrstenberg marcin matkowski", "2 - 6 , 2 - 6"], ["18 april 2004", "estoril , portugal", "clay", "franti\u0161ek \u010derm\u00e1k", "juan ignacio chela gast\u00f3n gaudio", "2 - 6 , 1 - 6"], ["23 may 2004", "st p\u00f6lten , austria", "clay", "tom\u00e1\u0161 cibulec", "mariano hood petr p\u00e1la", "6 - 3 , 5 - 7 , 4 - 6"], ["19 june 2005", "'s - hertogenbosch , netherlands", "grass", "tom\u00e1\u0161 cibulec", "cyril suk pavel v\u00edzner", "3 - 6 , 4 - 6"], ["15 january 2006", "sydney , australia", "hard", "franti\u0161ek \u010derm\u00e1k", "fabrice santoro nenad zimonji\u0107", "1 - 6 , 4 - 6"], ["5 february 2006", "vi\u00f1a del mar , chile", "clay", "franti\u0161ek \u010derm\u00e1k", "jos\u00e9 acasuso sebasti\u00e1n prieto", "6 - 7 ( 2 - 7 ) , 4 - 6"], ["7 may 2006", "estoril , portugal", "clay", "lucas arnold ker", "luk\u00e1\u0161 dlouh\u00fd pavel v\u00edzner", "3 - 6 , 1 - 6"], ["20 may 2007", "p\u00f6rtschach , austria", "clay", "david \u0161koch", "simon aspelin julian knowle", "6 - 7 ( 6 - 8 ) , 7 - 5 ,"]], "query": "most_eq { all_rows ; surface ; clay } = true", "question": "the majority of these tournaments took place on a clay surface ."}, {"topic": "1977 - 78 philadelphia flyers season", "wiki": "https://en.wikipedia.org/wiki/1977%E2%80%9378_Philadelphia_Flyers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14305802-4.html.csv", "action": "unique", "sent": "game 30 was the only game in which the philadelphia flyers failed to score any goals .", "annotation": {"scope": "all", "row": "9", "col": "4", "col_other": "1", "criterion": "equal", "value": "0 -", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "0 -"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to 0 - .", "tostr": "filter_eq { all_rows ; score ; 0 - }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; score ; 0 - } }", "tointer": "select the rows whose score record fuzzily matches to 0 - . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "0 -"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to 0 - .", "tostr": "filter_eq { all_rows ; score ; 0 - }"}, "game"], "result": "30", "ind": 2, "tostr": "hop { filter_eq { all_rows ; score ; 0 - } ; game }"}, "30"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; score ; 0 - } ; game } ; 30 }", "tointer": "the game record of this unqiue row is 30 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; score ; 0 - } } ; eq { hop { filter_eq { all_rows ; score ; 0 - } ; game } ; 30 } } = true", "tointer": "select the rows whose score record fuzzily matches to 0 - . there is only one such row in the table . the game record of this unqiue row is 30 ."}, "logic_str": "and { only { filter_eq { all_rows ; score ; 0 - } } ; eq { hop { filter_eq { all_rows ; score ; 0 - } ; game } ; 30 } } = true", "interpret": "select the rows whose score record fuzzily matches to 0 - . there is only one such row in the table . the game record of this unqiue row is 30 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "score_7": 7, "0-_8": 8, "eq_3": 3, "num_hop_2": 2, "game_9": 9, "30_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "score_7": "score", "0-_8": "0 -", "eq_3": "eq", "num_hop_2": "num_hop", "game_9": "game", "30_10": "30"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "score_7": [0], "0-_8": [0], "eq_3": [4], "num_hop_2": [3], "game_9": [2], "30_10": [3]}, "table_header": ["game", "december", "opponent", "score", "record", "points"], "table_cont": [["22", "1", "los angeles kings", "4 - 2", "15 - 4 - 3", "33"], ["23", "3", "colorado rockies", "6 - 3", "16 - 4 - 3", "35"], ["24", "7", "new york rangers", "3 - 3", "16 - 4 - 4", "36"], ["25", "8", "new york rangers", "7 - 4", "17 - 4 - 4", "38"], ["26", "10", "chicago black hawks", "4 - 2", "18 - 4 - 4", "40"], ["27", "11", "cleveland barons", "11 - 1", "19 - 4 - 4", "42"], ["28", "15", "boston bruins", "6 - 4", "20 - 4 - 4", "44"], ["29", "17", "atlanta flames", "4 - 3", "21 - 4 - 4", "46"], ["30", "18", "montreal canadiens", "0 - 2", "21 - 5 - 4", "46"], ["31", "21", "cleveland barons", "4 - 0", "22 - 5 - 4", "48"], ["32", "23", "boston bruins", "1 - 6", "22 - 6 - 4", "48"], ["33", "28", "new york rangers", "4 - 3", "23 - 6 - 4", "50"], ["34", "29", "minnesota north stars", "5 - 2", "24 - 6 - 4", "52"], ["35", "31", "st louis blues", "2 - 3", "24 - 7 - 4", "52"]], "query": "and { only { filter_eq { all_rows ; score ; 0 - } } ; eq { hop { filter_eq { all_rows ; score ; 0 - } ; game } ; 30 } } = true", "question": "game 30 was the only game in which the philadelphia flyers failed to score any goals ."}, {"topic": "united states house of representatives elections , 1946", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1946", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1342233-32.html.csv", "action": "majority", "sent": "all incumbents were re - elected during the 1946 united states house of representatives elections .", "annotation": {"scope": "all", "col": "5", "most_or_all": "all", "criterion": "equal", "value": "re-elected", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "result", "re-elected"], "result": true, "ind": 0, "tointer": "for the result records of all rows , all of them fuzzily match to re-elected .", "tostr": "all_eq { all_rows ; result ; re-elected } = true"}, "logic_str": "all_eq { all_rows ; result ; re-elected } = true", "interpret": "for the result records of all rows , all of them fuzzily match to re-elected .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "re-elected_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "re-elected_4": "re-elected"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "re-elected_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["new york 16", "ellsworth b buck", "republican", "1944", "re - elected", "ellsworth b buck ( r ) 61.2 % john burry ( d ) 38.8 %"], ["new york 20", "sol bloom", "democratic", "1923", "re - elected", "sol bloom ( d ) 61.1 % jules j justin ( r ) 38.9 %"], ["new york 28", "ralph a gamble", "republican", "1937", "re - elected", "ralph a gamble ( r ) 75.4 % morris karnes ( d ) 24.6 %"], ["new york 30", "jay le fevre", "republican", "1942", "re - elected", "jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 %"], ["new york 35", "hadwen c fuller", "republican", "1943", "re - elected", "hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 %"]], "query": "all_eq { all_rows ; result ; re-elected } = true", "question": "all incumbents were re - elected during the 1946 united states house of representatives elections ."}, {"topic": "united states house of representatives elections , 1816", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1816", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2668347-17.html.csv", "action": "majority", "sent": "most of the incumbents from this table are from pennsylvania .", "annotation": {"scope": "all", "col": "1", "most_or_all": "all", "criterion": "equal", "value": "pennsylvania", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "district", "pennsylvania"], "result": true, "ind": 0, "tointer": "for the district records of all rows , all of them fuzzily match to pennsylvania .", "tostr": "all_eq { all_rows ; district ; pennsylvania } = true"}, "logic_str": "all_eq { all_rows ; district ; pennsylvania } = true", "interpret": "for the district records of all rows , all of them fuzzily match to pennsylvania .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "district_3": 3, "pennsylvania_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "district_3": "district", "pennsylvania_4": "pennsylvania"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "district_3": [0], "pennsylvania_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["pennsylvania 4", "hugh glasgow", "democratic - republican", "1812", "retired democratic - republican hold", "jacob spangler ( dr ) 67.1 % jacob hay ( f ) 32.9 %"], ["pennsylvania 6 plural district with 2 seats", "samuel d ingham", "democratic - republican", "1812", "re - elected", "john ross ( dr ) 50.8 % samuel d ingham ( dr ) 49.2 %"], ["pennsylvania 6 plural district with 2 seats", "john ross", "democratic - republican", "1814", "re - elected", "john ross ( dr ) 50.8 % samuel d ingham ( dr ) 49.2 %"], ["pennsylvania 8", "william piper", "democratic - republican", "1810", "retired democratic - republican hold", "alexander ogle ( dr ) 99.7 %"], ["pennsylvania 12", "aaron lyle", "democratic - republican", "1808", "retired democratic - republican hold", "thomas patterson ( dr ) 87.2 % john hughes ( f ) 12.8 %"], ["pennsylvania 14", "john woods", "federalist", "1814", "retired democratic - republican gain", "henry baldwin ( dr ) 61.6 % walter lowrie ( dr ) 38.4 %"]], "query": "all_eq { all_rows ; district ; pennsylvania } = true", "question": "most of the incumbents from this table are from pennsylvania ."}, {"topic": "philippine presidential election , 2010", "wiki": "https://en.wikipedia.org/wiki/Philippine_presidential_election%2C_2010", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22097588-9.html.csv", "action": "superlative", "sent": "jamby madrigal spent the most per vote received for the 2010 philippines presidental election .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "spent per vote ( php )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; spent per vote ( php ) }"}, "candidate ( party )"], "result": "jamby madrigal ( i )", "ind": 1, "tostr": "hop { argmax { all_rows ; spent per vote ( php ) } ; candidate ( party ) }"}, "jamby madrigal ( i )"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; spent per vote ( php ) } ; candidate ( party ) } ; jamby madrigal ( i ) } = true", "tointer": "select the row whose spent per vote ( php ) record of all rows is maximum . the candidate ( party ) record of this row is jamby madrigal ( i ) ."}, "logic_str": "eq { hop { argmax { all_rows ; spent per vote ( php ) } ; candidate ( party ) } ; jamby madrigal ( i ) } = true", "interpret": "select the row whose spent per vote ( php ) record of all rows is maximum . the candidate ( party ) record of this row is jamby madrigal ( i ) .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "spent per vote ( php )_5": 5, "candidate (party)_6": 6, "jamby madrigal (i)_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "spent per vote ( php )_5": "spent per vote ( php )", "candidate (party)_6": "candidate ( party )", "jamby madrigal (i)_7": "jamby madrigal ( i )"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "spent per vote ( php )_5": [0], "candidate (party)_6": [1], "jamby madrigal (i)_7": [2]}, "table_header": ["candidate ( party )", "amount raised ( php )", "amount spent ( php )", "votes", "spent per vote ( php )", "spent per voter ( php )"], "table_cont": [["benigno aquino iii ( lp )", "440050000 ( approx )", "403119981.81", "15208678", "26.51", "7.86"], ["joseph estrada ( pmp )", "8000000 ( approx )", "227500000", "9487837", "23.98", "4.44"], ["manny villar ( np )", "431557816", "431557816", "5573835", "77.43", "8.41"], ["gilberto teodoro ( lakas - kampi )", "64688.88", "3463307.21", "4095839", "0.85", "0.07"], ["jamby madrigal ( i )", "55182264", "55182264", "46489", "1187.00", "1.08"], ["jejomar binay ( pdp - laban )", "231480000 ( approx )", "217938289", "14645574", "14.88", "4.25"], ["mar roxas ( lp )", "246000000 ( approx )", "279351224", "13918490", "20.07", "5.45"], ["loren legarda ( npc )", "n / a", "210280000", "4294664", "48.96", "4.10"]], "query": "eq { hop { argmax { all_rows ; spent per vote ( php ) } ; candidate ( party ) } ; jamby madrigal ( i ) } = true", "question": "jamby madrigal spent the most per vote received for the 2010 philippines presidental election ."}, {"topic": "gary unmarried", "wiki": "https://en.wikipedia.org/wiki/Gary_Unmarried", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17443121-2.html.csv", "action": "comparative", "sent": "the episode entitled gary marries off his ex aired seven days after gary gets boundaries .", "annotation": {"row_1": "3", "row_2": "2", "col": "2", "col_other": "1", "relation": "greater", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "episode", "gary marries off his ex"], "result": null, "ind": 0, "tointer": "select the rows whose episode record fuzzily matches to gary marries off his ex .", "tostr": "filter_eq { all_rows ; episode ; gary marries off his ex }"}, "air date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date }", "tointer": "select the rows whose episode record fuzzily matches to gary marries off his ex . take the air date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "episode", "gary gets boundaries"], "result": null, "ind": 1, "tointer": "select the rows whose episode record fuzzily matches to gary gets boundaries .", "tostr": "filter_eq { all_rows ; episode ; gary gets boundaries }"}, "air date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date }", "tointer": "select the rows whose episode record fuzzily matches to gary gets boundaries . take the air date record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } }", "tointer": "select the rows whose episode record fuzzily matches to gary marries off his ex . take the air date record of this row . select the rows whose episode record fuzzily matches to gary gets boundaries . take the air date record of this row . the first record is greater than the second record ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "episode", "gary marries off his ex"], "result": null, "ind": 0, "tointer": "select the rows whose episode record fuzzily matches to gary marries off his ex .", "tostr": "filter_eq { all_rows ; episode ; gary marries off his ex }"}, "air date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date }", "tointer": "select the rows whose episode record fuzzily matches to gary marries off his ex . take the air date record of this row ."}, "october 8 , 2008"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; october 8 , 2008 }", "tointer": "the air date record of the first row is october 8 , 2008 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "episode", "gary gets boundaries"], "result": null, "ind": 1, "tointer": "select the rows whose episode record fuzzily matches to gary gets boundaries .", "tostr": "filter_eq { all_rows ; episode ; gary gets boundaries }"}, "air date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date }", "tointer": "select the rows whose episode record fuzzily matches to gary gets boundaries . take the air date record of this row ."}, "october 1 , 2008"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } ; october 1 , 2008 }", "tointer": "the air date record of the second row is october 1 , 2008 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; october 8 , 2008 } ; eq { hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } ; october 1 , 2008 } }", "tointer": "the air date record of the first row is october 8 , 2008 . the air date record of the second row is october 1 , 2008 ."}], "result": true, "ind": 8, "tostr": "and { greater { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } } ; and { eq { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; october 8 , 2008 } ; eq { hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } ; october 1 , 2008 } } } = true", "tointer": "select the rows whose episode record fuzzily matches to gary marries off his ex . take the air date record of this row . select the rows whose episode record fuzzily matches to gary gets boundaries . take the air date record of this row . the first record is greater than the second record . the air date record of the first row is october 8 , 2008 . the air date record of the second row is october 1 , 2008 ."}, "logic_str": "and { greater { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } } ; and { eq { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; october 8 , 2008 } ; eq { hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } ; october 1 , 2008 } } } = true", "interpret": "select the rows whose episode record fuzzily matches to gary marries off his ex . take the air date record of this row . select the rows whose episode record fuzzily matches to gary gets boundaries . take the air date record of this row . the first record is greater than the second record . the air date record of the first row is october 8 , 2008 . the air date record of the second row is october 1 , 2008 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "greater_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "episode_11": 11, "gary marries off his ex_12": 12, "air date_13": 13, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "episode_15": 15, "gary gets boundaries_16": 16, "air date_17": 17, "and_7": 7, "str_eq_5": 5, "october 8 , 2008_18": 18, "str_eq_6": 6, "october 1 , 2008_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "greater_4": "greater", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "episode_11": "episode", "gary marries off his ex_12": "gary marries off his ex", "air date_13": "air date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "episode_15": "episode", "gary gets boundaries_16": "gary gets boundaries", "air date_17": "air date", "and_7": "and", "str_eq_5": "str_eq", "october 8 , 2008_18": "october 8 , 2008", "str_eq_6": "str_eq", "october 1 , 2008_19": "october 1 , 2008"}, "g_adj": {"and_8": [9], "result_9": [], "greater_4": [8], "str_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "episode_11": [0], "gary marries off his ex_12": [0], "air date_13": [2], "str_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "episode_15": [1], "gary gets boundaries_16": [1], "air date_17": [3], "and_7": [8], "str_eq_5": [7], "october 8 , 2008_18": [5], "str_eq_6": [7], "october 1 , 2008_19": [6]}, "table_header": ["episode", "air date", "timeslot", "18 - 49", "viewers"], "table_cont": [["pilot", "september 24 , 2008", "wednesday 8:30 pm", "2.3 / 6", "6.84"], ["gary gets boundaries", "october 1 , 2008", "wednesday 8:30 pm", "2.2 / 6", "6.97"], ["gary marries off his ex", "october 8 , 2008", "wednesday 8:30 pm", "2.2 / 6", "7.43"], ["gary gets his stuff back", "october 15 , 2008", "wednesday 8:30 pm", "2.4 / 7", "7.71"], ["gary breaks up his ex - wife and girlfriend", "october 22 , 2008", "wednesday 8:30 pm", "2.5 / 7", "7.85"], ["gary meets the gang", "november 5 , 2008", "wednesday 8:30 pm", "2.1 / 6", "6.44"], ["gary and allison 's restaurant", "november 12 , 2008", "wednesday 8:30 pm", "2.1 / 5", "6.71"], ["gary and allison brooks", "november 19 , 2008", "wednesday 8:30 pm", "2.7 / 7", "8.14"], ["gary gives thanks", "november 26 , 2008", "wednesday 8:30 pm", "2.2 / 7", "7.72"], ["gary goes first", "december 10 , 2008", "wednesday 8:30 pm", "2.4 / 7", "8.03"], ["gary toughens up tom", "december 17 , 2008", "wednesday 8:30 pm", "2.3 / 7", "7.55"], ["gary dates louise 's teacher", "january 14 , 2009", "wednesday 8:30 pm", "2.1 / 5", "7.07"], ["gary moves back in", "january 21 , 2009", "wednesday 8:30 pm", "2.2 / 5", "7.07"], ["gary and dennis ' sister", "february 11 , 2009", "wednesday 8:30 pm", "2.1 / 5", "6.86"], ["gary 's ex - brother - in - law", "february 18 , 2009", "wednesday 8:30 pm", "2.1 / 5", "7.26"], ["gary uses his veto", "march 11 , 2009", "wednesday 8:30 pm", "2.3 / 7", "7.71"], ["gary hooks up allison", "march 18 , 2009", "wednesday 8:30 pm", "2.3 / 7", "7.57"], ["gary and the trophy", "april 8 , 2009", "wednesday 8:30 pm", "2.2 / 7", "7.30"], ["gary and his half brother", "may 6 , 2009", "wednesday 8:30 pm", "2.0 / 6", "6.66"], ["gary fixes allison 's garbage disposal", "may 20 , 2009", "wednesday 8:30 pm", "1.7 / 5", "5.55"]], "query": "and { greater { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } } ; and { eq { hop { filter_eq { all_rows ; episode ; gary marries off his ex } ; air date } ; october 8 , 2008 } ; eq { hop { filter_eq { all_rows ; episode ; gary gets boundaries } ; air date } ; october 1 , 2008 } } } = true", "question": "the episode entitled gary marries off his ex aired seven days after gary gets boundaries ."}, {"topic": "isabelle huppert", "wiki": "https://en.wikipedia.org/wiki/Isabelle_Huppert", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-145320-1.html.csv", "action": "unique", "sent": "isabelle huppert won her only cesar award in 1996 .", "annotation": {"scope": "all", "row": "8", "col": "5", "col_other": "1,2", "criterion": "equal", "value": "won", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "won"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to won .", "tostr": "filter_eq { all_rows ; result ; won }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; result ; won } }", "tointer": "select the rows whose result record fuzzily matches to won . there is only one such row in the table ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "won"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to won .", "tostr": "filter_eq { all_rows ; result ; won }"}, "year"], "result": "1996", "ind": 2, "tostr": "hop { filter_eq { all_rows ; result ; won } ; year }"}, "1996"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; result ; won } ; year } ; 1996 }", "tointer": "the year record of this unqiue row is 1996 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "won"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to won .", "tostr": "filter_eq { all_rows ; result ; won }"}, "group"], "result": "c\u00e9sar awards", "ind": 4, "tostr": "hop { filter_eq { all_rows ; result ; won } ; group }"}, "c\u00e9sar awards"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; result ; won } ; group } ; c\u00e9sar awards }", "tointer": "the group record of this unqiue row is c\u00e9sar awards ."}], "result": true, "ind": 6, "tostr": "and { eq { hop { filter_eq { all_rows ; result ; won } ; year } ; 1996 } ; eq { hop { filter_eq { all_rows ; result ; won } ; group } ; c\u00e9sar awards } }", "tointer": "the year record of this unqiue row is 1996 . the group record of this unqiue row is c\u00e9sar awards ."}], "result": true, "ind": 7, "tostr": "and { only { filter_eq { all_rows ; result ; won } } ; and { eq { hop { filter_eq { all_rows ; result ; won } ; year } ; 1996 } ; eq { hop { filter_eq { all_rows ; result ; won } ; group } ; c\u00e9sar awards } } } = true", "tointer": "select the rows whose result record fuzzily matches to won . there is only one such row in the table . the year record of this unqiue row is 1996 . the group record of this unqiue row is c\u00e9sar awards ."}, "logic_str": "and { only { filter_eq { all_rows ; result ; won } } ; and { eq { hop { filter_eq { all_rows ; result ; won } ; year } ; 1996 } ; eq { hop { filter_eq { all_rows ; result ; won } ; group } ; c\u00e9sar awards } } } = true", "interpret": "select the rows whose result record fuzzily matches to won . there is only one such row in the table . the year record of this unqiue row is 1996 . the group record of this unqiue row is c\u00e9sar awards .", "num_func": 10, "nid": 8, "g_ids": {"and_7": 7, "result_8": 8, "only_1": 1, "filter_str_eq_0": 0, "all_rows_9": 9, "result_10": 10, "won_11": 11, "and_6": 6, "eq_3": 3, "num_hop_2": 2, "year_12": 12, "1996_13": 13, "str_eq_5": 5, "str_hop_4": 4, "group_14": 14, "c\u00e9sar awards_15": 15}, "g_ids_features": {"and_7": "and", "result_8": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_9": "all_rows", "result_10": "result", "won_11": "won", "and_6": "and", "eq_3": "eq", "num_hop_2": "num_hop", "year_12": "year", "1996_13": "1996", "str_eq_5": "str_eq", "str_hop_4": "str_hop", "group_14": "group", "c\u00e9sar awards_15": "c\u00e9sar awards"}, "g_adj": {"and_7": [8], "result_8": [], "only_1": [7], "filter_str_eq_0": [1, 2, 4], "all_rows_9": [0], "result_10": [0], "won_11": [0], "and_6": [7], "eq_3": [6], "num_hop_2": [3], "year_12": [2], "1996_13": [3], "str_eq_5": [6], "str_hop_4": [5], "group_14": [4], "c\u00e9sar awards_15": [5]}, "table_header": ["year", "group", "award", "film", "result"], "table_cont": [["1976", "s c\u00e9sar award", "best supporting actress", "alo\u00efse", "nominated"], ["1978", "c\u00e9sar awards", "best actress", "the lacemaker ( la dentelli\u00e8re )", "nominated"], ["1979", "c\u00e9sar awards", "best actress", "violette nozi\u00e8re", "nominated"], ["1981", "c\u00e9sar awards", "best actress", "loulou", "nominated"], ["1982", "c\u00e9sar awards", "best actress", "coup de torchon", "nominated"], ["1989", "c\u00e9sar awards", "best actress", "story of women ( une affaire de femmes )", "nominated"], ["1995", "c\u00e9sar awards", "best actress", "la s\u00e9paration", "nominated"], ["1996", "c\u00e9sar awards", "best actress", "la c\u00e9r\u00e9monie", "won"], ["1999", "c\u00e9sar awards", "best actress", "l'\u00e9cole de la chair", "nominated"], ["2001", "c\u00e9sar awards", "best actress", "saint - cyr", "nominated"], ["2002", "c\u00e9sar awards", "best actress", "the piano teacher ( la pianiste )", "nominated"], ["2003", "c\u00e9sar awards", "best actress", "8 women ( 8 femmes )", "nominated"], ["2006", "c\u00e9sar awards", "best actress", "gabrielle", "nominated"], ["2013", "c\u00e9sar awards", "best supporting actress", "amour", "nominated"]], "query": "and { only { filter_eq { all_rows ; result ; won } } ; and { eq { hop { filter_eq { all_rows ; result ; won } ; year } ; 1996 } ; eq { hop { filter_eq { all_rows ; result ; won } ; group } ; c\u00e9sar awards } } } = true", "question": "isabelle huppert won her only cesar award in 1996 ."}, {"topic": "eurovision song contest 1961", "wiki": "https://en.wikipedia.org/wiki/Eurovision_Song_Contest_1961", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-180719-1.html.csv", "action": "superlative", "sent": "the song by jean - claude pascal received the most points of all songs in the eurovision song contest of 1961 .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "14", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "artist"], "result": "jean - claude pascal", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; artist }"}, "jean - claude pascal"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; artist } ; jean - claude pascal } = true", "tointer": "select the row whose points record of all rows is maximum . the artist record of this row is jean - claude pascal ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; artist } ; jean - claude pascal } = true", "interpret": "select the row whose points record of all rows is maximum . the artist record of this row is jean - claude pascal .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "artist_6": 6, "jean - claude pascal_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "artist_6": "artist", "jean - claude pascal_7": "jean - claude pascal"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "artist_6": [1], "jean - claude pascal_7": [2]}, "table_header": ["draw", "language", "artist", "song", "english translation", "place", "points"], "table_cont": [["01", "spanish", "conchita bautista", "estando contigo", "when i 'm with you", "9", "8"], ["02", "french", "colette der\u00e9al", "allons , allons les enfants", "come on , come on children", "10", "6"], ["03", "german", "jimmy makulis", "sehnsucht", "longing", "15", "1"], ["04", "finnish", "laila kinnunen", "valoa ikkunassa", "the lights in the window", "10", "6"], ["05", "serbian", "ljiljana petrovi\u0107", "neke davne zvezde ( \u043d\u0435\u043a\u0435 \u0434\u0430\u0432\u043d\u0435 \u0437\u0432\u0435\u0437\u0434\u0435 )", "some ancient stars", "8", "9"], ["06", "dutch", "greetje kauffeld", "wat een dag", "what a day", "10", "6"], ["07", "swedish", "lill - babs", "april , april", "-", "14", "2"], ["08", "german , french", "lale andersen", "einmal sehen wir uns wieder", "we will meet again", "13", "3"], ["09", "french", "jean - paul mauric", "printemps , avril carillonne", "spring , april rings", "4", "13"], ["10", "french", "franca di rienzo", "nous aurons demain", "we 'll have tomorrow", "3", "16"], ["11", "dutch", "bob benny", "september , gouden roos", "september , golden rose", "15", "1"], ["12", "norwegian", "nora brockstedt", "sommer i palma", "summer in palma", "7", "10"], ["13", "danish", "dario campeotto", "angelique", "-", "5", "12"], ["14", "french", "jean - claude pascal", "nous les amoureux", "we the lovers", "1", "31"], ["15", "english", "the allisons", "are you sure", "-", "2", "24"], ["16", "italian", "betty curtis", "al di l\u00e0", "beyond", "5", "12"]], "query": "eq { hop { argmax { all_rows ; points } ; artist } ; jean - claude pascal } = true", "question": "the song by jean - claude pascal received the most points of all songs in the eurovision song contest of 1961 ."}, {"topic": "achmed labasanov", "wiki": "https://en.wikipedia.org/wiki/Achmed_Labasanov", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17430272-2.html.csv", "action": "majority", "sent": "the majority of achmed labasanov 's fights ended in wins for him .", "annotation": {"scope": "all", "col": "1", "most_or_all": "most", "criterion": "equal", "value": "win", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "res", "win"], "result": true, "ind": 0, "tointer": "for the res records of all rows , most of them fuzzily match to win .", "tostr": "most_eq { all_rows ; res ; win } = true"}, "logic_str": "most_eq { all_rows ; res ; win } = true", "interpret": "for the res records of all rows , most of them fuzzily match to win .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "res_3": 3, "win_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "res_3": "res", "win_4": "win"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "res_3": [0], "win_4": [0]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "location"], "table_cont": [["loss", "7 - 5", "gary goodridge", "decision ( split )", "pride 21", "3", "saitama , japan"], ["win", "7 - 4", "mindaugas kulikauskas", "decision", "rings lithuania : bushido rings 3", "2", "lithuania"], ["loss", "6 - 4", "andrey juravkov", "decision", "bars - bars", "3", "moscow , russia"], ["win", "6 - 3", "stanislav nuschik", "tko", "bars - moscow vs st petersburg", "2", "moscow , russia"], ["loss", "5 - 3", "islam dadalov", "decision", "iafc - pankration russian championship 2001", "n / a", "yaroslavl , russia"], ["loss", "5 - 2", "ant\u00e3nio rodrigo nogueira", "submission ( armbar )", "rings : king of kings 2000 block a", "1", "tokyo , japan"], ["win", "5 - 1", "vepcho bardanashvili", "submission ( achilles lock )", "rings : russia vs georgia", "1", "ekaterinburg , russia"], ["win", "4 - 1", "valentijn overeem", "submission ( achilles lock )", "rings russia : russia vs the world", "1", "ekaterinburg , russia"], ["win", "3 - 1", "vyacheslav kiselyov", "submission ( armbar )", "iafc - pankration world championship 2000", "1", "moscow , russia"], ["loss", "2 - 1", "lee hasdell", "tko ( kick )", "rings : king of kings 1999 block a", "2", "tokyo , japan"], ["win", "2 - 0", "zabir elbiev", "tko ( cut )", "iafc - pankration russian championship 1999", "1", "russia"], ["win", "1 - 0", "denis shibankov", "submission ( strikes )", "iafc - pankration european championship 1998", "1", "moscow , russia"]], "query": "most_eq { all_rows ; res ; win } = true", "question": "the majority of achmed labasanov 's fights ended in wins for him ."}, {"topic": "dave stockton", "wiki": "https://en.wikipedia.org/wiki/Dave_Stockton", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1586876-6.html.csv", "action": "comparative", "sent": "dave stockton had more top-5 finishes at the masters tournament than the us open .", "annotation": {"row_1": "1", "row_2": "2", "col": "3", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "masters tournament"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to masters tournament .", "tostr": "filter_eq { all_rows ; tournament ; masters tournament }"}, "top - 5"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 5 }", "tointer": "select the rows whose tournament record fuzzily matches to masters tournament . take the top - 5 record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "us open"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to us open .", "tostr": "filter_eq { all_rows ; tournament ; us open }"}, "top - 5"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; tournament ; us open } ; top - 5 }", "tointer": "select the rows whose tournament record fuzzily matches to us open . take the top - 5 record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 5 } ; hop { filter_eq { all_rows ; tournament ; us open } ; top - 5 } } = true", "tointer": "select the rows whose tournament record fuzzily matches to masters tournament . take the top - 5 record of this row . select the rows whose tournament record fuzzily matches to us open . take the top - 5 record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 5 } ; hop { filter_eq { all_rows ; tournament ; us open } ; top - 5 } } = true", "interpret": "select the rows whose tournament record fuzzily matches to masters tournament . take the top - 5 record of this row . select the rows whose tournament record fuzzily matches to us open . take the top - 5 record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "tournament_7": 7, "masters tournament_8": 8, "top - 5_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "tournament_11": 11, "us open_12": 12, "top - 5_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "tournament_7": "tournament", "masters tournament_8": "masters tournament", "top - 5_9": "top - 5", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "tournament_11": "tournament", "us open_12": "us open", "top - 5_13": "top - 5"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "tournament_7": [0], "masters tournament_8": [0], "top - 5_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "tournament_11": [1], "us open_12": [1], "top - 5_13": [3]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "2", "4", "6", "12", "10"], ["us open", "0", "1", "2", "3", "16", "9"], ["the open championship", "0", "0", "0", "1", "2", "2"], ["pga championship", "2", "2", "2", "5", "24", "17"], ["totals", "2", "5", "8", "15", "54", "38"]], "query": "greater { hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 5 } ; hop { filter_eq { all_rows ; tournament ; us open } ; top - 5 } } = true", "question": "dave stockton had more top-5 finishes at the masters tournament than the us open ."}, {"topic": "water polo at the 2004 summer olympics - men 's team rosters", "wiki": "https://en.wikipedia.org/wiki/Water_polo_at_the_2004_Summer_Olympics_%E2%80%93_Men%27s_team_rosters", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17759945-2.html.csv", "action": "count", "sent": "a total of two players for the 2004 summer olympic water polo team played the cf position .", "annotation": {"scope": "all", "criterion": "equal", "value": "cf", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "pos", "cf"], "result": null, "ind": 0, "tointer": "select the rows whose pos record fuzzily matches to cf .", "tostr": "filter_eq { all_rows ; pos ; cf }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; pos ; cf } }", "tointer": "select the rows whose pos record fuzzily matches to cf . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; pos ; cf } } ; 2 } = true", "tointer": "select the rows whose pos record fuzzily matches to cf . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; pos ; cf } } ; 2 } = true", "interpret": "select the rows whose pos record fuzzily matches to cf . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "pos_5": 5, "cf_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "pos_5": "pos", "cf_6": "cf", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "pos_5": [0], "cf_6": [0], "2_7": [2]}, "table_header": ["name", "pos", "height", "weight", "date of birth", "club"], "table_cont": [["james stanton", "gk", "m ( ft 6in )", "-", "1983 - 07 - 21", "fremantle mariners"], ["dean semmens", "cb", "m ( ft 2in )", "-", "1979 - 11 - 22", "cn sant andreu"], ["trent franklin", "d", "m ( ft 0in )", "-", "1979 - 02 - 12", "sydney university lions"], ["pietro figlioli", "d", "m ( ft 2in )", "-", "1984 - 05 - 29", "cn barcelona"], ["craig miller", "d", "m ( ft 3in )", "-", "1971 - 11 - 23", "cronulla sharks"], ["toby jenkins", "cf", "m ( ft 4in )", "-", "1979 - 11 - 26", "brisbane barracudas"], ["tim neesham", "d", "m ( ft 0in )", "-", "1979 - 10 - 20", "firenze pallanuoto"], ["sam mcgregor", "cb", "m ( ft 4in )", "-", "1984 - 08 - 12", "cn terassa"], ["thomas whalan", "cb", "m ( ft 4in )", "-", "1980 - 10 - 13", "cn atl\u00e3 \u00a8 tic - barceloneta"], ["gavin woods", "cf", "m ( ft 6in )", "-", "1978 - 03 - 01", "balmain tigers"], ["alex osadchuk", "d", "m ( ft 11in )", "-", "1972 - 02 - 19", "brisbane barracudas"], ["nathan thomas", "d", "m ( ft 4in )", "-", "1972 - 08 - 28", "cn barcelona"], ["rafael sterk", "gk", "m ( ft 1in )", "-", "1978 - 01 - 27", "brisbane barracudas"]], "query": "eq { count { filter_eq { all_rows ; pos ; cf } } ; 2 } = true", "question": "a total of two players for the 2004 summer olympic water polo team played the cf position ."}, {"topic": "sleepless nights ( patty loveless album )", "wiki": "https://en.wikipedia.org/wiki/Sleepless_Nights_%28Patty_Loveless_album%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18424482-2.html.csv", "action": "ordinal", "sent": "crazy arms is track 5 on the album sleepless nights by patty loveless .", "annotation": {"row": "5", "col": "1", "order": "5", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "track", "5"], "result": "5", "ind": 0, "tostr": "nth_min { all_rows ; track ; 5 }", "tointer": "the 5th minimum track record of all rows is 5 ."}, "5"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; track ; 5 } ; 5 }", "tointer": "the 5th minimum track record of all rows is 5 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "track", "5"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; track ; 5 }"}, "song title"], "result": "crazy arms", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; track ; 5 } ; song title }"}, "crazy arms"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; track ; 5 } ; song title } ; crazy arms }", "tointer": "the song title record of the row with 5th minimum track record is crazy arms ."}], "result": true, "ind": 5, "tostr": "and { eq { nth_min { all_rows ; track ; 5 } ; 5 } ; eq { hop { nth_argmin { all_rows ; track ; 5 } ; song title } ; crazy arms } } = true", "tointer": "the 5th minimum track record of all rows is 5 . the song title record of the row with 5th minimum track record is crazy arms ."}, "logic_str": "and { eq { nth_min { all_rows ; track ; 5 } ; 5 } ; eq { hop { nth_argmin { all_rows ; track ; 5 } ; song title } ; crazy arms } } = true", "interpret": "the 5th minimum track record of all rows is 5 . the song title record of the row with 5th minimum track record is crazy arms .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "nth_min_0": 0, "all_rows_7": 7, "track_8": 8, "5_9": 9, "5_10": 10, "str_eq_4": 4, "str_hop_3": 3, "nth_argmin_2": 2, "all_rows_11": 11, "track_12": 12, "5_13": 13, "song title_14": 14, "crazy arms_15": 15}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "nth_min_0": "nth_min", "all_rows_7": "all_rows", "track_8": "track", "5_9": "5", "5_10": "5", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "nth_argmin_2": "nth_argmin", "all_rows_11": "all_rows", "track_12": "track", "5_13": "5", "song title_14": "song title", "crazy arms_15": "crazy arms"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "nth_min_0": [1], "all_rows_7": [0], "track_8": [0], "5_9": [0], "5_10": [1], "str_eq_4": [5], "str_hop_3": [4], "nth_argmin_2": [3], "all_rows_11": [2], "track_12": [2], "5_13": [2], "song title_14": [3], "crazy arms_15": [4]}, "table_header": ["track", "song title", "writer ( s )", "original artist", "original release", "length"], "table_cont": [["1", "why baby why", "darrell edwards , george jones", "george jones", "1955", "2:18"], ["2", "the pain of loving you", "dolly parton , porter wagoner", "porter wagoner & dolly parton", "1971", "2:46"], ["3", "he thinks i still care", "dickey lee", "george jones", "1962", "2:59"], ["4", "sleepless nights ( featuring vince gill )", "boudleaux bryant , felice bryant", "everly brothers", "1960", "4:21"], ["5", "crazy arms", "ralph mooney , chuck seals", "ray price", "1956", "4:00"], ["6", "there stands the glass", "audrey greisham , russ hull , mary jean shurtz", "webb pierce", "1953", "2:35"], ["7", "that 's all it took ( featuring jedd hughes )", "darrell edwards , carlos grier , jones", "george jones & gene pitney", "1966", "2:35"], ["8", "color of the blues", "jones , lawton williams", "george jones", "1958", "3:06"], ["9", "i forgot more than you 'll ever know", "cecil null", "the davis sisters", "1953", "3:30"], ["10", "next in line", "wayne kemp , curtis wayne", "conway twitty", "1968", "3:06"], ["11", "do n't let me cross over", "penny jay", "carl butler and pearl", "1962", "3:23"], ["12", "please help me i 'm falling", "hal blair , don robertson", "hank locklin", "1960", "2:40"], ["13", "there goes my everything", "dallas frazier", "jack greene", "1966", "2:50"], ["14", "cold , cold heart", "hank williams", "hank williams", "1951", "2:53"], ["15", "we 'll sweep out the ashes in the morning", "joyce ann allsup", "carl butler & pearl", "1969", "3:14"], ["16", "if teardrops were pennies", "carl butler", "carl smith", "1951", "2:38"]], "query": "and { eq { nth_min { all_rows ; track ; 5 } ; 5 } ; eq { hop { nth_argmin { all_rows ; track ; 5 } ; song title } ; crazy arms } } = true", "question": "crazy arms is track 5 on the album sleepless nights by patty loveless ."}, {"topic": "argentina at the 2011 pan american games", "wiki": "https://en.wikipedia.org/wiki/Argentina_at_the_2011_Pan_American_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29521180-35.html.csv", "action": "comparative", "sent": "in fencing at the 2011 pan american games , argentina 's federico muller scored more points than felipe saucedo in their respective first round matches .", "annotation": {"row_1": "2", "row_2": "3", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "athlete", "federico muller"], "result": null, "ind": 0, "tointer": "select the rows whose athlete record fuzzily matches to federico muller .", "tostr": "filter_eq { all_rows ; athlete ; federico muller }"}, "round of 16"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; athlete ; federico muller } ; round of 16 }", "tointer": "select the rows whose athlete record fuzzily matches to federico muller . take the round of 16 record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "athlete", "felipe saucedo"], "result": null, "ind": 1, "tointer": "select the rows whose athlete record fuzzily matches to felipe saucedo .", "tostr": "filter_eq { all_rows ; athlete ; felipe saucedo }"}, "round of 16"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; athlete ; felipe saucedo } ; round of 16 }", "tointer": "select the rows whose athlete record fuzzily matches to felipe saucedo . take the round of 16 record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; athlete ; federico muller } ; round of 16 } ; hop { filter_eq { all_rows ; athlete ; felipe saucedo } ; round of 16 } } = true", "tointer": "select the rows whose athlete record fuzzily matches to federico muller . take the round of 16 record of this row . select the rows whose athlete record fuzzily matches to felipe saucedo . take the round of 16 record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; athlete ; federico muller } ; round of 16 } ; hop { filter_eq { all_rows ; athlete ; felipe saucedo } ; round of 16 } } = true", "interpret": "select the rows whose athlete record fuzzily matches to federico muller . take the round of 16 record of this row . select the rows whose athlete record fuzzily matches to felipe saucedo . take the round of 16 record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "athlete_7": 7, "federico muller_8": 8, "round of 16_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "athlete_11": 11, "felipe saucedo_12": 12, "round of 16_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "athlete_7": "athlete", "federico muller_8": "federico muller", "round of 16_9": "round of 16", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "athlete_11": "athlete", "felipe saucedo_12": "felipe saucedo", "round of 16_13": "round of 16"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "athlete_7": [0], "federico muller_8": [0], "round of 16_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "athlete_11": [1], "felipe saucedo_12": [1], "round of 16_13": [3]}, "table_header": ["athlete", "event", "elimination poule", "round of 16", "quarterfinals", "semifinals", "final"], "table_cont": [["jos\u00e9 dom\u00ednguez", "individual \u00e9p\u00e9e", "3 v - 2 d", "w kelsey ( usa ) l 8 - 15", "did not advance", "did not advance", "did not advance"], ["federico muller", "individual foil", "3 v - 2 d", "e turbide ( can ) l 8 - 15", "did not advance", "did not advance", "did not advance"], ["felipe saucedo", "individual foil", "1 v - 4 d", "d gomez ( mex ) l 4 - 15", "did not advance", "did not advance", "did not advance"], ["alexander achten", "individual sabre", "5 v - 0 d", "c valencia ( col ) w 15 - 8", "p beaudry ( can ) l 13 - 15", "did not advance", "did not advance"], ["ricardo bustamante", "individual sabre", "4 v - 1 d", "y iriarte ( cub ) l 8 - 15", "did not advance", "did not advance", "did not advance"]], "query": "greater { hop { filter_eq { all_rows ; athlete ; federico muller } ; round of 16 } ; hop { filter_eq { all_rows ; athlete ; felipe saucedo } ; round of 16 } } = true", "question": "in fencing at the 2011 pan american games , argentina 's federico muller scored more points than felipe saucedo in their respective first round matches ."}, {"topic": "1998 icc knockout trophy", "wiki": "https://en.wikipedia.org/wiki/1998_ICC_KnockOut_Trophy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11950720-6.html.csv", "action": "majority", "sent": "the majority of listed players bat with their right hand .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "right hand bat", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "batting style", "right hand bat"], "result": true, "ind": 0, "tointer": "for the batting style records of all rows , most of them fuzzily match to right hand bat .", "tostr": "most_eq { all_rows ; batting style ; right hand bat } = true"}, "logic_str": "most_eq { all_rows ; batting style ; right hand bat } = true", "interpret": "for the batting style records of all rows , most of them fuzzily match to right hand bat .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "batting style_3": 3, "right hand bat_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "batting style_3": "batting style", "right hand bat_4": "right hand bat"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "batting style_3": [0], "right hand bat_4": [0]}, "table_header": ["player", "date of birth", "batting style", "bowling style", "first class team"], "table_cont": [["hansie cronje ( captain )", "25 september 1969", "right hand bat", "right arm medium", "free state"], ["dale benkenstein", "9 june 1974", "right hand bat", "right arm medium right arm off break", "kwazulu - natal"], ["nicky boje", "20 march 1973", "left hand bat", "left arm orthodox spin", "free state"], ["mark boucher ( wicket - keeper )", "3 december 1976", "right hand bat", "wicket - keeper", "border"], ["derek crookes", "5 march 1969", "right hand bat", "right arm off break", "gauteng"], ["daryll cullinan", "4 march 1967", "right hand bat", "right arm off break", "gauteng"], ["alan dawson", "27 november 1969", "right hand bat", "right arm fast - medium", "western province"], ["steve elworthy", "23 february 1965", "right hand bat", "right arm fast - medium", "northerns"], ["jacques kallis", "16 october 1975", "right hand bat", "right arm fast - medium", "western province"], ["gary kirsten", "23 november 1967", "left hand bat", "right arm off break", "western province"], ["makhaya ntini", "6 july 1977", "right hand bat", "right arm fast", "border"], ["shaun pollock", "16 july 1973", "right hand bat", "right arm fast - medium", "kwazulu - natal"], ["jonty rhodes", "27 july 1969", "right hand bat", "right arm medium", "kwazulu - natal"], ["pat symcox", "14 april 1960", "right hand bat", "right arm off break", "griqualand west"]], "query": "most_eq { all_rows ; batting style ; right hand bat } = true", "question": "the majority of listed players bat with their right hand ."}, {"topic": "2006 - 07 coventry city f.c. season", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_Coventry_City_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12808457-1.html.csv", "action": "ordinal", "sent": "among coventry city players who scored an fa cup goal in 2006-07 , stern john had the 2nd most championship goals .", "annotation": {"scope": "subset", "row": "3", "col": "2", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "subset": {"col": "4", "criterion": "greater_than", "value": "0"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": [{"func": "filter_greater", "args": ["all_rows", "fa cup", "0"], "result": null, "ind": 0, "tostr": "filter_greater { all_rows ; fa cup ; 0 }", "tointer": "select the rows whose fa cup record is greater than 0 ."}, "championship", "2"], "result": null, "ind": 1, "tostr": "nth_argmax { filter_greater { all_rows ; fa cup ; 0 } ; championship ; 2 }"}, "name"], "result": "stern john", "ind": 2, "tostr": "hop { nth_argmax { filter_greater { all_rows ; fa cup ; 0 } ; championship ; 2 } ; name }"}, "stern john"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmax { filter_greater { all_rows ; fa cup ; 0 } ; championship ; 2 } ; name } ; stern john } = true", "tointer": "select the rows whose fa cup record is greater than 0 . select the row whose championship record of these rows is 2nd maximum . the name record of this row is stern john ."}, "logic_str": "eq { hop { nth_argmax { filter_greater { all_rows ; fa cup ; 0 } ; championship ; 2 } ; name } ; stern john } = true", "interpret": "select the rows whose fa cup record is greater than 0 . select the row whose championship record of these rows is 2nd maximum . the name record of this row is stern john .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "nth_argmax_1": 1, "filter_greater_0": 0, "all_rows_5": 5, "fa cup_6": 6, "0_7": 7, "championship_8": 8, "2_9": 9, "name_10": 10, "stern john_11": 11}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "nth_argmax_1": "nth_argmax", "filter_greater_0": "filter_greater", "all_rows_5": "all_rows", "fa cup_6": "fa cup", "0_7": "0", "championship_8": "championship", "2_9": "2", "name_10": "name", "stern john_11": "stern john"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "nth_argmax_1": [2], "filter_greater_0": [1], "all_rows_5": [0], "fa cup_6": [0], "0_7": [0], "championship_8": [1], "2_9": [1], "name_10": [2], "stern john_11": [3]}, "table_header": ["name", "championship", "league cup", "fa cup", "total"], "table_cont": [["dele adebola", "8", "1", "0", "0 9"], ["leon mckenzie", "7", "0", "1", "0 8"], ["stern john", "5", "0", "1", "0 6"], ["michael mifsud", "4", "0", "0", "0 4"], ["michael doyle", "3", "0", "0", "0 3"], ["kevin kyle", "3", "0", "0", "0 3"], ["jay tabb", "3", "0", "0", "0 3"], ["elliott ward", "3", "0", "0", "0 3"], ["colin cameron", "2", "0", "1", "0 3"], ["chris birchall", "2", "0", "0", "0 2"], ["wayne andrews", "1", "0", "0", "0 1"], ["stephen hughes", "1", "0", "0", "0 1"], ["gary mcsheffrey", "1", "0", "0", "0 1"], ["kevin thornton", "1", "0", "0", "0 1"], ["adam virgo", "1", "0", "0", "0 1"]], "query": "eq { hop { nth_argmax { filter_greater { all_rows ; fa cup ; 0 } ; championship ; 2 } ; name } ; stern john } = true", "question": "among coventry city players who scored an fa cup goal in 2006-07 , stern john had the 2nd most championship goals ."}, {"topic": "2011 formula one season", "wiki": "https://en.wikipedia.org/wiki/2011_Formula_One_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12161822-5.html.csv", "action": "majority", "sent": "when red bull - renault was the winning constructor in the 2011 formula one season , sebastian vettel usually held the pole position .", "annotation": {"scope": "subset", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "sebastian vettel", "subset": {"col": "5", "criterion": "equal", "value": "red bull - renault"}}, "logic": {"func": "most_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "winning constructor", "red bull - renault"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; winning constructor ; red bull - renault }", "tointer": "select the rows whose winning constructor record fuzzily matches to red bull - renault ."}, "pole position", "sebastian vettel"], "result": true, "ind": 1, "tointer": "select the rows whose winning constructor record fuzzily matches to red bull - renault . for the pole position records of these rows , most of them fuzzily match to sebastian vettel .", "tostr": "most_eq { filter_eq { all_rows ; winning constructor ; red bull - renault } ; pole position ; sebastian vettel } = true"}, "logic_str": "most_eq { filter_eq { all_rows ; winning constructor ; red bull - renault } ; pole position ; sebastian vettel } = true", "interpret": "select the rows whose winning constructor record fuzzily matches to red bull - renault . for the pole position records of these rows , most of them fuzzily match to sebastian vettel .", "num_func": 2, "nid": 2, "g_ids": {"most_str_eq_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "winning constructor_4": 4, "red bull - renault_5": 5, "pole position_6": 6, "sebastian vettel_7": 7}, "g_ids_features": {"most_str_eq_1": "most_str_eq", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "winning constructor_4": "winning constructor", "red bull - renault_5": "red bull - renault", "pole position_6": "pole position", "sebastian vettel_7": "sebastian vettel"}, "g_adj": {"most_str_eq_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "winning constructor_4": [0], "red bull - renault_5": [0], "pole position_6": [1], "sebastian vettel_7": [1]}, "table_header": ["grand prix", "pole position", "fastest lap", "winning driver", "winning constructor", "report"], "table_cont": [["australian grand prix", "sebastian vettel", "felipe massa", "sebastian vettel", "red bull - renault", "report"], ["malaysian grand prix", "sebastian vettel", "mark webber", "sebastian vettel", "red bull - renault", "report"], ["chinese grand prix", "sebastian vettel", "mark webber", "lewis hamilton", "mclaren - mercedes", "report"], ["turkish grand prix", "sebastian vettel", "mark webber", "sebastian vettel", "red bull - renault", "report"], ["spanish grand prix", "mark webber", "lewis hamilton", "sebastian vettel", "red bull - renault", "report"], ["monaco grand prix", "sebastian vettel", "mark webber", "sebastian vettel", "red bull - renault", "report"], ["canadian grand prix", "sebastian vettel", "jenson button", "jenson button", "mclaren - mercedes", "report"], ["european grand prix", "sebastian vettel", "sebastian vettel", "sebastian vettel", "red bull - renault", "report"], ["british grand prix", "mark webber", "fernando alonso", "fernando alonso", "ferrari", "report"], ["german grand prix", "mark webber", "lewis hamilton", "lewis hamilton", "mclaren - mercedes", "report"], ["hungarian grand prix", "sebastian vettel", "felipe massa", "jenson button", "mclaren - mercedes", "report"], ["belgian grand prix", "sebastian vettel", "mark webber", "sebastian vettel", "red bull - renault", "report"], ["italian grand prix", "sebastian vettel", "lewis hamilton", "sebastian vettel", "red bull - renault", "report"], ["singapore grand prix", "sebastian vettel", "jenson button", "sebastian vettel", "red bull - renault", "report"], ["japanese grand prix", "sebastian vettel", "jenson button", "jenson button", "mclaren - mercedes", "report"], ["korean grand prix", "lewis hamilton", "sebastian vettel", "sebastian vettel", "red bull - renault", "report"], ["indian grand prix", "sebastian vettel", "sebastian vettel", "sebastian vettel", "red bull - renault", "report"], ["abu dhabi grand prix", "sebastian vettel", "mark webber", "lewis hamilton", "mclaren - mercedes", "report"], ["brazilian grand prix", "sebastian vettel", "mark webber", "mark webber", "red bull - renault", "report"]], "query": "most_eq { filter_eq { all_rows ; winning constructor ; red bull - renault } ; pole position ; sebastian vettel } = true", "question": "when red bull - renault was the winning constructor in the 2011 formula one season , sebastian vettel usually held the pole position ."}, {"topic": "1947 baa draft", "wiki": "https://en.wikipedia.org/wiki/1947_BAA_draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12093318-3.html.csv", "action": "majority", "sent": "of the picks in the 1947 baa draft , all of them are from the first round .", "annotation": {"scope": "all", "col": "1", "most_or_all": "all", "criterion": "equal", "value": "1", "subset": null}, "logic": {"func": "all_eq", "args": ["all_rows", "round", "1"], "result": true, "ind": 0, "tointer": "for the round records of all rows , all of them are equal to 1 .", "tostr": "all_eq { all_rows ; round ; 1 } = true"}, "logic_str": "all_eq { all_rows ; round ; 1 } = true", "interpret": "for the round records of all rows , all of them are equal to 1 .", "num_func": 1, "nid": 1, "g_ids": {"all_eq_0": 0, "result_1": 1, "all_rows_2": 2, "round_3": 3, "1_4": 4}, "g_ids_features": {"all_eq_0": "all_eq", "result_1": "true", "all_rows_2": "all_rows", "round_3": "round", "1_4": "1"}, "g_adj": {"all_eq_0": [1], "result_1": [], "all_rows_2": [0], "round_3": [0], "1_4": [0]}, "table_header": ["round", "pick", "player", "position", "team", "college"], "table_cont": [["1", "1", "clifton mcneely", "-", "pittsburgh ironmen", "texas wesleyan"], ["1", "2", "glen selbo", "g / f", "toronto huskies", "wisconsin"], ["1", "3", "bulbs ehlers", "g / f", "boston celtics", "purdue"], ["1", "4", "walt dropo", "-", "providence steamrollers", "connecticut"], ["1", "5", "dick holub", "c", "new york knicks", "long island"], ["1", "6", "chink crossin", "g", "philadelphia warriors", "pennsylvania"], ["1", "7", "jack underman", "-", "st louis bombers", "ohio state"], ["1", "8", "paul huston", "f", "chicago stags", "ohio state"], ["1", "9", "dick o'keefe", "g / f", "washington capitols", "santa clara"], ["1", "10", "larry killick", "-", "baltimore bullets", "vermont"]], "query": "all_eq { all_rows ; round ; 1 } = true", "question": "of the picks in the 1947 baa draft , all of them are from the first round ."}, {"topic": "forbes global 2000", "wiki": "https://en.wikipedia.org/wiki/Forbes_Global_2000", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1682026-7.html.csv", "action": "count", "sent": "of the companies in the forbes global 2000 , there are nine who have headquarters in the usa .", "annotation": {"scope": "all", "criterion": "equal", "value": "usa", "result": "9", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "headquarters", "usa"], "result": null, "ind": 0, "tointer": "select the rows whose headquarters record fuzzily matches to usa .", "tostr": "filter_eq { all_rows ; headquarters ; usa }"}], "result": "9", "ind": 1, "tostr": "count { filter_eq { all_rows ; headquarters ; usa } }", "tointer": "select the rows whose headquarters record fuzzily matches to usa . the number of such rows is 9 ."}, "9"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; headquarters ; usa } } ; 9 } = true", "tointer": "select the rows whose headquarters record fuzzily matches to usa . the number of such rows is 9 ."}, "logic_str": "eq { count { filter_eq { all_rows ; headquarters ; usa } } ; 9 } = true", "interpret": "select the rows whose headquarters record fuzzily matches to usa . the number of such rows is 9 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "headquarters_5": 5, "usa_6": 6, "9_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "headquarters_5": "headquarters", "usa_6": "usa", "9_7": "9"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "headquarters_5": [0], "usa_6": [0], "9_7": [2]}, "table_header": ["rank", "company", "headquarters", "industry", "sales ( billion )", "profits ( billion )", "assets ( billion )", "market value ( billion )"], "table_cont": [["1", "citigroup", "usa", "banking", "146.56", "21.54", "1884.32", "247.42"], ["2", "bank of america", "usa", "banking", "116.57", "21.13", "1459.74", "226.61"], ["3", "hsbc", "uk", "banking", "121.51", "16.63", "1860.76", "202.29"], ["4", "general electric", "usa", "conglomerate", "163.39", "20.83", "697.24", "358.98"], ["5", "jpmorgan chase", "usa", "banking", "99.30", "14.44", "1351.52", "170.97"], ["6", "american international group", "usa", "insurance", "113.19", "14.01", "979.41", "174.47"], ["7", "exxonmobil", "usa", "oil and gas", "335.09", "39.50", "223.95", "410.65"], ["8", "royal dutch shell", "netherlands", "oil and gas", "318.85", "25.44", "232.31", "208.25"], ["9", "ubs", "switzerland", "diversified financials", "105.59", "9.78", "1776.89", "116.84"], ["10", "ing group", "netherlands", "diversified financials", "153.44", "9.65", "1615.05", "93.99"], ["11", "bp", "uk", "oil and gas", "265.91", "22.29", "217.60", "198.14"], ["12", "toyota", "japan", "automotive", "179.02", "11.68", "243.60", "217.69"], ["13", "the royal bank of scotland", "uk", "banking", "77.41", "12.51", "1705.35", "124.13"], ["14", "bnp paribas", "france", "banking", "89.16", "9.64", "1898.19", "97.03"], ["15", "allianz", "germany", "insurance", "125.33", "8.81", "1380.88", "87.22"], ["16", "berkshire hathaway", "usa", "diversified financials", "98.54", "11.02", "248.44", "163.79"], ["17", "walmart", "usa", "retailing", "348.65", "11.29", "151.19", "201.36"], ["18", "barclays", "uk", "banking", "67.71", "8.95", "1949.17", "94.79"], ["19", "chevron", "usa", "oil and gas", "195.34", "17.14", "132.63", "149.37"]], "query": "eq { count { filter_eq { all_rows ; headquarters ; usa } } ; 9 } = true", "question": "of the companies in the forbes global 2000 , there are nine who have headquarters in the usa ."}, {"topic": "the howie carr show", "wiki": "https://en.wikipedia.org/wiki/The_Howie_Carr_Show", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10333757-1.html.csv", "action": "count", "sent": "there are five occasions when the timeslot was live 3p-6p .", "annotation": {"scope": "all", "criterion": "equal", "value": "live 3p-6p", "result": "5", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "timeslot", "live 3p-6p"], "result": null, "ind": 0, "tointer": "select the rows whose timeslot record fuzzily matches to live 3p-6p .", "tostr": "filter_eq { all_rows ; timeslot ; live 3p-6p }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; timeslot ; live 3p-6p } }", "tointer": "select the rows whose timeslot record fuzzily matches to live 3p-6p . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; timeslot ; live 3p-6p } } ; 5 } = true", "tointer": "select the rows whose timeslot record fuzzily matches to live 3p-6p . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; timeslot ; live 3p-6p } } ; 5 } = true", "interpret": "select the rows whose timeslot record fuzzily matches to live 3p-6p . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "timeslot_5": 5, "live 3p-6p_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "timeslot_5": "timeslot", "live 3p-6p_6": "live 3p-6p", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "timeslot_5": [0], "live 3p-6p_6": [0], "5_7": [2]}, "table_header": ["calls", "frequency", "branding", "format", "timeslot", "group owner"], "table_cont": [["wgan", "560 khz", "news radio 560 wgan", "news / talk", "live 3p - 6p", "saga communications"], ["whyn", "560 khz", "news / talk 560 whyn", "news / talk", "live 3p - 7p", "clear channel communications"], ["wvmt", "620 khz", "news / talk 620 wvmt", "news / talk", "live 3p - 7p", "sison broadcasting"], ["wrko", "680 khz", "am 680 wrko", "news / talk", "live 3p - 7p", "entercom"], ["wcrn", "830 khz", "wcrn 830 true talk", "news / talk", "live 3p - 7p", "carter broadcasting"], ["wkbk", "1290 khz", "1290 wkbk w281au 104.1", "news / talk", "live 3p - 6p", "saga communications"], ["wegp", "1390 khz", "wegp 1390 am - the talk of the county", "news / talk", "live 3p - 6p", "decelles / media , inc"], ["wxtk", "95.1 mhz", "news radio 95 wxtk", "news / talk", "live 3p - 7p", "qantam of cape cod , llc"], ["wntk - fm", "99.7 mhz", "wntk talk radio", "news / talk", "live 3p - 6p", "koor communications"], ["wuvr", "1490 khz", "wntk talk radio", "news / talk", "live 3p - 6p", "koor communications"], ["wvom - fm / wvqm", "103.9 / 101.3 mhz", "the voice of maine", "news / talk", "live 3p - 7p", "blueberry broadcasting"]], "query": "eq { count { filter_eq { all_rows ; timeslot ; live 3p-6p } } ; 5 } = true", "question": "there are five occasions when the timeslot was live 3p-6p ."}, {"topic": "nicolas marroc", "wiki": "https://en.wikipedia.org/wiki/Nicolas_Marroc", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26124171-1.html.csv", "action": "count", "sent": "three of the athletes scored a total of 0 points .", "annotation": {"scope": "all", "criterion": "equal", "value": "0", "result": "3", "col": "7", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "points", "0"], "result": null, "ind": 0, "tointer": "select the rows whose points record is equal to 0 .", "tostr": "filter_eq { all_rows ; points ; 0 }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; points ; 0 } }", "tointer": "select the rows whose points record is equal to 0 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; points ; 0 } } ; 3 } = true", "tointer": "select the rows whose points record is equal to 0 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; points ; 0 } } ; 3 } = true", "interpret": "select the rows whose points record is equal to 0 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "points_5": 5, "0_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "points_5": "points", "0_6": "0", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "points_5": [0], "0_6": [0], "3_7": [2]}, "table_header": ["season", "series", "team", "races", "wins", "podiums", "points", "position"], "table_cont": [["2006", "formule campus renault elf", "formule campus", "13", "0", "1", "44", "9th"], ["2007", "championnat de france formula renault 2.0", "tcs racing", "13", "0", "0", "0", "nc"], ["2007", "championnat de france formula renault 2.0", "pole services", "13", "0", "0", "0", "nc"], ["2007", "eurocup formula renault 2.0", "tcs racing", "4", "0", "0", "n / a", "nc"], ["2008", "formula renault 2.0 eurocup", "tcs racing", "10", "0", "0", "0", "45th"], ["2008", "formula renault 2.0 wec", "tcs racing", "7", "0", "0", "1", "27th"], ["2009", "german formula three", "racing experience", "18", "0", "0", "14", "12th"], ["2009", "british formula three national class", "racing experience", "2", "0", "1", "n / a", "nc"]], "query": "eq { count { filter_eq { all_rows ; points ; 0 } } ; 3 } = true", "question": "three of the athletes scored a total of 0 points ."}, {"topic": "list of south asian television channels by country", "wiki": "https://en.wikipedia.org/wiki/List_of_South_Asian_television_channels_by_country", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10503963-5.html.csv", "action": "majority", "sent": "the majority of starhub south asian television channels are originated from india .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "india", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "origin of programming", "india"], "result": true, "ind": 0, "tointer": "for the origin of programming records of all rows , most of them fuzzily match to india .", "tostr": "most_eq { all_rows ; origin of programming ; india } = true"}, "logic_str": "most_eq { all_rows ; origin of programming ; india } = true", "interpret": "for the origin of programming records of all rows , most of them fuzzily match to india .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "origin of programming_3": 3, "india_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "origin of programming_3": "origin of programming", "india_4": "india"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "origin of programming_3": [0], "india_4": [0]}, "table_header": ["network", "origin of programming", "language", "genre", "service"], "table_cont": [["asianet", "india", "malayalam", "general", "starhub"], ["channel india", "india", "hindi", "music", "starhub"], ["channel i", "bangladesh", "bengali", "general", "starhub"], ["colors", "india", "hindi", "general", "starhub"], ["set max", "india", "hindi", "movies", "starhub"], ["sony entertainment television asia", "india", "hindi", "general", "starhub"], ["star cricket", "india", "english", "cricket", "starhub"], ["star cricket hd", "india", "english", "cricket", "starhub"], ["star gold", "india", "hindi", "movies", "starhub"], ["star plus", "india", "hindi", "general", "starhub"], ["sun music", "india", "tamil", "music", "starhub"], ["sun tv", "india", "tamil", "general", "starhub"], ["ten cricket", "india", "english", "cricket", "starhub"], ["vannathirai", "singapore", "tamil", "movies", "starhub"], ["vijay", "india", "tamil", "general", "starhub"], ["zee cinema", "india", "hindi", "movies", "starhub"], ["zee news", "india", "hindi", "news", "starhub"], ["zee tv", "india", "hindi", "general", "starhub"]], "query": "most_eq { all_rows ; origin of programming ; india } = true", "question": "the majority of starhub south asian television channels are originated from india ."}, {"topic": "1975 - 76 phoenix suns season", "wiki": "https://en.wikipedia.org/wiki/1975%E2%80%9376_Phoenix_Suns_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-30047613-12.html.csv", "action": "unique", "sent": "in the 1975-76 phoenix suns season , in games where the suns won , the only game where alvan adams had the high points was on april 15th .", "annotation": {"scope": "subset", "row": "2", "col": "5", "col_other": "2", "criterion": "equal", "value": "alvan adams", "subset": {"col": "4", "criterion": "fuzzily_match", "value": "w"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "w"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; score ; w }", "tointer": "select the rows whose score record fuzzily matches to w ."}, "high points", "alvan adams"], "result": null, "ind": 1, "tointer": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high points record fuzzily matches to alvan adams .", "tostr": "filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } }", "tointer": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high points record fuzzily matches to alvan adams . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "w"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; score ; w }", "tointer": "select the rows whose score record fuzzily matches to w ."}, "high points", "alvan adams"], "result": null, "ind": 1, "tointer": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high points record fuzzily matches to alvan adams .", "tostr": "filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams }"}, "date"], "result": "april 15", "ind": 3, "tostr": "hop { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } ; date }"}, "april 15"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } ; date } ; april 15 }", "tointer": "the date record of this unqiue row is april 15 ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } ; date } ; april 15 } } = true", "tointer": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high points record fuzzily matches to alvan adams . there is only one such row in the table . the date record of this unqiue row is april 15 ."}, "logic_str": "and { only { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } ; date } ; april 15 } } = true", "interpret": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose high points record fuzzily matches to alvan adams . there is only one such row in the table . the date record of this unqiue row is april 15 .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_7": 7, "score_8": 8, "w_9": 9, "high points_10": 10, "alvan adams_11": 11, "str_eq_4": 4, "str_hop_3": 3, "date_12": 12, "april 15_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "score_8": "score", "w_9": "w", "high points_10": "high points", "alvan adams_11": "alvan adams", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "date_12": "date", "april 15_13": "april 15"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_str_eq_1": [2, 3], "filter_str_eq_0": [1], "all_rows_7": [0], "score_8": [0], "w_9": [0], "high points_10": [1], "alvan adams_11": [1], "str_eq_4": [5], "str_hop_3": [4], "date_12": [3], "april 15_13": [4]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "location attendance", "series", "streak"], "table_cont": [["1", "april 13", "seattle", "l 99 - 102", "paul westphal ( 24 )", "gar heard ( 10 )", "seattle center coliseum 12408", "0 - 1", "l 1"], ["2", "april 15", "seattle", "w 116 - 111", "alvan adams ( 23 )", "curtis perry ( 12 )", "seattle center coliseum 14096", "1 - 1", "w 1"], ["3", "april 18", "seattle", "w 103 - 91", "gar heard , paul westphal ( 16 )", "gar heard ( 14 )", "arizona veterans memorial coliseum 13036", "2 - 1", "w 2"], ["4", "april 20", "seattle", "w 130 - 114", "paul westphal ( 39 )", "gar heard ( 11 )", "arizona veterans memorial coliseum 13036", "3 - 1", "w 3"], ["5", "april 25", "seattle", "l 108 - 114", "paul westphal ( 27 )", "dennis awtrey ( 12 )", "seattle center coliseum 14096", "3 - 2", "l 1"]], "query": "and { only { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; high points ; alvan adams } ; date } ; april 15 } } = true", "question": "in the 1975-76 phoenix suns season , in games where the suns won , the only game where alvan adams had the high points was on april 15th ."}, {"topic": "parken stadium", "wiki": "https://en.wikipedia.org/wiki/Parken_Stadium", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1664918-1.html.csv", "action": "ordinal", "sent": "the third highest attendance at parken stadium was during a 2006 danish superliga match .", "annotation": {"row": "6", "col": "6", "order": "3", "col_other": "5", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 3 }"}, "competition"], "result": "danish superliga 2005 - 06", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 3 } ; competition }"}, "danish superliga 2005 - 06"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; competition } ; danish superliga 2005 - 06 } = true", "tointer": "select the row whose attendance record of all rows is 3rd maximum . the competition record of this row is danish superliga 2005 - 06 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; competition } ; danish superliga 2005 - 06 } = true", "interpret": "select the row whose attendance record of all rows is 3rd maximum . the competition record of this row is danish superliga 2005 - 06 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "3_6": 6, "competition_7": 7, "danish superliga 2005 - 06_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "3_6": "3", "competition_7": "competition", "danish superliga 2005 - 06_8": "danish superliga 2005 - 06"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "3_6": [0], "competition_7": [1], "danish superliga 2005 - 06_8": [2]}, "table_header": ["date", "team 1", "res", "team 2", "competition", "attendance"], "table_cont": [["9 september 1992", "denmark", "1 - 2", "germany", "friendly match", "40500"], ["4 may 1994", "arsenal", "1 - 0", "parma", "1994 european cup winners ' cup final", "33765"], ["17 may 2000", "galatasaray", "0 - 0 ( p 4 - 1 )", "arsenal", "2000 uefa cup final", "38919"], ["8 october 2005", "denmark", "1 - 0", "greece", "2006 fifa world cup qualifying group 2", "42099"], ["6 april 2006", "fc copenhagen", "1 - 0", "lillestr\u00f8m", "2006 royal league final", "13617"], ["30 april 2006", "fc copenhagen", "0 - 0", "br\u00f8ndby", "danish superliga 2005 - 06", "41201"], ["2 june 2007", "denmark", "0 - 3", "sweden", "uefa euro 2008 qualifying group f", "42083"], ["21 may 2011", "ag k\u00f8benhavn", "30 - 21", "bjerringbro - silkeborg", "2011 danish handball league final", "36651"], ["20 april 2012", "ag k\u00f8benhavn", "29 - 23", "fc barcelona", "2011 - 12 ehf champions league quarterfinal", "21293"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; competition } ; danish superliga 2005 - 06 } = true", "question": "the third highest attendance at parken stadium was during a 2006 danish superliga match ."}, {"topic": "1977 - 78 philadelphia flyers season", "wiki": "https://en.wikipedia.org/wiki/1977%E2%80%9378_Philadelphia_Flyers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14305802-4.html.csv", "action": "count", "sent": "the philadelphia flyers played the new york rangers a total of three times .", "annotation": {"scope": "all", "criterion": "equal", "value": "new york rangers", "result": "3", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "new york rangers"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to new york rangers .", "tostr": "filter_eq { all_rows ; opponent ; new york rangers }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; opponent ; new york rangers } }", "tointer": "select the rows whose opponent record fuzzily matches to new york rangers . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; opponent ; new york rangers } } ; 3 } = true", "tointer": "select the rows whose opponent record fuzzily matches to new york rangers . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; opponent ; new york rangers } } ; 3 } = true", "interpret": "select the rows whose opponent record fuzzily matches to new york rangers . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "opponent_5": 5, "new york rangers_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "opponent_5": "opponent", "new york rangers_6": "new york rangers", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "opponent_5": [0], "new york rangers_6": [0], "3_7": [2]}, "table_header": ["game", "december", "opponent", "score", "record", "points"], "table_cont": [["22", "1", "los angeles kings", "4 - 2", "15 - 4 - 3", "33"], ["23", "3", "colorado rockies", "6 - 3", "16 - 4 - 3", "35"], ["24", "7", "new york rangers", "3 - 3", "16 - 4 - 4", "36"], ["25", "8", "new york rangers", "7 - 4", "17 - 4 - 4", "38"], ["26", "10", "chicago black hawks", "4 - 2", "18 - 4 - 4", "40"], ["27", "11", "cleveland barons", "11 - 1", "19 - 4 - 4", "42"], ["28", "15", "boston bruins", "6 - 4", "20 - 4 - 4", "44"], ["29", "17", "atlanta flames", "4 - 3", "21 - 4 - 4", "46"], ["30", "18", "montreal canadiens", "0 - 2", "21 - 5 - 4", "46"], ["31", "21", "cleveland barons", "4 - 0", "22 - 5 - 4", "48"], ["32", "23", "boston bruins", "1 - 6", "22 - 6 - 4", "48"], ["33", "28", "new york rangers", "4 - 3", "23 - 6 - 4", "50"], ["34", "29", "minnesota north stars", "5 - 2", "24 - 6 - 4", "52"], ["35", "31", "st louis blues", "2 - 3", "24 - 7 - 4", "52"]], "query": "eq { count { filter_eq { all_rows ; opponent ; new york rangers } } ; 3 } = true", "question": "the philadelphia flyers played the new york rangers a total of three times ."}, {"topic": "list of cities , towns and villages in vojvodina", "wiki": "https://en.wikipedia.org/wiki/List_of_cities%2C_towns_and_villages_in_Vojvodina", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2562572-8.html.csv", "action": "majority", "sent": "all of the cities , towns , and villages in vojvodina are in the district srem .", "annotation": {"scope": "all", "col": "4", "most_or_all": "all", "criterion": "equal", "value": "srem", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "district", "srem"], "result": true, "ind": 0, "tointer": "for the district records of all rows , all of them fuzzily match to srem .", "tostr": "all_eq { all_rows ; district ; srem } = true"}, "logic_str": "all_eq { all_rows ; district ; srem } = true", "interpret": "for the district records of all rows , all of them fuzzily match to srem .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "district_3": 3, "srem_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "district_3": "district", "srem_4": "srem"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "district_3": [0], "srem_4": [0]}, "table_header": ["urban settlement", "cyrillic name", "city / municipality", "district", "population ( 1991 )", "population ( 2002 )", "population ( 2011 )"], "table_cont": [["in\u0111ija", "\u0438\u043d\u0452\u0438\u0458\u0430", "in\u0111ija", "srem", "23061", "26247", "26025"], ["irig", "\u0438\u0440\u0438\u0433", "irig", "srem", "4414", "4848", "4415"], ["ma\u010dvanska mitrovica", "\u043c\u0430\u0447\u0432\u0430\u043d\u0441\u043a\u0430 \u043c\u0438\u0442\u0440\u043e\u0432\u0438\u0446\u0430", "sremska mitrovica", "srem", "3788", "3896", "3873"], ["ruma", "\u0440\u0443\u043c\u0430", "ruma", "srem", "28582", "32229", "30076"], ["sremska mitrovica", "\u0441\u0440\u0435\u043c\u0441\u043a\u0430 \u043c\u0438\u0442\u0440\u043e\u0432\u0438\u0446\u0430", "sremska mitrovica", "srem", "38834", "39084", "37751"], ["stara pazova", "\u0441\u0442\u0430\u0440\u0430 \u043f\u0430\u0437\u043e\u0432\u0430", "stara pazova", "srem", "17110", "18645", "18602"]], "query": "all_eq { all_rows ; district ; srem } = true", "question": "all of the cities , towns , and villages in vojvodina are in the district srem ."}, {"topic": "list of cities , towns and villages in vojvodina", "wiki": "https://en.wikipedia.org/wiki/List_of_cities%2C_towns_and_villages_in_Vojvodina", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2562572-8.html.csv", "action": "count", "sent": "for the cities , towns , and villages in vojvodina , there were four urban settlements that had a population of over 15,000 in 1991 .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "15,000", "result": "4", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "population ( 1991 )", "15,000"], "result": null, "ind": 0, "tointer": "select the rows whose population ( 1991 ) record is greater than 15,000 .", "tostr": "filter_greater { all_rows ; population ( 1991 ) ; 15,000 }"}], "result": "4", "ind": 1, "tostr": "count { filter_greater { all_rows ; population ( 1991 ) ; 15,000 } }", "tointer": "select the rows whose population ( 1991 ) record is greater than 15,000 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; population ( 1991 ) ; 15,000 } } ; 4 } = true", "tointer": "select the rows whose population ( 1991 ) record is greater than 15,000 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_greater { all_rows ; population ( 1991 ) ; 15,000 } } ; 4 } = true", "interpret": "select the rows whose population ( 1991 ) record is greater than 15,000 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "population (1991)_5": 5, "15,000_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "population (1991)_5": "population ( 1991 )", "15,000_6": "15,000", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "population (1991)_5": [0], "15,000_6": [0], "4_7": [2]}, "table_header": ["urban settlement", "cyrillic name", "city / municipality", "district", "population ( 1991 )", "population ( 2002 )", "population ( 2011 )"], "table_cont": [["in\u0111ija", "\u0438\u043d\u0452\u0438\u0458\u0430", "in\u0111ija", "srem", "23061", "26247", "26025"], ["irig", "\u0438\u0440\u0438\u0433", "irig", "srem", "4414", "4848", "4415"], ["ma\u010dvanska mitrovica", "\u043c\u0430\u0447\u0432\u0430\u043d\u0441\u043a\u0430 \u043c\u0438\u0442\u0440\u043e\u0432\u0438\u0446\u0430", "sremska mitrovica", "srem", "3788", "3896", "3873"], ["ruma", "\u0440\u0443\u043c\u0430", "ruma", "srem", "28582", "32229", "30076"], ["sremska mitrovica", "\u0441\u0440\u0435\u043c\u0441\u043a\u0430 \u043c\u0438\u0442\u0440\u043e\u0432\u0438\u0446\u0430", "sremska mitrovica", "srem", "38834", "39084", "37751"], ["stara pazova", "\u0441\u0442\u0430\u0440\u0430 \u043f\u0430\u0437\u043e\u0432\u0430", "stara pazova", "srem", "17110", "18645", "18602"]], "query": "eq { count { filter_greater { all_rows ; population ( 1991 ) ; 15,000 } } ; 4 } = true", "question": "for the cities , towns , and villages in vojvodina , there were four urban settlements that had a population of over 15,000 in 1991 ."}, {"topic": "drayton manor theme park", "wiki": "https://en.wikipedia.org/wiki/Drayton_Manor_Theme_Park", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1520959-1.html.csv", "action": "ordinal", "sent": "the shock wave ride is the second oldest ride at drayton manor theme park .", "annotation": {"row": "1", "col": "3", "order": "2", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "opened", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; opened ; 2 }"}, "name"], "result": "the shock wave", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; opened ; 2 } ; name }"}, "the shock wave"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; opened ; 2 } ; name } ; the shock wave } = true", "tointer": "select the row whose opened record of all rows is 2nd minimum . the name record of this row is the shock wave ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; opened ; 2 } ; name } ; the shock wave } = true", "interpret": "select the row whose opened record of all rows is 2nd minimum . the name record of this row is the shock wave .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "opened_5": 5, "2_6": 6, "name_7": 7, "the shock wave_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "opened_5": "opened", "2_6": "2", "name_7": "name", "the shock wave_8": "the shock wave"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "opened_5": [0], "2_6": [0], "name_7": [1], "the shock wave_8": [2]}, "table_header": ["name", "style", "opened", "manufacturer", "themed area"], "table_cont": [["the shock wave", "standing up rollercoaster", "1994", "intamin", "action park"], ["g force", "steel sit down", "2005", "mauer s\u00f6hne", "action park"], ["ben 10 - ultimate mission", "steel sit down", "2011", "vekoma", "aerial park"], ["buffalo mountain coaster", "steel sit down", "1987", "zamperla", "aerial park"], ["troublesome trucks runaway coaster", "steel sit down", "2008", "gerstlauer", "thomas land"]], "query": "eq { hop { nth_argmin { all_rows ; opened ; 2 } ; name } ; the shock wave } = true", "question": "the shock wave ride is the second oldest ride at drayton manor theme park ."}, {"topic": "2004 las vegas gladiators season", "wiki": "https://en.wikipedia.org/wiki/2004_Las_Vegas_Gladiators_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12027173-1.html.csv", "action": "unique", "sent": "in the 2004 las vegas gladiators season , only one game against arizona went to overtime ( ot ) .", "annotation": {"scope": "subset", "row": "6", "col": "4", "col_other": "3", "criterion": "fuzzily_match", "value": "ot", "subset": {"col": "3", "criterion": "equal", "value": "arizona"}}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "arizona"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; opponent ; arizona }", "tointer": "select the rows whose opponent record fuzzily matches to arizona ."}, "result", "ot"], "result": null, "ind": 1, "tointer": "select the rows whose opponent record fuzzily matches to arizona . among these rows , select the rows whose result record fuzzily matches to ot .", "tostr": "filter_eq { filter_eq { all_rows ; opponent ; arizona } ; result ; ot }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_eq { all_rows ; opponent ; arizona } ; result ; ot } } = true", "tointer": "select the rows whose opponent record fuzzily matches to arizona . among these rows , select the rows whose result record fuzzily matches to ot . there is only one such row in the table ."}, "logic_str": "only { filter_eq { filter_eq { all_rows ; opponent ; arizona } ; result ; ot } } = true", "interpret": "select the rows whose opponent record fuzzily matches to arizona . among these rows , select the rows whose result record fuzzily matches to ot . there is only one such row in the table .", "num_func": 3, "nid": 3, "g_ids": {"only_2": 2, "result_3": 3, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "opponent_5": 5, "arizona_6": 6, "result_7": 7, "ot_8": 8}, "g_ids_features": {"only_2": "only", "result_3": "true", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "opponent_5": "opponent", "arizona_6": "arizona", "result_7": "result", "ot_8": "ot"}, "g_adj": {"only_2": [3], "result_3": [], "filter_str_eq_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "opponent_5": [0], "arizona_6": [0], "result_7": [1], "ot_8": [1]}, "table_header": ["week", "date", "opponent", "result", "record"], "table_cont": [["1", "february 6", "colorado", "l 43 - 42", "0 - 1"], ["2", "february 14", "los angeles", "l 62 - 55", "0 - 2"], ["3", "february 22", "grand rapids", "w 51 - 14", "1 - 2"], ["4", "february 29", "new orleans", "w 50 - 30", "2 - 2"], ["5", "march 7", "georgia", "l 55 - 40", "2 - 3"], ["6", "march 14", "arizona", "w 65 - 64 ( ot )", "3 - 3"], ["7", "march 20", "san jose", "l 79 - 62", "3 - 4"], ["8", "march 27", "orlando", "l 60 - 43", "3 - 5"], ["9", "april 4", "chicago", "l 57 - 55", "3 - 6"], ["10", "april 10", "arizona", "l 80 - 63", "3 - 7"], ["12", "april 25", "detroit", "w 60 - 34", "4 - 7"], ["13", "may 2", "indiana", "w 60 - 38", "5 - 7"], ["14", "may 8", "philadelphia", "w 63 - 35", "6 - 7"], ["15", "may 16", "san jose", "w 44 - 35", "7 - 7"], ["16", "may 22", "los angeles", "l 54 - 51", "7 - 8"], ["17", "may 30", "columbus", "w 64 - 51", "8 - 8"]], "query": "only { filter_eq { filter_eq { all_rows ; opponent ; arizona } ; result ; ot } } = true", "question": "in the 2004 las vegas gladiators season , only one game against arizona went to overtime ( ot ) ."}, {"topic": "2007 - 08 plymouth argyle f.c. season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Plymouth_Argyle_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12666456-6.html.csv", "action": "majority", "sent": "all of the transfers for plymouth argyle f.c. end in the year 2008 .", "annotation": {"scope": "all", "col": "6", "most_or_all": "all", "criterion": "equal", "value": "2008", "subset": null}, "logic": {"func": "all_eq", "args": ["all_rows", "ends", "2008"], "result": true, "ind": 0, "tointer": "for the ends records of all rows , all of them are equal to 2008 .", "tostr": "all_eq { all_rows ; ends ; 2008 } = true"}, "logic_str": "all_eq { all_rows ; ends ; 2008 } = true", "interpret": "for the ends records of all rows , all of them are equal to 2008 .", "num_func": 1, "nid": 1, "g_ids": {"all_eq_0": 0, "result_1": 1, "all_rows_2": 2, "ends_3": 3, "2008_4": 4}, "g_ids_features": {"all_eq_0": "all_eq", "result_1": "true", "all_rows_2": "all_rows", "ends_3": "ends", "2008_4": "2008"}, "g_adj": {"all_eq_0": [1], "result_1": [], "all_rows_2": [0], "ends_3": [0], "2008_4": [0]}, "table_header": ["name", "country", "type", "moving from", "transfer window", "ends", "transfer fee"], "table_cont": [["abdou", "fra", "signed", "sedan", "summer", "2008", "free"], ["mabiala", "fra", "loan", "parissaint - germain", "summer", "2008", "loan"], ["martin", "eng", "loan", "manchester united", "summer", "2008", "loan"], ["easter", "wal", "transfer", "wycombe wanderers", "winter", "2008", "210k"], ["jutkiewicz", "eng", "loan", "everton", "winter", "2008", "loan"], ["folly", "fra", "transfer", "sheffield wednesday", "winter", "2008", "xxxk"]], "query": "all_eq { all_rows ; ends ; 2008 } = true", "question": "all of the transfers for plymouth argyle f.c. end in the year 2008 ."}, {"topic": "kira nagy", "wiki": "https://en.wikipedia.org/wiki/Kira_Nagy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12531158-2.html.csv", "action": "majority", "sent": "the majority of these tournaments took place on a clay surface .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "clay", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "surface", "clay"], "result": true, "ind": 0, "tointer": "for the surface records of all rows , most of them fuzzily match to clay .", "tostr": "most_eq { all_rows ; surface ; clay } = true"}, "logic_str": "most_eq { all_rows ; surface ; clay } = true", "interpret": "for the surface records of all rows , most of them fuzzily match to clay .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "surface_3": 3, "clay_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "surface_3": "surface", "clay_4": "clay"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "surface_3": [0], "clay_4": [0]}, "table_header": ["date", "tournament", "surface", "opponent in the final", "score"], "table_cont": [["oct 2 , 1994", "mali lo\u0161inj", "clay", "radka surova", "6 - 4 , 6 - 2"], ["nov 26 , 1995", "majorca", "clay ( i )", "andrea nosz\u00e1ly", "6 - 4 , 6 - 3"], ["sep 14 , 1997", "madrid", "clay", "nuria montero", "6 - 1 , 6 - 0"], ["apr 5 , 1998", "athens", "clay", "christ\u00edna papad\u00e1ki", "7 - 5 , 2 - 6 , 6 - 3"], ["apr 12 , 1998", "dubai", "hard", "wynne prakusya", "6 - 4 , 6 - 1"], ["nov 14 , 1999", "monterrey", "hard", "ansley cargill", "6 - 4 , 6 - 2"], ["nov 21 , 1999", "campos", "clay", "miriam dagostini", "5 - 7 6 - 3 6 - 2"], ["may 28 , 2000", "guimar\u00e3es", "hard", "bahia mouhtassine", "6 - 0 , 5 - 7 , 7 - 6"], ["jun 18 , 2000", "lenzerheide", "clay", "julia vakulenko", "6 - 2 , 3 - 6 , 7 - 6"], ["oct 21 , 2001", "jou\u00e9 - l\u00e8s - tours", "hard ( i )", "anne - laure heitz", "1 - 6 , 6 - 4 , 6 - 0"], ["sep 28 , 2003", "jounieh", "clay", "ana timoti\u0107", "6 - 1 , 7 - 5"], ["nov 16 , 2003", "mexico city", "hard", "melinda czink", "6 - 2 , 6 - 3"], ["apr 2 , 2006", "poza rica", "hard", "zs\u00f3fia gubacsi", "6 - 4 , 6 - 2"], ["jun 19 , 2006", "zagreb", "clay", "tathiana garbin", "7 - 6 , 3 - 6 , 7 - 6"], ["jul 23 , 2006", "rome", "clay", "aliz\u00e9 cornet", "6 - 2 , 6 - 7 , 6 - 4"], ["jun 10 , 2007", "zagreb", "clay", "ivana lisjak", "2 - 6 , 7 - 6 , 6 - 2"], ["jun 17 , 2007", "campobasso", "clay", "christina wheeler", "6 - 2 , 6 - 0"], ["jul 1 , 2007", "istanbul", "hard", "maria fernanda alves", "6 - 7 , 7 - 5 , 6 - 1"]], "query": "most_eq { all_rows ; surface ; clay } = true", "question": "the majority of these tournaments took place on a clay surface ."}, {"topic": "cusco province", "wiki": "https://en.wikipedia.org/wiki/Cusco_Province", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10877159-1.html.csv", "action": "unique", "sent": "wanchaq is the only city district in cusco province with an elevation of at least 3400 msl .", "annotation": {"scope": "all", "row": "4", "col": "6", "col_other": "1", "criterion": "equal", "value": "3400 msl", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "elevation msl", "3400 msl"], "result": null, "ind": 0, "tointer": "select the rows whose elevation msl record fuzzily matches to 3400 msl .", "tostr": "filter_eq { all_rows ; elevation msl ; 3400 msl }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; elevation msl ; 3400 msl } }", "tointer": "select the rows whose elevation msl record fuzzily matches to 3400 msl . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "elevation msl", "3400 msl"], "result": null, "ind": 0, "tointer": "select the rows whose elevation msl record fuzzily matches to 3400 msl .", "tostr": "filter_eq { all_rows ; elevation msl ; 3400 msl }"}, "city district"], "result": "santiago", "ind": 2, "tostr": "hop { filter_eq { all_rows ; elevation msl ; 3400 msl } ; city district }"}, "santiago"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; elevation msl ; 3400 msl } ; city district } ; santiago }", "tointer": "the city district record of this unqiue row is santiago ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; elevation msl ; 3400 msl } } ; eq { hop { filter_eq { all_rows ; elevation msl ; 3400 msl } ; city district } ; santiago } } = true", "tointer": "select the rows whose elevation msl record fuzzily matches to 3400 msl . there is only one such row in the table . the city district record of this unqiue row is santiago ."}, "logic_str": "and { only { filter_eq { all_rows ; elevation msl ; 3400 msl } } ; eq { hop { filter_eq { all_rows ; elevation msl ; 3400 msl } ; city district } ; santiago } } = true", "interpret": "select the rows whose elevation msl record fuzzily matches to 3400 msl . there is only one such row in the table . the city district record of this unqiue row is santiago .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "elevation msl_7": 7, "3400 msl_8": 8, "str_eq_3": 3, "str_hop_2": 2, "city district_9": 9, "santiago_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "elevation msl_7": "elevation msl", "3400 msl_8": "3400 msl", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "city district_9": "city district", "santiago_10": "santiago"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "elevation msl_7": [0], "3400 msl_8": [0], "str_eq_3": [4], "str_hop_2": [3], "city district_9": [2], "santiago_10": [3]}, "table_header": ["city district", "area km square", "population 2007 census ( hab )", "housing ( 2007 )", "density ( hab / km square )", "elevation msl"], "table_cont": [["cuzco", "116.22 km square", "108798", "28476", "936.1", "3399 msl"], ["san jer\u00f3nimo", "103.34 km square", "28856", "8942", "279.2", "3244 msl"], ["san sebasti\u00e1n", "89.44 km square", "85472", "18109", "955.6", "3244 msl"], ["santiago", "69.72 km square", "66277", "21168", "950.6", "3400 msl"], ["wanchaq", "6.38 km square", "54524", "14690", "8546.1", "3366 msl"], ["total", "385.1 km square", "358052", "91385", "929.76", "-"]], "query": "and { only { filter_eq { all_rows ; elevation msl ; 3400 msl } } ; eq { hop { filter_eq { all_rows ; elevation msl ; 3400 msl } ; city district } ; santiago } } = true", "question": "wanchaq is the only city district in cusco province with an elevation of at least 3400 msl ."}, {"topic": "1938 vfl season", "wiki": "https://en.wikipedia.org/wiki/1938_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10806592-1.html.csv", "action": "aggregation", "sent": "the 1938 vfl season drew a total crowd of 105,000 people .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "105,000", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "crowd"], "result": "105,000", "ind": 0, "tostr": "sum { all_rows ; crowd }"}, "105,000"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; crowd } ; 105,000 } = true", "tointer": "the sum of the crowd record of all rows is 105,000 ."}, "logic_str": "round_eq { sum { all_rows ; crowd } ; 105,000 } = true", "interpret": "the sum of the crowd record of all rows is 105,000 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "crowd_4": 4, "105,000_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "crowd_4": "crowd", "105,000_5": "105,000"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "crowd_4": [0], "105,000_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "17.13 ( 115 )", "melbourne", "20.12 ( 132 )", "corio oval", "16000", "23 april 1938"], ["essendon", "17.17 ( 119 )", "st kilda", "12.13 ( 85 )", "windy hill", "15000", "23 april 1938"], ["richmond", "19.26 ( 140 )", "north melbourne", "9.9 ( 63 )", "punt road oval", "16000", "23 april 1938"], ["south melbourne", "14.13 ( 97 )", "footscray", "9.14 ( 68 )", "lake oval", "18000", "23 april 1938"], ["fitzroy", "12.15 ( 87 )", "collingwood", "14.21 ( 105 )", "brunswick street oval", "22000", "23 april 1938"], ["hawthorn", "11.10 ( 76 )", "carlton", "14.8 ( 92 )", "glenferrie oval", "18000", "23 april 1938"]], "query": "round_eq { sum { all_rows ; crowd } ; 105,000 } = true", "question": "the 1938 vfl season drew a total crowd of 105,000 people ."}, {"topic": "list of sons of anarchy episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Sons_of_Anarchy_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-20726262-3.html.csv", "action": "count", "sent": "2 episodes of the show were directed by guy ferland .", "annotation": {"scope": "all", "criterion": "equal", "value": "guy ferland", "result": "2", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "directedby", "guy ferland"], "result": null, "ind": 0, "tointer": "select the rows whose directedby record fuzzily matches to guy ferland .", "tostr": "filter_eq { all_rows ; directedby ; guy ferland }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; directedby ; guy ferland } }", "tointer": "select the rows whose directedby record fuzzily matches to guy ferland . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; directedby ; guy ferland } } ; 2 } = true", "tointer": "select the rows whose directedby record fuzzily matches to guy ferland . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; directedby ; guy ferland } } ; 2 } = true", "interpret": "select the rows whose directedby record fuzzily matches to guy ferland . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "directedby_5": 5, "guy ferland_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "directedby_5": "directedby", "guy ferland_6": "guy ferland", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "directedby_5": [0], "guy ferland_6": [0], "2_7": [2]}, "table_header": ["no in series", "no in season", "title", "directedby", "writtenby", "originalairdate", "production code", "usviewers ( million )"], "table_cont": [["14", "1", "albification", "guy ferland", "kurt sutter", "september 8 , 2009", "2wab01", "4.29"], ["15", "2", "small tears", "stephen kay", "jack logiudice", "september 15 , 2009", "2wab02", "n / a"], ["16", "3", "fix", "gwyneth horder - payton", "dave erickson", "september 22 , 2009", "2wab03", "3.49"], ["17", "4", "eureka", "guy ferland", "kurt sutter & brett conrad", "september 29 , 2009", "2wab04", "3.76"], ["18", "5", "smite", "terrence o'hara", "chris collins", "october 6 , 2009", "2wab05", "n / a"], ["19", "6", "falx cerebri", "billy gierhart", "regina corrado", "october 13 , 2009", "2wab06", "n / a"], ["20", "7", "gilead", "gwyneth horder - payton", "kurt sutter & chris collins", "october 20 , 2009", "2wab07", "3.70"], ["21", "8", "potlatch", "paul maibaum", "kurt sutter & misha green", "october 27 , 2009", "2wab08", "3.39"], ["22", "9", "fa guan", "stephen kay", "brett conrad & liz sagal", "november 3 , 2009", "2wab09", "3.52"], ["23", "10", "balm", "paris barclay", "dave erickson & stevie long", "november 10 , 2009", "2wab10", "3.38"], ["25", "12", "the culling", "gwyneth horder - payton", "kurt sutter & dave erickson", "november 24 , 2009", "2wab12", "n / a"]], "query": "eq { count { filter_eq { all_rows ; directedby ; guy ferland } } ; 2 } = true", "question": "2 episodes of the show were directed by guy ferland ."}, {"topic": "1934 vfl season", "wiki": "https://en.wikipedia.org/wiki/1934_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790510-1.html.csv", "action": "superlative", "sent": "the highest points scored in the the games of the 1934 vfl season listed was by south melbourne .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "4", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "home team score"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; home team score }"}, "away team score"], "result": "13.14 ( 92 )", "ind": 1, "tostr": "hop { argmax { all_rows ; home team score } ; away team score }"}, "13.14 ( 92 )"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; home team score } ; away team score } ; 13.14 ( 92 ) } = true", "tointer": "select the row whose home team score record of all rows is maximum . the away team score record of this row is 13.14 ( 92 ) ."}, "logic_str": "eq { hop { argmax { all_rows ; home team score } ; away team score } ; 13.14 ( 92 ) } = true", "interpret": "select the row whose home team score record of all rows is maximum . the away team score record of this row is 13.14 ( 92 ) .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "home team score_5": 5, "away team score_6": 6, "13.14 (92)_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "home team score_5": "home team score", "away team score_6": "away team score", "13.14 (92)_7": "13.14 ( 92 )"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "home team score_5": [0], "away team score_6": [1], "13.14 (92)_7": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "16.13 ( 109 )", "st kilda", "11.7 ( 73 )", "corio oval", "15000", "5 may 1934"], ["fitzroy", "11.16 ( 82 )", "north melbourne", "10.11 ( 71 )", "brunswick street oval", "21000", "5 may 1934"], ["essendon", "19.11 ( 125 )", "footscray", "16.18 ( 114 )", "windy hill", "21000", "5 may 1934"], ["richmond", "18.14 ( 122 )", "melbourne", "12.9 ( 81 )", "punt road oval", "17000", "5 may 1934"], ["south melbourne", "19.13 ( 127 )", "collingwood", "13.14 ( 92 )", "lake oval", "38000", "5 may 1934"], ["hawthorn", "12.8 ( 80 )", "carlton", "17.26 ( 128 )", "glenferrie oval", "17000", "5 may 1934"]], "query": "eq { hop { argmax { all_rows ; home team score } ; away team score } ; 13.14 ( 92 ) } = true", "question": "the highest points scored in the the games of the 1934 vfl season listed was by south melbourne ."}, {"topic": "1991 - 92 manchester united f.c. season", "wiki": "https://en.wikipedia.org/wiki/1991%E2%80%9392_Manchester_United_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17577144-1.html.csv", "action": "superlative", "sent": "manchester united 's highest margin of victory in 1991-1992 was against dumbarton .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "result f - a"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; result f - a }"}, "opponents"], "result": "dumbarton", "ind": 1, "tostr": "hop { argmax { all_rows ; result f - a } ; opponents }"}, "dumbarton"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; result f - a } ; opponents } ; dumbarton } = true", "tointer": "select the row whose result f - a record of all rows is maximum . the opponents record of this row is dumbarton ."}, "logic_str": "eq { hop { argmax { all_rows ; result f - a } ; opponents } ; dumbarton } = true", "interpret": "select the row whose result f - a record of all rows is maximum . the opponents record of this row is dumbarton .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "result f - a_5": 5, "opponents_6": 6, "dumbarton_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "result f - a_5": "result f - a", "opponents_6": "opponents", "dumbarton_7": "dumbarton"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "result f - a_5": [0], "opponents_6": [1], "dumbarton_7": [2]}, "table_header": ["date", "opponents", "h / a", "result f - a", "scorers"], "table_cont": [["24 july 1991", "mazda", "h", "1 - 2", "ferguson"], ["29 july 1991", "str\u00f8msgodset", "a", "3 - 1", "ince , beardsmore , wallace"], ["30 july 1991", "viking", "a", "1 - 0", "robins"], ["1 august 1991", "molde", "a", "3 - 1", "blackmore , hughes ( 2 )"], ["4 august 1991", "dumbarton", "a", "5 - 0", "robins ( 2 ) , hughes ( 2 ) , mcclair"], ["5 august 1991", "aberdeen", "a", "1 - 1 ( 4 - 3 p )", "hughes"], ["7 august 1991", "austria memphis", "a", "1 - 5", "mcclair"], ["11 august 1991", "republic of ireland xi", "h", "1 - 1", "robson"], ["3 may 1992", "everton", "h", "2 - 4", "ince , hughes"], ["8 may 1992", "manchester city", "a", "2 - 1", "bruce ( pen ) , toal"]], "query": "eq { hop { argmax { all_rows ; result f - a } ; opponents } ; dumbarton } = true", "question": "manchester united 's highest margin of victory in 1991-1992 was against dumbarton ."}, {"topic": "2008 formula 3 euro series season", "wiki": "https://en.wikipedia.org/wiki/2008_Formula_3_Euro_Series_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15660445-7.html.csv", "action": "count", "sent": "three of the nor1 formula 3 euro series drivers are listed as retired .", "annotation": {"scope": "all", "criterion": "equal", "value": "ret", "result": "3", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nor 1", "ret"], "result": null, "ind": 0, "tointer": "select the rows whose nor 1 record fuzzily matches to ret .", "tostr": "filter_eq { all_rows ; nor 1 ; ret }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; nor 1 ; ret } }", "tointer": "select the rows whose nor 1 record fuzzily matches to ret . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; nor 1 ; ret } } ; 3 } = true", "tointer": "select the rows whose nor 1 record fuzzily matches to ret . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; nor 1 ; ret } } ; 3 } = true", "interpret": "select the rows whose nor 1 record fuzzily matches to ret . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "nor 1_5": 5, "ret_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "nor 1_5": "nor 1", "ret_6": "ret", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "nor 1_5": [0], "ret_6": [0], "3_7": [2]}, "table_header": ["driver", "nor 1", "nor 2", "zan 1", "zan 2", "n\u00fcr 1", "n\u00fcr 2"], "table_cont": [["erik jani\u0161", "8", "22", "12", "10", "ret", "12"], ["mika m\u00e4ki", "ret", "18", "2", "5", "4", "ret"], ["jules bianchi", "ret", "9", "3", "9", "2", "3"], ["jon lancaster", "5", "ret", "ret", "ret", "7", "1"], ["richard philippe", "22", "16", "16", "12", "10", "18"], ["robert wickens", "7", "2", "8", "ret", "12", "16"], ["stefano coletti", "11", "6", "19", "ret", "9", "ret"], ["daniel campos - hull", "17", "11", "23", "14", "20", "8"], ["henkie waldschmidt", "9", "ret", "17", "ret", "15", "17"], ["jens klingmann", "15", "10", "21", "18", "16", "10"], ["martin plowman", "ret", "ret", "20", "17", "17", "21"], ["driver", "nor 1", "nor 2", "zan 1", "zan 2", "n\u00fcr 1", "n\u00fcr 2"]], "query": "eq { count { filter_eq { all_rows ; nor 1 ; ret } } ; 3 } = true", "question": "three of the nor1 formula 3 euro series drivers are listed as retired ."}, {"topic": "project runway", "wiki": "https://en.wikipedia.org/wiki/Project_Runway", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1597866-3.html.csv", "action": "count", "sent": "three versions of project runway premiered in 2009 .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "2009", "result": "3", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "first premiere", "2009"], "result": null, "ind": 0, "tointer": "select the rows whose first premiere record fuzzily matches to 2009 .", "tostr": "filter_eq { all_rows ; first premiere ; 2009 }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; first premiere ; 2009 } }", "tointer": "select the rows whose first premiere record fuzzily matches to 2009 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; first premiere ; 2009 } } ; 3 } = true", "tointer": "select the rows whose first premiere record fuzzily matches to 2009 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; first premiere ; 2009 } } ; 3 } = true", "interpret": "select the rows whose first premiere record fuzzily matches to 2009 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "first premiere_5": 5, "2009_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "first premiere_5": "first premiere", "2009_6": "2009", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "first premiere_5": [0], "2009_6": [0], "3_7": [2]}, "table_header": ["country", "name", "host", "channel", "first premiere", "regular judge", "seasons"], "table_cont": [["arab world", "\u0627\u0644\u0645\u0635\u0645\u0645 \u0627\u0644\u0639\u0631\u0628\u064a el musamim el arabi", "norma naoum", "future tv", "february 26 , 2006", "norma naoum maria aziz rabih keyrouz ( mentor )", "2"], ["canada", "project runway canada", "iman", "slice global", "october 8 , 2007", "shawn hewson rita silvan brian bailey ( mentor )", "2"], ["hong kong", "\u6642\u88dd\u4e16\u754c\u7cbe\u82f1\u5927\u734e fashion world talent awards", "terence yin", "tvb pearl", "2009", "tina liu judy mann wing shya", "1"], ["israel", "\u05e4\u05e8\u05d5\u05d9\u05e7\u05d8 \u05de\u05e1\u05dc\u05d5\u05dc proyekt maslul", "shiraz tal", "channel 2 ( reshet )", "june 17 , 2009 - october 2009", "vivi bleish gal afel sason kedem ( mentor )", "1"], ["malaysia", "project runway malaysia", "bernie chan", "8tv", "august 3 , 2007", "bernie chan datuk bernard chandran", "1"], ["poland", "project runway", "anja rubik", "tvn", "march 2014", "joanna trzetakiewicz", "1"], ["south korea", "\ud504\ub85c\uc81d\ud2b8 \ub7f0\uc6e8\uc774 \ucf54\ub9ac\uc544 project runway korea", "lee so - ra", "onstyle", "february 7 , 2009", "shin yoo - jin kim seok - won kan ho - sup ( mentor )", "4"]], "query": "eq { count { filter_eq { all_rows ; first premiere ; 2009 } } ; 3 } = true", "question": "three versions of project runway premiered in 2009 ."}, {"topic": "1993 in film", "wiki": "https://en.wikipedia.org/wiki/1993_in_film", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-171575-1.html.csv", "action": "superlative", "sent": "jurassic park was the movie that recorded the highest worldwide gross in 1993 .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "worldwide gross"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; worldwide gross }"}, "title"], "result": "jurassic park", "ind": 1, "tostr": "hop { argmax { all_rows ; worldwide gross } ; title }"}, "jurassic park"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; worldwide gross } ; title } ; jurassic park } = true", "tointer": "select the row whose worldwide gross record of all rows is maximum . the title record of this row is jurassic park ."}, "logic_str": "eq { hop { argmax { all_rows ; worldwide gross } ; title } ; jurassic park } = true", "interpret": "select the row whose worldwide gross record of all rows is maximum . the title record of this row is jurassic park .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "worldwide gross_5": 5, "title_6": 6, "jurassic park_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "worldwide gross_5": "worldwide gross", "title_6": "title", "jurassic park_7": "jurassic park"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "worldwide gross_5": [0], "title_6": [1], "jurassic park_7": [2]}, "table_header": ["rank", "title", "studio", "director", "worldwide gross"], "table_cont": [["1", "jurassic park", "universal studios / amblin entertainment", "steven spielberg", "914691118"], ["2", "mrs doubtfire", "20th century fox", "chris columbus", "441286195"], ["3", "the fugitive", "warner bros", "andrew davis", "368875760"], ["4", "schindler 's list", "universal pictures", "steven spielberg", "321306305"], ["5", "the firm", "paramount pictures", "sydney pollack", "270248367"], ["6", "indecent proposal", "paramount pictures", "adrian lyne", "266614059"], ["7", "cliffhanger", "tristar pictures", "renny harlin", "255000211"], ["8", "sleepless in seattle", "tristar pictures", "nora ephron", "227799884"], ["9", "philadelphia", "tristar pictures", "jonathan demme", "206678440"], ["10", "the pelican brief", "warner bros", "alan j pakula", "195268056"], ["11", "in the line of fire", "columbia pictures", "wolfgang petersen", "187343874"], ["12", "cool runnings", "buena vista", "jon turteltaub", "154856263"], ["13", "free willy", "warner bros", "simon wincer", "153698625"], ["14", "sommersby", "warner bros", "jon amiel", "140081992"], ["15", "last action hero", "columbia pictures", "john mctiernan", "137298489"], ["16", "a perfect world", "warner bros", "clint eastwood", "135130999"], ["17", "hot shots ! part deux", "20th century fox", "jim abrahams", "133752825"], ["18", "beethoven 's 2nd", "universal studios", "rod daniel", "118243066"], ["19", "dennis the menace", "warner bros", "nick castle", "117270765"], ["20", "sliver", "paramount pictures", "phillip noyce", "116300000"]], "query": "eq { hop { argmax { all_rows ; worldwide gross } ; title } ; jurassic park } = true", "question": "jurassic park was the movie that recorded the highest worldwide gross in 1993 ."}, {"topic": "list of ngc objects ( 5001 - 6000 )", "wiki": "https://en.wikipedia.org/wiki/List_of_NGC_objects_%285001%E2%80%936000%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11051845-2.html.csv", "action": "count", "sent": "4 of the ngc objects are found in the centarus constillation .", "annotation": {"scope": "all", "criterion": "equal", "value": "centaurus", "result": "4", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "constellation", "centaurus"], "result": null, "ind": 0, "tointer": "select the rows whose constellation record fuzzily matches to centaurus .", "tostr": "filter_eq { all_rows ; constellation ; centaurus }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; constellation ; centaurus } }", "tointer": "select the rows whose constellation record fuzzily matches to centaurus . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; constellation ; centaurus } } ; 4 } = true", "tointer": "select the rows whose constellation record fuzzily matches to centaurus . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; constellation ; centaurus } } ; 4 } = true", "interpret": "select the rows whose constellation record fuzzily matches to centaurus . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "constellation_5": 5, "centaurus_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "constellation_5": "constellation", "centaurus_6": "centaurus", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "constellation_5": [0], "centaurus_6": [0], "4_7": [2]}, "table_header": ["ngc number", "object type", "constellation", "right ascension ( j2000 )", "declination ( j2000 )", "apparent magnitude"], "table_cont": [["5101", "spiral galaxy", "hydra", "13h21 m46 .6 s", "degree25 \u2032 53 \u2033", "11.5"], ["5102", "lenticular galaxy", "centaurus", "13h21 m57 .8 s", "degree37 \u2032 47 \u2033", "10.4"], ["5112", "spiral galaxy", "canes venatici", "13h21 m56 .7 s", "degree44 \u2032 07 \u2033", "12.5"], ["5128", "lenticular galaxy", "centaurus", "13h25 m27 .6 s", "degree01 \u2032 09 \u2033", "8.0"], ["5139", "globular cluster", "centaurus", "13h26 m45 .9 s", "degree28 \u2032 37 \u2033", "6.1"], ["5161", "spiral galaxy", "centaurus", "13h29 m14 .0 s", "degree10 \u2032 30 \u2033", "12.0"], ["5164", "spiral galaxy", "ursa major", "13h27 m12 .1 s", "degree29 \u2032 13 \u2033", "14.6"], ["5170", "spiral galaxy", "virgo", "13h29 m48 .9 s", "degree57 \u2032 59 \u2033", "11.9"], ["5189", "planetary nebula", "musca", "13h33 m33 .0 s", "degree58 \u2032 27 \u2033", "14.1"], ["5194", "spiral galaxy", "canes venatici", "13h29 m52 .4 s", "degree11 \u2032 41 \u2033", "8.8"], ["5195", "interacting galaxy", "canes venatici", "13h29 m59 .2 s", "degree16 \u2032 05 \u2033", "10.6"]], "query": "eq { count { filter_eq { all_rows ; constellation ; centaurus } } ; 4 } = true", "question": "4 of the ngc objects are found in the centarus constillation ."}, {"topic": "i brought you my bullets , you brought me your love", "wiki": "https://en.wikipedia.org/wiki/I_Brought_You_My_Bullets%2C_You_Brought_Me_Your_Love", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1449587-4.html.csv", "action": "comparative", "sent": "the album \" i brought you my bullets , you brought me your love \" was released in the united kingdom before it was released in japan .", "annotation": {"row_1": "2", "row_2": "1", "col": "2", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "region", "united kingdom"], "result": null, "ind": 0, "tointer": "select the rows whose region record fuzzily matches to united kingdom .", "tostr": "filter_eq { all_rows ; region ; united kingdom }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; region ; united kingdom } ; date }", "tointer": "select the rows whose region record fuzzily matches to united kingdom . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "region", "japan"], "result": null, "ind": 1, "tointer": "select the rows whose region record fuzzily matches to japan .", "tostr": "filter_eq { all_rows ; region ; japan }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; region ; japan } ; date }", "tointer": "select the rows whose region record fuzzily matches to japan . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; region ; united kingdom } ; date } ; hop { filter_eq { all_rows ; region ; japan } ; date } } = true", "tointer": "select the rows whose region record fuzzily matches to united kingdom . take the date record of this row . select the rows whose region record fuzzily matches to japan . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; region ; united kingdom } ; date } ; hop { filter_eq { all_rows ; region ; japan } ; date } } = true", "interpret": "select the rows whose region record fuzzily matches to united kingdom . take the date record of this row . select the rows whose region record fuzzily matches to japan . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "region_7": 7, "united kingdom_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "region_11": 11, "japan_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "region_7": "region", "united kingdom_8": "united kingdom", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "region_11": "region", "japan_12": "japan", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "region_7": [0], "united kingdom_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "region_11": [1], "japan_12": [1], "date_13": [3]}, "table_header": ["region", "date", "label", "format", "catalogue"], "table_cont": [["japan", "march 25 , 2009", "warner", "cd", "wpcr13347"], ["united kingdom", "april 12 , 2004", "eyeball , 20:20", "cd", "9866233"], ["united states", "july 23 , 2002", "eyeball", "cd", "eye20022"], ["united states", "june 21 , 2005", "eyeball", "cd", "7200222"], ["united states", "february 3 , 2009", "eyeball", "12 vinyl", "eye20059"]], "query": "less { hop { filter_eq { all_rows ; region ; united kingdom } ; date } ; hop { filter_eq { all_rows ; region ; japan } ; date } } = true", "question": "the album \" i brought you my bullets , you brought me your love \" was released in the united kingdom before it was released in japan ."}, {"topic": "golden gate transit", "wiki": "https://en.wikipedia.org/wiki/Golden_Gate_Transit", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1524075-3.html.csv", "action": "superlative", "sent": "the gm new look was the make with the highest quantity of golden gate transit buses .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "quantity"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; quantity }"}, "make"], "result": "gm new look", "ind": 1, "tostr": "hop { argmax { all_rows ; quantity } ; make }"}, "gm new look"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; quantity } ; make } ; gm new look } = true", "tointer": "select the row whose quantity record of all rows is maximum . the make record of this row is gm new look ."}, "logic_str": "eq { hop { argmax { all_rows ; quantity } ; make } ; gm new look } = true", "interpret": "select the row whose quantity record of all rows is maximum . the make record of this row is gm new look .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "quantity_5": 5, "make_6": 6, "gm new look_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "quantity_5": "quantity", "make_6": "make", "gm new look_7": "gm new look"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "quantity_5": [0], "make_6": [1], "gm new look_7": [2]}, "table_header": ["make", "year placed in service", "quantity", "number of seats", "wheelchair accessible", "current status"], "table_cont": [["gm new look", "1971 , 1972", "132", "45", "no", "retired , one bus retained for historical purposes"], ["gm advanced design", "1981", "16", "43", "yes", "retired"], ["gm advanced design", "1983", "50", "41", "yes", "retired"], ["gillig", "1986", "4", "26", "yes", "retired"], ["mci", "1987", "21", "45", "yes", "retired"], ["tmc", "1990", "48", "39", "yes", "retired"], ["tmc", "1991", "49", "40", "yes", "retired ( 26 ) , reserve fleet ( 10 ) , for sale ( 13 )"], ["flxible", "1994", "40", "45", "yes", "retired"], ["mci", "1996 , 1997", "32", "57", "yes", "for sale ( 21 ) , unknown ( 11 )"], ["novabus", "1997", "10", "43", "yes", "retired"], ["new flyer", "2003", "8", "62", "yes", "retired"]], "query": "eq { hop { argmax { all_rows ; quantity } ; make } ; gm new look } = true", "question": "the gm new look was the make with the highest quantity of golden gate transit buses ."}, {"topic": "indiana high school athletics conferences : ohio river valley - western indiana", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Ohio_River_Valley_%E2%80%93_Western_Indiana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18974097-2.html.csv", "action": "comparative", "sent": "for the ohio river valley and western indiana conferences in indiana high school athletics , perry central has 15 more students than springs valley .", "annotation": {"row_1": "5", "row_2": "6", "col": "4", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "15", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "school", "perry central"], "result": null, "ind": 0, "tointer": "select the rows whose school record fuzzily matches to perry central .", "tostr": "filter_eq { all_rows ; school ; perry central }"}, "size"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; school ; perry central } ; size }", "tointer": "select the rows whose school record fuzzily matches to perry central . take the size record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "school", "springs valley"], "result": null, "ind": 1, "tointer": "select the rows whose school record fuzzily matches to springs valley .", "tostr": "filter_eq { all_rows ; school ; springs valley }"}, "size"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; school ; springs valley } ; size }", "tointer": "select the rows whose school record fuzzily matches to springs valley . take the size record of this row ."}], "result": "15", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; school ; perry central } ; size } ; hop { filter_eq { all_rows ; school ; springs valley } ; size } }"}, "15"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; school ; perry central } ; size } ; hop { filter_eq { all_rows ; school ; springs valley } ; size } } ; 15 } = true", "tointer": "select the rows whose school record fuzzily matches to perry central . take the size record of this row . select the rows whose school record fuzzily matches to springs valley . take the size record of this row . the first record is 15 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; school ; perry central } ; size } ; hop { filter_eq { all_rows ; school ; springs valley } ; size } } ; 15 } = true", "interpret": "select the rows whose school record fuzzily matches to perry central . take the size record of this row . select the rows whose school record fuzzily matches to springs valley . take the size record of this row . the first record is 15 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "school_8": 8, "perry central_9": 9, "size_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "school_12": 12, "springs valley_13": 13, "size_14": 14, "15_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "school_8": "school", "perry central_9": "perry central", "size_10": "size", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "school_12": "school", "springs valley_13": "springs valley", "size_14": "size", "15_15": "15"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "school_8": [0], "perry central_9": [0], "size_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "school_12": [1], "springs valley_13": [1], "size_14": [3], "15_15": [5]}, "table_header": ["school", "location", "mascot", "size", "ihsaa class", "county"], "table_cont": [["crawford county", "marengo", "wolfpack", "487", "aa", "13 crawford"], ["mitchell", "mitchell", "bluejackets", "620", "aaa", "47 lawrence"], ["orleans", "orleans", "bulldogs", "258", "a", "59 orange"], ["paoli", "paoli", "rams", "511", "aa", "59 orange"], ["perry central", "leopold", "commodores", "334", "aa", "62 perry"], ["springs valley", "french lick", "blackhawks", "319", "a", "59 orange"], ["west washington", "campbellsburg", "senators", "307", "a", "88 washington"]], "query": "eq { diff { hop { filter_eq { all_rows ; school ; perry central } ; size } ; hop { filter_eq { all_rows ; school ; springs valley } ; size } } ; 15 } = true", "question": "for the ohio river valley and western indiana conferences in indiana high school athletics , perry central has 15 more students than springs valley ."}, {"topic": "c\u00e9sar cielo", "wiki": "https://en.wikipedia.org/wiki/C%C3%A9sar_Cielo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12627202-2.html.csv", "action": "majority", "sent": "most of the events that c\u00e9sar cielo participated in required the freestyle stroke .", "annotation": {"scope": "all", "col": "1", "most_or_all": "most", "criterion": "equal", "value": "freestyle", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "event", "freestyle"], "result": true, "ind": 0, "tointer": "for the event records of all rows , most of them fuzzily match to freestyle .", "tostr": "most_eq { all_rows ; event ; freestyle } = true"}, "logic_str": "most_eq { all_rows ; event ; freestyle } = true", "interpret": "for the event records of all rows , most of them fuzzily match to freestyle .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "event_3": 3, "freestyle_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "event_3": "event", "freestyle_4": "freestyle"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "event_3": [0], "freestyle_4": [0]}, "table_header": ["event", "time", "venue", "date", "notes"], "table_cont": [["50 m freestyle", "20.51", "dubai", "december 17 , 2010", "am"], ["100 m freestyle", "45.74", "dubai", "december 19 , 2010", "sa"], ["450 m freestyle", "1:25.28", "s\u00e3o paulo", "august 20 , 2012", "sa"], ["4100 m freestyle", "3:05.74", "dubai", "december 15 , 2010", "sa"], ["4100 m medley", "3:23.12", "dubai", "december 19 , 2010", "sa"], ["4200 m freestyle", "7:06.09", "shanghai", "april 6 , 2006", "sa"]], "query": "most_eq { all_rows ; event ; freestyle } = true", "question": "most of the events that c\u00e9sar cielo participated in required the freestyle stroke ."}, {"topic": "saori obata", "wiki": "https://en.wikipedia.org/wiki/Saori_Obata", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11695454-2.html.csv", "action": "majority", "sent": "of the tournaments that saori obata participated in , most of them were on a hard surface .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "hard", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "surface", "hard"], "result": true, "ind": 0, "tointer": "for the surface records of all rows , most of them fuzzily match to hard .", "tostr": "most_eq { all_rows ; surface ; hard } = true"}, "logic_str": "most_eq { all_rows ; surface ; hard } = true", "interpret": "for the surface records of all rows , most of them fuzzily match to hard .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "surface_3": 3, "hard_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "surface_3": "surface", "hard_4": "hard"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "surface_3": [0], "hard_4": [0]}, "table_header": ["date", "tournament", "surface", "opponent in the final", "score"], "table_cont": [["november 18 , 2001", "port pirie , australia", "hard", "pavlina nola", "6 - 1 , 6 - 2"], ["november 25 , 2001", "nuriootpa , australia", "hard", "yoon - jeong cho", "6 - 4 , 6 - 1"], ["may 11 , 2003", "fukuoka , japan", "clay", "maria elena camerin", "2 - 6 , 6 - 3 , 6 - 3"], ["april 3 , 2005", "augusta , united states", "hard", "victoria azarenka", "6 - 2 , 6 - 2"], ["may 8 , 2005", "gifu , japan", "hard", "shiho hisamatsu", "6 - 1 , 2 - 6 , 6 - 4"]], "query": "most_eq { all_rows ; surface ; hard } = true", "question": "of the tournaments that saori obata participated in , most of them were on a hard surface ."}, {"topic": "2000 bradford bulls season", "wiki": "https://en.wikipedia.org/wiki/2000_Bradford_Bulls_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10814470-6.html.csv", "action": "count", "sent": "the bradford bulls won five games in their 2000 season when they played in the challenge cup .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "5", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "result"], "result": null, "ind": 0, "tointer": "select the rows whose result record is arbitrary .", "tostr": "filter_all { all_rows ; result }"}], "result": "5", "ind": 1, "tostr": "count { filter_all { all_rows ; result } }", "tointer": "select the rows whose result record is arbitrary . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; result } } ; 5 } = true", "tointer": "select the rows whose result record is arbitrary . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_all { all_rows ; result } } ; 5 } = true", "interpret": "select the rows whose result record is arbitrary . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "result_5": 5, "5_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "result_5": "result", "5_6": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "result_5": [0], "5_6": [2]}, "table_header": ["date", "competition", "venue", "result", "score", "goals"], "table_cont": [["12 / 2 / 00", "cup", "odsal stadium", "w", "32 - 4", "hpaul 6 / 6"], ["27 / 2 / 00", "cup", "belle vue", "w", "46 - 0", "hpaul 5 / 9"], ["12 / 3 / 00", "cup", "shay stadium", "w", "28 - 18", "hpaul 6 / 6"], ["25 / 3 / 00", "cup", "headingley stadium", "w", "44 - 20", "hpaul 8 / 8"], ["29 / 4 / 00", "cup", "murrayfield stadium", "w", "24 - 18", "hpaul 4 / 4"]], "query": "eq { count { filter_all { all_rows ; result } } ; 5 } = true", "question": "the bradford bulls won five games in their 2000 season when they played in the challenge cup ."}, {"topic": "rev. ( tv series )", "wiki": "https://en.wikipedia.org/wiki/Rev._%28TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27218002-2.html.csv", "action": "majority", "sent": "the majority of the first six episodes of rev. were written by james wood .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "james wood", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "written by", "james wood"], "result": true, "ind": 0, "tointer": "for the written by records of all rows , most of them fuzzily match to james wood .", "tostr": "most_eq { all_rows ; written by ; james wood } = true"}, "logic_str": "most_eq { all_rows ; written by ; james wood } = true", "interpret": "for the written by records of all rows , most of them fuzzily match to james wood .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "written by_3": 3, "james wood_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "written by_3": "written by", "james wood_4": "james wood"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "written by_3": [0], "james wood_4": [0]}, "table_header": ["episode", "title", "directed by", "written by", "originalairdate", "ratings"], "table_cont": [["1", "episode 1", "peter cattaneo", "james wood", "10 november 2011", "2.29 million"], ["2", "episode 2", "peter cattaneo", "james wood", "17 november 2011", "1.63 million"], ["3", "episode 3", "peter cattaneo", "james wood", "24 november 2011", "1.37 million"], ["4", "episode 4", "peter cattaneo", "james wood", "1 december 2011", "1.24 million"], ["5", "episode 5", "peter cattaneo", "fintan ryan", "8 december 2011", "1.24 million"], ["6", "episode 6", "peter cattaneo", "james wood", "15 december 2011", "1.62 million"]], "query": "most_eq { all_rows ; written by ; james wood } = true", "question": "the majority of the first six episodes of rev. were written by james wood ."}, {"topic": "moussa sow", "wiki": "https://en.wikipedia.org/wiki/Moussa_Sow", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12726056-3.html.csv", "action": "count", "sent": "two games that moussa sow played in were friendly competitions .", "annotation": {"scope": "all", "criterion": "equal", "value": "friendly", "result": "2", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "competition", "friendly"], "result": null, "ind": 0, "tointer": "select the rows whose competition record fuzzily matches to friendly .", "tostr": "filter_eq { all_rows ; competition ; friendly }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; competition ; friendly } }", "tointer": "select the rows whose competition record fuzzily matches to friendly . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; competition ; friendly } } ; 2 } = true", "tointer": "select the rows whose competition record fuzzily matches to friendly . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; competition ; friendly } } ; 2 } = true", "interpret": "select the rows whose competition record fuzzily matches to friendly . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "competition_5": 5, "friendly_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "competition_5": "competition", "friendly_6": "friendly", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "competition_5": [0], "friendly_6": [0], "2_7": [2]}, "table_header": ["goal", "date", "venue", "score", "result", "competition"], "table_cont": [["1", "5 september 2010", "lubumbashi , dr congo", "1 - 0", "4 - 0", "2012 africa cup of nations qualifying"], ["2", "9 october 2010", "dakar , senegal", "4 - 0", "7 - 0", "2012 africa cup of nations qualifying"], ["3", "9 february 2011", "dakar , senegal", "2 - 0", "3 - 0", "friendly"], ["4", "3 september 2011", "dakar , senegal", "1 - 0", "2 - 0", "2012 africa cup of nations qualifying"], ["5", "3 september 2011", "dakar , senegal", "2 - 0", "2 - 0", "2012 africa cup of nations qualifying"], ["6", "25 january 2012", "bata , equatorial guinea", "1 - 1", "2 - 1", "2012 africa cup of nations"], ["7", "5 february 2013", "paris , france", "1 - 0", "1 - 1", "friendly"], ["8", "23 march 2013", "conakry , guinea", "1 - 0", "1 - 1", "2014 fifa world cup qualification"]], "query": "eq { count { filter_eq { all_rows ; competition ; friendly } } ; 2 } = true", "question": "two games that moussa sow played in were friendly competitions ."}, {"topic": "kira nagy", "wiki": "https://en.wikipedia.org/wiki/Kira_Nagy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12531158-2.html.csv", "action": "ordinal", "sent": "the september 14 , 1997 tournament was the third tournament in which kira nagy competed .", "annotation": {"row": "3", "col": "1", "order": "3", "col_other": "n/a", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "date", "3"], "result": "sep 14 , 1997", "ind": 0, "tostr": "nth_min { all_rows ; date ; 3 }", "tointer": "the 3rd minimum date record of all rows is sep 14 , 1997 ."}, "sep 14 , 1997"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; date ; 3 } ; sep 14 , 1997 } = true", "tointer": "the 3rd minimum date record of all rows is sep 14 , 1997 ."}, "logic_str": "eq { nth_min { all_rows ; date ; 3 } ; sep 14 , 1997 } = true", "interpret": "the 3rd minimum date record of all rows is sep 14 , 1997 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "nth_min_0": 0, "all_rows_3": 3, "date_4": 4, "3_5": 5, "sep 14 , 1997_6": 6}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "nth_min_0": "nth_min", "all_rows_3": "all_rows", "date_4": "date", "3_5": "3", "sep 14 , 1997_6": "sep 14 , 1997"}, "g_adj": {"eq_1": [2], "result_2": [], "nth_min_0": [1], "all_rows_3": [0], "date_4": [0], "3_5": [0], "sep 14 , 1997_6": [1]}, "table_header": ["date", "tournament", "surface", "opponent in the final", "score"], "table_cont": [["oct 2 , 1994", "mali lo\u0161inj", "clay", "radka surova", "6 - 4 , 6 - 2"], ["nov 26 , 1995", "majorca", "clay ( i )", "andrea nosz\u00e1ly", "6 - 4 , 6 - 3"], ["sep 14 , 1997", "madrid", "clay", "nuria montero", "6 - 1 , 6 - 0"], ["apr 5 , 1998", "athens", "clay", "christ\u00edna papad\u00e1ki", "7 - 5 , 2 - 6 , 6 - 3"], ["apr 12 , 1998", "dubai", "hard", "wynne prakusya", "6 - 4 , 6 - 1"], ["nov 14 , 1999", "monterrey", "hard", "ansley cargill", "6 - 4 , 6 - 2"], ["nov 21 , 1999", "campos", "clay", "miriam dagostini", "5 - 7 6 - 3 6 - 2"], ["may 28 , 2000", "guimar\u00e3es", "hard", "bahia mouhtassine", "6 - 0 , 5 - 7 , 7 - 6"], ["jun 18 , 2000", "lenzerheide", "clay", "julia vakulenko", "6 - 2 , 3 - 6 , 7 - 6"], ["oct 21 , 2001", "jou\u00e9 - l\u00e8s - tours", "hard ( i )", "anne - laure heitz", "1 - 6 , 6 - 4 , 6 - 0"], ["sep 28 , 2003", "jounieh", "clay", "ana timoti\u0107", "6 - 1 , 7 - 5"], ["nov 16 , 2003", "mexico city", "hard", "melinda czink", "6 - 2 , 6 - 3"], ["apr 2 , 2006", "poza rica", "hard", "zs\u00f3fia gubacsi", "6 - 4 , 6 - 2"], ["jun 19 , 2006", "zagreb", "clay", "tathiana garbin", "7 - 6 , 3 - 6 , 7 - 6"], ["jul 23 , 2006", "rome", "clay", "aliz\u00e9 cornet", "6 - 2 , 6 - 7 , 6 - 4"], ["jun 10 , 2007", "zagreb", "clay", "ivana lisjak", "2 - 6 , 7 - 6 , 6 - 2"], ["jun 17 , 2007", "campobasso", "clay", "christina wheeler", "6 - 2 , 6 - 0"], ["jul 1 , 2007", "istanbul", "hard", "maria fernanda alves", "6 - 7 , 7 - 5 , 6 - 1"]], "query": "eq { nth_min { all_rows ; date ; 3 } ; sep 14 , 1997 } = true", "question": "the september 14 , 1997 tournament was the third tournament in which kira nagy competed ."}, {"topic": "atlanta falcons draft history", "wiki": "https://en.wikipedia.org/wiki/Atlanta_Falcons_draft_history", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15198842-16.html.csv", "action": "aggregation", "sent": "for the atlanta falcons draft history the average overall pick was 176.09 .", "annotation": {"scope": "all", "col": "3", "type": "average", "result": "176.09", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "overall"], "result": "176.09", "ind": 0, "tostr": "avg { all_rows ; overall }"}, "176.09"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; overall } ; 176.09 } = true", "tointer": "the average of the overall record of all rows is 176.09 ."}, "logic_str": "round_eq { avg { all_rows ; overall } ; 176.09 } = true", "interpret": "the average of the overall record of all rows is 176.09 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "overall_4": 4, "176.09_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "overall_4": "overall", "176.09_5": "176.09"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "overall_4": [0], "176.09_5": [1]}, "table_header": ["round", "pick", "overall", "name", "position", "college"], "table_cont": [["1", "25", "25", "bobby butler", "cornerback", "florida state"], ["2", "26", "54", "lyman white", "linebacker", "lsu"], ["3", "24", "80", "scott woerner", "defensive back", "georgia"], ["4", "26", "109", "john scully", "guard", "notre dame"], ["5", "25", "136", "eric sanders", "offensive tackle", "nevada"], ["6", "26", "164", "harry standback", "defensive tackle", "north carolina"], ["8", "26", "219", "cliff toney", "defensive back", "auburn"], ["9", "24", "245", "calvin fance", "running back", "rice"], ["10", "26", "274", "robert murphy", "defensive back", "ohio state"], ["11", "25", "301", "keith chappelle", "wide receiver", "iowa"], ["12", "26", "330", "mark mccants", "defensive back", "temple"]], "query": "round_eq { avg { all_rows ; overall } ; 176.09 } = true", "question": "for the atlanta falcons draft history the average overall pick was 176.09 ."}, {"topic": "great northeast athletic conference", "wiki": "https://en.wikipedia.org/wiki/Great_Northeast_Athletic_Conference", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1973816-1.html.csv", "action": "superlative", "sent": "johnson & wales university is the college with the highest enrollment in the great northeast athletic conference .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "4", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "enrollment"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; enrollment }"}, "institution"], "result": "johnson & wales university", "ind": 1, "tostr": "hop { argmax { all_rows ; enrollment } ; institution }"}, "johnson & wales university"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; johnson & wales university } = true", "tointer": "select the row whose enrollment record of all rows is maximum . the institution record of this row is johnson & wales university ."}, "logic_str": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; johnson & wales university } = true", "interpret": "select the row whose enrollment record of all rows is maximum . the institution record of this row is johnson & wales university .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "enrollment_5": 5, "institution_6": 6, "johnson & wales university_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "enrollment_5": "enrollment", "institution_6": "institution", "johnson & wales university_7": "johnson & wales university"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "enrollment_5": [0], "institution_6": [1], "johnson & wales university_7": [2]}, "table_header": ["institution", "location", "nickname", "founded", "type", "enrollment", "joined"], "table_cont": [["albertus magnus college", "new haven , connecticut", "falcons", "1925", "private ( catholic )", "1769", "1995"], ["anna maria college", "paxton , massachusetts", "amcats", "1946", "private ( catholic )", "1244", "2011"], ["emmanuel college 2", "boston , massachusetts", "saints", "1919", "private ( catholic )", "2350", "1995"], ["johnson & wales university", "providence , rhode island", "wildcats", "1914", "private", "16000", "1995"], ["lasell college", "newton , massachusetts", "lasers", "1851", "private", "1200", "2007"], ["mount ida college", "newton , massachusetts", "mustangs", "1899", "private", "1300", "2007"], ["norwich university", "northfield , vermont", "cadets", "1819", "private ( military )", "3000", "1998"], ["rivier university", "nashua , new hampshire", "raiders", "1933", "private ( catholic )", "2300", "1995"], ["university of saint joseph 1", "west hartford , connecticut", "blue jays", "1932", "private ( catholic )", "1020", "1995"], ["saint joseph 's college of maine", "standish , maine", "monks", "1912", "private ( catholic )", "1034", "2007"], ["simmons college 1", "boston , massachusetts", "sharks", "1899", "private", "4912", "1995"]], "query": "eq { hop { argmax { all_rows ; enrollment } ; institution } ; johnson & wales university } = true", "question": "johnson & wales university is the college with the highest enrollment in the great northeast athletic conference ."}, {"topic": "geography of moldova", "wiki": "https://en.wikipedia.org/wiki/Geography_of_Moldova", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19242-5.html.csv", "action": "unique", "sent": "there is only one land formation in moldova that currently has over 1000 km square of forests .", "annotation": {"scope": "all", "row": "6", "col": "3", "col_other": "n/a", "criterion": "greater_than", "value": "1000", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "of which currently forests , km square", "1000"], "result": null, "ind": 0, "tointer": "select the rows whose of which currently forests , km square record is greater than 1000 .", "tostr": "filter_greater { all_rows ; of which currently forests , km square ; 1000 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; of which currently forests , km square ; 1000 } } = true", "tointer": "select the rows whose of which currently forests , km square record is greater than 1000 . there is only one such row in the table ."}, "logic_str": "only { filter_greater { all_rows ; of which currently forests , km square ; 1000 } } = true", "interpret": "select the rows whose of which currently forests , km square record is greater than 1000 . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_greater_0": 0, "all_rows_3": 3, "of which currently forests , km square_4": 4, "1000_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_greater_0": "filter_greater", "all_rows_3": "all_rows", "of which currently forests , km square_4": "of which currently forests , km square", "1000_5": "1000"}, "g_adj": {"only_1": [2], "result_2": [], "filter_greater_0": [1], "all_rows_3": [0], "of which currently forests , km square_4": [0], "1000_5": [0]}, "table_header": ["land formation", "area , km square", "of which currently forests , km square", "% forests", "habitat type"], "table_cont": [["northern moldavian hills", "4630", "476", "10.3 %", "forest steppe"], ["dniester - r\u0101ut ridge", "2480", "363", "14.6 %", "forest steppe"], ["middle prut valley", "2930", "312", "10.6 %", "forest steppe"], ["b\u0103l\u0163i steppe", "1920", "51", "2.7 %", "steppe"], ["ciuluc - solone\u0163 hills", "1690", "169", "10.0 %", "forest steppe"], ["corne\u015fti hills ( codru )", "4740", "1300", "27.5 %", "forest"], ["lower dniester hills", "3040", "371", "12.2 %", "forest steppe"], ["lower prut valley", "1810", "144", "8.0 %", "forest steppe"], ["tigheci hills", "3550", "533", "15.0 %", "forest steppe"], ["bugeac plain", "3210", "195", "6.1 %", "steppe"], ["part of podolian plateau", "1920", "175", "9.1 %", "forest steppe"], ["part of eurasian steppe", "1920", "140", "7.3 %", "steppe"]], "query": "only { filter_greater { all_rows ; of which currently forests , km square ; 1000 } } = true", "question": "there is only one land formation in moldova that currently has over 1000 km square of forests ."}, {"topic": "1992 indycar season", "wiki": "https://en.wikipedia.org/wiki/1992_IndyCar_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10725629-2.html.csv", "action": "ordinal", "sent": "march 22nd was the first race of the 1992 indycar season .", "annotation": {"row": "1", "col": "4", "order": "1", "col_other": "n/a", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "date", "1"], "result": "march 22", "ind": 0, "tostr": "nth_min { all_rows ; date ; 1 }", "tointer": "the 1st minimum date record of all rows is march 22 ."}, "march 22"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; date ; 1 } ; march 22 } = true", "tointer": "the 1st minimum date record of all rows is march 22 ."}, "logic_str": "eq { nth_min { all_rows ; date ; 1 } ; march 22 } = true", "interpret": "the 1st minimum date record of all rows is march 22 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "nth_min_0": 0, "all_rows_3": 3, "date_4": 4, "1_5": 5, "march 22_6": 6}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "nth_min_0": "nth_min", "all_rows_3": "all_rows", "date_4": "date", "1_5": "1", "march 22_6": "march 22"}, "g_adj": {"eq_1": [2], "result_2": [], "nth_min_0": [1], "all_rows_3": [0], "date_4": [0], "1_5": [0], "march 22_6": [1]}, "table_header": ["race name", "circuit", "city / location", "date", "pole position", "fastest lap", "winning driver", "winning team", "report"], "table_cont": [["dailkyo indycar grand prix", "surfers paradise street circuit", "surfers paradise , australia", "march 22", "al unser , jr", "emerson fittipaldi", "emerson fittipaldi", "marlboro team penske", "report"], ["valvoline 200", "phoenix international raceway", "phoenix , arizona", "april 5", "michael andretti", "rick mears", "bobby rahal", "rahal - hogan racing", "report"], ["toyota grand prix of long beach", "streets of long beach", "long beach , california", "april 12", "michael andretti", "unknown", "danny sullivan", "galles - kraco racing", "report"], ["76th indianapolis 500", "indianapolis motor speedway", "speedway , indiana", "may 24", "roberto guerrero", "michael andretti", "al unser , jr", "galles - kraco racing", "report"], ["itt automotive grand prix of detroit", "the raceway on belle isle park", "detroit , michigan", "june 7", "michael andretti", "unknown", "bobby rahal", "rahal - hogan racing", "report"], ["budweiser / gijoes 200", "portland international raceway", "portland , oregon", "june 21", "emerson fittipaldi", "unknown", "michael andretti", "newman / haas racing", "report"], ["miller genuine draft 200", "milwaukee mile", "west allis , wisconsin", "june 28", "bobby rahal", "unknown", "michael andretti", "newman / haas racing", "report"], ["new england 200", "new hampshire international speedway", "loudon , new hampshire", "july 5", "bobby rahal", "michael andretti", "bobby rahal", "rahal - hogan racing", "report"], ["molson indy toronto", "exhibition place", "toronto , ontario", "july 19", "bobby rahal", "unknown", "michael andretti", "newman / haas racing", "report"], ["marlboro 500", "michigan international speedway", "brooklyn , michigan", "august 2", "mario andretti", "unknown", "scott goodyear", "walker motorsport", "report"], ["budweiser grand prix of cleveland", "cleveland burke lakefront airport", "cleveland , ohio", "august 9", "emerson fittipaldi", "unknown", "emerson fittipaldi", "marlboro team penske", "report"], ["texaco / havoline 200", "road america", "elkhart lake , wisconsin", "august 23", "paul tracy", "emerson fittipaldi", "emerson fittipaldi", "marlboro team penske", "report"], ["molson indy vancouver", "streets of vancouver", "vancouver , british columbia", "august 30", "michael andretti", "emerson fittipaldi", "michael andretti", "newman / haas racing", "report"], ["pioneer electronics 200", "mid - ohio sports car course", "lexington , ohio", "september 13", "michael andretti", "unknown", "emerson fittipaldi", "marlboro team penske", "report"], ["marlboro challenge", "nazareth speedway", "nazareth , pennsylvania", "october 3", "michael andretti", "unknown", "emerson fittipaldi", "marlboro team penske", "report"], ["bosch spark plug grand prix", "nazareth speedway", "nazareth , pennsylvania", "october 4", "michael andretti", "bobby rahal", "bobby rahal", "rahal - hogan racing", "report"], ["toyota monterey grand prix", "mazda raceway laguna seca", "monterey , california", "october 18", "michael andretti", "unknown", "michael andretti", "newman / haas racing", "report"]], "query": "eq { nth_min { all_rows ; date ; 1 } ; march 22 } = true", "question": "march 22nd was the first race of the 1992 indycar season ."}, {"topic": "2006 - 07 ta\u00e7a de portugal", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_Ta%C3%A7a_de_Portugal", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10287593-1.html.csv", "action": "unique", "sent": "the final was the only round that consisted of just one fixture .", "annotation": {"scope": "all", "row": "9", "col": "5", "col_other": "1", "criterion": "equal", "value": "1", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "fixtures", "1"], "result": null, "ind": 0, "tointer": "select the rows whose fixtures record is equal to 1 .", "tostr": "filter_eq { all_rows ; fixtures ; 1 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; fixtures ; 1 } }", "tointer": "select the rows whose fixtures record is equal to 1 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "fixtures", "1"], "result": null, "ind": 0, "tointer": "select the rows whose fixtures record is equal to 1 .", "tostr": "filter_eq { all_rows ; fixtures ; 1 }"}, "round"], "result": "final", "ind": 2, "tostr": "hop { filter_eq { all_rows ; fixtures ; 1 } ; round }"}, "final"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; fixtures ; 1 } ; round } ; final }", "tointer": "the round record of this unqiue row is final ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; fixtures ; 1 } } ; eq { hop { filter_eq { all_rows ; fixtures ; 1 } ; round } ; final } } = true", "tointer": "select the rows whose fixtures record is equal to 1 . there is only one such row in the table . the round record of this unqiue row is final ."}, "logic_str": "and { only { filter_eq { all_rows ; fixtures ; 1 } } ; eq { hop { filter_eq { all_rows ; fixtures ; 1 } ; round } ; final } } = true", "interpret": "select the rows whose fixtures record is equal to 1 . there is only one such row in the table . the round record of this unqiue row is final .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "fixtures_7": 7, "1_8": 8, "str_eq_3": 3, "str_hop_2": 2, "round_9": 9, "final_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "fixtures_7": "fixtures", "1_8": "1", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "round_9": "round", "final_10": "final"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "fixtures_7": [0], "1_8": [0], "str_eq_3": [4], "str_hop_2": [3], "round_9": [2], "final_10": [3]}, "table_header": ["round", "date ( s )", "clubs from the previous round", "clubs involved", "fixtures"], "table_cont": [["first round", "3 september 2006", "none", "127", "60"], ["second round", "24 september 2006", "60 winners from the first round", "122", "56"], ["third round", "11 - 12 november 2006", "56 winners from the second round", "81", "40"], ["fourth round", "21 december 2006 6 - 7 january 2007", "40 winners from third round", "57", "28"], ["fifth round", "21 january 2007", "28 winners from fourth round", "27", "13"], ["sixth round", "10 february 2007", "13 winners from fifth round", "15", "7"], ["quarter - finals", "28 february 2006 25 march 2007", "7 winners from sixth round", "8", "4"], ["semi - finals", "18 - 19 april 2007", "4 winners from the quarterfinals", "4", "2"], ["final", "27 may 2007", "2 winners from the semifinals", "2", "1"]], "query": "and { only { filter_eq { all_rows ; fixtures ; 1 } } ; eq { hop { filter_eq { all_rows ; fixtures ; 1 } ; round } ; final } } = true", "question": "the final was the only round that consisted of just one fixture ."}, {"topic": "1954 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1954_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17290159-1.html.csv", "action": "majority", "sent": "the majority of players were from the united states .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "united states", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "country", "united states"], "result": true, "ind": 0, "tointer": "for the country records of all rows , most of them fuzzily match to united states .", "tostr": "most_eq { all_rows ; country ; united states } = true"}, "logic_str": "most_eq { all_rows ; country ; united states } = true", "interpret": "for the country records of all rows , most of them fuzzily match to united states .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "country_3": 3, "united states_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "country_3": "country", "united states_4": "united states"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "country_3": [0], "united states_4": [0]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["1", "ed furgol", "united states", "71 + 70 + 71 + 72 = 284", "+ 4", "6000"], ["2", "gene littler", "united states", "70 + 69 + 76 + 70 = 285", "+ 5", "3600"], ["t3", "lloyd mangrum", "united states", "72 + 71 + 72 + 71 = 286", "+ 6", "1500"], ["t3", "dick mayer", "united states", "72 + 71 + 70 + 73 = 286", "+ 6", "1500"], ["5", "bobby locke", "south africa", "74 + 70 + 74 + 70 = 288", "+ 8", "960"], ["t6", "tommy bolt", "united states", "72 + 72 + 73 + 72 = 289", "+ 9", "570"], ["t6", "fred haas", "united states", "73 + 73 + 71 + 72 = 289", "+ 9", "570"], ["t6", "ben hogan", "united states", "71 + 70 + 76 + 72 = 289", "+ 9", "570"], ["t6", "shelley mayfield", "united states", "73 + 75 + 72 + 69 = 289", "+ 9", "570"], ["t6", "billy joe patton ( a )", "united states", "69 + 76 + 71 + 73 = 289", "+ 9", "0"]], "query": "most_eq { all_rows ; country ; united states } = true", "question": "the majority of players were from the united states ."}, {"topic": "moby lines", "wiki": "https://en.wikipedia.org/wiki/Moby_Lines", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12053121-1.html.csv", "action": "ordinal", "sent": "ms moby drea is the 2nd longest ship of moby lines .", "annotation": {"row": "9", "col": "6", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "length", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; length ; 2 }"}, "ship"], "result": "ms moby drea", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; length ; 2 } ; ship }"}, "ms moby drea"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; length ; 2 } ; ship } ; ms moby drea } = true", "tointer": "select the row whose length record of all rows is 2nd maximum . the ship record of this row is ms moby drea ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; length ; 2 } ; ship } ; ms moby drea } = true", "interpret": "select the row whose length record of all rows is 2nd maximum . the ship record of this row is ms moby drea .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "length_5": 5, "2_6": 6, "ship_7": 7, "ms moby drea_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "length_5": "length", "2_6": "2", "ship_7": "ship", "ms moby drea_8": "ms moby drea"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "length_5": [0], "2_6": [0], "ship_7": [1], "ms moby drea_8": [2]}, "table_header": ["ship", "built", "entered service", "route", "gross tonnage", "length", "width", "passengers", "vessels", "knots"], "table_cont": [["ms bastia", "1974", "1974", "santa teresa di gallura - bonifacio", "gt", "75 m", "13 m", "400", "100", "18"], ["ms giraglia", "1981", "1981", "piombino - cavo ( elba island )", "gt", "75 m", "13 m", "400", "100", "18"], ["ms moby ale", "1969", "1990", "piombino - portoferraio", "gt", "93 m", "16 m", "800", "160", "19 , 5"], ["ms moby vincent", "1974", "1990", "livorno-bastia", "gt", "120 m", "22 m", "1.600", "570", "17 , 5"], ["ms moby fantasy", "1976", "1992", "disarmed", "gt", "142 m", "22 m", "1.200", "400", "17"], ["ms moby baby", "1966", "1996", "piombino-portoferraio", "gt", "101 m", "18 m", "1.100", "100", "19"], ["ms moby love", "1975", "1998", "piombino-portoferraio", "gt", "115 m", "19 m", "1.200", "250", "21"], ["ms moby lally", "1974", "2000", "piombino-portoferraio", "gt", "119 m", "19 m", "1.150", "300", "17 , 5"], ["ms moby drea", "1975", "2003", "livorno-olbia olbia - genoa", "gt", "185 m", "27 m", "1.900", "500", "27"], ["ms moby otta", "1976", "2006", "genoa-olbia", "gt", "185 m", "27 m", "1.900", "500", "27"], ["ms moby tommy", "2002", "2007", "civitavecchia - olbia", "gt", "212 m", "25 m", "2.200", "1.000", "30"], ["ms moby aki", "2005", "2005", "livorno - olbia piombino - olbia", "gt", "175 m", "27 m", "2.200", "750", "29"], ["ms moby wonder", "2001", "2001", "livorno-olbia", "gt", "175 m", "27 m", "2.200", "750", "29"], ["ms moby corse", "1978", "2010", "genoa - bastia", "gt", "152 m", "25 m", "1.200", "450", "21"]], "query": "eq { hop { nth_argmax { all_rows ; length ; 2 } ; ship } ; ms moby drea } = true", "question": "ms moby drea is the 2nd longest ship of moby lines ."}, {"topic": "2006 - 07 in welsh rugby union", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_in_Welsh_rugby_union", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27293285-4.html.csv", "action": "aggregation", "sent": "welsh rugby union teams averaged about 33 point during the 2006-2007 season .", "annotation": {"scope": "all", "col": "9", "type": "average", "result": "32.75", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "points"], "result": "32.75", "ind": 0, "tostr": "avg { all_rows ; points }"}, "32.75"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; points } ; 32.75 } = true", "tointer": "the average of the points record of all rows is 32.75 ."}, "logic_str": "round_eq { avg { all_rows ; points } ; 32.75 } = true", "interpret": "the average of the points record of all rows is 32.75 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "points_4": 4, "32.75_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "points_4": "points", "32.75_5": "32.75"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "points_4": [0], "32.75_5": [1]}, "table_header": ["club", "played", "won", "drawn", "lost", "points for", "points against", "tries for", "points"], "table_cont": [["club", "played", "won", "drawn", "lost", "points for", "points against", "tries for", "points"], ["beddau rfc", "22", "19", "0", "3", "654", "321", "85", "57"], ["bargoed rfc", "22", "17", "0", "5", "665", "436", "89", "51"], ["newbridge rfc", "22", "17", "0", "5", "516", "281", "63", "51"], ["pontypool rfc", "22", "15", "0", "7", "515", "370", "59", "45"], ["fleur de lys rfc", "22", "10", "0", "12", "422", "523", "49", "30"], ["uwic rfc", "22", "9", "1", "12", "625", "604", "74", "28"], ["newport saracens rfc", "22", "9", "1", "12", "368", "457", "46", "28"], ["llanharan rfc", "22", "9", "0", "13", "546", "565", "66", "27"], ["caerphilly rfc", "22", "9", "0", "14", "402", "572", "47", "24"], ["blackwood rfc", "22", "6", "1", "15", "433", "511", "51", "19"], ["abercynon rfc", "22", "5", "2", "15", "365", "718", "45", "17"], ["ystrad rhondda rfc", "22", "5", "1", "16", "417", "570", "47", "16"]], "query": "round_eq { avg { all_rows ; points } ; 32.75 } = true", "question": "welsh rugby union teams averaged about 33 point during the 2006-2007 season ."}, {"topic": "1998 - 99 toronto raptors season", "wiki": "https://en.wikipedia.org/wiki/1998%E2%80%9399_Toronto_Raptors_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-13619105-3.html.csv", "action": "ordinal", "sent": "in the 1998-99 toronto raptors season , the 2nd highest attendance was on february 16th .", "annotation": {"row": "5", "col": "8", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "location attendance", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; location attendance ; 2 }"}, "date"], "result": "february 16", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; location attendance ; 2 } ; date }"}, "february 16"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; location attendance ; 2 } ; date } ; february 16 } = true", "tointer": "select the row whose location attendance record of all rows is 2nd maximum . the date record of this row is february 16 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; location attendance ; 2 } ; date } ; february 16 } = true", "interpret": "select the row whose location attendance record of all rows is 2nd maximum . the date record of this row is february 16 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "location attendance_5": 5, "2_6": 6, "date_7": 7, "february 16_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "location attendance_5": "location attendance", "2_6": "2", "date_7": "date", "february 16_8": "february 16"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "location attendance_5": [0], "2_6": [0], "date_7": [1], "february 16_8": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["1", "february 5", "boston", "w 103 - 92 ( ot )", "kevin willis ( 28 )", "kevin willis ( 16 )", "alvin williams ( 6 )", "fleetcenter 17892", "1 - 0"], ["2", "february 6", "washington", "l 97 - 98 ( ot )", "charles oakley ( 18 )", "charles oakley ( 8 )", "alvin williams ( 9 )", "mci center 19335", "1 - 1"], ["3", "february 9", "milwaukee", "l 77 - 91 ( ot )", "vince carter ( 22 )", "charles oakley , kevin willis ( 11 )", "dee brown ( 6 )", "maple leaf gardens 14577", "1 - 2"], ["4", "february 11", "miami", "l 84 - 102 ( ot )", "doug christie ( 20 )", "michael stewart ( 7 )", "doug christie , alvin williams ( 3 )", "miami arena 14832", "1 - 3"], ["5", "february 16", "new york", "l 85 - 95 ( ot )", "vince carter ( 17 )", "charles oakley ( 7 )", "doug christie ( 4 )", "madison square garden 19763", "1 - 4"], ["6", "february 18", "washington", "l 88 - 95 ( ot )", "kevin willis ( 25 )", "kevin willis ( 14 )", "doug christie ( 6 )", "skydome 14292", "1 - 5"], ["7", "february 19", "milwaukee", "w 90 - 82 ( ot )", "doug christie ( 20 )", "kevin willis ( 11 )", "tracy mcgrady ( 7 )", "skydome 14888", "2 - 5"], ["8", "february 21", "vancouver", "w 102 - 87 ( ot )", "vince carter ( 27 )", "kevin willis ( 15 )", "charles oakley ( 6 )", "air canada centre 19800", "3 - 5"], ["9", "february 23", "detroit", "l 80 - 106 ( ot )", "john wallace ( 14 )", "doug christie , john wallace ( 5 )", "doug christie , tracy mcgrady ( 4 )", "the palace of auburn hills 14187", "3 - 6"], ["10", "february 24", "indiana", "l 84 - 104 ( ot )", "vince carter ( 28 )", "kevin willis ( 13 )", "tracy mcgrady ( 3 )", "market square arena 14700", "3 - 7"], ["11", "february 26", "minnesota", "w 102 - 92 ( ot )", "vince carter ( 21 )", "kevin willis ( 16 )", "doug christie ( 9 )", "air canada centre 15122", "4 - 7"]], "query": "eq { hop { nth_argmax { all_rows ; location attendance ; 2 } ; date } ; february 16 } = true", "question": "in the 1998-99 toronto raptors season , the 2nd highest attendance was on february 16th ."}, {"topic": "northern nevada 4a region", "wiki": "https://en.wikipedia.org/wiki/Northern_Nevada_4A_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11044765-1.html.csv", "action": "count", "sent": "in the northern nevada 4a region , 6 schools are in the high desert league .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "high desert", "result": "6", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "league", "high desert"], "result": null, "ind": 0, "tointer": "select the rows whose league record fuzzily matches to high desert .", "tostr": "filter_eq { all_rows ; league ; high desert }"}], "result": "6", "ind": 1, "tostr": "count { filter_eq { all_rows ; league ; high desert } }", "tointer": "select the rows whose league record fuzzily matches to high desert . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; league ; high desert } } ; 6 } = true", "tointer": "select the rows whose league record fuzzily matches to high desert . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_eq { all_rows ; league ; high desert } } ; 6 } = true", "interpret": "select the rows whose league record fuzzily matches to high desert . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "league_5": 5, "high desert_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "league_5": "league", "high desert_6": "high desert", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "league_5": [0], "high desert_6": [0], "6_7": [2]}, "table_header": ["school", "mascot", "location", "league", "enrollment"], "table_cont": [["carson", "senators", "carson city , nevada", "sierra", "2503"], ["damonte ranch", "mustangs", "reno , nevada", "sierra", "1253"], ["douglas", "tigers", "minden , nevada", "sierra", "1522"], ["galena", "grizzlies", "reno , nevada", "sierra", "1510"], ["hug", "hawks", "reno , nevada", "high desert", "1266"], ["manogue", "miners", "reno , nevada", "sierra", "650"], ["mcqueen", "lancers", "reno , nevada", "high desert", "1945"], ["north valleys", "panthers", "reno , nevada", "high desert", "2227"], ["reed", "raiders", "sparks , nevada", "high desert", "2464"], ["reno", "huskies", "reno , nevada", "high desert", "1896"], ["spanish springs", "cougars", "sparks , nevada", "high desert", "2186"], ["wooster", "colts", "reno , nevada", "sierra", "1519"]], "query": "eq { count { filter_eq { all_rows ; league ; high desert } } ; 6 } = true", "question": "in the northern nevada 4a region , 6 schools are in the high desert league ."}, {"topic": "1939 vfl season", "wiki": "https://en.wikipedia.org/wiki/1939_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10806852-4.html.csv", "action": "superlative", "sent": "st kilda scored the most points of all the home teams .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "home team score"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; home team score }"}, "home team"], "result": "st kilda", "ind": 1, "tostr": "hop { argmax { all_rows ; home team score } ; home team }"}, "st kilda"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; home team score } ; home team } ; st kilda } = true", "tointer": "select the row whose home team score record of all rows is maximum . the home team record of this row is st kilda ."}, "logic_str": "eq { hop { argmax { all_rows ; home team score } ; home team } ; st kilda } = true", "interpret": "select the row whose home team score record of all rows is maximum . the home team record of this row is st kilda .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "home team score_5": 5, "home team_6": 6, "st kilda_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "home team score_5": "home team score", "home team_6": "home team", "st kilda_7": "st kilda"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "home team score_5": [0], "home team_6": [1], "st kilda_7": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["richmond", "14.24 ( 108 )", "south melbourne", "13.7 ( 85 )", "punt road oval", "15000", "13 may 1939"], ["fitzroy", "10.17 ( 77 )", "hawthorn", "11.11 ( 77 )", "brunswick street oval", "12000", "13 may 1939"], ["north melbourne", "11.8 ( 74 )", "melbourne", "15.20 ( 110 )", "arden street oval", "10500", "13 may 1939"], ["geelong", "19.15 ( 129 )", "essendon", "11.15 ( 81 )", "corio oval", "11000", "13 may 1939"], ["st kilda", "20.11 ( 131 )", "collingwood", "13.16 ( 94 )", "junction oval", "28000", "13 may 1939"], ["footscray", "5.12 ( 42 )", "carlton", "14.16 ( 100 )", "western oval", "23000", "13 may 1939"]], "query": "eq { hop { argmax { all_rows ; home team score } ; home team } ; st kilda } = true", "question": "st kilda scored the most points of all the home teams ."}, {"topic": "1939 vfl season", "wiki": "https://en.wikipedia.org/wiki/1939_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10806852-4.html.csv", "action": "aggregation", "sent": "the average attendance in the 1939 vfl season was 16583.33 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "16583.33", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "crowd"], "result": "16583.33", "ind": 0, "tostr": "avg { all_rows ; crowd }"}, "16583.33"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; crowd } ; 16583.33 } = true", "tointer": "the average of the crowd record of all rows is 16583.33 ."}, "logic_str": "round_eq { avg { all_rows ; crowd } ; 16583.33 } = true", "interpret": "the average of the crowd record of all rows is 16583.33 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "crowd_4": 4, "16583.33_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "crowd_4": "crowd", "16583.33_5": "16583.33"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "crowd_4": [0], "16583.33_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["richmond", "14.24 ( 108 )", "south melbourne", "13.7 ( 85 )", "punt road oval", "15000", "13 may 1939"], ["fitzroy", "10.17 ( 77 )", "hawthorn", "11.11 ( 77 )", "brunswick street oval", "12000", "13 may 1939"], ["north melbourne", "11.8 ( 74 )", "melbourne", "15.20 ( 110 )", "arden street oval", "10500", "13 may 1939"], ["geelong", "19.15 ( 129 )", "essendon", "11.15 ( 81 )", "corio oval", "11000", "13 may 1939"], ["st kilda", "20.11 ( 131 )", "collingwood", "13.16 ( 94 )", "junction oval", "28000", "13 may 1939"], ["footscray", "5.12 ( 42 )", "carlton", "14.16 ( 100 )", "western oval", "23000", "13 may 1939"]], "query": "round_eq { avg { all_rows ; crowd } ; 16583.33 } = true", "question": "the average attendance in the 1939 vfl season was 16583.33 ."}, {"topic": "list of best - selling music artists", "wiki": "https://en.wikipedia.org/wiki/List_of_best-selling_music_artists", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1291598-6.html.csv", "action": "unique", "sent": "according to the list of best - selling music artists , only one artist that is still active claimed their sales to be over 75 million .", "annotation": {"scope": "subset", "row": "1", "col": "6", "col_other": "n/a", "criterion": "greater_than", "value": "75 million", "subset": {"col": "3", "criterion": "fuzzily_match", "value": "present"}}, "logic": {"func": "only", "args": [{"func": "filter_greater", "args": [{"func": "filter_str_eq", "args": ["all_rows", "period active", "present"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; period active ; present }", "tointer": "select the rows whose period active record fuzzily matches to present ."}, "claimed sales", "75 million"], "result": null, "ind": 1, "tointer": "select the rows whose period active record fuzzily matches to present . among these rows , select the rows whose claimed sales record is greater than 75 million .", "tostr": "filter_greater { filter_eq { all_rows ; period active ; present } ; claimed sales ; 75 million }"}], "result": true, "ind": 2, "tostr": "only { filter_greater { filter_eq { all_rows ; period active ; present } ; claimed sales ; 75 million } } = true", "tointer": "select the rows whose period active record fuzzily matches to present . among these rows , select the rows whose claimed sales record is greater than 75 million . there is only one such row in the table ."}, "logic_str": "only { filter_greater { filter_eq { all_rows ; period active ; present } ; claimed sales ; 75 million } } = true", "interpret": "select the rows whose period active record fuzzily matches to present . among these rows , select the rows whose claimed sales record is greater than 75 million . there is only one such row in the table .", "num_func": 3, "nid": 3, "g_ids": {"only_2": 2, "result_3": 3, "filter_greater_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "period active_5": 5, "present_6": 6, "claimed sales_7": 7, "75 million_8": 8}, "g_ids_features": {"only_2": "only", "result_3": "true", "filter_greater_1": "filter_greater", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "period active_5": "period active", "present_6": "present", "claimed sales_7": "claimed sales", "75 million_8": "75 million"}, "g_adj": {"only_2": [3], "result_3": [], "filter_greater_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "period active_5": [0], "present_6": [0], "claimed sales_7": [1], "75 million_8": [1]}, "table_header": ["artist", "country of origin", "period active", "release - year of first charted record", "genre", "claimed sales"], "table_cont": [["the black eyed peas", "united states", "1995 - present", "1998", "hip - hop / r & b / dance", "76 million"], ["journey", "united states", "1973 - present", "1975", "rock / soft rock", "75 million"], ["beyonc\u00e9", "united states", "2003 - present", "2003", "r & b / pop", "75 million"], ["kenny g", "united states", "1982 - present", "1984", "smooth jazz", "75 million"], ["alabama", "united states", "1972 - present", "1980", "country / pop rock", "75 million"], ["enya", "ireland", "1982 - present", "1987", "new age / celtic", "75 million"], ["green day", "united states", "1987 - present", "1994", "punk rock / alternative rock", "75 million"], ["tupac shakur", "united states", "1988 - 1996", "1991", "hip hop", "75 million"], ["nirvana", "united states", "1987 - 1994", "1989", "grunge / alternative rock", "75 million"], ["spice girls", "united kingdom", "1996 - 2000 2007 - 2008", "1996", "pop / dance - pop", "75 million"], ["andrea bocelli", "italy", "1994 - present", "1994", "pop / classical / opera", "75 million"], ["bob marley", "jamaica", "1962 - 1981", "1975", "reggae", "75 million"], ["m\u00f6tley cr\u00fce", "united states", "1981 - present", "1983", "glam metal", "75 million"], ["depeche mode", "united kingdom", "1980 - present", "1981", "synth rock / electronic", "75 million"], ["aretha franklin", "united states", "1956 - present", "1961", "soul / jazz / blues / r & b", "75 million"], ["scorpions", "germany", "1969 - present", "1978", "hard rock", "75 million"]], "query": "only { filter_greater { filter_eq { all_rows ; period active ; present } ; claimed sales ; 75 million } } = true", "question": "according to the list of best - selling music artists , only one artist that is still active claimed their sales to be over 75 million ."}, {"topic": "united states house of representatives elections , 1928", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1928", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1342370-17.html.csv", "action": "comparative", "sent": "rene louis derouen was originally elected into office after riley joseph wilson .", "annotation": {"row_1": "6", "row_2": "5", "col": "4", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "ren\u00e9 louis derouen"], "result": null, "ind": 0, "tointer": "select the rows whose incumbent record fuzzily matches to ren\u00e9 louis derouen .", "tostr": "filter_eq { all_rows ; incumbent ; ren\u00e9 louis derouen }"}, "first elected"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; incumbent ; ren\u00e9 louis derouen } ; first elected }", "tointer": "select the rows whose incumbent record fuzzily matches to ren\u00e9 louis derouen . take the first elected record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "bolivar e kemp"], "result": null, "ind": 1, "tointer": "select the rows whose incumbent record fuzzily matches to bolivar e kemp .", "tostr": "filter_eq { all_rows ; incumbent ; bolivar e kemp }"}, "first elected"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; incumbent ; bolivar e kemp } ; first elected }", "tointer": "select the rows whose incumbent record fuzzily matches to bolivar e kemp . take the first elected record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; incumbent ; ren\u00e9 louis derouen } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; bolivar e kemp } ; first elected } } = true", "tointer": "select the rows whose incumbent record fuzzily matches to ren\u00e9 louis derouen . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to bolivar e kemp . take the first elected record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; incumbent ; ren\u00e9 louis derouen } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; bolivar e kemp } ; first elected } } = true", "interpret": "select the rows whose incumbent record fuzzily matches to ren\u00e9 louis derouen . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to bolivar e kemp . take the first elected record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "incumbent_7": 7, "ren\u00e9 louis derouen_8": 8, "first elected_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "incumbent_11": 11, "bolivar e kemp_12": 12, "first elected_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "incumbent_7": "incumbent", "ren\u00e9 louis derouen_8": "ren\u00e9 louis derouen", "first elected_9": "first elected", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "incumbent_11": "incumbent", "bolivar e kemp_12": "bolivar e kemp", "first elected_13": "first elected"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "incumbent_7": [0], "ren\u00e9 louis derouen_8": [0], "first elected_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "incumbent_11": [1], "bolivar e kemp_12": [1], "first elected_13": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["louisiana 1", "james o'connor", "democratic", "1918", "re - elected", "james o'connor ( d ) unopposed"], ["louisiana 3", "whitmell p martin", "democratic", "1914", "re - elected", "whitmell p martin ( d ) unopposed"], ["louisiana 4", "john n sandlin", "democratic", "1920", "re - elected", "john n sandlin ( d ) unopposed"], ["louisiana 5", "riley joseph wilson", "democratic", "1914", "re - elected", "riley joseph wilson ( d ) unopposed"], ["louisiana 6", "bolivar e kemp", "democratic", "1924", "re - elected", "bolivar e kemp ( d ) unopposed"], ["louisiana 7", "ren\u00e9 louis derouen", "democratic", "1927", "re - elected", "ren\u00e9 louis derouen ( d ) unopposed"]], "query": "greater { hop { filter_eq { all_rows ; incumbent ; ren\u00e9 louis derouen } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; bolivar e kemp } ; first elected } } = true", "question": "rene louis derouen was originally elected into office after riley joseph wilson ."}, {"topic": "1975 - 76 phoenix suns season", "wiki": "https://en.wikipedia.org/wiki/1975%E2%80%9376_Phoenix_Suns_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-30047613-12.html.csv", "action": "majority", "sent": "paul westphal had the majority of high scoring games for the phoenix suns .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "paul westphal", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "high points", "paul westphal"], "result": true, "ind": 0, "tointer": "for the high points records of all rows , most of them fuzzily match to paul westphal .", "tostr": "most_eq { all_rows ; high points ; paul westphal } = true"}, "logic_str": "most_eq { all_rows ; high points ; paul westphal } = true", "interpret": "for the high points records of all rows , most of them fuzzily match to paul westphal .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "high points_3": 3, "paul westphal_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "high points_3": "high points", "paul westphal_4": "paul westphal"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "high points_3": [0], "paul westphal_4": [0]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "location attendance", "series", "streak"], "table_cont": [["1", "april 13", "seattle", "l 99 - 102", "paul westphal ( 24 )", "gar heard ( 10 )", "seattle center coliseum 12408", "0 - 1", "l 1"], ["2", "april 15", "seattle", "w 116 - 111", "alvan adams ( 23 )", "curtis perry ( 12 )", "seattle center coliseum 14096", "1 - 1", "w 1"], ["3", "april 18", "seattle", "w 103 - 91", "gar heard , paul westphal ( 16 )", "gar heard ( 14 )", "arizona veterans memorial coliseum 13036", "2 - 1", "w 2"], ["4", "april 20", "seattle", "w 130 - 114", "paul westphal ( 39 )", "gar heard ( 11 )", "arizona veterans memorial coliseum 13036", "3 - 1", "w 3"], ["5", "april 25", "seattle", "l 108 - 114", "paul westphal ( 27 )", "dennis awtrey ( 12 )", "seattle center coliseum 14096", "3 - 2", "l 1"]], "query": "most_eq { all_rows ; high points ; paul westphal } = true", "question": "paul westphal had the majority of high scoring games for the phoenix suns ."}, {"topic": "2006 asp world tour", "wiki": "https://en.wikipedia.org/wiki/2006_ASP_World_Tour", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16135024-3.html.csv", "action": "majority", "sent": "the majority of the individuals that were the winners represented aus .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "aus", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "winner", "aus"], "result": true, "ind": 0, "tointer": "for the winner records of all rows , most of them fuzzily match to aus .", "tostr": "most_eq { all_rows ; winner ; aus } = true"}, "logic_str": "most_eq { all_rows ; winner ; aus } = true", "interpret": "for the winner records of all rows , most of them fuzzily match to aus .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "winner_3": 3, "aus_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "winner_3": "winner", "aus_4": "aus"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "winner_3": [0], "aus_4": [0]}, "table_header": ["date", "location", "country", "event", "winner", "runner - up"], "table_cont": [["february 28 - march 12", "gold coast", "australia", "roxy pro gold coast", "melanie redman - carr ( aus )", "layne beachley ( aus )"], ["april 22 - april 29", "tavarua", "fiji", "roxy pro fiji", "melanie redman - carr ( aus )", "layne beachley ( aus )"], ["may 4 - may 16", "teahupoo , tahiti", "french polynesia", "billabong pro tahiti women", "melanie redman - carr ( aus )", "chelsea georgeson ( aus )"], ["august 21 - august 28", "itacar\u00e3", "brazil", "billabong girls pro", "layne beachley ( aus )", "jessi miley - dyer ( aus )"], ["august 31 - september 5", "hossegor", "france", "rip curl pro mademoiselle", "chelsea georgeson ( aus )", "melanie redman - carr ( aus )"], ["october 9 - october 15", "manly beach", "australia", "havaianas beachley classic", "stephanie gilmore ( aus )", "layne beachley ( aus )"], ["november 24 - december 6", "sunset beach , hawaii", "united states", "roxy pro", "melanie bartels ( haw )", "stephanie gilmore ( aus )"], ["december 8 - december 20", "honolua bay , hawaii", "united states", "billabong pro", "jessi miley - dyer ( aus )", "keala kennelly ( haw )"]], "query": "most_eq { all_rows ; winner ; aus } = true", "question": "the majority of the individuals that were the winners represented aus ."}, {"topic": "2008 - 09 hkfa 7 - a - side competition", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_HKFA_7-A-Side_Competition", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18880018-14.html.csv", "action": "count", "sent": "seven of the home teams scored 0 points at 2008 \u2013 09 hkfa 7-a-side competition .", "annotation": {"scope": "all", "criterion": "equal", "value": "0", "result": "7", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "score", "0"], "result": null, "ind": 0, "tointer": "select the rows whose score record is equal to 0 .", "tostr": "filter_eq { all_rows ; score ; 0 }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; score ; 0 } }", "tointer": "select the rows whose score record is equal to 0 . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; score ; 0 } } ; 7 } = true", "tointer": "select the rows whose score record is equal to 0 . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; score ; 0 } } ; 7 } = true", "interpret": "select the rows whose score record is equal to 0 . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "score_5": 5, "0_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "score_5": "score", "0_6": "0", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "score_5": [0], "0_6": [0], "7_7": [2]}, "table_header": ["time", "home team", "score", "away team", "venue"], "table_cont": [["15:00", "derico", "0 - 3", "citizen team a", "mong kok stadium"], ["15:30", "tuen mun progoal team a", "1 - 1 , 7 - 8 ( pso )", "mutual team a", "mong kok stadium"], ["16:00", "south china team a", "1 - 4", "convoy sun hei team a", "mong kok stadium"], ["16:30", "tsw pegasus team a", "0 - 5", "ntr wf tai po team a", "mong kok stadium"], ["17:00", "eastern team a", "2 - 0", "shatin", "mong kok stadium"], ["17:30", "south china team b", "0 - 3", "fourway team b", "mong kok stadium"], ["18:00", "citizen team b", "0 - 1", "convoy sun hei team b", "mong kok stadium"], ["18:30", "tsw pegasus team b", "0 - 1", "happy valley team b", "mong kok stadium"], ["19:00", "hkssf", "0 - 4", "mutual team b", "mong kok stadium"], ["19:30", "tuen mun progoal team b", "0 - 1", "kitchee team b", "mong kok stadium"]], "query": "eq { count { filter_eq { all_rows ; score ; 0 } } ; 7 } = true", "question": "seven of the home teams scored 0 points at 2008 \u2013 09 hkfa 7-a-side competition ."}, {"topic": "1956 - 57 tunisian ligue professionnelle 1", "wiki": "https://en.wikipedia.org/wiki/1956%E2%80%9357_Tunisian_Ligue_Professionnelle_1", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18314162-2.html.csv", "action": "ordinal", "sent": "etoile sportive du sahel ( ess ) club had the 2nd highest number of wins in the 1956 - 57 tunisian ligue professionnelle 1 .", "annotation": {"row": "3", "col": "5", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "wins", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; wins ; 2 }"}, "club"], "result": "etoile sportive du sahel ( ess )", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; wins ; 2 } ; club }"}, "etoile sportive du sahel ( ess )"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; club } ; etoile sportive du sahel ( ess ) } = true", "tointer": "select the row whose wins record of all rows is 2nd maximum . the club record of this row is etoile sportive du sahel ( ess ) ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; club } ; etoile sportive du sahel ( ess ) } = true", "interpret": "select the row whose wins record of all rows is 2nd maximum . the club record of this row is etoile sportive du sahel ( ess ) .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "wins_5": 5, "2_6": 6, "club_7": 7, "etoile sportive du sahel (ess)_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "wins_5": "wins", "2_6": "2", "club_7": "club", "etoile sportive du sahel (ess)_8": "etoile sportive du sahel ( ess )"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "wins_5": [0], "2_6": [0], "club_7": [1], "etoile sportive du sahel (ess)_8": [2]}, "table_header": ["pos", "club", "points", "played", "wins", "draw", "lost"], "table_cont": [["1", "stade tunisien", "58", "22", "16", "4", "1"], ["2", "esp\u00e9rance de tunis", "55", "22", "13", "7", "2"], ["3", "etoile sportive du sahel ( ess )", "51", "22", "14", "1", "7"], ["4", "club africain", "47", "22", "9", "7", "6"], ["5", "jeunesse sportive methouienne", "47", "22", "8", "9", "5"], ["6", "club sportif de hammam - lif", "43", "22", "8", "5", "9"], ["7", "union sportive de ferryville", "43", "22", "7", "7", "8"], ["8", "club athl\u00e9tique bizertin", "41", "22", "7", "5", "10"], ["9", "olympique tunisien", "41", "22", "7", "5", "10"], ["10", "club tunisien", "39", "22", "5", "7", "10"], ["11", "patriote football club de bizerte", "37", "22", "4", "7", "11"], ["12", "sfax railways sports", "24", "22", "1", "2", "19"]], "query": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; club } ; etoile sportive du sahel ( ess ) } = true", "question": "etoile sportive du sahel ( ess ) club had the 2nd highest number of wins in the 1956 - 57 tunisian ligue professionnelle 1 ."}, {"topic": "project runway", "wiki": "https://en.wikipedia.org/wiki/Project_Runway", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1597866-3.html.csv", "action": "unique", "sent": "only the south korean project runway had 4 seasons .", "annotation": {"scope": "all", "row": "7", "col": "7", "col_other": "1", "criterion": "equal", "value": "4", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "seasons", "4"], "result": null, "ind": 0, "tointer": "select the rows whose seasons record is equal to 4 .", "tostr": "filter_eq { all_rows ; seasons ; 4 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; seasons ; 4 } }", "tointer": "select the rows whose seasons record is equal to 4 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "seasons", "4"], "result": null, "ind": 0, "tointer": "select the rows whose seasons record is equal to 4 .", "tostr": "filter_eq { all_rows ; seasons ; 4 }"}, "country"], "result": "south korea", "ind": 2, "tostr": "hop { filter_eq { all_rows ; seasons ; 4 } ; country }"}, "south korea"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; seasons ; 4 } ; country } ; south korea }", "tointer": "the country record of this unqiue row is south korea ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; seasons ; 4 } } ; eq { hop { filter_eq { all_rows ; seasons ; 4 } ; country } ; south korea } } = true", "tointer": "select the rows whose seasons record is equal to 4 . there is only one such row in the table . the country record of this unqiue row is south korea ."}, "logic_str": "and { only { filter_eq { all_rows ; seasons ; 4 } } ; eq { hop { filter_eq { all_rows ; seasons ; 4 } ; country } ; south korea } } = true", "interpret": "select the rows whose seasons record is equal to 4 . there is only one such row in the table . the country record of this unqiue row is south korea .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "seasons_7": 7, "4_8": 8, "str_eq_3": 3, "str_hop_2": 2, "country_9": 9, "south korea_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "seasons_7": "seasons", "4_8": "4", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "country_9": "country", "south korea_10": "south korea"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "seasons_7": [0], "4_8": [0], "str_eq_3": [4], "str_hop_2": [3], "country_9": [2], "south korea_10": [3]}, "table_header": ["country", "name", "host", "channel", "first premiere", "regular judge", "seasons"], "table_cont": [["arab world", "\u0627\u0644\u0645\u0635\u0645\u0645 \u0627\u0644\u0639\u0631\u0628\u064a el musamim el arabi", "norma naoum", "future tv", "february 26 , 2006", "norma naoum maria aziz rabih keyrouz ( mentor )", "2"], ["canada", "project runway canada", "iman", "slice global", "october 8 , 2007", "shawn hewson rita silvan brian bailey ( mentor )", "2"], ["hong kong", "\u6642\u88dd\u4e16\u754c\u7cbe\u82f1\u5927\u734e fashion world talent awards", "terence yin", "tvb pearl", "2009", "tina liu judy mann wing shya", "1"], ["israel", "\u05e4\u05e8\u05d5\u05d9\u05e7\u05d8 \u05de\u05e1\u05dc\u05d5\u05dc proyekt maslul", "shiraz tal", "channel 2 ( reshet )", "june 17 , 2009 - october 2009", "vivi bleish gal afel sason kedem ( mentor )", "1"], ["malaysia", "project runway malaysia", "bernie chan", "8tv", "august 3 , 2007", "bernie chan datuk bernard chandran", "1"], ["poland", "project runway", "anja rubik", "tvn", "march 2014", "joanna trzetakiewicz", "1"], ["south korea", "\ud504\ub85c\uc81d\ud2b8 \ub7f0\uc6e8\uc774 \ucf54\ub9ac\uc544 project runway korea", "lee so - ra", "onstyle", "february 7 , 2009", "shin yoo - jin kim seok - won kan ho - sup ( mentor )", "4"]], "query": "and { only { filter_eq { all_rows ; seasons ; 4 } } ; eq { hop { filter_eq { all_rows ; seasons ; 4 } ; country } ; south korea } } = true", "question": "only the south korean project runway had 4 seasons ."}, {"topic": "list of w\u00fcrttemberg locomotives and railbuses", "wiki": "https://en.wikipedia.org/wiki/List_of_W%C3%BCrttemberg_locomotives_and_railbuses", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18934662-4.html.csv", "action": "aggregation", "sent": "the average quantity for w\u00fcrttemberg locomotives and railbuses was 25.14 .", "annotation": {"scope": "all", "col": "3", "type": "average", "result": "25.14", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "quantity"], "result": "25.14", "ind": 0, "tostr": "avg { all_rows ; quantity }"}, "25.14"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; quantity } ; 25.14 } = true", "tointer": "the average of the quantity record of all rows is 25.14 ."}, "logic_str": "round_eq { avg { all_rows ; quantity } ; 25.14 } = true", "interpret": "the average of the quantity record of all rows is 25.14 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "quantity_4": 4, "25.14_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "quantity_4": "quantity", "25.14_5": "25.14"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "quantity_4": [0], "25.14_5": [1]}, "table_header": ["class", "railway number ( s )", "quantity", "year ( s ) of manufacture", "type"], "table_cont": [["b ( krauss ) ( de )", "172 - 177", "6", "1867 - 1868", "b n2t"], ["t 3", "885 - 994", "110", "1891 - 1913", "c n2t"], ["t 3", "996 - 999", "4", "1894 - 1896", "c n2t"], ["t ( de )", "1001 - 1010", "10", "1896 - 1904", "b n2t"], ["t 9 ( de )", "1101 - 1110", "10", "1906 - 1907", "1 \u2032 c n2t"], ["t 4", "851 - 858", "8", "1906 - 1909", "d n2t"], ["t 5", "1201 - 1296", "96", "1910 - 1917", "1 \u2032 c1 \u2032 h2t"], ["t 6", "1401 - 1412", "12", "1916 - 1918", "d h2t"], ["t 18", "1121 - 1140", "20", "1919", "2 \u2032 c2 \u2032 h2t"], ["t 14", "1441 - 1460 , 1461 - 1479", "39", "1921 - 1922", "1 \u2032 d1 \u2032 h2t"], ["tn ( de )", "1001 - 1030", "30", "1921 - 1922", "e h2t"], ["tk ( de )", "1 - 2", "2", "1876", "b1 n2t"], ["tu ( de )", "1 - 2", "2", "1873", "b n2t"], ["kl ( de )", "1 - 2", "2", "1908", "b h2t"]], "query": "round_eq { avg { all_rows ; quantity } ; 25.14 } = true", "question": "the average quantity for w\u00fcrttemberg locomotives and railbuses was 25.14 ."}, {"topic": "united states house of representatives elections , 1810", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1810", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2668374-13.html.csv", "action": "majority", "sent": "most of the incumbent candidates were successfully re-elected .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "re-elected", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "re-elected"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to re-elected .", "tostr": "most_eq { all_rows ; result ; re-elected } = true"}, "logic_str": "most_eq { all_rows ; result ; re-elected } = true", "interpret": "for the result records of all rows , most of them fuzzily match to re-elected .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "re-elected_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "re-elected_4": "re-elected"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "re-elected_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["pennsylvania 4 plural district with 2 seats", "robert whitehill", "democratic - republican", "1805 ( special )", "re - elected", "david bard ( dr ) 50.0 % robert whitehill ( dr ) 50.0 %"], ["pennsylvania 4 plural district with 2 seats", "david bard", "democratic - republican", "1802", "re - elected", "david bard ( dr ) 50.0 % robert whitehill ( dr ) 50.0 %"], ["pennsylvania 5", "george smith", "democratic - republican", "1808", "re - elected", "george smith ( dr ) 100 %"], ["pennsylvania 6", "william crawford", "democratic - republican", "1808", "re - elected", "william crawford ( dr ) 56.6 % david cassat ( f ) 43.4 %"], ["pennsylvania 7", "john rea", "democratic - republican", "1802", "lost re - election democratic - republican hold", "william piper ( dr ) 58.5 % john rea ( dr ) 41.5 %"], ["pennsylvania 9", "john smilie", "democratic - republican", "1792 1798", "re - elected", "john smilie ( dr ) 100 %"]], "query": "most_eq { all_rows ; result ; re-elected } = true", "question": "most of the incumbent candidates were successfully re-elected ."}, {"topic": "gil morgan", "wiki": "https://en.wikipedia.org/wiki/Gil_Morgan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1859485-1.html.csv", "action": "comparative", "sent": "of the tournaments that gil morgan participated in , his margin of victory at the bc open was 3 strokes more than his margin of victory at the glen campbell - los angeles open .", "annotation": {"row_1": "1", "row_2": "2", "col": "4", "col_other": "2", "relation": "diff", "record_mentioned": "yes", "diff_result": {"diff_value": "3", "bigger": "row1"}}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "diff", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "bc open"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to bc open .", "tostr": "filter_eq { all_rows ; tournament ; bc open }"}, "margin of victory"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory }", "tointer": "select the rows whose tournament record fuzzily matches to bc open . take the margin of victory record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "glen campbell - los angeles open"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to glen campbell - los angeles open .", "tostr": "filter_eq { all_rows ; tournament ; glen campbell - los angeles open }"}, "margin of victory"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory }", "tointer": "select the rows whose tournament record fuzzily matches to glen campbell - los angeles open . take the margin of victory record of this row ."}], "result": "3", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } }"}, "3"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } } ; 3 }", "tointer": "select the rows whose tournament record fuzzily matches to bc open . take the margin of victory record of this row . select the rows whose tournament record fuzzily matches to glen campbell - los angeles open . take the margin of victory record of this row . the first record is 3 larger than the second record ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "bc open"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to bc open .", "tostr": "filter_eq { all_rows ; tournament ; bc open }"}, "margin of victory"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory }", "tointer": "select the rows whose tournament record fuzzily matches to bc open . take the margin of victory record of this row ."}, "5 strokes"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; 5 strokes }", "tointer": "the margin of victory record of the first row is 5 strokes ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "glen campbell - los angeles open"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to glen campbell - los angeles open .", "tostr": "filter_eq { all_rows ; tournament ; glen campbell - los angeles open }"}, "margin of victory"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory }", "tointer": "select the rows whose tournament record fuzzily matches to glen campbell - los angeles open . take the margin of victory record of this row ."}, "2 strokes"], "result": true, "ind": 7, "tostr": "eq { hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } ; 2 strokes }", "tointer": "the margin of victory record of the second row is 2 strokes ."}], "result": true, "ind": 8, "tostr": "and { eq { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; 5 strokes } ; eq { hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } ; 2 strokes } }", "tointer": "the margin of victory record of the first row is 5 strokes . the margin of victory record of the second row is 2 strokes ."}], "result": true, "ind": 9, "tostr": "and { eq { diff { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } } ; 3 } ; and { eq { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; 5 strokes } ; eq { hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } ; 2 strokes } } } = true", "tointer": "select the rows whose tournament record fuzzily matches to bc open . take the margin of victory record of this row . select the rows whose tournament record fuzzily matches to glen campbell - los angeles open . take the margin of victory record of this row . the first record is 3 larger than the second record . the margin of victory record of the first row is 5 strokes . the margin of victory record of the second row is 2 strokes ."}, "logic_str": "and { eq { diff { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } } ; 3 } ; and { eq { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; 5 strokes } ; eq { hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } ; 2 strokes } } } = true", "interpret": "select the rows whose tournament record fuzzily matches to bc open . take the margin of victory record of this row . select the rows whose tournament record fuzzily matches to glen campbell - los angeles open . take the margin of victory record of this row . the first record is 3 larger than the second record . the margin of victory record of the first row is 5 strokes . the margin of victory record of the second row is 2 strokes .", "num_func": 14, "nid": 10, "g_ids": {"and_9": 9, "result_10": 10, "eq_5": 5, "diff_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_11": 11, "tournament_12": 12, "bc open_13": 13, "margin of victory_14": 14, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_15": 15, "tournament_16": 16, "glen campbell - los angeles open_17": 17, "margin of victory_18": 18, "3_19": 19, "and_8": 8, "str_eq_6": 6, "5 strokes_20": 20, "str_eq_7": 7, "2 strokes_21": 21}, "g_ids_features": {"and_9": "and", "result_10": "true", "eq_5": "eq", "diff_4": "diff", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_11": "all_rows", "tournament_12": "tournament", "bc open_13": "bc open", "margin of victory_14": "margin of victory", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_15": "all_rows", "tournament_16": "tournament", "glen campbell - los angeles open_17": "glen campbell - los angeles open", "margin of victory_18": "margin of victory", "3_19": "3", "and_8": "and", "str_eq_6": "str_eq", "5 strokes_20": "5 strokes", "str_eq_7": "str_eq", "2 strokes_21": "2 strokes"}, "g_adj": {"and_9": [10], "result_10": [], "eq_5": [9], "diff_4": [5], "str_hop_2": [4, 6], "filter_str_eq_0": [2], "all_rows_11": [0], "tournament_12": [0], "bc open_13": [0], "margin of victory_14": [2], "str_hop_3": [4, 7], "filter_str_eq_1": [3], "all_rows_15": [1], "tournament_16": [1], "glen campbell - los angeles open_17": [1], "margin of victory_18": [3], "3_19": [5], "and_8": [9], "str_eq_6": [8], "5 strokes_20": [6], "str_eq_7": [8], "2 strokes_21": [7]}, "table_header": ["date", "tournament", "winning score", "margin of victory", "runner ( s ) - up"], "table_cont": [["sep 11 , 1977", "bc open", "14 ( 67 + 65 + 69 + 69 = 270 )", "5 strokes", "lee elder"], ["feb 19 , 1978", "glen campbell - los angeles open", "6 ( 66 + 69 + 73 + 70 = 278 )", "2 strokes", "jack nicklaus"], ["jan 9 , 1978", "world series of golf", "2 ( 71 + 72 + 67 + 68 = 278 )", "playoff", "hubert green"], ["jul 1 , 1979", "danny thomas memphis classic", "10 ( 72 + 71 + 69 + 66 = 278 )", "playoff", "larry nelson"], ["jan 9 , 1983", "joe garagiola - tucson open", "9 ( 65 + 71 + 68 + 67 = 271 )", "playoff", "curtis strange , lanny wadkins"], ["jan 16 , 1983", "glen campbell - los angeles open", "14 ( 71 + 68 + 63 + 68 = 270 )", "2 strokes", "lanny wadkins"], ["jun 3 , 1990", "kemper open", "13 ( 68 + 67 + 70 + 69 = 274 )", "1 stroke", "ian baker - finch"]], "query": "and { eq { diff { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } } ; 3 } ; and { eq { hop { filter_eq { all_rows ; tournament ; bc open } ; margin of victory } ; 5 strokes } ; eq { hop { filter_eq { all_rows ; tournament ; glen campbell - los angeles open } ; margin of victory } ; 2 strokes } } } = true", "question": "of the tournaments that gil morgan participated in , his margin of victory at the bc open was 3 strokes more than his margin of victory at the glen campbell - los angeles open ."}, {"topic": "media in fort mcmurray", "wiki": "https://en.wikipedia.org/wiki/Media_in_Fort_McMurray", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18410022-1.html.csv", "action": "majority", "sent": "most of the stations in fort mcmurray run on frequencies in the nineties range .", "annotation": {"scope": "all", "col": "1", "most_or_all": "most", "criterion": "fuzzily_match", "value": "00 9", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "frequency", "00 9"], "result": true, "ind": 0, "tointer": "for the frequency records of all rows , most of them fuzzily match to 00 9 .", "tostr": "most_eq { all_rows ; frequency ; 00 9 } = true"}, "logic_str": "most_eq { all_rows ; frequency ; 00 9 } = true", "interpret": "for the frequency records of all rows , most of them fuzzily match to 00 9 .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "frequency_3": 3, "00 9_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "frequency_3": "frequency", "00 9_4": "00 9"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "frequency_3": [0], "00 9_4": [0]}, "table_header": ["frequency", "call sign", "branding", "format", "owner"], "table_cont": [["00 91.1", "ckos - fm", "kaos 91.1", "christian", "kings kids promotions outreach ministries"], ["00 91.1", "cjok - fm", "country 93.3", "country", "rogers radio"], ["00 94.5", "cfwe - fm - 5", "cfwe radio network", "first nations community radio", "aboriginal multimedia society"], ["00 96.7", "ckua - fm - 11", "ckua radio network", "public broadcasting", "ckua radio foundation"], ["00 97.9", "ckyx - fm", "rock 97.9", "active rock", "rogers radio"], ["00 99.3", "cbxn - fm", "cbc radio one", "public news / talk", "canadian broadcasting corporation"], ["0 100.5", "chft - fm", "k - rock", "classic hits", "newcap radio"], ["0 101.5", "chfa - 6 - fm", "premi\u00e8re cha\u00eene", "public news / talk", "canadian broadcasting corporation"], ["0 103.7", "cfvr - fm", "mix 103.7", "contemporary hit radio", "harvard broadcasting"]], "query": "most_eq { all_rows ; frequency ; 00 9 } = true", "question": "most of the stations in fort mcmurray run on frequencies in the nineties range ."}, {"topic": "list of united states rapid transit systems by ridership", "wiki": "https://en.wikipedia.org/wiki/List_of_United_States_rapid_transit_systems_by_ridership", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10978010-1.html.csv", "action": "comparative", "sent": "of the top us rapid transit systems by ridership , the one with the second highest ridership has fewer stations than the one with the third highest ridership .", "annotation": {"row_1": "2", "row_2": "3", "col": "4", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "annual ridership ( 2012 )", "280904200"], "result": null, "ind": 0, "tointer": "select the rows whose annual ridership ( 2012 ) record fuzzily matches to 280904200 .", "tostr": "filter_eq { all_rows ; annual ridership ( 2012 ) ; 280904200 }"}, "stations"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; annual ridership ( 2012 ) ; 280904200 } ; stations }", "tointer": "select the rows whose annual ridership ( 2012 ) record fuzzily matches to 280904200 . take the stations record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "annual ridership ( 2012 )", "231154300"], "result": null, "ind": 1, "tointer": "select the rows whose annual ridership ( 2012 ) record fuzzily matches to 231154300 .", "tostr": "filter_eq { all_rows ; annual ridership ( 2012 ) ; 231154300 }"}, "stations"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; annual ridership ( 2012 ) ; 231154300 } ; stations }", "tointer": "select the rows whose annual ridership ( 2012 ) record fuzzily matches to 231154300 . take the stations record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; annual ridership ( 2012 ) ; 280904200 } ; stations } ; hop { filter_eq { all_rows ; annual ridership ( 2012 ) ; 231154300 } ; stations } } = true", "tointer": "select the rows whose annual ridership ( 2012 ) record fuzzily matches to 280904200 . take the stations record of this row . select the rows whose annual ridership ( 2012 ) record fuzzily matches to 231154300 . take the stations record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; annual ridership ( 2012 ) ; 280904200 } ; stations } ; hop { filter_eq { all_rows ; annual ridership ( 2012 ) ; 231154300 } ; stations } } = true", "interpret": "select the rows whose annual ridership ( 2012 ) record fuzzily matches to 280904200 . take the stations record of this row . select the rows whose annual ridership ( 2012 ) record fuzzily matches to 231154300 . take the stations record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "annual ridership (2012)_7": 7, "280904200_8": 8, "stations_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "annual ridership (2012)_11": 11, "231154300_12": 12, "stations_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "annual ridership (2012)_7": "annual ridership ( 2012 )", "280904200_8": "280904200", "stations_9": "stations", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "annual ridership (2012)_11": "annual ridership ( 2012 )", "231154300_12": "231154300", "stations_13": "stations"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "annual ridership (2012)_7": [0], "280904200_8": [0], "stations_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "annual ridership (2012)_11": [1], "231154300_12": [1], "stations_13": [3]}, "table_header": ["annual ridership ( 2012 )", "rider per mile", "opened", "stations", "lines"], "table_cont": [["2544892400", "37613", "1904", "468", "24"], ["280904200", "9227", "1976", "86", "5"], ["231154300", "7095", "1892", "145", "8"], ["165028800", "13982", "1897", "53", "3"], ["123219300", "4056", "1972", "44", "5"], ["98171300", "9172", "1907", "74", "3"], ["70548400", "18123", "1908", "13", "4"], ["70506800", "4594", "1979", "38", "4"], ["48703700", "9115", "1993", "16", "2"], ["19242800", "2904", "1984", "23", "2"], ["15399400", "3871", "1983", "14", "1"], ["11023500", "3794", "2004", "16", "1"], ["10619900", "2606", "1936", "13", "1"], ["6239900", "881", "1955", "18", "1"], ["4445100", "1071", "1860", "22", "1"]], "query": "less { hop { filter_eq { all_rows ; annual ridership ( 2012 ) ; 280904200 } ; stations } ; hop { filter_eq { all_rows ; annual ridership ( 2012 ) ; 231154300 } ; stations } } = true", "question": "of the top us rapid transit systems by ridership , the one with the second highest ridership has fewer stations than the one with the third highest ridership ."}, {"topic": "raphael butler", "wiki": "https://en.wikipedia.org/wiki/Raphael_Butler", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10516844-3.html.csv", "action": "aggregation", "sent": "all of raphael butler 's fights lasted a combined total time of 15:41 .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "15:41", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "time"], "result": "15:41", "ind": 0, "tostr": "sum { all_rows ; time }"}, "15:41"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; time } ; 15:41 } = true", "tointer": "the sum of the time record of all rows is 15:41 ."}, "logic_str": "round_eq { sum { all_rows ; time } ; 15:41 } = true", "interpret": "the sum of the time record of all rows is 15:41 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "time_4": 4, "15:41_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "time_4": "time", "15:41_5": "15:41"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "time_4": [0], "15:41_5": [1]}, "table_header": ["res", "record", "opponent", "method", "round", "time", "location"], "table_cont": [["win", "7 - 0", "joseph bryant", "tko ( strikes )", "1", "1:04", "rio rancho , new mexico , united states"], ["win", "6 - 0", "jeremiah o'neal", "ko ( punches )", "1", "2:19", "thackerville , oklahoma , united states"], ["win", "5 - 0", "brett murphy", "ko ( punch )", "1", "0:13", "st paul , minnesota , united states"], ["win", "4 - 0", "steven shaw", "submission ( armbar )", "1", "4:35", "maplewood , minnesota , united states"], ["win", "3 - 0", "richard white", "submission ( punches )", "2", "3:18", "rochester , minnesota , united states"], ["win", "2 - 0", "jeremy beck", "ko ( punches )", "1", "3:36", "red wing , minnesota , united states"], ["win", "1 - 0", "gabe hobbs", "ko ( punch )", "1", "0:36", "welch , minnesota , united states"]], "query": "round_eq { sum { all_rows ; time } ; 15:41 } = true", "question": "all of raphael butler 's fights lasted a combined total time of 15:41 ."}, {"topic": "1991 - 92 new york rangers season", "wiki": "https://en.wikipedia.org/wiki/1991%E2%80%9392_New_York_Rangers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14034807-7.html.csv", "action": "superlative", "sent": "of the games in the 1991-92 season of the new york rangers against the minnesota north stars , the latest game was february 21 .", "annotation": {"scope": "subset", "col_superlative": "2", "row_superlative": "10", "value_mentioned": "yes", "max_or_min": "max", "other_col": "3", "subset": {"col": "3", "criterion": "equal", "value": "minnesota north stars"}}, "logic": {"func": "eq", "args": [{"func": "max", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "minnesota north stars"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; opponent ; minnesota north stars }", "tointer": "select the rows whose opponent record fuzzily matches to minnesota north stars ."}, "february"], "result": "21", "ind": 1, "tostr": "max { filter_eq { all_rows ; opponent ; minnesota north stars } ; february }", "tointer": "select the rows whose opponent record fuzzily matches to minnesota north stars . the maximum february record of these rows is 21 ."}, "21"], "result": true, "ind": 2, "tostr": "eq { max { filter_eq { all_rows ; opponent ; minnesota north stars } ; february } ; 21 } = true", "tointer": "select the rows whose opponent record fuzzily matches to minnesota north stars . the maximum february record of these rows is 21 ."}, "logic_str": "eq { max { filter_eq { all_rows ; opponent ; minnesota north stars } ; february } ; 21 } = true", "interpret": "select the rows whose opponent record fuzzily matches to minnesota north stars . the maximum february record of these rows is 21 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "max_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "opponent_5": 5, "minnesota north stars_6": 6, "february_7": 7, "21_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "max_1": "max", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "opponent_5": "opponent", "minnesota north stars_6": "minnesota north stars", "february_7": "february", "21_8": "21"}, "g_adj": {"eq_2": [3], "result_3": [], "max_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "opponent_5": [0], "minnesota north stars_6": [0], "february_7": [1], "21_8": [2]}, "table_header": ["game", "february", "opponent", "score", "record"], "table_cont": [["53", "1", "minnesota north stars", "2 - 1", "34 - 17 - 2"], ["54", "5", "pittsburgh penguins", "4 - 3", "35 - 17 - 2"], ["55", "7", "washington capitals", "6 - 2", "35 - 18 - 2"], ["56", "9", "detroit red wings", "5 - 5 ot", "35 - 18 - 3"], ["57", "12", "vancouver canucks", "5 - 2", "36 - 18 - 3"], ["58", "14", "new york islanders", "9 - 2", "37 - 18 - 3"], ["59", "16", "new jersey devils", "4 - 2", "37 - 19 - 3"], ["60", "17", "vancouver canucks", "3 - 3 ot", "37 - 19 - 4"], ["61", "20", "new york islanders", "6 - 2", "37 - 20 - 4"], ["62", "21", "minnesota north stars", "5 - 4", "38 - 20 - 4"], ["63", "23", "philadelphia flyers", "2 - 1 ot", "39 - 20 - 4"], ["64", "25", "chicago blackhawks", "4 - 1", "40 - 20 - 4"]], "query": "eq { max { filter_eq { all_rows ; opponent ; minnesota north stars } ; february } ; 21 } = true", "question": "of the games in the 1991-92 season of the new york rangers against the minnesota north stars , the latest game was february 21 ."}, {"topic": "united states house of representatives elections , 1946", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1946", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1342233-32.html.csv", "action": "ordinal", "sent": "ralph a gamble recorded the highest percentage ratio among all candidates of the 1946 house of representatives elections .", "annotation": {"row": "3", "col": "6", "order": "1", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "candidates", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; candidates ; 1 }"}, "incumbent"], "result": "ralph a gamble", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent }"}, "ralph a gamble"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; ralph a gamble } = true", "tointer": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is ralph a gamble ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; ralph a gamble } = true", "interpret": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is ralph a gamble .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "candidates_5": 5, "1_6": 6, "incumbent_7": 7, "ralph a gamble_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "candidates_5": "candidates", "1_6": "1", "incumbent_7": "incumbent", "ralph a gamble_8": "ralph a gamble"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "candidates_5": [0], "1_6": [0], "incumbent_7": [1], "ralph a gamble_8": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["new york 16", "ellsworth b buck", "republican", "1944", "re - elected", "ellsworth b buck ( r ) 61.2 % john burry ( d ) 38.8 %"], ["new york 20", "sol bloom", "democratic", "1923", "re - elected", "sol bloom ( d ) 61.1 % jules j justin ( r ) 38.9 %"], ["new york 28", "ralph a gamble", "republican", "1937", "re - elected", "ralph a gamble ( r ) 75.4 % morris karnes ( d ) 24.6 %"], ["new york 30", "jay le fevre", "republican", "1942", "re - elected", "jay le fevre ( r ) 69.5 % john f killgrew ( d ) 30.5 %"], ["new york 35", "hadwen c fuller", "republican", "1943", "re - elected", "hadwen c fuller ( r ) 54.3 % frank a emma ( d ) 45.7 %"]], "query": "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; ralph a gamble } = true", "question": "ralph a gamble recorded the highest percentage ratio among all candidates of the 1946 house of representatives elections ."}, {"topic": "1984 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1984_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17231267-4.html.csv", "action": "majority", "sent": "most of the players are from the united states .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "united states", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "country", "united states"], "result": true, "ind": 0, "tointer": "for the country records of all rows , most of them fuzzily match to united states .", "tostr": "most_eq { all_rows ; country ; united states } = true"}, "logic_str": "most_eq { all_rows ; country ; united states } = true", "interpret": "for the country records of all rows , most of them fuzzily match to united states .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "country_3": 3, "united states_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "country_3": "country", "united states_4": "united states"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "country_3": [0], "united states_4": [0]}, "table_header": ["place", "player", "country", "score", "to par"], "table_cont": [["1", "hale irwin", "united states", "68 + 68 = 136", "- 4"], ["2", "fuzzy zoeller", "united states", "71 + 66 = 137", "-- 3"], ["t3", "david canipe", "united states", "69 + 69 = 138", "- 2"], ["t3", "greg norman", "australia", "70 + 68 = 138", "- 2"], ["t5", "curtis strange", "united states", "70 + 69 = 139", "- 1"], ["t5", "jim thorpe", "united states", "68 + 71 = 139", "- 1"], ["7", "fred couples", "united states", "69 + 71 = 140", "e"], ["t8", "andy bean", "united states", "70 + 71 = 141", "+ 1"], ["t8", "jay sigel ( a )", "united states", "69 + 72 = 141", "+ 1"], ["t10", "isao aoki", "japan", "72 + 70 = 142", "+ 2"], ["t10", "seve ballesteros", "spain", "69 + 73 = 142", "+ 2"], ["t10", "johnny miller", "united states", "74 + 68 = 142", "+ 2"], ["t10", "jack nicklaus", "united states", "71 + 71 = 142", "+ 2"], ["t10", "mike reid", "united states", "70 + 72 = 142", "+ 2"]], "query": "most_eq { all_rows ; country ; united states } = true", "question": "most of the players are from the united states ."}, {"topic": "kazakhstan premier league", "wiki": "https://en.wikipedia.org/wiki/Kazakhstan_Premier_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2527617-1.html.csv", "action": "majority", "sent": "in the kazakhstan premier league , all of the seasons where aktobe was champion were after the 2004 season .", "annotation": {"scope": "subset", "col": "1", "most_or_all": "all", "criterion": "greater_than", "value": "2004", "subset": {"col": "2", "criterion": "equal", "value": "aktobe"}}, "logic": {"func": "all_greater", "args": [{"func": "filter_str_eq", "args": ["all_rows", "champion", "aktobe"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; champion ; aktobe }", "tointer": "select the rows whose champion record fuzzily matches to aktobe ."}, "season", "2004"], "result": true, "ind": 1, "tointer": "select the rows whose champion record fuzzily matches to aktobe . for the season records of these rows , all of them are greater than 2004 .", "tostr": "all_greater { filter_eq { all_rows ; champion ; aktobe } ; season ; 2004 } = true"}, "logic_str": "all_greater { filter_eq { all_rows ; champion ; aktobe } ; season ; 2004 } = true", "interpret": "select the rows whose champion record fuzzily matches to aktobe . for the season records of these rows , all of them are greater than 2004 .", "num_func": 2, "nid": 2, "g_ids": {"all_greater_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "champion_4": 4, "aktobe_5": 5, "season_6": 6, "2004_7": 7}, "g_ids_features": {"all_greater_1": "all_greater", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "champion_4": "champion", "aktobe_5": "aktobe", "season_6": "season", "2004_7": "2004"}, "g_adj": {"all_greater_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "champion_4": [0], "aktobe_5": [0], "season_6": [1], "2004_7": [1]}, "table_header": ["season", "champion", "runner - up", "third place", "top scorer", "best player"], "table_cont": [["1992", "kairat", "orbadasy ( skif ordabasy )", "irtysh ( traktor )", "sergei kogai ( kaisar ) - 21", "sergei volgin ( kairat )"], ["1993", "irtysh ( ansat )", "ekibastuzets ( batyr )", "gornyak", "aleksandr shmarikov ( taraz ) - 28", "nikolay kurganskiy ( ekibastuzets )"], ["1994", "semey ( yelimay )", "irtysh ( ansat )", "ordabasy ( zhiger )", "oleg litvinenko ( taraz ) - 20", "kanat musataev ( ordabasy )"], ["1995", "semey ( yelimay )", "taraz", "shakhter", "andrei miroshnichenko ( semey ) - 23", "andrei miroshnichenko ( semey )"], ["1996", "taraz", "irtysh", "semey ( yelimay )", "viktor antonov ( irtysh ) - 21", "oleg voskoboynikov ( taraz )"], ["1997", "irtysh", "taraz", "kairat", "nurken mazbaev ( taraz ) - 16", "oleg voskoboynikov ( taraz )"], ["1998", "semey ( yelimay )", "ekibastuzets ( batyr )", "irtysh", "oleg litvinenko ( semey ) - 14", "oleg voskoboynikov ( kaisar )"], ["1999", "irtysh ( irtysh bastau )", "kyzylzhar ( access - esil )", "kairat", "rejepmyrat agaba\u00e3 \u00bd ew ( kairat ) - 24", "igor avdeev ( kyzylzhar )"], ["2000", "astana - 64 ( zhenis )", "kyzylzhar ( access - golden - grain )", "irtysh", "mendes ( irtysh ) - 21", "igor avdeev ( kyzylzhar )"], ["2001", "astana - 64 ( zhenis )", "atyrau", "kyzylzhar ( esil bogatyr )", "arsen tlekhugov ( astana - 64 ) - 30", "arsen tlekhugov ( astana - 64 )"], ["2002", "irtysh", "atyrau", "tobol", "yevgeny lunev ( shakhter ) - 16", "evgeniy lovchev ( astana - 64 )"], ["2003", "irtysh", "tobol", "astana - 64 ( zhenis )", "andrei finonchenko ( shakhter ) - 18", "nurbol zhumaskaliyev ( tobol )"], ["2005", "aktobe", "tobol", "kairat", "murat tleshev ( irtysh ) - 20", "nurbol zhumaskaliyev ( tobol )"], ["2006", "astana - 64 ( astana )", "aktobe", "tobol", "jafar irismetov ( almaty ) - 17", "david loria ( astana - 64 )"], ["2007", "aktobe", "tobol", "shakhter", "jafar irismetov ( almaty ) - 17", "samat smakov ( aktobe )"], ["2008", "aktobe", "tobol", "irtysh", "murat tleshev ( irtysh ) - 13", "samat smakov ( aktobe )"], ["2010", "tobol", "aktobe", "irtysh", "ulugbek bakaev ( tobol ) - 16", "nurbol zhumaskaliyev ( tobol )"], ["2011", "shakhter", "zhetysu", "aktobe", "ulugbek bakaev ( zhetysu ) - 18", "ulan konysbayev ( shakhter )"]], "query": "all_greater { filter_eq { all_rows ; champion ; aktobe } ; season ; 2004 } = true", "question": "in the kazakhstan premier league , all of the seasons where aktobe was champion were after the 2004 season ."}, {"topic": "list of gary unmarried episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Gary_Unmarried_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24781886-2.html.csv", "action": "aggregation", "sent": "during the first 19 episodes , gary unmarried had an average 7.42 million viewers per episode .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "7.42", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "viewers"], "result": "7.42", "ind": 0, "tostr": "avg { all_rows ; viewers }"}, "7.42"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; viewers } ; 7.42 } = true", "tointer": "the average of the viewers record of all rows is 7.42 ."}, "logic_str": "round_eq { avg { all_rows ; viewers } ; 7.42 } = true", "interpret": "the average of the viewers record of all rows is 7.42 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "viewers_4": 4, "7.42_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "viewers_4": "viewers", "7.42_5": "7.42"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "viewers_4": [0], "7.42_5": [1]}, "table_header": ["", "title", "director", "writer ( s )", "viewers", "air date", "production code"], "table_cont": [["1", "pilot", "james burrows", "ed yeager", "6.84", "september 24 , 2008", "101"], ["2", "gary gets boundaries", "james burrows", "ed yeager", "6.97", "october 1 , 2008", "102"], ["3", "gary marries off his ex", "james burrows", "janae bakken", "7.43", "october 8 , 2008", "103"], ["4", "gary gets his stuff back", "james burrows", "matt goldman", "7.71", "october 15 , 2008", "104"], ["5", "gary breaks up his ex - wife and girlfriend", "james burrows", "ira ungerleider", "7.85", "october 22 , 2008", "105"], ["6", "gary meets the gang", "james burrows", "susan mcmartin", "6.44", "november 5 , 2008", "106"], ["7", "gary and allison 's restaurant", "james burrows", "bill daly", "6.71", "november 12 , 2008", "107"], ["8", "gary and allison brooks", "james burrows", "ed brown and scott parkin", "8.14", "december 19 , 2008", "108"], ["9", "gary gives thanks", "james burrows", "mark gross", "7.72", "december 26 , 2008", "109"], ["10", "gary goes first", "james burrows", "julie bean", "8.03", "december 10 , 2008", "110"], ["11", "gary toughens up tom", "james burrows", "ric swartzlander", "7.55", "december 17 , 2008", "111"], ["12", "gary dates louise 's teacher", "james burrows", "barry langer", "7.07", "january 14 , 2009", "112"], ["13", "gary moves back in", "james burrows", "bill daly and mark gross", "7.07", "january 21 , 2009", "113"], ["14", "gary and dennis ' sister", "james burrows", "julie bean and susan mcmartin", "6.86", "february 11 , 2009", "114"], ["15", "gary 's ex - brother - in - law", "james burrows", "mark jordan legan and terry mulroy", "8.15", "february 18 , 2009", "115"], ["16", "gary uses his veto", "james burrows", "jana hunter and mitch hunter", "8.82", "march 11 , 2009", "116"], ["17", "gary hooks up allison", "james burrows", "ira ungerleider", "7.57", "march 18 , 2009", "117"], ["18", "gary and the trophy", "james burrows", "rob deshotel", "7.30", "april 8 , 2009", "118"], ["19", "gary and his half brother", "james burrows", "scott parkin and ed brown", "6.66", "may 6 , 2009", "119"]], "query": "round_eq { avg { all_rows ; viewers } ; 7.42 } = true", "question": "during the first 19 episodes , gary unmarried had an average 7.42 million viewers per episode ."}, {"topic": "1975 denver broncos season", "wiki": "https://en.wikipedia.org/wiki/1975_Denver_Broncos_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17924362-1.html.csv", "action": "ordinal", "sent": "during the 1975 season , denver broncos ' game against the buffalo bills recorded the highest attendance .", "annotation": {"row": "3", "col": "7", "order": "1", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 1 }"}, "opponent"], "result": "buffalo bills", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 1 } ; opponent }"}, "buffalo bills"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; opponent } ; buffalo bills } = true", "tointer": "select the row whose attendance record of all rows is 1st maximum . the opponent record of this row is buffalo bills ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; opponent } ; buffalo bills } = true", "interpret": "select the row whose attendance record of all rows is 1st maximum . the opponent record of this row is buffalo bills .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "1_6": 6, "opponent_7": 7, "buffalo bills_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "1_6": "1", "opponent_7": "opponent", "buffalo bills_8": "buffalo bills"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "1_6": [0], "opponent_7": [1], "buffalo bills_8": [2]}, "table_header": ["week", "date", "opponent", "result", "game site", "record", "attendance"], "table_cont": [["1", "september 21", "kansas city chiefs", "w 37 - 33", "mile high stadium", "1 - 0", "51858"], ["2", "september 29", "green bay packers", "w 23 - 13", "mile high stadium", "2 - 0", "52621"], ["3", "october 5", "buffalo bills", "l 14 - 38", "rich stadium", "2 - 1", "79864"], ["4", "october 12", "pittsburgh steelers", "l 9 - 20", "three rivers stadium", "2 - 2", "49169"], ["5", "october 19", "cleveland browns", "w 16 - 15", "mile high stadium", "3 - 2", "52590"], ["6", "october 26", "kansas city chiefs", "l 13 - 26", "arrowhead stadium", "3 - 3", "70043"], ["7", "november 26", "oakland raiders", "l 17 - 42", "mile high stadium", "3 - 4", "52505"], ["8", "november 9", "cincinnati bengals", "l 16 - 17", "mile high stadium", "3 - 5", "49919"], ["9", "november 16", "san diego chargers", "w 27 - 17", "san diego stadium", "4 - 5", "26048"], ["10", "november 23", "atlanta falcons", "l 21 - 35", "atlanta - fulton county stadium", "4 - 6", "28686"], ["11", "november 30", "san diego chargers", "w 13 - 10 ( ot )", "mile high stadium", "5 - 6", "44982"], ["12", "december 8", "oakland raiders", "l 10 - 17", "oakland - alameda county coliseum", "5 - 7", "51075"], ["13", "december 14", "philadelphia eagles", "w 25 - 10", "mile high stadium", "6 - 7", "36860"], ["14", "december 20", "miami dolphins", "l 13 - 14", "miami orange bowl", "6 - 8", "43064"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; opponent } ; buffalo bills } = true", "question": "during the 1975 season , denver broncos ' game against the buffalo bills recorded the highest attendance ."}, {"topic": "2007 eneco tour", "wiki": "https://en.wikipedia.org/wiki/2007_Eneco_Tour", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12608303-21.html.csv", "action": "unique", "sent": "only michiel elijzen has a points classification of \" not awarded . \" .", "annotation": {"scope": "all", "row": "1", "col": "4", "col_other": "2", "criterion": "equal", "value": "not awarded", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "points classification", "not awarded"], "result": null, "ind": 0, "tointer": "select the rows whose points classification record fuzzily matches to not awarded .", "tostr": "filter_eq { all_rows ; points classification ; not awarded }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; points classification ; not awarded } }", "tointer": "select the rows whose points classification record fuzzily matches to not awarded . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "points classification", "not awarded"], "result": null, "ind": 0, "tointer": "select the rows whose points classification record fuzzily matches to not awarded .", "tostr": "filter_eq { all_rows ; points classification ; not awarded }"}, "winner"], "result": "michiel elijzen", "ind": 2, "tostr": "hop { filter_eq { all_rows ; points classification ; not awarded } ; winner }"}, "michiel elijzen"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; points classification ; not awarded } ; winner } ; michiel elijzen }", "tointer": "the winner record of this unqiue row is michiel elijzen ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; points classification ; not awarded } } ; eq { hop { filter_eq { all_rows ; points classification ; not awarded } ; winner } ; michiel elijzen } } = true", "tointer": "select the rows whose points classification record fuzzily matches to not awarded . there is only one such row in the table . the winner record of this unqiue row is michiel elijzen ."}, "logic_str": "and { only { filter_eq { all_rows ; points classification ; not awarded } } ; eq { hop { filter_eq { all_rows ; points classification ; not awarded } ; winner } ; michiel elijzen } } = true", "interpret": "select the rows whose points classification record fuzzily matches to not awarded . there is only one such row in the table . the winner record of this unqiue row is michiel elijzen .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "points classification_7": 7, "not awarded_8": 8, "str_eq_3": 3, "str_hop_2": 2, "winner_9": 9, "michiel elijzen_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "points classification_7": "points classification", "not awarded_8": "not awarded", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "winner_9": "winner", "michiel elijzen_10": "michiel elijzen"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "points classification_7": [0], "not awarded_8": [0], "str_eq_3": [4], "str_hop_2": [3], "winner_9": [2], "michiel elijzen_10": [3]}, "table_header": ["stage", "winner", "general classification", "points classification", "team classification"], "table_cont": [["p", "michiel elijzen", "michiel elijzen", "not awarded", "cofidis"], ["1", "nick nuyens", "nick nuyens", "nick nuyens", "predictor - lotto"], ["2", "mark cavendish", "nick nuyens", "nick nuyens", "predictor - lotto"], ["3", "robbie mcewen", "nick nuyens", "mark cavendish", "predictor - lotto"], ["4", "wouter weylandt", "nick nuyens", "mark cavendish", "predictor - lotto"], ["5", "luciano pagliarini", "nick nuyens", "mark cavendish", "predictor - lotto"], ["6", "pablo lastras", "thomas dekker", "mark cavendish", "predictor - lotto"], ["7", "s\u00e9bastien rosseler", "iv\u00e1n guti\u00e9rrez", "mark cavendish", "quick step - innergetic"], ["final", "final", "iv\u00e1n guti\u00e9rrez", "mark cavendish", "quick step - innergetic"]], "query": "and { only { filter_eq { all_rows ; points classification ; not awarded } } ; eq { hop { filter_eq { all_rows ; points classification ; not awarded } ; winner } ; michiel elijzen } } = true", "question": "only michiel elijzen has a points classification of \" not awarded . \" ."}, {"topic": "1974 vfl season", "wiki": "https://en.wikipedia.org/wiki/1974_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10869646-10.html.csv", "action": "superlative", "sent": "the game between collingwood and north melbourne had the biggest crowd size .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1,3", "subset": null}, "logic": {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "crowd"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; crowd }"}, "home team"], "result": "collingwood", "ind": 1, "tostr": "hop { argmax { all_rows ; crowd } ; home team }"}, "collingwood"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; crowd } ; home team } ; collingwood }", "tointer": "select the row whose crowd record of all rows is maximum . the home team record of this row is collingwood ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "crowd"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; crowd }"}, "away team"], "result": "north melbourne", "ind": 3, "tostr": "hop { argmax { all_rows ; crowd } ; away team }"}, "north melbourne"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; crowd } ; away team } ; north melbourne }", "tointer": "the away team record of this row is north melbourne ."}], "result": true, "ind": 5, "tostr": "and { eq { hop { argmax { all_rows ; crowd } ; home team } ; collingwood } ; eq { hop { argmax { all_rows ; crowd } ; away team } ; north melbourne } } = true", "tointer": "select the row whose crowd record of all rows is maximum . the home team record of this row is collingwood . the away team record of this row is north melbourne ."}, "logic_str": "and { eq { hop { argmax { all_rows ; crowd } ; home team } ; collingwood } ; eq { hop { argmax { all_rows ; crowd } ; away team } ; north melbourne } } = true", "interpret": "select the row whose crowd record of all rows is maximum . the home team record of this row is collingwood . the away team record of this row is north melbourne .", "num_func": 7, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "str_eq_2": 2, "str_hop_1": 1, "argmax_0": 0, "all_rows_7": 7, "crowd_8": 8, "home team_9": 9, "collingwood_10": 10, "str_eq_4": 4, "str_hop_3": 3, "away team_11": 11, "north melbourne_12": 12}, "g_ids_features": {"and_5": "and", "result_6": "true", "str_eq_2": "str_eq", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_7": "all_rows", "crowd_8": "crowd", "home team_9": "home team", "collingwood_10": "collingwood", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "away team_11": "away team", "north melbourne_12": "north melbourne"}, "g_adj": {"and_5": [6], "result_6": [], "str_eq_2": [5], "str_hop_1": [2], "argmax_0": [1, 3], "all_rows_7": [0], "crowd_8": [0], "home team_9": [1], "collingwood_10": [2], "str_eq_4": [5], "str_hop_3": [4], "away team_11": [3], "north melbourne_12": [4]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["collingwood", "12.10 ( 82 )", "north melbourne", "8.15 ( 63 )", "victoria park", "25892", "8 june 1974"], ["south melbourne", "9.13 ( 67 )", "richmond", "23.9 ( 147 )", "lake oval", "12054", "8 june 1974"], ["st kilda", "9.9 ( 63 )", "footscray", "11.10 ( 76 )", "moorabbin oval", "17667", "8 june 1974"], ["melbourne", "19.10 ( 124 )", "fitzroy", "13.15 ( 93 )", "mcg", "12414", "8 june 1974"], ["essendon", "9.14 ( 68 )", "carlton", "16.7 ( 103 )", "windy hill", "24436", "8 june 1974"], ["hawthorn", "14.13 ( 97 )", "geelong", "10.6 ( 66 )", "vfl park", "18562", "8 june 1974"]], "query": "and { eq { hop { argmax { all_rows ; crowd } ; home team } ; collingwood } ; eq { hop { argmax { all_rows ; crowd } ; away team } ; north melbourne } } = true", "question": "the game between collingwood and north melbourne had the biggest crowd size ."}, {"topic": "eurovision song contest 1961", "wiki": "https://en.wikipedia.org/wiki/Eurovision_Song_Contest_1961", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-180719-1.html.csv", "action": "ordinal", "sent": "the song \" are you sure \" received the 2nd highest number of points in the eurovision song contest of 1961 .", "annotation": {"row": "15", "col": "7", "order": "2", "col_other": "4", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "points", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; points ; 2 }"}, "song"], "result": "are you sure", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; points ; 2 } ; song }"}, "are you sure"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; song } ; are you sure } = true", "tointer": "select the row whose points record of all rows is 2nd maximum . the song record of this row is are you sure ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; song } ; are you sure } = true", "interpret": "select the row whose points record of all rows is 2nd maximum . the song record of this row is are you sure .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "points_5": 5, "2_6": 6, "song_7": 7, "are you sure_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "points_5": "points", "2_6": "2", "song_7": "song", "are you sure_8": "are you sure"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "points_5": [0], "2_6": [0], "song_7": [1], "are you sure_8": [2]}, "table_header": ["draw", "language", "artist", "song", "english translation", "place", "points"], "table_cont": [["01", "spanish", "conchita bautista", "estando contigo", "when i 'm with you", "9", "8"], ["02", "french", "colette der\u00e9al", "allons , allons les enfants", "come on , come on children", "10", "6"], ["03", "german", "jimmy makulis", "sehnsucht", "longing", "15", "1"], ["04", "finnish", "laila kinnunen", "valoa ikkunassa", "the lights in the window", "10", "6"], ["05", "serbian", "ljiljana petrovi\u0107", "neke davne zvezde ( \u043d\u0435\u043a\u0435 \u0434\u0430\u0432\u043d\u0435 \u0437\u0432\u0435\u0437\u0434\u0435 )", "some ancient stars", "8", "9"], ["06", "dutch", "greetje kauffeld", "wat een dag", "what a day", "10", "6"], ["07", "swedish", "lill - babs", "april , april", "-", "14", "2"], ["08", "german , french", "lale andersen", "einmal sehen wir uns wieder", "we will meet again", "13", "3"], ["09", "french", "jean - paul mauric", "printemps , avril carillonne", "spring , april rings", "4", "13"], ["10", "french", "franca di rienzo", "nous aurons demain", "we 'll have tomorrow", "3", "16"], ["11", "dutch", "bob benny", "september , gouden roos", "september , golden rose", "15", "1"], ["12", "norwegian", "nora brockstedt", "sommer i palma", "summer in palma", "7", "10"], ["13", "danish", "dario campeotto", "angelique", "-", "5", "12"], ["14", "french", "jean - claude pascal", "nous les amoureux", "we the lovers", "1", "31"], ["15", "english", "the allisons", "are you sure", "-", "2", "24"], ["16", "italian", "betty curtis", "al di l\u00e0", "beyond", "5", "12"]], "query": "eq { hop { nth_argmax { all_rows ; points ; 2 } ; song } ; are you sure } = true", "question": "the song \" are you sure \" received the 2nd highest number of points in the eurovision song contest of 1961 ."}, {"topic": "abc saturday movie of the week", "wiki": "https://en.wikipedia.org/wiki/ABC_Saturday_Movie_of_the_Week", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22837363-1.html.csv", "action": "comparative", "sent": "season 9 of the abc saturday movie of the week had less viewers than season 4 .", "annotation": {"row_1": "9", "row_2": "4", "col": "8", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "season", "9"], "result": null, "ind": 0, "tointer": "select the rows whose season record fuzzily matches to 9 .", "tostr": "filter_eq { all_rows ; season ; 9 }"}, "viewers ( in millions )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; season ; 9 } ; viewers ( in millions ) }", "tointer": "select the rows whose season record fuzzily matches to 9 . take the viewers ( in millions ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "season", "4"], "result": null, "ind": 1, "tointer": "select the rows whose season record fuzzily matches to 4 .", "tostr": "filter_eq { all_rows ; season ; 4 }"}, "viewers ( in millions )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; season ; 4 } ; viewers ( in millions ) }", "tointer": "select the rows whose season record fuzzily matches to 4 . take the viewers ( in millions ) record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; season ; 9 } ; viewers ( in millions ) } ; hop { filter_eq { all_rows ; season ; 4 } ; viewers ( in millions ) } } = true", "tointer": "select the rows whose season record fuzzily matches to 9 . take the viewers ( in millions ) record of this row . select the rows whose season record fuzzily matches to 4 . take the viewers ( in millions ) record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; season ; 9 } ; viewers ( in millions ) } ; hop { filter_eq { all_rows ; season ; 4 } ; viewers ( in millions ) } } = true", "interpret": "select the rows whose season record fuzzily matches to 9 . take the viewers ( in millions ) record of this row . select the rows whose season record fuzzily matches to 4 . take the viewers ( in millions ) record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "season_7": 7, "9_8": 8, "viewers (in millions)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "season_11": 11, "4_12": 12, "viewers (in millions)_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "season_7": "season", "9_8": "9", "viewers (in millions)_9": "viewers ( in millions )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "season_11": "season", "4_12": "4", "viewers (in millions)_13": "viewers ( in millions )"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "season_7": [0], "9_8": [0], "viewers (in millions)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "season_11": [1], "4_12": [1], "viewers (in millions)_13": [3]}, "table_header": ["season", "episodes", "timeslot ( et )", "season premiere", "season finale", "tv season", "rank", "viewers ( in millions )"], "table_cont": [["1", "10", "saturday 8:00 pm", "february 21 , 2004", "august 14 , 2004", "2003 - 2004", "123", "6.21"], ["2", "17", "saturday 8:00 pm", "september 25 , 2004", "august 27 , 2005", "2004 - 2005", "107", "6.41"], ["3", "25", "saturday 8:00 pm", "september 17 , 2005", "august 12 , 2006", "2005 - 2006", "126", "5.74"], ["4", "25", "saturday 8:00 pm", "october 21 , 2006", "august 25 , 2007", "2006 - 2007", "180", "5.12"], ["5", "23", "saturday 8:00 pm", "december 8 , 2007", "august 23 , 2008", "2007 - 2008", "160", "4.69"], ["6", "21", "saturday 8:00 pm", "december 13 , 2008", "august 29 , 2009", "2008 - 2009", "149", "3.80"], ["7", "18", "saturday 8:00 pm", "december 12 , 2009", "august 28 , 2010", "2009 - 2010", "119", "3.55"], ["8", "22", "saturday 8:00 pm", "december 11 , 2010", "august 20 , 2011", "2010 - 2011", "170", "3.53"], ["9", "14", "saturday 8:00 pm", "december 24 , 2011", "august 18 , 2012", "2011 - 2012", "156", "3.46"]], "query": "less { hop { filter_eq { all_rows ; season ; 9 } ; viewers ( in millions ) } ; hop { filter_eq { all_rows ; season ; 4 } ; viewers ( in millions ) } } = true", "question": "season 9 of the abc saturday movie of the week had less viewers than season 4 ."}, {"topic": "united states house of representatives elections , 2012", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_2012", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-25030512-26.html.csv", "action": "unique", "sent": "john kline is the only person first elected to congress prior to 2006 .", "annotation": {"scope": "all", "row": "2", "col": "4", "col_other": "2", "criterion": "less_than", "value": "2006", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "first elected", "2006"], "result": null, "ind": 0, "tointer": "select the rows whose first elected record is less than 2006 .", "tostr": "filter_less { all_rows ; first elected ; 2006 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; first elected ; 2006 } }", "tointer": "select the rows whose first elected record is less than 2006 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "first elected", "2006"], "result": null, "ind": 0, "tointer": "select the rows whose first elected record is less than 2006 .", "tostr": "filter_less { all_rows ; first elected ; 2006 }"}, "incumbent"], "result": "john kline", "ind": 2, "tostr": "hop { filter_less { all_rows ; first elected ; 2006 } ; incumbent }"}, "john kline"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; first elected ; 2006 } ; incumbent } ; john kline }", "tointer": "the incumbent record of this unqiue row is john kline ."}], "result": true, "ind": 4, "tostr": "and { only { filter_less { all_rows ; first elected ; 2006 } } ; eq { hop { filter_less { all_rows ; first elected ; 2006 } ; incumbent } ; john kline } } = true", "tointer": "select the rows whose first elected record is less than 2006 . there is only one such row in the table . the incumbent record of this unqiue row is john kline ."}, "logic_str": "and { only { filter_less { all_rows ; first elected ; 2006 } } ; eq { hop { filter_less { all_rows ; first elected ; 2006 } ; incumbent } ; john kline } } = true", "interpret": "select the rows whose first elected record is less than 2006 . there is only one such row in the table . the incumbent record of this unqiue row is john kline .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_less_0": 0, "all_rows_6": 6, "first elected_7": 7, "2006_8": 8, "str_eq_3": 3, "str_hop_2": 2, "incumbent_9": 9, "john kline_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_6": "all_rows", "first elected_7": "first elected", "2006_8": "2006", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "incumbent_9": "incumbent", "john kline_10": "john kline"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_less_0": [1, 2], "all_rows_6": [0], "first elected_7": [0], "2006_8": [0], "str_eq_3": [4], "str_hop_2": [3], "incumbent_9": [2], "john kline_10": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["minnesota 1", "tim walz", "democratic", "2006", "re - elected", "tim walz ( d ) 57.6 % allen quist ( r ) 42.4 %"], ["minnesota 2", "john kline", "republican", "2002", "re - elected", "john kline ( r ) 54.1 % mike obermueller ( d ) 45.9 %"], ["minnesota 3", "erik paulsen", "republican", "2008", "re - elected", "erik paulsen ( r ) 58.2 % brian barnes ( d ) 41.8 %"], ["minnesota 5", "keith ellison", "democratic", "2006", "re - elected", "keith ellison ( d ) 74.5 % chris fields ( r ) 25.5 %"], ["minnesota 6", "michele bachmann", "republican", "2006", "re - elected", "michele bachmann ( r ) 50.6 % jim graves ( d ) 49.4 %"]], "query": "and { only { filter_less { all_rows ; first elected ; 2006 } } ; eq { hop { filter_less { all_rows ; first elected ; 2006 } ; incumbent } ; john kline } } = true", "question": "john kline is the only person first elected to congress prior to 2006 ."}, {"topic": "list of superfund sites in mississippi", "wiki": "https://en.wikipedia.org/wiki/List_of_Superfund_sites_in_Mississippi", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11097420-1.html.csv", "action": "count", "sent": "two of the superfund sites in mississippi are in rankin county .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "rankin", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "county", "rankin"], "result": null, "ind": 0, "tointer": "select the rows whose county record fuzzily matches to rankin .", "tostr": "filter_eq { all_rows ; county ; rankin }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; county ; rankin } }", "tointer": "select the rows whose county record fuzzily matches to rankin . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; county ; rankin } } ; 2 } = true", "tointer": "select the rows whose county record fuzzily matches to rankin . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; county ; rankin } } ; 2 } = true", "interpret": "select the rows whose county record fuzzily matches to rankin . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "county_5": 5, "rankin_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "county_5": "county", "rankin_6": "rankin", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "county_5": [0], "rankin_6": [0], "2_7": [2]}, "table_header": ["cerclis id", "name", "county", "proposed", "listed", "construction completed", "partially deleted", "deleted"], "table_cont": [["msd004006995", "american creosote works , inc", "winston", "06 / 14 / 2001", "09 / 13 / 2001", "-", "-", "-"], ["msd008154486", "chemfax , inc", "harrison", "06 / 23 / 1993", "-", "-", "-", "-"], ["msd046497012", "davis timber company", "lamar", "05 / 11 / 2000", "07 / 27 / 2000", "-", "-", "-"], ["msd980710941", "flowood site", "rankin", "09 / 08 / 1983", "09 / 21 / 1984", "09 / 17 / 1993", "-", "02 / 16 / 1996"], ["msd980840045", "newsom brothers / old reichhold chemicals , inc", "marion", "10 / 15 / 1984", "06 / 10 / 1986", "08 / 08 / 1997", "-", "09 / 27 / 2000"], ["msd065490930", "picayune wood treating", "pearl river", "03 / 08 / 2004", "07 / 22 / 2004", "-", "-", "-"], ["msd056029648", "potter co", "copiah", "05 / 10 / 1993", "-", "-", "-", "-"], ["msd086556388", "sonford products", "rankin", "09 / 27 / 2006", "03 / 07 / 2007", "-", "-", "-"], ["msd980601736", "walcotte chemical co warehouses", "washington", "cleanup completed before formal creation of npl", "cleanup completed before formal creation of npl", "12 / 30 / 1982", "-", "12 / 30 / 1982"]], "query": "eq { count { filter_eq { all_rows ; county ; rankin } } ; 2 } = true", "question": "two of the superfund sites in mississippi are in rankin county ."}, {"topic": "list of schools in the hawke 's bay region", "wiki": "https://en.wikipedia.org/wiki/List_of_schools_in_the_Hawke%27s_Bay_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12195931-1.html.csv", "action": "majority", "sent": "the majority of schools in the hawke 's bay region had less than 5 decile .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "less_than", "value": "6", "subset": null}, "logic": {"func": "most_less", "args": ["all_rows", "decile", "6"], "result": true, "ind": 0, "tointer": "for the decile records of all rows , most of them are less than 6 .", "tostr": "most_less { all_rows ; decile ; 6 } = true"}, "logic_str": "most_less { all_rows ; decile ; 6 } = true", "interpret": "for the decile records of all rows , most of them are less than 6 .", "num_func": 1, "nid": 1, "g_ids": {"most_less_0": 0, "result_1": 1, "all_rows_2": 2, "decile_3": 3, "6_4": 4}, "g_ids_features": {"most_less_0": "most_less", "result_1": "true", "all_rows_2": "all_rows", "decile_3": "decile", "6_4": "6"}, "g_adj": {"most_less_0": [1], "result_1": [], "all_rows_2": [0], "decile_3": [0], "6_4": [0]}, "table_header": ["name", "years", "gender", "area", "authority", "decile", "roll"], "table_cont": [["frasertown school", "1 - 6", "coed", "frasertown", "state", "4", "107"], ["kotemaori school", "1 - 8", "coed", "kotemaori", "state", "4", "6"], ["mohaka school", "1 - 8", "coed", "mohaka", "state", "1", "36"], ["nuhaka school", "1 - 8", "coed", "nuhaka", "state", "2", "123"], ["ohuka school", "1 - 8", "coed", "ohuka", "state", "10", "12"], ["putere school", "1 - 8", "coed", "putere", "state", "2", "12"], ["ruakituri school", "1 - 8", "coed", "ruakituri", "state", "7", "9"], ["st joseph 's school", "1 - 8", "coed", "wairoa", "state integrated", "3", "122"], ["te kura o waikaremoana", "1 - 8", "coed", "tuai", "state", "2", "27"], ["te mahia school", "1 - 8", "coed", "mahia", "state", "1", "48"], ["tiaho primary school", "1 - 6", "coed", "wairoa", "state", "2", "150"], ["tkkm o ngati kahungunu o te wairoa", "1 - 8", "coed", "wairoa", "state", "1", "61"], ["wairoa college", "7 - 15", "coed", "wairoa", "state", "2", "544"], ["wairoa primary school", "1 - 6", "coed", "wairoa", "state", "2", "228"]], "query": "most_less { all_rows ; decile ; 6 } = true", "question": "the majority of schools in the hawke 's bay region had less than 5 decile ."}, {"topic": "first hull trains", "wiki": "https://en.wikipedia.org/wiki/First_Hull_Trains", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1617901-2.html.csv", "action": "superlative", "sent": "class 86 was the earliest class built of all the first hull trains .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "min", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "built"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; built }"}, "class"], "result": "class 86", "ind": 1, "tostr": "hop { argmin { all_rows ; built } ; class }"}, "class 86"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; built } ; class } ; class 86 } = true", "tointer": "select the row whose built record of all rows is minimum . the class record of this row is class 86 ."}, "logic_str": "eq { hop { argmin { all_rows ; built } ; class } ; class 86 } = true", "interpret": "select the row whose built record of all rows is minimum . the class record of this row is class 86 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "built_5": 5, "class_6": 6, "class 86_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "built_5": "built", "class_6": "class", "class 86_7": "class 86"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "built_5": [0], "class_6": [1], "class 86_7": [2]}, "table_header": ["class", "type", "built", "number", "withdrawn"], "table_cont": [["class 170 turbostar", "diesel multiple unit", "1999 - 2004", "4", "2005"], ["class 222 pioneer", "diesel multiple unit", "2005", "4", "2009"], ["class 86", "electric locomotive", "1965 - 1966", "1", "2008"], ["mark 3 carriage", "passenger carriage", "1975 - 1988", "5", "2008"], ["mark 3 carriage", "driving van trailer", "1988", "1", "2008"]], "query": "eq { hop { argmin { all_rows ; built } ; class } ; class 86 } = true", "question": "class 86 was the earliest class built of all the first hull trains ."}, {"topic": "1961 vfl season", "wiki": "https://en.wikipedia.org/wiki/1961_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10776330-2.html.csv", "action": "ordinal", "sent": "during the 1961 vfl season , the 3rd game in victoria park attracted 23000 fans .", "annotation": {"scope": "all", "row": "3", "col": "7", "order": "3", "col_other": "5,6", "max_or_min": "min_to_max", "value_mentioned": "no", "subset": null}, "logic": {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; date ; 3 }"}, "venue"], "result": "victoria park", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; date ; 3 } ; venue }"}, "victoria park"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 3 } ; venue } ; victoria park }", "tointer": "select the row whose date record of all rows is 3rd minimum . the venue record of this row is victoria park ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; date ; 3 }"}, "crowd"], "result": "23000", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; date ; 3 } ; crowd }"}, "23000"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 3 } ; crowd } ; 23000 }", "tointer": "the crowd record of this row is 23000 ."}], "result": true, "ind": 5, "tostr": "and { eq { hop { nth_argmin { all_rows ; date ; 3 } ; venue } ; victoria park } ; eq { hop { nth_argmin { all_rows ; date ; 3 } ; crowd } ; 23000 } } = true", "tointer": "select the row whose date record of all rows is 3rd minimum . the venue record of this row is victoria park . the crowd record of this row is 23000 ."}, "logic_str": "and { eq { hop { nth_argmin { all_rows ; date ; 3 } ; venue } ; victoria park } ; eq { hop { nth_argmin { all_rows ; date ; 3 } ; crowd } ; 23000 } } = true", "interpret": "select the row whose date record of all rows is 3rd minimum . the venue record of this row is victoria park . the crowd record of this row is 23000 .", "num_func": 7, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "str_eq_2": 2, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_7": 7, "date_8": 8, "3_9": 9, "venue_10": 10, "victoria park_11": 11, "eq_4": 4, "num_hop_3": 3, "crowd_12": 12, "23000_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "str_eq_2": "str_eq", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_7": "all_rows", "date_8": "date", "3_9": "3", "venue_10": "venue", "victoria park_11": "victoria park", "eq_4": "eq", "num_hop_3": "num_hop", "crowd_12": "crowd", "23000_13": "23000"}, "g_adj": {"and_5": [6], "result_6": [], "str_eq_2": [5], "str_hop_1": [2], "nth_argmin_0": [1, 3], "all_rows_7": [0], "date_8": [0], "3_9": [0], "venue_10": [1], "victoria park_11": [2], "eq_4": [5], "num_hop_3": [4], "crowd_12": [3], "23000_13": [4]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "13.19 ( 97 )", "north melbourne", "8.4 ( 52 )", "western oval", "22178", "22 april 1961"], ["essendon", "13.7 ( 85 )", "st kilda", "9.15 ( 69 )", "windy hill", "23000", "22 april 1961"], ["collingwood", "3.16 ( 34 )", "richmond", "7.15 ( 57 )", "victoria park", "23000", "22 april 1961"], ["carlton", "9.5 ( 59 )", "fitzroy", "6.18 ( 54 )", "princes park", "29384", "22 april 1961"], ["melbourne", "5.14 ( 44 )", "hawthorn", "11.10 ( 76 )", "mcg", "34640", "22 april 1961"], ["south melbourne", "12.8 ( 80 )", "geelong", "12.12 ( 84 )", "lake oval", "24258", "22 april 1961"]], "query": "and { eq { hop { nth_argmin { all_rows ; date ; 3 } ; venue } ; victoria park } ; eq { hop { nth_argmin { all_rows ; date ; 3 } ; crowd } ; 23000 } } = true", "question": "during the 1961 vfl season , the 3rd game in victoria park attracted 23000 fans ."}, {"topic": "list of intel atom microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_Intel_Atom_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16729930-11.html.csv", "action": "comparative", "sent": "the atom z550 has a higher tdp wattage than the atom z510 model intel microprocessor .", "annotation": {"row_1": "11", "row_2": "2", "col": "8", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "model number", "atom z550"], "result": null, "ind": 0, "tointer": "select the rows whose model number record fuzzily matches to atom z550 .", "tostr": "filter_eq { all_rows ; model number ; atom z550 }"}, "tdp"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; model number ; atom z550 } ; tdp }", "tointer": "select the rows whose model number record fuzzily matches to atom z550 . take the tdp record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "model number", "atom z510"], "result": null, "ind": 1, "tointer": "select the rows whose model number record fuzzily matches to atom z510 .", "tostr": "filter_eq { all_rows ; model number ; atom z510 }"}, "tdp"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; model number ; atom z510 } ; tdp }", "tointer": "select the rows whose model number record fuzzily matches to atom z510 . take the tdp record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; model number ; atom z550 } ; tdp } ; hop { filter_eq { all_rows ; model number ; atom z510 } ; tdp } } = true", "tointer": "select the rows whose model number record fuzzily matches to atom z550 . take the tdp record of this row . select the rows whose model number record fuzzily matches to atom z510 . take the tdp record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; model number ; atom z550 } ; tdp } ; hop { filter_eq { all_rows ; model number ; atom z510 } ; tdp } } = true", "interpret": "select the rows whose model number record fuzzily matches to atom z550 . take the tdp record of this row . select the rows whose model number record fuzzily matches to atom z510 . take the tdp record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "model number_7": 7, "atom z550_8": 8, "tdp_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "model number_11": 11, "atom z510_12": 12, "tdp_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "model number_7": "model number", "atom z550_8": "atom z550", "tdp_9": "tdp", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "model number_11": "model number", "atom z510_12": "atom z510", "tdp_13": "tdp"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "model number_7": [0], "atom z550_8": [0], "tdp_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "model number_11": [1], "atom z510_12": [1], "tdp_13": [3]}, "table_header": ["model number", "sspec number", "frequency", "l2 cache", "fsb", "mult", "voltage", "tdp", "socket", "release date", "part number ( s )", "release price ( usd )"], "table_cont": [["atom z500", "slb6q ( c0 )", "800 mhz", "512 kb", "400 mt / s", "8", "0.712 - 1.1 v", "0.65 w", "bga 441", "april 2 , 2008", "ac80566uc800de", "45"], ["atom z510", "slb2c ( c0 )", "1.1 ghz", "512 kb", "400 mt / s", "11", "0.75 - 1.1 v", "2 w", "bga 441", "april 2 , 2008", "ac80566uc005de", "45"], ["atom z510p", "slgpq ( c0 )", "1.1 ghz", "512 kb", "400 mt / s", "11", "0.8 - 1.1 v", "2.2 w", "bga 437", "march 2 , 2009", "ch80566ec005dw", "n / a"], ["atom z510pt", "slgpr ( c0 )", "1.1 ghz", "512 kb", "400 mt / s", "11", "0.75 - 1.1 v", "2.2 w", "bga 437", "march 2 , 2009", "ch80566ec005dt", "n / a"], ["atom z515", "slgmg ( c0 )", "1.2 ghz", "512 kb", "400 mt / s", "12", "0.712 - 1v", "1.4 w", "bga 441", "april 8 , 2009", "ac80566uc009dv", "n / a"], ["atom z520", "slb2h ( c0 )", "1.33 ghz", "512 kb", "533 mt / s", "10", "0.75 - 1.1 v", "2 w", "bga 441", "april 2 , 2008", "ac80566ue014dw", "65"], ["atom z520pt", "slgpp ( c0 )", "1.33 ghz", "512 kb", "533 mt / s", "10", "0.9 - 1.1 v", "2.2 w", "bga 437", "march 2 , 2009", "ch80566ee014dt", "n / a"], ["atom z530", "slb6p ( c0 )", "1.6 ghz", "512 kb", "533 mt / s", "12", "0.75 - 1.1 v", "2 w", "bga 441", "april 2 , 2008", "ac80566ue025dw", "95"], ["atom z530p", "slgpn ( c0 )", "1.6 ghz", "512 kb", "533 mt / s", "12", "0.8 - 1.1 v", "2.2 w", "bga 437", "march 2 , 2009", "ch80566ee025dw", "n / a"], ["atom z540", "slb2 m ( c0 )", "1.87 ghz", "512 kb", "533 mt / s", "14", "0.75 - 1.1 v", "2.4 w", "bga 441", "april 2 , 2008", "ac80566ue036dw", "160"], ["atom z550", "slgpt ( c0 )", "2 ghz", "512 kb", "533 mt / s", "15", "0.75 - 1.1 v", "2.4 w", "bga 441", "april 8 , 2009", "ac80566ue041dw", "249.47 retail"]], "query": "greater { hop { filter_eq { all_rows ; model number ; atom z550 } ; tdp } ; hop { filter_eq { all_rows ; model number ; atom z510 } ; tdp } } = true", "question": "the atom z550 has a higher tdp wattage than the atom z510 model intel microprocessor ."}, {"topic": "general motors", "wiki": "https://en.wikipedia.org/wiki/General_Motors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12102-3.html.csv", "action": "count", "sent": "of the general motors brands , three of them were founded after the year 2000 .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "2000", "result": "3", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "year founded", "2000"], "result": null, "ind": 0, "tointer": "select the rows whose year founded record is greater than 2000 .", "tostr": "filter_greater { all_rows ; year founded ; 2000 }"}], "result": "3", "ind": 1, "tostr": "count { filter_greater { all_rows ; year founded ; 2000 } }", "tointer": "select the rows whose year founded record is greater than 2000 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; year founded ; 2000 } } ; 3 } = true", "tointer": "select the rows whose year founded record is greater than 2000 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_greater { all_rows ; year founded ; 2000 } } ; 3 } = true", "interpret": "select the rows whose year founded record is greater than 2000 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "year founded_5": 5, "2000_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "year founded_5": "year founded", "2000_6": "2000", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "year founded_5": [0], "2000_6": [0], "3_7": [2]}, "table_header": ["brand", "year founded", "year began making autos", "year joined gm", "markets served today"], "table_cont": [["baojun", "2010", "2010", "2010", "china"], ["buick", "1899", "1903", "1908", "north america , china , israel"], ["cadillac", "1902", "1902", "1909", "north america , europe , asia , middle east"], ["chevrolet", "1911", "1911", "1917", "global , except australia , new zealand"], ["gmc", "1901", "1901", "1909", "north america , middle east"], ["holden", "1856", "1908", "1931", "australia , new zealand"], ["jiefang", "2011", "2011", "2011", "china"], ["opel", "1862", "1899", "1929", "africa , asia , europe , south america"], ["wuling", "2002", "2002", "2002", "china"], ["vauxhall", "1857", "1903", "1925", "united kingdom"]], "query": "eq { count { filter_greater { all_rows ; year founded ; 2000 } } ; 3 } = true", "question": "of the general motors brands , three of them were founded after the year 2000 ."}, {"topic": "gary unmarried", "wiki": "https://en.wikipedia.org/wiki/Gary_Unmarried", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17443121-2.html.csv", "action": "count", "sent": "eleven of the air dates were in the year 2008 .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "2008", "result": "11", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "air date", "2008"], "result": null, "ind": 0, "tointer": "select the rows whose air date record fuzzily matches to 2008 .", "tostr": "filter_eq { all_rows ; air date ; 2008 }"}], "result": "11", "ind": 1, "tostr": "count { filter_eq { all_rows ; air date ; 2008 } }", "tointer": "select the rows whose air date record fuzzily matches to 2008 . the number of such rows is 11 ."}, "11"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; air date ; 2008 } } ; 11 } = true", "tointer": "select the rows whose air date record fuzzily matches to 2008 . the number of such rows is 11 ."}, "logic_str": "eq { count { filter_eq { all_rows ; air date ; 2008 } } ; 11 } = true", "interpret": "select the rows whose air date record fuzzily matches to 2008 . the number of such rows is 11 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "air date_5": 5, "2008_6": 6, "11_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "air date_5": "air date", "2008_6": "2008", "11_7": "11"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "air date_5": [0], "2008_6": [0], "11_7": [2]}, "table_header": ["episode", "air date", "timeslot", "18 - 49", "viewers"], "table_cont": [["pilot", "september 24 , 2008", "wednesday 8:30 pm", "2.3 / 6", "6.84"], ["gary gets boundaries", "october 1 , 2008", "wednesday 8:30 pm", "2.2 / 6", "6.97"], ["gary marries off his ex", "october 8 , 2008", "wednesday 8:30 pm", "2.2 / 6", "7.43"], ["gary gets his stuff back", "october 15 , 2008", "wednesday 8:30 pm", "2.4 / 7", "7.71"], ["gary breaks up his ex - wife and girlfriend", "october 22 , 2008", "wednesday 8:30 pm", "2.5 / 7", "7.85"], ["gary meets the gang", "november 5 , 2008", "wednesday 8:30 pm", "2.1 / 6", "6.44"], ["gary and allison 's restaurant", "november 12 , 2008", "wednesday 8:30 pm", "2.1 / 5", "6.71"], ["gary and allison brooks", "november 19 , 2008", "wednesday 8:30 pm", "2.7 / 7", "8.14"], ["gary gives thanks", "november 26 , 2008", "wednesday 8:30 pm", "2.2 / 7", "7.72"], ["gary goes first", "december 10 , 2008", "wednesday 8:30 pm", "2.4 / 7", "8.03"], ["gary toughens up tom", "december 17 , 2008", "wednesday 8:30 pm", "2.3 / 7", "7.55"], ["gary dates louise 's teacher", "january 14 , 2009", "wednesday 8:30 pm", "2.1 / 5", "7.07"], ["gary moves back in", "january 21 , 2009", "wednesday 8:30 pm", "2.2 / 5", "7.07"], ["gary and dennis ' sister", "february 11 , 2009", "wednesday 8:30 pm", "2.1 / 5", "6.86"], ["gary 's ex - brother - in - law", "february 18 , 2009", "wednesday 8:30 pm", "2.1 / 5", "7.26"], ["gary uses his veto", "march 11 , 2009", "wednesday 8:30 pm", "2.3 / 7", "7.71"], ["gary hooks up allison", "march 18 , 2009", "wednesday 8:30 pm", "2.3 / 7", "7.57"], ["gary and the trophy", "april 8 , 2009", "wednesday 8:30 pm", "2.2 / 7", "7.30"], ["gary and his half brother", "may 6 , 2009", "wednesday 8:30 pm", "2.0 / 6", "6.66"], ["gary fixes allison 's garbage disposal", "may 20 , 2009", "wednesday 8:30 pm", "1.7 / 5", "5.55"]], "query": "eq { count { filter_eq { all_rows ; air date ; 2008 } } ; 11 } = true", "question": "eleven of the air dates were in the year 2008 ."}, {"topic": "list of intel itanium microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_Intel_Itanium_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12740151-8.html.csv", "action": "ordinal", "sent": "model number itanium 2 9040 is the highest priced intel itanium microprocessor .", "annotation": {"row": "5", "col": "13", "order": "1", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "price ( usd )", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; price ( usd ) ; 1 }"}, "model number"], "result": "itanium 2 9040", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; price ( usd ) ; 1 } ; model number }"}, "itanium 2 9040"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; price ( usd ) ; 1 } ; model number } ; itanium 2 9040 } = true", "tointer": "select the row whose price ( usd ) record of all rows is 1st maximum . the model number record of this row is itanium 2 9040 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; price ( usd ) ; 1 } ; model number } ; itanium 2 9040 } = true", "interpret": "select the row whose price ( usd ) record of all rows is 1st maximum . the model number record of this row is itanium 2 9040 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "price ( usd )_5": 5, "1_6": 6, "model number_7": 7, "itanium 2 9040_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "price ( usd )_5": "price ( usd )", "1_6": "1", "model number_7": "model number", "itanium 2 9040_8": "itanium 2 9040"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "price ( usd )_5": [0], "1_6": [0], "model number_7": [1], "itanium 2 9040_8": [2]}, "table_header": ["model number", "clock speed", "l2", "l3", "fsb speed", "multiplier", "cores", "threads per core", "voltage", "tdp ( w )", "socket", "release date", "price ( usd )"], "table_cont": [["itanium 2 9010", "1.6 ghz", "256 kb", "6 mb", "533 mhz", "12", "1", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "696"], ["itanium 2 9015", "1.4 ghz", "256 kb", "12 mb", "400 mhz", "14", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "749"], ["itanium 2 9020", "1.42 ghz", "256 kb", "12 mb", "533 mhz", "10.5", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "910"], ["itanium 2 9030", "1.6 ghz", "256 kb", "8 mb", "533 mhz", "12", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "1552"], ["itanium 2 9040", "1.6 ghz", "256 kb", "18 mb", "533 mhz", "12", "2", "1", "1.0875 - 1.25 v", "104 w", "ppga611", "q1 , 2007", "1980"]], "query": "eq { hop { nth_argmax { all_rows ; price ( usd ) ; 1 } ; model number } ; itanium 2 9040 } = true", "question": "model number itanium 2 9040 is the highest priced intel itanium microprocessor ."}, {"topic": "m * a * s * h ( tv series )", "wiki": "https://en.wikipedia.org/wiki/M%2AA%2AS%2AH_%28TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-156045-2.html.csv", "action": "majority", "sent": "most of the season premieres took place in september .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "fuzzily_match", "value": "september", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "season premiere", "september"], "result": true, "ind": 0, "tointer": "for the season premiere records of all rows , most of them fuzzily match to september .", "tostr": "most_eq { all_rows ; season premiere ; september } = true"}, "logic_str": "most_eq { all_rows ; season premiere ; september } = true", "interpret": "for the season premiere records of all rows , most of them fuzzily match to september .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "season premiere_3": 3, "september_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "season premiere_3": "season premiere", "september_4": "september"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "season premiere_3": [0], "september_4": [0]}, "table_header": ["season", "ep", "season premiere", "season finale", "ranking", "viewers ( households in millions )", "rating"], "table_cont": [["season 1", "24", "september 17 , 1972", "march 25 , 1973", "46", "n / a", "n / a"], ["season 2", "24", "september 15 , 1973", "march 2 , 1974", "4", "17.02", "25.7"], ["season 3", "24", "september 10 , 1974", "march 18 , 1975", "5", "18.76", "27.4"], ["season 4", "24", "september 12 , 1975", "february 24 , 1976", "15", "15.93", "22.9"], ["season 5", "24", "september 21 , 1976", "march 15 , 1977", "4", "18.44", "25.9"], ["season 6", "24", "september 20 , 1977", "march 27 , 1978", "9", "16.91", "23.2"], ["season 7", "25", "september 18 , 1978", "march 12 , 1979", "7", "18.92", "25.4"], ["season 8", "25", "september 17 , 1979", "march 24 , 1980", "5", "19.30", "25.3"], ["season 9", "20", "november 17 , 1980", "may 4 , 1981", "4", "20.53", "25.7"], ["season 10", "21", "october 26 , 1981", "april 12 , 1982", "9", "18.17", "22.3"], ["season 11", "16", "october 25 , 1982", "february 28 , 1983", "3", "18.82", "22.6"]], "query": "most_eq { all_rows ; season premiere ; september } = true", "question": "most of the season premieres took place in september ."}, {"topic": "grand tour ( cycling )", "wiki": "https://en.wikipedia.org/wiki/Grand_Tour_%28cycling%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1286819-2.html.csv", "action": "aggregation", "sent": "in the grand tour , the average amount of vueltas is two .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "1.67", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "vuelta"], "result": "1.67", "ind": 0, "tostr": "avg { all_rows ; vuelta }"}, "1.67"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; vuelta } ; 1.67 } = true", "tointer": "the average of the vuelta record of all rows is 1.67 ."}, "logic_str": "round_eq { avg { all_rows ; vuelta } ; 1.67 } = true", "interpret": "the average of the vuelta record of all rows is 1.67 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "vuelta_4": 4, "1.67_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "vuelta_4": "vuelta", "1.67_5": "1.67"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "vuelta_4": [0], "1.67_5": [1]}, "table_header": ["name", "tour", "giro", "vuelta", "total"], "table_cont": [["jacques anquetil ( fra )", "6", "6", "1", "13"], ["bernard hinault ( fra )", "7", "3", "2", "12"], ["eddy merckx ( bel )", "6", "5", "1", "12"], ["felice gimondi ( ita )", "2", "9", "1", "12"], ["miguel indur\u00e1in ( esp )", "5", "3", "1", "9"], ["laurent fignon ( fra )", "3", "2", "1", "6"], ["carlos sastre ( esp )", "2", "1", "3", "6"], ["tony rominger ( sui )", "1", "1", "4", "6"], ["alberto contador ( esp )", "2", "1", "2", "5"], ["cadel evans ( aus )", "3", "1", "1", "5"], ["denis menchov ( rus )", "2", "1", "2", "5"], ["vincenzo nibali ( ita )", "1", "3", "1", "5"], ["jose manuel fuente ( esp )", "1", "1", "2", "4"], ["joaquim rodr\u00edguez ( esp )", "1", "1", "2", "4"], ["herman van springel ( bel )", "1", "1", "1", "3"]], "query": "round_eq { avg { all_rows ; vuelta } ; 1.67 } = true", "question": "in the grand tour , the average amount of vueltas is two ."}, {"topic": "list of craters on venus", "wiki": "https://en.wikipedia.org/wiki/List_of_craters_on_Venus", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1145513-24.html.csv", "action": "majority", "sent": "all craters have a name that starts with the letter \" x \" .", "annotation": {"scope": "all", "col": "1", "most_or_all": "all", "criterion": "equal", "value": "x", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "name", "x"], "result": true, "ind": 0, "tointer": "for the name records of all rows , all of them fuzzily match to x .", "tostr": "all_eq { all_rows ; name ; x } = true"}, "logic_str": "all_eq { all_rows ; name ; x } = true", "interpret": "for the name records of all rows , all of them fuzzily match to x .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "name_3": 3, "x_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "name_3": "name", "x_4": "x"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "name_3": [0], "x_4": [0]}, "table_header": ["name", "latitude", "longitude", "diameter ( km )", "named after"], "table_cont": [["xantippe", "- 10.9", "11.8", "40.4", "xanthippe , the wife of socrates"], ["xenia", "- 30.3", "249.4", "13.5", "greek first name"], ["xi wang", "14", "208", "7.7", "chinese first name"], ["xiao hong", "- 43.5", "101.7", "38.7", "xiao hong , chinese novelist ( 19111942 )"], ["ximena", "- 68.2", "243.6", "12.8", "portuguese first name"]], "query": "all_eq { all_rows ; name ; x } = true", "question": "all craters have a name that starts with the letter \" x \" ."}, {"topic": "1954 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1954_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17290159-1.html.csv", "action": "comparative", "sent": "ed furgol won more money than lloyd mangrum won .", "annotation": {"row_1": "1", "row_2": "3", "col": "6", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "ed furgol"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to ed furgol .", "tostr": "filter_eq { all_rows ; player ; ed furgol }"}, "money"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; ed furgol } ; money }", "tointer": "select the rows whose player record fuzzily matches to ed furgol . take the money record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "lloyd mangrum"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to lloyd mangrum .", "tostr": "filter_eq { all_rows ; player ; lloyd mangrum }"}, "money"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; lloyd mangrum } ; money }", "tointer": "select the rows whose player record fuzzily matches to lloyd mangrum . take the money record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; player ; ed furgol } ; money } ; hop { filter_eq { all_rows ; player ; lloyd mangrum } ; money } } = true", "tointer": "select the rows whose player record fuzzily matches to ed furgol . take the money record of this row . select the rows whose player record fuzzily matches to lloyd mangrum . take the money record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; player ; ed furgol } ; money } ; hop { filter_eq { all_rows ; player ; lloyd mangrum } ; money } } = true", "interpret": "select the rows whose player record fuzzily matches to ed furgol . take the money record of this row . select the rows whose player record fuzzily matches to lloyd mangrum . take the money record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "ed furgol_8": 8, "money_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "lloyd mangrum_12": 12, "money_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "ed furgol_8": "ed furgol", "money_9": "money", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "lloyd mangrum_12": "lloyd mangrum", "money_13": "money"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "ed furgol_8": [0], "money_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "lloyd mangrum_12": [1], "money_13": [3]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["1", "ed furgol", "united states", "71 + 70 + 71 + 72 = 284", "+ 4", "6000"], ["2", "gene littler", "united states", "70 + 69 + 76 + 70 = 285", "+ 5", "3600"], ["t3", "lloyd mangrum", "united states", "72 + 71 + 72 + 71 = 286", "+ 6", "1500"], ["t3", "dick mayer", "united states", "72 + 71 + 70 + 73 = 286", "+ 6", "1500"], ["5", "bobby locke", "south africa", "74 + 70 + 74 + 70 = 288", "+ 8", "960"], ["t6", "tommy bolt", "united states", "72 + 72 + 73 + 72 = 289", "+ 9", "570"], ["t6", "fred haas", "united states", "73 + 73 + 71 + 72 = 289", "+ 9", "570"], ["t6", "ben hogan", "united states", "71 + 70 + 76 + 72 = 289", "+ 9", "570"], ["t6", "shelley mayfield", "united states", "73 + 75 + 72 + 69 = 289", "+ 9", "570"], ["t6", "billy joe patton ( a )", "united states", "69 + 76 + 71 + 73 = 289", "+ 9", "0"]], "query": "greater { hop { filter_eq { all_rows ; player ; ed furgol } ; money } ; hop { filter_eq { all_rows ; player ; lloyd mangrum } ; money } } = true", "question": "ed furgol won more money than lloyd mangrum won ."}, {"topic": "list of great central railway locomotives and rolling stock", "wiki": "https://en.wikipedia.org/wiki/List_of_Great_Central_Railway_locomotives_and_rolling_stock", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11913905-4.html.csv", "action": "unique", "sent": "the no d4279 arthur wright great central railway locomotive is the only one with a dark blue livery .", "annotation": {"scope": "all", "row": "10", "col": "3", "col_other": "1", "criterion": "equal", "value": "dark blue", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "livery", "dark blue"], "result": null, "ind": 0, "tointer": "select the rows whose livery record fuzzily matches to dark blue .", "tostr": "filter_eq { all_rows ; livery ; dark blue }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; livery ; dark blue } }", "tointer": "select the rows whose livery record fuzzily matches to dark blue . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "livery", "dark blue"], "result": null, "ind": 0, "tointer": "select the rows whose livery record fuzzily matches to dark blue .", "tostr": "filter_eq { all_rows ; livery ; dark blue }"}, "number & name"], "result": "no d4279 arthur wright", "ind": 2, "tostr": "hop { filter_eq { all_rows ; livery ; dark blue } ; number & name }"}, "no d4279 arthur wright"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; livery ; dark blue } ; number & name } ; no d4279 arthur wright }", "tointer": "the number & name record of this unqiue row is no d4279 arthur wright ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; livery ; dark blue } } ; eq { hop { filter_eq { all_rows ; livery ; dark blue } ; number & name } ; no d4279 arthur wright } } = true", "tointer": "select the rows whose livery record fuzzily matches to dark blue . there is only one such row in the table . the number & name record of this unqiue row is no d4279 arthur wright ."}, "logic_str": "and { only { filter_eq { all_rows ; livery ; dark blue } } ; eq { hop { filter_eq { all_rows ; livery ; dark blue } ; number & name } ; no d4279 arthur wright } } = true", "interpret": "select the rows whose livery record fuzzily matches to dark blue . there is only one such row in the table . the number & name record of this unqiue row is no d4279 arthur wright .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "livery_7": 7, "dark blue_8": 8, "str_eq_3": 3, "str_hop_2": 2, "number & name_9": 9, "no d4279 arthur wright_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "livery_7": "livery", "dark blue_8": "dark blue", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "number & name_9": "number & name", "no d4279 arthur wright_10": "no d4279 arthur wright"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "livery_7": [0], "dark blue_8": [0], "str_eq_3": [4], "str_hop_2": [3], "number & name_9": [2], "no d4279 arthur wright_10": [3]}, "table_header": ["number & name", "description", "livery", "owner ( s )", "date"], "table_cont": [["operational", "operational", "operational", "operational", "operational"], ["no 15097", "simplex 0 - 4 - 0 pm", "br black with the early crest", "private owner", "1919"], ["no 15099 morris", "simplex 0 - 4 - 0dm", "br black with the early crest", "simplex 2028 association", "1920"], ["marblaegis", "ruston & hornsby 88ds 0 - 4 - 0dm", "green", "simplex 2028 association", "1946"], ["qwag", "ruston & hornsby 0 - 4 - 0dm", "green", "private owner", "1954"], ["no 28 bardon", "andrew barclay 0 - 4 - 0dm", "lined green", "private owner", "1956"], ["d2959 staythorpe", "ruston & hornsby 165 0 - 4 - 0de", "br green with the late crest", "private owner", "1961"], ["undergoing overhaul , restoration or repairs", "undergoing overhaul , restoration or repairs", "undergoing overhaul , restoration or repairs", "undergoing overhaul , restoration or repairs", "undergoing overhaul , restoration or repairs"], ["stored or static", "stored or static", "stored or static", "stored or static", "stored or static"], ["no d4279 arthur wright", "john fowler 0 - 4 - 0dm", "dark blue", "private owner", "1952"]], "query": "and { only { filter_eq { all_rows ; livery ; dark blue } } ; eq { hop { filter_eq { all_rows ; livery ; dark blue } ; number & name } ; no d4279 arthur wright } } = true", "question": "the no d4279 arthur wright great central railway locomotive is the only one with a dark blue livery ."}, {"topic": "claudia hoffmann", "wiki": "https://en.wikipedia.org/wiki/Claudia_Hoffmann", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11537397-1.html.csv", "action": "comparative", "sent": "hoffmann performed better in the world junior championships than she did in the world championships .", "annotation": {"row_1": "1", "row_2": "3", "col": "4", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "competition", "world junior championships"], "result": null, "ind": 0, "tointer": "select the rows whose competition record fuzzily matches to world junior championships .", "tostr": "filter_eq { all_rows ; competition ; world junior championships }"}, "position"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; competition ; world junior championships } ; position }", "tointer": "select the rows whose competition record fuzzily matches to world junior championships . take the position record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "competition", "world championships"], "result": null, "ind": 1, "tointer": "select the rows whose competition record fuzzily matches to world championships .", "tostr": "filter_eq { all_rows ; competition ; world championships }"}, "position"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; competition ; world championships } ; position }", "tointer": "select the rows whose competition record fuzzily matches to world championships . take the position record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; competition ; world junior championships } ; position } ; hop { filter_eq { all_rows ; competition ; world championships } ; position } } = true", "tointer": "select the rows whose competition record fuzzily matches to world junior championships . take the position record of this row . select the rows whose competition record fuzzily matches to world championships . take the position record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; competition ; world junior championships } ; position } ; hop { filter_eq { all_rows ; competition ; world championships } ; position } } = true", "interpret": "select the rows whose competition record fuzzily matches to world junior championships . take the position record of this row . select the rows whose competition record fuzzily matches to world championships . take the position record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "competition_7": 7, "world junior championships_8": 8, "position_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "competition_11": 11, "world championships_12": 12, "position_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "competition_7": "competition", "world junior championships_8": "world junior championships", "position_9": "position", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "competition_11": "competition", "world championships_12": "world championships", "position_13": "position"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "competition_7": [0], "world junior championships_8": [0], "position_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "competition_11": [1], "world championships_12": [1], "position_13": [3]}, "table_header": ["year", "competition", "venue", "position", "event"], "table_cont": [["2000", "world junior championships", "santiago , chile", "5th", "4 400 m relay"], ["2001", "european junior championships", "grosseto , italy", "4th", "400 m"], ["2005", "world championships", "helsinki , finland", "6th", "4 400 m relay"], ["2006", "european championships", "gothenburg , sweden", "5th", "4 400 m relay"], ["2007", "european indoor championships", "birmingham , united kingdom", "5th", "4 400 m relay"], ["2010", "european championships", "barcelona , spain", "2nd", "4 400 m relay"]], "query": "less { hop { filter_eq { all_rows ; competition ; world junior championships } ; position } ; hop { filter_eq { all_rows ; competition ; world championships } ; position } } = true", "question": "hoffmann performed better in the world junior championships than she did in the world championships ."}, {"topic": "locomotives of the southern railway", "wiki": "https://en.wikipedia.org/wiki/Locomotives_of_the_Southern_Railway", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1169552-20.html.csv", "action": "count", "sent": "two of these locamotives were withdrawn in the year 1936 .", "annotation": {"scope": "all", "criterion": "equal", "value": "1936", "result": "2", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "year withdrawn", "1936"], "result": null, "ind": 0, "tointer": "select the rows whose year withdrawn record is equal to 1936 .", "tostr": "filter_eq { all_rows ; year withdrawn ; 1936 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; year withdrawn ; 1936 } }", "tointer": "select the rows whose year withdrawn record is equal to 1936 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; year withdrawn ; 1936 } } ; 2 } = true", "tointer": "select the rows whose year withdrawn record is equal to 1936 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; year withdrawn ; 1936 } } ; 2 } = true", "interpret": "select the rows whose year withdrawn record is equal to 1936 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "year withdrawn_5": 5, "1936_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "year withdrawn_5": "year withdrawn", "1936_6": "1936", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "year withdrawn_5": [0], "1936_6": [0], "2_7": [2]}, "table_header": ["iwcr no", "name", "wheel arrangement", "sr no", "year made", "year withdrawn"], "table_cont": [["1 ( 1st )", "pioneer", "2 - 2 - 2t", "-", "1861", "1904"], ["2 ( 1st )", "precursor", "2 - 2 - 2t", "-", "1861", "1904"], ["1 ( 2nd )", "-", "0 - 4 - 0t", "-", "1906", "1918"], ["2 ( 2nd )", "-", "0 - 4 - 4t", "-", "1895", "1917"], ["3", "-", "0 - 4 - 2t", "-", "1870", "1918"], ["4", "cowes", "2 - 4 - 0t", "w4", "1876", "1925"], ["5", "osborne", "2 - 4 - 0t", "w5", "1876", "1926"], ["6 ( 1st )", "newport", "2 - 2 - 2t", "-", "1861", "1895"], ["6 ( 2nd )", "-", "4 - 4 - 0t", "w6", "1890", "1926"], ["7 ( 1st )", "-", "4 - 4 - 0t", "-", "1861", "1906"], ["7 ( 2nd )", "-", "2 - 4 - 0t", "w7", "1882", "1926"], ["8", "-", "2 - 4 - 0t", "w8", "1898", "1929"], ["9", "-", "0 - 6 - 0t", "w9", "1872", "1927"], ["10", "-", "0 - 6 - 0t", "w10", "1874", "1936"], ["11", "-", "0 - 6 - 0t", "w11", "1878", "1963"], ["12", "-", "0 - 6 - 0t", "w12", "1880", "1936"]], "query": "eq { count { filter_eq { all_rows ; year withdrawn ; 1936 } } ; 2 } = true", "question": "two of these locamotives were withdrawn in the year 1936 ."}, {"topic": "wpar", "wiki": "https://en.wikipedia.org/wiki/WPAR", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12840409-1.html.csv", "action": "aggregation", "sent": "the total frequency mhz for all call signs is about 724 mhz .", "annotation": {"scope": "all", "col": "2", "type": "sum", "result": "724", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "frequency mhz"], "result": "724", "ind": 0, "tostr": "sum { all_rows ; frequency mhz }"}, "724"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; frequency mhz } ; 724 } = true", "tointer": "the sum of the frequency mhz record of all rows is 724 ."}, "logic_str": "round_eq { sum { all_rows ; frequency mhz } ; 724 } = true", "interpret": "the sum of the frequency mhz record of all rows is 724 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "frequency mhz_4": 4, "724_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "frequency mhz_4": "frequency mhz", "724_5": "724"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "frequency mhz_4": [0], "724_5": [1]}, "table_header": ["call sign", "frequency mhz", "city of license", "erp w", "class", "fcc info"], "table_cont": [["wjya", "89.3", "emporia , virginia", "2000", "a", "fcc"], ["wpva", "90.1", "waynesboro , virginia", "2500", "b1", "fcc"], ["wokg", "90.3", "galax , virginia", "2700", "c3", "fcc"], ["wrxt", "90.3", "roanoke , virginia", "5500", "c2", "fcc"], ["wpim", "90.5", "martinsville , virginia", "4000", "a", "fcc"], ["wokd - fm", "91.1", "danville , virginia", "18000", "c2", "fcc"], ["wpib", "91.1", "bluefield , west virginia", "12000", "c1", "fcc"], ["wpin - fm", "91.5", "dublin , virginia", "85", "a", "fcc"]], "query": "round_eq { sum { all_rows ; frequency mhz } ; 724 } = true", "question": "the total frequency mhz for all call signs is about 724 mhz ."}, {"topic": "2007 - 08 plymouth argyle f.c. season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Plymouth_Argyle_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12666456-6.html.csv", "action": "unique", "sent": "abdou is the only player that plymouth argyle f.c. received from the club sedan .", "annotation": {"scope": "all", "row": "1", "col": "4", "col_other": "1", "criterion": "fuzzily_match", "value": "sedan", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "moving from", "sedan"], "result": null, "ind": 0, "tointer": "select the rows whose moving from record fuzzily matches to sedan .", "tostr": "filter_eq { all_rows ; moving from ; sedan }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; moving from ; sedan } }", "tointer": "select the rows whose moving from record fuzzily matches to sedan . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "moving from", "sedan"], "result": null, "ind": 0, "tointer": "select the rows whose moving from record fuzzily matches to sedan .", "tostr": "filter_eq { all_rows ; moving from ; sedan }"}, "name"], "result": "abdou", "ind": 2, "tostr": "hop { filter_eq { all_rows ; moving from ; sedan } ; name }"}, "abdou"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; moving from ; sedan } ; name } ; abdou }", "tointer": "the name record of this unqiue row is abdou ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; moving from ; sedan } } ; eq { hop { filter_eq { all_rows ; moving from ; sedan } ; name } ; abdou } } = true", "tointer": "select the rows whose moving from record fuzzily matches to sedan . there is only one such row in the table . the name record of this unqiue row is abdou ."}, "logic_str": "and { only { filter_eq { all_rows ; moving from ; sedan } } ; eq { hop { filter_eq { all_rows ; moving from ; sedan } ; name } ; abdou } } = true", "interpret": "select the rows whose moving from record fuzzily matches to sedan . there is only one such row in the table . the name record of this unqiue row is abdou .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "moving from_7": 7, "sedan_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "abdou_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "moving from_7": "moving from", "sedan_8": "sedan", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "abdou_10": "abdou"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "moving from_7": [0], "sedan_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "abdou_10": [3]}, "table_header": ["name", "country", "type", "moving from", "transfer window", "ends", "transfer fee"], "table_cont": [["abdou", "fra", "signed", "sedan", "summer", "2008", "free"], ["mabiala", "fra", "loan", "parissaint - germain", "summer", "2008", "loan"], ["martin", "eng", "loan", "manchester united", "summer", "2008", "loan"], ["easter", "wal", "transfer", "wycombe wanderers", "winter", "2008", "210k"], ["jutkiewicz", "eng", "loan", "everton", "winter", "2008", "loan"], ["folly", "fra", "transfer", "sheffield wednesday", "winter", "2008", "xxxk"]], "query": "and { only { filter_eq { all_rows ; moving from ; sedan } } ; eq { hop { filter_eq { all_rows ; moving from ; sedan } ; name } ; abdou } } = true", "question": "abdou is the only player that plymouth argyle f.c. received from the club sedan ."}, {"topic": "cusco province", "wiki": "https://en.wikipedia.org/wiki/Cusco_Province", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10877159-1.html.csv", "action": "comparative", "sent": "the population of santiago is 11753 more than the population of wanchaq .", "annotation": {"row_1": "4", "row_2": "5", "col": "3", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "11753", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "city district", "santiago"], "result": null, "ind": 0, "tointer": "select the rows whose city district record fuzzily matches to santiago .", "tostr": "filter_eq { all_rows ; city district ; santiago }"}, "population 2007 census ( hab )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; city district ; santiago } ; population 2007 census ( hab ) }", "tointer": "select the rows whose city district record fuzzily matches to santiago . take the population 2007 census ( hab ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "city district", "wanchaq"], "result": null, "ind": 1, "tointer": "select the rows whose city district record fuzzily matches to wanchaq .", "tostr": "filter_eq { all_rows ; city district ; wanchaq }"}, "population 2007 census ( hab )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; city district ; wanchaq } ; population 2007 census ( hab ) }", "tointer": "select the rows whose city district record fuzzily matches to wanchaq . take the population 2007 census ( hab ) record of this row ."}], "result": "11753", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; city district ; santiago } ; population 2007 census ( hab ) } ; hop { filter_eq { all_rows ; city district ; wanchaq } ; population 2007 census ( hab ) } }"}, "11753"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; city district ; santiago } ; population 2007 census ( hab ) } ; hop { filter_eq { all_rows ; city district ; wanchaq } ; population 2007 census ( hab ) } } ; 11753 } = true", "tointer": "select the rows whose city district record fuzzily matches to santiago . take the population 2007 census ( hab ) record of this row . select the rows whose city district record fuzzily matches to wanchaq . take the population 2007 census ( hab ) record of this row . the first record is 11753 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; city district ; santiago } ; population 2007 census ( hab ) } ; hop { filter_eq { all_rows ; city district ; wanchaq } ; population 2007 census ( hab ) } } ; 11753 } = true", "interpret": "select the rows whose city district record fuzzily matches to santiago . take the population 2007 census ( hab ) record of this row . select the rows whose city district record fuzzily matches to wanchaq . take the population 2007 census ( hab ) record of this row . the first record is 11753 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "city district_8": 8, "santiago_9": 9, "population 2007 census (hab)_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "city district_12": 12, "wanchaq_13": 13, "population 2007 census (hab)_14": 14, "11753_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "city district_8": "city district", "santiago_9": "santiago", "population 2007 census (hab)_10": "population 2007 census ( hab )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "city district_12": "city district", "wanchaq_13": "wanchaq", "population 2007 census (hab)_14": "population 2007 census ( hab )", "11753_15": "11753"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "city district_8": [0], "santiago_9": [0], "population 2007 census (hab)_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "city district_12": [1], "wanchaq_13": [1], "population 2007 census (hab)_14": [3], "11753_15": [5]}, "table_header": ["city district", "area km square", "population 2007 census ( hab )", "housing ( 2007 )", "density ( hab / km square )", "elevation msl"], "table_cont": [["cuzco", "116.22 km square", "108798", "28476", "936.1", "3399 msl"], ["san jer\u00f3nimo", "103.34 km square", "28856", "8942", "279.2", "3244 msl"], ["san sebasti\u00e1n", "89.44 km square", "85472", "18109", "955.6", "3244 msl"], ["santiago", "69.72 km square", "66277", "21168", "950.6", "3400 msl"], ["wanchaq", "6.38 km square", "54524", "14690", "8546.1", "3366 msl"], ["total", "385.1 km square", "358052", "91385", "929.76", "-"]], "query": "eq { diff { hop { filter_eq { all_rows ; city district ; santiago } ; population 2007 census ( hab ) } ; hop { filter_eq { all_rows ; city district ; wanchaq } ; population 2007 census ( hab ) } } ; 11753 } = true", "question": "the population of santiago is 11753 more than the population of wanchaq ."}, {"topic": "espn sunday night football results ( 1987 - 2005 )", "wiki": "https://en.wikipedia.org/wiki/ESPN_Sunday_Night_Football_results_%281987%E2%80%932005%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13193466-2.html.csv", "action": "majority", "sent": "for espn sunday night football results ( 1987 - 2005 ) , when the month was december , most of the games had a final score where both teams scored at least 20 points .", "annotation": {"scope": "subset", "col": "3", "most_or_all": "most", "criterion": "greater_than_eq", "value": "20 for both teams", "subset": {"col": "1", "criterion": "fuzzily_match", "value": "december"}}, "logic": {"func": "most_greater_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "december"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; december }", "tointer": "select the rows whose date record fuzzily matches to december ."}, "final score", "20 for both teams"], "result": true, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to december . for the final score records of these rows , most of them are greater than or equal to 20 for both teams .", "tostr": "most_greater_eq { filter_eq { all_rows ; date ; december } ; final score ; 20 for both teams } = true"}, "logic_str": "most_greater_eq { filter_eq { all_rows ; date ; december } ; final score ; 20 for both teams } = true", "interpret": "select the rows whose date record fuzzily matches to december . for the final score records of these rows , most of them are greater than or equal to 20 for both teams .", "num_func": 2, "nid": 2, "g_ids": {"most_greater_eq_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "date_4": 4, "december_5": 5, "final score_6": 6, "20 for both teams_7": 7}, "g_ids_features": {"most_greater_eq_1": "most_greater_eq", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "date_4": "date", "december_5": "december", "final score_6": "final score", "20 for both teams_7": "20 for both teams"}, "g_adj": {"most_greater_eq_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "date_4": [0], "december_5": [0], "final score_6": [1], "20 for both teams_7": [1]}, "table_header": ["date", "visiting team", "final score", "host team", "stadium"], "table_cont": [["november 8", "new england patriots", "10 - 17", "new york giants", "giants stadium"], ["november 15", "los angeles raiders", "14 - 16", "san diego chargers", "jack murphy stadium"], ["november 22", "miami dolphins", "20 - 14", "dallas cowboys", "texas stadium"], ["november 29", "cleveland browns", "24 - 38", "san francisco 49ers", "candlestick park"], ["december 6", "chicago bears", "30 - 24", "minnesota vikings", "hubert h humphrey metrodome"], ["december 13", "denver broncos", "21 - 28", "seattle seahawks", "kingdome"], ["december 20", "washington redskins", "21 - 23", "miami dolphins", "joe robbie stadium"], ["december 27", "los angeles rams", "0 - 48", "san francisco 49ers", "candlestick park"]], "query": "most_greater_eq { filter_eq { all_rows ; date ; december } ; final score ; 20 for both teams } = true", "question": "for espn sunday night football results ( 1987 - 2005 ) , when the month was december , most of the games had a final score where both teams scored at least 20 points ."}, {"topic": "locomotives of the southern railway", "wiki": "https://en.wikipedia.org/wiki/Locomotives_of_the_Southern_Railway", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1169552-20.html.csv", "action": "majority", "sent": "the majority of these locamotive models do not have an assigned name .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "fuzzily_match", "value": "-", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "name", "-"], "result": true, "ind": 0, "tointer": "for the name records of all rows , most of them fuzzily match to - .", "tostr": "most_eq { all_rows ; name ; - } = true"}, "logic_str": "most_eq { all_rows ; name ; - } = true", "interpret": "for the name records of all rows , most of them fuzzily match to - .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "name_3": 3, "-_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "name_3": "name", "-_4": "-"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "name_3": [0], "-_4": [0]}, "table_header": ["iwcr no", "name", "wheel arrangement", "sr no", "year made", "year withdrawn"], "table_cont": [["1 ( 1st )", "pioneer", "2 - 2 - 2t", "-", "1861", "1904"], ["2 ( 1st )", "precursor", "2 - 2 - 2t", "-", "1861", "1904"], ["1 ( 2nd )", "-", "0 - 4 - 0t", "-", "1906", "1918"], ["2 ( 2nd )", "-", "0 - 4 - 4t", "-", "1895", "1917"], ["3", "-", "0 - 4 - 2t", "-", "1870", "1918"], ["4", "cowes", "2 - 4 - 0t", "w4", "1876", "1925"], ["5", "osborne", "2 - 4 - 0t", "w5", "1876", "1926"], ["6 ( 1st )", "newport", "2 - 2 - 2t", "-", "1861", "1895"], ["6 ( 2nd )", "-", "4 - 4 - 0t", "w6", "1890", "1926"], ["7 ( 1st )", "-", "4 - 4 - 0t", "-", "1861", "1906"], ["7 ( 2nd )", "-", "2 - 4 - 0t", "w7", "1882", "1926"], ["8", "-", "2 - 4 - 0t", "w8", "1898", "1929"], ["9", "-", "0 - 6 - 0t", "w9", "1872", "1927"], ["10", "-", "0 - 6 - 0t", "w10", "1874", "1936"], ["11", "-", "0 - 6 - 0t", "w11", "1878", "1963"], ["12", "-", "0 - 6 - 0t", "w12", "1880", "1936"]], "query": "most_eq { all_rows ; name ; - } = true", "question": "the majority of these locamotive models do not have an assigned name ."}, {"topic": "2006 - 07 seattle supersonics season", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_Seattle_SuperSonics_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28768469-5.html.csv", "action": "unique", "sent": "the seattle supersonics ' game on november 18 was the only one that they played at oracle arena during november of the 2006 - 07 season .", "annotation": {"scope": "all", "row": "11", "col": "8", "col_other": "2", "criterion": "equal", "value": "oracle arena", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "location attendance", "oracle arena"], "result": null, "ind": 0, "tointer": "select the rows whose location attendance record fuzzily matches to oracle arena .", "tostr": "filter_eq { all_rows ; location attendance ; oracle arena }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; location attendance ; oracle arena } }", "tointer": "select the rows whose location attendance record fuzzily matches to oracle arena . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "location attendance", "oracle arena"], "result": null, "ind": 0, "tointer": "select the rows whose location attendance record fuzzily matches to oracle arena .", "tostr": "filter_eq { all_rows ; location attendance ; oracle arena }"}, "date"], "result": "november 18", "ind": 2, "tostr": "hop { filter_eq { all_rows ; location attendance ; oracle arena } ; date }"}, "november 18"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; location attendance ; oracle arena } ; date } ; november 18 }", "tointer": "the date record of this unqiue row is november 18 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; location attendance ; oracle arena } } ; eq { hop { filter_eq { all_rows ; location attendance ; oracle arena } ; date } ; november 18 } } = true", "tointer": "select the rows whose location attendance record fuzzily matches to oracle arena . there is only one such row in the table . the date record of this unqiue row is november 18 ."}, "logic_str": "and { only { filter_eq { all_rows ; location attendance ; oracle arena } } ; eq { hop { filter_eq { all_rows ; location attendance ; oracle arena } ; date } ; november 18 } } = true", "interpret": "select the rows whose location attendance record fuzzily matches to oracle arena . there is only one such row in the table . the date record of this unqiue row is november 18 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "location attendance_7": 7, "oracle arena_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "november 18_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "location attendance_7": "location attendance", "oracle arena_8": "oracle arena", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "november 18_10": "november 18"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "location attendance_7": [0], "oracle arena_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "november 18_10": [3]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["1", "november 1", "portland", "l 106 - 110", "rashard lewis ( 25 )", "rashard lewis ( 8 )", "luke ridnour ( 13 )", "keyarena 17072", "0 - 1"], ["2", "november 3", "l a lakers", "l 112 - 118", "ray allen ( 30 )", "chris wilcox ( 12 )", "earl watson ( 7 )", "staples center 18997", "0 - 2"], ["3", "november 5", "l a lakers", "w 117 - 101", "ray allen ( 32 )", "chris wilcox ( 8 )", "luke ridnour ( 7 )", "keyarena 17072", "1 - 2"], ["4", "november 7", "miami", "l 87 - 90", "rashard lewis ( 23 )", "nick collison ( 10 )", "earl watson ( 6 )", "american airlines arena 19600", "1 - 3"], ["5", "november 8", "orlando", "l 87 - 88", "ray allen ( 21 )", "danny fortson ( 8 )", "luke ridnour ( 6 )", "amway arena 16312", "1 - 4"], ["6", "november 10", "charlotte", "w 99 - 85", "ray allen ( 26 )", "nick collison ( 15 )", "luke ridnour ( 7 )", "charlotte bobcats arena 13515", "2 - 4"], ["7", "november 11", "atlanta", "w 113 - 112 ( ot )", "ray allen ( 33 )", "chris wilcox ( 15 )", "luke ridnour ( 5 )", "philips arena 19309", "3 - 4"], ["8", "november 13", "new jersey", "w 119 - 113", "luke ridnour ( 32 )", "rashard lewis ( 11 )", "luke ridnour , earl watson ( 7 )", "continental airlines arena 14392", "4 - 4"], ["9", "november 15", "philadelphia", "l 90 - 96", "rashard lewis ( 25 )", "rashard lewis , chris wilcox ( 15 )", "luke ridnour ( 7 )", "keyarena 14936", "4 - 5"], ["10", "november 17", "utah", "l 109 - 118", "ray allen ( 32 )", "chris wilcox ( 11 )", "luke ridnour ( 7 )", "keyarena 15513", "4 - 6"], ["11", "november 18", "golden state", "l 95 - 107", "ray allen ( 34 )", "ray allen ( 11 )", "earl watson ( 7 )", "oracle arena 17205", "4 - 7"], ["12", "november 20", "new jersey", "w 99 - 87", "ray allen ( 29 )", "ray allen ( 9 )", "ray allen , luke ridnour ( 5 )", "keyarena 14621", "5 - 7"], ["13", "november 22", "l a clippers", "w 95 - 85", "rashard lewis ( 35 )", "nick collison , rashard lewis ( 13 )", "luke ridnour ( 9 )", "staples center 16290", "6 - 7"], ["14", "november 24", "sacramento", "l 100 - 109", "rashard lewis ( 26 )", "chris wilcox ( 13 )", "luke ridnour ( 8 )", "keyarena 16757", "6 - 8"], ["15", "november 26", "san antonio", "l 78 - 98", "ray allen ( 21 )", "johan petro ( 9 )", "chris wilcox ( 5 )", "keyarena 15483", "6 - 9"]], "query": "and { only { filter_eq { all_rows ; location attendance ; oracle arena } } ; eq { hop { filter_eq { all_rows ; location attendance ; oracle arena } ; date } ; november 18 } } = true", "question": "the seattle supersonics ' game on november 18 was the only one that they played at oracle arena during november of the 2006 - 07 season ."}, {"topic": "list of tallest buildings in chile", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Chile", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27067379-1.html.csv", "action": "majority", "sent": "the majority of tall buildings in chile were completed in the 2000s .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than_eq", "value": "2000", "subset": null}, "logic": {"func": "most_greater_eq", "args": ["all_rows", "completion", "2000"], "result": true, "ind": 0, "tointer": "for the completion records of all rows , most of them are greater than or equal to 2000 .", "tostr": "most_greater_eq { all_rows ; completion ; 2000 } = true"}, "logic_str": "most_greater_eq { all_rows ; completion ; 2000 } = true", "interpret": "for the completion records of all rows , most of them are greater than or equal to 2000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_eq_0": 0, "result_1": 1, "all_rows_2": 2, "completion_3": 3, "2000_4": 4}, "g_ids_features": {"most_greater_eq_0": "most_greater_eq", "result_1": "true", "all_rows_2": "all_rows", "completion_3": "completion", "2000_4": "2000"}, "g_adj": {"most_greater_eq_0": [1], "result_1": [], "all_rows_2": [0], "completion_3": [0], "2000_4": [0]}, "table_header": ["position", "building", "city", "height", "number of floors", "completion"], "table_cont": [["1", "gran torre santiago", "santiago", "300 m", "70", "2012"], ["2", "titanium la portada", "santiago", "-", "55", "2010"], ["3", "costanera center torre 1", "santiago", "170 m", "41", "2012"], ["3", "costanera center torre 2", "santiago", "170 m", "41", "2012"], ["4", "boulevard kennedy ( marriot )", "santiago", "140 m", "40", "1999"], ["5", "torre telef\u00e3 cubicnica chile", "santiago", "132 m", "32", "1994"], ["6", "torre entel", "santiago", "127 m", "0", "1974"], ["7", "torre de la industria", "santiago", "120 m", "33", "1994"], ["8", "territoria 3000", "santiago", "118 m", "31", "2008"], ["9", "torre mall center", "concepci\u00e3 cubicn", "115 m", "31", "2009"], ["9", "torre centenario", "santiago", "115 m", "31", "2000"]], "query": "most_greater_eq { all_rows ; completion ; 2000 } = true", "question": "the majority of tall buildings in chile were completed in the 2000s ."}, {"topic": "eurovision song contest 1961", "wiki": "https://en.wikipedia.org/wiki/Eurovision_Song_Contest_1961", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-180719-1.html.csv", "action": "unique", "sent": "sommer i palma is the only norweign language song in the eurovision song contest of 1961 .", "annotation": {"scope": "all", "row": "12", "col": "2", "col_other": "4", "criterion": "equal", "value": "norwegian", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "language", "norwegian"], "result": null, "ind": 0, "tointer": "select the rows whose language record fuzzily matches to norwegian .", "tostr": "filter_eq { all_rows ; language ; norwegian }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; language ; norwegian } }", "tointer": "select the rows whose language record fuzzily matches to norwegian . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "language", "norwegian"], "result": null, "ind": 0, "tointer": "select the rows whose language record fuzzily matches to norwegian .", "tostr": "filter_eq { all_rows ; language ; norwegian }"}, "song"], "result": "sommer i palma", "ind": 2, "tostr": "hop { filter_eq { all_rows ; language ; norwegian } ; song }"}, "sommer i palma"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; language ; norwegian } ; song } ; sommer i palma }", "tointer": "the song record of this unqiue row is sommer i palma ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; language ; norwegian } } ; eq { hop { filter_eq { all_rows ; language ; norwegian } ; song } ; sommer i palma } } = true", "tointer": "select the rows whose language record fuzzily matches to norwegian . there is only one such row in the table . the song record of this unqiue row is sommer i palma ."}, "logic_str": "and { only { filter_eq { all_rows ; language ; norwegian } } ; eq { hop { filter_eq { all_rows ; language ; norwegian } ; song } ; sommer i palma } } = true", "interpret": "select the rows whose language record fuzzily matches to norwegian . there is only one such row in the table . the song record of this unqiue row is sommer i palma .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "language_7": 7, "norwegian_8": 8, "str_eq_3": 3, "str_hop_2": 2, "song_9": 9, "sommer i palma_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "language_7": "language", "norwegian_8": "norwegian", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "song_9": "song", "sommer i palma_10": "sommer i palma"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "language_7": [0], "norwegian_8": [0], "str_eq_3": [4], "str_hop_2": [3], "song_9": [2], "sommer i palma_10": [3]}, "table_header": ["draw", "language", "artist", "song", "english translation", "place", "points"], "table_cont": [["01", "spanish", "conchita bautista", "estando contigo", "when i 'm with you", "9", "8"], ["02", "french", "colette der\u00e9al", "allons , allons les enfants", "come on , come on children", "10", "6"], ["03", "german", "jimmy makulis", "sehnsucht", "longing", "15", "1"], ["04", "finnish", "laila kinnunen", "valoa ikkunassa", "the lights in the window", "10", "6"], ["05", "serbian", "ljiljana petrovi\u0107", "neke davne zvezde ( \u043d\u0435\u043a\u0435 \u0434\u0430\u0432\u043d\u0435 \u0437\u0432\u0435\u0437\u0434\u0435 )", "some ancient stars", "8", "9"], ["06", "dutch", "greetje kauffeld", "wat een dag", "what a day", "10", "6"], ["07", "swedish", "lill - babs", "april , april", "-", "14", "2"], ["08", "german , french", "lale andersen", "einmal sehen wir uns wieder", "we will meet again", "13", "3"], ["09", "french", "jean - paul mauric", "printemps , avril carillonne", "spring , april rings", "4", "13"], ["10", "french", "franca di rienzo", "nous aurons demain", "we 'll have tomorrow", "3", "16"], ["11", "dutch", "bob benny", "september , gouden roos", "september , golden rose", "15", "1"], ["12", "norwegian", "nora brockstedt", "sommer i palma", "summer in palma", "7", "10"], ["13", "danish", "dario campeotto", "angelique", "-", "5", "12"], ["14", "french", "jean - claude pascal", "nous les amoureux", "we the lovers", "1", "31"], ["15", "english", "the allisons", "are you sure", "-", "2", "24"], ["16", "italian", "betty curtis", "al di l\u00e0", "beyond", "5", "12"]], "query": "and { only { filter_eq { all_rows ; language ; norwegian } } ; eq { hop { filter_eq { all_rows ; language ; norwegian } ; song } ; sommer i palma } } = true", "question": "sommer i palma is the only norweign language song in the eurovision song contest of 1961 ."}, {"topic": "1947 los angeles rams season", "wiki": "https://en.wikipedia.org/wiki/1947_Los_Angeles_Rams_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11172791-1.html.csv", "action": "comparative", "sent": "more people attended the game on november 2 , 1947 than on november 9 , 1947 .", "annotation": {"row_1": "6", "row_2": "7", "col": "5", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "november 2 , 1947"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to november 2 , 1947 .", "tostr": "filter_eq { all_rows ; date ; november 2 , 1947 }"}, "attendance"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; november 2 , 1947 } ; attendance }", "tointer": "select the rows whose date record fuzzily matches to november 2 , 1947 . take the attendance record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "november 9 , 1947"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to november 9 , 1947 .", "tostr": "filter_eq { all_rows ; date ; november 9 , 1947 }"}, "attendance"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; november 9 , 1947 } ; attendance }", "tointer": "select the rows whose date record fuzzily matches to november 9 , 1947 . take the attendance record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; date ; november 2 , 1947 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 9 , 1947 } ; attendance } } = true", "tointer": "select the rows whose date record fuzzily matches to november 2 , 1947 . take the attendance record of this row . select the rows whose date record fuzzily matches to november 9 , 1947 . take the attendance record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; date ; november 2 , 1947 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 9 , 1947 } ; attendance } } = true", "interpret": "select the rows whose date record fuzzily matches to november 2 , 1947 . take the attendance record of this row . select the rows whose date record fuzzily matches to november 9 , 1947 . take the attendance record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "date_7": 7, "november 2 , 1947_8": 8, "attendance_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "date_11": 11, "november 9 , 1947_12": 12, "attendance_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date_7": "date", "november 2 , 1947_8": "november 2 , 1947", "attendance_9": "attendance", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "date_11": "date", "november 9 , 1947_12": "november 9 , 1947", "attendance_13": "attendance"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "date_7": [0], "november 2 , 1947_8": [0], "attendance_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "date_11": [1], "november 9 , 1947_12": [1], "attendance_13": [3]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 29 , 1947", "pittsburgh steelers", "w 48 - 7", "35658"], ["2", "october 5 , 1947", "green bay packers", "l 17 - 14", "31613"], ["3", "october 12 , 1947", "detroit lions", "w 27 - 13", "42955"], ["4", "october 19 , 1947", "chicago cardinals", "w 27 - 7", "69631"], ["5", "october 26 , 1947", "philadelphia eagles", "l 14 - 7", "36364"], ["6", "november 2 , 1947", "chicago cardinals", "l 17 - 10", "40075"], ["7", "november 9 , 1947", "boston yanks", "l 27 - 16", "19715"], ["8", "november 16 , 1947", "chicago bears", "l 41 - 21", "36702"], ["9", "november 23 , 1947", "detroit lions", "w 28 - 17", "17693"], ["10", "november 30 , 1947", "green bay packers", "l 30 - 10", "31080"], ["11", "december 7 , 1947", "chicago bears", "w 17 - 14", "34215"], ["12", "december 14 , 1947", "new york giants", "w 34 - 10", "24050"]], "query": "greater { hop { filter_eq { all_rows ; date ; november 2 , 1947 } ; attendance } ; hop { filter_eq { all_rows ; date ; november 9 , 1947 } ; attendance } } = true", "question": "more people attended the game on november 2 , 1947 than on november 9 , 1947 ."}, {"topic": "manila", "wiki": "https://en.wikipedia.org/wiki/Manila", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-184334-2.html.csv", "action": "aggregation", "sent": "manila 's average population across all districts on this chart is 68,253 .", "annotation": {"scope": "all", "col": "3", "type": "average", "result": "68,253", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "population ( 2010 census )"], "result": "68,253", "ind": 0, "tostr": "avg { all_rows ; population ( 2010 census ) }"}, "68,253"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; population ( 2010 census ) } ; 68,253 } = true", "tointer": "the average of the population ( 2010 census ) record of all rows is 68,253 ."}, "logic_str": "round_eq { avg { all_rows ; population ( 2010 census ) } ; 68,253 } = true", "interpret": "the average of the population ( 2010 census ) record of all rows is 68,253 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "population (2010 census)_4": 4, "68,253_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "population (2010 census)_4": "population ( 2010 census )", "68,253_5": "68,253"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "population (2010 census)_4": [0], "68,253_5": [1]}, "table_header": ["district", "s barangay", "population ( 2010 census )", "area ( has )", "pop density ( per km2 )"], "table_cont": [["binondo", "10", "12985", "66.11", "19641.5"], ["ermita", "13", "7143", "158.91", "4495.0"], ["intramuros", "5", "4925", "67.26", "7322.3"], ["malate", "57", "77513", "259.58", "29860.9"], ["paco", "43", "70978", "278.69", "25468.4"], ["pandacan", "38", "73895", "166.00", "44515.1"], ["port area", "5", "57405", "315.28", "18207.6"], ["quiapo", "16", "24886", "84.69", "29384.8"], ["sampaloc", "192", "241528", "513.71", "47016.4"], ["san andr\u00e3s", "65", "115942", "168.02", "69004.9"], ["san miguel", "12", "15992", "91.37", "17502.5"], ["san nicolas", "15", "44241", "163.85", "27000.9"], ["santa ana", "34", "60952", "169.42", "35976.9"], ["santa cruz", "82", "115747", "309.01", "37457.4"], ["santa mesa", "51", "99933", "261.01", "38287.0"]], "query": "round_eq { avg { all_rows ; population ( 2010 census ) } ; 68,253 } = true", "question": "manila 's average population across all districts on this chart is 68,253 ."}, {"topic": "rowing at the 2008 summer olympics - women 's double sculls", "wiki": "https://en.wikipedia.org/wiki/Rowing_at_the_2008_Summer_Olympics_%E2%80%93_Women%27s_double_sculls", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18662700-3.html.csv", "action": "comparative", "sent": "romania had a shorter time than ukraine in women 's double sculls during the 2008 summer olympics .", "annotation": {"row_1": "4", "row_2": "5", "col": "4", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "romania"], "result": null, "ind": 0, "tointer": "select the rows whose country record fuzzily matches to romania .", "tostr": "filter_eq { all_rows ; country ; romania }"}, "time"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; country ; romania } ; time }", "tointer": "select the rows whose country record fuzzily matches to romania . take the time record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "ukraine"], "result": null, "ind": 1, "tointer": "select the rows whose country record fuzzily matches to ukraine .", "tostr": "filter_eq { all_rows ; country ; ukraine }"}, "time"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; country ; ukraine } ; time }", "tointer": "select the rows whose country record fuzzily matches to ukraine . take the time record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; country ; romania } ; time } ; hop { filter_eq { all_rows ; country ; ukraine } ; time } } = true", "tointer": "select the rows whose country record fuzzily matches to romania . take the time record of this row . select the rows whose country record fuzzily matches to ukraine . take the time record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; country ; romania } ; time } ; hop { filter_eq { all_rows ; country ; ukraine } ; time } } = true", "interpret": "select the rows whose country record fuzzily matches to romania . take the time record of this row . select the rows whose country record fuzzily matches to ukraine . take the time record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "country_7": 7, "romania_8": 8, "time_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "country_11": 11, "ukraine_12": 12, "time_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "country_7": "country", "romania_8": "romania", "time_9": "time", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "country_11": "country", "ukraine_12": "ukraine", "time_13": "time"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "country_7": [0], "romania_8": [0], "time_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "country_11": [1], "ukraine_12": [1], "time_13": [3]}, "table_header": ["rank", "rowers", "country", "time", "notes"], "table_cont": [["1", "georgina evers - swindell , caroline evers - swindell", "new zealand", "7:03.92", "fa"], ["2", "annekatrin thiele , christiane huth", "germany", "7:09.06", "r"], ["3", "megan kalmoe , ellen tomek", "united states", "7:11.17", "r"], ["4", "ionelia neacsu , roxana gabriela cogianu", "romania", "7:12.17", "r"], ["5", "kateryna tarasenko , yana dementieva", "ukraine", "7:25.03", "r"]], "query": "less { hop { filter_eq { all_rows ; country ; romania } ; time } ; hop { filter_eq { all_rows ; country ; ukraine } ; time } } = true", "question": "romania had a shorter time than ukraine in women 's double sculls during the 2008 summer olympics ."}, {"topic": "canadian women 's open", "wiki": "https://en.wikipedia.org/wiki/Canadian_Women%27s_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1628792-1.html.csv", "action": "aggregation", "sent": "for the canadian women 's open the total combined winner 's share in which lydia ko was the champion was 600000 .", "annotation": {"scope": "subset", "col": "9", "type": "sum", "result": "600000", "subset": {"col": "3", "criterion": "equal", "value": "lydia ko"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_str_eq", "args": ["all_rows", "champion", "lydia ko"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; champion ; lydia ko }", "tointer": "select the rows whose champion record fuzzily matches to lydia ko ."}, "winner 's share"], "result": "600000", "ind": 1, "tostr": "sum { filter_eq { all_rows ; champion ; lydia ko } ; winner 's share }"}, "600000"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_eq { all_rows ; champion ; lydia ko } ; winner 's share } ; 600000 } = true", "tointer": "select the rows whose champion record fuzzily matches to lydia ko . the sum of the winner 's share record of these rows is 600000 ."}, "logic_str": "round_eq { sum { filter_eq { all_rows ; champion ; lydia ko } ; winner 's share } ; 600000 } = true", "interpret": "select the rows whose champion record fuzzily matches to lydia ko . the sum of the winner 's share record of these rows is 600000 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "champion_5": 5, "lydia ko_6": 6, "winner 's share_7": 7, "600000_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "champion_5": "champion", "lydia ko_6": "lydia ko", "winner 's share_7": "winner 's share", "600000_8": "600000"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "champion_5": [0], "lydia ko_6": [0], "winner 's share_7": [1], "600000_8": [2]}, "table_header": ["year", "dates", "champion", "country", "score", "to par", "margin of victory", "purse ( us )", "winner 's share"], "table_cont": [["2013", "aug 22 - 25", "lydia ko ( a ) ( 2 )", "new zealand", "265", "- 15", "5 strokes", "2000000", "300000"], ["2012", "aug 23 - 26", "lydia ko ( a )", "new zealand", "275", "- 13", "3 strokes", "2000000", "300000"], ["2011", "aug 25 - 28", "brittany lincicome", "united states", "275", "- 13", "1 stroke", "2250000", "337500"], ["2010", "aug 26 - 29", "michelle wie", "united states", "276", "- 12", "3 strokes", "2250000", "337500"], ["2009", "sep 3 - 6", "suzann pettersen", "norway", "269", "15", "5 strokes", "2750000", "412500"], ["2008", "aug 14 - 17", "katherine hull", "australia", "277", "11", "1 stroke", "2250000", "337500"], ["2007", "aaug 16 - 19", "lorena ochoa", "mexico", "268", "16", "3 strokes", "2250000", "337500"], ["2006", "aug 10 - 13", "cristie kerr", "united states", "276", "12", "1 stroke", "1700000", "255000"], ["2005", "jul 14 - 17", "meena lee", "south korea", "279", "9", "1 stroke", "1300000", "195000"], ["2004", "jul 8 - 11", "meg mallon ( 3 )", "united states", "270", "18", "4 strokes", "1300000", "195000"], ["2003", "jul 10 - 13", "beth daniel", "united states", "276", "13", "1 stroke", "1300000", "195000"], ["2002", "aug 15 - 18", "meg mallon ( 2 )", "united states", "284", "4", "3 strokes", "1200000", "180000"], ["2001", "aug 16 - 19", "annika s\u00f6renstam", "sweden", "272", "16", "2 strokes", "1200000", "180000"]], "query": "round_eq { sum { filter_eq { all_rows ; champion ; lydia ko } ; winner 's share } ; 600000 } = true", "question": "for the canadian women 's open the total combined winner 's share in which lydia ko was the champion was 600000 ."}, {"topic": "exercise mainbrace", "wiki": "https://en.wikipedia.org/wiki/Exercise_Mainbrace", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11599375-1.html.csv", "action": "unique", "sent": "belgium was the only country that did not provide an escort for exercise mainbrace .", "annotation": {"scope": "all", "row": "9", "col": "5", "col_other": "1", "criterion": "equal", "value": "-", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "escorts", "-"], "result": null, "ind": 0, "tointer": "select the rows whose escorts record is equal to - .", "tostr": "filter_eq { all_rows ; escorts ; - }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; escorts ; - } }", "tointer": "select the rows whose escorts record is equal to - . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "escorts", "-"], "result": null, "ind": 0, "tointer": "select the rows whose escorts record is equal to - .", "tostr": "filter_eq { all_rows ; escorts ; - }"}, "nato member"], "result": "belgium", "ind": 2, "tostr": "hop { filter_eq { all_rows ; escorts ; - } ; nato member }"}, "belgium"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; escorts ; - } ; nato member } ; belgium }", "tointer": "the nato member record of this unqiue row is belgium ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; escorts ; - } } ; eq { hop { filter_eq { all_rows ; escorts ; - } ; nato member } ; belgium } } = true", "tointer": "select the rows whose escorts record is equal to - . there is only one such row in the table . the nato member record of this unqiue row is belgium ."}, "logic_str": "and { only { filter_eq { all_rows ; escorts ; - } } ; eq { hop { filter_eq { all_rows ; escorts ; - } ; nato member } ; belgium } } = true", "interpret": "select the rows whose escorts record is equal to - . there is only one such row in the table . the nato member record of this unqiue row is belgium .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "escorts_7": 7, "-_8": 8, "str_eq_3": 3, "str_hop_2": 2, "nato member_9": 9, "belgium_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "escorts_7": "escorts", "-_8": "-", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "nato member_9": "nato member", "belgium_10": "belgium"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "escorts_7": [0], "-_8": [0], "str_eq_3": [4], "str_hop_2": [3], "nato member_9": [2], "belgium_10": [3]}, "table_header": ["nato member", "aircraft carriers", "battleships", "cruisers", "escorts", "submarines", "torpedo boat squadrons", "s motor ship / s naval trawler", "grand total"], "table_cont": [["united states", "6", "1", "3", "40", "9", "-", "-", "59"], ["uk", "3", "1", "2", "31", "17", "4", "8 + trawlers", "66"], ["canada", "1", "-", "1", "5", "-", "-", "-", "7"], ["france", "-", "-", "-", "7", "-", "-", "2", "20"], ["denmark", "-", "-", "-", "3", "2", "-", "-", "7"], ["norway", "-", "-", "-", "2", "2", "3", "3", "26"], ["portugal", "-", "-", "-", "3", "-", "-", "-", "3"], ["netherlands", "-", "-", "-", "5", "3", "-", "5", "13"], ["belgium", "-", "-", "-", "-", "-", "-", "-", "2"], ["totals :", "10", "2", "6", "96", "33", "7", "18", "203"]], "query": "and { only { filter_eq { all_rows ; escorts ; - } } ; eq { hop { filter_eq { all_rows ; escorts ; - } ; nato member } ; belgium } } = true", "question": "belgium was the only country that did not provide an escort for exercise mainbrace ."}, {"topic": "1992 indianapolis colts season", "wiki": "https://en.wikipedia.org/wiki/1992_Indianapolis_Colts_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14876891-1.html.csv", "action": "comparative", "sent": "ashley ambrose was drafted in an earlier round than tony mccoy in the 1992 indianapolis colts season .", "annotation": {"row_1": "3", "row_2": "5", "col": "1", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "ashley ambrose"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to ashley ambrose .", "tostr": "filter_eq { all_rows ; player ; ashley ambrose }"}, "round ( overall )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; ashley ambrose } ; round ( overall ) }", "tointer": "select the rows whose player record fuzzily matches to ashley ambrose . take the round ( overall ) record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "tony mccoy"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to tony mccoy .", "tostr": "filter_eq { all_rows ; player ; tony mccoy }"}, "round ( overall )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; tony mccoy } ; round ( overall ) }", "tointer": "select the rows whose player record fuzzily matches to tony mccoy . take the round ( overall ) record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; ashley ambrose } ; round ( overall ) } ; hop { filter_eq { all_rows ; player ; tony mccoy } ; round ( overall ) } } = true", "tointer": "select the rows whose player record fuzzily matches to ashley ambrose . take the round ( overall ) record of this row . select the rows whose player record fuzzily matches to tony mccoy . take the round ( overall ) record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; player ; ashley ambrose } ; round ( overall ) } ; hop { filter_eq { all_rows ; player ; tony mccoy } ; round ( overall ) } } = true", "interpret": "select the rows whose player record fuzzily matches to ashley ambrose . take the round ( overall ) record of this row . select the rows whose player record fuzzily matches to tony mccoy . take the round ( overall ) record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "ashley ambrose_8": 8, "round (overall)_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "tony mccoy_12": 12, "round (overall)_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "ashley ambrose_8": "ashley ambrose", "round (overall)_9": "round ( overall )", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "tony mccoy_12": "tony mccoy", "round (overall)_13": "round ( overall )"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "ashley ambrose_8": [0], "round (overall)_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "tony mccoy_12": [1], "round (overall)_13": [3]}, "table_header": ["round ( overall )", "nfl team", "player", "position", "college"], "table_cont": [["1 ( 1 )", "indianapolis colts", "steve emtman", "defensive tackle", "washington"], ["1 ( 2 )", "indianapolis colts", "quentin coryatt", "linebacker", "texas a & m"], ["2 ( 29 )", "indianapolis colts", "ashley ambrose", "defensive back", "mississippi valley st"], ["4 ( 85 )", "indianapolis colts", "rodney culver", "running back", "notre dame"], ["4 ( 105 )", "indianapolis colts", "tony mccoy", "defensive tackle", "florida"]], "query": "less { hop { filter_eq { all_rows ; player ; ashley ambrose } ; round ( overall ) } ; hop { filter_eq { all_rows ; player ; tony mccoy } ; round ( overall ) } } = true", "question": "ashley ambrose was drafted in an earlier round than tony mccoy in the 1992 indianapolis colts season ."}, {"topic": "2005 belarusian premier league", "wiki": "https://en.wikipedia.org/wiki/2005_Belarusian_Premier_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14749970-1.html.csv", "action": "superlative", "sent": "out of the teams ' venues of the 2005 belarusian premier league , dinamo , minsk has the largest capacity .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "capacity"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; capacity }"}, "team"], "result": "dinamo minsk", "ind": 1, "tostr": "hop { argmax { all_rows ; capacity } ; team }"}, "dinamo minsk"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; capacity } ; team } ; dinamo minsk } = true", "tointer": "select the row whose capacity record of all rows is maximum . the team record of this row is dinamo minsk ."}, "logic_str": "eq { hop { argmax { all_rows ; capacity } ; team } ; dinamo minsk } = true", "interpret": "select the row whose capacity record of all rows is maximum . the team record of this row is dinamo minsk .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "capacity_5": 5, "team_6": 6, "dinamo minsk_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "capacity_5": "capacity", "team_6": "team", "dinamo minsk_7": "dinamo minsk"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "capacity_5": [0], "team_6": [1], "dinamo minsk_7": [2]}, "table_header": ["team", "location", "venue", "capacity", "position in 2004"], "table_cont": [["dinamo minsk", "minsk", "dinamo , minsk", "41040", "1"], ["bate", "borisov", "city stadium", "5500", "2"], ["shakhtyor", "soligorsk", "stroitel", "5000", "3"], ["torpedo", "zhodino", "torpedo", "3020", "4"], ["gomel", "gomel", "central", "11800", "5"], ["neman", "grodno", "neman", "6300", "7"], ["dinamo brest", "brest", "osk brestskiy", "10080", "8"], ["dnepr - transmash", "mogilev", "spartak", "11200", "9"], ["naftan", "novopolotsk", "atlant", "6500", "10"], ["darida", "minsk raion", "darida", "6000", "11"], ["slavia", "mozyr", "yunost", "5500", "12"], ["zvezda - bgu", "minsk", "traktor", "17600", "13"], ["mtz - ripo", "minsk", "traktor", "17600", "14"], ["lokomotiv", "minsk", "lokomotiv", "800", "first league , 1"]], "query": "eq { hop { argmax { all_rows ; capacity } ; team } ; dinamo minsk } = true", "question": "out of the teams ' venues of the 2005 belarusian premier league , dinamo , minsk has the largest capacity ."}, {"topic": "list of railway stations and tram stops in croydon", "wiki": "https://en.wikipedia.org/wiki/List_of_railway_stations_and_tram_stops_in_Croydon", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11802780-15.html.csv", "action": "superlative", "sent": "the wellesley road tram stop has the least amount of platforms .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "4", "value_mentioned": "no", "max_or_min": "min", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "platforms"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; platforms }"}, "stations"], "result": "wellesley road tram stop", "ind": 1, "tostr": "hop { argmin { all_rows ; platforms } ; stations }"}, "wellesley road tram stop"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; platforms } ; stations } ; wellesley road tram stop } = true", "tointer": "select the row whose platforms record of all rows is minimum . the stations record of this row is wellesley road tram stop ."}, "logic_str": "eq { hop { argmin { all_rows ; platforms } ; stations } ; wellesley road tram stop } = true", "interpret": "select the row whose platforms record of all rows is minimum . the stations record of this row is wellesley road tram stop .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "platforms_5": 5, "stations_6": 6, "wellesley road tram stop_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "platforms_5": "platforms", "stations_6": "stations", "wellesley road tram stop_7": "wellesley road tram stop"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "platforms_5": [0], "stations_6": [1], "wellesley road tram stop_7": [2]}, "table_header": ["stations", "place", "managed by", "platforms", "zone"], "table_cont": [["waddon marsh tram stop", "waddon", "tramlink", "2", "5"], ["waddon railway station", "waddon", "southern", "2", "5"], ["wandle park tram stop", "croydon", "tramlink", "2", "5"], ["wellesley road tram stop", "croydon", "tramlink", "1", "5"], ["west croydon station", "croydon", "southern / tramlink", "2", "5"], ["woodmansterne railway station", "woodmansterne", "southern", "2", "6"], ["woodside tram stop", "woodside", "tramlink", "2", "4"]], "query": "eq { hop { argmin { all_rows ; platforms } ; stations } ; wellesley road tram stop } = true", "question": "the wellesley road tram stop has the least amount of platforms ."}, {"topic": "uk singles chart records and statistics", "wiki": "https://en.wikipedia.org/wiki/UK_Singles_Chart_records_and_statistics", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1477679-2.html.csv", "action": "ordinal", "sent": "of the top uk singles , the second longest run at the top of the chart was 16 weeks .", "annotation": {"row": "2", "col": "5", "order": "2", "col_other": "n/a", "max_or_min": "max_to_min", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "nth_max", "args": ["all_rows", "weeks", "2"], "result": "16 weeks", "ind": 0, "tostr": "nth_max { all_rows ; weeks ; 2 }", "tointer": "the 2nd maximum weeks record of all rows is 16 weeks ."}, "16 weeks"], "result": true, "ind": 1, "tostr": "eq { nth_max { all_rows ; weeks ; 2 } ; 16 weeks } = true", "tointer": "the 2nd maximum weeks record of all rows is 16 weeks ."}, "logic_str": "eq { nth_max { all_rows ; weeks ; 2 } ; 16 weeks } = true", "interpret": "the 2nd maximum weeks record of all rows is 16 weeks .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "nth_max_0": 0, "all_rows_3": 3, "weeks_4": 4, "2_5": 5, "16 weeks_6": 6}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "nth_max_0": "nth_max", "all_rows_3": "all_rows", "weeks_4": "weeks", "2_5": "2", "16 weeks_6": "16 weeks"}, "g_adj": {"eq_1": [2], "result_2": [], "nth_max_0": [1], "all_rows_3": [0], "weeks_4": [0], "2_5": [0], "16 weeks_6": [1]}, "table_header": ["position", "artist", "single", "year", "weeks"], "table_cont": [["1st", "frankie laine", "i believe", "1953", "18 weeks"], ["2nd", "bryan adams", "( everything i do ) i do it for you", "1991", "16 weeks"], ["3rd", "wet wet wet", "love is all around", "1994", "15 weeks"], ["4th", "queen", "bohemian rhapsody", "1975 / 76 & 1991 / 92", "14 weeks"], ["5th", "slim whitman", "rose marie", "1955", "11 weeks"], ["6th", "david whitfield", "cara mia", "1954", "10 weeks"], ["6th", "whitney houston", "i will always love you", "1992", "10 weeks"], ["6th", "rihanna ( feat jay - z )", "umbrella", "2007", "10 weeks"]], "query": "eq { nth_max { all_rows ; weeks ; 2 } ; 16 weeks } = true", "question": "of the top uk singles , the second longest run at the top of the chart was 16 weeks ."}, {"topic": "2005 belarusian premier league", "wiki": "https://en.wikipedia.org/wiki/2005_Belarusian_Premier_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14749970-1.html.csv", "action": "unique", "sent": "the only team in the 2005 belarusian premier league that was promoted from the first league is lokomotiv .", "annotation": {"scope": "all", "row": "14", "col": "5", "col_other": "1", "criterion": "fuzzily_match", "value": "first league", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position in 2004", "first league"], "result": null, "ind": 0, "tointer": "select the rows whose position in 2004 record fuzzily matches to first league .", "tostr": "filter_eq { all_rows ; position in 2004 ; first league }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; position in 2004 ; first league } }", "tointer": "select the rows whose position in 2004 record fuzzily matches to first league . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position in 2004", "first league"], "result": null, "ind": 0, "tointer": "select the rows whose position in 2004 record fuzzily matches to first league .", "tostr": "filter_eq { all_rows ; position in 2004 ; first league }"}, "team"], "result": "lokomotiv", "ind": 2, "tostr": "hop { filter_eq { all_rows ; position in 2004 ; first league } ; team }"}, "lokomotiv"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; position in 2004 ; first league } ; team } ; lokomotiv }", "tointer": "the team record of this unqiue row is lokomotiv ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; position in 2004 ; first league } } ; eq { hop { filter_eq { all_rows ; position in 2004 ; first league } ; team } ; lokomotiv } } = true", "tointer": "select the rows whose position in 2004 record fuzzily matches to first league . there is only one such row in the table . the team record of this unqiue row is lokomotiv ."}, "logic_str": "and { only { filter_eq { all_rows ; position in 2004 ; first league } } ; eq { hop { filter_eq { all_rows ; position in 2004 ; first league } ; team } ; lokomotiv } } = true", "interpret": "select the rows whose position in 2004 record fuzzily matches to first league . there is only one such row in the table . the team record of this unqiue row is lokomotiv .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "position in 2004_7": 7, "first league_8": 8, "str_eq_3": 3, "str_hop_2": 2, "team_9": 9, "lokomotiv_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "position in 2004_7": "position in 2004", "first league_8": "first league", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "team_9": "team", "lokomotiv_10": "lokomotiv"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "position in 2004_7": [0], "first league_8": [0], "str_eq_3": [4], "str_hop_2": [3], "team_9": [2], "lokomotiv_10": [3]}, "table_header": ["team", "location", "venue", "capacity", "position in 2004"], "table_cont": [["dinamo minsk", "minsk", "dinamo , minsk", "41040", "1"], ["bate", "borisov", "city stadium", "5500", "2"], ["shakhtyor", "soligorsk", "stroitel", "5000", "3"], ["torpedo", "zhodino", "torpedo", "3020", "4"], ["gomel", "gomel", "central", "11800", "5"], ["neman", "grodno", "neman", "6300", "7"], ["dinamo brest", "brest", "osk brestskiy", "10080", "8"], ["dnepr - transmash", "mogilev", "spartak", "11200", "9"], ["naftan", "novopolotsk", "atlant", "6500", "10"], ["darida", "minsk raion", "darida", "6000", "11"], ["slavia", "mozyr", "yunost", "5500", "12"], ["zvezda - bgu", "minsk", "traktor", "17600", "13"], ["mtz - ripo", "minsk", "traktor", "17600", "14"], ["lokomotiv", "minsk", "lokomotiv", "800", "first league , 1"]], "query": "and { only { filter_eq { all_rows ; position in 2004 ; first league } } ; eq { hop { filter_eq { all_rows ; position in 2004 ; first league } ; team } ; lokomotiv } } = true", "question": "the only team in the 2005 belarusian premier league that was promoted from the first league is lokomotiv ."}, {"topic": "1992 toronto blue jays season", "wiki": "https://en.wikipedia.org/wiki/1992_Toronto_Blue_Jays_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12206491-10.html.csv", "action": "superlative", "sent": "the event on october 22 had the highest attendance of all the games .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance }"}, "date"], "result": "october 22", "ind": 1, "tostr": "hop { argmax { all_rows ; attendance } ; date }"}, "october 22"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; attendance } ; date } ; october 22 } = true", "tointer": "select the row whose attendance record of all rows is maximum . the date record of this row is october 22 ."}, "logic_str": "eq { hop { argmax { all_rows ; attendance } ; date } ; october 22 } = true", "interpret": "select the row whose attendance record of all rows is maximum . the date record of this row is october 22 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "date_6": 6, "october 22_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "date_6": "date", "october 22_7": "october 22"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "date_6": [1], "october 22_7": [2]}, "table_header": ["date", "opponent", "score", "loss", "attendance", "series"], "table_cont": [["october 17", "braves", "3 - 1", "morris ( 0 - 1 )", "51763", "0 - 1"], ["october 18", "braves", "5 - 4", "reardon ( 0 - 1 )", "51763", "1 - 1"], ["october 20", "braves", "3 - 2", "avery ( 0 - 1 )", "51813", "2 - 1"], ["october 21", "braves", "2 - 1", "glavine ( 1 - 1 )", "52090", "3 - 1"], ["october 22", "braves", "7 - 2", "morris ( 0 - 2 )", "52268", "3 - 2"], ["october 24", "braves", "4 - 3 ( 11 )", "leibrandt ( 0 - 1 )", "51763", "4 - 2"]], "query": "eq { hop { argmax { all_rows ; attendance } ; date } ; october 22 } = true", "question": "the event on october 22 had the highest attendance of all the games ."}, {"topic": "kultar gill", "wiki": "https://en.wikipedia.org/wiki/Kultar_Gill", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12278106-2.html.csv", "action": "majority", "sent": "almost all of kultar gill 's wins in canada were in round 1 .", "annotation": {"scope": "subset", "col": "6", "most_or_all": "most", "criterion": "equal", "value": "1", "subset": {"col": "7", "criterion": "fuzzily_match", "value": "canada"}}, "logic": {"func": "most_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "location", "canada"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; location ; canada }", "tointer": "select the rows whose location record fuzzily matches to canada ."}, "round", "1"], "result": true, "ind": 1, "tointer": "select the rows whose location record fuzzily matches to canada . for the round records of these rows , most of them are equal to 1 .", "tostr": "most_eq { filter_eq { all_rows ; location ; canada } ; round ; 1 } = true"}, "logic_str": "most_eq { filter_eq { all_rows ; location ; canada } ; round ; 1 } = true", "interpret": "select the rows whose location record fuzzily matches to canada . for the round records of these rows , most of them are equal to 1 .", "num_func": 2, "nid": 2, "g_ids": {"most_eq_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "location_4": 4, "canada_5": 5, "round_6": 6, "1_7": 7}, "g_ids_features": {"most_eq_1": "most_eq", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "location_4": "location", "canada_5": "canada", "round_6": "round", "1_7": "1"}, "g_adj": {"most_eq_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "location_4": [0], "canada_5": [0], "round_6": [1], "1_7": [1]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "location"], "table_cont": [["win", "12 - 8", "amr wahman", "tko ( punches )", "sfl 4", "1", "mumbai , india"], ["win", "11 - 8", "quinton arendse", "ko ( punches )", "sfl 3", "1", "new delhi , delhi india"], ["loss", "10 - 8", "joachim hansen", "submission ( armbar )", "dream5", "1", "osaka - jo hall , japan"], ["loss", "10 - 7", "tatsuya kawajiri", "decision ( unanimous )", "dream1", "2", "saitama , japan"], ["win", "10 - 6", "hideo tokoro", "tko ( punches )", "hero 's 9", "1", "yokohama , japan"], ["loss", "9 - 6", "kazuyuki miyata", "submission ( guillotine choke )", "hero 's 8", "1", "nagoya , japan"], ["loss", "9 - 5", "rodrigo damm", "submission ( rear naked choke )", "bodogfight - st petersburg", "2", "st petersburg , russia"], ["loss", "9 - 4", "caol uno", "submission ( rear naked choke )", "hero 's 6", "2", "tokyo , japan"], ["win", "9 - 3", "hideo tokoro", "ko ( knee )", "hero 's 5", "1", "tokyo , japan"], ["loss", "8 - 3", "daisuke sugie", "submission ( triangle choke )", "shooto - gig central 8", "1", "nagoya , japan"], ["win", "8 - 2", "harris sarmiento", "submission ( rear naked choke )", "sb 39 : destiny", "3", "hawaii , united states"], ["loss", "7 - 2", "fabio holanda", "submission ( kimura )", "tko major league mma", "1", "quebec , canada"], ["win", "7 - 1", "dave rivas", "submission ( rear naked choke )", "pxc 2 : chaos", "2", "guam"], ["win", "6 - 1", "donald ouimet", "submission ( rear naked choke )", "ucc 12 : adrenaline", "1", "quebec , canada"], ["win", "5 - 1", "kevin dolan", "tko ( strikes )", "mixed fighting championship", "1", "alberta , canada"], ["win", "4 - 1", "dave scholten", "submission ( rear naked choke )", "world freestyle fighting 3", "1", "vancouver , british columbia , canada"], ["loss", "3 - 1", "yves edwards", "submission ( heel hook )", "shogun 1", "2", "hawaii , united states"], ["win", "3 - 0", "trevor michaelis", "submission ( rear naked choke )", "ufcf - everett extreme challenge 4", "1", "everett , washington , united states"], ["win", "2 - 0", "dan shenk", "submission ( rear naked choke )", "western freestyle championships", "1", "british columbia , canada"], ["win", "1 - 0", "jr wallace", "decision ( unanimous )", "western canada 's toughest", "3", "vernon , british columbia , canada"]], "query": "most_eq { filter_eq { all_rows ; location ; canada } ; round ; 1 } = true", "question": "almost all of kultar gill 's wins in canada were in round 1 ."}, {"topic": "james calado", "wiki": "https://en.wikipedia.org/wiki/James_Calado", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24584486-1.html.csv", "action": "comparative", "sent": "james calado participated in 6 more races in 2010 than in 2012 .", "annotation": {"row_1": "7", "row_2": "10", "col": "4", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "6", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "season", "2010"], "result": null, "ind": 0, "tointer": "select the rows whose season record fuzzily matches to 2010 .", "tostr": "filter_eq { all_rows ; season ; 2010 }"}, "races"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; season ; 2010 } ; races }", "tointer": "select the rows whose season record fuzzily matches to 2010 . take the races record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "season", "2012"], "result": null, "ind": 1, "tointer": "select the rows whose season record fuzzily matches to 2012 .", "tostr": "filter_eq { all_rows ; season ; 2012 }"}, "races"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; season ; 2012 } ; races }", "tointer": "select the rows whose season record fuzzily matches to 2012 . take the races record of this row ."}], "result": "6", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; season ; 2010 } ; races } ; hop { filter_eq { all_rows ; season ; 2012 } ; races } }"}, "6"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; season ; 2010 } ; races } ; hop { filter_eq { all_rows ; season ; 2012 } ; races } } ; 6 } = true", "tointer": "select the rows whose season record fuzzily matches to 2010 . take the races record of this row . select the rows whose season record fuzzily matches to 2012 . take the races record of this row . the first record is 6 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; season ; 2010 } ; races } ; hop { filter_eq { all_rows ; season ; 2012 } ; races } } ; 6 } = true", "interpret": "select the rows whose season record fuzzily matches to 2010 . take the races record of this row . select the rows whose season record fuzzily matches to 2012 . take the races record of this row . the first record is 6 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "season_8": 8, "2010_9": 9, "races_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "season_12": 12, "2012_13": 13, "races_14": 14, "6_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "season_8": "season", "2010_9": "2010", "races_10": "races", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "season_12": "season", "2012_13": "2012", "races_14": "races", "6_15": "6"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "season_8": [0], "2010_9": [0], "races_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "season_12": [1], "2012_13": [1], "races_14": [3], "6_15": [5]}, "table_header": ["season", "series", "team", "races", "wins", "poles", "f / laps", "podiums", "points", "position"], "table_cont": [["2008", "british formula renault 2.0", "fortec motorsport", "20", "1", "2", "0", "4", "292", "7th"], ["2008", "formula renault 2.0 nec", "fortec motorsport", "3", "0", "0", "0", "0", "38", "25th"], ["2008", "british formula renault 2.0 winter series", "fortec motorsport", "4", "2", "3", "4", "3", "116", "1st"], ["2008", "portuguese formula renault 2.0 winter series", "fortec motorsport", "4", "3", "2", "2", "4", "60", "1st"], ["2009", "british formula renault 2.0", "fortec motorsport", "20", "8", "10", "7", "12", "457", "2nd"], ["2009", "formula renault 2.0 eurocup", "fortec motorsport", "6", "0", "0", "1", "0", "10", "17th"], ["2010", "british formula three championship", "carlin", "30", "5", "2", "4", "12", "293", "2nd"], ["2011", "gp3 series", "lotus art", "16", "1", "1", "2", "6", "55", "2nd"], ["2011", "gp2 final", "lotus art", "2", "1", "0", "0", "1", "7", "5th"], ["2012", "gp2 series", "lotus gp", "24", "2", "2", "1", "7", "160", "5th"]], "query": "eq { diff { hop { filter_eq { all_rows ; season ; 2010 } ; races } ; hop { filter_eq { all_rows ; season ; 2012 } ; races } } ; 6 } = true", "question": "james calado participated in 6 more races in 2010 than in 2012 ."}, {"topic": "dirk raudies", "wiki": "https://en.wikipedia.org/wiki/Dirk_Raudies", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13815322-3.html.csv", "action": "majority", "sent": "dirk raudies drove all of his years with the honda racing team .", "annotation": {"scope": "all", "col": "3", "most_or_all": "all", "criterion": "equal", "value": "honda", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "team", "honda"], "result": true, "ind": 0, "tointer": "for the team records of all rows , all of them fuzzily match to honda .", "tostr": "all_eq { all_rows ; team ; honda } = true"}, "logic_str": "all_eq { all_rows ; team ; honda } = true", "interpret": "for the team records of all rows , all of them fuzzily match to honda .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "team_3": 3, "honda_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "team_3": "team", "honda_4": "honda"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "team_3": [0], "honda_4": [0]}, "table_header": ["year", "class", "team", "points", "rank", "wins"], "table_cont": [["1989", "125cc", "honda", "29", "15", "0"], ["1990", "125cc", "honda", "113", "5th", "0"], ["1991", "125cc", "honda", "81", "8th", "0"], ["1992", "125cc", "honda", "91", "6th", "1"], ["1993", "125cc", "honda", "280", "1st", "9"], ["1994", "125cc", "honda", "162", "4th", "3"], ["1995", "125cc", "honda", "124.5", "5th", "1"], ["1996", "125cc", "honda", "81", "13th", "0"], ["1997", "125cc", "honda", "8", "25th", "0"]], "query": "all_eq { all_rows ; team ; honda } = true", "question": "dirk raudies drove all of his years with the honda racing team ."}, {"topic": "2008 - 09 detroit red wings season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Detroit_Red_Wings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17371135-13.html.csv", "action": "ordinal", "sent": "in the 2008-09 detroit red wings season , the 2nd highest attendance was on may 24th .", "annotation": {"row": "4", "col": "6", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 2 }"}, "date"], "result": "may 24", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 2 } ; date }"}, "may 24"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; may 24 } = true", "tointer": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is may 24 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; may 24 } = true", "interpret": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is may 24 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "2_6": 6, "date_7": 7, "may 24_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "2_6": "2", "date_7": "date", "may 24_8": "may 24"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "2_6": [0], "date_7": [1], "may 24_8": [2]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "series"], "table_cont": [["may 17", "chicago", "2 - 5", "detroit", "osgood", "20066", "1 - 0"], ["may 19", "chicago", "2 - 3", "detroit", "osgood", "20066", "2 - 0"], ["may 22", "detroit", "3 - 4", "chicago", "osgood", "22678", "2 - 1"], ["may 24", "detroit", "6 - 1", "chicago", "conklin", "22663", "3 - 1"], ["may 27", "chicago", "1 - 2", "detroit", "osgood", "20066", "4 - 1"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; may 24 } = true", "question": "in the 2008-09 detroit red wings season , the 2nd highest attendance was on may 24th ."}, {"topic": "turkish cup", "wiki": "https://en.wikipedia.org/wiki/Turkish_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1859269-9.html.csv", "action": "unique", "sent": "mehmet y\u0131lmaz is the only turkish cup player that scored 23 goals .", "annotation": {"scope": "all", "row": "10", "col": "3", "col_other": "2", "criterion": "equal", "value": "23", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "goals", "23"], "result": null, "ind": 0, "tointer": "select the rows whose goals record is equal to 23 .", "tostr": "filter_eq { all_rows ; goals ; 23 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; goals ; 23 } }", "tointer": "select the rows whose goals record is equal to 23 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "goals", "23"], "result": null, "ind": 0, "tointer": "select the rows whose goals record is equal to 23 .", "tostr": "filter_eq { all_rows ; goals ; 23 }"}, "player"], "result": "mehmet y\u0131lmaz", "ind": 2, "tostr": "hop { filter_eq { all_rows ; goals ; 23 } ; player }"}, "mehmet y\u0131lmaz"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; goals ; 23 } ; player } ; mehmet y\u0131lmaz }", "tointer": "the player record of this unqiue row is mehmet y\u0131lmaz ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; goals ; 23 } } ; eq { hop { filter_eq { all_rows ; goals ; 23 } ; player } ; mehmet y\u0131lmaz } } = true", "tointer": "select the rows whose goals record is equal to 23 . there is only one such row in the table . the player record of this unqiue row is mehmet y\u0131lmaz ."}, "logic_str": "and { only { filter_eq { all_rows ; goals ; 23 } } ; eq { hop { filter_eq { all_rows ; goals ; 23 } ; player } ; mehmet y\u0131lmaz } } = true", "interpret": "select the rows whose goals record is equal to 23 . there is only one such row in the table . the player record of this unqiue row is mehmet y\u0131lmaz .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "goals_7": 7, "23_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "mehmet y\u0131lmaz_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "goals_7": "goals", "23_8": "23", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "mehmet y\u0131lmaz_10": "mehmet y\u0131lmaz"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "goals_7": [0], "23_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "mehmet y\u0131lmaz_10": [3]}, "table_header": ["rank", "player", "goals", "apps", "rate"], "table_cont": [["1", "hami mand\u0131ral\u0131", "31", "54", "0.57"], ["2", "cemil turan", "30", "55", "0.55"], ["2", "fevzi zemzem", "30", "40", "0.75"], ["4", "tanju \u00e7olak", "26", "39", "0.67"], ["5", "\u00fcmit karan", "25", "43", "0.58"], ["5", "hakan \u015f\u00fck\u00fcr", "25", "68", "0.37"], ["7", "ertu\u011frul sa\u011flam", "24", "42", "0.57"], ["8", "bob\u00f4", "24", "38", "0.63"], ["9", "mustafa denizli", "24", "68", "0.35"], ["10", "mehmet y\u0131lmaz", "23", "34", "0.68"]], "query": "and { only { filter_eq { all_rows ; goals ; 23 } } ; eq { hop { filter_eq { all_rows ; goals ; 23 } ; player } ; mehmet y\u0131lmaz } } = true", "question": "mehmet y\u0131lmaz is the only turkish cup player that scored 23 goals ."}, {"topic": "list of south american countries by gdp ( ppp ) per capita", "wiki": "https://en.wikipedia.org/wiki/List_of_South_American_countries_by_GDP_%28PPP%29_per_capita", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2249087-1.html.csv", "action": "superlative", "sent": "chile had the highest 2008 gdp per capita according to the cia factbook .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "2008 ( cia factbook )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; 2008 ( cia factbook ) }"}, "nation"], "result": "chile", "ind": 1, "tostr": "hop { argmax { all_rows ; 2008 ( cia factbook ) } ; nation }"}, "chile"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; 2008 ( cia factbook ) } ; nation } ; chile } = true", "tointer": "select the row whose 2008 ( cia factbook ) record of all rows is maximum . the nation record of this row is chile ."}, "logic_str": "eq { hop { argmax { all_rows ; 2008 ( cia factbook ) } ; nation } ; chile } = true", "interpret": "select the row whose 2008 ( cia factbook ) record of all rows is maximum . the nation record of this row is chile .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "2008 (cia factbook)_5": 5, "nation_6": 6, "chile_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "2008 (cia factbook)_5": "2008 ( cia factbook )", "nation_6": "nation", "chile_7": "chile"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "2008 (cia factbook)_5": [0], "nation_6": [1], "chile_7": [2]}, "table_header": ["south american rank", "world rank", "nation", "2011 ( imf )", "2008 ( cia factbook )"], "table_cont": [["1", "51", "argentina", "17376", "14500"], ["2", "55", "chile", "16171", "15400"], ["3", "59", "uruguay", "15469", "12300"], ["4", "71", "venezuela", "12407", "13500"], ["5", "74", "brazil", "11845", "10513"], ["6", "82", "colombia", "10155", "9000"], ["7", "83", "peru", "10000", "8500"], ["8", "86", "suriname", "9492", "8900"], ["9", "91", "ecuador", "8335", "7700"], ["10", "96", "guyana", "7541", "4000"], ["11", "110", "paraguay", "5548", "4400"]], "query": "eq { hop { argmax { all_rows ; 2008 ( cia factbook ) } ; nation } ; chile } = true", "question": "chile had the highest 2008 gdp per capita according to the cia factbook ."}, {"topic": "list of longest - serving soap opera actors", "wiki": "https://en.wikipedia.org/wiki/List_of_longest-serving_soap_opera_actors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18772558-1.html.csv", "action": "superlative", "sent": "actor lesley saweard is the longest serving soap opera actor .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "duration"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; duration }"}, "actor"], "result": "lesley saweard", "ind": 1, "tostr": "hop { argmax { all_rows ; duration } ; actor }"}, "lesley saweard"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; duration } ; actor } ; lesley saweard } = true", "tointer": "select the row whose duration record of all rows is maximum . the actor record of this row is lesley saweard ."}, "logic_str": "eq { hop { argmax { all_rows ; duration } ; actor } ; lesley saweard } = true", "interpret": "select the row whose duration record of all rows is maximum . the actor record of this row is lesley saweard .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "duration_5": 5, "actor_6": 6, "lesley saweard_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "duration_5": "duration", "actor_6": "actor", "lesley saweard_7": "lesley saweard"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "duration_5": [0], "actor_6": [1], "lesley saweard_7": [2]}, "table_header": ["rank", "actor", "character", "soap opera", "years", "duration"], "table_cont": [["1", "lesley saweard", "christine barford", "the archers", "1953 -", "61 years"], ["2", "norman painting", "phil archer", "the archers", "1950 - 2009", "59 years"], ["3", "patricia greene", "jill archer", "the archers", "1957 -", "57 years"], ["4", "june spencer", "peggy woolley", "the archers", "1951 - 1953 , 1962 -", "54 years"], ["5", "william roache", "ken barlow", "coronation street", "1960 -", "54 years"], ["6", "helen wagner", "nancy hughes", "as the world turns", "1956 - 1981 , 1983 - 2010", "52 years"], ["7", "eileen derbyshire", "emily bishop", "coronation street", "1961 , 1962 - 1966 , 1967 -", "52 years"], ["8", "angela piper", "jennifer aldridge", "the archers", "1963 -", "51 years"], ["9", "don hastings", "bob hughes", "as the world turns", "1960 - 2010", "50 years"], ["10", "eileen fulton", "lisa grimaldi", "as the world turns", "1960 - 1965 , 1965 - 1983 , 1984 - 2010", "50 years"]], "query": "eq { hop { argmax { all_rows ; duration } ; actor } ; lesley saweard } = true", "question": "actor lesley saweard is the longest serving soap opera actor ."}, {"topic": "manny ayulo", "wiki": "https://en.wikipedia.org/wiki/Manny_Ayulo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1236164-3.html.csv", "action": "unique", "sent": "1951 was the only year when manny ayulo earned more than 0 points .", "annotation": {"scope": "all", "row": "2", "col": "5", "col_other": "1", "criterion": "greater_than", "value": "0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "points", "0"], "result": null, "ind": 0, "tointer": "select the rows whose points record is greater than 0 .", "tostr": "filter_greater { all_rows ; points ; 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; points ; 0 } }", "tointer": "select the rows whose points record is greater than 0 . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "points", "0"], "result": null, "ind": 0, "tointer": "select the rows whose points record is greater than 0 .", "tostr": "filter_greater { all_rows ; points ; 0 }"}, "year"], "result": "1951", "ind": 2, "tostr": "hop { filter_greater { all_rows ; points ; 0 } ; year }"}, "1951"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; points ; 0 } ; year } ; 1951 }", "tointer": "the year record of this unqiue row is 1951 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; points ; 0 } } ; eq { hop { filter_greater { all_rows ; points ; 0 } ; year } ; 1951 } } = true", "tointer": "select the rows whose points record is greater than 0 . there is only one such row in the table . the year record of this unqiue row is 1951 ."}, "logic_str": "and { only { filter_greater { all_rows ; points ; 0 } } ; eq { hop { filter_greater { all_rows ; points ; 0 } ; year } ; 1951 } } = true", "interpret": "select the rows whose points record is greater than 0 . there is only one such row in the table . the year record of this unqiue row is 1951 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "points_7": 7, "0_8": 8, "eq_3": 3, "num_hop_2": 2, "year_9": 9, "1951_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "points_7": "points", "0_8": "0", "eq_3": "eq", "num_hop_2": "num_hop", "year_9": "year", "1951_10": "1951"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "points_7": [0], "0_8": [0], "eq_3": [4], "num_hop_2": [3], "year_9": [2], "1951_10": [3]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1950", "coast grain", "maserati 8ctf", "offenhauser l4", "0"], ["1951", "jack hinkle", "kurtis kraft 3000", "offenhauser l4", "2"], ["1952", "coast grain", "lesovsky", "offenhauser l4", "0"], ["1953", "peter schmidt", "kuzma indy roadster", "offenhauser l4", "0"], ["1954", "peter schmidt", "kuzma indy roadster", "offenhauser l4", "0"], ["1955", "peter schmidt", "kurtis kraft 500c", "offenhauser l4", "0"]], "query": "and { only { filter_greater { all_rows ; points ; 0 } } ; eq { hop { filter_greater { all_rows ; points ; 0 } ; year } ; 1951 } } = true", "question": "1951 was the only year when manny ayulo earned more than 0 points ."}, {"topic": "northern nevada 4a region", "wiki": "https://en.wikipedia.org/wiki/Northern_Nevada_4A_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11044765-1.html.csv", "action": "ordinal", "sent": "in the northern nevada 4a region , carson school recorded the highest number of enrollment .", "annotation": {"row": "1", "col": "5", "order": "1", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "enrollment", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; enrollment ; 1 }"}, "school"], "result": "carson", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; enrollment ; 1 } ; school }"}, "carson"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; enrollment ; 1 } ; school } ; carson } = true", "tointer": "select the row whose enrollment record of all rows is 1st maximum . the school record of this row is carson ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; enrollment ; 1 } ; school } ; carson } = true", "interpret": "select the row whose enrollment record of all rows is 1st maximum . the school record of this row is carson .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "enrollment_5": 5, "1_6": 6, "school_7": 7, "carson_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "enrollment_5": "enrollment", "1_6": "1", "school_7": "school", "carson_8": "carson"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "enrollment_5": [0], "1_6": [0], "school_7": [1], "carson_8": [2]}, "table_header": ["school", "mascot", "location", "league", "enrollment"], "table_cont": [["carson", "senators", "carson city , nevada", "sierra", "2503"], ["damonte ranch", "mustangs", "reno , nevada", "sierra", "1253"], ["douglas", "tigers", "minden , nevada", "sierra", "1522"], ["galena", "grizzlies", "reno , nevada", "sierra", "1510"], ["hug", "hawks", "reno , nevada", "high desert", "1266"], ["manogue", "miners", "reno , nevada", "sierra", "650"], ["mcqueen", "lancers", "reno , nevada", "high desert", "1945"], ["north valleys", "panthers", "reno , nevada", "high desert", "2227"], ["reed", "raiders", "sparks , nevada", "high desert", "2464"], ["reno", "huskies", "reno , nevada", "high desert", "1896"], ["spanish springs", "cougars", "sparks , nevada", "high desert", "2186"], ["wooster", "colts", "reno , nevada", "sierra", "1519"]], "query": "eq { hop { nth_argmax { all_rows ; enrollment ; 1 } ; school } ; carson } = true", "question": "in the northern nevada 4a region , carson school recorded the highest number of enrollment ."}, {"topic": "hughes hall college boat club", "wiki": "https://en.wikipedia.org/wiki/Hughes_Hall_College_Boat_Club", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18880596-3.html.csv", "action": "superlative", "sent": "the best finish for the hughes hall college boat club was 36th .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "5", "value_mentioned": "yes", "max_or_min": "min", "other_col": "n/a", "subset": null}, "logic": {"func": "eq", "args": [{"func": "min", "args": ["all_rows", "finish position"], "result": "36th", "ind": 0, "tostr": "min { all_rows ; finish position }", "tointer": "the minimum finish position record of all rows is 36th ."}, "36th"], "result": true, "ind": 1, "tostr": "eq { min { all_rows ; finish position } ; 36th } = true", "tointer": "the minimum finish position record of all rows is 36th ."}, "logic_str": "eq { min { all_rows ; finish position } ; 36th } = true", "interpret": "the minimum finish position record of all rows is 36th .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "min_0": 0, "all_rows_3": 3, "finish position_4": 4, "36th_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "min_0": "min", "all_rows_3": "all_rows", "finish position_4": "finish position", "36th_5": "36th"}, "g_adj": {"eq_1": [2], "result_2": [], "min_0": [1], "all_rows_3": [0], "finish position_4": [0], "36th_5": [1]}, "table_header": ["year", "finish position", "1st day", "2nd day", "3rd day", "4th day"], "table_cont": [["2008", "50th", "bumped emmanuel", "rowed - over", "bumped by peterhouse", "rowed - over"], ["2009", "46th", "bumped trinity hall", "bumped jesus", "bumped robinson", "bumped girton"], ["2010", "43rd", "bumped peterhouse", "rowed - over", "bumped churchill", "bumped fitzwilliam"], ["2011", "39th", "bumped magdalene", "bumped 1st & 3rd trinity", "bumped lady margaret", "bumped selwyn"], ["2012", "36th", "bumped emmanuel", "bumped st catharine 's", "rowed - over", "bumped darwin"]], "query": "eq { min { all_rows ; finish position } ; 36th } = true", "question": "the best finish for the hughes hall college boat club was 36th ."}, {"topic": "cities of east asia", "wiki": "https://en.wikipedia.org/wiki/Cities_of_East_Asia", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16489766-7.html.csv", "action": "count", "sent": "8 of the cities in east asia are located in gyeonggi province .", "annotation": {"scope": "all", "criterion": "equal", "value": "gyeonggi", "result": "8", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "province", "gyeonggi"], "result": null, "ind": 0, "tointer": "select the rows whose province record fuzzily matches to gyeonggi .", "tostr": "filter_eq { all_rows ; province ; gyeonggi }"}], "result": "8", "ind": 1, "tostr": "count { filter_eq { all_rows ; province ; gyeonggi } }", "tointer": "select the rows whose province record fuzzily matches to gyeonggi . the number of such rows is 8 ."}, "8"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; province ; gyeonggi } } ; 8 } = true", "tointer": "select the rows whose province record fuzzily matches to gyeonggi . the number of such rows is 8 ."}, "logic_str": "eq { count { filter_eq { all_rows ; province ; gyeonggi } } ; 8 } = true", "interpret": "select the rows whose province record fuzzily matches to gyeonggi . the number of such rows is 8 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "province_5": 5, "gyeonggi_6": 6, "8_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "province_5": "province", "gyeonggi_6": "gyeonggi", "8_7": "8"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "province_5": [0], "gyeonggi_6": [0], "8_7": [2]}, "table_header": ["city", "korean", "hanja", "province", "population ( 2010 )"], "table_cont": [["seoul", "\uc11c\uc6b8", "\uc11c\uc6b8", "special city", "9794304"], ["busan", "\ubd80\uc0b0", "\u91dc\u5c71", "metropolitan city", "3414950"], ["incheon", "\uc778\ucc9c", "\u4ec1\u5ddd", "metropolitan city", "2662509"], ["daegu", "\ub300\uad6c", "\u5927\u90b1", "metropolitan city", "2446418"], ["daejeon", "\ub300\uc804", "\u5927\u7530", "metropolitan city", "1501859"], ["gwangju", "\uad11\uc8fc", "\u5149\u5dde", "metropolitan city", "1469293"], ["ulsan", "\uc6b8\uc0b0", "\u851a\u5c71", "metropolitan city", "1082567"], ["suwon", "\uc218\uc6d0", "\u6c34\u539f", "gyeonggi", "1071913"], ["changwon", "\ucc3d\uc6d0", "\u660c\u539f", "south gyeongsang", "1058021"], ["seongnam", "\uc131\ub0a8", "\u57ce\u5357", "gyeonggi", "949964"], ["goyang", "\uace0\uc591", "\u9ad8\u967d", "gyeonggi", "905076"], ["yongin", "\uc6a9\uc778", "\u9f8d\u4ec1", "gyeonggi", "856765"], ["bucheon", "\ubd80\ucc9c", "\u5bcc\u5ddd", "gyeonggi", "853039"], ["ansan", "\uc548\uc0b0", "\u5b89\u5c71", "gyeonggi", "728775"], ["cheongju", "\uccad\uc8fc", "\u6df8\u5dde", "north chungcheong", "666924"], ["jeonju", "\uc804\uc8fc", "\u5168\u5dde", "north jeolla", "649728"], ["anyang", "\uc548\uc591", "\u5b89\u990a", "gyeonggi", "602122"], ["cheonan", "\ucc9c\uc548", "\u5929\u5b89", "south chungcheong", "574623"], ["namyangju", "\ub0a8\uc591\uc8fc", "\u5357\u694a\u5dde", "gyeonggi", "529898"], ["pohang", "\ud3ec\ud56d", "\u6d66\u9805", "north gyeongsang", "511390"]], "query": "eq { count { filter_eq { all_rows ; province ; gyeonggi } } ; 8 } = true", "question": "8 of the cities in east asia are located in gyeonggi province ."}, {"topic": "le tour de filipinas", "wiki": "https://en.wikipedia.org/wiki/Le_Tour_de_Filipinas", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10694950-1.html.csv", "action": "comparative", "sent": "there were more stages in le tour de filipinas in 1975 than in 1976 .", "annotation": {"row_1": "19", "row_2": "20", "col": "3", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1975"], "result": null, "ind": 0, "tointer": "select the rows whose year record fuzzily matches to 1975 .", "tostr": "filter_eq { all_rows ; year ; 1975 }"}, "stages"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; year ; 1975 } ; stages }", "tointer": "select the rows whose year record fuzzily matches to 1975 . take the stages record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "1976"], "result": null, "ind": 1, "tointer": "select the rows whose year record fuzzily matches to 1976 .", "tostr": "filter_eq { all_rows ; year ; 1976 }"}, "stages"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; year ; 1976 } ; stages }", "tointer": "select the rows whose year record fuzzily matches to 1976 . take the stages record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; year ; 1975 } ; stages } ; hop { filter_eq { all_rows ; year ; 1976 } ; stages } } = true", "tointer": "select the rows whose year record fuzzily matches to 1975 . take the stages record of this row . select the rows whose year record fuzzily matches to 1976 . take the stages record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; year ; 1975 } ; stages } ; hop { filter_eq { all_rows ; year ; 1976 } ; stages } } = true", "interpret": "select the rows whose year record fuzzily matches to 1975 . take the stages record of this row . select the rows whose year record fuzzily matches to 1976 . take the stages record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "year_7": 7, "1975_8": 8, "stages_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "year_11": 11, "1976_12": 12, "stages_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "year_7": "year", "1975_8": "1975", "stages_9": "stages", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "year_11": "year", "1976_12": "1976", "stages_13": "stages"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "year_7": [0], "1975_8": [0], "stages_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "year_11": [1], "1976_12": [1], "stages_13": [3]}, "table_header": ["year", "date", "stages", "distance", "winner"], "table_cont": [["1955", "28 april - 1 may", "4", "418 km", "antonio arzala ( phi )"], ["1956", "23 - 27 may", "5", "1057 km", "antonio arzala ( phi )"], ["1957", "28 may - 7 june", "6", "1155 km", "rufino gabot ( phi )"], ["1958", "14 - 20 april", "7", "1517 km", "mamerto eden ( phi )"], ["1959", "12 - 19 april", "8", "1634 km", "antonio arzala ( phi )"], ["1960", "14 - 22 may", "9", "1648 km", "rodrigo abaquita ( phi )"], ["1961", "25 april - 7 may", "12", "2167 km", "jose moring , jr ( phi )"], ["1962", "26 march - 8 april", "12", "1870.23 km", "edmundo de guzman ( phi )"], ["1963", "21 april - 5 may", "14", "2334.38 km", "gonzalo recodos ( phi )"], ["1964", "19 april - 3 may", "14", "1967.60 km", "jose sumalde ( phi )"], ["1965", "25 april - 9 may", "14", "2049.31 km", "jose sumalde ( phi )"], ["1966", "23 april - 8 may", "15", "1999.82 km", "cornelio padilla , jr ( phi )"], ["1967", "12 - 19 april", "8", "1634 km", "cornelio padilla , jr ( phi )"], ["1968", "cancelled", "cancelled", "cancelled", "cancelled"], ["1969", "18 - 27 april", "10", "1208.40 km", "domingo quilban ( phi )"], ["1970 - 1972", "cancelled", "cancelled", "cancelled", "cancelled"], ["1973", "11 - 20 may", "10", "1214 km", "jesus garcia , jr ( phi )"], ["1974", "23 april - 12 may", "18", "2540.95 km", "teodorico rimarim ( phi )"], ["1975", "19 april - 4 may", "15", "2207.87 km", "samson etrata ( phi )"], ["1976", "21 april - 9 may", "6", "2200 km", "modesto bonzo ( phi )"]], "query": "greater { hop { filter_eq { all_rows ; year ; 1975 } ; stages } ; hop { filter_eq { all_rows ; year ; 1976 } ; stages } } = true", "question": "there were more stages in le tour de filipinas in 1975 than in 1976 ."}, {"topic": "rev. ( tv series )", "wiki": "https://en.wikipedia.org/wiki/Rev._%28TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27218002-2.html.csv", "action": "count", "sent": "james wood wrote 5 episodes of rev. for 2011 .", "annotation": {"scope": "all", "criterion": "equal", "value": "james wood", "result": "5", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "written by", "james wood"], "result": null, "ind": 0, "tointer": "select the rows whose written by record fuzzily matches to james wood .", "tostr": "filter_eq { all_rows ; written by ; james wood }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; written by ; james wood } }", "tointer": "select the rows whose written by record fuzzily matches to james wood . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; written by ; james wood } } ; 5 } = true", "tointer": "select the rows whose written by record fuzzily matches to james wood . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; written by ; james wood } } ; 5 } = true", "interpret": "select the rows whose written by record fuzzily matches to james wood . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "written by_5": 5, "james wood_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "written by_5": "written by", "james wood_6": "james wood", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "written by_5": [0], "james wood_6": [0], "5_7": [2]}, "table_header": ["episode", "title", "directed by", "written by", "originalairdate", "ratings"], "table_cont": [["1", "episode 1", "peter cattaneo", "james wood", "10 november 2011", "2.29 million"], ["2", "episode 2", "peter cattaneo", "james wood", "17 november 2011", "1.63 million"], ["3", "episode 3", "peter cattaneo", "james wood", "24 november 2011", "1.37 million"], ["4", "episode 4", "peter cattaneo", "james wood", "1 december 2011", "1.24 million"], ["5", "episode 5", "peter cattaneo", "fintan ryan", "8 december 2011", "1.24 million"], ["6", "episode 6", "peter cattaneo", "james wood", "15 december 2011", "1.62 million"]], "query": "eq { count { filter_eq { all_rows ; written by ; james wood } } ; 5 } = true", "question": "james wood wrote 5 episodes of rev. for 2011 ."}, {"topic": "list of european ultra prominent peaks", "wiki": "https://en.wikipedia.org/wiki/List_of_European_ultra_prominent_peaks", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18918776-7.html.csv", "action": "ordinal", "sent": "moldoveanu peak has the second highest elevation of all the european ultra prominent peaks .", "annotation": {"row": "3", "col": "3", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "elevation ( m )", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; elevation ( m ) ; 2 }"}, "peak"], "result": "moldoveanu peak", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; elevation ( m ) ; 2 } ; peak }"}, "moldoveanu peak"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; elevation ( m ) ; 2 } ; peak } ; moldoveanu peak } = true", "tointer": "select the row whose elevation ( m ) record of all rows is 2nd maximum . the peak record of this row is moldoveanu peak ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; elevation ( m ) ; 2 } ; peak } ; moldoveanu peak } = true", "interpret": "select the row whose elevation ( m ) record of all rows is 2nd maximum . the peak record of this row is moldoveanu peak .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "elevation (m)_5": 5, "2_6": 6, "peak_7": 7, "moldoveanu peak_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "elevation (m)_5": "elevation ( m )", "2_6": "2", "peak_7": "peak", "moldoveanu peak_8": "moldoveanu peak"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "elevation (m)_5": [0], "2_6": [0], "peak_7": [1], "moldoveanu peak_8": [2]}, "table_header": ["peak", "country", "elevation ( m )", "prominence ( m )", "col ( m )"], "table_cont": [["gerlachovsk\u00fd \u0161t\u00edt", "slovakia", "2655", "2355", "300"], ["parngu mare", "romania", "2519", "2103", "416"], ["moldoveanu peak", "romania", "2544", "2046", "498"], ["peleaga", "romania", "2509", "1759", "750"], ["pietrosul rodnei", "romania", "2303", "1565", "738"]], "query": "eq { hop { nth_argmax { all_rows ; elevation ( m ) ; 2 } ; peak } ; moldoveanu peak } = true", "question": "moldoveanu peak has the second highest elevation of all the european ultra prominent peaks ."}, {"topic": "washington redskins draft history", "wiki": "https://en.wikipedia.org/wiki/Washington_Redskins_draft_history", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17100961-44.html.csv", "action": "unique", "sent": "mike flater was the only player drafted from the colorado school of mines college .", "annotation": {"scope": "all", "row": "5", "col": "6", "col_other": "4", "criterion": "equal", "value": "colo school of mines", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "colo school of mines"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to colo school of mines .", "tostr": "filter_eq { all_rows ; college ; colo school of mines }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; college ; colo school of mines } }", "tointer": "select the rows whose college record fuzzily matches to colo school of mines . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "colo school of mines"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to colo school of mines .", "tostr": "filter_eq { all_rows ; college ; colo school of mines }"}, "name"], "result": "mike flater", "ind": 2, "tostr": "hop { filter_eq { all_rows ; college ; colo school of mines } ; name }"}, "mike flater"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; college ; colo school of mines } ; name } ; mike flater }", "tointer": "the name record of this unqiue row is mike flater ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; college ; colo school of mines } } ; eq { hop { filter_eq { all_rows ; college ; colo school of mines } ; name } ; mike flater } } = true", "tointer": "select the rows whose college record fuzzily matches to colo school of mines . there is only one such row in the table . the name record of this unqiue row is mike flater ."}, "logic_str": "and { only { filter_eq { all_rows ; college ; colo school of mines } } ; eq { hop { filter_eq { all_rows ; college ; colo school of mines } ; name } ; mike flater } } = true", "interpret": "select the rows whose college record fuzzily matches to colo school of mines . there is only one such row in the table . the name record of this unqiue row is mike flater .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "college_7": 7, "colo school of mines_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "mike flater_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "college_7": "college", "colo school of mines_8": "colo school of mines", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "mike flater_10": "mike flater"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "college_7": [0], "colo school of mines_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "mike flater_10": [3]}, "table_header": ["round", "pick", "overall", "name", "position", "college"], "table_cont": [["6", "14", "144", "jon keyworth", "rb", "colorado"], ["7", "24", "180", "mike varty", "lb", "northwestern"], ["8", "14", "196", "darwin robinson", "rb", "dakota state"], ["9", "10", "218", "mark sens", "de", "colorado"], ["9", "20", "228", "mike flater", "k", "colo school of mines"], ["9", "25", "233", "jim kennedy", "te", "colorado state"], ["10", "24", "258", "johnny vann", "db", "south dakota"], ["11", "22", "282", "joe miller", "ot", "villanova"], ["13", "20", "332", "stu o'dell", "lb", "indiana"], ["14", "23", "361", "don van galder", "qb", "utah"], ["16", "21", "411", "nate anderson", "rb", "eastern illinois"]], "query": "and { only { filter_eq { all_rows ; college ; colo school of mines } } ; eq { hop { filter_eq { all_rows ; college ; colo school of mines } ; name } ; mike flater } } = true", "question": "mike flater was the only player drafted from the colorado school of mines college ."}, {"topic": "fiba eurobasket 2007 squads", "wiki": "https://en.wikipedia.org/wiki/FIBA_EuroBasket_2007_squads", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12962773-13.html.csv", "action": "ordinal", "sent": "sacha giffa was the oldest player in the fiba eurobasket 2007 squad .", "annotation": {"row": "3", "col": "5", "order": "1", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "year born", "1"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; year born ; 1 }"}, "player"], "result": "sacha giffa", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; year born ; 1 } ; player }"}, "sacha giffa"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; year born ; 1 } ; player } ; sacha giffa } = true", "tointer": "select the row whose year born record of all rows is 1st minimum . the player record of this row is sacha giffa ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; year born ; 1 } ; player } ; sacha giffa } = true", "interpret": "select the row whose year born record of all rows is 1st minimum . the player record of this row is sacha giffa .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "year born_5": 5, "1_6": 6, "player_7": 7, "sacha giffa_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "year born_5": "year born", "1_6": "1", "player_7": "player", "sacha giffa_8": "sacha giffa"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "year born_5": [0], "1_6": [0], "player_7": [1], "sacha giffa_8": [2]}, "table_header": ["no", "player", "height", "position", "year born", "current club"], "table_cont": [["4", "joseph gomis", "1.80", "guard", "1978", "grupo capitol valladolid"], ["5", "pape badiane", "2.08", "center", "1980", "roanne"], ["6", "sacha giffa", "1.97", "forward", "1977", "strasbourg"], ["7", "yohann sangare", "1.92", "guard", "1983", "lyon - villeurbanne"], ["8", "yakhouba diawara", "2.01", "forward", "1982", "denver nuggets"], ["9", "tony parker", "1.86", "guard", "1982", "san antonio spurs"], ["10", "c\u00e9dric ferchaud", "1.94", "guard", "1980", "pau - orthez"], ["11", "florent pi\u00e9trus", "2.02", "forward", "1981", "unicaja m\u00e1laga"], ["12", "tariq kirksay", "1.98", "guard", "1978", "nancy"], ["13", "boris diaw", "2.03", "forward", "1982", "phoenix suns"], ["14", "ronny turiaf", "2.06", "center", "1983", "los angeles lakers"]], "query": "eq { hop { nth_argmin { all_rows ; year born ; 1 } ; player } ; sacha giffa } = true", "question": "sacha giffa was the oldest player in the fiba eurobasket 2007 squad ."}, {"topic": "1934 vfl season", "wiki": "https://en.wikipedia.org/wiki/1934_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790510-1.html.csv", "action": "majority", "sent": "the majority of the games of the 1934 vfl season listed had an attendance of over 16000 .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than", "value": "16000", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "crowd", "16000"], "result": true, "ind": 0, "tointer": "for the crowd records of all rows , most of them are greater than 16000 .", "tostr": "most_greater { all_rows ; crowd ; 16000 } = true"}, "logic_str": "most_greater { all_rows ; crowd ; 16000 } = true", "interpret": "for the crowd records of all rows , most of them are greater than 16000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "crowd_3": 3, "16000_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "crowd_3": "crowd", "16000_4": "16000"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "crowd_3": [0], "16000_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "16.13 ( 109 )", "st kilda", "11.7 ( 73 )", "corio oval", "15000", "5 may 1934"], ["fitzroy", "11.16 ( 82 )", "north melbourne", "10.11 ( 71 )", "brunswick street oval", "21000", "5 may 1934"], ["essendon", "19.11 ( 125 )", "footscray", "16.18 ( 114 )", "windy hill", "21000", "5 may 1934"], ["richmond", "18.14 ( 122 )", "melbourne", "12.9 ( 81 )", "punt road oval", "17000", "5 may 1934"], ["south melbourne", "19.13 ( 127 )", "collingwood", "13.14 ( 92 )", "lake oval", "38000", "5 may 1934"], ["hawthorn", "12.8 ( 80 )", "carlton", "17.26 ( 128 )", "glenferrie oval", "17000", "5 may 1934"]], "query": "most_greater { all_rows ; crowd ; 16000 } = true", "question": "the majority of the games of the 1934 vfl season listed had an attendance of over 16000 ."}, {"topic": "powerade tigers all - time roster", "wiki": "https://en.wikipedia.org/wiki/Powerade_Tigers_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15463188-8.html.csv", "action": "ordinal", "sent": "bakari hendrix is the latest entry player in the powerade tigers all - time roster .", "annotation": {"row": "4", "col": "4", "order": "1", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "season", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; season ; 1 }"}, "name"], "result": "bakari hendrix", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; season ; 1 } ; name }"}, "bakari hendrix"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; season ; 1 } ; name } ; bakari hendrix } = true", "tointer": "select the row whose season record of all rows is 1st maximum . the name record of this row is bakari hendrix ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; season ; 1 } ; name } ; bakari hendrix } = true", "interpret": "select the row whose season record of all rows is 1st maximum . the name record of this row is bakari hendrix .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "season_5": 5, "1_6": 6, "name_7": 7, "bakari hendrix_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "season_5": "season", "1_6": "1", "name_7": "name", "bakari hendrix_8": "bakari hendrix"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "season_5": [0], "1_6": [0], "name_7": [1], "bakari hendrix_8": [2]}, "table_header": ["name", "position", "number", "season", "acquisition via"], "table_cont": [["ron hale", "forward", "22", "2002", "import"], ["rudy hatfield", "forward", "99", "2002 - 2005", "free agency"], ["bong hawkins", "forward", "16", "2002", "free agency"], ["bakari hendrix", "forward", "23", "2005", "import"], ["reynel hugnatan", "forward", "21", "2003 - 2005", "rookie draft"]], "query": "eq { hop { nth_argmax { all_rows ; season ; 1 } ; name } ; bakari hendrix } = true", "question": "bakari hendrix is the latest entry player in the powerade tigers all - time roster ."}, {"topic": "yuki takahashi", "wiki": "https://en.wikipedia.org/wiki/Yuki_Takahashi", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15590360-2.html.csv", "action": "superlative", "sent": "the 2002-2008 season of yuki takahashi had the highest number of podiums of all the other seasons .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "podiums"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; podiums }"}, "season"], "result": "2002 - 2008", "ind": 1, "tostr": "hop { argmax { all_rows ; podiums } ; season }"}, "2002 - 2008"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; podiums } ; season } ; 2002 - 2008 } = true", "tointer": "select the row whose podiums record of all rows is maximum . the season record of this row is 2002 - 2008 ."}, "logic_str": "eq { hop { argmax { all_rows ; podiums } ; season } ; 2002 - 2008 } = true", "interpret": "select the row whose podiums record of all rows is maximum . the season record of this row is 2002 - 2008 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "podiums_5": 5, "season_6": 6, "2002 - 2008_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "podiums_5": "podiums", "season_6": "season", "2002 - 2008_7": "2002 - 2008"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "podiums_5": [0], "season_6": [1], "2002 - 2008_7": [2]}, "table_header": ["class", "season", "race", "podiums", "pole"], "table_cont": [["125 cc", "2001", "1", "0", "0"], ["250 cc", "2002 - 2008", "65", "7", "0"], ["motogp", "2009", "7", "0", "0"], ["moto2", "2010 -", "62", "4", "0"], ["total", "2002 - present", "135", "11", "0"]], "query": "eq { hop { argmax { all_rows ; podiums } ; season } ; 2002 - 2008 } = true", "question": "the 2002-2008 season of yuki takahashi had the highest number of podiums of all the other seasons ."}, {"topic": "1979 vfl season", "wiki": "https://en.wikipedia.org/wiki/1979_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10823719-9.html.csv", "action": "count", "sent": "in the 1979 vfl season , when the away team had under 20 points , there were two time when the crowd was under 20000 .", "annotation": {"scope": "subset", "criterion": "less_than", "value": "20000", "result": "2", "col": "6", "subset": {"col": "4", "criterion": "less_than", "value": "20"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_less", "args": [{"func": "filter_less", "args": ["all_rows", "away team score", "20"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; away team score ; 20 }", "tointer": "select the rows whose away team score record is less than 20 ."}, "crowd", "20000"], "result": null, "ind": 1, "tointer": "select the rows whose away team score record is less than 20 . among these rows , select the rows whose crowd record is less than 20000 .", "tostr": "filter_less { filter_less { all_rows ; away team score ; 20 } ; crowd ; 20000 }"}], "result": "2", "ind": 2, "tostr": "count { filter_less { filter_less { all_rows ; away team score ; 20 } ; crowd ; 20000 } }", "tointer": "select the rows whose away team score record is less than 20 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_less { filter_less { all_rows ; away team score ; 20 } ; crowd ; 20000 } } ; 2 } = true", "tointer": "select the rows whose away team score record is less than 20 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_less { filter_less { all_rows ; away team score ; 20 } ; crowd ; 20000 } } ; 2 } = true", "interpret": "select the rows whose away team score record is less than 20 . among these rows , select the rows whose crowd record is less than 20000 . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_less_1": 1, "filter_less_0": 0, "all_rows_5": 5, "away team score_6": 6, "20_7": 7, "crowd_8": 8, "20000_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_less_1": "filter_less", "filter_less_0": "filter_less", "all_rows_5": "all_rows", "away team score_6": "away team score", "20_7": "20", "crowd_8": "crowd", "20000_9": "20000", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_less_1": [2], "filter_less_0": [1], "all_rows_5": [0], "away team score_6": [0], "20_7": [0], "crowd_8": [1], "20000_9": [1], "2_10": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["melbourne", "17.9 ( 111 )", "north melbourne", "23.18 ( 156 )", "mcg", "23261", "2 june 1979"], ["fitzroy", "18.15 ( 123 )", "st kilda", "11.12 ( 78 )", "junction oval", "14963", "2 june 1979"], ["collingwood", "19.18 ( 132 )", "richmond", "10.20 ( 80 )", "victoria park", "31474", "2 june 1979"], ["hawthorn", "16.12 ( 108 )", "essendon", "17.14 ( 116 )", "princes park", "24875", "2 june 1979"], ["footscray", "11.12 ( 78 )", "carlton", "18.19 ( 127 )", "western oval", "21362", "2 june 1979"], ["geelong", "18.15 ( 123 )", "south melbourne", "17.8 ( 110 )", "vfl park", "15750", "2 june 1979"]], "query": "eq { count { filter_less { filter_less { all_rows ; away team score ; 20 } ; crowd ; 20000 } } ; 2 } = true", "question": "in the 1979 vfl season , when the away team had under 20 points , there were two time when the crowd was under 20000 ."}, {"topic": "1967 vfl season", "wiki": "https://en.wikipedia.org/wiki/1967_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10808681-4.html.csv", "action": "majority", "sent": "the majority of games had over 10000 crowd attendance in the 1967 vfl season .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than", "value": "10000", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "crowd", "10000"], "result": true, "ind": 0, "tointer": "for the crowd records of all rows , most of them are greater than 10000 .", "tostr": "most_greater { all_rows ; crowd ; 10000 } = true"}, "logic_str": "most_greater { all_rows ; crowd ; 10000 } = true", "interpret": "for the crowd records of all rows , most of them are greater than 10000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "crowd_3": 3, "10000_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "crowd_3": "crowd", "10000_4": "10000"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "crowd_3": [0], "10000_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["north melbourne", "10.8 ( 68 )", "richmond", "11.22 ( 88 )", "arden street oval", "12750", "6 may 1967"], ["hawthorn", "10.6 ( 66 )", "st kilda", "15.11 ( 101 )", "glenferrie oval", "20352", "6 may 1967"], ["fitzroy", "9.10 ( 64 )", "geelong", "22.13 ( 145 )", "princes park", "9747", "6 may 1967"], ["collingwood", "13.17 ( 95 )", "footscray", "5.7 ( 37 )", "victoria park", "21855", "6 may 1967"], ["south melbourne", "18.19 ( 127 )", "essendon", "13.10 ( 88 )", "lake oval", "18756", "6 may 1967"], ["melbourne", "5.15 ( 45 )", "carlton", "16.8 ( 104 )", "mcg", "48513", "6 may 1967"]], "query": "most_greater { all_rows ; crowd ; 10000 } = true", "question": "the majority of games had over 10000 crowd attendance in the 1967 vfl season ."}, {"topic": "croatian bol ladies open", "wiki": "https://en.wikipedia.org/wiki/Croatian_Bol_Ladies_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16157440-2.html.csv", "action": "majority", "sent": "the majority of croatian bol ladies open competitions did not end in walkovers .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "not_equal", "value": "walkover", "subset": null}, "logic": {"func": "most_str_not_eq", "args": ["all_rows", "score", "walkover"], "result": true, "ind": 0, "tointer": "for the score records of all rows , most of them do not match to walkover .", "tostr": "most_not_eq { all_rows ; score ; walkover } = true"}, "logic_str": "most_not_eq { all_rows ; score ; walkover } = true", "interpret": "for the score records of all rows , most of them do not match to walkover .", "num_func": 1, "nid": 1, "g_ids": {"most_str_not_eq_0": 0, "result_1": 1, "all_rows_2": 2, "score_3": 3, "walkover_4": 4}, "g_ids_features": {"most_str_not_eq_0": "most_str_not_eq", "result_1": "true", "all_rows_2": "all_rows", "score_3": "score", "walkover_4": "walkover"}, "g_adj": {"most_str_not_eq_0": [1], "result_1": [], "all_rows_2": [0], "score_3": [0], "walkover_4": [0]}, "table_header": ["year", "category", "champions", "runners - up", "score"], "table_cont": [["1991", "v", "laura golarsa magdalena maleeva", "sandra cecchini laura garrone", "walkover"], ["1995", "iii", "mercedes paz rene simpson", "laura golarsa irina sp\u00eerlea", "7 - 5 , 6 - 2"], ["1996", "iv", "laura montalvo paola su\u00e1rez", "alexia dechaume alexandra fusai", "6 - 7 , 6 - 3 , 6 - 4"], ["1997", "iv", "laura montalvo henrieta nagyov\u00e1", "mar\u00eda jos\u00e9 gaidano marion maruska", "6 - 3 , 6 - 1"], ["1998", "iva", "laura montalvo paola su\u00e1rez", "joannette kruger mirjana lu\u010di\u0107", "walkover"], ["1999", "iv", "jelena kostani\u0107 michaela pa\u0161tikov\u00e1", "meghann shaughnessy andreea vanc", "7 - 5 , 6 - 7 , 6 - 2"], ["2000", "iii", "julie halard corina morariu", "tina kri\u017ean katarina srebotnik", "6 - 2 , 6 - 2"], ["2001", "iii", "mar\u00eda mart\u00ednez anabel medina", "nadia petrova tina pisnik", "7 - 5 , 6 - 4"], ["2002", "iii", "tathiana garbin angelique widjaja", "elena bovina henrieta nagyov\u00e1", "7 - 5 , 3 - 6 , 6 - 4"], ["2003", "iii", "petra mandula patricia wartusch", "emmanuelle gagliardi patty schnyder", "6 - 3 , 6 - 2"]], "query": "most_not_eq { all_rows ; score ; walkover } = true", "question": "the majority of croatian bol ladies open competitions did not end in walkovers ."}, {"topic": "2006 - 07 ta\u00e7a de portugal", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_Ta%C3%A7a_de_Portugal", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10287593-1.html.csv", "action": "majority", "sent": "most of the rounds included 10 or more clubs .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "greater_than", "value": "10", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "clubs involved", "10"], "result": true, "ind": 0, "tointer": "for the clubs involved records of all rows , most of them are greater than 10 .", "tostr": "most_greater { all_rows ; clubs involved ; 10 } = true"}, "logic_str": "most_greater { all_rows ; clubs involved ; 10 } = true", "interpret": "for the clubs involved records of all rows , most of them are greater than 10 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "clubs involved_3": 3, "10_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "clubs involved_3": "clubs involved", "10_4": "10"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "clubs involved_3": [0], "10_4": [0]}, "table_header": ["round", "date ( s )", "clubs from the previous round", "clubs involved", "fixtures"], "table_cont": [["first round", "3 september 2006", "none", "127", "60"], ["second round", "24 september 2006", "60 winners from the first round", "122", "56"], ["third round", "11 - 12 november 2006", "56 winners from the second round", "81", "40"], ["fourth round", "21 december 2006 6 - 7 january 2007", "40 winners from third round", "57", "28"], ["fifth round", "21 january 2007", "28 winners from fourth round", "27", "13"], ["sixth round", "10 february 2007", "13 winners from fifth round", "15", "7"], ["quarter - finals", "28 february 2006 25 march 2007", "7 winners from sixth round", "8", "4"], ["semi - finals", "18 - 19 april 2007", "4 winners from the quarterfinals", "4", "2"], ["final", "27 may 2007", "2 winners from the semifinals", "2", "1"]], "query": "most_greater { all_rows ; clubs involved ; 10 } = true", "question": "most of the rounds included 10 or more clubs ."}, {"topic": "kings county , new brunswick", "wiki": "https://en.wikipedia.org/wiki/Kings_County%2C_New_Brunswick", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-171236-1.html.csv", "action": "comparative", "sent": "regarding the towns in kings county , new brunswick , the town of hampton has a larger area ( km2 ) compared to the town of sussex .", "annotation": {"row_1": "5", "row_2": "6", "col": "3", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "official name", "hampton"], "result": null, "ind": 0, "tointer": "select the rows whose official name record fuzzily matches to hampton .", "tostr": "filter_eq { all_rows ; official name ; hampton }"}, "area km 2"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; official name ; hampton } ; area km 2 }", "tointer": "select the rows whose official name record fuzzily matches to hampton . take the area km 2 record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "official name", "sussex corner"], "result": null, "ind": 1, "tointer": "select the rows whose official name record fuzzily matches to sussex corner .", "tostr": "filter_eq { all_rows ; official name ; sussex corner }"}, "area km 2"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; official name ; sussex corner } ; area km 2 }", "tointer": "select the rows whose official name record fuzzily matches to sussex corner . take the area km 2 record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; official name ; hampton } ; area km 2 } ; hop { filter_eq { all_rows ; official name ; sussex corner } ; area km 2 } } = true", "tointer": "select the rows whose official name record fuzzily matches to hampton . take the area km 2 record of this row . select the rows whose official name record fuzzily matches to sussex corner . take the area km 2 record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; official name ; hampton } ; area km 2 } ; hop { filter_eq { all_rows ; official name ; sussex corner } ; area km 2 } } = true", "interpret": "select the rows whose official name record fuzzily matches to hampton . take the area km 2 record of this row . select the rows whose official name record fuzzily matches to sussex corner . take the area km 2 record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "official name_7": 7, "hampton_8": 8, "area km 2_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "official name_11": 11, "sussex corner_12": 12, "area km 2_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "official name_7": "official name", "hampton_8": "hampton", "area km 2_9": "area km 2", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "official name_11": "official name", "sussex corner_12": "sussex corner", "area km 2_13": "area km 2"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "official name_7": [0], "hampton_8": [0], "area km 2_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "official name_11": [1], "sussex corner_12": [1], "area km 2_13": [3]}, "table_header": ["official name", "status", "area km 2", "population", "census ranking"], "table_cont": [["quispamsis", "town", "57.06", "17886", "231 of 5008"], ["rothesay", "town", "34.73", "11947", "336 of 5008"], ["grand bay - westfield", "town", "59.73", "5117", "693 of 5008"], ["sussex", "town", "9.03", "4312", "780 of 5008"], ["hampton", "town", "21.00", "4292", "782 of 5008"], ["sussex corner", "village", "9.43", "1495", "1609 of 5008"], ["norton", "village", "75.35", "1301", "1757 of 5008"]], "query": "greater { hop { filter_eq { all_rows ; official name ; hampton } ; area km 2 } ; hop { filter_eq { all_rows ; official name ; sussex corner } ; area km 2 } } = true", "question": "regarding the towns in kings county , new brunswick , the town of hampton has a larger area ( km2 ) compared to the town of sussex ."}, {"topic": "2005 - 06 philadelphia flyers season", "wiki": "https://en.wikipedia.org/wiki/2005%E2%80%9306_Philadelphia_Flyers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14159731-3.html.csv", "action": "ordinal", "sent": "the october 7 game in the 2005 - 06 philadelphia flyers season has the second highest attendance .", "annotation": {"row": "2", "col": "6", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 2 }"}, "date"], "result": "october 7", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 2 } ; date }"}, "october 7"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 7 } = true", "tointer": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is october 7 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 7 } = true", "interpret": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is october 7 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "2_6": 6, "date_7": 7, "october 7_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "2_6": "2", "date_7": "date", "october 7_8": "october 7"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "2_6": [0], "date_7": [1], "october 7_8": [2]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["october 5", "ny rangers", "5 - 3", "philadelphia", "esche", "19821", "0 - 1 - 0"], ["october 7", "new jersey", "2 - 5", "philadelphia", "niittymaki", "19590", "1 - 1 - 0"], ["october 11", "philadelphia", "2 - 4", "toronto", "esche", "19391", "1 - 2 - 0"], ["october 14", "pittsburgh", "5 - 6", "philadelphia", "niittymaki", "19566", "2 - 2 - 0"], ["october 15", "ny islanders", "1 - 5", "philadelphia", "esche", "19543", "3 - 2 - 0"], ["october 22", "philadelphia", "5 - 2", "toronto", "esche", "19391", "4 - 2 - 0"], ["october 25", "philadelphia", "2 - 3", "montreal", "esche", "n / a", "4 - 2 - 1"], ["october 27", "florida", "4 - 5", "philadelphia", "esche", "19533", "5 - 2 - 1"], ["october 28", "philadelphia", "6 - 8", "carolina", "niittymaki", "18165", "5 - 3 - 1"], ["october 30", "philadelphia", "5 - 3", "ottawa", "esche", "19335", "6 - 3 - 1"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 7 } = true", "question": "the october 7 game in the 2005 - 06 philadelphia flyers season has the second highest attendance ."}, {"topic": "croatian bol ladies open", "wiki": "https://en.wikipedia.org/wiki/Croatian_Bol_Ladies_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16157440-2.html.csv", "action": "unique", "sent": "1995 was the only year that mercedes paz and rene simpson won the croatian bol ladies open .", "annotation": {"scope": "all", "row": "2", "col": "3", "col_other": "1", "criterion": "equal", "value": "mercedes paz rene simpson", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "champions", "mercedes paz rene simpson"], "result": null, "ind": 0, "tointer": "select the rows whose champions record fuzzily matches to mercedes paz rene simpson .", "tostr": "filter_eq { all_rows ; champions ; mercedes paz rene simpson }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; champions ; mercedes paz rene simpson } }", "tointer": "select the rows whose champions record fuzzily matches to mercedes paz rene simpson . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "champions", "mercedes paz rene simpson"], "result": null, "ind": 0, "tointer": "select the rows whose champions record fuzzily matches to mercedes paz rene simpson .", "tostr": "filter_eq { all_rows ; champions ; mercedes paz rene simpson }"}, "year"], "result": "1995", "ind": 2, "tostr": "hop { filter_eq { all_rows ; champions ; mercedes paz rene simpson } ; year }"}, "1995"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; champions ; mercedes paz rene simpson } ; year } ; 1995 }", "tointer": "the year record of this unqiue row is 1995 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; champions ; mercedes paz rene simpson } } ; eq { hop { filter_eq { all_rows ; champions ; mercedes paz rene simpson } ; year } ; 1995 } } = true", "tointer": "select the rows whose champions record fuzzily matches to mercedes paz rene simpson . there is only one such row in the table . the year record of this unqiue row is 1995 ."}, "logic_str": "and { only { filter_eq { all_rows ; champions ; mercedes paz rene simpson } } ; eq { hop { filter_eq { all_rows ; champions ; mercedes paz rene simpson } ; year } ; 1995 } } = true", "interpret": "select the rows whose champions record fuzzily matches to mercedes paz rene simpson . there is only one such row in the table . the year record of this unqiue row is 1995 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "champions_7": 7, "mercedes paz rene simpson_8": 8, "eq_3": 3, "num_hop_2": 2, "year_9": 9, "1995_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "champions_7": "champions", "mercedes paz rene simpson_8": "mercedes paz rene simpson", "eq_3": "eq", "num_hop_2": "num_hop", "year_9": "year", "1995_10": "1995"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "champions_7": [0], "mercedes paz rene simpson_8": [0], "eq_3": [4], "num_hop_2": [3], "year_9": [2], "1995_10": [3]}, "table_header": ["year", "category", "champions", "runners - up", "score"], "table_cont": [["1991", "v", "laura golarsa magdalena maleeva", "sandra cecchini laura garrone", "walkover"], ["1995", "iii", "mercedes paz rene simpson", "laura golarsa irina sp\u00eerlea", "7 - 5 , 6 - 2"], ["1996", "iv", "laura montalvo paola su\u00e1rez", "alexia dechaume alexandra fusai", "6 - 7 , 6 - 3 , 6 - 4"], ["1997", "iv", "laura montalvo henrieta nagyov\u00e1", "mar\u00eda jos\u00e9 gaidano marion maruska", "6 - 3 , 6 - 1"], ["1998", "iva", "laura montalvo paola su\u00e1rez", "joannette kruger mirjana lu\u010di\u0107", "walkover"], ["1999", "iv", "jelena kostani\u0107 michaela pa\u0161tikov\u00e1", "meghann shaughnessy andreea vanc", "7 - 5 , 6 - 7 , 6 - 2"], ["2000", "iii", "julie halard corina morariu", "tina kri\u017ean katarina srebotnik", "6 - 2 , 6 - 2"], ["2001", "iii", "mar\u00eda mart\u00ednez anabel medina", "nadia petrova tina pisnik", "7 - 5 , 6 - 4"], ["2002", "iii", "tathiana garbin angelique widjaja", "elena bovina henrieta nagyov\u00e1", "7 - 5 , 3 - 6 , 6 - 4"], ["2003", "iii", "petra mandula patricia wartusch", "emmanuelle gagliardi patty schnyder", "6 - 3 , 6 - 2"]], "query": "and { only { filter_eq { all_rows ; champions ; mercedes paz rene simpson } } ; eq { hop { filter_eq { all_rows ; champions ; mercedes paz rene simpson } ; year } ; 1995 } } = true", "question": "1995 was the only year that mercedes paz and rene simpson won the croatian bol ladies open ."}, {"topic": "2007 manx grand prix", "wiki": "https://en.wikipedia.org/wiki/2007_Manx_Grand_Prix", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11972799-5.html.csv", "action": "aggregation", "sent": "in the 2007 manx gran prix , the average speed of the top 10 riders was 97.34 mph .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "97.34", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "speed"], "result": "97.34", "ind": 0, "tostr": "avg { all_rows ; speed }"}, "97.34"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; speed } ; 97.34 } = true", "tointer": "the average of the speed record of all rows is 97.34 ."}, "logic_str": "round_eq { avg { all_rows ; speed } ; 97.34 } = true", "interpret": "the average of the speed record of all rows is 97.34 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "speed_4": 4, "97.34_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "speed_4": "speed", "97.34_5": "97.34"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "speed_4": [0], "97.34_5": [1]}, "table_header": ["rank", "rider", "team", "speed", "time"], "table_cont": [["1", "roy richardson", "349cc drixton honda", "101.545 mph", "1:31.04.39"], ["2", "ryan farquhar", "349cc k4 honda", "100.755 mph", "1:29.52.41"], ["3", "chris mcgahan", "350cc honda", "100.238 mph", "1:30.20.24"], ["4", "john goodall", "349cc ajs 7r", "98.191 mph", "1:32.13.21"], ["5", "steve elliot", "349cc honda", "97.573 mph", "1:32.48.24"], ["6", "tony myres", "349cc manx norton", "96.776 mph", "1:34.21.19"], ["7", "rich hawkins", "349cc ducati", "96.672 mph", "1:33.40.14"], ["8", "dave madsen - mygdal", "349cc honda", "94.891 mph", "1:35.25.62"], ["9", "pete swallow", "348cc petty manx", "93.804 mph", "1:36.32.01"], ["10", "andy reynolds", "348cc honda", "93.563 mph", "1:36.46.93"]], "query": "round_eq { avg { all_rows ; speed } ; 97.34 } = true", "question": "in the 2007 manx gran prix , the average speed of the top 10 riders was 97.34 mph ."}, {"topic": "list of european ultra prominent peaks", "wiki": "https://en.wikipedia.org/wiki/List_of_European_ultra_prominent_peaks", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18918776-7.html.csv", "action": "unique", "sent": "the only peak with an elevation of under 2400 feet is pietrosul rodnei .", "annotation": {"scope": "all", "row": "5", "col": "3", "col_other": "1", "criterion": "less_than", "value": "2400", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "elevation ( m )", "2400"], "result": null, "ind": 0, "tointer": "select the rows whose elevation ( m ) record is less than 2400 .", "tostr": "filter_less { all_rows ; elevation ( m ) ; 2400 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; elevation ( m ) ; 2400 } }", "tointer": "select the rows whose elevation ( m ) record is less than 2400 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "elevation ( m )", "2400"], "result": null, "ind": 0, "tointer": "select the rows whose elevation ( m ) record is less than 2400 .", "tostr": "filter_less { all_rows ; elevation ( m ) ; 2400 }"}, "peak"], "result": "pietrosul rodnei", "ind": 2, "tostr": "hop { filter_less { all_rows ; elevation ( m ) ; 2400 } ; peak }"}, "pietrosul rodnei"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; elevation ( m ) ; 2400 } ; peak } ; pietrosul rodnei }", "tointer": "the peak record of this unqiue row is pietrosul rodnei ."}], "result": true, "ind": 4, "tostr": "and { only { filter_less { all_rows ; elevation ( m ) ; 2400 } } ; eq { hop { filter_less { all_rows ; elevation ( m ) ; 2400 } ; peak } ; pietrosul rodnei } } = true", "tointer": "select the rows whose elevation ( m ) record is less than 2400 . there is only one such row in the table . the peak record of this unqiue row is pietrosul rodnei ."}, "logic_str": "and { only { filter_less { all_rows ; elevation ( m ) ; 2400 } } ; eq { hop { filter_less { all_rows ; elevation ( m ) ; 2400 } ; peak } ; pietrosul rodnei } } = true", "interpret": "select the rows whose elevation ( m ) record is less than 2400 . there is only one such row in the table . the peak record of this unqiue row is pietrosul rodnei .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_less_0": 0, "all_rows_6": 6, "elevation (m)_7": 7, "2400_8": 8, "str_eq_3": 3, "str_hop_2": 2, "peak_9": 9, "pietrosul rodnei_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_6": "all_rows", "elevation (m)_7": "elevation ( m )", "2400_8": "2400", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "peak_9": "peak", "pietrosul rodnei_10": "pietrosul rodnei"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_less_0": [1, 2], "all_rows_6": [0], "elevation (m)_7": [0], "2400_8": [0], "str_eq_3": [4], "str_hop_2": [3], "peak_9": [2], "pietrosul rodnei_10": [3]}, "table_header": ["peak", "country", "elevation ( m )", "prominence ( m )", "col ( m )"], "table_cont": [["gerlachovsk\u00fd \u0161t\u00edt", "slovakia", "2655", "2355", "300"], ["parngu mare", "romania", "2519", "2103", "416"], ["moldoveanu peak", "romania", "2544", "2046", "498"], ["peleaga", "romania", "2509", "1759", "750"], ["pietrosul rodnei", "romania", "2303", "1565", "738"]], "query": "and { only { filter_less { all_rows ; elevation ( m ) ; 2400 } } ; eq { hop { filter_less { all_rows ; elevation ( m ) ; 2400 } ; peak } ; pietrosul rodnei } } = true", "question": "the only peak with an elevation of under 2400 feet is pietrosul rodnei ."}, {"topic": "weightlifting at the 2007 pan american games", "wiki": "https://en.wikipedia.org/wiki/Weightlifting_at_the_2007_Pan_American_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17703223-7.html.csv", "action": "unique", "sent": "jo\u00ebl mackenzie ( cub ) is the only athlete with a snatch of more than 170.0 in weightlifting at the 2007 pan american games .", "annotation": {"scope": "all", "row": "1", "col": "3", "col_other": "1", "criterion": "greater_than", "value": "170.0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "snatch", "170.0"], "result": null, "ind": 0, "tointer": "select the rows whose snatch record is greater than 170.0 .", "tostr": "filter_greater { all_rows ; snatch ; 170.0 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; snatch ; 170.0 } }", "tointer": "select the rows whose snatch record is greater than 170.0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "snatch", "170.0"], "result": null, "ind": 0, "tointer": "select the rows whose snatch record is greater than 170.0 .", "tostr": "filter_greater { all_rows ; snatch ; 170.0 }"}, "name"], "result": "jo\u00ebl mackenzie ( cub )", "ind": 2, "tostr": "hop { filter_greater { all_rows ; snatch ; 170.0 } ; name }"}, "jo\u00ebl mackenzie ( cub )"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; snatch ; 170.0 } ; name } ; jo\u00ebl mackenzie ( cub ) }", "tointer": "the name record of this unqiue row is jo\u00ebl mackenzie ( cub ) ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; snatch ; 170.0 } } ; eq { hop { filter_greater { all_rows ; snatch ; 170.0 } ; name } ; jo\u00ebl mackenzie ( cub ) } } = true", "tointer": "select the rows whose snatch record is greater than 170.0 . there is only one such row in the table . the name record of this unqiue row is jo\u00ebl mackenzie ( cub ) ."}, "logic_str": "and { only { filter_greater { all_rows ; snatch ; 170.0 } } ; eq { hop { filter_greater { all_rows ; snatch ; 170.0 } ; name } ; jo\u00ebl mackenzie ( cub ) } } = true", "interpret": "select the rows whose snatch record is greater than 170.0 . there is only one such row in the table . the name record of this unqiue row is jo\u00ebl mackenzie ( cub ) .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "snatch_7": 7, "170.0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "jo\u00ebl mackenzie ( cub )_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "snatch_7": "snatch", "170.0_8": "170.0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "jo\u00ebl mackenzie ( cub )_10": "jo\u00ebl mackenzie ( cub )"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "snatch_7": [0], "170.0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "jo\u00ebl mackenzie ( cub )_10": [3]}, "table_header": ["name", "bodyweight", "snatch", "clean & jerk", "total ( kg )"], "table_cont": [["jo\u00ebl mackenzie ( cub )", "101.40", "175.0", "205.0", "380.0"], ["pedro stetsiuk ( arg )", "102.45", "160.0", "180.0", "340.0"], ["damian abbiate ( arg )", "104.45", "150.0", "188.0", "338.0"], ["bruno brand\u00e3o ( bra )", "99.10", "157.0", "180.0", "337.0"], ["christian l\u00f3pez ( gua )", "104.70", "153.0", "182.0", "335.0"], ["v\u00edctor osorio ( chi )", "103.05", "140.0", "176.0", "316.0"], ["ivorn mcknee ( bar )", "103.25", "140.0", "-", "dnf"], ["jos\u00e9 espinoza ( nca )", "99.40", "-", "-", "dnf"], ["boris burov ( ecu )", "100.40", "-", "-", "dnf"], ["akos sandor ( can )", "104.95", "-", "-", "dnf"], ["fabr\u00edcio mafra ( bra )", "100.75", "151.0", "187.0", "dsq"]], "query": "and { only { filter_greater { all_rows ; snatch ; 170.0 } } ; eq { hop { filter_greater { all_rows ; snatch ; 170.0 } ; name } ; jo\u00ebl mackenzie ( cub ) } } = true", "question": "jo\u00ebl mackenzie ( cub ) is the only athlete with a snatch of more than 170.0 in weightlifting at the 2007 pan american games ."}, {"topic": "2008 - 09 utah jazz season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Utah_Jazz_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17355716-5.html.csv", "action": "count", "sent": "paul millsap had two high rebounds performances for the 2008 - 09 utah jazz season .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "paul millsap", "result": "2", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "high rebounds", "paul millsap"], "result": null, "ind": 0, "tointer": "select the rows whose high rebounds record fuzzily matches to paul millsap .", "tostr": "filter_eq { all_rows ; high rebounds ; paul millsap }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; high rebounds ; paul millsap } }", "tointer": "select the rows whose high rebounds record fuzzily matches to paul millsap . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; high rebounds ; paul millsap } } ; 2 } = true", "tointer": "select the rows whose high rebounds record fuzzily matches to paul millsap . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; high rebounds ; paul millsap } } ; 2 } = true", "interpret": "select the rows whose high rebounds record fuzzily matches to paul millsap . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "high rebounds_5": 5, "paul millsap_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "high rebounds_5": "high rebounds", "paul millsap_6": "paul millsap", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "high rebounds_5": [0], "paul millsap_6": [0], "2_7": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["2", "november 1", "la clippers", "w 101 - 79 ( ot )", "carlos boozer ( 25 )", "carlos boozer , mehmet okur ( 10 )", "ronnie price ( 7 )", "energysolutions arena 19602", "2 - 0"], ["3", "november 3", "la clippers", "w 89 - 73 ( ot )", "paul millsap ( 24 )", "andrei kirilenko ( 11 )", "ronnie price ( 5 )", "staples center 12712", "3 - 0"], ["4", "november 5", "portland", "w 103 - 96 ( ot )", "mehmet okur ( 22 )", "mehmet okur ( 9 )", "brevin knight ( 6 )", "energysolutions arena 19911", "4 - 0"], ["5", "november 7", "oklahoma city", "w 104 - 97 ( ot )", "carlos boozer ( 21 )", "andrei kirilenko ( 12 )", "brevin knight ( 11 )", "energysolutions arena 19911", "5 - 0"], ["6", "november 9", "new york", "l 99 - 107 ( ot )", "carlos boozer ( 19 )", "carlos boozer ( 18 )", "ronnie brewer ( 7 )", "madison square garden 19344", "5 - 1"], ["7", "november 11", "philadelphia", "w 93 - 80 ( ot )", "carlos boozer ( 19 )", "carlos boozer ( 16 )", "ronnie brewer , deron williams ( 9 )", "wachovia center 12839", "6 - 1"], ["8", "november 12", "washington", "l 87 - 95 ( ot )", "carlos boozer ( 20 )", "carlos boozer ( 7 )", "deron williams ( 7 )", "verizon center 14885", "6 - 2"], ["9", "november 14", "charlotte", "l 96 - 104 ( ot )", "carlos boozer ( 26 )", "carlos boozer ( 15 )", "ronnie brewer , brevin knight ( 4 )", "time warner cable arena 14189", "6 - 3"], ["10", "november 15", "cleveland", "l 93 - 105 ( ot )", "carlos boozer ( 17 )", "carlos boozer ( 9 )", "brevin knight ( 6 )", "quicken loans arena 20562", "6 - 4"], ["11", "november 17", "phoenix", "w 109 - 97 ( ot )", "carlos boozer , c j miles ( 21 )", "carlos boozer ( 15 )", "ronnie price , brevin knight ( 6 )", "energysolutions arena 19911", "7 - 4"], ["12", "november 19", "milwaukee", "w 105 - 94 ( ot )", "c j miles ( 25 )", "carlos boozer ( 11 )", "ronnie price ( 6 )", "energysolutions arena 19911", "8 - 4"], ["13", "november 21", "san antonio", "l 94 - 119 ( ot )", "ronnie brewer ( 17 )", "c j miles ( 10 )", "c j miles , ronnie price ( 5 )", "at & t center 17354", "8 - 5"], ["14", "november 22", "memphis", "w 103 - 94 ( ot )", "mehmet okur ( 23 )", "andrei kirilenko ( 6 )", "andrei kirilenko ( 10 )", "fedexforum 13121", "9 - 5"], ["15", "november 24", "chicago", "l 100 - 101 ( ot )", "mehmet okur ( 26 )", "paul millsap ( 10 )", "ronnie price , andrei kirilenko ( 8 )", "energysolutions arena 19911", "9 - 6"], ["16", "november 26", "memphis", "w 117 - 100 ( ot )", "paul millsap ( 24 )", "paul millsap ( 16 )", "deron williams ( 15 )", "energysolutions arena 19911", "10 - 6"], ["17", "november 28", "sacramento", "w 120 - 94 ( ot )", "mehmet okur ( 20 )", "mehmet okur ( 12 )", "deron williams ( 15 )", "energysolutions arena 19911", "11 - 6"]], "query": "eq { count { filter_eq { all_rows ; high rebounds ; paul millsap } } ; 2 } = true", "question": "paul millsap had two high rebounds performances for the 2008 - 09 utah jazz season ."}, {"topic": "new york city mayoral elections", "wiki": "https://en.wikipedia.org/wiki/New_York_City_mayoral_elections", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1108394-34.html.csv", "action": "comparative", "sent": "nathan karp had less votes in the election than david weiss .", "annotation": {"row_1": "11", "row_2": "10", "col": "8", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "1953", "nathan karp"], "result": null, "ind": 0, "tointer": "select the rows whose 1953 record fuzzily matches to nathan karp .", "tostr": "filter_eq { all_rows ; 1953 ; nathan karp }"}, "total"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; 1953 ; nathan karp } ; total }", "tointer": "select the rows whose 1953 record fuzzily matches to nathan karp . take the total record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "1953", "david l weiss"], "result": null, "ind": 1, "tointer": "select the rows whose 1953 record fuzzily matches to david l weiss .", "tostr": "filter_eq { all_rows ; 1953 ; david l weiss }"}, "total"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; 1953 ; david l weiss } ; total }", "tointer": "select the rows whose 1953 record fuzzily matches to david l weiss . take the total record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; 1953 ; nathan karp } ; total } ; hop { filter_eq { all_rows ; 1953 ; david l weiss } ; total } } = true", "tointer": "select the rows whose 1953 record fuzzily matches to nathan karp . take the total record of this row . select the rows whose 1953 record fuzzily matches to david l weiss . take the total record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; 1953 ; nathan karp } ; total } ; hop { filter_eq { all_rows ; 1953 ; david l weiss } ; total } } = true", "interpret": "select the rows whose 1953 record fuzzily matches to nathan karp . take the total record of this row . select the rows whose 1953 record fuzzily matches to david l weiss . take the total record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "1953_7": 7, "nathan karp_8": 8, "total_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "1953_11": 11, "david l weiss_12": 12, "total_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "1953_7": "1953", "nathan karp_8": "nathan karp", "total_9": "total", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "1953_11": "1953", "david l weiss_12": "david l weiss", "total_13": "total"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "1953_7": [0], "nathan karp_8": [0], "total_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "1953_11": [1], "david l weiss_12": [1], "total_13": [3]}, "table_header": ["1953", "party", "manhattan", "the bronx", "brooklyn", "queens", "richmond", "total"], "table_cont": [["robert f wagner , jr", "democratic", "236960", "206771", "339970", "207918", "31007", "1022626"], ["robert f wagner , jr", "democratic", "47.9 %", "46.2 %", "46.6 %", "40.6 %", "51.8 %", "1022626"], ["harold riegelman", "republican", "147876", "97224", "183968", "208829", "23694", "661591"], ["harold riegelman", "republican", "29.9 %", "21.7 %", "25.2 %", "40.8 %", "39.6 %", "661591"], ["rudolph halley", "liberal", "76884", "112825", "162275", "73192", "3514", "428690"], ["rudolph halley", "independent", "7648", "9853", "13264", "7356", "295", "38416"], ["rudolph halley", "total", "84532", "122678", "175539", "80548", "3809", "467106"], ["rudolph halley", "total", "17.1 %", "27.4 %", "24.1 %", "15.7 %", "6.4 %", "467106"], ["clifford t mcavoy", "american labor party", "14904", "13290", "17337", "7182", "332", "53045"], ["david l weiss", "socialist workers", "10683", "7760", "13062", "7254", "1019", "2054"], ["nathan karp", "industrial gov ' t", "10683", "7760", "13062", "7254", "1019", "916"], ["scattered", "scattered", "10683", "7760", "13062", "7254", "1019", "180"], ["unrecorded ( blank , spoiled , etc )", "unrecorded ( blank , spoiled , etc )", "10683", "7760", "13062", "7254", "1019", "36630"], ["t o t a l", "t o t a l", "494955", "447723", "729876", "511731", "59861", "2244146"]], "query": "less { hop { filter_eq { all_rows ; 1953 ; nathan karp } ; total } ; hop { filter_eq { all_rows ; 1953 ; david l weiss } ; total } } = true", "question": "nathan karp had less votes in the election than david weiss ."}, {"topic": "list of tallest buildings in chile", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Chile", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27067379-1.html.csv", "action": "comparative", "sent": "the titanium la portadia has more floors than the torre mall center .", "annotation": {"row_1": "2", "row_2": "10", "col": "5", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "building", "titanium la portada"], "result": null, "ind": 0, "tointer": "select the rows whose building record fuzzily matches to titanium la portada .", "tostr": "filter_eq { all_rows ; building ; titanium la portada }"}, "number of floors"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; building ; titanium la portada } ; number of floors }", "tointer": "select the rows whose building record fuzzily matches to titanium la portada . take the number of floors record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "building", "torre mall center"], "result": null, "ind": 1, "tointer": "select the rows whose building record fuzzily matches to torre mall center .", "tostr": "filter_eq { all_rows ; building ; torre mall center }"}, "number of floors"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; building ; torre mall center } ; number of floors }", "tointer": "select the rows whose building record fuzzily matches to torre mall center . take the number of floors record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; building ; titanium la portada } ; number of floors } ; hop { filter_eq { all_rows ; building ; torre mall center } ; number of floors } } = true", "tointer": "select the rows whose building record fuzzily matches to titanium la portada . take the number of floors record of this row . select the rows whose building record fuzzily matches to torre mall center . take the number of floors record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; building ; titanium la portada } ; number of floors } ; hop { filter_eq { all_rows ; building ; torre mall center } ; number of floors } } = true", "interpret": "select the rows whose building record fuzzily matches to titanium la portada . take the number of floors record of this row . select the rows whose building record fuzzily matches to torre mall center . take the number of floors record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "building_7": 7, "titanium la portada_8": 8, "number of floors_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "building_11": 11, "torre mall center_12": 12, "number of floors_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "building_7": "building", "titanium la portada_8": "titanium la portada", "number of floors_9": "number of floors", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "building_11": "building", "torre mall center_12": "torre mall center", "number of floors_13": "number of floors"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "building_7": [0], "titanium la portada_8": [0], "number of floors_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "building_11": [1], "torre mall center_12": [1], "number of floors_13": [3]}, "table_header": ["position", "building", "city", "height", "number of floors", "completion"], "table_cont": [["1", "gran torre santiago", "santiago", "300 m", "70", "2012"], ["2", "titanium la portada", "santiago", "-", "55", "2010"], ["3", "costanera center torre 1", "santiago", "170 m", "41", "2012"], ["3", "costanera center torre 2", "santiago", "170 m", "41", "2012"], ["4", "boulevard kennedy ( marriot )", "santiago", "140 m", "40", "1999"], ["5", "torre telef\u00e3 cubicnica chile", "santiago", "132 m", "32", "1994"], ["6", "torre entel", "santiago", "127 m", "0", "1974"], ["7", "torre de la industria", "santiago", "120 m", "33", "1994"], ["8", "territoria 3000", "santiago", "118 m", "31", "2008"], ["9", "torre mall center", "concepci\u00e3 cubicn", "115 m", "31", "2009"], ["9", "torre centenario", "santiago", "115 m", "31", "2000"]], "query": "greater { hop { filter_eq { all_rows ; building ; titanium la portada } ; number of floors } ; hop { filter_eq { all_rows ; building ; torre mall center } ; number of floors } } = true", "question": "the titanium la portadia has more floors than the torre mall center ."}, {"topic": "high - rise ( horse )", "wiki": "https://en.wikipedia.org/wiki/High-Rise_%28horse%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12934739-1.html.csv", "action": "comparative", "sent": "the japan cup race was a longer distance than the buttercross limited stakes .", "annotation": {"row_1": "10", "row_2": "2", "col": "2", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "race", "japan cup"], "result": null, "ind": 0, "tointer": "select the rows whose race record fuzzily matches to japan cup .", "tostr": "filter_eq { all_rows ; race ; japan cup }"}, "dist ( f )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; race ; japan cup } ; dist ( f ) }", "tointer": "select the rows whose race record fuzzily matches to japan cup . take the dist ( f ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "race", "buttercross limited stakes"], "result": null, "ind": 1, "tointer": "select the rows whose race record fuzzily matches to buttercross limited stakes .", "tostr": "filter_eq { all_rows ; race ; buttercross limited stakes }"}, "dist ( f )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; race ; buttercross limited stakes } ; dist ( f ) }", "tointer": "select the rows whose race record fuzzily matches to buttercross limited stakes . take the dist ( f ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; race ; japan cup } ; dist ( f ) } ; hop { filter_eq { all_rows ; race ; buttercross limited stakes } ; dist ( f ) } } = true", "tointer": "select the rows whose race record fuzzily matches to japan cup . take the dist ( f ) record of this row . select the rows whose race record fuzzily matches to buttercross limited stakes . take the dist ( f ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; race ; japan cup } ; dist ( f ) } ; hop { filter_eq { all_rows ; race ; buttercross limited stakes } ; dist ( f ) } } = true", "interpret": "select the rows whose race record fuzzily matches to japan cup . take the dist ( f ) record of this row . select the rows whose race record fuzzily matches to buttercross limited stakes . take the dist ( f ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "race_7": 7, "japan cup_8": 8, "dist (f)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "race_11": 11, "buttercross limited stakes_12": 12, "dist (f)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "race_7": "race", "japan cup_8": "japan cup", "dist (f)_9": "dist ( f )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "race_11": "race", "buttercross limited stakes_12": "buttercross limited stakes", "dist (f)_13": "dist ( f )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "race_7": [0], "japan cup_8": [0], "dist (f)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "race_11": [1], "buttercross limited stakes_12": [1], "dist (f)_13": [3]}, "table_header": ["race", "dist ( f )", "course", "prize ( k )", "runners", "placing", "margin", "jockey", "trainer"], "table_cont": [["ebf cooperative bank maiden stakes", "7", "doncaster", "3", "18", "1", "short head", "royston ffrench", "luca cumani"], ["buttercross limited stakes", "10", "pontefract", "5", "8", "1", "3.5", "jason weaver", "luca cumani"], ["ebf hedgehope maiden stakes", "12", "lingfield", "31", "6", "1", "neck", "frankie dettori", "luca cumani"], ["derby", "12", "epsom", "598", "15", "1", "head", "olivier peslier", "luca cumani"], ["king george vi & queen elizabeth stakes", "12", "ascot", "354", "8", "2", "1", "olivier peslier", "luca cumani"], ["prix de l'arc de triomphe", "12", "longchamp", "404", "14", "7", "3.25", "michael kinane", "luca cumani"], ["dubai world cup", "10", "nad al sheba", "10", "8", "8", "45", "frankie dettori", "saeed bin suroor"], ["arc trial", "11", "newbury", "28", "6", "2", "0.75", "olivier peslier", "saeed bin suroor"], ["champion stakes", "10", "newmarket rowley", "228", "13", "6", "3", "olivier peslier", "saeed bin suroor"], ["japan cup", "12", "tokyo", "1071", "15", "3", "1.5", "frankie dettori", "saeed bin suroor"], ["dubai city of gold", "12", "nad al sheba", "34", "7", "1", "2.5", "frankie dettori", "saeed bin suroor"], ["dubai sheema classic", "12", "nad al sheba", "731", "16", "3", "5", "frankie dettori", "saeed bin suroor"], ["manhattan handicap", "10", "belmont park", "146", "9", "8", "19.5", "john r velazquez", "kiaran mclaughlin"]], "query": "greater { hop { filter_eq { all_rows ; race ; japan cup } ; dist ( f ) } ; hop { filter_eq { all_rows ; race ; buttercross limited stakes } ; dist ( f ) } } = true", "question": "the japan cup race was a longer distance than the buttercross limited stakes ."}, {"topic": "m * a * s * h ( tv series )", "wiki": "https://en.wikipedia.org/wiki/M%2AA%2AS%2AH_%28TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-156045-2.html.csv", "action": "count", "sent": "there are three seasons in which the mash show had less than 18 million household viewers .", "annotation": {"scope": "all", "criterion": "less_than", "value": "18", "result": "3", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_less", "args": ["all_rows", "viewers ( households in millions )", "18"], "result": null, "ind": 0, "tointer": "select the rows whose viewers ( households in millions ) record is less than 18 .", "tostr": "filter_less { all_rows ; viewers ( households in millions ) ; 18 }"}], "result": "3", "ind": 1, "tostr": "count { filter_less { all_rows ; viewers ( households in millions ) ; 18 } }", "tointer": "select the rows whose viewers ( households in millions ) record is less than 18 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_less { all_rows ; viewers ( households in millions ) ; 18 } } ; 3 } = true", "tointer": "select the rows whose viewers ( households in millions ) record is less than 18 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_less { all_rows ; viewers ( households in millions ) ; 18 } } ; 3 } = true", "interpret": "select the rows whose viewers ( households in millions ) record is less than 18 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_less_0": 0, "all_rows_4": 4, "viewers (households in millions)_5": 5, "18_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_less_0": "filter_less", "all_rows_4": "all_rows", "viewers (households in millions)_5": "viewers ( households in millions )", "18_6": "18", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_less_0": [1], "all_rows_4": [0], "viewers (households in millions)_5": [0], "18_6": [0], "3_7": [2]}, "table_header": ["season", "ep", "season premiere", "season finale", "ranking", "viewers ( households in millions )", "rating"], "table_cont": [["season 1", "24", "september 17 , 1972", "march 25 , 1973", "46", "n / a", "n / a"], ["season 2", "24", "september 15 , 1973", "march 2 , 1974", "4", "17.02", "25.7"], ["season 3", "24", "september 10 , 1974", "march 18 , 1975", "5", "18.76", "27.4"], ["season 4", "24", "september 12 , 1975", "february 24 , 1976", "15", "15.93", "22.9"], ["season 5", "24", "september 21 , 1976", "march 15 , 1977", "4", "18.44", "25.9"], ["season 6", "24", "september 20 , 1977", "march 27 , 1978", "9", "16.91", "23.2"], ["season 7", "25", "september 18 , 1978", "march 12 , 1979", "7", "18.92", "25.4"], ["season 8", "25", "september 17 , 1979", "march 24 , 1980", "5", "19.30", "25.3"], ["season 9", "20", "november 17 , 1980", "may 4 , 1981", "4", "20.53", "25.7"], ["season 10", "21", "october 26 , 1981", "april 12 , 1982", "9", "18.17", "22.3"], ["season 11", "16", "october 25 , 1982", "february 28 , 1983", "3", "18.82", "22.6"]], "query": "eq { count { filter_less { all_rows ; viewers ( households in millions ) ; 18 } } ; 3 } = true", "question": "there are three seasons in which the mash show had less than 18 million household viewers ."}, {"topic": "1976 formula one season", "wiki": "https://en.wikipedia.org/wiki/1976_Formula_One_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1140084-2.html.csv", "action": "unique", "sent": "in the 1976 formula one season the one and only event won by clay regazzoni was held on 28 march .", "annotation": {"scope": "all", "row": "3", "col": "6", "col_other": "2", "criterion": "equal", "value": "clay regazzoni", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "race winner", "clay regazzoni"], "result": null, "ind": 0, "tointer": "select the rows whose race winner record fuzzily matches to clay regazzoni .", "tostr": "filter_eq { all_rows ; race winner ; clay regazzoni }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; race winner ; clay regazzoni } }", "tointer": "select the rows whose race winner record fuzzily matches to clay regazzoni . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "race winner", "clay regazzoni"], "result": null, "ind": 0, "tointer": "select the rows whose race winner record fuzzily matches to clay regazzoni .", "tostr": "filter_eq { all_rows ; race winner ; clay regazzoni }"}, "date"], "result": "28 march", "ind": 2, "tostr": "hop { filter_eq { all_rows ; race winner ; clay regazzoni } ; date }"}, "28 march"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; race winner ; clay regazzoni } ; date } ; 28 march }", "tointer": "the date record of this unqiue row is 28 march ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; race winner ; clay regazzoni } } ; eq { hop { filter_eq { all_rows ; race winner ; clay regazzoni } ; date } ; 28 march } } = true", "tointer": "select the rows whose race winner record fuzzily matches to clay regazzoni . there is only one such row in the table . the date record of this unqiue row is 28 march ."}, "logic_str": "and { only { filter_eq { all_rows ; race winner ; clay regazzoni } } ; eq { hop { filter_eq { all_rows ; race winner ; clay regazzoni } ; date } ; 28 march } } = true", "interpret": "select the rows whose race winner record fuzzily matches to clay regazzoni . there is only one such row in the table . the date record of this unqiue row is 28 march .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "race winner_7": 7, "clay regazzoni_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "28 march_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "race winner_7": "race winner", "clay regazzoni_8": "clay regazzoni", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "28 march_10": "28 march"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "race winner_7": [0], "clay regazzoni_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "28 march_10": [3]}, "table_header": ["race", "date", "location", "pole position", "fastest lap", "race winner", "constructor", "report"], "table_cont": [["brazilian grand prix", "25 january", "interlagos", "james hunt", "jean - pierre jarier", "niki lauda", "ferrari", "report"], ["south african grand prix", "6 march", "kyalami", "james hunt", "niki lauda", "niki lauda", "ferrari", "report"], ["united states grand prix west", "28 march", "long beach", "clay regazzoni", "clay regazzoni", "clay regazzoni", "ferrari", "report"], ["spanish grand prix", "2 may", "jarama", "james hunt", "jochen mass", "james hunt", "mclaren - ford", "report"], ["belgian grand prix", "16 may", "zolder", "niki lauda", "niki lauda", "niki lauda", "ferrari", "report"], ["monaco grand prix", "30 may", "monaco", "niki lauda", "clay regazzoni", "niki lauda", "ferrari", "report"], ["swedish grand prix", "13 june", "anderstorp", "jody scheckter", "mario andretti", "jody scheckter", "tyrrell - ford", "report"], ["french grand prix", "4 july", "paul ricard", "james hunt", "niki lauda", "james hunt", "mclaren - ford", "report"], ["british grand prix", "18 july", "brands hatch", "niki lauda", "niki lauda", "niki lauda", "ferrari", "report"], ["german grand prix", "1 august", "n\u00fcrburgring", "james hunt", "jody scheckter", "james hunt", "mclaren - ford", "report"], ["austrian grand prix", "15 august", "\u00f6sterreichring", "james hunt", "james hunt", "john watson", "penske - ford", "report"], ["dutch grand prix", "29 august", "zandvoort", "ronnie peterson", "clay regazzoni", "james hunt", "mclaren - ford", "report"], ["italian grand prix", "12 september", "monza", "jacques laffite", "ronnie peterson", "ronnie peterson", "march - ford", "report"], ["canadian grand prix", "3 october", "mosport", "james hunt", "patrick depailler", "james hunt", "mclaren - ford", "report"], ["united states grand prix", "10 october", "watkins glen", "james hunt", "james hunt", "james hunt", "mclaren - ford", "report"], ["japanese grand prix", "24 october", "fuji speedway", "mario andretti", "masahiro hasemi", "mario andretti", "lotus - ford", "report"]], "query": "and { only { filter_eq { all_rows ; race winner ; clay regazzoni } } ; eq { hop { filter_eq { all_rows ; race winner ; clay regazzoni } ; date } ; 28 march } } = true", "question": "in the 1976 formula one season the one and only event won by clay regazzoni was held on 28 march ."}, {"topic": "grand tour ( cycling )", "wiki": "https://en.wikipedia.org/wiki/Grand_Tour_%28cycling%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1286819-2.html.csv", "action": "superlative", "sent": "in the grand tour , tony rominguer had more vueltas than anyone else .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "8", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "vuelta"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; vuelta }"}, "name"], "result": "tony rominger ( sui )", "ind": 1, "tostr": "hop { argmax { all_rows ; vuelta } ; name }"}, "tony rominger ( sui )"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; vuelta } ; name } ; tony rominger ( sui ) } = true", "tointer": "select the row whose vuelta record of all rows is maximum . the name record of this row is tony rominger ( sui ) ."}, "logic_str": "eq { hop { argmax { all_rows ; vuelta } ; name } ; tony rominger ( sui ) } = true", "interpret": "select the row whose vuelta record of all rows is maximum . the name record of this row is tony rominger ( sui ) .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "vuelta_5": 5, "name_6": 6, "tony rominger ( sui )_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "vuelta_5": "vuelta", "name_6": "name", "tony rominger ( sui )_7": "tony rominger ( sui )"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "vuelta_5": [0], "name_6": [1], "tony rominger ( sui )_7": [2]}, "table_header": ["name", "tour", "giro", "vuelta", "total"], "table_cont": [["jacques anquetil ( fra )", "6", "6", "1", "13"], ["bernard hinault ( fra )", "7", "3", "2", "12"], ["eddy merckx ( bel )", "6", "5", "1", "12"], ["felice gimondi ( ita )", "2", "9", "1", "12"], ["miguel indur\u00e1in ( esp )", "5", "3", "1", "9"], ["laurent fignon ( fra )", "3", "2", "1", "6"], ["carlos sastre ( esp )", "2", "1", "3", "6"], ["tony rominger ( sui )", "1", "1", "4", "6"], ["alberto contador ( esp )", "2", "1", "2", "5"], ["cadel evans ( aus )", "3", "1", "1", "5"], ["denis menchov ( rus )", "2", "1", "2", "5"], ["vincenzo nibali ( ita )", "1", "3", "1", "5"], ["jose manuel fuente ( esp )", "1", "1", "2", "4"], ["joaquim rodr\u00edguez ( esp )", "1", "1", "2", "4"], ["herman van springel ( bel )", "1", "1", "1", "3"]], "query": "eq { hop { argmax { all_rows ; vuelta } ; name } ; tony rominger ( sui ) } = true", "question": "in the grand tour , tony rominguer had more vueltas than anyone else ."}, {"topic": "1933 vfl season", "wiki": "https://en.wikipedia.org/wiki/1933_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790397-7.html.csv", "action": "unique", "sent": "the only event in the 1993 vfl season with a crowd smaller than 10000 saw essendon facing hawthorn .", "annotation": {"scope": "all", "row": "3", "col": "6", "col_other": "1,3", "criterion": "less_than", "value": "10000", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "crowd", "10000"], "result": null, "ind": 0, "tointer": "select the rows whose crowd record is less than 10000 .", "tostr": "filter_less { all_rows ; crowd ; 10000 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; crowd ; 10000 } }", "tointer": "select the rows whose crowd record is less than 10000 . there is only one such row in the table ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "crowd", "10000"], "result": null, "ind": 0, "tointer": "select the rows whose crowd record is less than 10000 .", "tostr": "filter_less { all_rows ; crowd ; 10000 }"}, "home team"], "result": "essendon", "ind": 2, "tostr": "hop { filter_less { all_rows ; crowd ; 10000 } ; home team }"}, "essendon"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; crowd ; 10000 } ; home team } ; essendon }", "tointer": "the home team record of this unqiue row is essendon ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "crowd", "10000"], "result": null, "ind": 0, "tointer": "select the rows whose crowd record is less than 10000 .", "tostr": "filter_less { all_rows ; crowd ; 10000 }"}, "away team"], "result": "hawthorn", "ind": 4, "tostr": "hop { filter_less { all_rows ; crowd ; 10000 } ; away team }"}, "hawthorn"], "result": true, "ind": 5, "tostr": "eq { hop { filter_less { all_rows ; crowd ; 10000 } ; away team } ; hawthorn }", "tointer": "the away team record of this unqiue row is hawthorn ."}], "result": true, "ind": 6, "tostr": "and { eq { hop { filter_less { all_rows ; crowd ; 10000 } ; home team } ; essendon } ; eq { hop { filter_less { all_rows ; crowd ; 10000 } ; away team } ; hawthorn } }", "tointer": "the home team record of this unqiue row is essendon . the away team record of this unqiue row is hawthorn ."}], "result": true, "ind": 7, "tostr": "and { only { filter_less { all_rows ; crowd ; 10000 } } ; and { eq { hop { filter_less { all_rows ; crowd ; 10000 } ; home team } ; essendon } ; eq { hop { filter_less { all_rows ; crowd ; 10000 } ; away team } ; hawthorn } } } = true", "tointer": "select the rows whose crowd record is less than 10000 . there is only one such row in the table . the home team record of this unqiue row is essendon . the away team record of this unqiue row is hawthorn ."}, "logic_str": "and { only { filter_less { all_rows ; crowd ; 10000 } } ; and { eq { hop { filter_less { all_rows ; crowd ; 10000 } ; home team } ; essendon } ; eq { hop { filter_less { all_rows ; crowd ; 10000 } ; away team } ; hawthorn } } } = true", "interpret": "select the rows whose crowd record is less than 10000 . there is only one such row in the table . the home team record of this unqiue row is essendon . the away team record of this unqiue row is hawthorn .", "num_func": 10, "nid": 8, "g_ids": {"and_7": 7, "result_8": 8, "only_1": 1, "filter_less_0": 0, "all_rows_9": 9, "crowd_10": 10, "10000_11": 11, "and_6": 6, "str_eq_3": 3, "str_hop_2": 2, "home team_12": 12, "essendon_13": 13, "str_eq_5": 5, "str_hop_4": 4, "away team_14": 14, "hawthorn_15": 15}, "g_ids_features": {"and_7": "and", "result_8": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_9": "all_rows", "crowd_10": "crowd", "10000_11": "10000", "and_6": "and", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "home team_12": "home team", "essendon_13": "essendon", "str_eq_5": "str_eq", "str_hop_4": "str_hop", "away team_14": "away team", "hawthorn_15": "hawthorn"}, "g_adj": {"and_7": [8], "result_8": [], "only_1": [7], "filter_less_0": [1, 2, 4], "all_rows_9": [0], "crowd_10": [0], "10000_11": [0], "and_6": [7], "str_eq_3": [6], "str_hop_2": [3], "home team_12": [2], "essendon_13": [3], "str_eq_5": [6], "str_hop_4": [5], "away team_14": [4], "hawthorn_15": [5]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "17.14 ( 116 )", "south melbourne", "13.15 ( 93 )", "corio oval", "14000", "10 june 1933"], ["fitzroy", "8.17 ( 65 )", "richmond", "10.13 ( 73 )", "brunswick street oval", "29500", "10 june 1933"], ["essendon", "15.6 ( 96 )", "hawthorn", "16.9 ( 105 )", "windy hill", "9000", "10 june 1933"], ["north melbourne", "11.12 ( 78 )", "footscray", "8.14 ( 62 )", "arden street oval", "20000", "10 june 1933"], ["melbourne", "13.19 ( 97 )", "collingwood", "18.18 ( 126 )", "mcg", "18020", "10 june 1933"], ["st kilda", "10.5 ( 65 )", "carlton", "20.10 ( 130 )", "junction oval", "21000", "10 june 1933"]], "query": "and { only { filter_less { all_rows ; crowd ; 10000 } } ; and { eq { hop { filter_less { all_rows ; crowd ; 10000 } ; home team } ; essendon } ; eq { hop { filter_less { all_rows ; crowd ; 10000 } ; away team } ; hawthorn } } } = true", "question": "the only event in the 1993 vfl season with a crowd smaller than 10000 saw essendon facing hawthorn ."}, {"topic": "2008 - 09 detroit red wings season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Detroit_Red_Wings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17371135-14.html.csv", "action": "ordinal", "sent": "in the 2008 - 2009 detroit red wings series 's first away game versus pittsburgh , 17132 people attended .", "annotation": {"scope": "subset", "row": "6", "col": "1", "order": "1", "col_other": "6", "max_or_min": "min_to_max", "value_mentioned": "no", "subset": {"col": "4", "criterion": "equal", "value": "pittsburgh"}}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmin", "args": [{"func": "filter_str_eq", "args": ["all_rows", "home", "pittsburgh"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; home ; pittsburgh }", "tointer": "select the rows whose home record fuzzily matches to pittsburgh ."}, "date", "1"], "result": null, "ind": 1, "tostr": "nth_argmin { filter_eq { all_rows ; home ; pittsburgh } ; date ; 1 }"}, "attendance"], "result": "17132", "ind": 2, "tostr": "hop { nth_argmin { filter_eq { all_rows ; home ; pittsburgh } ; date ; 1 } ; attendance }"}, "17132"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmin { filter_eq { all_rows ; home ; pittsburgh } ; date ; 1 } ; attendance } ; 17132 } = true", "tointer": "select the rows whose home record fuzzily matches to pittsburgh . select the row whose date record of these rows is 1st minimum . the attendance record of this row is 17132 ."}, "logic_str": "eq { hop { nth_argmin { filter_eq { all_rows ; home ; pittsburgh } ; date ; 1 } ; attendance } ; 17132 } = true", "interpret": "select the rows whose home record fuzzily matches to pittsburgh . select the row whose date record of these rows is 1st minimum . the attendance record of this row is 17132 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "num_hop_2": 2, "nth_argmin_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "home_6": 6, "pittsburgh_7": 7, "date_8": 8, "1_9": 9, "attendance_10": 10, "17132_11": 11}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "num_hop_2": "num_hop", "nth_argmin_1": "nth_argmin", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "home_6": "home", "pittsburgh_7": "pittsburgh", "date_8": "date", "1_9": "1", "attendance_10": "attendance", "17132_11": "17132"}, "g_adj": {"eq_3": [4], "result_4": [], "num_hop_2": [3], "nth_argmin_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "home_6": [0], "pittsburgh_7": [0], "date_8": [1], "1_9": [1], "attendance_10": [2], "17132_11": [3]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "series"], "table_cont": [["may 30", "pittsburgh", "1 - 3", "detroit", "osgood", "20066", "1 - 0"], ["may 31", "pittsburgh", "1 - 3", "detroit", "osgood", "20066", "2 - 0"], ["june 2", "detroit", "2 - 4", "pittsburgh", "osgood", "17132", "2 - 1"], ["june 4", "detroit", "2 - 4", "pittsburgh", "osgood", "17132", "2 - 2"], ["june 6", "pittsburgh", "0 - 5", "detroit", "osgood", "20066", "3 - 2"], ["june 9", "detroit", "1 - 2", "pittsburgh", "osgood", "17132", "3 - 3"], ["june 12", "pittsburgh", "2 - 1", "detroit", "osgood", "20066", "3 - 4"]], "query": "eq { hop { nth_argmin { filter_eq { all_rows ; home ; pittsburgh } ; date ; 1 } ; attendance } ; 17132 } = true", "question": "in the 2008 - 2009 detroit red wings series 's first away game versus pittsburgh , 17132 people attended ."}, {"topic": "james calado", "wiki": "https://en.wikipedia.org/wiki/James_Calado", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24584486-1.html.csv", "action": "aggregation", "sent": "the average number of wins that james calado had was 2.3 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "2.3", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "wins"], "result": "2.3", "ind": 0, "tostr": "avg { all_rows ; wins }"}, "2.3"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; wins } ; 2.3 } = true", "tointer": "the average of the wins record of all rows is 2.3 ."}, "logic_str": "round_eq { avg { all_rows ; wins } ; 2.3 } = true", "interpret": "the average of the wins record of all rows is 2.3 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "wins_4": 4, "2.3_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "wins_4": "wins", "2.3_5": "2.3"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "wins_4": [0], "2.3_5": [1]}, "table_header": ["season", "series", "team", "races", "wins", "poles", "f / laps", "podiums", "points", "position"], "table_cont": [["2008", "british formula renault 2.0", "fortec motorsport", "20", "1", "2", "0", "4", "292", "7th"], ["2008", "formula renault 2.0 nec", "fortec motorsport", "3", "0", "0", "0", "0", "38", "25th"], ["2008", "british formula renault 2.0 winter series", "fortec motorsport", "4", "2", "3", "4", "3", "116", "1st"], ["2008", "portuguese formula renault 2.0 winter series", "fortec motorsport", "4", "3", "2", "2", "4", "60", "1st"], ["2009", "british formula renault 2.0", "fortec motorsport", "20", "8", "10", "7", "12", "457", "2nd"], ["2009", "formula renault 2.0 eurocup", "fortec motorsport", "6", "0", "0", "1", "0", "10", "17th"], ["2010", "british formula three championship", "carlin", "30", "5", "2", "4", "12", "293", "2nd"], ["2011", "gp3 series", "lotus art", "16", "1", "1", "2", "6", "55", "2nd"], ["2011", "gp2 final", "lotus art", "2", "1", "0", "0", "1", "7", "5th"], ["2012", "gp2 series", "lotus gp", "24", "2", "2", "1", "7", "160", "5th"]], "query": "round_eq { avg { all_rows ; wins } ; 2.3 } = true", "question": "the average number of wins that james calado had was 2.3 ."}, {"topic": "bloodymania ( 2007 )", "wiki": "https://en.wikipedia.org/wiki/Bloodymania_%282007%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18709785-2.html.csv", "action": "unique", "sent": "the only wrestler to be eliminated by doug basham using a pinfall after a diving headbutt at bloodymania ( 2007 ) was zach gowen .", "annotation": {"scope": "all", "row": "4", "col": "5", "col_other": "2", "criterion": "equal", "value": "pinfall after a diving headbutt", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "elimination move", "pinfall after a diving headbutt"], "result": null, "ind": 0, "tointer": "select the rows whose elimination move record fuzzily matches to pinfall after a diving headbutt .", "tostr": "filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } }", "tointer": "select the rows whose elimination move record fuzzily matches to pinfall after a diving headbutt . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "elimination move", "pinfall after a diving headbutt"], "result": null, "ind": 0, "tointer": "select the rows whose elimination move record fuzzily matches to pinfall after a diving headbutt .", "tostr": "filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt }"}, "wrestler"], "result": "zach gowen", "ind": 2, "tostr": "hop { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } ; wrestler }"}, "zach gowen"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } ; wrestler } ; zach gowen }", "tointer": "the wrestler record of this unqiue row is zach gowen ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } } ; eq { hop { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } ; wrestler } ; zach gowen } } = true", "tointer": "select the rows whose elimination move record fuzzily matches to pinfall after a diving headbutt . there is only one such row in the table . the wrestler record of this unqiue row is zach gowen ."}, "logic_str": "and { only { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } } ; eq { hop { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } ; wrestler } ; zach gowen } } = true", "interpret": "select the rows whose elimination move record fuzzily matches to pinfall after a diving headbutt . there is only one such row in the table . the wrestler record of this unqiue row is zach gowen .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "elimination move_7": 7, "pinfall after a diving headbutt_8": 8, "str_eq_3": 3, "str_hop_2": 2, "wrestler_9": 9, "zach gowen_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "elimination move_7": "elimination move", "pinfall after a diving headbutt_8": "pinfall after a diving headbutt", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "wrestler_9": "wrestler", "zach gowen_10": "zach gowen"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "elimination move_7": [0], "pinfall after a diving headbutt_8": [0], "str_eq_3": [4], "str_hop_2": [3], "wrestler_9": [2], "zach gowen_10": [3]}, "table_header": ["elimination", "wrestler", "team", "eliminated by", "elimination move", "time"], "table_cont": [["1", "greg valentine", "the original dream team", "necro butcher", "pinfall after a sunset flip", "n / a"], ["2", "axl rotten", "bad breed", "samu and alofa", "pinfall after a double falling headbutt", "n / a"], ["3", "samu", "the headshrinkers", "tito santana", "pinfall after a schoolboy", "n / a"], ["4", "zach gowen", "pimp & gimp connection", "doug basham", "pinfall after a diving headbutt", "n / a"], ["5", "jorge santana", "tito and jorge santana", "brute issei", "pinfall after an sto", "n / a"], ["6", "brute issei", "team all japan", "doug basham", "pinfall after the last impression", "n / a"], ["7", "doug basham", "the basham brothers", "mad man pondo", "pinfall after the stop sign smash", "n / a"], ["winners :", "mad man pondo and necro butcher", "mad man pondo and necro butcher", "mad man pondo and necro butcher", "mad man pondo and necro butcher", "mad man pondo and necro butcher"]], "query": "and { only { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } } ; eq { hop { filter_eq { all_rows ; elimination move ; pinfall after a diving headbutt } ; wrestler } ; zach gowen } } = true", "question": "the only wrestler to be eliminated by doug basham using a pinfall after a diving headbutt at bloodymania ( 2007 ) was zach gowen ."}, {"topic": "list of cinema and movie theater chains", "wiki": "https://en.wikipedia.org/wiki/List_of_cinema_and_movie_theater_chains", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13274048-1.html.csv", "action": "count", "sent": "of the cinema and movie theater chains , there are 5 that have over 1000 screens .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "1000", "result": "5", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "screens", "1000"], "result": null, "ind": 0, "tointer": "select the rows whose screens record is greater than 1000 .", "tostr": "filter_greater { all_rows ; screens ; 1000 }"}], "result": "5", "ind": 1, "tostr": "count { filter_greater { all_rows ; screens ; 1000 } }", "tointer": "select the rows whose screens record is greater than 1000 . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; screens ; 1000 } } ; 5 } = true", "tointer": "select the rows whose screens record is greater than 1000 . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_greater { all_rows ; screens ; 1000 } } ; 5 } = true", "interpret": "select the rows whose screens record is greater than 1000 . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "screens_5": 5, "1000_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "screens_5": "screens", "1000_6": "1000", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "screens_5": [0], "1000_6": [0], "5_7": [2]}, "table_header": ["rank", "circuit", "headquarters", "screens", "sites"], "table_cont": [["1", "regal entertainment group", "knoxville , tn", "7367", "580"], ["2", "amc entertainment inc", "kansas city , mo", "5894", "483"], ["3", "cinemark theatres", "plano , tx", "3895", "298"], ["4", "carmike cinemas , inc", "columbus , ga", "2242", "232"], ["5", "cineplex entertainment", "toronto , on", "1438", "133"], ["6", "rave motion pictures", "dallas , tx", "939", "62"], ["7", "marcus theatres", "milwaukee , wi", "687", "55"], ["8", "national amusements", "dedham , ma", "450", "34"], ["9", "empire theatres", "stellarton , ns", "438", "53"]], "query": "eq { count { filter_greater { all_rows ; screens ; 1000 } } ; 5 } = true", "question": "of the cinema and movie theater chains , there are 5 that have over 1000 screens ."}, {"topic": "rex caldwell", "wiki": "https://en.wikipedia.org/wiki/Rex_Caldwell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13965339-3.html.csv", "action": "comparative", "sent": "rex caldwell had more top-25 positions in the pga championship than he did at the masters tournament .", "annotation": {"row_1": "4", "row_2": "1", "col": "3", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "pga championship"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to pga championship .", "tostr": "filter_eq { all_rows ; tournament ; pga championship }"}, "top - 25"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; pga championship } ; top - 25 }", "tointer": "select the rows whose tournament record fuzzily matches to pga championship . take the top - 25 record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "masters tournament"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to masters tournament .", "tostr": "filter_eq { all_rows ; tournament ; masters tournament }"}, "top - 25"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 25 }", "tointer": "select the rows whose tournament record fuzzily matches to masters tournament . take the top - 25 record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; tournament ; pga championship } ; top - 25 } ; hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 25 } } = true", "tointer": "select the rows whose tournament record fuzzily matches to pga championship . take the top - 25 record of this row . select the rows whose tournament record fuzzily matches to masters tournament . take the top - 25 record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; tournament ; pga championship } ; top - 25 } ; hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 25 } } = true", "interpret": "select the rows whose tournament record fuzzily matches to pga championship . take the top - 25 record of this row . select the rows whose tournament record fuzzily matches to masters tournament . take the top - 25 record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "tournament_7": 7, "pga championship_8": 8, "top - 25_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "tournament_11": 11, "masters tournament_12": 12, "top - 25_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "tournament_7": "tournament", "pga championship_8": "pga championship", "top - 25_9": "top - 25", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "tournament_11": "tournament", "masters tournament_12": "masters tournament", "top - 25_13": "top - 25"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "tournament_7": [0], "pga championship_8": [0], "top - 25_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "tournament_11": [1], "masters tournament_12": [1], "top - 25_13": [3]}, "table_header": ["tournament", "wins", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "1", "3", "3"], ["us open", "0", "0", "3", "0"], ["the open championship", "0", "0", "1", "0"], ["pga championship", "0", "3", "8", "6"], ["totals", "0", "4", "15", "9"]], "query": "greater { hop { filter_eq { all_rows ; tournament ; pga championship } ; top - 25 } ; hop { filter_eq { all_rows ; tournament ; masters tournament } ; top - 25 } } = true", "question": "rex caldwell had more top-25 positions in the pga championship than he did at the masters tournament ."}, {"topic": "sweden in the eurovision song contest 2000", "wiki": "https://en.wikipedia.org/wiki/Sweden_in_the_Eurovision_Song_Contest_2000", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13598632-1.html.csv", "action": "superlative", "sent": "roger pontare 's performance of the song n\u00e4r vindarna viskar mitt namn had the most points .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "max", "other_col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "points"], "result": "227", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; points }"}, "227"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; points } ; 227 } = true", "tointer": "select the row whose points record of all rows is maximum . the points record of this row is 227 ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; points } ; 227 } = true", "interpret": "select the row whose points record of all rows is maximum . the points record of this row is 227 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "points_6": 6, "227_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "points_6": "points", "227_7": "227"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "points_6": [1], "227_7": [2]}, "table_header": ["draw", "artist", "song", "points", "place"], "table_cont": [["1", "guide", "vi lever h\u00e4r , vi lever nu", "97", "5th"], ["2", "balsam boys", "bara du och jag", "54", "7th"], ["3", "barbados", "se mig", "146", "2nd"], ["4", "avengers", "n\u00e4r filmen \u00e4r slut", "0", "10th"], ["5", "tom nordahl", "alla \u00e4nglar sjunger", "32", "9th"], ["6", "roger pontare", "n\u00e4r vindarna viskar mitt namn", "227", "1st"], ["7", "javiera mu\u00f1oz", "varje timma , var minut", "139", "4th"], ["8", "midnight band", "tillsammans", "58", "6th"], ["9", "hanna hedlund", "anropar f\u00f6rsvunnen", "47", "8th"], ["10", "friends", "n\u00e4r jag t\u00e4nker p\u00e5 imorgon", "146", "2nd"]], "query": "eq { hop { argmax { all_rows ; points } ; points } ; 227 } = true", "question": "roger pontare 's performance of the song n\u00e4r vindarna viskar mitt namn had the most points ."}, {"topic": "macedonia in the eurovision song contest 1998", "wiki": "https://en.wikipedia.org/wiki/Macedonia_in_the_Eurovision_Song_Contest_1998", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16791999-1.html.csv", "action": "aggregation", "sent": "the total sum of televotes in the macedonia in the eurovision song contest in 1998 was 147968 televotes .", "annotation": {"scope": "all", "col": "4", "type": "sum", "result": "147968", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "televotes"], "result": "147968", "ind": 0, "tostr": "sum { all_rows ; televotes }"}, "147968"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; televotes } ; 147968 } = true", "tointer": "the sum of the televotes record of all rows is 147968 ."}, "logic_str": "round_eq { sum { all_rows ; televotes } ; 147968 } = true", "interpret": "the sum of the televotes record of all rows is 147968 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "televotes_4": 4, "147968_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "televotes_4": "televotes", "147968_5": "147968"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "televotes_4": [0], "147968_5": [1]}, "table_header": ["draw", "song", "performer", "televotes", "rank"], "table_cont": [["1", "preku moreto", "tanja carovska", "1339", "12"], ["2", "ne zaboravaj", "kaliopi", "3834", "9"], ["3", "son", "monika sokolovska", "862", "15"], ["4", "ostani do kraj", "to\u0161e proeski & megatim plus", "4210", "8"], ["5", "daj mi pricina da se razbudam", "tanja , lidija & zorica pancic", "2459", "11"], ["6", "samovilska svadba", "sa\u0161o gigov - gi\u0161", "34774", "2"], ["7", "ne baraj me", "iskra trpeva & granit", "681", "20"], ["8", "ne veruvam", "risto samardziev", "8866", "5"], ["9", "daj mi \u0161ansa", "dule & koki", "23615", "3"], ["10", "koj si ti", "biljana dodeva", "828", "16"], ["11", "te sakam beskrajno", "pece ognenov and adrijana janevska", "1100", "13"], ["12", "bez tebe", "duo maratov", "764", "17"], ["13", "ljubovta nema granici", "intervali", "694", "19"], ["14", "kameleon", "maja grozdanovska & bumerang", "3319", "10"], ["15", "andrea", "marjan necak", "725", "18"], ["16", "opomena", "suzana spasovska", "5441", "6"], ["17", "broj do deset", "maja vukicevic", "908", "14"], ["18", "ne zori , zoro", "vlado janevski", "38642", "1"], ["19", "ukradeni nokji", "karolina go\u010deva", "10454", "4"], ["20", "pari pari", "mico atanasiu", "4453", "7"]], "query": "round_eq { sum { all_rows ; televotes } ; 147968 } = true", "question": "the total sum of televotes in the macedonia in the eurovision song contest in 1998 was 147968 televotes ."}, {"topic": "1975 formula one season", "wiki": "https://en.wikipedia.org/wiki/1975_Formula_One_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1140085-2.html.csv", "action": "count", "sent": "there were two races that took place in august in the 75 formula one season .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "august", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "august"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to august .", "tostr": "filter_eq { all_rows ; date ; august }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; date ; august } }", "tointer": "select the rows whose date record fuzzily matches to august . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; date ; august } } ; 2 } = true", "tointer": "select the rows whose date record fuzzily matches to august . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; date ; august } } ; 2 } = true", "interpret": "select the rows whose date record fuzzily matches to august . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "august_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "august_6": "august", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "august_6": [0], "2_7": [2]}, "table_header": ["rnd", "race", "date", "location", "pole position", "fastest lap", "race winner", "constructor", "report"], "table_cont": [["1", "argentine grand prix", "12 january", "buenos aires", "jean - pierre jarier", "james hunt", "emerson fittipaldi", "mclaren - ford", "report"], ["2", "brazilian grand prix", "26 january", "interlagos", "jean - pierre jarier", "jean - pierre jarier", "carlos pace", "brabham - ford", "report"], ["3", "south african grand prix", "1 march", "kyalami", "carlos pace", "carlos pace", "jody scheckter", "tyrrell - ford", "report"], ["4", "spanish grand prix", "27 april", "montju\u00efc", "niki lauda", "mario andretti", "jochen mass", "mclaren - ford", "report"], ["5", "monaco grand prix", "11 may", "monaco", "niki lauda", "patrick depailler", "niki lauda", "ferrari", "report"], ["6", "belgian grand prix", "25 may", "zolder", "niki lauda", "clay regazzoni", "niki lauda", "ferrari", "report"], ["7", "swedish grand prix", "8 june", "anderstorp", "vittorio brambilla", "niki lauda", "niki lauda", "ferrari", "report"], ["8", "dutch grand prix", "22 june", "zandvoort", "niki lauda", "niki lauda", "james hunt", "hesketh - ford", "report"], ["9", "french grand prix", "6 july", "paul ricard", "niki lauda", "jochen mass", "niki lauda", "ferrari", "report"], ["10", "british grand prix", "19 july", "silverstone", "tom pryce", "clay regazzoni", "emerson fittipaldi", "mclaren - ford", "report"], ["11", "german grand prix", "3 august", "n\u00fcrburgring", "niki lauda", "clay regazzoni", "carlos reutemann", "brabham - ford", "report"], ["12", "austrian grand prix", "17 august", "\u00f6sterreichring", "niki lauda", "vittorio brambilla", "vittorio brambilla", "march - ford", "report"], ["13", "italian grand prix", "7 september", "monza", "niki lauda", "clay regazzoni", "clay regazzoni", "ferrari", "report"]], "query": "eq { count { filter_eq { all_rows ; date ; august } } ; 2 } = true", "question": "there were two races that took place in august in the 75 formula one season ."}, {"topic": "fil world luge championships 1961", "wiki": "https://en.wikipedia.org/wiki/FIL_World_Luge_Championships_1961", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11137150-4.html.csv", "action": "unique", "sent": "austria was the only country to have bronze medals in the luge championship in 1961 .", "annotation": {"scope": "all", "row": "1", "col": "5", "col_other": "2", "criterion": "greater_than", "value": "0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "bronze", "0"], "result": null, "ind": 0, "tointer": "select the rows whose bronze record is greater than 0 .", "tostr": "filter_greater { all_rows ; bronze ; 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; bronze ; 0 } }", "tointer": "select the rows whose bronze record is greater than 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "bronze", "0"], "result": null, "ind": 0, "tointer": "select the rows whose bronze record is greater than 0 .", "tostr": "filter_greater { all_rows ; bronze ; 0 }"}, "nation"], "result": "austria", "ind": 2, "tostr": "hop { filter_greater { all_rows ; bronze ; 0 } ; nation }"}, "austria"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; bronze ; 0 } ; nation } ; austria }", "tointer": "the nation record of this unqiue row is austria ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; bronze ; 0 } } ; eq { hop { filter_greater { all_rows ; bronze ; 0 } ; nation } ; austria } } = true", "tointer": "select the rows whose bronze record is greater than 0 . there is only one such row in the table . the nation record of this unqiue row is austria ."}, "logic_str": "and { only { filter_greater { all_rows ; bronze ; 0 } } ; eq { hop { filter_greater { all_rows ; bronze ; 0 } ; nation } ; austria } } = true", "interpret": "select the rows whose bronze record is greater than 0 . there is only one such row in the table . the nation record of this unqiue row is austria .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "bronze_7": 7, "0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "nation_9": 9, "austria_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "bronze_7": "bronze", "0_8": "0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "nation_9": "nation", "austria_10": "austria"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "bronze_7": [0], "0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "nation_9": [2], "austria_10": [3]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "austria", "0", "0", "3", "3"], ["2", "italy", "1", "1", "0", "2"], ["3", "west germany", "0", "2", "0", "2"], ["4", "poland", "1", "0", "0", "1"], ["5", "switzerland", "1", "0", "0", "1"]], "query": "and { only { filter_greater { all_rows ; bronze ; 0 } } ; eq { hop { filter_greater { all_rows ; bronze ; 0 } ; nation } ; austria } } = true", "question": "austria was the only country to have bronze medals in the luge championship in 1961 ."}, {"topic": "fahed attal", "wiki": "https://en.wikipedia.org/wiki/Fahed_Attal", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14033387-1.html.csv", "action": "majority", "sent": "the majority of the competitions were the 2006 afc challenge cup .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "2006 afc challenge cup", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "competition", "2006 afc challenge cup"], "result": true, "ind": 0, "tointer": "for the competition records of all rows , most of them fuzzily match to 2006 afc challenge cup .", "tostr": "most_eq { all_rows ; competition ; 2006 afc challenge cup } = true"}, "logic_str": "most_eq { all_rows ; competition ; 2006 afc challenge cup } = true", "interpret": "for the competition records of all rows , most of them fuzzily match to 2006 afc challenge cup .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "competition_3": 3, "2006 afc challenge cup_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "competition_3": "competition", "2006 afc challenge cup_4": "2006 afc challenge cup"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "competition_3": [0], "2006 afc challenge cup_4": [0]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["16 february 2006", "bahrain national stadium , manama", "2 - 0", "2 - 0", "friendly"], ["18 february 2006", "bahrain national stadium , manama", "1 - 0", "1 - 0", "friendly"], ["18 february 2006", "bahrain national stadium , manama", "2 - 0", "2 - 0", "friendly"], ["1 march 2006", "king abdullah stadium , amman", "1 - 0", "1 - 0", "2007 afc asian cup qualifier"], ["1 april 2006", "bangabandhu stadium , dhaka", "2 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "3 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "5 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "6 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "8 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "11 - 0", "11 - 0", "2006 afc challenge cup"], ["3 april 2006", "bangabandhu stadium , dhaka", "3 - 0", "4 - 0", "2006 afc challenge cup"], ["5 april 2006", "bangabandhu stadium , dhaka", "1 - 0", "1 - 1", "2006 afc challenge cup"], ["8 march 2012", "dasarath rangasala stadium , kathmandu", "2 - 0", "2 - 0", "2012 afc challenge cup"], ["19 march 2012", "dasarath rangasala stadium , kathmandu", "3 - 4", "3 - 4", "2012 afc challenge cup"]], "query": "most_eq { all_rows ; competition ; 2006 afc challenge cup } = true", "question": "the majority of the competitions were the 2006 afc challenge cup ."}, {"topic": "channel one ( uk and ireland )", "wiki": "https://en.wikipedia.org/wiki/Channel_One_%28UK_and_Ireland%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11711773-1.html.csv", "action": "ordinal", "sent": "warehouse 13 received the second most viewers of any episode on channel one .", "annotation": {"row": "2", "col": "4", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "number of viewers", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; number of viewers ; 2 }"}, "show"], "result": "warehouse 13", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; number of viewers ; 2 } ; show }"}, "warehouse 13"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; number of viewers ; 2 } ; show } ; warehouse 13 } = true", "tointer": "select the row whose number of viewers record of all rows is 2nd maximum . the show record of this row is warehouse 13 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; number of viewers ; 2 } ; show } ; warehouse 13 } = true", "interpret": "select the row whose number of viewers record of all rows is 2nd maximum . the show record of this row is warehouse 13 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "number of viewers_5": 5, "2_6": 6, "show_7": 7, "warehouse 13_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "number of viewers_5": "number of viewers", "2_6": "2", "show_7": "show", "warehouse 13_8": "warehouse 13"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "number of viewers_5": [0], "2_6": [0], "show_7": [1], "warehouse 13_8": [2]}, "table_header": ["rank", "show", "episode", "number of viewers", "date"], "table_cont": [["1", "terminator : the sarah connor chronicles", "1.01 - pilot", "764000", "21 february 2008"], ["2", "warehouse 13", "1.01 - pilot", "570000", "8 april 2010"], ["3", "warehouse 13", "1.02 - resonance", "555000", "15 april 2010"], ["4", "v", "1.01 - pilot", "541000", "11 october 2010"], ["5", "v", "1.02 - there is no normal anymore", "495000", "18 october 2010"], ["6", "warehouse 13", "1.04 - claudia", "479000", "29 april 2010"], ["7", "terminator : the sarah connor chronicles", "1.03 - the turk", "463000", "6 march 2008"], ["8", "terminator : the sarah connor chronicles", "1.05 - queen 's gambit", "450000", "20 march 2008"], ["9", "terminator : the sarah connor chronicles", "1.02 - gnothi seauton", "446000", "28 february 2008"], ["10", "terminator : the sarah connor chronicles", "1.04 - heavy metal", "445000", "13 march 2008"]], "query": "eq { hop { nth_argmax { all_rows ; number of viewers ; 2 } ; show } ; warehouse 13 } = true", "question": "warehouse 13 received the second most viewers of any episode on channel one ."}, {"topic": "ar - 15 variants", "wiki": "https://en.wikipedia.org/wiki/AR-15_variants", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12834315-8.html.csv", "action": "comparative", "sent": "the lsw variant of the ar-15 has a longer barrel length than the c8 variant .", "annotation": {"row_1": "5", "row_2": "6", "col": "7", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "diemaco model", "lsw"], "result": null, "ind": 0, "tointer": "select the rows whose diemaco model record fuzzily matches to lsw .", "tostr": "filter_eq { all_rows ; diemaco model ; lsw }"}, "barrel length"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; diemaco model ; lsw } ; barrel length }", "tointer": "select the rows whose diemaco model record fuzzily matches to lsw . take the barrel length record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "diemaco model", "c8"], "result": null, "ind": 1, "tointer": "select the rows whose diemaco model record fuzzily matches to c8 .", "tostr": "filter_eq { all_rows ; diemaco model ; c8 }"}, "barrel length"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; diemaco model ; c8 } ; barrel length }", "tointer": "select the rows whose diemaco model record fuzzily matches to c8 . take the barrel length record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; diemaco model ; lsw } ; barrel length } ; hop { filter_eq { all_rows ; diemaco model ; c8 } ; barrel length } } = true", "tointer": "select the rows whose diemaco model record fuzzily matches to lsw . take the barrel length record of this row . select the rows whose diemaco model record fuzzily matches to c8 . take the barrel length record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; diemaco model ; lsw } ; barrel length } ; hop { filter_eq { all_rows ; diemaco model ; c8 } ; barrel length } } = true", "interpret": "select the rows whose diemaco model record fuzzily matches to lsw . take the barrel length record of this row . select the rows whose diemaco model record fuzzily matches to c8 . take the barrel length record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "diemaco model_7": 7, "lsw_8": 8, "barrel length_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "diemaco model_11": 11, "c8_12": 12, "barrel length_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "diemaco model_7": "diemaco model", "lsw_8": "lsw", "barrel length_9": "barrel length", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "diemaco model_11": "diemaco model", "c8_12": "c8", "barrel length_13": "barrel length"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "diemaco model_7": [0], "lsw_8": [0], "barrel length_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "diemaco model_11": [1], "c8_12": [1], "barrel length_13": [3]}, "table_header": ["colt model no", "diemaco model", "stock", "fire control", "rear sight", "forward assist", "barrel length", "barrel profile", "barrel twist", "hand guards", "bayonet lug", "muzzle device"], "table_cont": [["715", "c7", "a2", "s - 1 - f", "a1", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["n / a", "c7ft", "a2", "s - 1 - f", "weaver", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["n / a", "c7a2", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "20 in", "a2", "1:7", "ribbed", "yes", "a2"], ["750", "colt / diemaco lmg / lsw", "a2", "s - f", "a2", "yes", "20 in", "hbar", "1:7", "square lmg", "no", "a2"], ["n / a", "lsw", "a2", "s - f", "weaver", "yes", "20 in", "hbar", "1:7", "square lmg", "no", "a2"], ["725", "c8", "3rd generation", "s - 1 - f", "a1", "yes", "14.5 in", "a1", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8ft", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "14.5 in", "a1", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8fthb", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "14.5 in", "a2", "1:7", "short ribbed", "yes", "a2"], ["n / a", "sfw", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "16 in", "sfw", "1:7", "short ribbed", "yes", "a2"], ["n / a", "c8cqb", "canadian 3rd generation", "s - 1 - f", "weaver", "yes", "10 in", "a2", "1:7", "short ribbed", "yes", "a2"]], "query": "greater { hop { filter_eq { all_rows ; diemaco model ; lsw } ; barrel length } ; hop { filter_eq { all_rows ; diemaco model ; c8 } ; barrel length } } = true", "question": "the lsw variant of the ar-15 has a longer barrel length than the c8 variant ."}, {"topic": "1979 vfl season", "wiki": "https://en.wikipedia.org/wiki/1979_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10823719-15.html.csv", "action": "majority", "sent": "the majority of crowds totaled over 15000 people .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than", "value": "15000", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "crowd", "15000"], "result": true, "ind": 0, "tointer": "for the crowd records of all rows , most of them are greater than 15000 .", "tostr": "most_greater { all_rows ; crowd ; 15000 } = true"}, "logic_str": "most_greater { all_rows ; crowd ; 15000 } = true", "interpret": "for the crowd records of all rows , most of them are greater than 15000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "crowd_3": 3, "15000_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "crowd_3": "crowd", "15000_4": "15000"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "crowd_3": [0], "15000_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["melbourne", "24.23 ( 167 )", "south melbourne", "24.10 ( 154 )", "mcg", "15039", "14 july 1979"], ["footscray", "24.16 ( 160 )", "st kilda", "11.15 ( 81 )", "western oval", "13386", "14 july 1979"], ["collingwood", "10.16 ( 76 )", "north melbourne", "20.13 ( 133 )", "victoria park", "30415", "14 july 1979"], ["carlton", "18.18 ( 126 )", "essendon", "12.11 ( 83 )", "princes park", "44661", "14 july 1979"], ["hawthorn", "11.13 ( 79 )", "geelong", "11.12 ( 78 )", "vfl park", "20777", "14 july 1979"], ["richmond", "22.20 ( 152 )", "fitzroy", "20.15 ( 135 )", "scg", "17140", "15 july 1979"]], "query": "most_greater { all_rows ; crowd ; 15000 } = true", "question": "the majority of crowds totaled over 15000 people ."}, {"topic": "houston rockets all - time roster", "wiki": "https://en.wikipedia.org/wiki/Houston_Rockets_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11734041-17.html.csv", "action": "unique", "sent": "purvis short is the only player who played forward and guard position for the houston rockets .", "annotation": {"scope": "all", "row": "3", "col": "4", "col_other": "1", "criterion": "equal", "value": "forward / guard", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "forward / guard"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to forward / guard .", "tostr": "filter_eq { all_rows ; position ; forward / guard }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; position ; forward / guard } }", "tointer": "select the rows whose position record fuzzily matches to forward / guard . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "forward / guard"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to forward / guard .", "tostr": "filter_eq { all_rows ; position ; forward / guard }"}, "player"], "result": "short , purvis purvis short", "ind": 2, "tostr": "hop { filter_eq { all_rows ; position ; forward / guard } ; player }"}, "short , purvis purvis short"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; position ; forward / guard } ; player } ; short , purvis purvis short }", "tointer": "the player record of this unqiue row is short , purvis purvis short ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; position ; forward / guard } } ; eq { hop { filter_eq { all_rows ; position ; forward / guard } ; player } ; short , purvis purvis short } } = true", "tointer": "select the rows whose position record fuzzily matches to forward / guard . there is only one such row in the table . the player record of this unqiue row is short , purvis purvis short ."}, "logic_str": "and { only { filter_eq { all_rows ; position ; forward / guard } } ; eq { hop { filter_eq { all_rows ; position ; forward / guard } ; player } ; short , purvis purvis short } } = true", "interpret": "select the rows whose position record fuzzily matches to forward / guard . there is only one such row in the table . the player record of this unqiue row is short , purvis purvis short .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "position_7": 7, "forward / guard_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "short , purvis purvis short_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "position_7": "position", "forward / guard_8": "forward / guard", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "short , purvis purvis short_10": "short , purvis purvis short"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "position_7": [0], "forward / guard_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "short , purvis purvis short_10": [3]}, "table_header": ["player", "no ( s )", "height in ft", "position", "years for rockets", "school / club team / country"], "table_cont": [["sampson , ralph ralph sampson", "50", "7 - 4", "forward / center", "1983 - 88", "virginia"], ["scola , luis luis scola", "4", "6 - 9", "forward", "2007 - 2012", "argentina"], ["short , purvis purvis short", "10", "6 - 7", "forward / guard", "1987 - 89", "jackson state"], ["shumate , john john shumate", "34", "6 - 9", "forward", "1979 - 80", "notre dame"], ["siegfried , larry larry siegfried", "20", "6 - 3", "guard", "1970 - 71", "ohio state"], ["smith , bobby bobby smith", "32", "6 - 5", "forward", "1969 - 70", "tulsa"], ["smith , greg greg smith", "4", "6 - 5", "forward", "1971 - 72", "western kentucky"], ["smith , kenny kenny smith", "30", "6 - 3", "guard", "1990 - 96", "north carolina"], ["smith , larry larry smith", "13", "6 - 8", "forward / center", "1989 - 92", "alcorn state"], ["snyder , kirk kirk snyder", "13", "6 - 6", "guard", "2006 - 08", "nevada - reno"], ["spanoulis , vassilis vassilis spanoulis", "10", "6 - 4", "guard", "2006 - 07", "greece"], ["spriggs , larry larry spriggs", "35", "6 - 7", "forward", "1981", "howard"], ["stephens , joe joe stephens", "41", "6 - 7", "forward", "1997", "arkansas - little rock"], ["strickland , rod rod strickland", "31", "6 - 3", "guard", "2004 - 05", "depaul"], ["stroud , john john stroud", "42", "6 - 7", "forward", "1980 - 81", "mississippi"], ["sura , bob bob sura", "3", "6 - 5", "guard", "2004 - 07", "florida state"]], "query": "and { only { filter_eq { all_rows ; position ; forward / guard } } ; eq { hop { filter_eq { all_rows ; position ; forward / guard } ; player } ; short , purvis purvis short } } = true", "question": "purvis short is the only player who played forward and guard position for the houston rockets ."}, {"topic": "leo\u0161 friedl", "wiki": "https://en.wikipedia.org/wiki/Leo%C5%A1_Friedl", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12859623-3.html.csv", "action": "ordinal", "sent": "the tournament in channai , india was the third of these tournaments to take place .", "annotation": {"row": "3", "col": "1", "order": "3", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; date ; 3 }"}, "tournament"], "result": "chennai , india", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; date ; 3 } ; tournament }"}, "chennai , india"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 3 } ; tournament } ; chennai , india } = true", "tointer": "select the row whose date record of all rows is 3rd minimum . the tournament record of this row is chennai , india ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; date ; 3 } ; tournament } ; chennai , india } = true", "interpret": "select the row whose date record of all rows is 3rd minimum . the tournament record of this row is chennai , india .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "date_5": 5, "3_6": 6, "tournament_7": 7, "chennai , india_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "date_5": "date", "3_6": "3", "tournament_7": "tournament", "chennai , india_8": "chennai , india"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "date_5": [0], "3_6": [0], "tournament_7": [1], "chennai , india_8": [2]}, "table_header": ["date", "tournament", "surface", "partner", "opponents in final", "score"], "table_cont": [["26 august 2001", "long island , usa", "hard", "radek \u0161t\u011bp\u00e1nek", "jonathan stark kevin ullyett", "1 - 6 , 4 - 6"], ["29 september 2002", "palermo , italy", "clay", "franti\u0161ek \u010derm\u00e1k", "lucas arnold ker luis lobo", "4 - 6 , 6 - 4 , 2 - 6"], ["5 january 2003", "chennai , india", "hard", "franti\u0161ek \u010derm\u00e1k", "julian knowle michael kohlmann", "6 - 7 ( 1 - 7 ) , 6 - 7 ( 3 - 7 )"], ["11 january 2003", "auckland , new zealand", "hard", "tom\u00e1\u0161 cibulec", "david adams robbie koenig", "6 - 7 , 6 - 3 , 3 - 6"], ["16 february 2003", "vi\u00f1a del mar , chile", "clay", "franti\u0161ek \u010derm\u00e1k", "agust\u00edn calleri mariano hood", "3 - 6 , 6 - 1 , 4 - 6"], ["13 july 2003", "gstaad , switzerland", "clay", "franti\u0161ek \u010derm\u00e1k", "leander paes david rikl", "3 - 6 , 3 - 6"], ["3 august 2003", "sopot , poland", "clay", "franti\u0161ek \u010derm\u00e1k", "mariusz fyrstenberg marcin matkowski", "4 - 6 , 7 - 6 ( 9 - 7 ) , 3 - 6"], ["28 september 2003", "palermo , italy", "clay", "franti\u0161ek \u010derm\u00e1k", "lucas arnold ker mariano hood", "6 - 7 ( 6 - 8 ) , 7 - 6 ( 7 - 3 ) , 4 - 6"], ["28 february 2004", "costa do sauipe , brasil", "clay", "tomas behrend", "mariusz fyrstenberg marcin matkowski", "2 - 6 , 2 - 6"], ["18 april 2004", "estoril , portugal", "clay", "franti\u0161ek \u010derm\u00e1k", "juan ignacio chela gast\u00f3n gaudio", "2 - 6 , 1 - 6"], ["23 may 2004", "st p\u00f6lten , austria", "clay", "tom\u00e1\u0161 cibulec", "mariano hood petr p\u00e1la", "6 - 3 , 5 - 7 , 4 - 6"], ["19 june 2005", "'s - hertogenbosch , netherlands", "grass", "tom\u00e1\u0161 cibulec", "cyril suk pavel v\u00edzner", "3 - 6 , 4 - 6"], ["15 january 2006", "sydney , australia", "hard", "franti\u0161ek \u010derm\u00e1k", "fabrice santoro nenad zimonji\u0107", "1 - 6 , 4 - 6"], ["5 february 2006", "vi\u00f1a del mar , chile", "clay", "franti\u0161ek \u010derm\u00e1k", "jos\u00e9 acasuso sebasti\u00e1n prieto", "6 - 7 ( 2 - 7 ) , 4 - 6"], ["7 may 2006", "estoril , portugal", "clay", "lucas arnold ker", "luk\u00e1\u0161 dlouh\u00fd pavel v\u00edzner", "3 - 6 , 1 - 6"], ["20 may 2007", "p\u00f6rtschach , austria", "clay", "david \u0161koch", "simon aspelin julian knowle", "6 - 7 ( 6 - 8 ) , 7 - 5 ,"]], "query": "eq { hop { nth_argmin { all_rows ; date ; 3 } ; tournament } ; chennai , india } = true", "question": "the tournament in channai , india was the third of these tournaments to take place ."}, {"topic": "2007 lff lyga", "wiki": "https://en.wikipedia.org/wiki/2007_LFF_Lyga", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18018248-3.html.csv", "action": "count", "sent": "in the 2007 lff lyga 4 competitors drew more than five of their games .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "5", "result": "4", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "draws", "5"], "result": null, "ind": 0, "tointer": "select the rows whose draws record is greater than 5 .", "tostr": "filter_greater { all_rows ; draws ; 5 }"}], "result": "4", "ind": 1, "tostr": "count { filter_greater { all_rows ; draws ; 5 } }", "tointer": "select the rows whose draws record is greater than 5 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; draws ; 5 } } ; 4 } = true", "tointer": "select the rows whose draws record is greater than 5 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_greater { all_rows ; draws ; 5 } } ; 4 } = true", "interpret": "select the rows whose draws record is greater than 5 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "draws_5": 5, "5_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "draws_5": "draws", "5_6": "5", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "draws_5": [0], "5_6": [0], "4_7": [2]}, "table_header": ["position", "club", "games played", "wins", "draws", "loses", "goals scored", "goals conceded", "points"], "table_cont": [["1", "rodiklis kaunas", "22", "16", "3", "3", "76", "20", "51"], ["2", "alytis alytus", "22", "14", "5", "3", "61", "14", "47"], ["3", "nev\u0117\u017eis k\u0117dainiai", "22", "13", "6", "3", "44", "17", "45"], ["4", "kruoja pakruojis", "22", "13", "4", "5", "45", "23", "43"], ["5", "lietava jonava", "22", "11", "4", "7", "41", "25", "37"], ["6", "banga garg\u017edai", "22", "9", "7", "6", "42", "12", "34"], ["7", "lkka ir teledema kaunas", "22", "10", "3", "9", "76", "34", "33"], ["8", "kauno j\u0117geriai", "22", "7", "6", "9", "34", "30", "27"], ["9", "vilkmerg\u0117 ukmerg\u0117", "22", "5", "3", "14", "31", "60", "18"], ["10", "glestum klaip\u0117da", "22", "4", "6", "12", "23", "59", "18"], ["11", "tauras ir erra taurag\u0117", "22", "3", "2", "17", "17", "126", "11"], ["12", "fk anyk\u0161\u010diai", "22", "1", "3", "18", "14", "84", "6"]], "query": "eq { count { filter_greater { all_rows ; draws ; 5 } } ; 4 } = true", "question": "in the 2007 lff lyga 4 competitors drew more than five of their games ."}, {"topic": "sleepless nights ( patty loveless album )", "wiki": "https://en.wikipedia.org/wiki/Sleepless_Nights_%28Patty_Loveless_album%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18424482-2.html.csv", "action": "comparative", "sent": "he thinks i still care is a longer song than the pain of loving you .", "annotation": {"row_1": "3", "row_2": "2", "col": "6", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "song title", "he thinks i still care"], "result": null, "ind": 0, "tointer": "select the rows whose song title record fuzzily matches to he thinks i still care .", "tostr": "filter_eq { all_rows ; song title ; he thinks i still care }"}, "length"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; song title ; he thinks i still care } ; length }", "tointer": "select the rows whose song title record fuzzily matches to he thinks i still care . take the length record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "song title", "the pain of loving you"], "result": null, "ind": 1, "tointer": "select the rows whose song title record fuzzily matches to the pain of loving you .", "tostr": "filter_eq { all_rows ; song title ; the pain of loving you }"}, "length"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; song title ; the pain of loving you } ; length }", "tointer": "select the rows whose song title record fuzzily matches to the pain of loving you . take the length record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; song title ; he thinks i still care } ; length } ; hop { filter_eq { all_rows ; song title ; the pain of loving you } ; length } } = true", "tointer": "select the rows whose song title record fuzzily matches to he thinks i still care . take the length record of this row . select the rows whose song title record fuzzily matches to the pain of loving you . take the length record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; song title ; he thinks i still care } ; length } ; hop { filter_eq { all_rows ; song title ; the pain of loving you } ; length } } = true", "interpret": "select the rows whose song title record fuzzily matches to he thinks i still care . take the length record of this row . select the rows whose song title record fuzzily matches to the pain of loving you . take the length record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "song title_7": 7, "he thinks i still care_8": 8, "length_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "song title_11": 11, "the pain of loving you_12": 12, "length_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "song title_7": "song title", "he thinks i still care_8": "he thinks i still care", "length_9": "length", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "song title_11": "song title", "the pain of loving you_12": "the pain of loving you", "length_13": "length"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "song title_7": [0], "he thinks i still care_8": [0], "length_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "song title_11": [1], "the pain of loving you_12": [1], "length_13": [3]}, "table_header": ["track", "song title", "writer ( s )", "original artist", "original release", "length"], "table_cont": [["1", "why baby why", "darrell edwards , george jones", "george jones", "1955", "2:18"], ["2", "the pain of loving you", "dolly parton , porter wagoner", "porter wagoner & dolly parton", "1971", "2:46"], ["3", "he thinks i still care", "dickey lee", "george jones", "1962", "2:59"], ["4", "sleepless nights ( featuring vince gill )", "boudleaux bryant , felice bryant", "everly brothers", "1960", "4:21"], ["5", "crazy arms", "ralph mooney , chuck seals", "ray price", "1956", "4:00"], ["6", "there stands the glass", "audrey greisham , russ hull , mary jean shurtz", "webb pierce", "1953", "2:35"], ["7", "that 's all it took ( featuring jedd hughes )", "darrell edwards , carlos grier , jones", "george jones & gene pitney", "1966", "2:35"], ["8", "color of the blues", "jones , lawton williams", "george jones", "1958", "3:06"], ["9", "i forgot more than you 'll ever know", "cecil null", "the davis sisters", "1953", "3:30"], ["10", "next in line", "wayne kemp , curtis wayne", "conway twitty", "1968", "3:06"], ["11", "do n't let me cross over", "penny jay", "carl butler and pearl", "1962", "3:23"], ["12", "please help me i 'm falling", "hal blair , don robertson", "hank locklin", "1960", "2:40"], ["13", "there goes my everything", "dallas frazier", "jack greene", "1966", "2:50"], ["14", "cold , cold heart", "hank williams", "hank williams", "1951", "2:53"], ["15", "we 'll sweep out the ashes in the morning", "joyce ann allsup", "carl butler & pearl", "1969", "3:14"], ["16", "if teardrops were pennies", "carl butler", "carl smith", "1951", "2:38"]], "query": "greater { hop { filter_eq { all_rows ; song title ; he thinks i still care } ; length } ; hop { filter_eq { all_rows ; song title ; the pain of loving you } ; length } } = true", "question": "he thinks i still care is a longer song than the pain of loving you ."}, {"topic": "extreme engineering", "wiki": "https://en.wikipedia.org/wiki/Extreme_Engineering", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1792122-11.html.csv", "action": "unique", "sent": "there was only one episode that was filmed with a reference to the olympics .", "annotation": {"scope": "all", "row": "4", "col": "3", "col_other": "n/a", "criterion": "fuzzily_match", "value": "olympic", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "title", "olympic"], "result": null, "ind": 0, "tointer": "select the rows whose title record fuzzily matches to olympic .", "tostr": "filter_eq { all_rows ; title ; olympic }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; title ; olympic } } = true", "tointer": "select the rows whose title record fuzzily matches to olympic . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; title ; olympic } } = true", "interpret": "select the rows whose title record fuzzily matches to olympic . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "title_4": 4, "olympic_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "title_4": "title", "olympic_5": "olympic"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "title_4": [0], "olympic_5": [0]}, "table_header": ["no in series", "no in season", "title", "country", "project", "status at production", "original air date"], "table_cont": [["70", "1", "rebuilding new york city 's subway", "united states", "new york city subway expansion", "under construction", "april 8 , 2011"], ["71", "2", "drought - proofing australia", "australia", "wonthaggi desalination plant", "under construction", "april 15 , 2011"], ["72", "3", "azerbaijan 's amazing transformation", "azerbaijan", "flame towers and heydar aliyev cultural centre", "under construction", "april 22 , 2011"], ["73", "4", "london 's olympic aquatic stadium", "united kingdom", "london aquatics centre", "under construction", "april 29 , 2011"], ["74", "5", "constructing serbia 's largest bridge", "serbia", "ada bridge", "under construction", "june 18 , 2011"], ["75", "6", "amsterdam 's futuristic floating city", "netherlands", "netherlands land expansion", "under construction", "june 25 , 2011"], ["76", "7", "building mumbai 's modern airport", "india", "chhatrapati shivaji international airport", "under construction", "july 2 , 2011"]], "query": "only { filter_eq { all_rows ; title ; olympic } } = true", "question": "there was only one episode that was filmed with a reference to the olympics ."}, {"topic": "1939 vfl season", "wiki": "https://en.wikipedia.org/wiki/1939_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10806852-4.html.csv", "action": "comparative", "sent": "the game hosted by fitzroy had a larger crowd than the game hosted by north melbourne .", "annotation": {"row_1": "2", "row_2": "3", "col": "6", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "home team", "fitzroy"], "result": null, "ind": 0, "tointer": "select the rows whose home team record fuzzily matches to fitzroy .", "tostr": "filter_eq { all_rows ; home team ; fitzroy }"}, "crowd"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; home team ; fitzroy } ; crowd }", "tointer": "select the rows whose home team record fuzzily matches to fitzroy . take the crowd record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "home team", "north melbourne"], "result": null, "ind": 1, "tointer": "select the rows whose home team record fuzzily matches to north melbourne .", "tostr": "filter_eq { all_rows ; home team ; north melbourne }"}, "crowd"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; home team ; north melbourne } ; crowd }", "tointer": "select the rows whose home team record fuzzily matches to north melbourne . take the crowd record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; home team ; fitzroy } ; crowd } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; crowd } } = true", "tointer": "select the rows whose home team record fuzzily matches to fitzroy . take the crowd record of this row . select the rows whose home team record fuzzily matches to north melbourne . take the crowd record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; home team ; fitzroy } ; crowd } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; crowd } } = true", "interpret": "select the rows whose home team record fuzzily matches to fitzroy . take the crowd record of this row . select the rows whose home team record fuzzily matches to north melbourne . take the crowd record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "home team_7": 7, "fitzroy_8": 8, "crowd_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "home team_11": 11, "north melbourne_12": 12, "crowd_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "home team_7": "home team", "fitzroy_8": "fitzroy", "crowd_9": "crowd", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "home team_11": "home team", "north melbourne_12": "north melbourne", "crowd_13": "crowd"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "home team_7": [0], "fitzroy_8": [0], "crowd_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "home team_11": [1], "north melbourne_12": [1], "crowd_13": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["richmond", "14.24 ( 108 )", "south melbourne", "13.7 ( 85 )", "punt road oval", "15000", "13 may 1939"], ["fitzroy", "10.17 ( 77 )", "hawthorn", "11.11 ( 77 )", "brunswick street oval", "12000", "13 may 1939"], ["north melbourne", "11.8 ( 74 )", "melbourne", "15.20 ( 110 )", "arden street oval", "10500", "13 may 1939"], ["geelong", "19.15 ( 129 )", "essendon", "11.15 ( 81 )", "corio oval", "11000", "13 may 1939"], ["st kilda", "20.11 ( 131 )", "collingwood", "13.16 ( 94 )", "junction oval", "28000", "13 may 1939"], ["footscray", "5.12 ( 42 )", "carlton", "14.16 ( 100 )", "western oval", "23000", "13 may 1939"]], "query": "greater { hop { filter_eq { all_rows ; home team ; fitzroy } ; crowd } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; crowd } } = true", "question": "the game hosted by fitzroy had a larger crowd than the game hosted by north melbourne ."}, {"topic": "indiana high school athletics conferences : ohio river valley - western indiana", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Ohio_River_Valley_%E2%80%93_Western_Indiana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18974097-6.html.csv", "action": "count", "sent": "a total of three schools in the ohio river valley - western indiana conference are in the 54 montgomery county .", "annotation": {"scope": "all", "criterion": "equal", "value": "54 montgomery", "result": "3", "col": "7", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "county", "54 montgomery"], "result": null, "ind": 0, "tointer": "select the rows whose county record fuzzily matches to 54 montgomery .", "tostr": "filter_eq { all_rows ; county ; 54 montgomery }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; county ; 54 montgomery } }", "tointer": "select the rows whose county record fuzzily matches to 54 montgomery . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; county ; 54 montgomery } } ; 3 } = true", "tointer": "select the rows whose county record fuzzily matches to 54 montgomery . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; county ; 54 montgomery } } ; 3 } = true", "interpret": "select the rows whose county record fuzzily matches to 54 montgomery . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "county_5": 5, "54 montgomery_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "county_5": "county", "54 montgomery_6": "54 montgomery", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "county_5": [0], "54 montgomery_6": [0], "3_7": [2]}, "table_header": ["school", "location", "mascot", "enrollment", "ihsaa class", "ihsaa football class", "county"], "table_cont": [["crawfordsville", "crawfordsville", "athenians", "689", "aaa", "aaa", "54 montgomery"], ["danville", "danville", "warriors", "824", "aaa", "aaa", "32 hendricks"], ["frankfort", "frankfort", "hot dogs", "887", "aaa", "aaaa", "12 clinton"], ["lebanon", "lebanon", "tigers", "1038", "aaa", "aaaa", "06 boone"], ["north montgomery", "crawfordsville", "chargers", "641", "aaa", "aaa", "54 montgomery"], ["southmont", "crawfordsville", "mounties", "612", "aaa", "aaa", "54 montgomery"], ["tri - west", "lizton", "bruins", "620", "aaa", "aaa", "32 hendricks"], ["western boone", "thorntown", "stars", "592", "aaa", "aaa", "06 boone"]], "query": "eq { count { filter_eq { all_rows ; county ; 54 montgomery } } ; 3 } = true", "question": "a total of three schools in the ohio river valley - western indiana conference are in the 54 montgomery county ."}, {"topic": "mario mand\u017euki\u0107", "wiki": "https://en.wikipedia.org/wiki/Mario_Mand%C5%BEuki%C4%87", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11914827-2.html.csv", "action": "count", "sent": "for competitions that mario mand\u017euki\u0107 participated in , when it was after 2010 , 3 of the competitions were euro 2012 qualifying .", "annotation": {"scope": "subset", "criterion": "equal", "value": "euro 2012 qualifying", "result": "3", "col": "5", "subset": {"col": "1", "criterion": "greater_than", "value": "31 december 2010"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_greater", "args": ["all_rows", "date", "31 december 2010"], "result": null, "ind": 0, "tostr": "filter_greater { all_rows ; date ; 31 december 2010 }", "tointer": "select the rows whose date record is greater than 31 december 2010 ."}, "competition", "euro 2012 qualifying"], "result": null, "ind": 1, "tointer": "select the rows whose date record is greater than 31 december 2010 . among these rows , select the rows whose competition record fuzzily matches to euro 2012 qualifying .", "tostr": "filter_eq { filter_greater { all_rows ; date ; 31 december 2010 } ; competition ; euro 2012 qualifying }"}], "result": "3", "ind": 2, "tostr": "count { filter_eq { filter_greater { all_rows ; date ; 31 december 2010 } ; competition ; euro 2012 qualifying } }", "tointer": "select the rows whose date record is greater than 31 december 2010 . among these rows , select the rows whose competition record fuzzily matches to euro 2012 qualifying . the number of such rows is 3 ."}, "3"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_greater { all_rows ; date ; 31 december 2010 } ; competition ; euro 2012 qualifying } } ; 3 } = true", "tointer": "select the rows whose date record is greater than 31 december 2010 . among these rows , select the rows whose competition record fuzzily matches to euro 2012 qualifying . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { filter_greater { all_rows ; date ; 31 december 2010 } ; competition ; euro 2012 qualifying } } ; 3 } = true", "interpret": "select the rows whose date record is greater than 31 december 2010 . among these rows , select the rows whose competition record fuzzily matches to euro 2012 qualifying . the number of such rows is 3 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_eq_1": 1, "filter_greater_0": 0, "all_rows_5": 5, "date_6": 6, "31 december 2010_7": 7, "competition_8": 8, "euro 2012 qualifying_9": 9, "3_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_eq_1": "filter_str_eq", "filter_greater_0": "filter_greater", "all_rows_5": "all_rows", "date_6": "date", "31 december 2010_7": "31 december 2010", "competition_8": "competition", "euro 2012 qualifying_9": "euro 2012 qualifying", "3_10": "3"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_eq_1": [2], "filter_greater_0": [1], "all_rows_5": [0], "date_6": [0], "31 december 2010_7": [0], "competition_8": [1], "euro 2012 qualifying_9": [1], "3_10": [3]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["10 september 2008", "maksimir stadium , zagreb , croatia", "1 - 3", "1 - 4", "2010 world cup qualifying"], ["12 october 2010", "maksimir stadium , zagreb , croatia", "1 - 1", "2 - 1", "friendly"], ["3 june 2011", "poljud stadium , split , croatia", "1 - 1", "2 - 1", "euro 2012 qualifying"], ["11 october 2011", "stadion kantrida , rijeka , croatia", "2 - 0", "2 - 0", "euro 2012 qualifying"], ["11 november 2011", "t\u00fcrk telekom arena , istanbul , turkey", "0 - 2", "0 - 3", "euro 2012 qualifying"], ["10 june 2012", "municipal stadium , pozna\u0144 , poland", "0 - 1", "1 - 3", "uefa euro 2012"], ["10 june 2012", "municipal stadium , pozna\u0144 , poland", "1 - 3", "1 - 3", "uefa euro 2012"], ["14 june 2012", "municipal stadium , pozna\u0144 , poland", "1 - 1", "1 - 1", "uefa euro 2012"], ["16 october 2012", "stadion gradski vrt , osijek , croatia", "1 - 0", "2 - 0", "2014 world cup qualifying"], ["6 february 2013", "craven cottage , london , england", "0 - 1", "0 - 4", "friendly"], ["22 march 2013", "stadion maksimir , zagreb , croatia", "1 - 0", "2 - 0", "2014 world cup qualifying"], ["6 september 2013", "stadion crvena zvezda , belgrade , serbia", "0 - 1", "1 - 1", "2014 world cup qualifying"]], "query": "eq { count { filter_eq { filter_greater { all_rows ; date ; 31 december 2010 } ; competition ; euro 2012 qualifying } } ; 3 } = true", "question": "for competitions that mario mand\u017euki\u0107 participated in , when it was after 2010 , 3 of the competitions were euro 2012 qualifying ."}, {"topic": "extreme engineering", "wiki": "https://en.wikipedia.org/wiki/Extreme_Engineering", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1792122-11.html.csv", "action": "majority", "sent": "the majority of the projects were still under construction during production .", "annotation": {"scope": "all", "col": "6", "most_or_all": "all", "criterion": "equal", "value": "under construction", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "status at production", "under construction"], "result": true, "ind": 0, "tointer": "for the status at production records of all rows , all of them fuzzily match to under construction .", "tostr": "all_eq { all_rows ; status at production ; under construction } = true"}, "logic_str": "all_eq { all_rows ; status at production ; under construction } = true", "interpret": "for the status at production records of all rows , all of them fuzzily match to under construction .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "status at production_3": 3, "under construction_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "status at production_3": "status at production", "under construction_4": "under construction"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "status at production_3": [0], "under construction_4": [0]}, "table_header": ["no in series", "no in season", "title", "country", "project", "status at production", "original air date"], "table_cont": [["70", "1", "rebuilding new york city 's subway", "united states", "new york city subway expansion", "under construction", "april 8 , 2011"], ["71", "2", "drought - proofing australia", "australia", "wonthaggi desalination plant", "under construction", "april 15 , 2011"], ["72", "3", "azerbaijan 's amazing transformation", "azerbaijan", "flame towers and heydar aliyev cultural centre", "under construction", "april 22 , 2011"], ["73", "4", "london 's olympic aquatic stadium", "united kingdom", "london aquatics centre", "under construction", "april 29 , 2011"], ["74", "5", "constructing serbia 's largest bridge", "serbia", "ada bridge", "under construction", "june 18 , 2011"], ["75", "6", "amsterdam 's futuristic floating city", "netherlands", "netherlands land expansion", "under construction", "june 25 , 2011"], ["76", "7", "building mumbai 's modern airport", "india", "chhatrapati shivaji international airport", "under construction", "july 2 , 2011"]], "query": "all_eq { all_rows ; status at production ; under construction } = true", "question": "the majority of the projects were still under construction during production ."}, {"topic": "list of game of the year awards", "wiki": "https://en.wikipedia.org/wiki/List_of_Game_of_the_Year_awards", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1851722-32.html.csv", "action": "ordinal", "sent": "the elder scrolls v : skyrim is the second most recent game on the list of game of the year awards .", "annotation": {"row": "4", "col": "1", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "year", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; year ; 2 }"}, "game"], "result": "the elder scrolls v : skyrim", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; year ; 2 } ; game }"}, "the elder scrolls v : skyrim"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; game } ; the elder scrolls v : skyrim } = true", "tointer": "select the row whose year record of all rows is 2nd maximum . the game record of this row is the elder scrolls v : skyrim ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; game } ; the elder scrolls v : skyrim } = true", "interpret": "select the row whose year record of all rows is 2nd maximum . the game record of this row is the elder scrolls v : skyrim .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "year_5": 5, "2_6": 6, "game_7": 7, "the elder scrolls v : skyrim_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "year_5": "year", "2_6": "2", "game_7": "game", "the elder scrolls v : skyrim_8": "the elder scrolls v : skyrim"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "year_5": [0], "2_6": [0], "game_7": [1], "the elder scrolls v : skyrim_8": [2]}, "table_header": ["year", "game", "genre", "platform ( s )", "developer ( s )"], "table_cont": [["2008", "grand theft auto iv", "open world action", "windows , playstation 3 , xbox 360", "rockstar north"], ["2009", "uncharted 2 : among thieves", "third - person shooter", "playstation 3", "naughty dog"], ["2010", "mass effect 2", "rpg", "xbox 360 , windows , playstation 3", "bioware"], ["2011", "the elder scrolls v : skyrim", "role - playing game", "windows , xbox 360", "bethesda game studios"], ["2012", "xcom : enemy unknown", "turn - based strategy", "windows , xbox 360 , playstation 3", "firaxis games"]], "query": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; game } ; the elder scrolls v : skyrim } = true", "question": "the elder scrolls v : skyrim is the second most recent game on the list of game of the year awards ."}, {"topic": "list of best - selling music artists", "wiki": "https://en.wikipedia.org/wiki/List_of_best-selling_music_artists", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1291598-6.html.csv", "action": "superlative", "sent": "of the music artists who first charted during the 1990s , the black eyed peas have the most claimed sales .", "annotation": {"scope": "subset", "col_superlative": "6", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": {"col": "3", "criterion": "fuzzily_match", "value": "199"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": [{"func": "filter_str_eq", "args": ["all_rows", "period active", "199"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; period active ; 199 }", "tointer": "select the rows whose period active record fuzzily matches to 199 ."}, "claimed sales"], "result": null, "ind": 1, "tostr": "argmax { filter_eq { all_rows ; period active ; 199 } ; claimed sales }"}, "artist"], "result": "the black eyed peas", "ind": 2, "tostr": "hop { argmax { filter_eq { all_rows ; period active ; 199 } ; claimed sales } ; artist }"}, "the black eyed peas"], "result": true, "ind": 3, "tostr": "eq { hop { argmax { filter_eq { all_rows ; period active ; 199 } ; claimed sales } ; artist } ; the black eyed peas } = true", "tointer": "select the rows whose period active record fuzzily matches to 199 . select the row whose claimed sales record of these rows is maximum . the artist record of this row is the black eyed peas ."}, "logic_str": "eq { hop { argmax { filter_eq { all_rows ; period active ; 199 } ; claimed sales } ; artist } ; the black eyed peas } = true", "interpret": "select the rows whose period active record fuzzily matches to 199 . select the row whose claimed sales record of these rows is maximum . the artist record of this row is the black eyed peas .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "argmax_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "period active_6": 6, "199_7": 7, "claimed sales_8": 8, "artist_9": 9, "the black eyed peas_10": 10}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "argmax_1": "argmax", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "period active_6": "period active", "199_7": "199", "claimed sales_8": "claimed sales", "artist_9": "artist", "the black eyed peas_10": "the black eyed peas"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "argmax_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "period active_6": [0], "199_7": [0], "claimed sales_8": [1], "artist_9": [2], "the black eyed peas_10": [3]}, "table_header": ["artist", "country of origin", "period active", "release - year of first charted record", "genre", "claimed sales"], "table_cont": [["the black eyed peas", "united states", "1995 - present", "1998", "hip - hop / r & b / dance", "76 million"], ["journey", "united states", "1973 - present", "1975", "rock / soft rock", "75 million"], ["beyonc\u00e9", "united states", "2003 - present", "2003", "r & b / pop", "75 million"], ["kenny g", "united states", "1982 - present", "1984", "smooth jazz", "75 million"], ["alabama", "united states", "1972 - present", "1980", "country / pop rock", "75 million"], ["enya", "ireland", "1982 - present", "1987", "new age / celtic", "75 million"], ["green day", "united states", "1987 - present", "1994", "punk rock / alternative rock", "75 million"], ["tupac shakur", "united states", "1988 - 1996", "1991", "hip hop", "75 million"], ["nirvana", "united states", "1987 - 1994", "1989", "grunge / alternative rock", "75 million"], ["spice girls", "united kingdom", "1996 - 2000 2007 - 2008", "1996", "pop / dance - pop", "75 million"], ["andrea bocelli", "italy", "1994 - present", "1994", "pop / classical / opera", "75 million"], ["bob marley", "jamaica", "1962 - 1981", "1975", "reggae", "75 million"], ["m\u00f6tley cr\u00fce", "united states", "1981 - present", "1983", "glam metal", "75 million"], ["depeche mode", "united kingdom", "1980 - present", "1981", "synth rock / electronic", "75 million"], ["aretha franklin", "united states", "1956 - present", "1961", "soul / jazz / blues / r & b", "75 million"], ["scorpions", "germany", "1969 - present", "1978", "hard rock", "75 million"]], "query": "eq { hop { argmax { filter_eq { all_rows ; period active ; 199 } ; claimed sales } ; artist } ; the black eyed peas } = true", "question": "of the music artists who first charted during the 1990s , the black eyed peas have the most claimed sales ."}, {"topic": "albania in the eurovision song contest 2008", "wiki": "https://en.wikipedia.org/wiki/Albania_in_the_Eurovision_Song_Contest_2008", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14314911-1.html.csv", "action": "superlative", "sent": "for albanian singers in the eurovision song contest in 2008 , the highest number of points was given to olta boka .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "16", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "singer"], "result": "olta boka", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; singer }"}, "olta boka"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; singer } ; olta boka } = true", "tointer": "select the row whose points record of all rows is maximum . the singer record of this row is olta boka ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; singer } ; olta boka } = true", "interpret": "select the row whose points record of all rows is maximum . the singer record of this row is olta boka .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "singer_6": 6, "olta boka_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "singer_6": "singer", "olta boka_7": "olta boka"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "singer_6": [1], "olta boka_7": [2]}, "table_header": ["draw", "singer", "song", "points", "place"], "table_cont": [["1", "manjola nallbani", "kjo bot\u00eb merr frym\u00eb nga dashuria", "27", "7"], ["2", "produkt 28", "30 sekonda", "3", "15"], ["3", "eneida tarifa", "e para let\u00ebr", "11", "10"], ["4", "mariza ikonomi", "mall i tretur", "20", "9"], ["5", "greta ko\u00e7i", "nat\u00ebn t\u00eb k\u00ebrkova", "35", "6"], ["6", "flaka krelani & doruntina disha", "jeta k\u00ebrkon dashuri", "57", "2"], ["7", "mira kon\u00e7i & redon makashi", "n\u00ebn nj\u00eb qiell", "37", "5"], ["8", "kthjellu", "dhoma", "9", "11"], ["9", "kozma dushi", "tatuazh n\u00eb kujtes\u00eb", "1", "16"], ["10", "devis xherahu", "endacaku", "0", "17"], ["11", "teuta kurti", "qyteti i dashuris\u00eb", "3", "14"], ["12", "samanta karavello", "pse u harrua dashuria", "23", "8"], ["13", "juliana pasha", "nj\u00eb qiell t\u00eb ri", "54", "3"], ["14", "agim poshka", "kujt i them t\u00eb dua", "8", "12"], ["15", "jonida maliqi", "s ' ka fajtor n\u00eb dashuri", "36", "4"], ["16", "olta boka", "zemr\u00ebn e lam\u00eb peng", "67", "1"], ["17", "rosela gjylbegu", "po lind nj\u00eb yll", "8", "13"]], "query": "eq { hop { argmax { all_rows ; points } ; singer } ; olta boka } = true", "question": "for albanian singers in the eurovision song contest in 2008 , the highest number of points was given to olta boka ."}, {"topic": "sheffield shield", "wiki": "https://en.wikipedia.org/wiki/Sheffield_Shield", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1585656-18.html.csv", "action": "comparative", "sent": "in the sheffield shield , jo angel had more matches than clarrie grimmett .", "annotation": {"row_1": "4", "row_2": "1", "col": "4", "col_other": "3", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "jo angel ( wa )"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to jo angel ( wa ) .", "tostr": "filter_eq { all_rows ; player ; jo angel ( wa ) }"}, "matches"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; jo angel ( wa ) } ; matches }", "tointer": "select the rows whose player record fuzzily matches to jo angel ( wa ) . take the matches record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "clarrie grimmett ( vic / sa )"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to clarrie grimmett ( vic / sa ) .", "tostr": "filter_eq { all_rows ; player ; clarrie grimmett ( vic / sa ) }"}, "matches"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; clarrie grimmett ( vic / sa ) } ; matches }", "tointer": "select the rows whose player record fuzzily matches to clarrie grimmett ( vic / sa ) . take the matches record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; player ; jo angel ( wa ) } ; matches } ; hop { filter_eq { all_rows ; player ; clarrie grimmett ( vic / sa ) } ; matches } } = true", "tointer": "select the rows whose player record fuzzily matches to jo angel ( wa ) . take the matches record of this row . select the rows whose player record fuzzily matches to clarrie grimmett ( vic / sa ) . take the matches record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; player ; jo angel ( wa ) } ; matches } ; hop { filter_eq { all_rows ; player ; clarrie grimmett ( vic / sa ) } ; matches } } = true", "interpret": "select the rows whose player record fuzzily matches to jo angel ( wa ) . take the matches record of this row . select the rows whose player record fuzzily matches to clarrie grimmett ( vic / sa ) . take the matches record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "jo angel (wa)_8": 8, "matches_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "clarrie grimmett (vic / sa)_12": 12, "matches_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "jo angel (wa)_8": "jo angel ( wa )", "matches_9": "matches", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "clarrie grimmett (vic / sa)_12": "clarrie grimmett ( vic / sa )", "matches_13": "matches"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "jo angel (wa)_8": [0], "matches_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "clarrie grimmett (vic / sa)_12": [1], "matches_13": [3]}, "table_header": ["rank", "s wicket", "player", "matches", "average"], "table_cont": [["1", "513", "clarrie grimmett ( vic / sa )", "79", "25.29"], ["2", "441", "michael kasprowicz ( qld )", "101", "24.56"], ["3", "430", "andy bichel ( qld )", "89", "23.24"], ["4", "419", "jo angel ( wa )", "105", "24.86"], ["5", "384", "terry alderman ( wa )", "97", "24.21"]], "query": "greater { hop { filter_eq { all_rows ; player ; jo angel ( wa ) } ; matches } ; hop { filter_eq { all_rows ; player ; clarrie grimmett ( vic / sa ) } ; matches } } = true", "question": "in the sheffield shield , jo angel had more matches than clarrie grimmett ."}, {"topic": "marc surer", "wiki": "https://en.wikipedia.org/wiki/Marc_Surer", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1226338-2.html.csv", "action": "superlative", "sent": "marc surer scored the most points in the year of 1985 .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "11", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "year"], "result": "1985", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; year }"}, "1985"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; year } ; 1985 } = true", "tointer": "select the row whose points record of all rows is maximum . the year record of this row is 1985 ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; year } ; 1985 } = true", "interpret": "select the row whose points record of all rows is maximum . the year record of this row is 1985 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "year_6": 6, "1985_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "year_6": "year", "1985_7": "1985"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "year_6": [1], "1985_7": [2]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1979", "team ensign", "ensign n179", "cosworth v8", "0"], ["1980", "team ats", "ats d3", "cosworth v8", "0"], ["1980", "team ats", "ats d4", "cosworth v8", "0"], ["1981", "ensign racing", "ensign n180b", "cosworth v8", "4"], ["1981", "theodore racing team", "theodore ty01", "cosworth v8", "4"], ["1982", "arrows racing team", "arrows a4", "cosworth v8", "3"], ["1982", "arrows racing team", "arrows a5", "cosworth v8", "3"], ["1983", "arrows racing team", "arrows a6", "cosworth v8", "4"], ["1984", "barclay nordica arrows bmw", "arrows a6", "cosworth v8", "1"], ["1984", "barclay nordica arrows bmw", "arrows a7", "bmw str - 4 t / c", "1"], ["1985", "motor racing developments ltd", "brabham bt54", "bmw str - 4 t / c", "5"], ["1986", "barclay arrows bmw", "arrows a8", "bmw str - 4 t / c", "0"]], "query": "eq { hop { argmax { all_rows ; points } ; year } ; 1985 } = true", "question": "marc surer scored the most points in the year of 1985 ."}, {"topic": "canon open", "wiki": "https://en.wikipedia.org/wiki/Canon_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17821655-1.html.csv", "action": "unique", "sent": "the champion for the 2009 canon open had the only score that was less than 271 between the years 2008 and 2012 .", "annotation": {"scope": "all", "row": "4", "col": "5", "col_other": "1", "criterion": "less_than", "value": "271", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "score", "271"], "result": null, "ind": 0, "tointer": "select the rows whose score record is less than 271 .", "tostr": "filter_less { all_rows ; score ; 271 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; score ; 271 } }", "tointer": "select the rows whose score record is less than 271 . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_less", "args": ["all_rows", "score", "271"], "result": null, "ind": 0, "tointer": "select the rows whose score record is less than 271 .", "tostr": "filter_less { all_rows ; score ; 271 }"}, "year"], "result": "2009", "ind": 2, "tostr": "hop { filter_less { all_rows ; score ; 271 } ; year }"}, "2009"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; score ; 271 } ; year } ; 2009 }", "tointer": "the year record of this unqiue row is 2009 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_less { all_rows ; score ; 271 } } ; eq { hop { filter_less { all_rows ; score ; 271 } ; year } ; 2009 } } = true", "tointer": "select the rows whose score record is less than 271 . there is only one such row in the table . the year record of this unqiue row is 2009 ."}, "logic_str": "and { only { filter_less { all_rows ; score ; 271 } } ; eq { hop { filter_less { all_rows ; score ; 271 } ; year } ; 2009 } } = true", "interpret": "select the rows whose score record is less than 271 . there is only one such row in the table . the year record of this unqiue row is 2009 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_less_0": 0, "all_rows_6": 6, "score_7": 7, "271_8": 8, "eq_3": 3, "num_hop_2": 2, "year_9": 9, "2009_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_6": "all_rows", "score_7": "score", "271_8": "271", "eq_3": "eq", "num_hop_2": "num_hop", "year_9": "year", "2009_10": "2009"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_less_0": [1, 2], "all_rows_6": [0], "score_7": [0], "271_8": [0], "eq_3": [4], "num_hop_2": [3], "year_9": [2], "2009_10": [3]}, "table_header": ["year", "dates", "champion", "country", "score", "purse", "winner 's share"], "table_cont": [["2012", "oct 4 - 7", "yuta ikeda", "japan", "271 ( - 17 )", "150000000", "30000000"], ["2011", "oct 6 - 9", "kenichi kuboya", "japan", "274 ( - 14 )", "150000000", "30000000"], ["2010", "oct 7 - 10", "shinichi yokota", "japan", "274 ( - 14 )", "150000000", "30000000"], ["2009", "oct 8 - 11", "yuta ikeda", "japan", "200 ( - 16 )", "150000000", "30000000"], ["2008", "oct 9 - 12", "makoto inoue", "japan", "275 ( - 13 )", "200000000", "40000000"]], "query": "and { only { filter_less { all_rows ; score ; 271 } } ; eq { hop { filter_less { all_rows ; score ; 271 } ; year } ; 2009 } } = true", "question": "the champion for the 2009 canon open had the only score that was less than 271 between the years 2008 and 2012 ."}, {"topic": "coming of age ( bbc tv series )", "wiki": "https://en.wikipedia.org/wiki/Coming_of_Age_%28BBC_TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11538407-1.html.csv", "action": "superlative", "sent": "in the coming of age bbc tv series , when the no of series was 3 , the lowest number of episodes was when the actor was ellen thomas .", "annotation": {"scope": "subset", "col_superlative": "5", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "min", "other_col": "1,4", "subset": {"col": "4", "criterion": "equal", "value": "3"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": [{"func": "filter_eq", "args": ["all_rows", "no of series", "3"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; no of series ; 3 }", "tointer": "select the rows whose no of series record is equal to 3 ."}, "episodes"], "result": null, "ind": 1, "tostr": "argmin { filter_eq { all_rows ; no of series ; 3 } ; episodes }"}, "actor"], "result": "ellen thomas", "ind": 2, "tostr": "hop { argmin { filter_eq { all_rows ; no of series ; 3 } ; episodes } ; actor }"}, "ellen thomas"], "result": true, "ind": 3, "tostr": "eq { hop { argmin { filter_eq { all_rows ; no of series ; 3 } ; episodes } ; actor } ; ellen thomas } = true", "tointer": "select the rows whose no of series record is equal to 3 . select the row whose episodes record of these rows is minimum . the actor record of this row is ellen thomas ."}, "logic_str": "eq { hop { argmin { filter_eq { all_rows ; no of series ; 3 } ; episodes } ; actor } ; ellen thomas } = true", "interpret": "select the rows whose no of series record is equal to 3 . select the row whose episodes record of these rows is minimum . the actor record of this row is ellen thomas .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "argmin_1": 1, "filter_eq_0": 0, "all_rows_5": 5, "no of series_6": 6, "3_7": 7, "episodes_8": 8, "actor_9": 9, "ellen thomas_10": 10}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "argmin_1": "argmin", "filter_eq_0": "filter_eq", "all_rows_5": "all_rows", "no of series_6": "no of series", "3_7": "3", "episodes_8": "episodes", "actor_9": "actor", "ellen thomas_10": "ellen thomas"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "argmin_1": [2], "filter_eq_0": [1], "all_rows_5": [0], "no of series_6": [0], "3_7": [0], "episodes_8": [1], "actor_9": [2], "ellen thomas_10": [3]}, "table_header": ["actor", "character", "duration", "no of series", "episodes"], "table_cont": [["tony bignell", "matthew matt cobbett", "pilot , 1 - 3", "3", "23"], ["joe tracini", "darren dk karrimore", "pilot , 1 - 3", "3", "23"], ["hannah job", "jasmine jas brown", "1 - 3", "3", "22"], ["ceri phillips", "oliver ollie sinclair", "1 - 3", "3", "22"], ["anabel barnston", "chloe clo wheeler", "1 - 3", "3", "22"], ["ellen thomas", "jane reed", "1 - 3", "3", "19"], ["matthew earley", "wilberforce de wilde", "2 - 3", "2", "11"], ["minnie crowe", "robyn rob crisp", "3", "1", "8"], ["alex kew", "oliver ollie sinclair", "pilot", "pilot", "1"], ["amy yamazaki", "jasmine jas brown", "pilot", "pilot", "1"], ["dani harmer", "chloe clo wheeler", "pilot", "pilot", "1"]], "query": "eq { hop { argmin { filter_eq { all_rows ; no of series ; 3 } ; episodes } ; actor } ; ellen thomas } = true", "question": "in the coming of age bbc tv series , when the no of series was 3 , the lowest number of episodes was when the actor was ellen thomas ."}, {"topic": "2008 - 09 san antonio spurs season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_San_Antonio_Spurs_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17288845-7.html.csv", "action": "unique", "sent": "in the 2008 - 09 san antonio spurs season , of the games where the spurs won , the only one where the opponent was memphis , was january 2nd .", "annotation": {"scope": "subset", "row": "1", "col": "3", "col_other": "2", "criterion": "equal", "value": "memphis", "subset": {"col": "4", "criterion": "fuzzily_match", "value": "w"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "w"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; score ; w }", "tointer": "select the rows whose score record fuzzily matches to w ."}, "team", "memphis"], "result": null, "ind": 1, "tointer": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose team record fuzzily matches to memphis .", "tostr": "filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } }", "tointer": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose team record fuzzily matches to memphis . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "w"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; score ; w }", "tointer": "select the rows whose score record fuzzily matches to w ."}, "team", "memphis"], "result": null, "ind": 1, "tointer": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose team record fuzzily matches to memphis .", "tostr": "filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis }"}, "date"], "result": "january 2", "ind": 3, "tostr": "hop { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } ; date }"}, "january 2"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } ; date } ; january 2 }", "tointer": "the date record of this unqiue row is january 2 ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } ; date } ; january 2 } } = true", "tointer": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose team record fuzzily matches to memphis . there is only one such row in the table . the date record of this unqiue row is january 2 ."}, "logic_str": "and { only { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } ; date } ; january 2 } } = true", "interpret": "select the rows whose score record fuzzily matches to w . among these rows , select the rows whose team record fuzzily matches to memphis . there is only one such row in the table . the date record of this unqiue row is january 2 .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_7": 7, "score_8": 8, "w_9": 9, "team_10": 10, "memphis_11": 11, "str_eq_4": 4, "str_hop_3": 3, "date_12": 12, "january 2_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "score_8": "score", "w_9": "w", "team_10": "team", "memphis_11": "memphis", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "date_12": "date", "january 2_13": "january 2"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_str_eq_1": [2, 3], "filter_str_eq_0": [1], "all_rows_7": [0], "score_8": [0], "w_9": [0], "team_10": [1], "memphis_11": [1], "str_eq_4": [5], "str_hop_3": [4], "date_12": [3], "january 2_13": [4]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["32", "january 2", "memphis", "w 91 - 80 ( ot )", "tim duncan ( 20 )", "tim duncan ( 10 )", "manu gin\u00f3bili ( 6 )", "fedexforum 12597", "21 - 11"], ["33", "january 3", "philadelphia", "w 108 - 106 ( ot )", "tim duncan ( 26 )", "tim duncan ( 12 )", "tony parker ( 10 )", "at & t center 18797", "22 - 11"], ["34", "january 5", "miami", "w 91 - 84 ( ot )", "tim duncan ( 19 )", "tim duncan ( 9 )", "tony parker ( 7 )", "american airlines arena 19600", "23 - 11"], ["35", "january 8", "la clippers", "w 106 - 84 ( ot )", "tony parker ( 19 )", "kurt thomas ( 9 )", "tim duncan ( 9 )", "at & t center 17873", "24 - 11"], ["36", "january 11", "orlando", "l 98 - 105 ( ot )", "tony parker ( 31 )", "tim duncan ( 10 )", "tony parker ( 6 )", "at & t center 18216", "24 - 12"], ["37", "january 14", "la lakers", "w 112 - 111 ( ot )", "manu gin\u00f3bili ( 27 )", "tim duncan ( 10 )", "tim duncan ( 8 )", "at & t center 18797", "25 - 12"], ["38", "january 16", "philadelphia", "l 87 - 109 ( ot )", "tim duncan ( 20 )", "tim duncan ( 12 )", "tony parker ( 6 )", "wachovia center 18739", "25 - 13"], ["39", "january 17", "chicago", "w 92 - 87 ( ot )", "manu gin\u00f3bili ( 21 )", "tim duncan ( 14 )", "tony parker ( 8 )", "united center 22100", "26 - 13"], ["40", "january 19", "charlotte", "w 86 - 84 ( ot )", "tim duncan ( 17 )", "tim duncan ( 11 )", "tony parker ( 10 )", "time warner cable arena 16160", "27 - 13"], ["41", "january 20", "indiana", "w 99 - 81 ( ot )", "tim duncan ( 27 )", "tim duncan ( 10 )", "tony parker ( 7 )", "at & t center 18181", "28 - 13"], ["42", "january 23", "new jersey", "w 94 - 91 ( ot )", "tim duncan ( 30 )", "tim duncan ( 15 )", "tim duncan ( 5 )", "at & t center 18797", "29 - 13"], ["43", "january 25", "la lakers", "l 85 - 99 ( ot )", "tony parker ( 19 )", "tim duncan , manu gin\u00f3bili ( 8 )", "tony parker ( 6 )", "staples center 18997", "29 - 14"], ["44", "january 27", "utah", "w 106 - 100 ( ot )", "tony parker , tim duncan ( 24 )", "manu gin\u00f3bili , tim duncan ( 9 )", "tim duncan ( 8 )", "energysolutions arena 19911", "30 - 14"], ["45", "january 29", "phoenix", "w 114 - 104 ( ot )", "manu gin\u00f3bili ( 30 )", "tim duncan ( 15 )", "tony parker ( 5 )", "us airways center 18422", "31 - 14"], ["46", "january 31", "new orleans", "w 106 - 93 ( ot )", "tony parker ( 25 )", "tim duncan ( 8 )", "tony parker , tim duncan ( 7 )", "at & t center 18797", "32 - 14"]], "query": "and { only { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } } ; eq { hop { filter_eq { filter_eq { all_rows ; score ; w } ; team ; memphis } ; date } ; january 2 } } = true", "question": "in the 2008 - 09 san antonio spurs season , of the games where the spurs won , the only one where the opponent was memphis , was january 2nd ."}, {"topic": "jean - philippe belloc", "wiki": "https://en.wikipedia.org/wiki/Jean-Philippe_Belloc", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16514890-1.html.csv", "action": "unique", "sent": "of these teams , only mopar team oreca completed exactly one lap .", "annotation": {"scope": "all", "row": "4", "col": "2", "col_other": "5", "criterion": "equal", "value": "mopar team oreca", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "team", "mopar team oreca"], "result": null, "ind": 0, "tointer": "select the rows whose team record fuzzily matches to mopar team oreca .", "tostr": "filter_eq { all_rows ; team ; mopar team oreca }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; team ; mopar team oreca } }", "tointer": "select the rows whose team record fuzzily matches to mopar team oreca . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "team", "mopar team oreca"], "result": null, "ind": 0, "tointer": "select the rows whose team record fuzzily matches to mopar team oreca .", "tostr": "filter_eq { all_rows ; team ; mopar team oreca }"}, "laps"], "result": "1", "ind": 2, "tostr": "hop { filter_eq { all_rows ; team ; mopar team oreca } ; laps }"}, "1"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; team ; mopar team oreca } ; laps } ; 1 }", "tointer": "the laps record of this unqiue row is 1 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; team ; mopar team oreca } } ; eq { hop { filter_eq { all_rows ; team ; mopar team oreca } ; laps } ; 1 } } = true", "tointer": "select the rows whose team record fuzzily matches to mopar team oreca . there is only one such row in the table . the laps record of this unqiue row is 1 ."}, "logic_str": "and { only { filter_eq { all_rows ; team ; mopar team oreca } } ; eq { hop { filter_eq { all_rows ; team ; mopar team oreca } ; laps } ; 1 } } = true", "interpret": "select the rows whose team record fuzzily matches to mopar team oreca . there is only one such row in the table . the laps record of this unqiue row is 1 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "team_7": 7, "mopar team oreca_8": 8, "eq_3": 3, "num_hop_2": 2, "laps_9": 9, "1_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "team_7": "team", "mopar team oreca_8": "mopar team oreca", "eq_3": "eq", "num_hop_2": "num_hop", "laps_9": "laps", "1_10": "1"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "team_7": [0], "mopar team oreca_8": [0], "eq_3": [4], "num_hop_2": [3], "laps_9": [2], "1_10": [3]}, "table_header": ["year", "team", "co - drivers", "class", "laps", "pos", "class pos"], "table_cont": [["1997", "la fili\u00e8re elf", "henri pescarolo emmanuel cl\u00e9rico", "lmp", "319", "7th", "4th"], ["1998", "courage comp\u00e9tition", "didier cottaz marc goossens", "lmp1", "232", "dnf", "dnf"], ["1999", "viper team oreca", "david donohue soheil ayari", "gts", "271", "dnf", "dnf"], ["2000", "mopar team oreca", "yannick dalmas nicolas minassian", "lmp900", "1", "dnf", "dnf"], ["2001", "larbre comp\u00e9tition", "christophe bouchut tiago monteiro", "gts", "234", "20th", "4th"], ["2002", "equipe de france ffsa oreca", "jonathan cochet beno\u00eet tr\u00e9luyer", "gts", "326", "14th", "3rd"], ["2007", "team oreca", "laurent groppi nicolas prost", "gt1", "337", "10th", "5th"], ["2011", "larbre comp\u00e9tition", "christophe bourret pascal gibon", "gte am", "301", "21st", "2nd"], ["2012", "larbre comp\u00e9tition", "christophe bourret pascal gibon", "gte am", "309", "28th", "5th"]], "query": "and { only { filter_eq { all_rows ; team ; mopar team oreca } } ; eq { hop { filter_eq { all_rows ; team ; mopar team oreca } ; laps } ; 1 } } = true", "question": "of these teams , only mopar team oreca completed exactly one lap ."}, {"topic": "lark rise to candleford ( tv series )", "wiki": "https://en.wikipedia.org/wiki/Lark_Rise_to_Candleford_%28TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-15026994-3.html.csv", "action": "superlative", "sent": "the highest viewing figure in an episode of the second season of the tv series lark rise to candleford ocurred on episode 11 .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "11", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "viewing figure"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; viewing figure }"}, "episode"], "result": "episode 11", "ind": 1, "tostr": "hop { argmax { all_rows ; viewing figure } ; episode }"}, "episode 11"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; viewing figure } ; episode } ; episode 11 } = true", "tointer": "select the row whose viewing figure record of all rows is maximum . the episode record of this row is episode 11 ."}, "logic_str": "eq { hop { argmax { all_rows ; viewing figure } ; episode } ; episode 11 } = true", "interpret": "select the row whose viewing figure record of all rows is maximum . the episode record of this row is episode 11 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "viewing figure_5": 5, "episode_6": 6, "episode 11_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "viewing figure_5": "viewing figure", "episode_6": "episode", "episode 11_7": "episode 11"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "viewing figure_5": [0], "episode_6": [1], "episode 11_7": [2]}, "table_header": ["", "episode", "writer", "director", "original air date", "viewing figure"], "table_cont": [["11", "episode 1 ( 75 - minute christmas special )", "bill gallagher", "alan grint", "21 december 2008", "6.58 million"], ["12", "episode 2", "bill gallagher", "alan grint", "4 january 2009", "6.53 million"], ["13", "episode 3", "bill gallagher", "alan grint", "11 january 2009", "6.13 million"], ["14", "episode 4", "carolyn bonnyman", "maurice phillips", "18 january 2009", "6.49 million"], ["15", "episode 5", "bill gallagher", "julian holmes", "25 january 2009", "6.31 million"], ["16", "episode 6", "gaby chiappe", "moira armstrong", "1 february 2009", "6.54 million"], ["17", "episode 7", "gaby chiappe", "sue tully", "8 february 2009", "6.14 million"], ["18", "episode 8", "kate gartside", "alan grint", "15 february 2009", "6.20 million"], ["19", "episode 9", "kate gartside", "david tucker", "22 february 2009", "6.32 million"], ["20", "episode 10", "carolyn bonnyman", "patrick lau", "1 march 2009", "6.34 million"], ["21", "episode 11", "gaby chiappe", "paul marcus", "8 march 2009", "6.78 million"]], "query": "eq { hop { argmax { all_rows ; viewing figure } ; episode } ; episode 11 } = true", "question": "the highest viewing figure in an episode of the second season of the tv series lark rise to candleford ocurred on episode 11 ."}, {"topic": "75th united states congress", "wiki": "https://en.wikipedia.org/wiki/75th_United_States_Congress", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2159547-3.html.csv", "action": "ordinal", "sent": "first successor of the 75th united states congress that was seated in may was from california 10th district .", "annotation": {"scope": "subset", "row": "3", "col": "5", "order": "1", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "subset": {"col": "5", "criterion": "fuzzily_match", "value": "may"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date successor seated", "may"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date successor seated ; may }", "tointer": "select the rows whose date successor seated record fuzzily matches to may ."}, "date successor seated", "1"], "result": null, "ind": 1, "tostr": "nth_argmin { filter_eq { all_rows ; date successor seated ; may } ; date successor seated ; 1 }"}, "district"], "result": "california 10th", "ind": 2, "tostr": "hop { nth_argmin { filter_eq { all_rows ; date successor seated ; may } ; date successor seated ; 1 } ; district }"}, "california 10th"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmin { filter_eq { all_rows ; date successor seated ; may } ; date successor seated ; 1 } ; district } ; california 10th } = true", "tointer": "select the rows whose date successor seated record fuzzily matches to may . select the row whose date successor seated record of these rows is 1st minimum . the district record of this row is california 10th ."}, "logic_str": "eq { hop { nth_argmin { filter_eq { all_rows ; date successor seated ; may } ; date successor seated ; 1 } ; district } ; california 10th } = true", "interpret": "select the rows whose date successor seated record fuzzily matches to may . select the row whose date successor seated record of these rows is 1st minimum . the district record of this row is california 10th .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "nth_argmin_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "date successor seated_6": 6, "may_7": 7, "date successor seated_8": 8, "1_9": 9, "district_10": 10, "california 10th_11": 11}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "nth_argmin_1": "nth_argmin", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "date successor seated_6": "date successor seated", "may_7": "may", "date successor seated_8": "date successor seated", "1_9": "1", "district_10": "district", "california 10th_11": "california 10th"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "nth_argmin_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "date successor seated_6": [0], "may_7": [0], "date successor seated_8": [1], "1_9": [1], "district_10": [2], "california 10th_11": [3]}, "table_header": ["district", "vacator", "reason for change", "successor", "date successor seated"], "table_cont": [["virginia 3rd", "andrew jackson montague ( d )", "died january 24 , 1937", "dave e satterfield , jr ( d )", "november 2 , 1937"], ["texas 10th", "james p buchanan ( d )", "died february 22 , 1937", "lyndon b johnson ( d )", "april 10 , 1937"], ["california 10th", "henry e stubbs ( d )", "died february 28 , 1937", "alfred j elliott ( d )", "may 4 , 1937"], ["pennsylvania 18th", "benjamin k focht ( r )", "died march 27 , 1937", "richard m simpson ( r )", "may 11 , 1937"], ["new york 27th", "philip a goodwin ( r )", "died june 6 , 1937", "lewis k rockefeller ( r )", "november 2 , 1937"], ["massachusetts 7th", "william p connery , jr ( d )", "died june 15 , 1937", "lawrence j connery ( d )", "september 28 , 1937"], ["new york 17th", "theodore a peyser ( d )", "died august 8 , 1937", "bruce f barton ( r )", "november 2 , 1937"], ["oklahoma 5th", "robert p hill ( d )", "died october 29 , 1937", "gomer griffith smith ( d )", "december 10 , 1937"], ["new jersey 9th", "edward a kenney ( d )", "died january 27 , 1938", "vacant until the next congress", "vacant until the next congress"], ["california 17th", "charles j colden ( d )", "died april 15 , 1938", "vacant until the next congress", "vacant until the next congress"], ["new hampshire 1st", "arthur b jenks ( r )", "lost contested election june 9 , 1938", "alphonse roy ( d )", "june 9 , 1938"], ["south carolina 6th", "allard h gasque ( d )", "died june 17 , 1938", "elizabeth hawley gasque ( d )", "september 13 , 1937"], ["new york 1st", "robert l bacon ( r )", "died september 12 , 1938", "vacant until the next congress", "vacant until the next congress"], ["resident commissioner of the philippines", "quintin paredes ( nac )", "resigned september 29 , 1938", "joaqu\u00e3\u00adn miguel elizalde ( nac )", "september 29 , 1938"], ["new york 15th", "john j boylan ( d )", "died october 5 , 1938", "vacant until the next congress", "vacant until the next congress"], ["new york 42nd", "james m mead ( d )", "resigned december 2 , 1938 to run for the us senate", "vacant until the next congress", "vacant until the next congress"]], "query": "eq { hop { nth_argmin { filter_eq { all_rows ; date successor seated ; may } ; date successor seated ; 1 } ; district } ; california 10th } = true", "question": "first successor of the 75th united states congress that was seated in may was from california 10th district ."}, {"topic": "outline of hungary", "wiki": "https://en.wikipedia.org/wiki/Outline_of_Hungary", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16278825-1.html.csv", "action": "ordinal", "sent": "considering the counties of hungary , the county of pest has the third highest area .", "annotation": {"row": "13", "col": "3", "order": "3", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "area ( km square )", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; area ( km square ) ; 3 }"}, "name of county"], "result": "pest", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; area ( km square ) ; 3 } ; name of county }"}, "pest"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; area ( km square ) ; 3 } ; name of county } ; pest } = true", "tointer": "select the row whose area ( km square ) record of all rows is 3rd maximum . the name of county record of this row is pest ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; area ( km square ) ; 3 } ; name of county } ; pest } = true", "interpret": "select the row whose area ( km square ) record of all rows is 3rd maximum . the name of county record of this row is pest .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "area (km square)_5": 5, "3_6": 6, "name of county_7": 7, "pest_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "area (km square)_5": "area ( km square )", "3_6": "3", "name of county_7": "name of county", "pest_8": "pest"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "area (km square)_5": [0], "3_6": [0], "name of county_7": [1], "pest_8": [2]}, "table_header": ["name of county", "county seat", "area ( km square )", "population", "population density", "towns / villages"], "table_cont": [["b\u00e1cs - kiskun", "kecskem\u00e9t", "8445", "541584", "64", "119"], ["baranya", "p\u00e9cs", "4430", "402260", "91", "301"], ["b\u00e9k\u00e9s", "b\u00e9k\u00e9scsaba", "5631", "392845", "70", "75"], ["borsod - aba\u00faj - zempl\u00e9n", "miskolc", "7247", "739143", "102", "355"], ["csongr\u00e1d", "szeged", "4263", "425785", "100", "60"], ["fej\u00e9r", "sz\u00e9kesfeh\u00e9rv\u00e1r", "4359", "428579", "98", "108"], ["gy\u0151r - moson - sopron", "gy\u0151r", "4208", "440138", "105", "182"], ["hajd\u00fa - bihar", "debrecen", "6211", "550265", "89", "82"], ["heves", "eger", "3637", "323769", "89", "119"], ["j\u00e1sz - nagykun - szolnok", "szolnok", "5582", "413174", "74", "75"], ["kom\u00e1rom - esztergom", "tatab\u00e1nya", "2265", "315886", "139", "76"], ["n\u00f3gr\u00e1d", "salg\u00f3tarj\u00e1n", "2546", "218218", "86", "129"], ["pest", "budapest", "6393", "1124395", "176", "186"], ["somogy", "kaposv\u00e1r", "6036", "334065", "55", "244"], ["szabolcs - szatm\u00e1r - bereg", "ny\u00edregyh\u00e1za", "5936", "583564", "98", "228"], ["tolna", "szeksz\u00e1rd", "3703", "247287", "67", "108"], ["vas", "szombathely", "3336", "266342", "80", "216"], ["veszpr\u00e9m", "veszpr\u00e9m", "4493", "368519", "82", "217"]], "query": "eq { hop { nth_argmax { all_rows ; area ( km square ) ; 3 } ; name of county } ; pest } = true", "question": "considering the counties of hungary , the county of pest has the third highest area ."}, {"topic": "indiana high school athletics conferences : ohio river valley - western indiana", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Ohio_River_Valley_%E2%80%93_Western_Indiana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18974097-2.html.csv", "action": "superlative", "sent": "for the ohio river valley and western indiana conferences in indiana high school athletics , the biggest school is mitchell .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "size"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; size }"}, "school"], "result": "mitchell", "ind": 1, "tostr": "hop { argmax { all_rows ; size } ; school }"}, "mitchell"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; size } ; school } ; mitchell } = true", "tointer": "select the row whose size record of all rows is maximum . the school record of this row is mitchell ."}, "logic_str": "eq { hop { argmax { all_rows ; size } ; school } ; mitchell } = true", "interpret": "select the row whose size record of all rows is maximum . the school record of this row is mitchell .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "size_5": 5, "school_6": 6, "mitchell_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "size_5": "size", "school_6": "school", "mitchell_7": "mitchell"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "size_5": [0], "school_6": [1], "mitchell_7": [2]}, "table_header": ["school", "location", "mascot", "size", "ihsaa class", "county"], "table_cont": [["crawford county", "marengo", "wolfpack", "487", "aa", "13 crawford"], ["mitchell", "mitchell", "bluejackets", "620", "aaa", "47 lawrence"], ["orleans", "orleans", "bulldogs", "258", "a", "59 orange"], ["paoli", "paoli", "rams", "511", "aa", "59 orange"], ["perry central", "leopold", "commodores", "334", "aa", "62 perry"], ["springs valley", "french lick", "blackhawks", "319", "a", "59 orange"], ["west washington", "campbellsburg", "senators", "307", "a", "88 washington"]], "query": "eq { hop { argmax { all_rows ; size } ; school } ; mitchell } = true", "question": "for the ohio river valley and western indiana conferences in indiana high school athletics , the biggest school is mitchell ."}, {"topic": "administrative division of the second polish republic", "wiki": "https://en.wikipedia.org/wiki/Administrative_division_of_the_Second_Polish_Republic", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11654169-1.html.csv", "action": "count", "sent": "in the administrative division of the second polish republic , when the area in 1000 km square is over 30 , there were two times when the population in 1000 was over 2000 .", "annotation": {"scope": "subset", "criterion": "greater_than", "value": "2000", "result": "2", "col": "5", "subset": {"col": "4", "criterion": "greater_than", "value": "30"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": [{"func": "filter_greater", "args": ["all_rows", "area in 1000 km square ( 1930 )", "30"], "result": null, "ind": 0, "tostr": "filter_greater { all_rows ; area in 1000 km square ( 1930 ) ; 30 }", "tointer": "select the rows whose area in 1000 km square ( 1930 ) record is greater than 30 ."}, "population in 1000 ( 1931 )", "2000"], "result": null, "ind": 1, "tointer": "select the rows whose area in 1000 km square ( 1930 ) record is greater than 30 . among these rows , select the rows whose population in 1000 ( 1931 ) record is greater than 2000 .", "tostr": "filter_greater { filter_greater { all_rows ; area in 1000 km square ( 1930 ) ; 30 } ; population in 1000 ( 1931 ) ; 2000 }"}], "result": "2", "ind": 2, "tostr": "count { filter_greater { filter_greater { all_rows ; area in 1000 km square ( 1930 ) ; 30 } ; population in 1000 ( 1931 ) ; 2000 } }", "tointer": "select the rows whose area in 1000 km square ( 1930 ) record is greater than 30 . among these rows , select the rows whose population in 1000 ( 1931 ) record is greater than 2000 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_greater { filter_greater { all_rows ; area in 1000 km square ( 1930 ) ; 30 } ; population in 1000 ( 1931 ) ; 2000 } } ; 2 } = true", "tointer": "select the rows whose area in 1000 km square ( 1930 ) record is greater than 30 . among these rows , select the rows whose population in 1000 ( 1931 ) record is greater than 2000 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_greater { filter_greater { all_rows ; area in 1000 km square ( 1930 ) ; 30 } ; population in 1000 ( 1931 ) ; 2000 } } ; 2 } = true", "interpret": "select the rows whose area in 1000 km square ( 1930 ) record is greater than 30 . among these rows , select the rows whose population in 1000 ( 1931 ) record is greater than 2000 . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_greater_1": 1, "filter_greater_0": 0, "all_rows_5": 5, "area in 1000 km square (1930)_6": 6, "30_7": 7, "population in 1000 (1931)_8": 8, "2000_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_greater_1": "filter_greater", "filter_greater_0": "filter_greater", "all_rows_5": "all_rows", "area in 1000 km square (1930)_6": "area in 1000 km square ( 1930 )", "30_7": "30", "population in 1000 (1931)_8": "population in 1000 ( 1931 )", "2000_9": "2000", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_greater_1": [2], "filter_greater_0": [1], "all_rows_5": [0], "area in 1000 km square (1930)_6": [0], "30_7": [0], "population in 1000 (1931)_8": [1], "2000_9": [1], "2_10": [3]}, "table_header": ["car plates ( since 1937 )", "voivodeship separate city", "capital", "area in 1000 km square ( 1930 )", "population in 1000 ( 1931 )"], "table_cont": [["car plates ( since 1937 )", "voivodeship separate city", "capital", "area in 1000 km square ( 1930 )", "population in 1000 ( 1931 )"], ["00 - 19", "city of warsaw", "warsaw", "0.14", "1179.5"], ["85 - 89", "warszawskie", "warsaw", "31.7", "2460.9"], ["20 - 24", "bia\u0142ostockie", "bia\u0142ystok", "26.0", "1263.3"], ["25 - 29", "kieleckie", "kielce", "22.2", "2671.0"], ["30 - 34", "krakowskie", "krak\u00f3w", "17.6", "2300.1"], ["35 - 39", "lubelskie", "lublin", "26.6", "2116.2"], ["40 - 44", "lwowskie", "lw\u00f3w", "28.4", "3126.3"], ["45 - 49", "\u0142\u00f3dzkie", "\u0142\u00f3d\u017a", "20.4", "2650.1"], ["50 - 54", "nowogr\u00f3dzkie", "nowogr\u00f3dek", "23.0", "1057.2"], ["55 - 59", "poleskie", "brze\u015b\u0107 nad bugiem", "36.7", "1132.2"], ["60 - 64", "pomorskie", "toru\u0144", "25.7", "1884.4"], ["65 - 69", "pozna\u0144skie", "pozna\u0144", "28.1", "2339.6"], ["70 - 74", "stanis\u0142awowskie", "stanis\u0142aw\u00f3w", "16.9", "1480.3"], ["75 - 79", "\u015bl\u0105skie ( autonomous )", "katowice", "5.1", "1533.5"], ["80 - 84", "tarnopolskie", "tarnopol", "16.5", "1600.4"], ["90 - 94", "wile\u0144skie", "wilno", "29.0", "1276.0"], ["95 - 99", "wo\u0142y\u0144skie", "\u0142uck", "35.7", "2085.6"]], "query": "eq { count { filter_greater { filter_greater { all_rows ; area in 1000 km square ( 1930 ) ; 30 } ; population in 1000 ( 1931 ) ; 2000 } } ; 2 } = true", "question": "in the administrative division of the second polish republic , when the area in 1000 km square is over 30 , there were two times when the population in 1000 was over 2000 ."}, {"topic": "afl records", "wiki": "https://en.wikipedia.org/wiki/List_of_VFL/AFL_records", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12161422-16.html.csv", "action": "aggregation", "sent": "the average number of goals amongst all players is 146.8 .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "146.8", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "goals"], "result": "146.8", "ind": 0, "tostr": "avg { all_rows ; goals }"}, "146.8"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; goals } ; 146.8 } = true", "tointer": "the average of the goals record of all rows is 146.8 ."}, "logic_str": "round_eq { avg { all_rows ; goals } ; 146.8 } = true", "interpret": "the average of the goals record of all rows is 146.8 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "goals_4": 4, "146.8_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "goals_4": "goals", "146.8_5": "146.8"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "goals_4": [0], "146.8_5": [1]}, "table_header": ["rank", "goals", "player", "club", "season"], "table_cont": [["1", "150", "bob pratt", "south melbourne", "1934"], ["1", "150", "peter hudson", "hawthorn", "1971"], ["3", "146", "peter hudson", "hawthorn", "1970"], ["4", "145", "jason dunstall", "hawthorn", "1992"], ["5", "143", "peter mckenna", "collingwood", "1970"]], "query": "round_eq { avg { all_rows ; goals } ; 146.8 } = true", "question": "the average number of goals amongst all players is 146.8 ."}, {"topic": "2003 in paraguayan football", "wiki": "https://en.wikipedia.org/wiki/2003_in_Paraguayan_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14911550-1.html.csv", "action": "majority", "sent": "all teams which participated in the 2003 paraguayan football season games each played 9 games .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "9", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "played", "9"], "result": true, "ind": 0, "tointer": "for the played records of all rows , most of them are equal to 9 .", "tostr": "most_eq { all_rows ; played ; 9 } = true"}, "logic_str": "most_eq { all_rows ; played ; 9 } = true", "interpret": "for the played records of all rows , most of them are equal to 9 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "played_3": 3, "9_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "played_3": "played", "9_4": "9"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "played_3": [0], "9_4": [0]}, "table_header": ["position", "team", "played", "wins", "draws", "losses", "scored", "conceded", "points"], "table_cont": [["1", "libertad", "9", "6", "3", "0", "13", "3", "21"], ["2", "cerro porte\u00f1o", "9", "5", "3", "1", "20", "8", "18"], ["3", "olimpia", "9", "4", "4", "1", "16", "11", "16"], ["4", "sol de am\u00e9rica", "9", "3", "4", "2", "12", "7", "13"], ["5", "tacuary", "9", "4", "1", "4", "15", "16", "13"], ["6", "guaran\u00ed", "9", "3", "3", "3", "18", "20", "12"], ["7", "sportivo luque\u00f1o", "9", "3", "2", "4", "14", "12", "11"], ["8", "sport colombia", "9", "2", "2", "5", "14", "20", "8"], ["9", "12 de octubre", "9", "1", "4", "4", "8", "18", "7"], ["10", "san lorenzo", "9", "1", "0", "8", "10", "25", "3"]], "query": "most_eq { all_rows ; played ; 9 } = true", "question": "all teams which participated in the 2003 paraguayan football season games each played 9 games ."}, {"topic": "athletics at the 2008 summer olympics - men 's 400 metres", "wiki": "https://en.wikipedia.org/wiki/Athletics_at_the_2008_Summer_Olympics_%E2%80%93_Men%27s_400_metres", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18569105-11.html.csv", "action": "aggregation", "sent": "during the athletics at the 2008 summer olympics - men 's 400 metres , there was an average react of .19025 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": ".19025", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "react"], "result": ".19025", "ind": 0, "tostr": "avg { all_rows ; react }"}, ".19025"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; react } ; .19025 } = true", "tointer": "the average of the react record of all rows is .19025 ."}, "logic_str": "round_eq { avg { all_rows ; react } ; .19025 } = true", "interpret": "the average of the react record of all rows is .19025 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "react_4": 4, ".19025_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "react_4": "react", ".19025_5": ".19025"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "react_4": [0], ".19025_5": [1]}, "table_header": ["rank", "lane", "athlete", "nationality", "time", "react"], "table_cont": [["1", "7", "lashawn merritt", "united states", "44.12", "0.187"], ["2", "6", "martyn rooney", "great britain", "44.60", "0.126"], ["3", "8", "johan wissman", "sweden", "44.64", "0.211"], ["4", "5", "renny quow", "trinidad and tobago", "44.82", "0.204"], ["5", "2", "gary kikaya", "dr congo", "44.94", "0.187"], ["6", "9", "michael mathieu", "bahamas", "45.56", "0.203"], ["7", "4", "sean wroe", "australia", "45.56", "0.205"], ["8", "3", "cedric van branteghem", "belgium", "45.81", "0.199"]], "query": "round_eq { avg { all_rows ; react } ; .19025 } = true", "question": "during the athletics at the 2008 summer olympics - men 's 400 metres , there was an average react of .19025 ."}, {"topic": "1998 - 99 toronto raptors season", "wiki": "https://en.wikipedia.org/wiki/1998%E2%80%9399_Toronto_Raptors_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-13619105-3.html.csv", "action": "majority", "sent": "in the 1998-99 toronto raptors season , all of the games were in the month of february .", "annotation": {"scope": "all", "col": "2", "most_or_all": "all", "criterion": "equal", "value": "february", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "date", "february"], "result": true, "ind": 0, "tointer": "for the date records of all rows , all of them fuzzily match to february .", "tostr": "all_eq { all_rows ; date ; february } = true"}, "logic_str": "all_eq { all_rows ; date ; february } = true", "interpret": "for the date records of all rows , all of them fuzzily match to february .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "february_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "february_4": "february"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "february_4": [0]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["1", "february 5", "boston", "w 103 - 92 ( ot )", "kevin willis ( 28 )", "kevin willis ( 16 )", "alvin williams ( 6 )", "fleetcenter 17892", "1 - 0"], ["2", "february 6", "washington", "l 97 - 98 ( ot )", "charles oakley ( 18 )", "charles oakley ( 8 )", "alvin williams ( 9 )", "mci center 19335", "1 - 1"], ["3", "february 9", "milwaukee", "l 77 - 91 ( ot )", "vince carter ( 22 )", "charles oakley , kevin willis ( 11 )", "dee brown ( 6 )", "maple leaf gardens 14577", "1 - 2"], ["4", "february 11", "miami", "l 84 - 102 ( ot )", "doug christie ( 20 )", "michael stewart ( 7 )", "doug christie , alvin williams ( 3 )", "miami arena 14832", "1 - 3"], ["5", "february 16", "new york", "l 85 - 95 ( ot )", "vince carter ( 17 )", "charles oakley ( 7 )", "doug christie ( 4 )", "madison square garden 19763", "1 - 4"], ["6", "february 18", "washington", "l 88 - 95 ( ot )", "kevin willis ( 25 )", "kevin willis ( 14 )", "doug christie ( 6 )", "skydome 14292", "1 - 5"], ["7", "february 19", "milwaukee", "w 90 - 82 ( ot )", "doug christie ( 20 )", "kevin willis ( 11 )", "tracy mcgrady ( 7 )", "skydome 14888", "2 - 5"], ["8", "february 21", "vancouver", "w 102 - 87 ( ot )", "vince carter ( 27 )", "kevin willis ( 15 )", "charles oakley ( 6 )", "air canada centre 19800", "3 - 5"], ["9", "february 23", "detroit", "l 80 - 106 ( ot )", "john wallace ( 14 )", "doug christie , john wallace ( 5 )", "doug christie , tracy mcgrady ( 4 )", "the palace of auburn hills 14187", "3 - 6"], ["10", "february 24", "indiana", "l 84 - 104 ( ot )", "vince carter ( 28 )", "kevin willis ( 13 )", "tracy mcgrady ( 3 )", "market square arena 14700", "3 - 7"], ["11", "february 26", "minnesota", "w 102 - 92 ( ot )", "vince carter ( 21 )", "kevin willis ( 16 )", "doug christie ( 9 )", "air canada centre 15122", "4 - 7"]], "query": "all_eq { all_rows ; date ; february } = true", "question": "in the 1998-99 toronto raptors season , all of the games were in the month of february ."}, {"topic": "united states house of representatives elections , 1816", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1816", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2668347-17.html.csv", "action": "count", "sent": "there were 2 incumbents elected from pennsylvania in 1812 .", "annotation": {"scope": "all", "criterion": "equal", "value": "re - elected", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "re - elected"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to re - elected .", "tostr": "filter_eq { all_rows ; result ; re - elected }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; result ; re - elected } }", "tointer": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 2 } = true", "tointer": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 2 } = true", "interpret": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "result_5": 5, "re - elected_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "result_5": "result", "re - elected_6": "re - elected", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "result_5": [0], "re - elected_6": [0], "2_7": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["pennsylvania 4", "hugh glasgow", "democratic - republican", "1812", "retired democratic - republican hold", "jacob spangler ( dr ) 67.1 % jacob hay ( f ) 32.9 %"], ["pennsylvania 6 plural district with 2 seats", "samuel d ingham", "democratic - republican", "1812", "re - elected", "john ross ( dr ) 50.8 % samuel d ingham ( dr ) 49.2 %"], ["pennsylvania 6 plural district with 2 seats", "john ross", "democratic - republican", "1814", "re - elected", "john ross ( dr ) 50.8 % samuel d ingham ( dr ) 49.2 %"], ["pennsylvania 8", "william piper", "democratic - republican", "1810", "retired democratic - republican hold", "alexander ogle ( dr ) 99.7 %"], ["pennsylvania 12", "aaron lyle", "democratic - republican", "1808", "retired democratic - republican hold", "thomas patterson ( dr ) 87.2 % john hughes ( f ) 12.8 %"], ["pennsylvania 14", "john woods", "federalist", "1814", "retired democratic - republican gain", "henry baldwin ( dr ) 61.6 % walter lowrie ( dr ) 38.4 %"]], "query": "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 2 } = true", "question": "there were 2 incumbents elected from pennsylvania in 1812 ."}, {"topic": "johnnie parsons", "wiki": "https://en.wikipedia.org/wiki/Johnnie_Parsons", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1252116-1.html.csv", "action": "count", "sent": "he finished two hundred laps on four different occasions .", "annotation": {"scope": "all", "criterion": "equal", "value": "200", "result": "4", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "laps", "200"], "result": null, "ind": 0, "tointer": "select the rows whose laps record is equal to 200 .", "tostr": "filter_eq { all_rows ; laps ; 200 }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; laps ; 200 } }", "tointer": "select the rows whose laps record is equal to 200 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; laps ; 200 } } ; 4 } = true", "tointer": "select the rows whose laps record is equal to 200 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; laps ; 200 } } ; 4 } = true", "interpret": "select the rows whose laps record is equal to 200 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "laps_5": 5, "200_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "laps_5": "laps", "200_6": "200", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "laps_5": [0], "200_6": [0], "4_7": [2]}, "table_header": ["year", "start", "qual", "rank", "finish", "laps"], "table_cont": [["1949", "12", "132.900", "2", "2", "200"], ["1950", "5", "132.044", "8", "1", "138"], ["1951", "8", "132.154", "28", "21", "87"], ["1952", "31", "135.328", "19", "10", "200"], ["1953", "8", "137.667", "3", "26", "86"], ["1954", "15", "139.578", "6", "32", "79"], ["1955", "27", "136.809", "27", "21", "119"], ["1956", "6", "144.144", "7", "4", "200"], ["1957", "17", "140.784", "21", "16", "195"], ["1958", "6", "144.683", "6", "12", "200"]], "query": "eq { count { filter_eq { all_rows ; laps ; 200 } } ; 4 } = true", "question": "he finished two hundred laps on four different occasions ."}, {"topic": "rowing at the 2008 summer olympics - women 's double sculls", "wiki": "https://en.wikipedia.org/wiki/Rowing_at_the_2008_Summer_Olympics_%E2%80%93_Women%27s_double_sculls", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18662700-3.html.csv", "action": "unique", "sent": "the new zealand team is the only group of rowers than has fa in the notes .", "annotation": {"scope": "all", "row": "1", "col": "5", "col_other": "3", "criterion": "equal", "value": "fa", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "notes", "fa"], "result": null, "ind": 0, "tointer": "select the rows whose notes record fuzzily matches to fa .", "tostr": "filter_eq { all_rows ; notes ; fa }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; notes ; fa } }", "tointer": "select the rows whose notes record fuzzily matches to fa . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "notes", "fa"], "result": null, "ind": 0, "tointer": "select the rows whose notes record fuzzily matches to fa .", "tostr": "filter_eq { all_rows ; notes ; fa }"}, "country"], "result": "new zealand", "ind": 2, "tostr": "hop { filter_eq { all_rows ; notes ; fa } ; country }"}, "new zealand"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; notes ; fa } ; country } ; new zealand }", "tointer": "the country record of this unqiue row is new zealand ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; notes ; fa } } ; eq { hop { filter_eq { all_rows ; notes ; fa } ; country } ; new zealand } } = true", "tointer": "select the rows whose notes record fuzzily matches to fa . there is only one such row in the table . the country record of this unqiue row is new zealand ."}, "logic_str": "and { only { filter_eq { all_rows ; notes ; fa } } ; eq { hop { filter_eq { all_rows ; notes ; fa } ; country } ; new zealand } } = true", "interpret": "select the rows whose notes record fuzzily matches to fa . there is only one such row in the table . the country record of this unqiue row is new zealand .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "notes_7": 7, "fa_8": 8, "str_eq_3": 3, "str_hop_2": 2, "country_9": 9, "new zealand_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "notes_7": "notes", "fa_8": "fa", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "country_9": "country", "new zealand_10": "new zealand"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "notes_7": [0], "fa_8": [0], "str_eq_3": [4], "str_hop_2": [3], "country_9": [2], "new zealand_10": [3]}, "table_header": ["rank", "rowers", "country", "time", "notes"], "table_cont": [["1", "georgina evers - swindell , caroline evers - swindell", "new zealand", "7:03.92", "fa"], ["2", "annekatrin thiele , christiane huth", "germany", "7:09.06", "r"], ["3", "megan kalmoe , ellen tomek", "united states", "7:11.17", "r"], ["4", "ionelia neacsu , roxana gabriela cogianu", "romania", "7:12.17", "r"], ["5", "kateryna tarasenko , yana dementieva", "ukraine", "7:25.03", "r"]], "query": "and { only { filter_eq { all_rows ; notes ; fa } } ; eq { hop { filter_eq { all_rows ; notes ; fa } ; country } ; new zealand } } = true", "question": "the new zealand team is the only group of rowers than has fa in the notes ."}, {"topic": "rhondda", "wiki": "https://en.wikipedia.org/wiki/Rhondda", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1808199-2.html.csv", "action": "count", "sent": "there were 16 instances of gas explosions in rhoddan collieries .", "annotation": {"scope": "all", "criterion": "equal", "value": "gas explosion", "result": "16", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "cause", "gas explosion"], "result": null, "ind": 0, "tointer": "select the rows whose cause record fuzzily matches to gas explosion .", "tostr": "filter_eq { all_rows ; cause ; gas explosion }"}], "result": "16", "ind": 1, "tostr": "count { filter_eq { all_rows ; cause ; gas explosion } }", "tointer": "select the rows whose cause record fuzzily matches to gas explosion . the number of such rows is 16 ."}, "16"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; cause ; gas explosion } } ; 16 } = true", "tointer": "select the rows whose cause record fuzzily matches to gas explosion . the number of such rows is 16 ."}, "logic_str": "eq { count { filter_eq { all_rows ; cause ; gas explosion } } ; 16 } = true", "interpret": "select the rows whose cause record fuzzily matches to gas explosion . the number of such rows is 16 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "cause_5": 5, "gas explosion_6": 6, "16_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "cause_5": "cause", "gas explosion_6": "gas explosion", "16_7": "16"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "cause_5": [0], "gas explosion_6": [0], "16_7": [2]}, "table_header": ["colliery", "location", "date", "year", "death toll", "cause"], "table_cont": [["dinas colliery", "dinas", "1 january", "1844", "12", "gas explosion"], ["cymmer colliery", "cymmer", "15 july", "1856", "112", "gas explosion"], ["ferndale no 1 pit", "blaenllechau", "8 november", "1867", "178", "gas explosion"], ["ferndale no 1 pit", "blaenllechau", "10 june", "1869", "53", "gas explosion"], ["pentre colliery", "pentre", "24 february", "1871", "38", "gas explosion"], ["tynewydd colliery", "porth", "11 april", "1877", "5", "flooding"], ["dinas middle colliery", "dinas", "13 january", "1879", "63", "gas explosion"], ["naval colliery", "penygraig", "10 december", "1880", "101", "gas explosion"], ["gelli colliery", "gelli", "21 august", "1883", "5", "gas explosion"], ["naval colliery", "penygraig", "27 january", "1884", "14", "gas explosion"], ["maerdy colliery", "maerdy", "2324 december", "1885", "81", "gas explosion"], ["national colliery", "wattstown", "18 february", "1887", "39", "gas explosion"], ["tylorstown colliery", "tylorstown", "27 january", "1896", "57", "gas explosion"], ["national colliery", "wattstown", "11 july", "1905", "120", "gas explosion"], ["cambrian colliery no1", "clydach vale", "10 march", "1905", "34", "gas explosion"], ["naval colliery", "penygraig", "27 august", "1909", "6", "cage fall"], ["glamorgan colliery", "llwynypia", "25 january", "1932", "11", "firedamp"], ["blaenclydach colliery", "clydach vale", "25 november", "1941", "7", "runaway trolly"], ["lewis merthyr colliery", "trehafod", "22 november", "1956", "9", "gas explosion"], ["cambrian colliery", "clydach vale", "17 may", "1965", "31", "gas explosion"]], "query": "eq { count { filter_eq { all_rows ; cause ; gas explosion } } ; 16 } = true", "question": "there were 16 instances of gas explosions in rhoddan collieries ."}, {"topic": "superettan", "wiki": "https://en.wikipedia.org/wiki/Superettan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1560673-1.html.csv", "action": "comparative", "sent": "landskrona bois had their first season of their current superettan league spell earlier than angelholms ff .", "annotation": {"row_1": "7", "row_2": "11", "col": "4", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "club", "landskrona bois"], "result": null, "ind": 0, "tointer": "select the rows whose club record fuzzily matches to landskrona bois .", "tostr": "filter_eq { all_rows ; club ; landskrona bois }"}, "first season of current spell"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; club ; landskrona bois } ; first season of current spell }", "tointer": "select the rows whose club record fuzzily matches to landskrona bois . take the first season of current spell record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "club", "\u00e4ngelholms ff"], "result": null, "ind": 1, "tointer": "select the rows whose club record fuzzily matches to \u00e4ngelholms ff .", "tostr": "filter_eq { all_rows ; club ; \u00e4ngelholms ff }"}, "first season of current spell"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; club ; \u00e4ngelholms ff } ; first season of current spell }", "tointer": "select the rows whose club record fuzzily matches to \u00e4ngelholms ff . take the first season of current spell record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; club ; landskrona bois } ; first season of current spell } ; hop { filter_eq { all_rows ; club ; \u00e4ngelholms ff } ; first season of current spell } } = true", "tointer": "select the rows whose club record fuzzily matches to landskrona bois . take the first season of current spell record of this row . select the rows whose club record fuzzily matches to \u00e4ngelholms ff . take the first season of current spell record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; club ; landskrona bois } ; first season of current spell } ; hop { filter_eq { all_rows ; club ; \u00e4ngelholms ff } ; first season of current spell } } = true", "interpret": "select the rows whose club record fuzzily matches to landskrona bois . take the first season of current spell record of this row . select the rows whose club record fuzzily matches to \u00e4ngelholms ff . take the first season of current spell record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "club_7": 7, "landskrona bois_8": 8, "first season of current spell_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "club_11": 11, "\u00e4ngelholms ff_12": 12, "first season of current spell_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "club_7": "club", "landskrona bois_8": "landskrona bois", "first season of current spell_9": "first season of current spell", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "club_11": "club", "\u00e4ngelholms ff_12": "\u00e4ngelholms ff", "first season of current spell_13": "first season of current spell"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "club_7": [0], "landskrona bois_8": [0], "first season of current spell_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "club_11": [1], "\u00e4ngelholms ff_12": [1], "first season of current spell_13": [3]}, "table_header": ["club", "position in 2013", "first season", "first season of current spell", "number of seasons in superettan", "number of seasons in second tier"], "table_cont": [["assyriska ff", "8th", "2000", "2008", "12", "17"], ["degerfors if", "4th", "2005", "2010", "8", "35"], ["gais", "7th", "2001", "2013", "4", "29"], ["hammarby if", "5th", "2010", "2010", "4", "36.5"], ["husqvarna ff", "1st in div 1 s\u00f6dra", "2014", "2014", "0", "1"], ["j\u00f6nk\u00f6pings s\u00f6dra", "11th", "2006", "2006", "8", "35"], ["landskrona bois", "12th", "2000", "2006", "10", "51"], ["ljungskile sk", "9th", "2000", "2009", "9", "14"], ["ik sirius", "1st in div 1 norra", "2007", "2014", "3", "23"], ["syrianska fc", "16th in allsvenskan", "2009", "2014", "2", "2"], ["\u00e4ngelholms ff", "6th", "2002", "2008", "7", "11"], ["\u00f6sters if", "15th in allsvenskan", "2000", "2014", "9", "19"]], "query": "less { hop { filter_eq { all_rows ; club ; landskrona bois } ; first season of current spell } ; hop { filter_eq { all_rows ; club ; \u00e4ngelholms ff } ; first season of current spell } } = true", "question": "landskrona bois had their first season of their current superettan league spell earlier than angelholms ff ."}, {"topic": "list of asian and pacific countries by gdp ( ppp )", "wiki": "https://en.wikipedia.org/wiki/List_of_Asian_and_Pacific_countries_by_GDP_%28PPP%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2248784-3.html.csv", "action": "ordinal", "sent": "in the list of asian and pacific countries by gdp ( ppp ) , afghanistan has the highest rank world among countries with 2011 gdp ( ppp ) billions of usd under 35 .", "annotation": {"scope": "subset", "row": "6", "col": "3", "order": "1", "col_other": "4", "max_or_min": "min_to_max", "value_mentioned": "no", "subset": {"col": "5", "criterion": "less_than", "value": "35"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": [{"func": "filter_less", "args": ["all_rows", "2011 gdp ( ppp ) billions of usd", "35"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; 2011 gdp ( ppp ) billions of usd ; 35 }", "tointer": "select the rows whose 2011 gdp ( ppp ) billions of usd record is less than 35 ."}, "rank world", "1"], "result": null, "ind": 1, "tostr": "nth_argmin { filter_less { all_rows ; 2011 gdp ( ppp ) billions of usd ; 35 } ; rank world ; 1 }"}, "country"], "result": "afghanistan", "ind": 2, "tostr": "hop { nth_argmin { filter_less { all_rows ; 2011 gdp ( ppp ) billions of usd ; 35 } ; rank world ; 1 } ; country }"}, "afghanistan"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmin { filter_less { all_rows ; 2011 gdp ( ppp ) billions of usd ; 35 } ; rank world ; 1 } ; country } ; afghanistan } = true", "tointer": "select the rows whose 2011 gdp ( ppp ) billions of usd record is less than 35 . select the row whose rank world record of these rows is 1st minimum . the country record of this row is afghanistan ."}, "logic_str": "eq { hop { nth_argmin { filter_less { all_rows ; 2011 gdp ( ppp ) billions of usd ; 35 } ; rank world ; 1 } ; country } ; afghanistan } = true", "interpret": "select the rows whose 2011 gdp ( ppp ) billions of usd record is less than 35 . select the row whose rank world record of these rows is 1st minimum . the country record of this row is afghanistan .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "nth_argmin_1": 1, "filter_less_0": 0, "all_rows_5": 5, "2011 gdp (ppp) billions of usd_6": 6, "35_7": 7, "rank world_8": 8, "1_9": 9, "country_10": 10, "afghanistan_11": 11}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "nth_argmin_1": "nth_argmin", "filter_less_0": "filter_less", "all_rows_5": "all_rows", "2011 gdp (ppp) billions of usd_6": "2011 gdp ( ppp ) billions of usd", "35_7": "35", "rank world_8": "rank world", "1_9": "1", "country_10": "country", "afghanistan_11": "afghanistan"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "nth_argmin_1": [2], "filter_less_0": [1], "all_rows_5": [0], "2011 gdp (ppp) billions of usd_6": [0], "35_7": [0], "rank world_8": [1], "1_9": [1], "country_10": [2], "afghanistan_11": [3]}, "table_header": ["rank subcontinent", "rank asia", "rank world", "country", "2011 gdp ( ppp ) billions of usd"], "table_cont": [["1", "2", "3", "india", "4469.763"], ["2", "11", "27", "pakistan", "489.436"], ["3", "17", "42", "bangladesh", "282.945"], ["4", "25", "65", "sri lanka", "115.220"], ["5", "34", "96", "nepal", "37.799"], ["6", "38", "106", "afghanistan", "30.012"], ["7", "46", "155", "bhutan", "4.285"], ["8", "49", "164", "maldives", "2.735"]], "query": "eq { hop { nth_argmin { filter_less { all_rows ; 2011 gdp ( ppp ) billions of usd ; 35 } ; rank world ; 1 } ; country } ; afghanistan } = true", "question": "in the list of asian and pacific countries by gdp ( ppp ) , afghanistan has the highest rank world among countries with 2011 gdp ( ppp ) billions of usd under 35 ."}, {"topic": "royal canadian mint numismatic coins ( 2000s )", "wiki": "https://en.wikipedia.org/wiki/Royal_Canadian_Mint_numismatic_coins_%282000s%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11916083-27.html.csv", "action": "aggregation", "sent": "the combined issue price of all the royal canadian mint numismatic coins of the 2000s is 395.10 .", "annotation": {"scope": "all", "col": "4", "type": "sum", "result": "395.1", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "issue price"], "result": "395.1", "ind": 0, "tostr": "sum { all_rows ; issue price }"}, "395.1"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; issue price } ; 395.1 } = true", "tointer": "the sum of the issue price record of all rows is 395.1 ."}, "logic_str": "round_eq { sum { all_rows ; issue price } ; 395.1 } = true", "interpret": "the sum of the issue price record of all rows is 395.1 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "issue price_4": 4, "395.1_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "issue price_4": "issue price", "395.1_5": "395.1"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "issue price_4": [0], "395.1_5": [1]}, "table_header": ["year", "theme", "artist", "issue price", "special notes"], "table_cont": [["2008", "calgary flames", "n / a", "15.95", "from coin and puck set"], ["2008", "calgary flames", "n / a", "24.95", "from calgary flames gift set"], ["2008", "edmonton oilers", "n / a", "15.95", "from coin and puck set"], ["2008", "edmonton oilers", "n / a", "24.95", "from edmonton oilers gift set"], ["2008", "montreal canadiens", "n / a", "15.95", "from coin and puck set"], ["2008", "montreal canadiens", "n / a", "24.95", "from montreal canadiens gift set"], ["2008", "ottawa senators", "n / a", "15.95", "from coin and puck set"], ["2008", "ottawa senators", "n / a", "24.95", "from ottawa senators gift set"], ["2008", "toronto maple leafs", "n / a", "15.95", "from coin and puck set"], ["2008", "toronto maple leafs", "n / a", "24.95", "from toronto maple leafs gift set"], ["2008", "vancouver canucks", "n / a", "15.95", "from coin and puck set"], ["2008", "vancouver canucks", "n / a", "24.95", "from vancouver canucks gift set"], ["2009", "calgary flames", "n / a", "24.95", "from calgary flames gift set"], ["2009", "edmonton oilers", "n / a", "24.95", "from edmonton oilers gift set"], ["2009", "montreal canadiens", "n / a", "24.95", "from montreal canadiens gift set"], ["2009", "ottawa senators", "n / a", "24.95", "from ottawa senators gift set"], ["2009", "toronto maple leafs", "n / a", "24.95", "from toronto maple leafs gift set"], ["2009", "vancouver canucks", "n / a", "24.95", "from vancouver canucks gift set"]], "query": "round_eq { sum { all_rows ; issue price } ; 395.1 } = true", "question": "the combined issue price of all the royal canadian mint numismatic coins of the 2000s is 395.10 ."}, {"topic": "1989 - 90 manchester united f.c. season", "wiki": "https://en.wikipedia.org/wiki/1989%E2%80%9390_Manchester_United_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17577104-4.html.csv", "action": "aggregation", "sent": "the average attendance for a game in 1989-90 manchester united f.c. season was 45557.14 .", "annotation": {"scope": "all", "col": "7", "type": "average", "result": "45557.14", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "attendance"], "result": "45557.14", "ind": 0, "tostr": "avg { all_rows ; attendance }"}, "45557.14"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; attendance } ; 45557.14 } = true", "tointer": "the average of the attendance record of all rows is 45557.14 ."}, "logic_str": "round_eq { avg { all_rows ; attendance } ; 45557.14 } = true", "interpret": "the average of the attendance record of all rows is 45557.14 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "attendance_4": 4, "45557.14_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "attendance_4": "attendance", "45557.14_5": "45557.14"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "attendance_4": [0], "45557.14_5": [1]}, "table_header": ["date", "round", "opponents", "h / a", "result f - a", "scorers", "attendance"], "table_cont": [["7 january 1990", "round 3", "nottingham forest", "a", "1 - 0", "robins 56 '", "23072"], ["28 january 1990", "round 4", "hereford united", "a", "1 - 0", "blackmore 86 '", "13777"], ["18 february 1990", "round 5", "newcastle united", "a", "3 - 2", "robins 19 ' , wallace 60 ' , mcclair 77 '", "31748"], ["11 march 1990", "round 6", "sheffield united", "a", "1 - 0", "mcclair 29 '", "34344"], ["8 april 1990", "semi - final", "oldham athletic", "n", "3 - 3 ( aet )", "robson 29 ' , webb 72 ' , wallace 92 '", "44026"], ["11 april 1990", "semi - final replay", "oldham athletic", "n", "2 - 1 ( aet )", "mcclair 50 ' , robins 114 '", "35005"], ["12 may 1990", "final", "crystal palace", "n", "3 - 3 ( aet )", "robson 35 ' , hughes ( 2 ) 62 ' , 113 '", "80000"], ["17 may 1990", "final replay", "crystal palace", "n", "1 - 0", "martin 59 '", "80000"]], "query": "round_eq { avg { all_rows ; attendance } ; 45557.14 } = true", "question": "the average attendance for a game in 1989-90 manchester united f.c. season was 45557.14 ."}, {"topic": "2010 afc champions league", "wiki": "https://en.wikipedia.org/wiki/2010_AFC_Champions_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19412902-1.html.csv", "action": "unique", "sent": "the member association from uzbekistan is the only one with an afc cup .", "annotation": {"scope": "all", "row": "4", "col": "7", "col_other": "2", "criterion": "not_equal", "value": "0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_not_eq", "args": ["all_rows", "afc cup", "0"], "result": null, "ind": 0, "tointer": "select the rows whose afc cup record is not equal to 0 .", "tostr": "filter_not_eq { all_rows ; afc cup ; 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_not_eq { all_rows ; afc cup ; 0 } }", "tointer": "select the rows whose afc cup record is not equal to 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_not_eq", "args": ["all_rows", "afc cup", "0"], "result": null, "ind": 0, "tointer": "select the rows whose afc cup record is not equal to 0 .", "tostr": "filter_not_eq { all_rows ; afc cup ; 0 }"}, "member association"], "result": "uzbekistan", "ind": 2, "tostr": "hop { filter_not_eq { all_rows ; afc cup ; 0 } ; member association }"}, "uzbekistan"], "result": true, "ind": 3, "tostr": "eq { hop { filter_not_eq { all_rows ; afc cup ; 0 } ; member association } ; uzbekistan }", "tointer": "the member association record of this unqiue row is uzbekistan ."}], "result": true, "ind": 4, "tostr": "and { only { filter_not_eq { all_rows ; afc cup ; 0 } } ; eq { hop { filter_not_eq { all_rows ; afc cup ; 0 } ; member association } ; uzbekistan } } = true", "tointer": "select the rows whose afc cup record is not equal to 0 . there is only one such row in the table . the member association record of this unqiue row is uzbekistan ."}, "logic_str": "and { only { filter_not_eq { all_rows ; afc cup ; 0 } } ; eq { hop { filter_not_eq { all_rows ; afc cup ; 0 } ; member association } ; uzbekistan } } = true", "interpret": "select the rows whose afc cup record is not equal to 0 . there is only one such row in the table . the member association record of this unqiue row is uzbekistan .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_not_eq_0": 0, "all_rows_6": 6, "afc cup_7": 7, "0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "member association_9": 9, "uzbekistan_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_not_eq_0": "filter_not_eq", "all_rows_6": "all_rows", "afc cup_7": "afc cup", "0_8": "0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "member association_9": "member association", "uzbekistan_10": "uzbekistan"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_not_eq_0": [1, 2], "all_rows_6": [0], "afc cup_7": [0], "0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "member association_9": [2], "uzbekistan_10": [3]}, "table_header": ["pos", "member association", "points ( total 500 )", "clubs", "group stage", "play - off", "afc cup"], "table_cont": [["4", "saudi arabia", "365", "12", "4", "0", "0"], ["5", "uae", "356", "12", "3", "1", "0"], ["7", "iran", "340", "18", "4", "0", "0"], ["9", "uzbekistan", "289", "16", "2", "0", "1"], ["10", "qatar", "270", "10", "2", "0", "0"]], "query": "and { only { filter_not_eq { all_rows ; afc cup ; 0 } } ; eq { hop { filter_not_eq { all_rows ; afc cup ; 0 } ; member association } ; uzbekistan } } = true", "question": "the member association from uzbekistan is the only one with an afc cup ."}, {"topic": "combined scottish universities ( uk parliament constituency )", "wiki": "https://en.wikipedia.org/wiki/Combined_Scottish_Universities_%28UK_Parliament_constituency%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1192925-1.html.csv", "action": "count", "sent": "there were four elections where the 2nd member was dugald mccoig cowan .", "annotation": {"scope": "all", "criterion": "equal", "value": "dugald mccoig cowan", "result": "4", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "2nd member", "dugald mccoig cowan"], "result": null, "ind": 0, "tointer": "select the rows whose 2nd member record fuzzily matches to dugald mccoig cowan .", "tostr": "filter_eq { all_rows ; 2nd member ; dugald mccoig cowan }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; 2nd member ; dugald mccoig cowan } }", "tointer": "select the rows whose 2nd member record fuzzily matches to dugald mccoig cowan . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; 2nd member ; dugald mccoig cowan } } ; 4 } = true", "tointer": "select the rows whose 2nd member record fuzzily matches to dugald mccoig cowan . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; 2nd member ; dugald mccoig cowan } } ; 4 } = true", "interpret": "select the rows whose 2nd member record fuzzily matches to dugald mccoig cowan . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "2nd member_5": 5, "dugald mccoig cowan_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "2nd member_5": "2nd member", "dugald mccoig cowan_6": "dugald mccoig cowan", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "2nd member_5": [0], "dugald mccoig cowan_6": [0], "4_7": [2]}, "table_header": ["election", "1st member", "1st party", "2nd member", "2nd party", "3rd member", "3rd party"], "table_cont": [["1918", "sir william cheyne", "coalition conservative", "dugald mccoig cowan", "coalition liberal", "sir henry craik", "coalition conservative"], ["1922", "sir george berry", "unionist", "dugald mccoig cowan", "liberal", "sir henry craik", "coalition conservative"], ["apr 1927", "sir george berry", "unionist", "dugald mccoig cowan", "liberal", "john buchan", "unionist"], ["1931", "noel skelton", "unionist", "dugald mccoig cowan", "liberal", "john buchan", "unionist"], ["mar 1934", "noel skelton", "unionist", "george alexander morrison", "liberal", "john buchan", "unionist"], ["jun 1935", "noel skelton", "unionist", "george alexander morrison", "national liberal", "sir john kerr", "unionist"], ["jan 1936", "ramsay macdonald", "national labour", "george alexander morrison", "national liberal", "sir john kerr", "unionist"], ["feb 1938", "sir john anderson", "national", "george alexander morrison", "national liberal", "sir john kerr", "unionist"], ["apr 1945", "sir john anderson", "national", "sir john boyd - orr", "independent", "sir john kerr", "unionist"], ["nov 1946", "sir john anderson", "national", "walter elliot", "unionist", "sir john kerr", "unionist"], ["1950", "university constituencies abolished", "university constituencies abolished", "university constituencies abolished", "university constituencies abolished", "university constituencies abolished", "university constituencies abolished"]], "query": "eq { count { filter_eq { all_rows ; 2nd member ; dugald mccoig cowan } } ; 4 } = true", "question": "there were four elections where the 2nd member was dugald mccoig cowan ."}, {"topic": "naval campaign of the war of the pacific", "wiki": "https://en.wikipedia.org/wiki/Naval_Campaign_of_the_War_of_the_Pacific", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-23614702-2.html.csv", "action": "superlative", "sent": "in the naval campaign of the war of the pacific , the warship with the highest speed was magallanes .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "4", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "speed ( knots )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; speed ( knots ) }"}, "warship"], "result": "magallanes", "ind": 1, "tostr": "hop { argmax { all_rows ; speed ( knots ) } ; warship }"}, "magallanes"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; speed ( knots ) } ; warship } ; magallanes } = true", "tointer": "select the row whose speed ( knots ) record of all rows is maximum . the warship record of this row is magallanes ."}, "logic_str": "eq { hop { argmax { all_rows ; speed ( knots ) } ; warship } ; magallanes } = true", "interpret": "select the row whose speed ( knots ) record of all rows is maximum . the warship record of this row is magallanes .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "speed ( knots )_5": 5, "warship_6": 6, "magallanes_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "speed ( knots )_5": "speed ( knots )", "warship_6": "warship", "magallanes_7": "magallanes"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "speed ( knots )_5": [0], "warship_6": [1], "magallanes_7": [2]}, "table_header": ["warship", "tons ( lton )", "horse - power", "speed ( knots )", "main artillery", "built year"], "table_cont": [["o'higgins", "1101", "300", "12", "3x115 - 2x70 - 2x12 - pounders", "1874"], ["chacabuco", "1101", "300", "11", "1x115 - 2x70 - 2x12 - pounders", "1874"], ["abtao", "1051", "300", "8", "3x115 - 3x30 - pounders", "1870"], ["magallanes", "772", "260", "115", "1x115 - 1x64 - 2x20 - pounders", "1874"], ["covadonga", "412", "140", "7", "2x70 - 3x40 - pounders", "1859"], ["esmeralda", "854", "200", "8", "16x32 - 2x12 - pounders", "1855"], ["uni\u00e3 cubicn", "1.150", "320", "13", "12x68 - 1x9 - pounders", "1864"]], "query": "eq { hop { argmax { all_rows ; speed ( knots ) } ; warship } ; magallanes } = true", "question": "in the naval campaign of the war of the pacific , the warship with the highest speed was magallanes ."}, {"topic": "tom weiskopf", "wiki": "https://en.wikipedia.org/wiki/Tom_Weiskopf", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1579748-6.html.csv", "action": "aggregation", "sent": "for the tournaments that tom weiskopf participated in , the average number of events is 17.75 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "17.75", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "events"], "result": "17.75", "ind": 0, "tostr": "avg { all_rows ; events }"}, "17.75"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; events } ; 17.75 } = true", "tointer": "the average of the events record of all rows is 17.75 ."}, "logic_str": "round_eq { avg { all_rows ; events } ; 17.75 } = true", "interpret": "the average of the events record of all rows is 17.75 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "events_4": 4, "17.75_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "events_4": "events", "17.75_5": "17.75"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "events_4": [0], "17.75_5": [1]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "4", "7", "12", "16", "15"], ["us open", "0", "5", "6", "11", "18", "16"], ["the open championship", "1", "1", "3", "9", "19", "12"], ["pga championship", "0", "2", "5", "6", "18", "12"], ["totals", "1", "12", "21", "38", "71", "55"]], "query": "round_eq { avg { all_rows ; events } ; 17.75 } = true", "question": "for the tournaments that tom weiskopf participated in , the average number of events is 17.75 ."}, {"topic": "1993 pba draft", "wiki": "https://en.wikipedia.org/wiki/1993_PBA_draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18772258-1.html.csv", "action": "comparative", "sent": "zandro limpot , jr. was an earlier pick than richard bachmann .", "annotation": {"row_1": "1", "row_2": "8", "col": "1", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "zandro limpot , jr"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to zandro limpot , jr .", "tostr": "filter_eq { all_rows ; player ; zandro limpot , jr }"}, "pick"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; zandro limpot , jr } ; pick }", "tointer": "select the rows whose player record fuzzily matches to zandro limpot , jr . take the pick record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "richard bachmann"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to richard bachmann .", "tostr": "filter_eq { all_rows ; player ; richard bachmann }"}, "pick"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; richard bachmann } ; pick }", "tointer": "select the rows whose player record fuzzily matches to richard bachmann . take the pick record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; zandro limpot , jr } ; pick } ; hop { filter_eq { all_rows ; player ; richard bachmann } ; pick } } = true", "tointer": "select the rows whose player record fuzzily matches to zandro limpot , jr . take the pick record of this row . select the rows whose player record fuzzily matches to richard bachmann . take the pick record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; player ; zandro limpot , jr } ; pick } ; hop { filter_eq { all_rows ; player ; richard bachmann } ; pick } } = true", "interpret": "select the rows whose player record fuzzily matches to zandro limpot , jr . take the pick record of this row . select the rows whose player record fuzzily matches to richard bachmann . take the pick record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "zandro limpot , jr_8": 8, "pick_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "richard bachmann_12": 12, "pick_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "zandro limpot , jr_8": "zandro limpot , jr", "pick_9": "pick", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "richard bachmann_12": "richard bachmann", "pick_13": "pick"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "zandro limpot , jr_8": [0], "pick_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "richard bachmann_12": [1], "pick_13": [3]}, "table_header": ["pick", "player", "country of origin", "pba team", "college"], "table_cont": [["1", "zandro limpot , jr", "philippines", "sta lucia realtors", "la salle - manila"], ["2", "victor pablo", "philippines", "ginebra san miguel", "far eastern"], ["3", "johnny abarrientos", "philippines", "alaska milkmen", "far eastern"], ["4", "dwight lago", "philippines", "coney island ice cream stars", "la salle - manila"], ["5", "benito cheng", "philippines", "coney island ice cream stars", "mapua"], ["6", "johnedel cardel", "philippines", "alaska milkmen", "la salle - manila"], ["7", "teodorico fernandez iii", "philippines", "swift mighty meaties", "san agustin"], ["8", "richard bachmann", "philippines", "alaska milkmen", "la salle - manila"]], "query": "less { hop { filter_eq { all_rows ; player ; zandro limpot , jr } ; pick } ; hop { filter_eq { all_rows ; player ; richard bachmann } ; pick } } = true", "question": "zandro limpot , jr. was an earlier pick than richard bachmann ."}, {"topic": "london underground", "wiki": "https://en.wikipedia.org/wiki/London_Underground", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17839-1.html.csv", "action": "unique", "sent": "the only line that is marked in black on the map is the northern line .", "annotation": {"scope": "all", "row": "8", "col": "2", "col_other": "1", "criterion": "equal", "value": "black", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "map colour", "black"], "result": null, "ind": 0, "tointer": "select the rows whose map colour record fuzzily matches to black .", "tostr": "filter_eq { all_rows ; map colour ; black }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; map colour ; black } }", "tointer": "select the rows whose map colour record fuzzily matches to black . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "map colour", "black"], "result": null, "ind": 0, "tointer": "select the rows whose map colour record fuzzily matches to black .", "tostr": "filter_eq { all_rows ; map colour ; black }"}, "name"], "result": "northern line", "ind": 2, "tostr": "hop { filter_eq { all_rows ; map colour ; black } ; name }"}, "northern line"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; map colour ; black } ; name } ; northern line }", "tointer": "the name record of this unqiue row is northern line ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; map colour ; black } } ; eq { hop { filter_eq { all_rows ; map colour ; black } ; name } ; northern line } } = true", "tointer": "select the rows whose map colour record fuzzily matches to black . there is only one such row in the table . the name record of this unqiue row is northern line ."}, "logic_str": "and { only { filter_eq { all_rows ; map colour ; black } } ; eq { hop { filter_eq { all_rows ; map colour ; black } ; name } ; northern line } } = true", "interpret": "select the rows whose map colour record fuzzily matches to black . there is only one such row in the table . the name record of this unqiue row is northern line .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "map colour_7": 7, "black_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "northern line_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "map colour_7": "map colour", "black_8": "black", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "northern line_10": "northern line"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "map colour_7": [0], "black_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "northern line_10": [3]}, "table_header": ["name", "map colour", "first operated", "type", "length", "no sta", "current stock", "future stock", "trips per annum ( 1000 )", "avg trips per mile ( 1000 )"], "table_cont": [["bakerloo line", "brown", "1906", "deep tube", "23.2 km 14.5 mi", "25", "1972 stock", "n / a", "111136", "7665"], ["central line", "red", "1900", "deep tube", "74 0 km 46 0 mi", "49", "1992 stock", "n / a", "260916", "5672"], ["circle line", "yellow", "1871", "sub surface", "27.2 km 17 0 mi", "36", "c stock s stock", "s stock ( currently replacing c stock )", "114609", "4716"], ["district line", "green", "1868", "sub surface", "64 0 km 40 0 mi", "60", "c stock and d78 stock", "s stock from 2014", "208317", "5208"], ["hammersmith & city line", "pink", "1864", "sub surface", "25.5 km 15.9 mi", "29", "c stock s stock", "s stock ( currently replacing c stock )", "114609", "4716"], ["jubilee line", "silver", "1979", "deep tube", "36.2 km 22.5 mi", "27", "1996 stock", "n / a", "213554", "9491"], ["metropolitan line", "purple", "1863", "sub surface", "66.7 km 41.5 mi", "34", "s stock", "n / a", "66779", "1609"], ["northern line", "black", "1890", "deep tube", "58 0 km 36 0 mi", "50", "1995 stock", "n / a", "252310", "7009"], ["piccadilly line", "dark blue", "1906", "deep tube", "71 0 km 44.3 mi", "53", "1973 stock", "n / a", "210169", "4744"], ["victoria line", "light blue", "1968", "deep tube", "21 0 km 13.3 mi", "16", "2009 stock", "n / a", "199988", "15093"], ["waterloo & city line", "turquoise", "1898", "deep tube", "2.5 km 1.5 mi", "2", "1992 stock", "n / a", "15892", "10595"]], "query": "and { only { filter_eq { all_rows ; map colour ; black } } ; eq { hop { filter_eq { all_rows ; map colour ; black } ; name } ; northern line } } = true", "question": "the only line that is marked in black on the map is the northern line ."}, {"topic": "jean - philippe belloc", "wiki": "https://en.wikipedia.org/wiki/Jean-Philippe_Belloc", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16514890-1.html.csv", "action": "aggregation", "sent": "the average number of laps completed by all teams was about 259 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "259", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "laps"], "result": "259", "ind": 0, "tostr": "avg { all_rows ; laps }"}, "259"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; laps } ; 259 } = true", "tointer": "the average of the laps record of all rows is 259 ."}, "logic_str": "round_eq { avg { all_rows ; laps } ; 259 } = true", "interpret": "the average of the laps record of all rows is 259 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "laps_4": 4, "259_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "laps_4": "laps", "259_5": "259"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "laps_4": [0], "259_5": [1]}, "table_header": ["year", "team", "co - drivers", "class", "laps", "pos", "class pos"], "table_cont": [["1997", "la fili\u00e8re elf", "henri pescarolo emmanuel cl\u00e9rico", "lmp", "319", "7th", "4th"], ["1998", "courage comp\u00e9tition", "didier cottaz marc goossens", "lmp1", "232", "dnf", "dnf"], ["1999", "viper team oreca", "david donohue soheil ayari", "gts", "271", "dnf", "dnf"], ["2000", "mopar team oreca", "yannick dalmas nicolas minassian", "lmp900", "1", "dnf", "dnf"], ["2001", "larbre comp\u00e9tition", "christophe bouchut tiago monteiro", "gts", "234", "20th", "4th"], ["2002", "equipe de france ffsa oreca", "jonathan cochet beno\u00eet tr\u00e9luyer", "gts", "326", "14th", "3rd"], ["2007", "team oreca", "laurent groppi nicolas prost", "gt1", "337", "10th", "5th"], ["2011", "larbre comp\u00e9tition", "christophe bourret pascal gibon", "gte am", "301", "21st", "2nd"], ["2012", "larbre comp\u00e9tition", "christophe bourret pascal gibon", "gte am", "309", "28th", "5th"]], "query": "round_eq { avg { all_rows ; laps } ; 259 } = true", "question": "the average number of laps completed by all teams was about 259 ."}, {"topic": "1963 icf canoe sprint world championships", "wiki": "https://en.wikipedia.org/wiki/1963_ICF_Canoe_Sprint_World_Championships", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18540480-4.html.csv", "action": "comparative", "sent": "sweden won more silver medals than denmark at the 1963 icf canoe sprint world championships .", "annotation": {"row_1": "7", "row_2": "6", "col": "4", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nation", "sweden"], "result": null, "ind": 0, "tointer": "select the rows whose nation record fuzzily matches to sweden .", "tostr": "filter_eq { all_rows ; nation ; sweden }"}, "silver"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; nation ; sweden } ; silver }", "tointer": "select the rows whose nation record fuzzily matches to sweden . take the silver record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nation", "denmark"], "result": null, "ind": 1, "tointer": "select the rows whose nation record fuzzily matches to denmark .", "tostr": "filter_eq { all_rows ; nation ; denmark }"}, "silver"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; nation ; denmark } ; silver }", "tointer": "select the rows whose nation record fuzzily matches to denmark . take the silver record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; nation ; sweden } ; silver } ; hop { filter_eq { all_rows ; nation ; denmark } ; silver } } = true", "tointer": "select the rows whose nation record fuzzily matches to sweden . take the silver record of this row . select the rows whose nation record fuzzily matches to denmark . take the silver record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; nation ; sweden } ; silver } ; hop { filter_eq { all_rows ; nation ; denmark } ; silver } } = true", "interpret": "select the rows whose nation record fuzzily matches to sweden . take the silver record of this row . select the rows whose nation record fuzzily matches to denmark . take the silver record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "nation_7": 7, "sweden_8": 8, "silver_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "nation_11": 11, "denmark_12": 12, "silver_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "nation_7": "nation", "sweden_8": "sweden", "silver_9": "silver", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "nation_11": "nation", "denmark_12": "denmark", "silver_13": "silver"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "nation_7": [0], "sweden_8": [0], "silver_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "nation_11": [1], "denmark_12": [1], "silver_13": [3]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "romania", "6", "4", "1", "11"], ["2", "soviet union", "4", "4", "3", "11"], ["3", "east germany", "1", "3", "5", "9"], ["4", "west germany", "2", "2", "2", "6"], ["5", "hungary", "2", "0", "4", "6"], ["6", "denmark", "1", "1", "0", "2"], ["7", "sweden", "0", "2", "0", "2"], ["8", "austria", "0", "0", "1", "1"], ["total", "total", "16", "16", "16", "48"]], "query": "greater { hop { filter_eq { all_rows ; nation ; sweden } ; silver } ; hop { filter_eq { all_rows ; nation ; denmark } ; silver } } = true", "question": "sweden won more silver medals than denmark at the 1963 icf canoe sprint world championships ."}, {"topic": "weightlifting at the 2007 pan american games", "wiki": "https://en.wikipedia.org/wiki/Weightlifting_at_the_2007_Pan_American_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17703223-7.html.csv", "action": "count", "sent": "2 athletes represented argentina ( arg ) in weightlifting at the 2007 pan american games .", "annotation": {"scope": "all", "criterion": "equal", "value": "arg", "result": "2", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "arg"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to arg .", "tostr": "filter_eq { all_rows ; name ; arg }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; name ; arg } }", "tointer": "select the rows whose name record fuzzily matches to arg . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; name ; arg } } ; 2 } = true", "tointer": "select the rows whose name record fuzzily matches to arg . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; name ; arg } } ; 2 } = true", "interpret": "select the rows whose name record fuzzily matches to arg . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "name_5": 5, "arg_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "name_5": "name", "arg_6": "arg", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "name_5": [0], "arg_6": [0], "2_7": [2]}, "table_header": ["name", "bodyweight", "snatch", "clean & jerk", "total ( kg )"], "table_cont": [["jo\u00ebl mackenzie ( cub )", "101.40", "175.0", "205.0", "380.0"], ["pedro stetsiuk ( arg )", "102.45", "160.0", "180.0", "340.0"], ["damian abbiate ( arg )", "104.45", "150.0", "188.0", "338.0"], ["bruno brand\u00e3o ( bra )", "99.10", "157.0", "180.0", "337.0"], ["christian l\u00f3pez ( gua )", "104.70", "153.0", "182.0", "335.0"], ["v\u00edctor osorio ( chi )", "103.05", "140.0", "176.0", "316.0"], ["ivorn mcknee ( bar )", "103.25", "140.0", "-", "dnf"], ["jos\u00e9 espinoza ( nca )", "99.40", "-", "-", "dnf"], ["boris burov ( ecu )", "100.40", "-", "-", "dnf"], ["akos sandor ( can )", "104.95", "-", "-", "dnf"], ["fabr\u00edcio mafra ( bra )", "100.75", "151.0", "187.0", "dsq"]], "query": "eq { count { filter_eq { all_rows ; name ; arg } } ; 2 } = true", "question": "2 athletes represented argentina ( arg ) in weightlifting at the 2007 pan american games ."}, {"topic": "list of supernanny episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Supernanny_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19897294-9.html.csv", "action": "ordinal", "sent": "the haynes family and the potter family is the latest episode of the supernanny series .", "annotation": {"row": "5", "col": "5", "order": "1", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "original air date", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; original air date ; 1 }"}, "family / families"], "result": "the haynes family and the potter family", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; original air date ; 1 } ; family / families }"}, "the haynes family and the potter family"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; original air date ; 1 } ; family / families } ; the haynes family and the potter family } = true", "tointer": "select the row whose original air date record of all rows is 1st maximum . the family / families record of this row is the haynes family and the potter family ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; original air date ; 1 } ; family / families } ; the haynes family and the potter family } = true", "interpret": "select the row whose original air date record of all rows is 1st maximum . the family / families record of this row is the haynes family and the potter family .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "original air date_5": 5, "1_6": 6, "family / families_7": 7, "the haynes family and the potter family_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "original air date_5": "original air date", "1_6": "1", "family / families_7": "family / families", "the haynes family and the potter family_8": "the haynes family and the potter family"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "original air date_5": [0], "1_6": [0], "family / families_7": [1], "the haynes family and the potter family_8": [2]}, "table_header": ["no overall", "no in series", "family / families", "location ( s )", "original air date"], "table_cont": [["uk36", "1", "the murphy family and the laws family", "north london & high wycombe", "6 july 2011"], ["uk37", "2", "the ryder family and the schwartz family", "hull & east london", "13 july 2011"], ["uk38", "3", "the reynolds family and the simpson family", "reading & ilford", "20 july 2011"], ["uk39", "4", "the abbas family and the pickering family", "surrey & hondo , tx", "27 july 2011"], ["uk40", "5", "the haynes family and the potter family", "cardiff & west london", "3 august 2011"]], "query": "eq { hop { nth_argmax { all_rows ; original air date ; 1 } ; family / families } ; the haynes family and the potter family } = true", "question": "the haynes family and the potter family is the latest episode of the supernanny series ."}, {"topic": "am5x86", "wiki": "https://en.wikipedia.org/wiki/Am5x86", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-167482-1.html.csv", "action": "count", "sent": "the 150 mhz only appears once in the frequency column .", "annotation": {"scope": "all", "criterion": "equal", "value": "150 mhz", "result": "1", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "frequency", "150 mhz"], "result": null, "ind": 0, "tointer": "select the rows whose frequency record fuzzily matches to 150 mhz .", "tostr": "filter_eq { all_rows ; frequency ; 150 mhz }"}], "result": "1", "ind": 1, "tostr": "count { filter_eq { all_rows ; frequency ; 150 mhz } }", "tointer": "select the rows whose frequency record fuzzily matches to 150 mhz . the number of such rows is 1 ."}, "1"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; frequency ; 150 mhz } } ; 1 } = true", "tointer": "select the rows whose frequency record fuzzily matches to 150 mhz . the number of such rows is 1 ."}, "logic_str": "eq { count { filter_eq { all_rows ; frequency ; 150 mhz } } ; 1 } = true", "interpret": "select the rows whose frequency record fuzzily matches to 150 mhz . the number of such rows is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "frequency_5": 5, "150 mhz_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "frequency_5": "frequency", "150 mhz_6": "150 mhz", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "frequency_5": [0], "150 mhz_6": [0], "1_7": [2]}, "table_header": ["model number", "frequency", "l1 cache", "mult", "voltage"], "table_cont": [["x5 - 133 adh", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 ady", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 adw", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 adz", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 bgc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 v16bgc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 w16bgc", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 133 v16bhc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 w16bhc", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 133 sfz", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 150 adw", "150 mhz", "16 kib", "3", "3.45 v"]], "query": "eq { count { filter_eq { all_rows ; frequency ; 150 mhz } } ; 1 } = true", "question": "the 150 mhz only appears once in the frequency column ."}, {"topic": "vissel kobe", "wiki": "https://en.wikipedia.org/wiki/Vissel_Kobe", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1082589-1.html.csv", "action": "unique", "sent": "the 2000 season was the only season in which vissel kobe reached the semi-final of the emperor 's cup .", "annotation": {"scope": "all", "row": "4", "col": "6", "col_other": "1", "criterion": "equal", "value": "semi - final", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "emperor 's cup", "semi - final"], "result": null, "ind": 0, "tointer": "select the rows whose emperor 's cup record fuzzily matches to semi - final .", "tostr": "filter_eq { all_rows ; emperor 's cup ; semi - final }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; emperor 's cup ; semi - final } }", "tointer": "select the rows whose emperor 's cup record fuzzily matches to semi - final . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "emperor 's cup", "semi - final"], "result": null, "ind": 0, "tointer": "select the rows whose emperor 's cup record fuzzily matches to semi - final .", "tostr": "filter_eq { all_rows ; emperor 's cup ; semi - final }"}, "season"], "result": "2000", "ind": 2, "tostr": "hop { filter_eq { all_rows ; emperor 's cup ; semi - final } ; season }"}, "2000"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; emperor 's cup ; semi - final } ; season } ; 2000 }", "tointer": "the season record of this unqiue row is 2000 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; emperor 's cup ; semi - final } } ; eq { hop { filter_eq { all_rows ; emperor 's cup ; semi - final } ; season } ; 2000 } } = true", "tointer": "select the rows whose emperor 's cup record fuzzily matches to semi - final . there is only one such row in the table . the season record of this unqiue row is 2000 ."}, "logic_str": "and { only { filter_eq { all_rows ; emperor 's cup ; semi - final } } ; eq { hop { filter_eq { all_rows ; emperor 's cup ; semi - final } ; season } ; 2000 } } = true", "interpret": "select the rows whose emperor 's cup record fuzzily matches to semi - final . there is only one such row in the table . the season record of this unqiue row is 2000 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "emperor 's cup_7": 7, "semi - final_8": 8, "eq_3": 3, "num_hop_2": 2, "season_9": 9, "2000_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "emperor 's cup_7": "emperor 's cup", "semi - final_8": "semi - final", "eq_3": "eq", "num_hop_2": "num_hop", "season_9": "season", "2000_10": "2000"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "emperor 's cup_7": [0], "semi - final_8": [0], "eq_3": [4], "num_hop_2": [3], "season_9": [2], "2000_10": [3]}, "table_header": ["season", "div", "tms", "pos", "attendance / g", "emperor 's cup"], "table_cont": [["1997", "j1", "17", "16", "6567", "4th round"], ["1998", "j1", "18", "17", "7686", "3rd round"], ["1999", "j1", "16", "10", "7691", "3rd round"], ["2000", "j1", "16", "13", "7512", "semi - final"], ["2001", "j1", "16", "12", "13872", "4th round"], ["2002", "j1", "16", "14", "10467", "3rd round"], ["2003", "j1", "16", "13", "11195", "quarter - final"], ["2004", "j1", "16", "11", "15735", "4th round"], ["2005", "j1", "18", "18", "14913", "4th round"], ["2006", "j2", "13", "3", "6910", "3rd round"], ["2007", "j1", "18", "10", "12460", "5th round"], ["2008", "j1", "18", "10", "12981", "5th round"], ["2009", "j1", "18", "14", "13068", "4th round"], ["2010", "j1", "18", "15", "12824", "3rd round"], ["2011", "j1", "18", "9", "13233", "3rd round"], ["2012", "j1", "18", "16", "14638", "2nd round"]], "query": "and { only { filter_eq { all_rows ; emperor 's cup ; semi - final } } ; eq { hop { filter_eq { all_rows ; emperor 's cup ; semi - final } ; season } ; 2000 } } = true", "question": "the 2000 season was the only season in which vissel kobe reached the semi-final of the emperor 's cup ."}, {"topic": "2005 - 06 miami heat season", "wiki": "https://en.wikipedia.org/wiki/2005%E2%80%9306_Miami_Heat_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-13762472-5.html.csv", "action": "comparative", "sent": "dwyane wade scored more points on january 29 than he did on january 1 .", "annotation": {"row_1": "14", "row_2": "1", "col": "5", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "january 29"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to january 29 .", "tostr": "filter_eq { all_rows ; date ; january 29 }"}, "high points"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; january 29 } ; high points }", "tointer": "select the rows whose date record fuzzily matches to january 29 . take the high points record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "january 1"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to january 1 .", "tostr": "filter_eq { all_rows ; date ; january 1 }"}, "high points"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; january 1 } ; high points }", "tointer": "select the rows whose date record fuzzily matches to january 1 . take the high points record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; date ; january 29 } ; high points } ; hop { filter_eq { all_rows ; date ; january 1 } ; high points } } = true", "tointer": "select the rows whose date record fuzzily matches to january 29 . take the high points record of this row . select the rows whose date record fuzzily matches to january 1 . take the high points record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; date ; january 29 } ; high points } ; hop { filter_eq { all_rows ; date ; january 1 } ; high points } } = true", "interpret": "select the rows whose date record fuzzily matches to january 29 . take the high points record of this row . select the rows whose date record fuzzily matches to january 1 . take the high points record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "date_7": 7, "january 29_8": 8, "high points_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "date_11": 11, "january 1_12": 12, "high points_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date_7": "date", "january 29_8": "january 29", "high points_9": "high points", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "date_11": "date", "january 1_12": "january 1", "high points_13": "high points"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "date_7": [0], "january 29_8": [0], "high points_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "date_11": [1], "january 1_12": [1], "high points_13": [3]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["32", "january 1", "minnesota", "w 97 - 70 ( ot )", "dwyane wade ( 19 )", "alonzo mourning ( 10 )", "dwyane wade ( 9 )", "american airlines arena", "19 - 13"], ["33", "january 4", "new orleans / oklahoma city", "l 92 - 107 ( ot )", "shaquille o'neal , dwyane wade ( 19 )", "dwyane wade ( 10 )", "dwyane wade ( 10 )", "ford center", "19 - 14"], ["34", "january 6", "phoenix", "l 93 - 111 ( ot )", "antoine walker ( 22 )", "shaquille o'neal ( 13 )", "gerald fitch ( 6 )", "america west arena", "19 - 15"], ["35", "january 8", "portland", "w 118 - 89 ( ot )", "dwyane wade ( 31 )", "james posey ( 9 )", "jason williams ( 8 )", "rose garden", "20 - 15"], ["36", "january 11", "golden state", "w 110 - 96 ( ot )", "dwyane wade ( 32 )", "udonis haslem , shaquille o'neal ( 10 )", "dwyane wade ( 11 )", "the arena in oakland", "21 - 15"], ["37", "january 13", "seattle", "w 117 - 104 ( ot )", "james posey , jason williams ( 19 )", "dwyane wade ( 10 )", "dwyane wade ( 14 )", "keyarena", "22 - 15"], ["38", "january 14", "utah", "w 100 - 94 ( ot )", "dwyane wade ( 31 )", "shaquille o'neal ( 14 )", "dwyane wade ( 8 )", "delta center", "23 - 15"], ["39", "january 16", "la lakers", "l 92 - 100 ( ot )", "dwyane wade ( 34 )", "udonis haslem ( 12 )", "dwyane wade ( 7 )", "staples center", "23 - 16"], ["40", "january 20", "san antonio", "l 94 - 101 ( ot )", "dwyane wade ( 36 )", "james posey , antoine walker ( 7 )", "udonis haslem , jason williams ( 3 )", "american airlines arena", "23 - 17"], ["41", "january 22", "sacramento", "w 119 - 99 ( ot )", "shaquille o'neal ( 27 )", "dwyane wade , udonis haslem , shaquille o'neal ( 6 )", "jason williams ( 11 )", "american airlines arena", "24 - 17"], ["42", "january 24", "memphis", "w 94 - 82 ( ot )", "dwyane wade ( 25 )", "shaquille o'neal ( 15 )", "jason williams ( 6 )", "american airlines arena", "25 - 17"], ["43", "january 26", "phoenix", "l 98 - 107 ( ot )", "dwyane wade ( 25 )", "shaquille o'neal ( 12 )", "gary payton ( 8 )", "american airlines arena", "25 - 18"], ["44", "january 27", "charlotte", "w 91 - 85 ( ot )", "shaquille o'neal ( 23 )", "gerald fitch ( 8 )", "gary payton ( 8 )", "charlotte arena", "26 - 18"], ["45", "january 29", "houston", "w 101 - 95 ( ot )", "dwyane wade ( 32 )", "shaquille o'neal ( 14 )", "dwyane wade ( 9 )", "toyota center", "27 - 18"]], "query": "greater { hop { filter_eq { all_rows ; date ; january 29 } ; high points } ; hop { filter_eq { all_rows ; date ; january 1 } ; high points } } = true", "question": "dwyane wade scored more points on january 29 than he did on january 1 ."}, {"topic": "binghamton dusters", "wiki": "https://en.wikipedia.org/wiki/Binghamton_Dusters", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2509505-1.html.csv", "action": "comparative", "sent": "in the 1978 - 79 season , the the binghamton dusters scored more goals than in their 1975 - 76 season .", "annotation": {"row_1": "6", "row_2": "3", "col": "7", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "season", "1978 - 79"], "result": null, "ind": 0, "tointer": "select the rows whose season record fuzzily matches to 1978 - 79 .", "tostr": "filter_eq { all_rows ; season ; 1978 - 79 }"}, "goals for"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; season ; 1978 - 79 } ; goals for }", "tointer": "select the rows whose season record fuzzily matches to 1978 - 79 . take the goals for record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "season", "1975 - 76"], "result": null, "ind": 1, "tointer": "select the rows whose season record fuzzily matches to 1975 - 76 .", "tostr": "filter_eq { all_rows ; season ; 1975 - 76 }"}, "goals for"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; season ; 1975 - 76 } ; goals for }", "tointer": "select the rows whose season record fuzzily matches to 1975 - 76 . take the goals for record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; season ; 1978 - 79 } ; goals for } ; hop { filter_eq { all_rows ; season ; 1975 - 76 } ; goals for } } = true", "tointer": "select the rows whose season record fuzzily matches to 1978 - 79 . take the goals for record of this row . select the rows whose season record fuzzily matches to 1975 - 76 . take the goals for record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; season ; 1978 - 79 } ; goals for } ; hop { filter_eq { all_rows ; season ; 1975 - 76 } ; goals for } } = true", "interpret": "select the rows whose season record fuzzily matches to 1978 - 79 . take the goals for record of this row . select the rows whose season record fuzzily matches to 1975 - 76 . take the goals for record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "season_7": 7, "1978 - 79_8": 8, "goals for_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "season_11": 11, "1975 - 76_12": 12, "goals for_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "season_7": "season", "1978 - 79_8": "1978 - 79", "goals for_9": "goals for", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "season_11": "season", "1975 - 76_12": "1975 - 76", "goals for_13": "goals for"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "season_7": [0], "1978 - 79_8": [0], "goals for_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "season_11": [1], "1975 - 76_12": [1], "goals for_13": [3]}, "table_header": ["season", "games", "won", "lost", "tied", "points", "goals for", "goals against", "standing"], "table_cont": [["1973 - 74", "74", "28", "41", "5", "61", "274", "352", "6th , nahl"], ["1974 - 75", "74", "39", "32", "3", "81", "293", "286", "3rd , nahl"], ["1975 - 76", "74", "27", "45", "2", "56", "258", "337", "5th , west"], ["1976 - 77", "74", "41", "31", "2", "84", "363", "324", "3rd , nahl"], ["1977 - 78", "81", "27", "46", "8", "62", "287", "377", "4th , north"], ["1978 - 79", "79", "32", "42", "5", "69", "300", "320", "3rd , south"]], "query": "greater { hop { filter_eq { all_rows ; season ; 1978 - 79 } ; goals for } ; hop { filter_eq { all_rows ; season ; 1975 - 76 } ; goals for } } = true", "question": "in the 1978 - 79 season , the the binghamton dusters scored more goals than in their 1975 - 76 season ."}, {"topic": "india at the 2010 asian games", "wiki": "https://en.wikipedia.org/wiki/India_at_the_2010_Asian_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26335424-86.html.csv", "action": "majority", "sent": "most of the team india athletes did not reach the quarterfinals .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "fuzzily_match", "value": "did not advance", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "quarterfinals", "did not advance"], "result": true, "ind": 0, "tointer": "for the quarterfinals records of all rows , most of them fuzzily match to did not advance .", "tostr": "most_eq { all_rows ; quarterfinals ; did not advance } = true"}, "logic_str": "most_eq { all_rows ; quarterfinals ; did not advance } = true", "interpret": "for the quarterfinals records of all rows , most of them fuzzily match to did not advance .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "quarterfinals_3": 3, "did not advance_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "quarterfinals_3": "quarterfinals", "did not advance_4": "did not advance"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "quarterfinals_3": [0], "did not advance_4": [0]}, "table_header": ["athlete", "event", "round of 32", "round of 16", "quarterfinals", "semifinals"], "table_cont": [["sunil kumar", "finweight ( - 54 kg )", "lakpa tashi sherpa ( bhu ) w pts 12 - 5", "abdulrahim abdulhameed ( brn ) l pts 2 - 8", "did not advance", "did not advance"], ["surendra bhandari", "bantamweight ( - 63 kg )", "darkhan kassymkulov ( kaz ) l pts 7 - 8", "did not advance", "did not advance", "did not advance"], ["chandan lakra", "featherweight ( - 68 kg )", "afifuddin omar sidek ( mas ) w pts 6 - 2", "naranchimegiin erdenebaatar ( mgl ) l pts 7 - 19", "did not advance", "did not advance"], ["jasvant", "lightweight ( - 74 kg )", "sawatvilay phimmasone ( lao ) w pts 9 - 7", "yulius fernando ( ina ) l pts 5 - 6", "did not advance", "did not advance"], ["anand pandia rajan", "welterweight ( - 80 kg )", "bye", "eisa al - shammeri ( kuw ) w dsq", "nabil talal ( jor ) l pts 3 - 3", "did not advance"]], "query": "most_eq { all_rows ; quarterfinals ; did not advance } = true", "question": "most of the team india athletes did not reach the quarterfinals ."}, {"topic": "ana timoti\u0107", "wiki": "https://en.wikipedia.org/wiki/Ana_Timoti%C4%87", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11326124-3.html.csv", "action": "comparative", "sent": "of the matches ana timoti\u0107 participated in , the one where eva dyrberg was the opponent took place 2 days before the one where anna smashnova was the opponent .", "annotation": {"row_1": "5", "row_2": "6", "col": "4", "col_other": "7", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "2 days", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "eva dyrberg"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to eva dyrberg .", "tostr": "filter_eq { all_rows ; opponent ; eva dyrberg }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; opponent ; eva dyrberg } ; date }", "tointer": "select the rows whose opponent record fuzzily matches to eva dyrberg . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "anna smashnova"], "result": null, "ind": 1, "tointer": "select the rows whose opponent record fuzzily matches to anna smashnova .", "tostr": "filter_eq { all_rows ; opponent ; anna smashnova }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; opponent ; anna smashnova } ; date }", "tointer": "select the rows whose opponent record fuzzily matches to anna smashnova . take the date record of this row ."}], "result": "-2 days", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; opponent ; eva dyrberg } ; date } ; hop { filter_eq { all_rows ; opponent ; anna smashnova } ; date } }"}, "-2 days"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; opponent ; eva dyrberg } ; date } ; hop { filter_eq { all_rows ; opponent ; anna smashnova } ; date } } ; -2 days } = true", "tointer": "select the rows whose opponent record fuzzily matches to eva dyrberg . take the date record of this row . select the rows whose opponent record fuzzily matches to anna smashnova . take the date record of this row . the second record is 2 days larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; opponent ; eva dyrberg } ; date } ; hop { filter_eq { all_rows ; opponent ; anna smashnova } ; date } } ; -2 days } = true", "interpret": "select the rows whose opponent record fuzzily matches to eva dyrberg . take the date record of this row . select the rows whose opponent record fuzzily matches to anna smashnova . take the date record of this row . the second record is 2 days larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"str_eq_5": 5, "result_6": 6, "diff_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "opponent_8": 8, "eva dyrberg_9": 9, "date_10": 10, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "opponent_12": 12, "anna smashnova_13": 13, "date_14": 14, "-2 days_15": 15}, "g_ids_features": {"str_eq_5": "str_eq", "result_6": "true", "diff_4": "diff", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "opponent_8": "opponent", "eva dyrberg_9": "eva dyrberg", "date_10": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "opponent_12": "opponent", "anna smashnova_13": "anna smashnova", "date_14": "date", "-2 days_15": "-2 days"}, "g_adj": {"str_eq_5": [6], "result_6": [], "diff_4": [5], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "opponent_8": [0], "eva dyrberg_9": [0], "date_10": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "opponent_12": [1], "anna smashnova_13": [1], "date_14": [3], "-2 days_15": [5]}, "table_header": ["edition", "zone", "round", "date", "against", "surface", "opponent", "outcome", "result"], "table_cont": [["2005", "europe / africa group i c", "1r", "21 april 2005", "slovenia", "clay", "tina pisnik", "loss", "6 - 0 , 6 - 1"], ["2005", "europe / africa group i c", "2r", "22 april 2005", "great britain", "clay", "elena baltacha", "win", "5 - 7 , 6 - 3 , 6 - 0"], ["2005", "europe / africa group play - off", "semifinal", "23 april 2005", "israel", "clay", "shahar pe'er", "loss", "6 - 4 , 4 - 6 , 6 - 3"], ["2006", "europe / africa group i b", "1r", "18 april 2006", "slovenia", "clay", "polona reber\u0161ak", "loss", "6 - 3 , 6 - 2"], ["2006", "europe / africa group i b", "3r", "20 april 2006", "denmark", "clay", "eva dyrberg", "win", "2 - 6 , 6 - 4 , 6 - 4"], ["2006", "europe / africa group i", "semifinal", "22 april 2006", "israel", "clay", "anna smashnova", "win", "5 - 7 , 4 - 5 ret"], ["2007", "europe / africa group i c", "1r", "20 april 2007", "slovenia", "clay", "ma\u0161a zec pe\u0161kiri\u010d", "loss", "6 - 3 , 4 - 6 , 6 - 0"], ["2007", "europe / africa group i c", "semifinal", "21 april 2007", "romania", "clay", "m\u0103d\u0103lina gojnea", "loss", "1 - 6 , 6 - 4 , 6 - 3"]], "query": "eq { diff { hop { filter_eq { all_rows ; opponent ; eva dyrberg } ; date } ; hop { filter_eq { all_rows ; opponent ; anna smashnova } ; date } } ; -2 days } = true", "question": "of the matches ana timoti\u0107 participated in , the one where eva dyrberg was the opponent took place 2 days before the one where anna smashnova was the opponent ."}, {"topic": "1978 vfl season", "wiki": "https://en.wikipedia.org/wiki/1978_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10887680-13.html.csv", "action": "majority", "sent": "the majority of home teams in the 1978 vfl season had a score above 10 .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "greater_than", "value": "10", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "home team score", "10"], "result": true, "ind": 0, "tointer": "for the home team score records of all rows , most of them are greater than 10 .", "tostr": "most_greater { all_rows ; home team score ; 10 } = true"}, "logic_str": "most_greater { all_rows ; home team score ; 10 } = true", "interpret": "for the home team score records of all rows , most of them are greater than 10 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "home team score_3": 3, "10_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "home team score_3": "home team score", "10_4": "10"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "home team score_3": [0], "10_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["hawthorn", "21.14 ( 140 )", "south melbourne", "18.11 ( 119 )", "princes park", "13583", "1 july 1978"], ["footscray", "33.15 ( 213 )", "st kilda", "16.10 ( 106 )", "western oval", "16300", "1 july 1978"], ["richmond", "21.16 ( 142 )", "north melbourne", "17.15 ( 117 )", "mcg", "27156", "1 july 1978"], ["essendon", "12.26 ( 98 )", "collingwood", "14.21 ( 105 )", "windy hill", "29913", "1 july 1978"], ["geelong", "8.9 ( 57 )", "carlton", "9.13 ( 67 )", "kardinia park", "25185", "1 july 1978"], ["fitzroy", "19.27 ( 141 )", "melbourne", "8.13 ( 61 )", "vfl park", "13933", "1 july 1978"]], "query": "most_greater { all_rows ; home team score ; 10 } = true", "question": "the majority of home teams in the 1978 vfl season had a score above 10 ."}, {"topic": "2006 - 07 coventry city f.c. season", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_Coventry_City_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12808457-1.html.csv", "action": "count", "sent": "in the 2006 - 07 coventry city f.c. season , among the players that scored 5 and more goals in the championship , 2 of them scored 1 goal each in the fa cup .", "annotation": {"scope": "subset", "criterion": "equal", "value": "1", "result": "2", "col": "4", "subset": {"col": "2", "criterion": "greater_than_eq", "value": "5"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": [{"func": "filter_greater_eq", "args": ["all_rows", "championship", "5"], "result": null, "ind": 0, "tostr": "filter_greater_eq { all_rows ; championship ; 5 }", "tointer": "select the rows whose championship record is greater than or equal to 5 ."}, "fa cup", "1"], "result": null, "ind": 1, "tointer": "select the rows whose championship record is greater than or equal to 5 . among these rows , select the rows whose fa cup record is equal to 1 .", "tostr": "filter_eq { filter_greater_eq { all_rows ; championship ; 5 } ; fa cup ; 1 }"}], "result": "2", "ind": 2, "tostr": "count { filter_eq { filter_greater_eq { all_rows ; championship ; 5 } ; fa cup ; 1 } }", "tointer": "select the rows whose championship record is greater than or equal to 5 . among these rows , select the rows whose fa cup record is equal to 1 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_greater_eq { all_rows ; championship ; 5 } ; fa cup ; 1 } } ; 2 } = true", "tointer": "select the rows whose championship record is greater than or equal to 5 . among these rows , select the rows whose fa cup record is equal to 1 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { filter_greater_eq { all_rows ; championship ; 5 } ; fa cup ; 1 } } ; 2 } = true", "interpret": "select the rows whose championship record is greater than or equal to 5 . among these rows , select the rows whose fa cup record is equal to 1 . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_eq_1": 1, "filter_greater_eq_0": 0, "all_rows_5": 5, "championship_6": 6, "5_7": 7, "fa cup_8": 8, "1_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_eq_1": "filter_eq", "filter_greater_eq_0": "filter_greater_eq", "all_rows_5": "all_rows", "championship_6": "championship", "5_7": "5", "fa cup_8": "fa cup", "1_9": "1", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_eq_1": [2], "filter_greater_eq_0": [1], "all_rows_5": [0], "championship_6": [0], "5_7": [0], "fa cup_8": [1], "1_9": [1], "2_10": [3]}, "table_header": ["name", "championship", "league cup", "fa cup", "total"], "table_cont": [["dele adebola", "8", "1", "0", "0 9"], ["leon mckenzie", "7", "0", "1", "0 8"], ["stern john", "5", "0", "1", "0 6"], ["michael mifsud", "4", "0", "0", "0 4"], ["michael doyle", "3", "0", "0", "0 3"], ["kevin kyle", "3", "0", "0", "0 3"], ["jay tabb", "3", "0", "0", "0 3"], ["elliott ward", "3", "0", "0", "0 3"], ["colin cameron", "2", "0", "1", "0 3"], ["chris birchall", "2", "0", "0", "0 2"], ["wayne andrews", "1", "0", "0", "0 1"], ["stephen hughes", "1", "0", "0", "0 1"], ["gary mcsheffrey", "1", "0", "0", "0 1"], ["kevin thornton", "1", "0", "0", "0 1"], ["adam virgo", "1", "0", "0", "0 1"]], "query": "eq { count { filter_eq { filter_greater_eq { all_rows ; championship ; 5 } ; fa cup ; 1 } } ; 2 } = true", "question": "in the 2006 - 07 coventry city f.c. season , among the players that scored 5 and more goals in the championship , 2 of them scored 1 goal each in the fa cup ."}, {"topic": "nordic skiing", "wiki": "https://en.wikipedia.org/wiki/Nordic_skiing", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-174491-5.html.csv", "action": "ordinal", "sent": "for nordic skiing , the second to last winter olympics was when thomas wassberg was the winner .", "annotation": {"row": "4", "col": "3", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "winter olympics", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; winter olympics ; 2 }"}, "winner"], "result": "thomas wassberg", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; winter olympics ; 2 } ; winner }"}, "thomas wassberg"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; winter olympics ; 2 } ; winner } ; thomas wassberg } = true", "tointer": "select the row whose winter olympics record of all rows is 2nd maximum . the winner record of this row is thomas wassberg ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; winter olympics ; 2 } ; winner } ; thomas wassberg } = true", "interpret": "select the row whose winter olympics record of all rows is 2nd maximum . the winner record of this row is thomas wassberg .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "winter olympics_5": 5, "2_6": 6, "winner_7": 7, "thomas wassberg_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "winter olympics_5": "winter olympics", "2_6": "2", "winner_7": "winner", "thomas wassberg_8": "thomas wassberg"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "winter olympics_5": [0], "2_6": [0], "winner_7": [1], "thomas wassberg_8": [2]}, "table_header": ["winner", "country", "winter olympics", "fis nordic world ski championships", "holmenkollen"], "table_cont": [["hallgeir brenden", "norway", "1956", "1956", "1956"], ["eero m\u00e4ntyranta", "finland", "1964", "1964", "1962 , 1964 , 1968"], ["harald gr\u00f8nningen", "norway", "1968", "1968", "1960 , 1961"], ["thomas wassberg", "sweden", "1980", "1980", "1979 , 1985"], ["gunde svan", "sweden", "1984", "1989", "1985"]], "query": "eq { hop { nth_argmax { all_rows ; winter olympics ; 2 } ; winner } ; thomas wassberg } = true", "question": "for nordic skiing , the second to last winter olympics was when thomas wassberg was the winner ."}, {"topic": "1967 vfl season", "wiki": "https://en.wikipedia.org/wiki/1967_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10808681-4.html.csv", "action": "comparative", "sent": "south melbourne had a higher home team score than north melbourne in the 1967 vfl season .", "annotation": {"row_1": "5", "row_2": "1", "col": "2", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "home team", "south melbourne"], "result": null, "ind": 0, "tointer": "select the rows whose home team record fuzzily matches to south melbourne .", "tostr": "filter_eq { all_rows ; home team ; south melbourne }"}, "home team score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; home team ; south melbourne } ; home team score }", "tointer": "select the rows whose home team record fuzzily matches to south melbourne . take the home team score record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "home team", "north melbourne"], "result": null, "ind": 1, "tointer": "select the rows whose home team record fuzzily matches to north melbourne .", "tostr": "filter_eq { all_rows ; home team ; north melbourne }"}, "home team score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; home team ; north melbourne } ; home team score }", "tointer": "select the rows whose home team record fuzzily matches to north melbourne . take the home team score record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; home team ; south melbourne } ; home team score } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; home team score } } = true", "tointer": "select the rows whose home team record fuzzily matches to south melbourne . take the home team score record of this row . select the rows whose home team record fuzzily matches to north melbourne . take the home team score record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; home team ; south melbourne } ; home team score } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; home team score } } = true", "interpret": "select the rows whose home team record fuzzily matches to south melbourne . take the home team score record of this row . select the rows whose home team record fuzzily matches to north melbourne . take the home team score record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "home team_7": 7, "south melbourne_8": 8, "home team score_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "home team_11": 11, "north melbourne_12": 12, "home team score_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "home team_7": "home team", "south melbourne_8": "south melbourne", "home team score_9": "home team score", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "home team_11": "home team", "north melbourne_12": "north melbourne", "home team score_13": "home team score"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "home team_7": [0], "south melbourne_8": [0], "home team score_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "home team_11": [1], "north melbourne_12": [1], "home team score_13": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["north melbourne", "10.8 ( 68 )", "richmond", "11.22 ( 88 )", "arden street oval", "12750", "6 may 1967"], ["hawthorn", "10.6 ( 66 )", "st kilda", "15.11 ( 101 )", "glenferrie oval", "20352", "6 may 1967"], ["fitzroy", "9.10 ( 64 )", "geelong", "22.13 ( 145 )", "princes park", "9747", "6 may 1967"], ["collingwood", "13.17 ( 95 )", "footscray", "5.7 ( 37 )", "victoria park", "21855", "6 may 1967"], ["south melbourne", "18.19 ( 127 )", "essendon", "13.10 ( 88 )", "lake oval", "18756", "6 may 1967"], ["melbourne", "5.15 ( 45 )", "carlton", "16.8 ( 104 )", "mcg", "48513", "6 may 1967"]], "query": "greater { hop { filter_eq { all_rows ; home team ; south melbourne } ; home team score } ; hop { filter_eq { all_rows ; home team ; north melbourne } ; home team score } } = true", "question": "south melbourne had a higher home team score than north melbourne in the 1967 vfl season ."}, {"topic": "government of hamburg", "wiki": "https://en.wikipedia.org/wiki/Government_of_Hamburg", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17159413-1.html.csv", "action": "superlative", "sent": "the social democratic party holds the most seats in hamburgische b\u00fcrgerschaft in the government of hamburg .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "4", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "seats in hamburgische b\u00fcrgerschaft"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; seats in hamburgische b\u00fcrgerschaft }"}, "ideology"], "result": "social democracy", "ind": 1, "tostr": "hop { argmax { all_rows ; seats in hamburgische b\u00fcrgerschaft } ; ideology }"}, "social democracy"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; seats in hamburgische b\u00fcrgerschaft } ; ideology } ; social democracy } = true", "tointer": "select the row whose seats in hamburgische b\u00fcrgerschaft record of all rows is maximum . the ideology record of this row is social democracy ."}, "logic_str": "eq { hop { argmax { all_rows ; seats in hamburgische b\u00fcrgerschaft } ; ideology } ; social democracy } = true", "interpret": "select the row whose seats in hamburgische b\u00fcrgerschaft record of all rows is maximum . the ideology record of this row is social democracy .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "seats in hamburgische b\u00fcrgerschaft_5": 5, "ideology_6": 6, "social democracy_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "seats in hamburgische b\u00fcrgerschaft_5": "seats in hamburgische b\u00fcrgerschaft", "ideology_6": "ideology", "social democracy_7": "social democracy"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "seats in hamburgische b\u00fcrgerschaft_5": [0], "ideology_6": [1], "social democracy_7": [2]}, "table_header": ["name ( english )", "name ( german )", "abbr", "ideology", "position", "votes ( 2011 )", "seats in hamburgische b\u00fcrgerschaft"], "table_cont": [["social democratic party", "sozialdemokratische partei deutschlands", "spd", "social democracy", "centre - left", "48.4 %", "62"], ["christian democratic union", "christlich demokratische union", "cdu", "christian democracy", "centre - right", "21.9 %", "28"], ["alliance '90 / the greens", "b\u00fcndnis 90 / die gr\u00fcnen ( gal )", "b\u00fcndnis 90 / die gr\u00fcnen ( gal )", "green politics", "centre - left", "11.2 %", "14"], ["free democratic party", "freie demokratische partei", "fdp", "liberalism", "centre", "6.7 %", "9"], ["the left", "die linke", "die linke", "socialism eurocommunism", "left - wing", "6.4 %", "8"]], "query": "eq { hop { argmax { all_rows ; seats in hamburgische b\u00fcrgerschaft } ; ideology } ; social democracy } = true", "question": "the social democratic party holds the most seats in hamburgische b\u00fcrgerschaft in the government of hamburg ."}, {"topic": "jake rosholt", "wiki": "https://en.wikipedia.org/wiki/Jake_Rosholt", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1634072-2.html.csv", "action": "unique", "sent": "jake rosholt 's fight against john ott was the only fight that ended with a no contest method .", "annotation": {"scope": "all", "row": "4", "col": "4", "col_other": "3", "criterion": "equal", "value": "no contest", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "method", "no contest"], "result": null, "ind": 0, "tointer": "select the rows whose method record fuzzily matches to no contest .", "tostr": "filter_eq { all_rows ; method ; no contest }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; method ; no contest } }", "tointer": "select the rows whose method record fuzzily matches to no contest . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "method", "no contest"], "result": null, "ind": 0, "tointer": "select the rows whose method record fuzzily matches to no contest .", "tostr": "filter_eq { all_rows ; method ; no contest }"}, "opponent"], "result": "john ott", "ind": 2, "tostr": "hop { filter_eq { all_rows ; method ; no contest } ; opponent }"}, "john ott"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; method ; no contest } ; opponent } ; john ott }", "tointer": "the opponent record of this unqiue row is john ott ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; method ; no contest } } ; eq { hop { filter_eq { all_rows ; method ; no contest } ; opponent } ; john ott } } = true", "tointer": "select the rows whose method record fuzzily matches to no contest . there is only one such row in the table . the opponent record of this unqiue row is john ott ."}, "logic_str": "and { only { filter_eq { all_rows ; method ; no contest } } ; eq { hop { filter_eq { all_rows ; method ; no contest } ; opponent } ; john ott } } = true", "interpret": "select the rows whose method record fuzzily matches to no contest . there is only one such row in the table . the opponent record of this unqiue row is john ott .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "method_7": 7, "no contest_8": 8, "str_eq_3": 3, "str_hop_2": 2, "opponent_9": 9, "john ott_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "method_7": "method", "no contest_8": "no contest", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "opponent_9": "opponent", "john ott_10": "john ott"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "method_7": [0], "no contest_8": [0], "str_eq_3": [4], "str_hop_2": [3], "opponent_9": [2], "john ott_10": [3]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "time", "location"], "table_cont": [["loss", "12 - 5 ( 1 )", "anthony johnson", "tko ( head kick )", "xtreme fight night 9", "2", "4:22", "tulsa , oklahoma , united states"], ["loss", "12 - 4 ( 1 )", "matt thompson", "submission ( kneebar )", "xko 15", "1", "4:16", "arlington , texas , united states"], ["win", "12 - 3 ( 1 )", "matt horwich", "decision ( unanimous )", "shark fights 17 : horwich vs rosholt 2", "3", "5:00", "frisco , texas , united states"], ["nc", "11 - 3 ( 1 )", "john ott", "no contest ( illegal knee )", "titan fighting championships 18", "3", "4:23", "kansas city , kansas , united states"], ["win", "11 - 3", "john malbrough", "submission ( arm - triangle choke )", "cowboy mma : caged cowboys", "1", "1:42", "ponca city , oklahoma , united states"], ["win", "10 - 3", "brandon mcdowell", "tko ( punches )", "back alley promotions", "1", "1:36", "arlington , texas , united states"], ["win", "9 - 3", "john bryant", "technical submission ( rear - naked choke )", "bellator 37", "1", "1:02", "concho , oklahoma , united states"], ["win", "8 - 3", "josh smidt", "submission ( guillotine choke )", "c3 fights : slamfest", "1", "1:41", "newkirk , oklahoma , united states"], ["loss", "7 - 3", "matt horwich", "tko ( punches )", "xtreme fight night : rosholt vs horwich", "3", "2:56", "tulsa , oklahoma , united states"], ["win", "7 - 2", "rudy lindsey", "submission ( rear - naked choke )", "xfl : march badness", "1", "2:37", "tulsa , oklahoma , united states"], ["loss", "6 - 2", "kendall grove", "submission ( triangle choke )", "ufc 106", "1", "3:59", "las vegas , nevada , united states"], ["win", "6 - 1", "chris leben", "technical submission ( arm - triangle choke )", "ufc 102", "3", "1:30", "portland , oregon , united states"], ["loss", "5 - 1", "dan miller", "submission ( guillotine choke )", "ufc fight night : lauzon vs stephens", "1", "1:03", "tampa , florida , united states"], ["win", "5 - 0", "nissen osterneck", "tko ( punches )", "wec 36", "2", "3:48", "hollywood , florida , united states"], ["win", "4 - 0", "chad jay", "tko ( punches )", "xtreme fighting league", "3", "2:37", "tulsa , oklahoma , united states"], ["win", "3 - 0", "jeremiah caves", "tko ( punches )", "hrp : fight night", "1", "1:42", "tulsa , oklahoma , united states"], ["win", "2 - 0", "christopher clark", "tko ( punches )", "masters of the cage 16", "3", "2:37", "oklahoma city , oklahoma , united states"], ["win", "1 - 0", "dusty miller", "submission ( guillotine choke )", "masters of the cage 15", "1", "3:40", "oklahoma city , oklahoma , united states"]], "query": "and { only { filter_eq { all_rows ; method ; no contest } } ; eq { hop { filter_eq { all_rows ; method ; no contest } ; opponent } ; john ott } } = true", "question": "jake rosholt 's fight against john ott was the only fight that ended with a no contest method ."}, {"topic": "list of australian submissions for the academy award for best foreign language film", "wiki": "https://en.wikipedia.org/wiki/List_of_Australian_submissions_for_the_Academy_Award_for_Best_Foreign_Language_Film", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16254861-1.html.csv", "action": "majority", "sent": "in the list of australian submissions for the academy award for best foreign language film , most of the films were not nominated .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "not nominated", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "not nominated"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to not nominated .", "tostr": "most_eq { all_rows ; result ; not nominated } = true"}, "logic_str": "most_eq { all_rows ; result ; not nominated } = true", "interpret": "for the result records of all rows , most of them fuzzily match to not nominated .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "not nominated_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "not nominated_4": "not nominated"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "not nominated_4": [0]}, "table_header": ["year ( ceremony )", "film title used in nomination", "language ( s )", "director", "result"], "table_cont": [["1996 ( 69th )", "floating life", "cantonese , english , german", "clara law", "not nominated"], ["2001 ( 74th )", "la spagnola", "spanish , english , italian", "steve jacobs", "not nominated"], ["2006 ( 79th )", "ten canoes", "yolngu matha , gunwinggu , english", "rolf de heer", "not nominated"], ["2007 ( 80th )", "the home song stories", "cantonese , english , mandarin", "tony ayres", "not nominated"], ["2009 ( 82nd )", "samson and delilah", "warlpiri , english", "warwick thornton", "made january shortlist"], ["2012 ( 85th )", "lore", "german", "cate shortland", "not nominated"]], "query": "most_eq { all_rows ; result ; not nominated } = true", "question": "in the list of australian submissions for the academy award for best foreign language film , most of the films were not nominated ."}, {"topic": "mark donohue", "wiki": "https://en.wikipedia.org/wiki/Mark_Donohue", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1235776-2.html.csv", "action": "count", "sent": "for 4 different years , mark donohue used an offy engine .", "annotation": {"scope": "all", "criterion": "equal", "value": "offy", "result": "4", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "engine", "offy"], "result": null, "ind": 0, "tointer": "select the rows whose engine record fuzzily matches to offy .", "tostr": "filter_eq { all_rows ; engine ; offy }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; engine ; offy } }", "tointer": "select the rows whose engine record fuzzily matches to offy . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; engine ; offy } } ; 4 } = true", "tointer": "select the rows whose engine record fuzzily matches to offy . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; engine ; offy } } ; 4 } = true", "interpret": "select the rows whose engine record fuzzily matches to offy . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "engine_5": 5, "offy_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "engine_5": "engine", "offy_6": "offy", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "engine_5": [0], "offy_6": [0], "4_7": [2]}, "table_header": ["year", "chassis", "engine", "start", "finish", "entrant"], "table_cont": [["1969", "lola", "offy", "4th", "7th", "penske"], ["1970", "lola", "ford", "5th", "2nd", "penske"], ["1971", "mclaren", "offy", "2nd", "25th", "penske"], ["1972", "mclaren", "offy", "3rd", "1st", "penske"], ["1973", "eagle", "offy", "3rd", "15th", "penske"]], "query": "eq { count { filter_eq { all_rows ; engine ; offy } } ; 4 } = true", "question": "for 4 different years , mark donohue used an offy engine ."}, {"topic": "2008 in paraguayan football", "wiki": "https://en.wikipedia.org/wiki/2008_in_Paraguayan_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17334827-4.html.csv", "action": "majority", "sent": "most of the paraguayan teams played 126 games in the 2008 football season .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "126", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "played", "126"], "result": true, "ind": 0, "tointer": "for the played records of all rows , most of them are equal to 126 .", "tostr": "most_eq { all_rows ; played ; 126 } = true"}, "logic_str": "most_eq { all_rows ; played ; 126 } = true", "interpret": "for the played records of all rows , most of them are equal to 126 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "played_3": 3, "126_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "played_3": "played", "126_4": "126"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "played_3": [0], "126_4": [0]}, "table_header": ["team", "average", "points", "played", "2006", "2007", "2008"], "table_cont": [["libertad", "2.179", "279", "126", "83 / 40", "95 / 44", "101 / 44"], ["cerro porte\u00f1o", "2.023", "259", "126", "92 / 40", "92 / 44", "75 / 44"], ["nacional", "1.484", "190", "126", "53 / 40", "60 / 44", "77 / 44"], ["olimpia", "1.406", "180", "126", "50 / 40", "76 / 44", "54 / 44"], ["sol de am\u00e9rica", "1.363", "120", "86", "n / a", "57 / 44", "63 / 44"], ["sportivo luque\u00f1o", "1.335", "171", "126", "56 / 40", "66 / 44", "49 / 44"], ["tacuary", "1.335", "171", "126", "66 / 40", "51 / 44", "54 / 44"], ["guaran\u00ed", "1.265", "162", "126", "42 / 40", "41 / 44", "79 / 44"], ["2 de mayo", "1.126", "142", "126", "58 / 40", "34 / 44", "50 / 42"], ["12 de octubre", "1.132", "145", "126", "42 / 40", "49 / 44", "53 / 44"], ["3 de febrero", "1.062", "136", "126", "36 / 40", "49 / 44", "51 / 44"], ["silvio pettirossi", "0.500", "22", "42", "n / a", "n / a", "22 / 44"]], "query": "most_eq { all_rows ; played ; 126 } = true", "question": "most of the paraguayan teams played 126 games in the 2008 football season ."}, {"topic": "administrative division of the second polish republic", "wiki": "https://en.wikipedia.org/wiki/Administrative_division_of_the_Second_Polish_Republic", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11654169-1.html.csv", "action": "ordinal", "sent": "in the administrative division of the second polish republic , warszawskie has the highest area in 1000 km square ( 1930 ) among those whose capital is warsaw .", "annotation": {"scope": "subset", "row": "3", "col": "4", "order": "1", "col_other": "2,3", "max_or_min": "max_to_min", "value_mentioned": "no", "subset": {"col": "3", "criterion": "equal", "value": "warsaw"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": [{"func": "filter_str_eq", "args": ["all_rows", "capital", "warsaw"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; capital ; warsaw }", "tointer": "select the rows whose capital record fuzzily matches to warsaw ."}, "area in 1000 km square ( 1930 )", "1"], "result": null, "ind": 1, "tostr": "nth_argmax { filter_eq { all_rows ; capital ; warsaw } ; area in 1000 km square ( 1930 ) ; 1 }"}, "voivodeship separate city"], "result": "warszawskie", "ind": 2, "tostr": "hop { nth_argmax { filter_eq { all_rows ; capital ; warsaw } ; area in 1000 km square ( 1930 ) ; 1 } ; voivodeship separate city }"}, "warszawskie"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmax { filter_eq { all_rows ; capital ; warsaw } ; area in 1000 km square ( 1930 ) ; 1 } ; voivodeship separate city } ; warszawskie } = true", "tointer": "select the rows whose capital record fuzzily matches to warsaw . select the row whose area in 1000 km square ( 1930 ) record of these rows is 1st maximum . the voivodeship separate city record of this row is warszawskie ."}, "logic_str": "eq { hop { nth_argmax { filter_eq { all_rows ; capital ; warsaw } ; area in 1000 km square ( 1930 ) ; 1 } ; voivodeship separate city } ; warszawskie } = true", "interpret": "select the rows whose capital record fuzzily matches to warsaw . select the row whose area in 1000 km square ( 1930 ) record of these rows is 1st maximum . the voivodeship separate city record of this row is warszawskie .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "nth_argmax_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "capital_6": 6, "warsaw_7": 7, "area in 1000 km square (1930)_8": 8, "1_9": 9, "voivodeship separate city_10": 10, "warszawskie_11": 11}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "nth_argmax_1": "nth_argmax", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "capital_6": "capital", "warsaw_7": "warsaw", "area in 1000 km square (1930)_8": "area in 1000 km square ( 1930 )", "1_9": "1", "voivodeship separate city_10": "voivodeship separate city", "warszawskie_11": "warszawskie"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "nth_argmax_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "capital_6": [0], "warsaw_7": [0], "area in 1000 km square (1930)_8": [1], "1_9": [1], "voivodeship separate city_10": [2], "warszawskie_11": [3]}, "table_header": ["car plates ( since 1937 )", "voivodeship separate city", "capital", "area in 1000 km square ( 1930 )", "population in 1000 ( 1931 )"], "table_cont": [["car plates ( since 1937 )", "voivodeship separate city", "capital", "area in 1000 km square ( 1930 )", "population in 1000 ( 1931 )"], ["00 - 19", "city of warsaw", "warsaw", "0.14", "1179.5"], ["85 - 89", "warszawskie", "warsaw", "31.7", "2460.9"], ["20 - 24", "bia\u0142ostockie", "bia\u0142ystok", "26.0", "1263.3"], ["25 - 29", "kieleckie", "kielce", "22.2", "2671.0"], ["30 - 34", "krakowskie", "krak\u00f3w", "17.6", "2300.1"], ["35 - 39", "lubelskie", "lublin", "26.6", "2116.2"], ["40 - 44", "lwowskie", "lw\u00f3w", "28.4", "3126.3"], ["45 - 49", "\u0142\u00f3dzkie", "\u0142\u00f3d\u017a", "20.4", "2650.1"], ["50 - 54", "nowogr\u00f3dzkie", "nowogr\u00f3dek", "23.0", "1057.2"], ["55 - 59", "poleskie", "brze\u015b\u0107 nad bugiem", "36.7", "1132.2"], ["60 - 64", "pomorskie", "toru\u0144", "25.7", "1884.4"], ["65 - 69", "pozna\u0144skie", "pozna\u0144", "28.1", "2339.6"], ["70 - 74", "stanis\u0142awowskie", "stanis\u0142aw\u00f3w", "16.9", "1480.3"], ["75 - 79", "\u015bl\u0105skie ( autonomous )", "katowice", "5.1", "1533.5"], ["80 - 84", "tarnopolskie", "tarnopol", "16.5", "1600.4"], ["90 - 94", "wile\u0144skie", "wilno", "29.0", "1276.0"], ["95 - 99", "wo\u0142y\u0144skie", "\u0142uck", "35.7", "2085.6"]], "query": "eq { hop { nth_argmax { filter_eq { all_rows ; capital ; warsaw } ; area in 1000 km square ( 1930 ) ; 1 } ; voivodeship separate city } ; warszawskie } = true", "question": "in the administrative division of the second polish republic , warszawskie has the highest area in 1000 km square ( 1930 ) among those whose capital is warsaw ."}, {"topic": "2010 - 11 los angeles lakers season", "wiki": "https://en.wikipedia.org/wiki/2010%E2%80%9311_Los_Angeles_Lakers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27722734-11.html.csv", "action": "aggregation", "sent": "in the 2010-2011 los angeles laker season , in the games where andrew bynum had the high rebounds , his average number of rebounds was 17.25 .", "annotation": {"scope": "subset", "col": "6", "type": "average", "result": "17.25", "subset": {"col": "6", "criterion": "equal", "value": "andrew bynum"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "high rebounds", "andrew bynum"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; high rebounds ; andrew bynum }", "tointer": "select the rows whose high rebounds record fuzzily matches to andrew bynum ."}, "high rebounds"], "result": "17.25", "ind": 1, "tostr": "avg { filter_eq { all_rows ; high rebounds ; andrew bynum } ; high rebounds }"}, "17.25"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; high rebounds ; andrew bynum } ; high rebounds } ; 17.25 } = true", "tointer": "select the rows whose high rebounds record fuzzily matches to andrew bynum . the average of the high rebounds record of these rows is 17.25 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; high rebounds ; andrew bynum } ; high rebounds } ; 17.25 } = true", "interpret": "select the rows whose high rebounds record fuzzily matches to andrew bynum . the average of the high rebounds record of these rows is 17.25 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "high rebounds_5": 5, "andrew bynum_6": 6, "high rebounds_7": 7, "17.25_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "high rebounds_5": "high rebounds", "andrew bynum_6": "andrew bynum", "high rebounds_7": "high rebounds", "17.25_8": "17.25"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "high rebounds_5": [0], "andrew bynum_6": [0], "high rebounds_7": [1], "17.25_8": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["75", "april 1", "utah", "w 96 - 85 ( ot )", "kobe bryant ( 21 )", "pau gasol ( 9 )", "kobe bryant , steve blake ( 4 )", "energysolutions arena 19911", "55 - 20"], ["76", "april 3", "denver", "l 90 - 95 ( ot )", "kobe bryant ( 28 )", "andrew bynum ( 16 )", "lamar odom ( 5 )", "staples center 18997", "55 - 21"], ["77", "april 5", "utah", "l 85 - 86 ( ot )", "kobe bryant ( 20 )", "andrew bynum ( 23 )", "kobe bryant , steve blake ( 5 )", "staples center 18997", "55 - 22"], ["78", "april 6", "golden state", "l 87 - 95 ( ot )", "kobe bryant ( 25 )", "andrew bynum ( 17 )", "lamar odom ( 5 )", "oracle arena 20024", "55 - 23"], ["79", "april 8", "portland", "l 86 - 93 ( ot )", "kobe bryant ( 24 )", "lamar odom ( 14 )", "kobe bryant ( 4 )", "rose garden 20697", "55 - 24"], ["80", "april 10", "oklahoma city", "l 106 - 120 ( ot )", "kobe bryant ( 31 )", "andrew bynum ( 13 )", "kobe bryant , derek fisher ( 4 )", "staples center 18997", "55 - 25"], ["81", "april 12", "san antonio", "w 102 - 93 ( ot )", "kobe bryant ( 27 )", "pau gasol ( 17 )", "pau gasol ( 5 )", "staples center 18997", "56 - 25"]], "query": "round_eq { avg { filter_eq { all_rows ; high rebounds ; andrew bynum } ; high rebounds } ; 17.25 } = true", "question": "in the 2010-2011 los angeles laker season , in the games where andrew bynum had the high rebounds , his average number of rebounds was 17.25 ."}, {"topic": "1949 vfl season", "wiki": "https://en.wikipedia.org/wiki/1949_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10809351-13.html.csv", "action": "ordinal", "sent": "victoria park recorded the highest crowd participation during the 1949 vfl season .", "annotation": {"row": "3", "col": "6", "order": "1", "col_other": "5", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "crowd", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; crowd ; 1 }"}, "venue"], "result": "victoria park", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; crowd ; 1 } ; venue }"}, "victoria park"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; victoria park } = true", "tointer": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is victoria park ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; victoria park } = true", "interpret": "select the row whose crowd record of all rows is 1st maximum . the venue record of this row is victoria park .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "crowd_5": 5, "1_6": 6, "venue_7": 7, "victoria park_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "crowd_5": "crowd", "1_6": "1", "venue_7": "venue", "victoria park_8": "victoria park"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "crowd_5": [0], "1_6": [0], "venue_7": [1], "victoria park_8": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "16.15 ( 111 )", "south melbourne", "13.13 ( 91 )", "junction oval", "6000", "16 july 1949"], ["essendon", "8.22 ( 70 )", "north melbourne", "6.13 ( 49 )", "windy hill", "16000", "16 july 1949"], ["collingwood", "7.16 ( 58 )", "melbourne", "10.13 ( 73 )", "victoria park", "22000", "16 july 1949"], ["carlton", "9.13 ( 67 )", "fitzroy", "9.8 ( 62 )", "princes park", "17500", "16 july 1949"], ["richmond", "16.21 ( 117 )", "hawthorn", "9.13 ( 67 )", "punt road oval", "7000", "16 july 1949"], ["geelong", "13.15 ( 93 )", "footscray", "4.10 ( 34 )", "kardinia park", "15000", "16 july 1949"]], "query": "eq { hop { nth_argmax { all_rows ; crowd ; 1 } ; venue } ; victoria park } = true", "question": "victoria park recorded the highest crowd participation during the 1949 vfl season ."}, {"topic": "list of the big c episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_The_Big_C_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28680377-3.html.csv", "action": "ordinal", "sent": "for the big c episodes , when the episode was aired in august , the 2nd highest number of viewers was for the episode titled a little death .", "annotation": {"scope": "subset", "row": "9", "col": "7", "order": "2", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "subset": {"col": "6", "criterion": "fuzzily_match", "value": "august"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": [{"func": "filter_str_eq", "args": ["all_rows", "original air date", "august"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; original air date ; august }", "tointer": "select the rows whose original air date record fuzzily matches to august ."}, "us viewers ( million )", "2"], "result": null, "ind": 1, "tostr": "nth_argmax { filter_eq { all_rows ; original air date ; august } ; us viewers ( million ) ; 2 }"}, "title"], "result": "a little death", "ind": 2, "tostr": "hop { nth_argmax { filter_eq { all_rows ; original air date ; august } ; us viewers ( million ) ; 2 } ; title }"}, "a little death"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmax { filter_eq { all_rows ; original air date ; august } ; us viewers ( million ) ; 2 } ; title } ; a little death } = true", "tointer": "select the rows whose original air date record fuzzily matches to august . select the row whose us viewers ( million ) record of these rows is 2nd maximum . the title record of this row is a little death ."}, "logic_str": "eq { hop { nth_argmax { filter_eq { all_rows ; original air date ; august } ; us viewers ( million ) ; 2 } ; title } ; a little death } = true", "interpret": "select the rows whose original air date record fuzzily matches to august . select the row whose us viewers ( million ) record of these rows is 2nd maximum . the title record of this row is a little death .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "nth_argmax_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "original air date_6": 6, "august_7": 7, "us viewers (million)_8": 8, "2_9": 9, "title_10": 10, "a little death_11": 11}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "nth_argmax_1": "nth_argmax", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "original air date_6": "original air date", "august_7": "august", "us viewers (million)_8": "us viewers ( million )", "2_9": "2", "title_10": "title", "a little death_11": "a little death"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "nth_argmax_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "original air date_6": [0], "august_7": [0], "us viewers (million)_8": [1], "2_9": [1], "title_10": [2], "a little death_11": [3]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "original air date", "us viewers ( million )"], "table_cont": [["14", "1", "losing patients", "michael engler", "darlene hunt", "june 27 , 2011", "0.89"], ["15", "2", "musical chairs", "michael engler", "jenny bicks", "july 4 , 2011", "0.58"], ["16", "3", "sexual healing", "miguel arteta", "mark kunerth", "july 11 , 2011", "0.53"], ["17", "4", "boo !", "miguel arteta", "cara dipaolo", "july 18 , 2011", "0.62"], ["18", "5", "cats and dogs", "jennifer getzinger", "melanie marnich", "july 25 , 2011", "0.51"], ["19", "6", "the little c", "jennifer getzinger", "hilly hicks , jr", "august 1 , 2011", "0.57"], ["20", "7", "goldilocks and the bears", "michael engler", "cusi cram", "august 8 , 2011", "0.49"], ["21", "8", "the last thanksgiving", "michael engler", "darlene hunt", "august 15 , 2011", "0.53"], ["22", "9", "a little death", "ryan fleck & anna boden", "jenny bicks", "august 22 , 2011", "0.62"], ["23", "10", "how do you feel", "anna boden & ryan fleck", "mark kunerth", "august 29 , 2011", "0.70"], ["24", "11", "fight or flight", "craig zisk", "cara dipoalo & melanie marnich", "september 12 , 2011", "0.54"], ["25", "12", "the darkest day", "craig zisk", "jenny bicks", "september 19 , 2011", "0.45"]], "query": "eq { hop { nth_argmax { filter_eq { all_rows ; original air date ; august } ; us viewers ( million ) ; 2 } ; title } ; a little death } = true", "question": "for the big c episodes , when the episode was aired in august , the 2nd highest number of viewers was for the episode titled a little death ."}, {"topic": "list of gary unmarried episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Gary_Unmarried_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24781886-2.html.csv", "action": "comparative", "sent": "episode 2 of gary unmarried had more viewers than the first episode .", "annotation": {"row_1": "2", "row_2": "1", "col": "5", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "", "2"], "result": null, "ind": 0, "tointer": "select the rows whose record fuzzily matches to 2 .", "tostr": "filter_eq { all_rows ; ; 2 }"}, "viewers"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; ; 2 } ; viewers }", "tointer": "select the rows whose record fuzzily matches to 2 . take the viewers record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "", "1"], "result": null, "ind": 1, "tointer": "select the rows whose record fuzzily matches to 1 .", "tostr": "filter_eq { all_rows ; ; 1 }"}, "viewers"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; ; 1 } ; viewers }", "tointer": "select the rows whose record fuzzily matches to 1 . take the viewers record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; ; 2 } ; viewers } ; hop { filter_eq { all_rows ; ; 1 } ; viewers } } = true", "tointer": "select the rows whose record fuzzily matches to 2 . take the viewers record of this row . select the rows whose record fuzzily matches to 1 . take the viewers record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; ; 2 } ; viewers } ; hop { filter_eq { all_rows ; ; 1 } ; viewers } } = true", "interpret": "select the rows whose record fuzzily matches to 2 . take the viewers record of this row . select the rows whose record fuzzily matches to 1 . take the viewers record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "_7": 7, "2_8": 8, "viewers_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "_11": 11, "1_12": 12, "viewers_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "_7": "", "2_8": "2", "viewers_9": "viewers", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "_11": "", "1_12": "1", "viewers_13": "viewers"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "_7": [0], "2_8": [0], "viewers_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "_11": [1], "1_12": [1], "viewers_13": [3]}, "table_header": ["", "title", "director", "writer ( s )", "viewers", "air date", "production code"], "table_cont": [["1", "pilot", "james burrows", "ed yeager", "6.84", "september 24 , 2008", "101"], ["2", "gary gets boundaries", "james burrows", "ed yeager", "6.97", "october 1 , 2008", "102"], ["3", "gary marries off his ex", "james burrows", "janae bakken", "7.43", "october 8 , 2008", "103"], ["4", "gary gets his stuff back", "james burrows", "matt goldman", "7.71", "october 15 , 2008", "104"], ["5", "gary breaks up his ex - wife and girlfriend", "james burrows", "ira ungerleider", "7.85", "october 22 , 2008", "105"], ["6", "gary meets the gang", "james burrows", "susan mcmartin", "6.44", "november 5 , 2008", "106"], ["7", "gary and allison 's restaurant", "james burrows", "bill daly", "6.71", "november 12 , 2008", "107"], ["8", "gary and allison brooks", "james burrows", "ed brown and scott parkin", "8.14", "december 19 , 2008", "108"], ["9", "gary gives thanks", "james burrows", "mark gross", "7.72", "december 26 , 2008", "109"], ["10", "gary goes first", "james burrows", "julie bean", "8.03", "december 10 , 2008", "110"], ["11", "gary toughens up tom", "james burrows", "ric swartzlander", "7.55", "december 17 , 2008", "111"], ["12", "gary dates louise 's teacher", "james burrows", "barry langer", "7.07", "january 14 , 2009", "112"], ["13", "gary moves back in", "james burrows", "bill daly and mark gross", "7.07", "january 21 , 2009", "113"], ["14", "gary and dennis ' sister", "james burrows", "julie bean and susan mcmartin", "6.86", "february 11 , 2009", "114"], ["15", "gary 's ex - brother - in - law", "james burrows", "mark jordan legan and terry mulroy", "8.15", "february 18 , 2009", "115"], ["16", "gary uses his veto", "james burrows", "jana hunter and mitch hunter", "8.82", "march 11 , 2009", "116"], ["17", "gary hooks up allison", "james burrows", "ira ungerleider", "7.57", "march 18 , 2009", "117"], ["18", "gary and the trophy", "james burrows", "rob deshotel", "7.30", "april 8 , 2009", "118"], ["19", "gary and his half brother", "james burrows", "scott parkin and ed brown", "6.66", "may 6 , 2009", "119"]], "query": "greater { hop { filter_eq { all_rows ; ; 2 } ; viewers } ; hop { filter_eq { all_rows ; ; 1 } ; viewers } } = true", "question": "episode 2 of gary unmarried had more viewers than the first episode ."}, {"topic": "2005 houston astros season", "wiki": "https://en.wikipedia.org/wiki/2005_Houston_Astros_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-13710464-1.html.csv", "action": "superlative", "sent": "arlington was the first location used in the 2005 houston astros season .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "7", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "date"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; date }"}, "location"], "result": "arlington", "ind": 1, "tostr": "hop { argmin { all_rows ; date } ; location }"}, "arlington"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; date } ; location } ; arlington } = true", "tointer": "select the row whose date record of all rows is minimum . the location record of this row is arlington ."}, "logic_str": "eq { hop { argmin { all_rows ; date } ; location } ; arlington } = true", "interpret": "select the row whose date record of all rows is minimum . the location record of this row is arlington .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "date_5": 5, "location_6": 6, "arlington_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "date_5": "date", "location_6": "location", "arlington_7": "arlington"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "date_5": [0], "location_6": [1], "arlington_7": [2]}, "table_header": ["date", "winning team", "score", "winning pitcher", "losing pitcher", "attendance", "location"], "table_cont": [["may 20", "texas", "7 - 3", "kenny rogers", "brandon backe", "38109", "arlington"], ["may 21", "texas", "18 - 3", "chris young", "ezequiel astacio", "35781", "arlington"], ["may 22", "texas", "2 - 0", "chan ho park", "roy oswalt", "40583", "arlington"], ["june 24", "houston", "5 - 2", "roy oswalt", "ricardo rodriguez", "36199", "houston"], ["june 25", "texas", "6 - 5", "chris young", "brandon backe", "41868", "houston"]], "query": "eq { hop { argmin { all_rows ; date } ; location } ; arlington } = true", "question": "arlington was the first location used in the 2005 houston astros season ."}, {"topic": "abc saturday movie of the week", "wiki": "https://en.wikipedia.org/wiki/ABC_Saturday_Movie_of_the_Week", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22837363-1.html.csv", "action": "unique", "sent": "season 2 of the abc saturday movie of the week is the only season that had 17 episodes .", "annotation": {"scope": "all", "row": "2", "col": "2", "col_other": "1", "criterion": "equal", "value": "17", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "episodes", "17"], "result": null, "ind": 0, "tointer": "select the rows whose episodes record is equal to 17 .", "tostr": "filter_eq { all_rows ; episodes ; 17 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; episodes ; 17 } }", "tointer": "select the rows whose episodes record is equal to 17 . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "episodes", "17"], "result": null, "ind": 0, "tointer": "select the rows whose episodes record is equal to 17 .", "tostr": "filter_eq { all_rows ; episodes ; 17 }"}, "season"], "result": "2", "ind": 2, "tostr": "hop { filter_eq { all_rows ; episodes ; 17 } ; season }"}, "2"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; episodes ; 17 } ; season } ; 2 }", "tointer": "the season record of this unqiue row is 2 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; episodes ; 17 } } ; eq { hop { filter_eq { all_rows ; episodes ; 17 } ; season } ; 2 } } = true", "tointer": "select the rows whose episodes record is equal to 17 . there is only one such row in the table . the season record of this unqiue row is 2 ."}, "logic_str": "and { only { filter_eq { all_rows ; episodes ; 17 } } ; eq { hop { filter_eq { all_rows ; episodes ; 17 } ; season } ; 2 } } = true", "interpret": "select the rows whose episodes record is equal to 17 . there is only one such row in the table . the season record of this unqiue row is 2 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "episodes_7": 7, "17_8": 8, "eq_3": 3, "num_hop_2": 2, "season_9": 9, "2_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "episodes_7": "episodes", "17_8": "17", "eq_3": "eq", "num_hop_2": "num_hop", "season_9": "season", "2_10": "2"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "episodes_7": [0], "17_8": [0], "eq_3": [4], "num_hop_2": [3], "season_9": [2], "2_10": [3]}, "table_header": ["season", "episodes", "timeslot ( et )", "season premiere", "season finale", "tv season", "rank", "viewers ( in millions )"], "table_cont": [["1", "10", "saturday 8:00 pm", "february 21 , 2004", "august 14 , 2004", "2003 - 2004", "123", "6.21"], ["2", "17", "saturday 8:00 pm", "september 25 , 2004", "august 27 , 2005", "2004 - 2005", "107", "6.41"], ["3", "25", "saturday 8:00 pm", "september 17 , 2005", "august 12 , 2006", "2005 - 2006", "126", "5.74"], ["4", "25", "saturday 8:00 pm", "october 21 , 2006", "august 25 , 2007", "2006 - 2007", "180", "5.12"], ["5", "23", "saturday 8:00 pm", "december 8 , 2007", "august 23 , 2008", "2007 - 2008", "160", "4.69"], ["6", "21", "saturday 8:00 pm", "december 13 , 2008", "august 29 , 2009", "2008 - 2009", "149", "3.80"], ["7", "18", "saturday 8:00 pm", "december 12 , 2009", "august 28 , 2010", "2009 - 2010", "119", "3.55"], ["8", "22", "saturday 8:00 pm", "december 11 , 2010", "august 20 , 2011", "2010 - 2011", "170", "3.53"], ["9", "14", "saturday 8:00 pm", "december 24 , 2011", "august 18 , 2012", "2011 - 2012", "156", "3.46"]], "query": "and { only { filter_eq { all_rows ; episodes ; 17 } } ; eq { hop { filter_eq { all_rows ; episodes ; 17 } ; season } ; 2 } } = true", "question": "season 2 of the abc saturday movie of the week is the only season that had 17 episodes ."}, {"topic": "auburn tigers football", "wiki": "https://en.wikipedia.org/wiki/Auburn_Tigers_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2846320-4.html.csv", "action": "aggregation", "sent": "the average number of ties for the auburn tigers football team is 3.4 .", "annotation": {"scope": "all", "col": "8", "type": "average", "result": "3.4", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "ties"], "result": "3.4", "ind": 0, "tostr": "avg { all_rows ; ties }"}, "3.4"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; ties } ; 3.4 } = true", "tointer": "the average of the ties record of all rows is 3.4 ."}, "logic_str": "round_eq { avg { all_rows ; ties } ; 3.4 } = true", "interpret": "the average of the ties record of all rows is 3.4 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "ties_4": 4, "3.4_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "ties_4": "ties", "3.4_5": "3.4"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "ties_4": [0], "3.4_5": [1]}, "table_header": ["name of rivalry", "rival", "games played", "first meeting", "last meeting", "au won", "au lost", "ties", "streak", "latest win"], "table_cont": [["iron bowl", "alabama", "77", "1893", "2012", "34", "42", "1", "2 losses", "2010 , 28 - 27"], ["deep south 's oldest rivalry", "georgia", "115", "1892", "2012", "54", "54", "8", "2 losses", "2010 , 49 - 31"], ["auburn - lsu football rivalry", "lsu", "47", "1901", "2012", "20", "26", "1", "2 losses", "2010 , 24 - 17"], ["auburn - florida football rivalry", "florida", "83", "1912", "2011", "43", "38", "2", "3 wins", "2011 , 17 - 6"], ["auburn - georgia tech football rivalry", "georgia tech", "92", "1892", "2005", "47", "41", "4", "2 losses", "1987 , 20 - 10"], ["auburn - tennessee football rivalry", "tennessee", "51", "1900", "2009", "27", "21", "3", "5 wins", "2009 , 26 - 22"], ["auburn - tulane football rivalry", "tulane", "37", "1902", "2006", "14", "17", "6", "1 win", "2006 , 38 - 13"], ["auburn - clemson rivalry", "clemson", "48", "1899", "2012", "34", "13", "2", "2 losses", "2010 , 27 - 24"]], "query": "round_eq { avg { all_rows ; ties } ; 3.4 } = true", "question": "the average number of ties for the auburn tigers football team is 3.4 ."}, {"topic": "claudia porwik", "wiki": "https://en.wikipedia.org/wiki/Claudia_Porwik", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15097001-5.html.csv", "action": "majority", "sent": "claudia porwik and her partner won most of the tournaments that she competed in .", "annotation": {"scope": "all", "col": "1", "most_or_all": "most", "criterion": "fuzzily_match", "value": "winner", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "outcome", "winner"], "result": true, "ind": 0, "tointer": "for the outcome records of all rows , most of them fuzzily match to winner .", "tostr": "most_eq { all_rows ; outcome ; winner } = true"}, "logic_str": "most_eq { all_rows ; outcome ; winner } = true", "interpret": "for the outcome records of all rows , most of them fuzzily match to winner .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "outcome_3": 3, "winner_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "outcome_3": "outcome", "winner_4": "winner"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "outcome_3": [0], "winner_4": [0]}, "table_header": ["outcome", "date", "tournament", "surface", "partner", "opponents in final", "score in final"], "table_cont": [["winner", "1 may 1988", "taranto , italy", "clay", "andrea betzner", "laura garrone helen kelesi", "6 - 1 , 6 - 2"], ["runner - up", "22 may 1988", "european open , switzerland", "clay", "maria lindstr\u00f6m", "christiane jolissaint dianne van rensburg", "1 - 6 , 3 - 6"], ["runner - up", "5 november 1989", "indianapolis , usa", "hard", "larisa savchenko", "katrina adams lori mcneil", "4 - 6 , 4 - 6"], ["winner", "25 august 1991", "schenectady , new york , usa", "hard", "rachel mcquillan", "nicole arendt shannan mccarthy", "6 - 2 , 6 - 4"], ["runner - up", "9 february 1992", "faber grand prix , essen , germany", "carpet", "sabine appelmans", "katerina maleeva barbara rittner", "5 - 7 , 3 - 6"], ["runner - up", "16 february 1992", "linz , austria", "hard ( i )", "raffaella reggi - concato", "miriam oremans monique kiene", "6 - 4 , 6 - 2"], ["winner", "29 august 1993", "schenectady , new york , usa", "hard", "rachel mcquillan", "florencia labat barbara rittner", "4 - 6 , 6 - 4 , 6 - 2"], ["winner", "17 october 1993", "montpellier , france", "carpet", "meredith mcgrath", "janette hus\u00e1rov\u00e1 dominique monami", "3 - 6 , 6 - 2 , 7 - 6"], ["winner", "8 january 1995", "jakarta , indonesia", "hard", "irina sp\u00eerlea", "laurence courtois nancy feber", "6 - 2 , 6 - 3"], ["winner", "30 september 1995", "china open , beijing , china", "hard", "linda wild", "stephanie rottier shi - ting wang", "6 - 1 , 6 - 0"]], "query": "most_eq { all_rows ; outcome ; winner } = true", "question": "claudia porwik and her partner won most of the tournaments that she competed in ."}, {"topic": "croatian bol ladies open", "wiki": "https://en.wikipedia.org/wiki/Croatian_Bol_Ladies_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16157440-2.html.csv", "action": "count", "sent": "laura montalvo was one of the champions in the croatian bol ladies open a total of three times .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "laura montalvo", "result": "3", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "champions", "laura montalvo"], "result": null, "ind": 0, "tointer": "select the rows whose champions record fuzzily matches to laura montalvo .", "tostr": "filter_eq { all_rows ; champions ; laura montalvo }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; champions ; laura montalvo } }", "tointer": "select the rows whose champions record fuzzily matches to laura montalvo . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; champions ; laura montalvo } } ; 3 } = true", "tointer": "select the rows whose champions record fuzzily matches to laura montalvo . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; champions ; laura montalvo } } ; 3 } = true", "interpret": "select the rows whose champions record fuzzily matches to laura montalvo . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "champions_5": 5, "laura montalvo_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "champions_5": "champions", "laura montalvo_6": "laura montalvo", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "champions_5": [0], "laura montalvo_6": [0], "3_7": [2]}, "table_header": ["year", "category", "champions", "runners - up", "score"], "table_cont": [["1991", "v", "laura golarsa magdalena maleeva", "sandra cecchini laura garrone", "walkover"], ["1995", "iii", "mercedes paz rene simpson", "laura golarsa irina sp\u00eerlea", "7 - 5 , 6 - 2"], ["1996", "iv", "laura montalvo paola su\u00e1rez", "alexia dechaume alexandra fusai", "6 - 7 , 6 - 3 , 6 - 4"], ["1997", "iv", "laura montalvo henrieta nagyov\u00e1", "mar\u00eda jos\u00e9 gaidano marion maruska", "6 - 3 , 6 - 1"], ["1998", "iva", "laura montalvo paola su\u00e1rez", "joannette kruger mirjana lu\u010di\u0107", "walkover"], ["1999", "iv", "jelena kostani\u0107 michaela pa\u0161tikov\u00e1", "meghann shaughnessy andreea vanc", "7 - 5 , 6 - 7 , 6 - 2"], ["2000", "iii", "julie halard corina morariu", "tina kri\u017ean katarina srebotnik", "6 - 2 , 6 - 2"], ["2001", "iii", "mar\u00eda mart\u00ednez anabel medina", "nadia petrova tina pisnik", "7 - 5 , 6 - 4"], ["2002", "iii", "tathiana garbin angelique widjaja", "elena bovina henrieta nagyov\u00e1", "7 - 5 , 3 - 6 , 6 - 4"], ["2003", "iii", "petra mandula patricia wartusch", "emmanuelle gagliardi patty schnyder", "6 - 3 , 6 - 2"]], "query": "eq { count { filter_eq { all_rows ; champions ; laura montalvo } } ; 3 } = true", "question": "laura montalvo was one of the champions in the croatian bol ladies open a total of three times ."}, {"topic": "hoosier athletic conference", "wiki": "https://en.wikipedia.org/wiki/Hoosier_Athletic_Conference", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18789626-2.html.csv", "action": "aggregation", "sent": "the average year left for those that participated in the hoosier athletic conference in about 1977 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "1977", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "year left"], "result": "1977", "ind": 0, "tostr": "avg { all_rows ; year left }"}, "1977"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; year left } ; 1977 } = true", "tointer": "the average of the year left record of all rows is 1977 ."}, "logic_str": "round_eq { avg { all_rows ; year left } ; 1977 } = true", "interpret": "the average of the year left record of all rows is 1977 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "year left_4": 4, "1977_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "year left_4": "year left", "1977_5": "1977"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "year left_4": [0], "1977_5": [1]}, "table_header": ["school", "city", "team name", "county", "year joined", "year left"], "table_cont": [["attica", "attica", "red ramblers", "23 fountain", "1947", "1966"], ["delphi community", "delphi", "oracles", "08 carroll", "1947", "1992"], ["flora", "flora", "badgers", "08 carroll", "1947", "1961"], ["rensselaer central", "rensselaer", "bombers", "37 jasper", "1947", "1949"], ["rossville", "rossville", "hornets", "12 clinton", "1947", "1977"], ["winamac", "winamac", "warriors", "66 pulaski", "1947", "1972"], ["sheridan", "sheridan", "blackhawks", "29 hamilton", "1948 2000", "1965 2012"], ["southwestern", "lafayette", "wildcats", "79 tippecanoe", "1958", "1966"], ["western", "russiaville", "panthers", "34 howard", "1958", "1965"], ["carroll", "flora", "cougars", "08 carroll", "1961", "1977"], ["clinton prairie", "frankfort", "gophers", "12 clinton", "1961", "1974"], ["central catholic", "lafayette", "knights", "79 tippecanoe", "1970", "1993"], ["harrison ( west lafayette )", "west lafayette", "raiders", "79 tippecanoe", "1970", "1997"], ["mccutcheon", "lafayette", "mavericks", "79 tippecanoe", "1975", "1997"]], "query": "round_eq { avg { all_rows ; year left } ; 1977 } = true", "question": "the average year left for those that participated in the hoosier athletic conference in about 1977 ."}, {"topic": "1975 formula one season", "wiki": "https://en.wikipedia.org/wiki/1975_Formula_One_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1140085-2.html.csv", "action": "comparative", "sent": "carlos pace won a race before niki lauda won one .", "annotation": {"row_1": "2", "row_2": "5", "col": "3", "col_other": "7", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "race winner", "carlos pace"], "result": null, "ind": 0, "tointer": "select the rows whose race winner record fuzzily matches to carlos pace .", "tostr": "filter_eq { all_rows ; race winner ; carlos pace }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; race winner ; carlos pace } ; date }", "tointer": "select the rows whose race winner record fuzzily matches to carlos pace . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "race winner", "niki lauda"], "result": null, "ind": 1, "tointer": "select the rows whose race winner record fuzzily matches to niki lauda .", "tostr": "filter_eq { all_rows ; race winner ; niki lauda }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; race winner ; niki lauda } ; date }", "tointer": "select the rows whose race winner record fuzzily matches to niki lauda . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; race winner ; carlos pace } ; date } ; hop { filter_eq { all_rows ; race winner ; niki lauda } ; date } } = true", "tointer": "select the rows whose race winner record fuzzily matches to carlos pace . take the date record of this row . select the rows whose race winner record fuzzily matches to niki lauda . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; race winner ; carlos pace } ; date } ; hop { filter_eq { all_rows ; race winner ; niki lauda } ; date } } = true", "interpret": "select the rows whose race winner record fuzzily matches to carlos pace . take the date record of this row . select the rows whose race winner record fuzzily matches to niki lauda . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "race winner_7": 7, "carlos pace_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "race winner_11": 11, "niki lauda_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "race winner_7": "race winner", "carlos pace_8": "carlos pace", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "race winner_11": "race winner", "niki lauda_12": "niki lauda", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "race winner_7": [0], "carlos pace_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "race winner_11": [1], "niki lauda_12": [1], "date_13": [3]}, "table_header": ["rnd", "race", "date", "location", "pole position", "fastest lap", "race winner", "constructor", "report"], "table_cont": [["1", "argentine grand prix", "12 january", "buenos aires", "jean - pierre jarier", "james hunt", "emerson fittipaldi", "mclaren - ford", "report"], ["2", "brazilian grand prix", "26 january", "interlagos", "jean - pierre jarier", "jean - pierre jarier", "carlos pace", "brabham - ford", "report"], ["3", "south african grand prix", "1 march", "kyalami", "carlos pace", "carlos pace", "jody scheckter", "tyrrell - ford", "report"], ["4", "spanish grand prix", "27 april", "montju\u00efc", "niki lauda", "mario andretti", "jochen mass", "mclaren - ford", "report"], ["5", "monaco grand prix", "11 may", "monaco", "niki lauda", "patrick depailler", "niki lauda", "ferrari", "report"], ["6", "belgian grand prix", "25 may", "zolder", "niki lauda", "clay regazzoni", "niki lauda", "ferrari", "report"], ["7", "swedish grand prix", "8 june", "anderstorp", "vittorio brambilla", "niki lauda", "niki lauda", "ferrari", "report"], ["8", "dutch grand prix", "22 june", "zandvoort", "niki lauda", "niki lauda", "james hunt", "hesketh - ford", "report"], ["9", "french grand prix", "6 july", "paul ricard", "niki lauda", "jochen mass", "niki lauda", "ferrari", "report"], ["10", "british grand prix", "19 july", "silverstone", "tom pryce", "clay regazzoni", "emerson fittipaldi", "mclaren - ford", "report"], ["11", "german grand prix", "3 august", "n\u00fcrburgring", "niki lauda", "clay regazzoni", "carlos reutemann", "brabham - ford", "report"], ["12", "austrian grand prix", "17 august", "\u00f6sterreichring", "niki lauda", "vittorio brambilla", "vittorio brambilla", "march - ford", "report"], ["13", "italian grand prix", "7 september", "monza", "niki lauda", "clay regazzoni", "clay regazzoni", "ferrari", "report"]], "query": "less { hop { filter_eq { all_rows ; race winner ; carlos pace } ; date } ; hop { filter_eq { all_rows ; race winner ; niki lauda } ; date } } = true", "question": "carlos pace won a race before niki lauda won one ."}, {"topic": "1983 nhl entry draft", "wiki": "https://en.wikipedia.org/wiki/1983_NHL_Entry_Draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2679061-11.html.csv", "action": "majority", "sent": "most of the positions in the 1983 nhl entry draft are either left or right wing .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "fuzzily_match", "value": "wing", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "position", "wing"], "result": true, "ind": 0, "tointer": "for the position records of all rows , most of them fuzzily match to wing .", "tostr": "most_eq { all_rows ; position ; wing } = true"}, "logic_str": "most_eq { all_rows ; position ; wing } = true", "interpret": "for the position records of all rows , most of them fuzzily match to wing .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "position_3": 3, "wing_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "position_3": "position", "wing_4": "wing"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "position_3": [0], "wing_4": [0]}, "table_header": ["pick", "player", "position", "nationality", "nhl team", "college / junior / club team"], "table_cont": [["203", "garth hildebrand", "left wing", "canada", "pittsburgh penguins", "calgary wranglers ( whl )"], ["204", "allan acton", "left wing", "canada", "hartford whalers", "saskatoon blazers ( whl )"], ["205", "alan stewart", "left wing", "canada", "new jersey devils", "prince albert raiders ( whl )"], ["206", "jeff frank", "right wing", "canada / united states", "detroit red wings", "regina pats ( whl )"], ["207", "jan blaha", "right wing", "czechoslovakia", "los angeles kings", "ceske budejovice ( czechoslovakia )"], ["208", "mike tomlak", "centre", "canada", "toronto maple leafs", "cornwall royals ( ohl )"], ["209", "eric cormier", "left wing", "canada", "winnipeg jets", "st george 's school ( canadian hs - qc )"], ["210", "steve kayser", "defence", "canada", "vancouver canucks", "university of vermont ( ecac )"], ["211", "jaroslav benak", "defence", "czechoslovakia", "calgary flames", "jihlava ( czechoslovakia )"], ["212", "oldrich valek", "right wing", "czechoslovakia", "minnesota north stars", "jihlava ( czechoslovakia )"], ["213", "bryan walker", "defence", "canada", "new york rangers", "portland winter halks ( whl )"], ["214", "uwe krupp", "defence", "west germany", "buffalo sabres", "cologne ( west germany )"], ["215", "alain raymond", "goaltender", "canada", "washington capitals", "trois - rivieres draveurs ( qmjhl )"], ["216", "anders huss", "centre", "sweden", "washington capitals", "gavle ( sweden )"], ["217", "john bjorkman", "centre", "united states", "new york islanders", "warroad high school ( ushs - mn )"], ["218", "jeff perpich", "defence", "united states", "montreal canadiens", "hibbing high school ( ushs - mn )"], ["219", "steve pepin", "centre", "canada", "chicago black hawks", "st jean castors ( qmjhl )"], ["220", "john miner", "defence", "canada", "edmonton oilers", "regina pats ( whl )"], ["221", "brian jopling", "goaltender", "united states", "philadelphia flyers", "rennssaeler polytechnic institute"], ["222", "norm foster", "goaltender", "canada", "boston bruins", "penticton knights ( bcjhl )"]], "query": "most_eq { all_rows ; position ; wing } = true", "question": "most of the positions in the 1983 nhl entry draft are either left or right wing ."}, {"topic": "canon open", "wiki": "https://en.wikipedia.org/wiki/Canon_Open", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17821655-1.html.csv", "action": "superlative", "sent": "the winner 's share of the purse for the 2008 canon open was the highest of all of the year 's listed .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "purse"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; purse }"}, "year"], "result": "2008", "ind": 1, "tostr": "hop { argmax { all_rows ; purse } ; year }"}, "2008"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; purse } ; year } ; 2008 } = true", "tointer": "select the row whose purse record of all rows is maximum . the year record of this row is 2008 ."}, "logic_str": "eq { hop { argmax { all_rows ; purse } ; year } ; 2008 } = true", "interpret": "select the row whose purse record of all rows is maximum . the year record of this row is 2008 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "purse_5": 5, "year_6": 6, "2008_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "purse_5": "purse", "year_6": "year", "2008_7": "2008"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "purse_5": [0], "year_6": [1], "2008_7": [2]}, "table_header": ["year", "dates", "champion", "country", "score", "purse", "winner 's share"], "table_cont": [["2012", "oct 4 - 7", "yuta ikeda", "japan", "271 ( - 17 )", "150000000", "30000000"], ["2011", "oct 6 - 9", "kenichi kuboya", "japan", "274 ( - 14 )", "150000000", "30000000"], ["2010", "oct 7 - 10", "shinichi yokota", "japan", "274 ( - 14 )", "150000000", "30000000"], ["2009", "oct 8 - 11", "yuta ikeda", "japan", "200 ( - 16 )", "150000000", "30000000"], ["2008", "oct 9 - 12", "makoto inoue", "japan", "275 ( - 13 )", "200000000", "40000000"]], "query": "eq { hop { argmax { all_rows ; purse } ; year } ; 2008 } = true", "question": "the winner 's share of the purse for the 2008 canon open was the highest of all of the year 's listed ."}, {"topic": "modern guilt", "wiki": "https://en.wikipedia.org/wiki/Modern_Guilt", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17388337-3.html.csv", "action": "count", "sent": "seven of the versions of the album modern guilt were released on the format cd .", "annotation": {"scope": "all", "criterion": "equal", "value": "cd", "result": "7", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "format", "cd"], "result": null, "ind": 0, "tointer": "select the rows whose format record fuzzily matches to cd .", "tostr": "filter_eq { all_rows ; format ; cd }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; format ; cd } }", "tointer": "select the rows whose format record fuzzily matches to cd . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; format ; cd } } ; 7 } = true", "tointer": "select the rows whose format record fuzzily matches to cd . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; format ; cd } } ; 7 } = true", "interpret": "select the rows whose format record fuzzily matches to cd . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "format_5": 5, "cd_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "format_5": "format", "cd_6": "cd", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "format_5": [0], "cd_6": [0], "7_7": [2]}, "table_header": ["region", "date", "label", "format", "catalog"], "table_cont": [["world", "july 8 , 2008", "dgc", "digital download", ""], ["argentina", "july 8 , 2008", "dgc", "cd", "1775441"], ["australia", "july 8 , 2008", "dgc", "cd", "1775441"], ["canada", "july 8 , 2008", "dgc", "cd", "b001150702"], ["united states", "july 8 , 2008", "dgc", "cd", "b0011507 - 02"], ["united states", "july 8 , 2008", "dgc", "lp", "b0011630 - 01"], ["united kingdom", "july 8 , 2008", "dgc", "cd", "b001150702"], ["united kingdom", "july 8 , 2008", "xl", "cd", "xlcd369"], ["united kingdom", "july 8 , 2008", "xl", "lp", "xllp 369"], ["europe", "july 8 , 2008", "xl", "lp", "xllp 369"], ["europe", "july 8 , 2008", "xl", "cd", "xlcd369"]], "query": "eq { count { filter_eq { all_rows ; format ; cd } } ; 7 } = true", "question": "seven of the versions of the album modern guilt were released on the format cd ."}, {"topic": "1966 los angeles dodgers season", "wiki": "https://en.wikipedia.org/wiki/1966_Los_Angeles_Dodgers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12937301-12.html.csv", "action": "comparative", "sent": "richard schryer was drafted in an earlier round than james carter in the 1966 los angeles dodgers season .", "annotation": {"row_1": "2", "row_2": "3", "col": "1", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "richard schryer"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to richard schryer .", "tostr": "filter_eq { all_rows ; name ; richard schryer }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; richard schryer } ; round }", "tointer": "select the rows whose name record fuzzily matches to richard schryer . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "james carter"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to james carter .", "tostr": "filter_eq { all_rows ; name ; james carter }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; james carter } ; round }", "tointer": "select the rows whose name record fuzzily matches to james carter . take the round record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; name ; richard schryer } ; round } ; hop { filter_eq { all_rows ; name ; james carter } ; round } } = true", "tointer": "select the rows whose name record fuzzily matches to richard schryer . take the round record of this row . select the rows whose name record fuzzily matches to james carter . take the round record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; name ; richard schryer } ; round } ; hop { filter_eq { all_rows ; name ; james carter } ; round } } = true", "interpret": "select the rows whose name record fuzzily matches to richard schryer . take the round record of this row . select the rows whose name record fuzzily matches to james carter . take the round record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name_7": 7, "richard schryer_8": 8, "round_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name_11": 11, "james carter_12": 12, "round_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name_7": "name", "richard schryer_8": "richard schryer", "round_9": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "james carter_12": "james carter", "round_13": "round"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name_7": [0], "richard schryer_8": [0], "round_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name_11": [1], "james carter_12": [1], "round_13": [3]}, "table_header": ["round", "name", "position", "school", "signed"], "table_cont": [["1", "bob stinson", "c", "miami - dade college", "yes"], ["2", "richard schryer", "of", "university of michigan", "yes"], ["3", "james carter", "3b", "trinity university", "yes"], ["4", "john green", "rhp", "gulf coast community college", "no"], ["5", "john herbst", "lhp", "university of southern california", "no twins - 1967"]], "query": "less { hop { filter_eq { all_rows ; name ; richard schryer } ; round } ; hop { filter_eq { all_rows ; name ; james carter } ; round } } = true", "question": "richard schryer was drafted in an earlier round than james carter in the 1966 los angeles dodgers season ."}, {"topic": "1958 new york giants season", "wiki": "https://en.wikipedia.org/wiki/1958_New_York_Giants_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16660856-1.html.csv", "action": "ordinal", "sent": "in the 1958 season , the new york giants ' third win was against the pittsburgh steelers in week 5 .", "annotation": {"scope": "subset", "row": "5", "col": "1", "order": "3", "col_other": "3,4", "max_or_min": "min_to_max", "value_mentioned": "no", "subset": {"col": "4", "criterion": "fuzzily_match", "value": "w"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "w"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; result ; w }", "tointer": "select the rows whose result record fuzzily matches to w ."}, "week", "3"], "result": null, "ind": 1, "tostr": "nth_argmin { filter_eq { all_rows ; result ; w } ; week ; 3 }"}, "opponent"], "result": "pittsburgh steelers", "ind": 2, "tostr": "hop { nth_argmin { filter_eq { all_rows ; result ; w } ; week ; 3 } ; opponent }"}, "pittsburgh steelers"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmin { filter_eq { all_rows ; result ; w } ; week ; 3 } ; opponent } ; pittsburgh steelers } = true", "tointer": "select the rows whose result record fuzzily matches to w . select the row whose week record of these rows is 3rd minimum . the opponent record of this row is pittsburgh steelers ."}, "logic_str": "eq { hop { nth_argmin { filter_eq { all_rows ; result ; w } ; week ; 3 } ; opponent } ; pittsburgh steelers } = true", "interpret": "select the rows whose result record fuzzily matches to w . select the row whose week record of these rows is 3rd minimum . the opponent record of this row is pittsburgh steelers .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "nth_argmin_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "result_6": 6, "w_7": 7, "week_8": 8, "3_9": 9, "opponent_10": 10, "pittsburgh steelers_11": 11}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "nth_argmin_1": "nth_argmin", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "result_6": "result", "w_7": "w", "week_8": "week", "3_9": "3", "opponent_10": "opponent", "pittsburgh steelers_11": "pittsburgh steelers"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "nth_argmin_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "result_6": [0], "w_7": [0], "week_8": [1], "3_9": [1], "opponent_10": [2], "pittsburgh steelers_11": [3]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 28 , 1958", "chicago cardinals", "w 37 - 7", "21923"], ["2", "october 5 , 1958", "philadelphia eagles", "l 27 - 24", "23178"], ["3", "october 12 , 1958", "washington redskins", "w 21 - 14", "30348"], ["4", "october 19 , 1958", "chicago cardinals", "l 23 - 6", "52684"], ["5", "october 26 , 1958", "pittsburgh steelers", "w 17 - 6", "25007"], ["6", "november 2 , 1958", "cleveland browns", "w 21 - 17", "78404"], ["7", "november 9 , 1958", "baltimore colts", "w 24 - 21", "71164"], ["8", "november 16 , 1958", "pittsburgh steelers", "l 31 - 10", "30030"], ["9", "november 23 , 1958", "washington redskins", "w 30 - 0", "46752"], ["10", "november 30 , 1958", "philadelphia eagles", "w 24 - 10", "35438"], ["11", "december 7 , 1958", "detroit lions", "w 19 - 17", "50115"], ["12", "december 14 , 1958", "cleveland browns", "w 13 - 10", "63192"]], "query": "eq { hop { nth_argmin { filter_eq { all_rows ; result ; w } ; week ; 3 } ; opponent } ; pittsburgh steelers } = true", "question": "in the 1958 season , the new york giants ' third win was against the pittsburgh steelers in week 5 ."}, {"topic": "list of tallest buildings in boston", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Boston", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1115824-6.html.csv", "action": "count", "sent": "of the buildings that have been the tallest buildings in boston , three have over 30 floors .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "30", "result": "3", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "floors", "30"], "result": null, "ind": 0, "tointer": "select the rows whose floors record is greater than 30 .", "tostr": "filter_greater { all_rows ; floors ; 30 }"}], "result": "3", "ind": 1, "tostr": "count { filter_greater { all_rows ; floors ; 30 } }", "tointer": "select the rows whose floors record is greater than 30 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; floors ; 30 } } ; 3 } = true", "tointer": "select the rows whose floors record is greater than 30 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_greater { all_rows ; floors ; 30 } } ; 3 } = true", "interpret": "select the rows whose floors record is greater than 30 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "floors_5": 5, "30_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "floors_5": "floors", "30_6": "30", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "floors_5": [0], "30_6": [0], "3_7": [2]}, "table_header": ["name", "street address", "years as tallest", "height ft ( m )", "floors"], "table_cont": [["old state house", "206 washington street", "1713 - 1745", "08.0 65 ( 20 )", "3"], ["old north church", "193 salem street", "1745 - 1810", "08.0 175 ( 53 )", "1"], ["park street church", "1 park street", "1810 - 1867", "07.0 217 ( 66 )", "1"], ["church of the covenant", "67 newbury street", "1867 - 1915", "06.0 236 ( 72 )", "1"], ["custom house tower", "3 mckinley square", "1915 - 1964", "05.0 496 ( 151 )", "32"], ["prudential tower", "800 boylston street", "1964 - 1976", "04.0 749 ( 228 )", "52"], ["hancock place", "200 clarendon street", "1976 - present", "03.0 790 ( 241 )", "60"]], "query": "eq { count { filter_greater { all_rows ; floors ; 30 } } ; 3 } = true", "question": "of the buildings that have been the tallest buildings in boston , three have over 30 floors ."}, {"topic": "2008 chicago bears season", "wiki": "https://en.wikipedia.org/wiki/2008_Chicago_Bears_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15185487-1.html.csv", "action": "unique", "sent": "kirk barton was the only player from the college of ohio state that was drafted in the 2008 chicago bears season .", "annotation": {"scope": "all", "row": "11", "col": "5", "col_other": "3", "criterion": "equal", "value": "ohio state", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "ohio state"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to ohio state .", "tostr": "filter_eq { all_rows ; college ; ohio state }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; college ; ohio state } }", "tointer": "select the rows whose college record fuzzily matches to ohio state . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "ohio state"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to ohio state .", "tostr": "filter_eq { all_rows ; college ; ohio state }"}, "player"], "result": "kirk barton", "ind": 2, "tostr": "hop { filter_eq { all_rows ; college ; ohio state } ; player }"}, "kirk barton"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; college ; ohio state } ; player } ; kirk barton }", "tointer": "the player record of this unqiue row is kirk barton ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; college ; ohio state } } ; eq { hop { filter_eq { all_rows ; college ; ohio state } ; player } ; kirk barton } } = true", "tointer": "select the rows whose college record fuzzily matches to ohio state . there is only one such row in the table . the player record of this unqiue row is kirk barton ."}, "logic_str": "and { only { filter_eq { all_rows ; college ; ohio state } } ; eq { hop { filter_eq { all_rows ; college ; ohio state } ; player } ; kirk barton } } = true", "interpret": "select the rows whose college record fuzzily matches to ohio state . there is only one such row in the table . the player record of this unqiue row is kirk barton .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "college_7": 7, "ohio state_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "kirk barton_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "college_7": "college", "ohio state_8": "ohio state", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "kirk barton_10": "kirk barton"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "college_7": [0], "ohio state_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "kirk barton_10": [3]}, "table_header": ["round", "pick", "player", "position", "college"], "table_cont": [["1", "14", "chris williams", "ot", "vanderbilt"], ["2", "44", "matt forte", "rb", "tulane"], ["3", "70", "earl bennett", "wr", "vanderbilt"], ["3", "90", "marcus harrison", "dt", "arkansas"], ["4", "120", "craig steltz", "s", "lsu"], ["5", "142", "zack bowman", "cb", "nebraska"], ["5", "158", "kellen davis", "te", "michigan state"], ["7", "208", "ervin baldwin", "de", "michigan state"], ["7", "222", "chester adams", "og", "georgia"], ["7", "243", "joey larocque", "lb", "oregon state"], ["7", "247", "kirk barton", "ot", "ohio state"], ["7", "248", "marcus monk", "wr", "arkansas"], ["according to official website", "according to official website", "according to official website", "according to official website", "according to official website"]], "query": "and { only { filter_eq { all_rows ; college ; ohio state } } ; eq { hop { filter_eq { all_rows ; college ; ohio state } ; player } ; kirk barton } } = true", "question": "kirk barton was the only player from the college of ohio state that was drafted in the 2008 chicago bears season ."}, {"topic": "comparison of microsoft windows versions", "wiki": "https://en.wikipedia.org/wiki/Comparison_of_Microsoft_Windows_versions", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10758793-13.html.csv", "action": "majority", "sent": "all of the microsoft windows versions had support for fat16 .", "annotation": {"scope": "all", "col": "1", "most_or_all": "all", "criterion": "equal", "value": "yes", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "fat16", "yes"], "result": true, "ind": 0, "tointer": "for the fat16 records of all rows , all of them fuzzily match to yes .", "tostr": "all_eq { all_rows ; fat16 ; yes } = true"}, "logic_str": "all_eq { all_rows ; fat16 ; yes } = true", "interpret": "for the fat16 records of all rows , all of them fuzzily match to yes .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "fat16_3": 3, "yes_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "fat16_3": "fat16", "yes_4": "yes"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "fat16_3": [0], "yes_4": [0]}, "table_header": ["fat16", "fat32", "hpfs", "iso 9660", "ntfs", "refs"], "table_cont": [["yes", "no", "yes", "yes", "yes v1 .0 / v1 .1", "no"], ["yes", "no", "partial", "yes", "yes v1 .2", "no"], ["yes", "yes", "no", "yes", "yes v3 .0", "no"], ["yes", "yes", "no", "yes", "yes v3 .1", "no"], ["yes", "yes", "no", "yes", "yes v5", "no"], ["yes", "yes", "no", "yes", "yes v5", "yes"]], "query": "all_eq { all_rows ; fat16 ; yes } = true", "question": "all of the microsoft windows versions had support for fat16 ."}, {"topic": "1963 all - ireland senior hurling championship", "wiki": "https://en.wikipedia.org/wiki/1963_All-Ireland_Senior_Hurling_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18937160-2.html.csv", "action": "comparative", "sent": "eddie keher managed to achieve a higher rank than philly grimes .", "annotation": {"row_1": "1", "row_2": "9", "col": "1", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "eddie keher"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to eddie keher .", "tostr": "filter_eq { all_rows ; player ; eddie keher }"}, "rank"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; eddie keher } ; rank }", "tointer": "select the rows whose player record fuzzily matches to eddie keher . take the rank record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "philly grimes"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to philly grimes .", "tostr": "filter_eq { all_rows ; player ; philly grimes }"}, "rank"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; philly grimes } ; rank }", "tointer": "select the rows whose player record fuzzily matches to philly grimes . take the rank record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; eddie keher } ; rank } ; hop { filter_eq { all_rows ; player ; philly grimes } ; rank } } = true", "tointer": "select the rows whose player record fuzzily matches to eddie keher . take the rank record of this row . select the rows whose player record fuzzily matches to philly grimes . take the rank record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; player ; eddie keher } ; rank } ; hop { filter_eq { all_rows ; player ; philly grimes } ; rank } } = true", "interpret": "select the rows whose player record fuzzily matches to eddie keher . take the rank record of this row . select the rows whose player record fuzzily matches to philly grimes . take the rank record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "eddie keher_8": 8, "rank_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "philly grimes_12": 12, "rank_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "eddie keher_8": "eddie keher", "rank_9": "rank", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "philly grimes_12": "philly grimes", "rank_13": "rank"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "eddie keher_8": [0], "rank_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "philly grimes_12": [1], "rank_13": [3]}, "table_header": ["rank", "player", "county", "tally", "total", "opposition"], "table_cont": [["1", "eddie keher", "kilkenny", "0 - 14", "14", "waterford"], ["2", "eddie keher", "kilkenny", "2 - 5", "11", "wexford"], ["3", "jimmy smyth", "clare", "1 - 7", "10", "cork"], ["4", "richard browne", "cork", "3 - 0", "9", "clare"], ["4", "se\u00e1n mcloughlin", "tipperary", "3 - 0", "9", "waterford"], ["4", "s\u00e9amus power", "waterford", "3 - 0", "9", "kilkenny"], ["4", "willie walsh", "carlow", "2 - 3", "9", "dublin"], ["8", "fran whelan", "dublin", "1 - 5", "8", "carlow"], ["8", "philly grimes", "waterford", "0 - 8", "8", "tipperary"], ["10", "tom walsh", "kilkenny", "2 - 1", "7", "waterford"], ["10", "mick kennedy", "dublin", "1 - 4", "7", "carlow"], ["10", "philly grimes", "waterford", "1 - 4", "7", "kilkenny"]], "query": "less { hop { filter_eq { all_rows ; player ; eddie keher } ; rank } ; hop { filter_eq { all_rows ; player ; philly grimes } ; rank } } = true", "question": "eddie keher managed to achieve a higher rank than philly grimes ."}, {"topic": "1979 - 80 new york rangers season", "wiki": "https://en.wikipedia.org/wiki/1979%E2%80%9380_New_York_Rangers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17562956-13.html.csv", "action": "majority", "sent": "the majority of players that the new york rangers drafted were from canada .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "canada", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "nationality", "canada"], "result": true, "ind": 0, "tointer": "for the nationality records of all rows , most of them fuzzily match to canada .", "tostr": "most_eq { all_rows ; nationality ; canada } = true"}, "logic_str": "most_eq { all_rows ; nationality ; canada } = true", "interpret": "for the nationality records of all rows , most of them fuzzily match to canada .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "nationality_3": 3, "canada_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "nationality_3": "nationality", "canada_4": "canada"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "nationality_3": [0], "canada_4": [0]}, "table_header": ["round", "player", "position", "nationality", "college / junior / club team ( league )"], "table_cont": [["1", "doug sulliman", "lw", "canada", "kitchener rangers ( oha )"], ["2", "ed hospodar", "d", "united states", "ottawa 67 's ( oha )"], ["4", "pat conacher", "c", "canada", "saskatoon blades ( wchl )"], ["5", "dan makuch", "rw", "canada", "clarkson university ( ncaa )"], ["6", "stan adams", "c", "canada", "niagara falls flyers ( oha )"]], "query": "most_eq { all_rows ; nationality ; canada } = true", "question": "the majority of players that the new york rangers drafted were from canada ."}, {"topic": "list of tallest buildings in rochester , new york", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Rochester%2C_New_York", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17265352-1.html.csv", "action": "unique", "sent": "of the 16 tallest buildings in rochester , new york , saint michael 's church is the only one that has only one floor .", "annotation": {"scope": "all", "row": "10", "col": "4", "col_other": "2", "criterion": "equal", "value": "1", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "floors", "1"], "result": null, "ind": 0, "tointer": "select the rows whose floors record is equal to 1 .", "tostr": "filter_eq { all_rows ; floors ; 1 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; floors ; 1 } }", "tointer": "select the rows whose floors record is equal to 1 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "floors", "1"], "result": null, "ind": 0, "tointer": "select the rows whose floors record is equal to 1 .", "tostr": "filter_eq { all_rows ; floors ; 1 }"}, "name"], "result": "saint michael 's church", "ind": 2, "tostr": "hop { filter_eq { all_rows ; floors ; 1 } ; name }"}, "saint michael 's church"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; floors ; 1 } ; name } ; saint michael 's church }", "tointer": "the name record of this unqiue row is saint michael 's church ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; floors ; 1 } } ; eq { hop { filter_eq { all_rows ; floors ; 1 } ; name } ; saint michael 's church } } = true", "tointer": "select the rows whose floors record is equal to 1 . there is only one such row in the table . the name record of this unqiue row is saint michael 's church ."}, "logic_str": "and { only { filter_eq { all_rows ; floors ; 1 } } ; eq { hop { filter_eq { all_rows ; floors ; 1 } ; name } ; saint michael 's church } } = true", "interpret": "select the rows whose floors record is equal to 1 . there is only one such row in the table . the name record of this unqiue row is saint michael 's church .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "floors_7": 7, "1_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "saint michael 's church_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "floors_7": "floors", "1_8": "1", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "saint michael 's church_10": "saint michael 's church"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "floors_7": [0], "1_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "saint michael 's church_10": [3]}, "table_header": ["rank", "name", "height ft / m", "floors", "year"], "table_cont": [["1", "xerox tower", "443 / 135", "30", "1968"], ["2", "bausch & lomb place", "401 / 122", "20", "1995"], ["3", "chase tower", "392 / 119", "27", "1973"], ["4", "kodak tower", "360 / 110", "19", "1914"], ["5", "first federal plaza", "309 / 94", "21", "1976"], ["6", "one hsbc plaza", "284 / 87", "21", "1970"], ["7", "hyatt regency hotel", "271 / 83", "25", "1990"], ["8", "times square building", "260 / 79", "14", "1930"], ["9", "midtown tower", "251 / 77", "18", "1962"], ["10", "saint michael 's church", "246 / 75", "1", "1890"], ["11", "temple building", "218 / 66", "14", "1925"], ["12", "crossroads building", "215 / 66", "15", "1969"], ["13", "eastman school of music student living center", "213 / 65", "14", "1990"], ["14", "seneca towers apartments", "212 / 65", "22", "1968"], ["15", "sibley center", "203 / 62", "12", "1926"], ["16", "clinton square building", "200 / 61", "14", "1990"]], "query": "and { only { filter_eq { all_rows ; floors ; 1 } } ; eq { hop { filter_eq { all_rows ; floors ; 1 } ; name } ; saint michael 's church } } = true", "question": "of the 16 tallest buildings in rochester , new york , saint michael 's church is the only one that has only one floor ."}, {"topic": "1934 vfl season", "wiki": "https://en.wikipedia.org/wiki/1934_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790510-1.html.csv", "action": "aggregation", "sent": "the average attendance at the games of the 1934 vfl season listed was 21500 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "21500", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "crowd"], "result": "21500", "ind": 0, "tostr": "avg { all_rows ; crowd }"}, "21500"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; crowd } ; 21500 } = true", "tointer": "the average of the crowd record of all rows is 21500 ."}, "logic_str": "round_eq { avg { all_rows ; crowd } ; 21500 } = true", "interpret": "the average of the crowd record of all rows is 21500 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "crowd_4": 4, "21500_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "crowd_4": "crowd", "21500_5": "21500"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "crowd_4": [0], "21500_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "16.13 ( 109 )", "st kilda", "11.7 ( 73 )", "corio oval", "15000", "5 may 1934"], ["fitzroy", "11.16 ( 82 )", "north melbourne", "10.11 ( 71 )", "brunswick street oval", "21000", "5 may 1934"], ["essendon", "19.11 ( 125 )", "footscray", "16.18 ( 114 )", "windy hill", "21000", "5 may 1934"], ["richmond", "18.14 ( 122 )", "melbourne", "12.9 ( 81 )", "punt road oval", "17000", "5 may 1934"], ["south melbourne", "19.13 ( 127 )", "collingwood", "13.14 ( 92 )", "lake oval", "38000", "5 may 1934"], ["hawthorn", "12.8 ( 80 )", "carlton", "17.26 ( 128 )", "glenferrie oval", "17000", "5 may 1934"]], "query": "round_eq { avg { all_rows ; crowd } ; 21500 } = true", "question": "the average attendance at the games of the 1934 vfl season listed was 21500 ."}, {"topic": "1990 masters tournament", "wiki": "https://en.wikipedia.org/wiki/1990_Masters_Tournament", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16514275-1.html.csv", "action": "ordinal", "sent": "fred couples finished fifth overall in the 1990 masters tournament .", "annotation": {"row": "5", "col": "1", "order": "5", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "place", "5"], "result": "5", "ind": 0, "tostr": "nth_min { all_rows ; place ; 5 }", "tointer": "the 5th minimum place record of all rows is 5 ."}, "5"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; place ; 5 } ; 5 }", "tointer": "the 5th minimum place record of all rows is 5 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "place", "5"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; place ; 5 }"}, "player"], "result": "fred couples", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; place ; 5 } ; player }"}, "fred couples"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; place ; 5 } ; player } ; fred couples }", "tointer": "the player record of the row with 5th minimum place record is fred couples ."}], "result": true, "ind": 5, "tostr": "and { eq { nth_min { all_rows ; place ; 5 } ; 5 } ; eq { hop { nth_argmin { all_rows ; place ; 5 } ; player } ; fred couples } } = true", "tointer": "the 5th minimum place record of all rows is 5 . the player record of the row with 5th minimum place record is fred couples ."}, "logic_str": "and { eq { nth_min { all_rows ; place ; 5 } ; 5 } ; eq { hop { nth_argmin { all_rows ; place ; 5 } ; player } ; fred couples } } = true", "interpret": "the 5th minimum place record of all rows is 5 . the player record of the row with 5th minimum place record is fred couples .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "nth_min_0": 0, "all_rows_7": 7, "place_8": 8, "5_9": 9, "5_10": 10, "str_eq_4": 4, "str_hop_3": 3, "nth_argmin_2": 2, "all_rows_11": 11, "place_12": 12, "5_13": 13, "player_14": 14, "fred couples_15": 15}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "nth_min_0": "nth_min", "all_rows_7": "all_rows", "place_8": "place", "5_9": "5", "5_10": "5", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "nth_argmin_2": "nth_argmin", "all_rows_11": "all_rows", "place_12": "place", "5_13": "5", "player_14": "player", "fred couples_15": "fred couples"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "nth_min_0": [1], "all_rows_7": [0], "place_8": [0], "5_9": [0], "5_10": [1], "str_eq_4": [5], "str_hop_3": [4], "nth_argmin_2": [3], "all_rows_11": [2], "place_12": [2], "5_13": [2], "player_14": [3], "fred couples_15": [4]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["t1", "nick faldo", "england", "71 + 72 + 66 + 69 = 278", "- 10", "playoff"], ["t1", "raymond floyd", "united states", "70 + 68 + 68 + 72 = 278", "- 10", "playoff"], ["t3", "john huston", "united states", "66 + 74 + 68 + 75 = 283", "- 5", "72500"], ["t3", "lanny wadkins", "united states", "72 + 73 + 70 + 68 = 283", "- 5", "72500"], ["5", "fred couples", "united states", "74 + 69 + 72 + 69 = 284", "- 4", "50000"], ["6", "jack nicklaus", "united states", "72 + 70 + 69 + 74 = 285", "- 3", "45000"], ["t7", "seve ballesteros", "spain", "74 + 73 + 68 + 71 = 286", "- 2", "35150"], ["t7", "bill britton", "united states", "68 + 74 + 71 + 73 = 286", "- 2", "35150"], ["t7", "bernhard langer", "west germany", "70 + 73 + 69 + 74 = 286", "- 2", "35150"], ["t7", "scott simpson", "united states", "74 + 71 + 68 + 73 = 286", "- 2", "35150"], ["t7", "curtis strange", "united states", "70 + 73 + 71 + 72 = 286", "- 2", "35150"], ["t7", "tom watson", "united states", "77 + 71 + 67 + 71 = 286", "- 2", "35150"]], "query": "and { eq { nth_min { all_rows ; place ; 5 } ; 5 } ; eq { hop { nth_argmin { all_rows ; place ; 5 } ; player } ; fred couples } } = true", "question": "fred couples finished fifth overall in the 1990 masters tournament ."}, {"topic": "1974 vfl season", "wiki": "https://en.wikipedia.org/wiki/1974_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10869646-10.html.csv", "action": "unique", "sent": "only the collingwood vs. north melbourne game took place in victoria park .", "annotation": {"scope": "all", "row": "1", "col": "5", "col_other": "1,3", "criterion": "equal", "value": "victoria park", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "victoria park"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to victoria park .", "tostr": "filter_eq { all_rows ; venue ; victoria park }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; venue ; victoria park } }", "tointer": "select the rows whose venue record fuzzily matches to victoria park . there is only one such row in the table ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "victoria park"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to victoria park .", "tostr": "filter_eq { all_rows ; venue ; victoria park }"}, "home team"], "result": "collingwood", "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; victoria park } ; home team }"}, "collingwood"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; venue ; victoria park } ; home team } ; collingwood }", "tointer": "the home team record of this unqiue row is collingwood ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "victoria park"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to victoria park .", "tostr": "filter_eq { all_rows ; venue ; victoria park }"}, "away team"], "result": "north melbourne", "ind": 4, "tostr": "hop { filter_eq { all_rows ; venue ; victoria park } ; away team }"}, "north melbourne"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; venue ; victoria park } ; away team } ; north melbourne }", "tointer": "the away team record of this unqiue row is north melbourne ."}], "result": true, "ind": 6, "tostr": "and { eq { hop { filter_eq { all_rows ; venue ; victoria park } ; home team } ; collingwood } ; eq { hop { filter_eq { all_rows ; venue ; victoria park } ; away team } ; north melbourne } }", "tointer": "the home team record of this unqiue row is collingwood . the away team record of this unqiue row is north melbourne ."}], "result": true, "ind": 7, "tostr": "and { only { filter_eq { all_rows ; venue ; victoria park } } ; and { eq { hop { filter_eq { all_rows ; venue ; victoria park } ; home team } ; collingwood } ; eq { hop { filter_eq { all_rows ; venue ; victoria park } ; away team } ; north melbourne } } } = true", "tointer": "select the rows whose venue record fuzzily matches to victoria park . there is only one such row in the table . the home team record of this unqiue row is collingwood . the away team record of this unqiue row is north melbourne ."}, "logic_str": "and { only { filter_eq { all_rows ; venue ; victoria park } } ; and { eq { hop { filter_eq { all_rows ; venue ; victoria park } ; home team } ; collingwood } ; eq { hop { filter_eq { all_rows ; venue ; victoria park } ; away team } ; north melbourne } } } = true", "interpret": "select the rows whose venue record fuzzily matches to victoria park . there is only one such row in the table . the home team record of this unqiue row is collingwood . the away team record of this unqiue row is north melbourne .", "num_func": 10, "nid": 8, "g_ids": {"and_7": 7, "result_8": 8, "only_1": 1, "filter_str_eq_0": 0, "all_rows_9": 9, "venue_10": 10, "victoria park_11": 11, "and_6": 6, "str_eq_3": 3, "str_hop_2": 2, "home team_12": 12, "collingwood_13": 13, "str_eq_5": 5, "str_hop_4": 4, "away team_14": 14, "north melbourne_15": 15}, "g_ids_features": {"and_7": "and", "result_8": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_9": "all_rows", "venue_10": "venue", "victoria park_11": "victoria park", "and_6": "and", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "home team_12": "home team", "collingwood_13": "collingwood", "str_eq_5": "str_eq", "str_hop_4": "str_hop", "away team_14": "away team", "north melbourne_15": "north melbourne"}, "g_adj": {"and_7": [8], "result_8": [], "only_1": [7], "filter_str_eq_0": [1, 2, 4], "all_rows_9": [0], "venue_10": [0], "victoria park_11": [0], "and_6": [7], "str_eq_3": [6], "str_hop_2": [3], "home team_12": [2], "collingwood_13": [3], "str_eq_5": [6], "str_hop_4": [5], "away team_14": [4], "north melbourne_15": [5]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["collingwood", "12.10 ( 82 )", "north melbourne", "8.15 ( 63 )", "victoria park", "25892", "8 june 1974"], ["south melbourne", "9.13 ( 67 )", "richmond", "23.9 ( 147 )", "lake oval", "12054", "8 june 1974"], ["st kilda", "9.9 ( 63 )", "footscray", "11.10 ( 76 )", "moorabbin oval", "17667", "8 june 1974"], ["melbourne", "19.10 ( 124 )", "fitzroy", "13.15 ( 93 )", "mcg", "12414", "8 june 1974"], ["essendon", "9.14 ( 68 )", "carlton", "16.7 ( 103 )", "windy hill", "24436", "8 june 1974"], ["hawthorn", "14.13 ( 97 )", "geelong", "10.6 ( 66 )", "vfl park", "18562", "8 june 1974"]], "query": "and { only { filter_eq { all_rows ; venue ; victoria park } } ; and { eq { hop { filter_eq { all_rows ; venue ; victoria park } ; home team } ; collingwood } ; eq { hop { filter_eq { all_rows ; venue ; victoria park } ; away team } ; north melbourne } } } = true", "question": "only the collingwood vs. north melbourne game took place in victoria park ."}, {"topic": "1911 in brazilian football", "wiki": "https://en.wikipedia.org/wiki/1911_in_Brazilian_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15418823-1.html.csv", "action": "aggregation", "sent": "in 1911 in brazilian football , when the points is over 10 , the total against is 30 .", "annotation": {"scope": "subset", "col": "7", "type": "sum", "result": "30", "subset": {"col": "3", "criterion": "greater_than_eq", "value": "10"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_greater_eq", "args": ["all_rows", "points", "10"], "result": null, "ind": 0, "tostr": "filter_greater_eq { all_rows ; points ; 10 }", "tointer": "select the rows whose points record is greater than or equal to 10 ."}, "against"], "result": "30", "ind": 1, "tostr": "sum { filter_greater_eq { all_rows ; points ; 10 } ; against }"}, "30"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_greater_eq { all_rows ; points ; 10 } ; against } ; 30 } = true", "tointer": "select the rows whose points record is greater than or equal to 10 . the sum of the against record of these rows is 30 ."}, "logic_str": "round_eq { sum { filter_greater_eq { all_rows ; points ; 10 } ; against } ; 30 } = true", "interpret": "select the rows whose points record is greater than or equal to 10 . the sum of the against record of these rows is 30 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_greater_eq_0": 0, "all_rows_4": 4, "points_5": 5, "10_6": 6, "against_7": 7, "30_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_greater_eq_0": "filter_greater_eq", "all_rows_4": "all_rows", "points_5": "points", "10_6": "10", "against_7": "against", "30_8": "30"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_greater_eq_0": [1], "all_rows_4": [0], "points_5": [0], "10_6": [0], "against_7": [1], "30_8": [2]}, "table_header": ["position", "team", "points", "played", "drawn", "lost", "against", "difference"], "table_cont": [["1", "s\u00e3o paulo athletic", "15", "9", "1", "1", "15", "8"], ["2", "americano - sp", "11", "8", "1", "2", "15", "14"], ["3", "paulistano", "7", "9", "1", "5", "15", "2"], ["4", "germnia", "6", "9", "0", "6", "26", "- 12"], ["5", "ypiranga - sp", "5", "9", "1", "6", "28", "- 15"]], "query": "round_eq { sum { filter_greater_eq { all_rows ; points ; 10 } ; against } ; 30 } = true", "question": "in 1911 in brazilian football , when the points is over 10 , the total against is 30 ."}, {"topic": "claudia porwik", "wiki": "https://en.wikipedia.org/wiki/Claudia_Porwik", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15097001-5.html.csv", "action": "aggregation", "sent": "the average first round score of claudia porwik and her partner was about 4.6 .", "annotation": {"scope": "all", "col": "7", "type": "average", "result": "4.6", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "score in final"], "result": "4.6", "ind": 0, "tostr": "avg { all_rows ; score in final }"}, "4.6"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; score in final } ; 4.6 } = true", "tointer": "the average of the score in final record of all rows is 4.6 ."}, "logic_str": "round_eq { avg { all_rows ; score in final } ; 4.6 } = true", "interpret": "the average of the score in final record of all rows is 4.6 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "score in final_4": 4, "4.6_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "score in final_4": "score in final", "4.6_5": "4.6"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "score in final_4": [0], "4.6_5": [1]}, "table_header": ["outcome", "date", "tournament", "surface", "partner", "opponents in final", "score in final"], "table_cont": [["winner", "1 may 1988", "taranto , italy", "clay", "andrea betzner", "laura garrone helen kelesi", "6 - 1 , 6 - 2"], ["runner - up", "22 may 1988", "european open , switzerland", "clay", "maria lindstr\u00f6m", "christiane jolissaint dianne van rensburg", "1 - 6 , 3 - 6"], ["runner - up", "5 november 1989", "indianapolis , usa", "hard", "larisa savchenko", "katrina adams lori mcneil", "4 - 6 , 4 - 6"], ["winner", "25 august 1991", "schenectady , new york , usa", "hard", "rachel mcquillan", "nicole arendt shannan mccarthy", "6 - 2 , 6 - 4"], ["runner - up", "9 february 1992", "faber grand prix , essen , germany", "carpet", "sabine appelmans", "katerina maleeva barbara rittner", "5 - 7 , 3 - 6"], ["runner - up", "16 february 1992", "linz , austria", "hard ( i )", "raffaella reggi - concato", "miriam oremans monique kiene", "6 - 4 , 6 - 2"], ["winner", "29 august 1993", "schenectady , new york , usa", "hard", "rachel mcquillan", "florencia labat barbara rittner", "4 - 6 , 6 - 4 , 6 - 2"], ["winner", "17 october 1993", "montpellier , france", "carpet", "meredith mcgrath", "janette hus\u00e1rov\u00e1 dominique monami", "3 - 6 , 6 - 2 , 7 - 6"], ["winner", "8 january 1995", "jakarta , indonesia", "hard", "irina sp\u00eerlea", "laurence courtois nancy feber", "6 - 2 , 6 - 3"], ["winner", "30 september 1995", "china open , beijing , china", "hard", "linda wild", "stephanie rottier shi - ting wang", "6 - 1 , 6 - 0"]], "query": "round_eq { avg { all_rows ; score in final } ; 4.6 } = true", "question": "the average first round score of claudia porwik and her partner was about 4.6 ."}, {"topic": "naval campaign of the war of the pacific", "wiki": "https://en.wikipedia.org/wiki/Naval_Campaign_of_the_War_of_the_Pacific", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-23614702-2.html.csv", "action": "ordinal", "sent": "in the naval campaign of the war of the pacific , the warship that was built in the 2nd earliest year is covadonga .", "annotation": {"row": "5", "col": "6", "order": "2", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "built year", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; built year ; 2 }"}, "warship"], "result": "covadonga", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; built year ; 2 } ; warship }"}, "covadonga"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; built year ; 2 } ; warship } ; covadonga } = true", "tointer": "select the row whose built year record of all rows is 2nd minimum . the warship record of this row is covadonga ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; built year ; 2 } ; warship } ; covadonga } = true", "interpret": "select the row whose built year record of all rows is 2nd minimum . the warship record of this row is covadonga .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "built year_5": 5, "2_6": 6, "warship_7": 7, "covadonga_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "built year_5": "built year", "2_6": "2", "warship_7": "warship", "covadonga_8": "covadonga"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "built year_5": [0], "2_6": [0], "warship_7": [1], "covadonga_8": [2]}, "table_header": ["warship", "tons ( lton )", "horse - power", "speed ( knots )", "main artillery", "built year"], "table_cont": [["o'higgins", "1101", "300", "12", "3x115 - 2x70 - 2x12 - pounders", "1874"], ["chacabuco", "1101", "300", "11", "1x115 - 2x70 - 2x12 - pounders", "1874"], ["abtao", "1051", "300", "8", "3x115 - 3x30 - pounders", "1870"], ["magallanes", "772", "260", "115", "1x115 - 1x64 - 2x20 - pounders", "1874"], ["covadonga", "412", "140", "7", "2x70 - 3x40 - pounders", "1859"], ["esmeralda", "854", "200", "8", "16x32 - 2x12 - pounders", "1855"], ["uni\u00e3 cubicn", "1.150", "320", "13", "12x68 - 1x9 - pounders", "1864"]], "query": "eq { hop { nth_argmin { all_rows ; built year ; 2 } ; warship } ; covadonga } = true", "question": "in the naval campaign of the war of the pacific , the warship that was built in the 2nd earliest year is covadonga ."}, {"topic": "greg jones ( tennis )", "wiki": "https://en.wikipedia.org/wiki/Greg_Jones_%28tennis%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13244506-2.html.csv", "action": "majority", "sent": "greg jones ( tennis ) had a runner - up participation outcome in most of the listed tournaments .", "annotation": {"scope": "all", "col": "1", "most_or_all": "most", "criterion": "equal", "value": "runner - up", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "outcome", "runner - up"], "result": true, "ind": 0, "tointer": "for the outcome records of all rows , most of them fuzzily match to runner - up .", "tostr": "most_eq { all_rows ; outcome ; runner - up } = true"}, "logic_str": "most_eq { all_rows ; outcome ; runner - up } = true", "interpret": "for the outcome records of all rows , most of them fuzzily match to runner - up .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "outcome_3": 3, "runner - up_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "outcome_3": "outcome", "runner - up_4": "runner - up"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "outcome_3": [0], "runner - up_4": [0]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent", "score"], "table_cont": [["runner - up", "05.02.2007", "burnie challenger", "hard", "nathan healey", "5 - 7 , 4 - 6"], ["winner", "05.05.2008", "orange park usa", "clay", "clint thomson", "6 - 4 , 6 - 2"], ["runner - up", "14.07.2008", "great britain f10 , great britain", "clay", "michel koning", "4 - 6 , 3 - 6"], ["runner - up", "20.10.2008", "australia f10 , australia ,", "hard", "marinko matosevic", "1 - 6 , 6 - 7 3 - 7"], ["runner - up", "27.04.2009", "australia f3 , australia", "clay", "jose statham", "6 - 4 , 4 - 6 , 1 - 6"], ["winner", "04.05.2009", "australia f4 , australia", "clay", "jose statham", "7 - 5 , 7 - 6 ( 8 - 6 )"], ["runner - up", "01.02.2010", "burnie challenger", "hard", "bernard tomic", "6 - 4 , 6 - 2"], ["runner - up", "22.02.2010", "australia f2 , australia", "grass", "john millman", "6 - 1 , 4 - 6 , 4 - 6"], ["runner - up", "16.05.2011", "fergana challenger , uzbekistan", "hard", "dudi sela", "2 - 6 , 1 - 6"], ["runner - up", "01.07.2013", "mantra challenger , ecuador", "hard", "michael russell", "6 - 4 , 0 - 6 , 5 - 7"], ["winner", "07.10.2013", "australia f9 , australia", "hard", "jordan thompson", "3 - 6 , 7 - 5 , 6 - 1"]], "query": "most_eq { all_rows ; outcome ; runner - up } = true", "question": "greg jones ( tennis ) had a runner - up participation outcome in most of the listed tournaments ."}, {"topic": "1979 philadelphia eagles season", "wiki": "https://en.wikipedia.org/wiki/1979_Philadelphia_Eagles_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16677963-2.html.csv", "action": "superlative", "sent": "in the 1979 philadelphia eagles season , the largest crowd was in week 4 .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "4", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance }"}, "week"], "result": "4", "ind": 1, "tostr": "hop { argmax { all_rows ; attendance } ; week }"}, "4"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; attendance } ; week } ; 4 } = true", "tointer": "select the row whose attendance record of all rows is maximum . the week record of this row is 4 ."}, "logic_str": "eq { hop { argmax { all_rows ; attendance } ; week } ; 4 } = true", "interpret": "select the row whose attendance record of all rows is maximum . the week record of this row is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "week_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "week_6": "week", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "week_6": [1], "4_7": [2]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 2 , 1979", "new york giants", "w 23 - 17", "67366"], ["2", "september 10 , 1979", "atlanta falcons", "l 14 - 10", "66935"], ["3", "september 16 , 1979", "new orleans saints", "w 26 - 14", "54212"], ["4", "september 23 , 1979", "new york giants", "w 17 - 13", "74265"], ["5", "september 30 , 1979", "pittsburgh steelers", "w 17 - 14", "70352"], ["6", "october 7 , 1979", "washington redskins", "w 28 - 17", "69142"], ["7", "october 14 , 1979", "st louis cardinals", "w 24 - 20", "48367"], ["8", "october 21 , 1979", "washington redskins", "l 17 - 7", "54442"], ["9", "october 28 , 1979", "cincinnati bengals", "l 37 - 13", "42036"], ["10", "november 4 , 1979", "cleveland browns", "l 24 - 19", "69019"], ["11", "november 12 , 1979", "dallas cowboys", "w 31 - 21", "62417"], ["12", "november 18 , 1979", "st louis cardinals", "w 16 - 13", "70235"], ["13", "november 25 , 1979", "green bay packers", "w 21 - 10", "50023"], ["14", "december 2 , 1979", "detroit lions", "w 44 - 7", "66128"], ["15", "december 8 , 1979", "dallas cowboys", "l 24 - 17", "71434"], ["16", "december 16 , 1979", "houston oilers", "w 26 - 20", "49407"]], "query": "eq { hop { argmax { all_rows ; attendance } ; week } ; 4 } = true", "question": "in the 1979 philadelphia eagles season , the largest crowd was in week 4 ."}, {"topic": "list of australian test bowlers who have taken over 200 test wickets", "wiki": "https://en.wikipedia.org/wiki/List_of_Australian_Test_bowlers_who_have_taken_over_200_Test_wickets", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-18914438-1.html.csv", "action": "unique", "sent": "of the australian test bowlers who have taken over 200 test wickets , the only one with over 700 wickets is shane warne .", "annotation": {"scope": "all", "row": "1", "col": "7", "col_other": "1", "criterion": "greater_than", "value": "700", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "wickets", "700"], "result": null, "ind": 0, "tointer": "select the rows whose wickets record is greater than 700 .", "tostr": "filter_greater { all_rows ; wickets ; 700 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; wickets ; 700 } }", "tointer": "select the rows whose wickets record is greater than 700 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "wickets", "700"], "result": null, "ind": 0, "tointer": "select the rows whose wickets record is greater than 700 .", "tostr": "filter_greater { all_rows ; wickets ; 700 }"}, "name"], "result": "shane warne", "ind": 2, "tostr": "hop { filter_greater { all_rows ; wickets ; 700 } ; name }"}, "shane warne"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; wickets ; 700 } ; name } ; shane warne }", "tointer": "the name record of this unqiue row is shane warne ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; wickets ; 700 } } ; eq { hop { filter_greater { all_rows ; wickets ; 700 } ; name } ; shane warne } } = true", "tointer": "select the rows whose wickets record is greater than 700 . there is only one such row in the table . the name record of this unqiue row is shane warne ."}, "logic_str": "and { only { filter_greater { all_rows ; wickets ; 700 } } ; eq { hop { filter_greater { all_rows ; wickets ; 700 } ; name } ; shane warne } } = true", "interpret": "select the rows whose wickets record is greater than 700 . there is only one such row in the table . the name record of this unqiue row is shane warne .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "wickets_7": 7, "700_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "shane warne_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "wickets_7": "wickets", "700_8": "700", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "shane warne_10": "shane warne"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "wickets_7": [0], "700_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "shane warne_10": [3]}, "table_header": ["name", "career", "matches", "overs", "maidens", "runs", "wickets", "average", "best", "5w", "10w"], "table_cont": [["shane warne", "1992 - 2007", "145", "6784.1", "1762", "17995", "708", "25.42", "8 / 71", "37", "10"], ["glenn mcgrath", "1993 - 2007", "124", "4874.4", "1470", "12186", "563", "21.64", "8 / 24", "29", "3"], ["dennis lillee", "1971 - 1984", "70", "2834.1", "652", "8493", "355", "23.92", "7 / 83", "23", "7"], ["brett lee", "1999 - 2010", "76", "2755.1", "547", "9555", "310", "30.82", "5 / 30", "10", "0"], ["craig mcdermott", "1984 - 1996", "71", "2764.2", "583", "8332", "291", "28.63", "8 / 97", "14", "2"], ["jason gillespie", "1996 - 2006", "71", "2372.2", "630", "6770", "259", "26.14", "7 / 37", "8", "0"], ["richie benaud", "1952 - 1964", "63", "2727.2", "805", "6704", "248", "27.03", "7 / 72", "16", "1"], ["graham mckenzie", "1961 - 1971", "60", "2629.5", "547", "7328", "246", "29.79", "8 / 71", "16", "3"], ["ray lindwall", "1946 - 1960", "61", "1970.2", "419", "5251", "228", "23.03", "7 / 38", "12", "0"], ["clarrie grimmett", "1925 - 1936", "37", "2408.3", "736", "5231", "216", "24.22", "7 / 40", "21", "7"], ["merv hughes", "1985 - 1994", "53", "2047.3", "499", "6017", "212", "28.38", "8 / 87", "7", "1"], ["stuart macgill", "1998 - 2008", "44", "1872.5", "365", "6037", "208", "29.02", "8 / 108", "12", "2"], ["mitchell johnson", "2007 -", "50", "1870", "331", "6281", "205", "30.64", "8 / 61", "8", "0"]], "query": "and { only { filter_greater { all_rows ; wickets ; 700 } } ; eq { hop { filter_greater { all_rows ; wickets ; 700 } ; name } ; shane warne } } = true", "question": "of the australian test bowlers who have taken over 200 test wickets , the only one with over 700 wickets is shane warne ."}, {"topic": "government of hamburg", "wiki": "https://en.wikipedia.org/wiki/Government_of_Hamburg", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17159413-1.html.csv", "action": "count", "sent": "there are 2 center-left political parties in the government of hamburg .", "annotation": {"scope": "all", "criterion": "equal", "value": "centre - left", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "centre - left"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to centre - left .", "tostr": "filter_eq { all_rows ; position ; centre - left }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; position ; centre - left } }", "tointer": "select the rows whose position record fuzzily matches to centre - left . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; position ; centre - left } } ; 2 } = true", "tointer": "select the rows whose position record fuzzily matches to centre - left . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; position ; centre - left } } ; 2 } = true", "interpret": "select the rows whose position record fuzzily matches to centre - left . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "position_5": 5, "centre - left_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "position_5": "position", "centre - left_6": "centre - left", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "position_5": [0], "centre - left_6": [0], "2_7": [2]}, "table_header": ["name ( english )", "name ( german )", "abbr", "ideology", "position", "votes ( 2011 )", "seats in hamburgische b\u00fcrgerschaft"], "table_cont": [["social democratic party", "sozialdemokratische partei deutschlands", "spd", "social democracy", "centre - left", "48.4 %", "62"], ["christian democratic union", "christlich demokratische union", "cdu", "christian democracy", "centre - right", "21.9 %", "28"], ["alliance '90 / the greens", "b\u00fcndnis 90 / die gr\u00fcnen ( gal )", "b\u00fcndnis 90 / die gr\u00fcnen ( gal )", "green politics", "centre - left", "11.2 %", "14"], ["free democratic party", "freie demokratische partei", "fdp", "liberalism", "centre", "6.7 %", "9"], ["the left", "die linke", "die linke", "socialism eurocommunism", "left - wing", "6.4 %", "8"]], "query": "eq { count { filter_eq { all_rows ; position ; centre - left } } ; 2 } = true", "question": "there are 2 center-left political parties in the government of hamburg ."}, {"topic": "2007 - 08 football league one", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Football_League_One", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28181347-6.html.csv", "action": "count", "sent": "three managers in football league one departed their teams due to contract terminations .", "annotation": {"scope": "all", "criterion": "equal", "value": "contract terminated", "result": "3", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "manner of departure", "contract terminated"], "result": null, "ind": 0, "tointer": "select the rows whose manner of departure record fuzzily matches to contract terminated .", "tostr": "filter_eq { all_rows ; manner of departure ; contract terminated }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; manner of departure ; contract terminated } }", "tointer": "select the rows whose manner of departure record fuzzily matches to contract terminated . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; manner of departure ; contract terminated } } ; 3 } = true", "tointer": "select the rows whose manner of departure record fuzzily matches to contract terminated . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; manner of departure ; contract terminated } } ; 3 } = true", "interpret": "select the rows whose manner of departure record fuzzily matches to contract terminated . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "manner of departure_5": 5, "contract terminated_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "manner of departure_5": "manner of departure", "contract terminated_6": "contract terminated", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "manner of departure_5": [0], "contract terminated_6": [0], "3_7": [2]}, "table_header": ["team", "outgoing manager", "manner of departure", "date of vacancy", "replaced by", "date of appointment", "position in table"], "table_cont": [["carlisle united", "neil mcdonald", "contract terminated", "13 august 2007", "john ward", "2 october 2007", "8th"], ["gillingham", "ronnie jepson", "mutual consent", "9 september 2007", "mark stimson", "1 november 2007", "22nd"], ["port vale", "martin foyle", "mutual consent", "26 september 2007", "lee sinnott", "5 november 2007", "23rd"], ["cheltenham town", "john ward", "mutual consent ( hired by carlisle united )", "2 october 2007", "keith downing", "2 november 2007", "23rd"], ["millwall", "willie donachie", "contract terminated", "8 october 2007", "kenny jackett", "6 november 2007", "24th"], ["swindon town", "paul sturrock", "mutual consent ( hired by plymouth argyle )", "27 november 2007", "maurice malpas", "15 january 2008", "11th"], ["luton town", "kevin blackwell", "contract terminated", "16 january 2008", "mick harford", "16 january 2008", "22nd"], ["huddersfield town", "andy ritchie", "mutual consent", "1 april 2008", "stan ternent", "24 april 2008", "14th"]], "query": "eq { count { filter_eq { all_rows ; manner of departure ; contract terminated } } ; 3 } = true", "question": "three managers in football league one departed their teams due to contract terminations ."}, {"topic": "list of ultras of oceania", "wiki": "https://en.wikipedia.org/wiki/List_of_Ultras_of_Oceania", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-18946749-4.html.csv", "action": "superlative", "sent": "of the peaks on the north island the highest elevation is 2797 metres .", "annotation": {"scope": "subset", "col_superlative": "5", "row_superlative": "2", "value_mentioned": "yes", "max_or_min": "max", "other_col": "4", "subset": {"col": "4", "criterion": "equal", "value": "north island"}}, "logic": {"func": "eq", "args": [{"func": "max", "args": [{"func": "filter_str_eq", "args": ["all_rows", "island", "north island"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; island ; north island }", "tointer": "select the rows whose island record fuzzily matches to north island ."}, "elevation ( m )"], "result": "2797", "ind": 1, "tostr": "max { filter_eq { all_rows ; island ; north island } ; elevation ( m ) }", "tointer": "select the rows whose island record fuzzily matches to north island . the maximum elevation ( m ) record of these rows is 2797 ."}, "2797"], "result": true, "ind": 2, "tostr": "eq { max { filter_eq { all_rows ; island ; north island } ; elevation ( m ) } ; 2797 } = true", "tointer": "select the rows whose island record fuzzily matches to north island . the maximum elevation ( m ) record of these rows is 2797 ."}, "logic_str": "eq { max { filter_eq { all_rows ; island ; north island } ; elevation ( m ) } ; 2797 } = true", "interpret": "select the rows whose island record fuzzily matches to north island . the maximum elevation ( m ) record of these rows is 2797 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "max_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "island_5": 5, "north island_6": 6, "elevation (m)_7": 7, "2797_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "max_1": "max", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "island_5": "island", "north island_6": "north island", "elevation (m)_7": "elevation ( m )", "2797_8": "2797"}, "g_adj": {"eq_2": [3], "result_3": [], "max_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "island_5": [0], "north island_6": [0], "elevation (m)_7": [1], "2797_8": [2]}, "table_header": ["rank", "peak", "country", "island", "elevation ( m )", "prominence ( m )", "col ( m )"], "table_cont": [["1", "aoraki / mount cook", "new zealand", "south island", "3755", "3755", "0"], ["2", "mount ruapehu", "new zealand", "north island", "2797", "2797", "0"], ["3", "mount aspiring / tititea", "new zealand", "south island", "3033", "2471", "562"], ["4", "mount taranaki / egmont", "new zealand", "north island", "2518", "2308", "210"], ["5", "mount tutoko", "new zealand", "south island", "2723", "2191", "532"], ["6", "mount tapuaenuku", "new zealand", "south island", "2884", "2021", "863"], ["7", "single cone", "new zealand", "south island", "2319", "1969", "350"], ["8", "manakau", "new zealand", "south island", "2608", "1798", "810"], ["9", "mount taylor", "new zealand", "south island", "2333", "1636", "698"]], "query": "eq { max { filter_eq { all_rows ; island ; north island } ; elevation ( m ) } ; 2797 } = true", "question": "of the peaks on the north island the highest elevation is 2797 metres ."}, {"topic": "moby lines", "wiki": "https://en.wikipedia.org/wiki/Moby_Lines", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12053121-1.html.csv", "action": "majority", "sent": "the majority of moby lines ' ships were built in the 20th century .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "less_than", "value": "2000", "subset": null}, "logic": {"func": "most_less", "args": ["all_rows", "built", "2000"], "result": true, "ind": 0, "tointer": "for the built records of all rows , most of them are less than 2000 .", "tostr": "most_less { all_rows ; built ; 2000 } = true"}, "logic_str": "most_less { all_rows ; built ; 2000 } = true", "interpret": "for the built records of all rows , most of them are less than 2000 .", "num_func": 1, "nid": 1, "g_ids": {"most_less_0": 0, "result_1": 1, "all_rows_2": 2, "built_3": 3, "2000_4": 4}, "g_ids_features": {"most_less_0": "most_less", "result_1": "true", "all_rows_2": "all_rows", "built_3": "built", "2000_4": "2000"}, "g_adj": {"most_less_0": [1], "result_1": [], "all_rows_2": [0], "built_3": [0], "2000_4": [0]}, "table_header": ["ship", "built", "entered service", "route", "gross tonnage", "length", "width", "passengers", "vessels", "knots"], "table_cont": [["ms bastia", "1974", "1974", "santa teresa di gallura - bonifacio", "gt", "75 m", "13 m", "400", "100", "18"], ["ms giraglia", "1981", "1981", "piombino - cavo ( elba island )", "gt", "75 m", "13 m", "400", "100", "18"], ["ms moby ale", "1969", "1990", "piombino - portoferraio", "gt", "93 m", "16 m", "800", "160", "19 , 5"], ["ms moby vincent", "1974", "1990", "livorno-bastia", "gt", "120 m", "22 m", "1.600", "570", "17 , 5"], ["ms moby fantasy", "1976", "1992", "disarmed", "gt", "142 m", "22 m", "1.200", "400", "17"], ["ms moby baby", "1966", "1996", "piombino-portoferraio", "gt", "101 m", "18 m", "1.100", "100", "19"], ["ms moby love", "1975", "1998", "piombino-portoferraio", "gt", "115 m", "19 m", "1.200", "250", "21"], ["ms moby lally", "1974", "2000", "piombino-portoferraio", "gt", "119 m", "19 m", "1.150", "300", "17 , 5"], ["ms moby drea", "1975", "2003", "livorno-olbia olbia - genoa", "gt", "185 m", "27 m", "1.900", "500", "27"], ["ms moby otta", "1976", "2006", "genoa-olbia", "gt", "185 m", "27 m", "1.900", "500", "27"], ["ms moby tommy", "2002", "2007", "civitavecchia - olbia", "gt", "212 m", "25 m", "2.200", "1.000", "30"], ["ms moby aki", "2005", "2005", "livorno - olbia piombino - olbia", "gt", "175 m", "27 m", "2.200", "750", "29"], ["ms moby wonder", "2001", "2001", "livorno-olbia", "gt", "175 m", "27 m", "2.200", "750", "29"], ["ms moby corse", "1978", "2010", "genoa - bastia", "gt", "152 m", "25 m", "1.200", "450", "21"]], "query": "most_less { all_rows ; built ; 2000 } = true", "question": "the majority of moby lines ' ships were built in the 20th century ."}, {"topic": "1973 world championship tennis circuit", "wiki": "https://en.wikipedia.org/wiki/1973_World_Championship_Tennis_circuit", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29302711-13.html.csv", "action": "unique", "sent": "jan kode\u00e5 \u00a1 is the only person to win less than 25,000 usd in prize money .", "annotation": {"scope": "all", "row": "7", "col": "7", "col_other": "2", "criterion": "less_than", "value": "25000", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "prize money ( usd )", "25000"], "result": null, "ind": 0, "tointer": "select the rows whose prize money ( usd ) record is less than 25000 .", "tostr": "filter_less { all_rows ; prize money ( usd ) ; 25000 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; prize money ( usd ) ; 25000 } }", "tointer": "select the rows whose prize money ( usd ) record is less than 25000 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "prize money ( usd )", "25000"], "result": null, "ind": 0, "tointer": "select the rows whose prize money ( usd ) record is less than 25000 .", "tostr": "filter_less { all_rows ; prize money ( usd ) ; 25000 }"}, "name"], "result": "jan kode\u00e5 \u00a1", "ind": 2, "tostr": "hop { filter_less { all_rows ; prize money ( usd ) ; 25000 } ; name }"}, "jan kode\u00e5 \u00a1"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; prize money ( usd ) ; 25000 } ; name } ; jan kode\u00e5 \u00a1 }", "tointer": "the name record of this unqiue row is jan kode\u00e5 \u00a1 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_less { all_rows ; prize money ( usd ) ; 25000 } } ; eq { hop { filter_less { all_rows ; prize money ( usd ) ; 25000 } ; name } ; jan kode\u00e5 \u00a1 } } = true", "tointer": "select the rows whose prize money ( usd ) record is less than 25000 . there is only one such row in the table . the name record of this unqiue row is jan kode\u00e5 \u00a1 ."}, "logic_str": "and { only { filter_less { all_rows ; prize money ( usd ) ; 25000 } } ; eq { hop { filter_less { all_rows ; prize money ( usd ) ; 25000 } ; name } ; jan kode\u00e5 \u00a1 } } = true", "interpret": "select the rows whose prize money ( usd ) record is less than 25000 . there is only one such row in the table . the name record of this unqiue row is jan kode\u00e5 \u00a1 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_less_0": 0, "all_rows_6": 6, "prize money (usd)_7": 7, "25000_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "jan kode\u00e5\u00a1_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_6": "all_rows", "prize money (usd)_7": "prize money ( usd )", "25000_8": "25000", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "jan kode\u00e5\u00a1_10": "jan kode\u00e5 \u00a1"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_less_0": [1, 2], "all_rows_6": [0], "prize money (usd)_7": [0], "25000_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "jan kode\u00e5\u00a1_10": [3]}, "table_header": ["rk", "name", "country", "matches played", "matches won", "points", "prize money ( usd )"], "table_cont": [["1", "ken rosewall", "aus", "42", "34", "53", "66400"], ["2", "arthur ashe", "usa", "36", "26", "41", "63150"], ["3", "marty riessen", "usa", "36", "26", "35", "47200"], ["4", "roger taylor", "gbr", "31", "21", "34", "42800"], ["4", "mark cox", "gbr", "33", "23", "34", "31950"], ["6", "brian fairlie", "aus", "32", "22", "33", "30900"], ["7", "jan kode\u00e5 \u00a1", "tch", "27", "19", "28", "23800"], ["8", "tom okker", "ned", "29", "19", "25", "34400"], ["9", "roscoe tanner", "usa", "27", "16", "24", "25250"]], "query": "and { only { filter_less { all_rows ; prize money ( usd ) ; 25000 } } ; eq { hop { filter_less { all_rows ; prize money ( usd ) ; 25000 } ; name } ; jan kode\u00e5 \u00a1 } } = true", "question": "jan kode\u00e5 \u00a1 is the only person to win less than 25,000 usd in prize money ."}, {"topic": "saori obata", "wiki": "https://en.wikipedia.org/wiki/Saori_Obata", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11695454-2.html.csv", "action": "ordinal", "sent": "the 2nd to last tournament for saori obata was in augusta , united states .", "annotation": {"row": "4", "col": "1", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "date", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; date ; 2 }"}, "tournament"], "result": "augusta , united states", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; date ; 2 } ; tournament }"}, "augusta , united states"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; date ; 2 } ; tournament } ; augusta , united states } = true", "tointer": "select the row whose date record of all rows is 2nd maximum . the tournament record of this row is augusta , united states ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; date ; 2 } ; tournament } ; augusta , united states } = true", "interpret": "select the row whose date record of all rows is 2nd maximum . the tournament record of this row is augusta , united states .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "date_5": 5, "2_6": 6, "tournament_7": 7, "augusta , united states_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "date_5": "date", "2_6": "2", "tournament_7": "tournament", "augusta , united states_8": "augusta , united states"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "date_5": [0], "2_6": [0], "tournament_7": [1], "augusta , united states_8": [2]}, "table_header": ["date", "tournament", "surface", "opponent in the final", "score"], "table_cont": [["november 18 , 2001", "port pirie , australia", "hard", "pavlina nola", "6 - 1 , 6 - 2"], ["november 25 , 2001", "nuriootpa , australia", "hard", "yoon - jeong cho", "6 - 4 , 6 - 1"], ["may 11 , 2003", "fukuoka , japan", "clay", "maria elena camerin", "2 - 6 , 6 - 3 , 6 - 3"], ["april 3 , 2005", "augusta , united states", "hard", "victoria azarenka", "6 - 2 , 6 - 2"], ["may 8 , 2005", "gifu , japan", "hard", "shiho hisamatsu", "6 - 1 , 2 - 6 , 6 - 4"]], "query": "eq { hop { nth_argmax { all_rows ; date ; 2 } ; tournament } ; augusta , united states } = true", "question": "the 2nd to last tournament for saori obata was in augusta , united states ."}, {"topic": "florida collegiate summer league", "wiki": "https://en.wikipedia.org/wiki/Florida_Collegiate_Summer_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18373863-2.html.csv", "action": "aggregation", "sent": "on average , florida collegiate summer league players who were drafted from 2006 to 2012 were drafted in the 3rd-4th round .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "3.7", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "round"], "result": "3.7", "ind": 0, "tostr": "avg { all_rows ; round }"}, "3.7"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; round } ; 3.7 } = true", "tointer": "the average of the round record of all rows is 3.7 ."}, "logic_str": "round_eq { avg { all_rows ; round } ; 3.7 } = true", "interpret": "the average of the round record of all rows is 3.7 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "round_4": 4, "3.7_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "round_4": "round", "3.7_5": "3.7"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "round_4": [0], "3.7_5": [1]}, "table_header": ["player", "fcsl team", "years played", "year drafted", "round", "mlb team"], "table_cont": [["mike mcclendon", "winter park", "2006", "2006", "10th", "milwaukee brewers"], ["corey brown", "orlando shockers", "2006", "2007", "1st", "oakland athletics"], ["jonathan lucroy", "sanford", "2005 06", "2007", "3rd", "milwaukee brewers"], ["alan farina", "orlando shockers", "2005", "2007", "3rd", "toronto blue jays"], ["jonathan holt", "leesburg", "2006 - 2007", "2007", "5th", "cleveland indians"], ["dee gordon", "belleview", "2008", "2008", "4th", "los angeles dodgers"], ["mycal jones", "leesburg", "2007 - 2008", "2009", "4th", "atlanta braves"], ["kent matthes", "winter pines", "2008", "2009", "4th", "colorado rockies"], ["thomas berryhill", "deland", "2008", "2009", "5th", "atlanta braves"], ["jimmy nelson", "deland", "2009", "2010", "2nd", "milwaukee brewers"], ["dante bichette jr", "winter park", "2011", "2011", "1st", "new york yankees"], ["peter o'brien", "deland", "2010", "2012", "2nd", "new york yankees"], ["brandon thomas", "sanford", "2010", "2012", "4th", "pittsburgh pirates"], ["tucker donahue", "winter park", "2010", "2012", "4th", "toronto blue jays"]], "query": "round_eq { avg { all_rows ; round } ; 3.7 } = true", "question": "on average , florida collegiate summer league players who were drafted from 2006 to 2012 were drafted in the 3rd-4th round ."}, {"topic": "great northeast athletic conference", "wiki": "https://en.wikipedia.org/wiki/Great_Northeast_Athletic_Conference", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1973816-1.html.csv", "action": "aggregation", "sent": "the average enrollment of schools in the great northeast athletic conference is 3284 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "3284", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "enrollment"], "result": "3284", "ind": 0, "tostr": "avg { all_rows ; enrollment }"}, "3284"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; enrollment } ; 3284 } = true", "tointer": "the average of the enrollment record of all rows is 3284 ."}, "logic_str": "round_eq { avg { all_rows ; enrollment } ; 3284 } = true", "interpret": "the average of the enrollment record of all rows is 3284 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "enrollment_4": 4, "3284_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "enrollment_4": "enrollment", "3284_5": "3284"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "enrollment_4": [0], "3284_5": [1]}, "table_header": ["institution", "location", "nickname", "founded", "type", "enrollment", "joined"], "table_cont": [["albertus magnus college", "new haven , connecticut", "falcons", "1925", "private ( catholic )", "1769", "1995"], ["anna maria college", "paxton , massachusetts", "amcats", "1946", "private ( catholic )", "1244", "2011"], ["emmanuel college 2", "boston , massachusetts", "saints", "1919", "private ( catholic )", "2350", "1995"], ["johnson & wales university", "providence , rhode island", "wildcats", "1914", "private", "16000", "1995"], ["lasell college", "newton , massachusetts", "lasers", "1851", "private", "1200", "2007"], ["mount ida college", "newton , massachusetts", "mustangs", "1899", "private", "1300", "2007"], ["norwich university", "northfield , vermont", "cadets", "1819", "private ( military )", "3000", "1998"], ["rivier university", "nashua , new hampshire", "raiders", "1933", "private ( catholic )", "2300", "1995"], ["university of saint joseph 1", "west hartford , connecticut", "blue jays", "1932", "private ( catholic )", "1020", "1995"], ["saint joseph 's college of maine", "standish , maine", "monks", "1912", "private ( catholic )", "1034", "2007"], ["simmons college 1", "boston , massachusetts", "sharks", "1899", "private", "4912", "1995"]], "query": "round_eq { avg { all_rows ; enrollment } ; 3284 } = true", "question": "the average enrollment of schools in the great northeast athletic conference is 3284 ."}, {"topic": "sanya", "wiki": "https://en.wikipedia.org/wiki/Sanya", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1638437-2.html.csv", "action": "superlative", "sent": "hedong district is the area of the city sanya that has the highest population .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "population"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; population }"}, "english name"], "result": "hedong district", "ind": 1, "tostr": "hop { argmax { all_rows ; population } ; english name }"}, "hedong district"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; population } ; english name } ; hedong district } = true", "tointer": "select the row whose population record of all rows is maximum . the english name record of this row is hedong district ."}, "logic_str": "eq { hop { argmax { all_rows ; population } ; english name } ; hedong district } = true", "interpret": "select the row whose population record of all rows is maximum . the english name record of this row is hedong district .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "population_5": 5, "english name_6": 6, "hedong district_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "population_5": "population", "english name_6": "english name", "hedong district_7": "hedong district"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "population_5": [0], "english name_6": [1], "hedong district_7": [2]}, "table_header": ["english name", "simplified", "traditional", "pinyin", "area", "population", "density"], "table_cont": [["hexi district", "\u6cb3\u897f\u533a", "\u6cb3\u897f\u5340", "h\u00e9x\u012b q\u016b", "10", "134026", "13403"], ["hedong district", "\u6cb3\u4e1c\u533a", "\u6cb3\u6771\u5340", "h\u00e9d\u014dng q\u016b", "35", "147944", "4227"], ["haitangwan", "\u6d77\u68e0\u6e7e\u9547", "\u6d77\u68e0\u7063\u93ae", "h\u01ceit\u00e1ngw\u0101n zh\u00e8n", "254", "44617", "176"], ["jiyang", "\u5409\u9633\u9547", "\u5409\u967d\u93ae", "j\u00edy\u00e1ng zh\u00e8n", "199", "92316", "464"], ["fenghuang", "\u51e4\u51f0\u9547", "\u9cf3\u51f0\u93ae", "f\u00e8nghu\u00e1ng zh\u00e8n", "487", "66801", "137"], ["yacheng", "\u5d16\u57ce\u9547", "\u5d16\u57ce\u93ae", "y\u00e1ch\u00e9ng zh\u00e8n", "383", "74779", "195"], ["tianya", "\u5929\u6daf\u9547", "\u5929\u6daf\u93ae", "ti\u0101ny\u00e1 zh\u00e8n", "269", "34934", "130"], ["yucai", "\u80b2\u624d\u9547", "\u80b2\u624d\u93ae", "y\u00f9c\u00e1i zh\u00e8n", "315", "17515", "56"], ["nantian farm", "\u56fd\u8425\u5357\u7530\u519c\u573a", "\u570b\u71df\u5357\u7530\u8fb2\u5834", "gu\u00f3y\u00edng n\u00e1nti\u00e1n n\u00f3ngch\u01ceng", "nd", "24280", "nd"], ["nanxin farm", "\u56fd\u8425\u5357\u65b0\u519c\u573a", "\u570b\u71df\u5357\u65b0\u8fb2\u5834", "gu\u00f3y\u00edng n\u00e1nx\u012bn n\u00f3ngch\u01ceng", "nd", "16801", "nd"], ["licai farm", "\u56fd\u8425\u7acb\u624d\u519c\u573a", "\u570b\u71df\u7acb\u624d\u8fb2\u5834", "gu\u00f3y\u00edng l\u00ecc\u00e1i n\u00f3ngch\u01ceng", "nd", "16659", "nd"]], "query": "eq { hop { argmax { all_rows ; population } ; english name } ; hedong district } = true", "question": "hedong district is the area of the city sanya that has the highest population ."}, {"topic": "2006 - 07 ta\u00e7a de portugal", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_Ta%C3%A7a_de_Portugal", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10287593-1.html.csv", "action": "count", "sent": "two of the rounds took place in september 2006 .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "september 2006", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date ( s )", "september 2006"], "result": null, "ind": 0, "tointer": "select the rows whose date ( s ) record fuzzily matches to september 2006 .", "tostr": "filter_eq { all_rows ; date ( s ) ; september 2006 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; date ( s ) ; september 2006 } }", "tointer": "select the rows whose date ( s ) record fuzzily matches to september 2006 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; date ( s ) ; september 2006 } } ; 2 } = true", "tointer": "select the rows whose date ( s ) record fuzzily matches to september 2006 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; date ( s ) ; september 2006 } } ; 2 } = true", "interpret": "select the rows whose date ( s ) record fuzzily matches to september 2006 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date (s)_5": 5, "september 2006_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date (s)_5": "date ( s )", "september 2006_6": "september 2006", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date (s)_5": [0], "september 2006_6": [0], "2_7": [2]}, "table_header": ["round", "date ( s )", "clubs from the previous round", "clubs involved", "fixtures"], "table_cont": [["first round", "3 september 2006", "none", "127", "60"], ["second round", "24 september 2006", "60 winners from the first round", "122", "56"], ["third round", "11 - 12 november 2006", "56 winners from the second round", "81", "40"], ["fourth round", "21 december 2006 6 - 7 january 2007", "40 winners from third round", "57", "28"], ["fifth round", "21 january 2007", "28 winners from fourth round", "27", "13"], ["sixth round", "10 february 2007", "13 winners from fifth round", "15", "7"], ["quarter - finals", "28 february 2006 25 march 2007", "7 winners from sixth round", "8", "4"], ["semi - finals", "18 - 19 april 2007", "4 winners from the quarterfinals", "4", "2"], ["final", "27 may 2007", "2 winners from the semifinals", "2", "1"]], "query": "eq { count { filter_eq { all_rows ; date ( s ) ; september 2006 } } ; 2 } = true", "question": "two of the rounds took place in september 2006 ."}, {"topic": "sweden in the eurovision song contest 1997", "wiki": "https://en.wikipedia.org/wiki/Sweden_in_the_Eurovision_Song_Contest_1997", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13594823-1.html.csv", "action": "aggregation", "sent": "the total number of points scored by swedish artists in the 1997 eurovision song contest is 473 .", "annotation": {"scope": "all", "col": "4", "type": "sum", "result": "473", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "points"], "result": "473", "ind": 0, "tostr": "sum { all_rows ; points }"}, "473"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; points } ; 473 } = true", "tointer": "the sum of the points record of all rows is 473 ."}, "logic_str": "round_eq { sum { all_rows ; points } ; 473 } = true", "interpret": "the sum of the points record of all rows is 473 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "points_4": 4, "473_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "points_4": "points", "473_5": "473"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "points_4": [0], "473_5": [1]}, "table_header": ["draw", "artist", "song", "points", "place"], "table_cont": [["1", "monia sj\u00f6str\u00f6m", "nu idag", "11", "11th"], ["2", "photogenique", "nattens \u00e4nglar", "0", "12th"], ["3", "robert randqvist", "hand i hand", "55", "5th"], ["4", "n - mix", "d\u00e4r en \u00e4ngel h\u00e4lsat p\u00e5", "68", "2nd"], ["5", "jim jidhed", "charlie", "12", "10th"], ["6", "nick borgen", "world wide web", "26", "9th"], ["7", "andreas lundstedt", "jag saknar dig , jag saknar dig", "32", "7th"], ["8", "garmarna", "en g\u00e5ng ska han gr\u00e5ta", "28", "8th"], ["9", "big", "jag skall aldrig l\u00e4mna dig", "40", "6th"], ["10", "wille craaford", "missarna", "65", "3rd"], ["11", "cajsalisa ejemyr", "du g\u00f6r mig hel igen", "56", "4th"], ["12", "blond", "bara hon \u00e4lskar mig", "80", "1st"]], "query": "round_eq { sum { all_rows ; points } ; 473 } = true", "question": "the total number of points scored by swedish artists in the 1997 eurovision song contest is 473 ."}, {"topic": "grado labs", "wiki": "https://en.wikipedia.org/wiki/Grado_Labs", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1601027-1.html.csv", "action": "unique", "sent": "the gs1000i model headphone is the only headphone by grado labs with circumaural bowl type earpads .", "annotation": {"scope": "all", "row": "9", "col": "5", "col_other": "1", "criterion": "equal", "value": "circumaural bowl", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "earpads", "circumaural bowl"], "result": null, "ind": 0, "tointer": "select the rows whose earpads record fuzzily matches to circumaural bowl .", "tostr": "filter_eq { all_rows ; earpads ; circumaural bowl }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; earpads ; circumaural bowl } }", "tointer": "select the rows whose earpads record fuzzily matches to circumaural bowl . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "earpads", "circumaural bowl"], "result": null, "ind": 0, "tointer": "select the rows whose earpads record fuzzily matches to circumaural bowl .", "tostr": "filter_eq { all_rows ; earpads ; circumaural bowl }"}, "headphone model"], "result": "gs1000i", "ind": 2, "tostr": "hop { filter_eq { all_rows ; earpads ; circumaural bowl } ; headphone model }"}, "gs1000i"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; earpads ; circumaural bowl } ; headphone model } ; gs1000i }", "tointer": "the headphone model record of this unqiue row is gs1000i ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; earpads ; circumaural bowl } } ; eq { hop { filter_eq { all_rows ; earpads ; circumaural bowl } ; headphone model } ; gs1000i } } = true", "tointer": "select the rows whose earpads record fuzzily matches to circumaural bowl . there is only one such row in the table . the headphone model record of this unqiue row is gs1000i ."}, "logic_str": "and { only { filter_eq { all_rows ; earpads ; circumaural bowl } } ; eq { hop { filter_eq { all_rows ; earpads ; circumaural bowl } ; headphone model } ; gs1000i } } = true", "interpret": "select the rows whose earpads record fuzzily matches to circumaural bowl . there is only one such row in the table . the headphone model record of this unqiue row is gs1000i .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "earpads_7": 7, "circumaural bowl_8": 8, "str_eq_3": 3, "str_hop_2": 2, "headphone model_9": 9, "gs1000i_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "earpads_7": "earpads", "circumaural bowl_8": "circumaural bowl", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "headphone model_9": "headphone model", "gs1000i_10": "gs1000i"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "earpads_7": [0], "circumaural bowl_8": [0], "str_eq_3": [4], "str_hop_2": [3], "headphone model_9": [2], "gs1000i_10": [3]}, "table_header": ["headphone model", "headphone class", "driver - matched db", "construction", "earpads", "termination", "us msrp"], "table_cont": [["igrado", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug", "49"], ["sr60i", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug with 1 / 4 adaptor", "79"], ["sr80i", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug with 1 / 4 adaptor", "99"], ["sr125i", "prestige", "0.1", "plastic", "comfort pads", "1 / 4 ( 6.5 mm ) plug", "150"], ["sr225i", "prestige", "0.05", "plastic", "bowls", "1 / 4 ( 6.5 mm ) plug", "200"], ["sr325is", "prestige", "0.05", "aluminum alloy / plastic inner sleeve", "bowls", "1 / 4 ( 6.5 mm ) plug", "295"], ["rs2i", "reference", "0.05", "hand - crafted mahogany", "bowls", "1 / 4 ( 6.5 mm ) plug", "495"], ["rs1i", "reference", "0.05", "hand - crafted mahogany", "bowls", "1 / 4 ( 6.5 mm ) plug", "695"], ["gs1000i", "statement", "0.05", "hand - crafted mahogany", "circumaural bowls", "1 / 4 ( 6.5 mm ) plug", "995"], ["ps500", "professional", "0.05", "hand - crafted mahogany / aluminum", "bowls", "1 / 4 ( 6.5 mm ) plug", "595"]], "query": "and { only { filter_eq { all_rows ; earpads ; circumaural bowl } } ; eq { hop { filter_eq { all_rows ; earpads ; circumaural bowl } ; headphone model } ; gs1000i } } = true", "question": "the gs1000i model headphone is the only headphone by grado labs with circumaural bowl type earpads ."}, {"topic": "list of awards and nominations received by ren\u00e9e zellweger", "wiki": "https://en.wikipedia.org/wiki/List_of_awards_and_nominations_received_by_Ren%C3%A9e_Zellweger", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18747538-3.html.csv", "action": "unique", "sent": "ren\u00e9e zellweger was only selected in the best supporting actress category once .", "annotation": {"scope": "all", "row": "4", "col": "2", "col_other": "n/a", "criterion": "equal", "value": "best supporting actress", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "category", "best supporting actress"], "result": null, "ind": 0, "tointer": "select the rows whose category record fuzzily matches to best supporting actress .", "tostr": "filter_eq { all_rows ; category ; best supporting actress }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; category ; best supporting actress } } = true", "tointer": "select the rows whose category record fuzzily matches to best supporting actress . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; category ; best supporting actress } } = true", "interpret": "select the rows whose category record fuzzily matches to best supporting actress . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "category_4": 4, "best supporting actress_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "category_4": "category", "best supporting actress_5": "best supporting actress"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "category_4": [0], "best supporting actress_5": [0]}, "table_header": ["year", "category", "film", "result", "lost to"], "table_cont": [["2000", "best actress - musical or comedy", "nurse betty", "won", "-"], ["2001", "best actress - musical or comedy", "bridget jones 's diary", "nominated", "nicole kidman ( moulin rouge ! )"], ["2002", "best actress - musical or comedy", "chicago", "won", "-"], ["2003", "best supporting actress", "cold mountain", "won", "-"], ["2004", "best actress - musical or comedy", "bridget jones : the edge of reason", "nominated", "annette bening ( being julia )"], ["2006", "best actress - musical or comedy", "miss potter", "nominated", "meryl streep ( the devil wears prada )"]], "query": "only { filter_eq { all_rows ; category ; best supporting actress } } = true", "question": "ren\u00e9e zellweger was only selected in the best supporting actress category once ."}, {"topic": "1984 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1984_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17231267-5.html.csv", "action": "superlative", "sent": "hale irwin was ranked the highest at the 1984 u.s. open .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "place"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; place }"}, "player"], "result": "hale irwin", "ind": 1, "tostr": "hop { argmin { all_rows ; place } ; player }"}, "hale irwin"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; place } ; player } ; hale irwin } = true", "tointer": "select the row whose place record of all rows is minimum . the player record of this row is hale irwin ."}, "logic_str": "eq { hop { argmin { all_rows ; place } ; player } ; hale irwin } = true", "interpret": "select the row whose place record of all rows is minimum . the player record of this row is hale irwin .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "place_5": 5, "player_6": 6, "hale irwin_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "place_5": "place", "player_6": "player", "hale irwin_7": "hale irwin"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "place_5": [0], "player_6": [1], "hale irwin_7": [2]}, "table_header": ["place", "player", "country", "score", "to par"], "table_cont": [["1", "hale irwin", "united states", "68 + 68 + 69 = 205", "- 5"], ["2", "fuzzy zoeller", "united states", "71 + 66 + 69 = 206", "- 4"], ["3", "greg norman", "australia", "70 + 68 + 69 = 207", "- 3"], ["4", "jim thorpe", "united states", "68 + 71 + 70 = 209", "- 1"], ["5", "tim simpson", "united states", "72 + 71 + 68 = 211", "+ 1"], ["t6", "morris hatalsky", "united states", "70 + 73 + 69 = 212", "+ 2"], ["t6", "johnny miller", "united states", "74 + 68 + 70 = 212", "+ 2"], ["t6", "jack nicklaus", "united states", "71 + 71 + 70 = 212", "+ 2"], ["t6", "lee trevino", "united states", "71 + 72 + 69 = 212", "+ 2"], ["t10", "david graham", "australia", "71 + 72 + 70 = 213", "+ 3"], ["t10", "curtis strange", "united states", "69 + 66 + 77 = 213", "+ 3"], ["t10", "mike sullivan", "united states", "70 + 73 + 70 = 213", "+ 3"]], "query": "eq { hop { argmin { all_rows ; place } ; player } ; hale irwin } = true", "question": "hale irwin was ranked the highest at the 1984 u.s. open ."}, {"topic": "1992 toronto blue jays season", "wiki": "https://en.wikipedia.org/wiki/1992_Toronto_Blue_Jays_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12206491-10.html.csv", "action": "ordinal", "sent": "the event on october 21 had the second highest attendance of all the games .", "annotation": {"row": "4", "col": "5", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 2 }"}, "date"], "result": "october 21", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 2 } ; date }"}, "october 21"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 21 } = true", "tointer": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is october 21 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 21 } = true", "interpret": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is october 21 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "2_6": 6, "date_7": 7, "october 21_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "2_6": "2", "date_7": "date", "october 21_8": "october 21"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "2_6": [0], "date_7": [1], "october 21_8": [2]}, "table_header": ["date", "opponent", "score", "loss", "attendance", "series"], "table_cont": [["october 17", "braves", "3 - 1", "morris ( 0 - 1 )", "51763", "0 - 1"], ["october 18", "braves", "5 - 4", "reardon ( 0 - 1 )", "51763", "1 - 1"], ["october 20", "braves", "3 - 2", "avery ( 0 - 1 )", "51813", "2 - 1"], ["october 21", "braves", "2 - 1", "glavine ( 1 - 1 )", "52090", "3 - 1"], ["october 22", "braves", "7 - 2", "morris ( 0 - 2 )", "52268", "3 - 2"], ["october 24", "braves", "4 - 3 ( 11 )", "leibrandt ( 0 - 1 )", "51763", "4 - 2"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 21 } = true", "question": "the event on october 21 had the second highest attendance of all the games ."}, {"topic": "2008 - 09 detroit red wings season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Detroit_Red_Wings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17371135-13.html.csv", "action": "superlative", "sent": "in the 2008-09 detroit red wings season , the highest attendance occurred on may 22nd .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance }"}, "date"], "result": "may 22", "ind": 1, "tostr": "hop { argmax { all_rows ; attendance } ; date }"}, "may 22"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; attendance } ; date } ; may 22 } = true", "tointer": "select the row whose attendance record of all rows is maximum . the date record of this row is may 22 ."}, "logic_str": "eq { hop { argmax { all_rows ; attendance } ; date } ; may 22 } = true", "interpret": "select the row whose attendance record of all rows is maximum . the date record of this row is may 22 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "date_6": 6, "may 22_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "date_6": "date", "may 22_7": "may 22"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "date_6": [1], "may 22_7": [2]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "series"], "table_cont": [["may 17", "chicago", "2 - 5", "detroit", "osgood", "20066", "1 - 0"], ["may 19", "chicago", "2 - 3", "detroit", "osgood", "20066", "2 - 0"], ["may 22", "detroit", "3 - 4", "chicago", "osgood", "22678", "2 - 1"], ["may 24", "detroit", "6 - 1", "chicago", "conklin", "22663", "3 - 1"], ["may 27", "chicago", "1 - 2", "detroit", "osgood", "20066", "4 - 1"]], "query": "eq { hop { argmax { all_rows ; attendance } ; date } ; may 22 } = true", "question": "in the 2008-09 detroit red wings season , the highest attendance occurred on may 22nd ."}, {"topic": "napa auto parts 200", "wiki": "https://en.wikipedia.org/wiki/NAPA_Auto_Parts_200", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10716893-3.html.csv", "action": "count", "sent": "there were two years where allen bestwick did the lap by lap for the napa auto parts 200 .", "annotation": {"scope": "all", "criterion": "equal", "value": "allen bestwick", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "host", "allen bestwick"], "result": null, "ind": 0, "tointer": "select the rows whose host record fuzzily matches to allen bestwick .", "tostr": "filter_eq { all_rows ; host ; allen bestwick }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; host ; allen bestwick } }", "tointer": "select the rows whose host record fuzzily matches to allen bestwick . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; host ; allen bestwick } } ; 2 } = true", "tointer": "select the rows whose host record fuzzily matches to allen bestwick . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; host ; allen bestwick } } ; 2 } = true", "interpret": "select the rows whose host record fuzzily matches to allen bestwick . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "host_5": 5, "allen bestwick_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "host_5": "host", "allen bestwick_6": "allen bestwick", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "host_5": [0], "allen bestwick_6": [0], "2_7": [2]}, "table_header": ["year", "network", "host", "pre - race analyst", "lap - by - lap", "color commentator ( s )", "pit reporters"], "table_cont": [["2012", "espn", "shannon spake", "n / a", "marty reid", "ricky craven", "rick debruhl jim noble shannon spake"], ["2011", "espn", "marty reid", "n / a", "marty reid", "rusty wallace ricky craven", "rick debruhl jim noble shannon spake"], ["2010", "espn2", "allen bestwick", "n / a", "allen bestwick", "andy petree rusty wallace", "mike massaro vince welch shannon spake"], ["2009", "espn2", "shannon spake", "n / a", "marty reid", "andy petree rusty wallace", "dave burns jamie little shannon spake"], ["2008", "espn2", "jack arute", "n / a", "marty reid", "randy lajoie rusty wallace", "jack arute vince welch mike massaro"], ["2007", "espn2", "allen bestwick", "n / a", "allen bestwick", "randy lajoie", "marty smith vince welch gary gerould"]], "query": "eq { count { filter_eq { all_rows ; host ; allen bestwick } } ; 2 } = true", "question": "there were two years where allen bestwick did the lap by lap for the napa auto parts 200 ."}, {"topic": "list of museums in montana", "wiki": "https://en.wikipedia.org/wiki/List_of_museums_in_Montana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15104400-2.html.csv", "action": "majority", "sent": "all of the museums in montana are located on a dinosaur trail .", "annotation": {"scope": "all", "col": "4", "most_or_all": "all", "criterion": "fuzzily_match", "value": "yes", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "on dinosaur trail", "yes"], "result": true, "ind": 0, "tointer": "for the on dinosaur trail records of all rows , all of them fuzzily match to yes .", "tostr": "all_eq { all_rows ; on dinosaur trail ; yes } = true"}, "logic_str": "all_eq { all_rows ; on dinosaur trail ; yes } = true", "interpret": "for the on dinosaur trail records of all rows , all of them fuzzily match to yes .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "on dinosaur trail_3": 3, "yes_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "on dinosaur trail_3": "on dinosaur trail", "yes_4": "yes"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "on dinosaur trail_3": [0], "yes_4": [0]}, "table_header": ["name", "town / city", "region", "on dinosaur trail", "education programs / guided tours", "associated field digs"], "table_cont": [["blaine county museum", "chinook", "north central", "yes", "no", "no"], ["carter county museum", "ekalaka", "southeast", "yes", "no", "no"], ["fort peck field station of paleontology", "fort peck", "northeast", "yes", "yes", "no"], ["fort peck interpretive center and museum", "fort peck", "northeast", "yes", "yes", "no"], ["garfield county museum", "jordan", "northeast", "yes", "no", "yes"], ["great plains dinosaur museum and field station", "malta", "northeast", "yes", "yes", "yes"], ["h earl clack memorial museum", "havre", "north central", "yes", "no", "no"], ["makoshika state park", "glendive", "southeast", "yes", "yes", "no"], ["makoshika dinosaur museum", "glendive", "southeast", "yes", "yes", "yes"], ["museum of the rockies", "bozeman", "south central", "yes", "yes", "no"], ["old trail museum", "choteau", "north central", "yes", "no", "no"], ["phillips county museum", "malta", "northeast", "yes", "no", "no"], ["rudyard depot museum", "rudyard", "north central", "yes", "no", "no"], ["two medicine dinosaur center", "bynum", "north central", "yes", "yes", "yes"], ["upper musselshell museum", "harlowton", "south central", "yes", "no", "no"]], "query": "all_eq { all_rows ; on dinosaur trail ; yes } = true", "question": "all of the museums in montana are located on a dinosaur trail ."}, {"topic": "1966 vfl season", "wiki": "https://en.wikipedia.org/wiki/1966_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10808089-14.html.csv", "action": "aggregation", "sent": "on july 30th , 1966 during the 1966 vfl season there were 149299 attendees .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "149299", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "crowd"], "result": "149299", "ind": 0, "tostr": "sum { all_rows ; crowd }"}, "149299"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; crowd } ; 149299 } = true", "tointer": "the sum of the crowd record of all rows is 149299 ."}, "logic_str": "round_eq { sum { all_rows ; crowd } ; 149299 } = true", "interpret": "the sum of the crowd record of all rows is 149299 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "crowd_4": 4, "149299_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "crowd_4": "crowd", "149299_5": "149299"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "crowd_4": [0], "149299_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["melbourne", "10.12 ( 72 )", "richmond", "14.13 ( 97 )", "mcg", "35460", "30 july 1966"], ["hawthorn", "10.16 ( 76 )", "south melbourne", "14.17 ( 101 )", "glenferrie oval", "12237", "30 july 1966"], ["footscray", "7.9 ( 51 )", "geelong", "10.11 ( 71 )", "western oval", "16951", "30 july 1966"], ["collingwood", "7.10 ( 52 )", "essendon", "18.9 ( 117 )", "victoria park", "38918", "30 july 1966"], ["carlton", "12.15 ( 87 )", "fitzroy", "9.6 ( 60 )", "princes park", "15203", "30 july 1966"], ["st kilda", "10.18 ( 78 )", "north melbourne", "4.16 ( 40 )", "moorabbin oval", "30530", "30 july 1966"]], "query": "round_eq { sum { all_rows ; crowd } ; 149299 } = true", "question": "on july 30th , 1966 during the 1966 vfl season there were 149299 attendees ."}, {"topic": "derek daly", "wiki": "https://en.wikipedia.org/wiki/Derek_Daly", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1219760-3.html.csv", "action": "unique", "sent": "derek daly raced only one season using a judd av engine .", "annotation": {"scope": "all", "row": "12", "col": "4", "col_other": "n/a", "criterion": "equal", "value": "judd av", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "engine", "judd av"], "result": null, "ind": 0, "tointer": "select the rows whose engine record fuzzily matches to judd av .", "tostr": "filter_eq { all_rows ; engine ; judd av }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; engine ; judd av } } = true", "tointer": "select the rows whose engine record fuzzily matches to judd av . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; engine ; judd av } } = true", "interpret": "select the rows whose engine record fuzzily matches to judd av . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "engine_4": 4, "judd av_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "engine_4": "engine", "judd av_5": "judd av"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "engine_4": [0], "judd av_5": [0]}, "table_header": ["year", "team", "chassis", "engine", "rank", "points"], "table_cont": [["1982", "wysard racing", "march 82c", "ford cosworth dfx", "nc", "0"], ["1983", "wysard racing", "march 82c", "ford cosworth dfx", "27th", "4"], ["1983", "wysard racing", "march 83c", "ford cosworth dfx", "27th", "4"], ["1983", "provimi racing", "march 82 / 83c", "ford cosworth dfx", "27th", "4"], ["1984", "provimi racing", "march 84c", "ford cosworth dfx", "19th", "26"], ["1985", "tom hess racing", "lola t900", "ford cosworth dfx", "40th", "1"], ["1986", "team menard", "march 86c", "ford cosworth dfx", "23rd", "11"], ["1986", "curb motorsports", "march 86c", "ford cosworth dfx", "23rd", "11"], ["1987", "pace racing", "march 87c", "buick v6 ( t / c )", "15th", "27"], ["1987", "raynor motorsports", "lola t87 / 00", "ford cosworth dfx", "15th", "27"], ["1988", "raynor motorsports", "lola t88 / 00", "ford cosworth dfx", "9th", "53"], ["1989", "raynor motorsports", "lola t89 / 00", "judd av", "12th", "25"]], "query": "only { filter_eq { all_rows ; engine ; judd av } } = true", "question": "derek daly raced only one season using a judd av engine ."}, {"topic": "southeastern collegiate roller hockey league", "wiki": "https://en.wikipedia.org/wiki/Southeastern_Collegiate_Roller_Hockey_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11214772-2.html.csv", "action": "ordinal", "sent": "according to the southeastern collegiate roller hockey league statistics , forth earliest championship was won by emory .", "annotation": {"scope": "all", "row": "4", "col": "1", "order": "4", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "year", "4"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; year ; 4 }"}, "champion"], "result": "emory", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; year ; 4 } ; champion }"}, "emory"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; year ; 4 } ; champion } ; emory } = true", "tointer": "select the row whose year record of all rows is 4th minimum . the champion record of this row is emory ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; year ; 4 } ; champion } ; emory } = true", "interpret": "select the row whose year record of all rows is 4th minimum . the champion record of this row is emory .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "year_5": 5, "4_6": 6, "champion_7": 7, "emory_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "year_5": "year", "4_6": "4", "champion_7": "champion", "emory_8": "emory"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "year_5": [0], "4_6": [0], "champion_7": [1], "emory_8": [2]}, "table_header": ["year", "champion", "score", "runner - up", "location", "semi - finalist 1", "semi - finalist 2"], "table_cont": [["2004", "duke", "6 - 5", "elon", "morrisville , nc", "western carolina", "clemson"], ["2005", "elon", "12 - 1", "clemson", "morrisville , nc", "western carolina", "longwood"], ["2005", "miami", "6 - 5", "emory", "ellenton , fl", "embry - riddle", "north florida"], ["2006", "emory", "6 - 5 ot", "elon", "snellville , ga", "miami", "embry - riddle"], ["2007", "emory", "6 - 5 ot", "miami", "snellville , ga", "elon", "north carolina"], ["2008", "elon", "6 - 4", "tampa", "snellville , ga", "emory", "west carolina"]], "query": "eq { hop { nth_argmin { all_rows ; year ; 4 } ; champion } ; emory } = true", "question": "according to the southeastern collegiate roller hockey league statistics , forth earliest championship was won by emory ."}, {"topic": "kings county , new brunswick", "wiki": "https://en.wikipedia.org/wiki/Kings_County%2C_New_Brunswick", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-171236-1.html.csv", "action": "superlative", "sent": "quispamsis is the town with the highest population in kings county , new brunswick .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "population"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; population }"}, "official name"], "result": "quispamsis", "ind": 1, "tostr": "hop { argmax { all_rows ; population } ; official name }"}, "quispamsis"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; population } ; official name } ; quispamsis } = true", "tointer": "select the row whose population record of all rows is maximum . the official name record of this row is quispamsis ."}, "logic_str": "eq { hop { argmax { all_rows ; population } ; official name } ; quispamsis } = true", "interpret": "select the row whose population record of all rows is maximum . the official name record of this row is quispamsis .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "population_5": 5, "official name_6": 6, "quispamsis_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "population_5": "population", "official name_6": "official name", "quispamsis_7": "quispamsis"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "population_5": [0], "official name_6": [1], "quispamsis_7": [2]}, "table_header": ["official name", "status", "area km 2", "population", "census ranking"], "table_cont": [["quispamsis", "town", "57.06", "17886", "231 of 5008"], ["rothesay", "town", "34.73", "11947", "336 of 5008"], ["grand bay - westfield", "town", "59.73", "5117", "693 of 5008"], ["sussex", "town", "9.03", "4312", "780 of 5008"], ["hampton", "town", "21.00", "4292", "782 of 5008"], ["sussex corner", "village", "9.43", "1495", "1609 of 5008"], ["norton", "village", "75.35", "1301", "1757 of 5008"]], "query": "eq { hop { argmax { all_rows ; population } ; official name } ; quispamsis } = true", "question": "quispamsis is the town with the highest population in kings county , new brunswick ."}, {"topic": "elena pampoulova", "wiki": "https://en.wikipedia.org/wiki/Elena_Pampoulova", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18330817-10.html.csv", "action": "unique", "sent": "for elena pampoulova , for the tournaments on a hard surface , the only time her partner was magdalena maleeva was on july 16 , 1992 .", "annotation": {"scope": "subset", "row": "3", "col": "4", "col_other": "3", "criterion": "equal", "value": "magdalena maleeva", "subset": {"col": "5", "criterion": "fuzzily_match", "value": "hard"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "hard"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; surface ; hard }", "tointer": "select the rows whose surface record fuzzily matches to hard ."}, "partner", "magdalena maleeva"], "result": null, "ind": 1, "tointer": "select the rows whose surface record fuzzily matches to hard . among these rows , select the rows whose partner record fuzzily matches to magdalena maleeva .", "tostr": "filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } }", "tointer": "select the rows whose surface record fuzzily matches to hard . among these rows , select the rows whose partner record fuzzily matches to magdalena maleeva . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "hard"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; surface ; hard }", "tointer": "select the rows whose surface record fuzzily matches to hard ."}, "partner", "magdalena maleeva"], "result": null, "ind": 1, "tointer": "select the rows whose surface record fuzzily matches to hard . among these rows , select the rows whose partner record fuzzily matches to magdalena maleeva .", "tostr": "filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva }"}, "date"], "result": "july 16 , 1992", "ind": 3, "tostr": "hop { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } ; date }"}, "july 16 , 1992"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } ; date } ; july 16 , 1992 }", "tointer": "the date record of this unqiue row is july 16 , 1992 ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } } ; eq { hop { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } ; date } ; july 16 , 1992 } } = true", "tointer": "select the rows whose surface record fuzzily matches to hard . among these rows , select the rows whose partner record fuzzily matches to magdalena maleeva . there is only one such row in the table . the date record of this unqiue row is july 16 , 1992 ."}, "logic_str": "and { only { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } } ; eq { hop { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } ; date } ; july 16 , 1992 } } = true", "interpret": "select the rows whose surface record fuzzily matches to hard . among these rows , select the rows whose partner record fuzzily matches to magdalena maleeva . there is only one such row in the table . the date record of this unqiue row is july 16 , 1992 .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_7": 7, "surface_8": 8, "hard_9": 9, "partner_10": 10, "magdalena maleeva_11": 11, "str_eq_4": 4, "str_hop_3": 3, "date_12": 12, "july 16 , 1992_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "surface_8": "surface", "hard_9": "hard", "partner_10": "partner", "magdalena maleeva_11": "magdalena maleeva", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "date_12": "date", "july 16 , 1992_13": "july 16 , 1992"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_str_eq_1": [2, 3], "filter_str_eq_0": [1], "all_rows_7": [0], "surface_8": [0], "hard_9": [0], "partner_10": [1], "magdalena maleeva_11": [1], "str_eq_4": [5], "str_hop_3": [4], "date_12": [3], "july 16 , 1992_13": [4]}, "table_header": ["edition", "round", "date", "partner", "surface", "opponents", "result"], "table_cont": [["1988 world group i", "r1", "december 5 , 1988", "galia angelova", "hard", "jonna jonerup maria lindstr\u00f6m", "6 - 2 , 6 - 7 ( 5 - 7 ) , 1 - 6"], ["1990 world group i", "po", "july 23 , 1990", "dora rangelova", "hard", "amy jonsson - r\u00e5holt astrid sunde", "4 - 6 , 6 - 2 , 6 - 3"], ["1992 world group i play - offs", "rpo", "july 16 , 1992", "magdalena maleeva", "hard", "ruxandra dragomir irina sp\u00eerlea", "6 - 7 ( 5 - 7 ) , 2 - 6"], ["1992 world group i play - offs", "rpo", "july 17 , 1992", "katerina maleeva", "hard", "vir\u00e1g csurg\u00f3 kata gy\u00f6rke", "7 - 6 ( 8 - 6 ) , 4 - 6 , 6 - 1"], ["\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193"], ["1997 world group i", "qf", "march 2 , 1997", "barbara rittner", "hard ( i )", "eva martincov\u00e1 ludmila richterov\u00e1", "7 - 6 ( 7 - 3 ) , 6 - 2"]], "query": "and { only { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } } ; eq { hop { filter_eq { filter_eq { all_rows ; surface ; hard } ; partner ; magdalena maleeva } ; date } ; july 16 , 1992 } } = true", "question": "for elena pampoulova , for the tournaments on a hard surface , the only time her partner was magdalena maleeva was on july 16 , 1992 ."}, {"topic": "northland conference ( ihsaa )", "wiki": "https://en.wikipedia.org/wiki/Northland_Conference_%28IHSAA%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18710130-1.html.csv", "action": "superlative", "sent": "the south central ( union mills ) was the first school to leave the northland conference ( ihsaa ) .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "min", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "year left"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; year left }"}, "school"], "result": "south central ( union mills )", "ind": 1, "tostr": "hop { argmin { all_rows ; year left } ; school }"}, "south central ( union mills )"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; year left } ; school } ; south central ( union mills ) } = true", "tointer": "select the row whose year left record of all rows is minimum . the school record of this row is south central ( union mills ) ."}, "logic_str": "eq { hop { argmin { all_rows ; year left } ; school } ; south central ( union mills ) } = true", "interpret": "select the row whose year left record of all rows is minimum . the school record of this row is south central ( union mills ) .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "year left_5": 5, "school_6": 6, "south central (union mills)_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "year left_5": "year left", "school_6": "school", "south central (union mills)_7": "south central ( union mills )"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "year left_5": [0], "school_6": [1], "south central (union mills)_7": [2]}, "table_header": ["school", "location", "mascot", "county", "year joined", "previous conference", "year left", "conference joined"], "table_cont": [["argos", "argos , in", "dragons", "50 marshall", "1998", "independent", "2008", "independent"], ["elkhart christian", "elkhart , in", "eagles", "20 elkhart", "2004", "new ihsaa school", "2008", "independent"], ["marquette catholic", "michigan city", "blazers", "46 laporte", "1998", "independent", "2007", "greater south shore"], ["oregon - davis", "hamlet , in", "bobcats", "75 starke", "1998", "independent", "2008", "independent"], ["river forest", "lake station", "ingots", "45 lake", "1998", "northwest hoosier conference", "2007", "greater south shore"], ["south central ( union mills )", "union mills", "satellites", "46 la porte", "1998", "independent", "2003", "porter county"], ["westville", "westville , in", "blackhawks", "46 la porte", "1998", "porter county", "2008", "independent"]], "query": "eq { hop { argmin { all_rows ; year left } ; school } ; south central ( union mills ) } = true", "question": "the south central ( union mills ) was the first school to leave the northland conference ( ihsaa ) ."}, {"topic": "list of ngc objects ( 5001 - 6000 )", "wiki": "https://en.wikipedia.org/wiki/List_of_NGC_objects_%285001%E2%80%936000%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11051845-2.html.csv", "action": "aggregation", "sent": "the average apparent magnitude of ngc objects ( 5001-6000 ) is 10.95 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "10.95", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "apparent magnitude"], "result": "10.95", "ind": 0, "tostr": "avg { all_rows ; apparent magnitude }"}, "10.95"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; apparent magnitude } ; 10.95 } = true", "tointer": "the average of the apparent magnitude record of all rows is 10.95 ."}, "logic_str": "round_eq { avg { all_rows ; apparent magnitude } ; 10.95 } = true", "interpret": "the average of the apparent magnitude record of all rows is 10.95 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "apparent magnitude_4": 4, "10.95_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "apparent magnitude_4": "apparent magnitude", "10.95_5": "10.95"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "apparent magnitude_4": [0], "10.95_5": [1]}, "table_header": ["ngc number", "object type", "constellation", "right ascension ( j2000 )", "declination ( j2000 )", "apparent magnitude"], "table_cont": [["5101", "spiral galaxy", "hydra", "13h21 m46 .6 s", "degree25 \u2032 53 \u2033", "11.5"], ["5102", "lenticular galaxy", "centaurus", "13h21 m57 .8 s", "degree37 \u2032 47 \u2033", "10.4"], ["5112", "spiral galaxy", "canes venatici", "13h21 m56 .7 s", "degree44 \u2032 07 \u2033", "12.5"], ["5128", "lenticular galaxy", "centaurus", "13h25 m27 .6 s", "degree01 \u2032 09 \u2033", "8.0"], ["5139", "globular cluster", "centaurus", "13h26 m45 .9 s", "degree28 \u2032 37 \u2033", "6.1"], ["5161", "spiral galaxy", "centaurus", "13h29 m14 .0 s", "degree10 \u2032 30 \u2033", "12.0"], ["5164", "spiral galaxy", "ursa major", "13h27 m12 .1 s", "degree29 \u2032 13 \u2033", "14.6"], ["5170", "spiral galaxy", "virgo", "13h29 m48 .9 s", "degree57 \u2032 59 \u2033", "11.9"], ["5189", "planetary nebula", "musca", "13h33 m33 .0 s", "degree58 \u2032 27 \u2033", "14.1"], ["5194", "spiral galaxy", "canes venatici", "13h29 m52 .4 s", "degree11 \u2032 41 \u2033", "8.8"], ["5195", "interacting galaxy", "canes venatici", "13h29 m59 .2 s", "degree16 \u2032 05 \u2033", "10.6"]], "query": "round_eq { avg { all_rows ; apparent magnitude } ; 10.95 } = true", "question": "the average apparent magnitude of ngc objects ( 5001-6000 ) is 10.95 ."}, {"topic": "kultar gill", "wiki": "https://en.wikipedia.org/wiki/Kultar_Gill", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12278106-2.html.csv", "action": "unique", "sent": "in the fights where kultar gill won by tko , the only time it was with strikes was against kevin dolan .", "annotation": {"scope": "subset", "row": "15", "col": "4", "col_other": "3", "criterion": "equal", "value": "strikes", "subset": {"col": "4", "criterion": "fuzzily_match", "value": "tko"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "method", "tko"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; method ; tko }", "tointer": "select the rows whose method record fuzzily matches to tko ."}, "method", "strikes"], "result": null, "ind": 1, "tointer": "select the rows whose method record fuzzily matches to tko . among these rows , select the rows whose method record fuzzily matches to strikes .", "tostr": "filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } }", "tointer": "select the rows whose method record fuzzily matches to tko . among these rows , select the rows whose method record fuzzily matches to strikes . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "method", "tko"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; method ; tko }", "tointer": "select the rows whose method record fuzzily matches to tko ."}, "method", "strikes"], "result": null, "ind": 1, "tointer": "select the rows whose method record fuzzily matches to tko . among these rows , select the rows whose method record fuzzily matches to strikes .", "tostr": "filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes }"}, "opponent"], "result": "kevin dolan", "ind": 3, "tostr": "hop { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } ; opponent }"}, "kevin dolan"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } ; opponent } ; kevin dolan }", "tointer": "the opponent record of this unqiue row is kevin dolan ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } } ; eq { hop { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } ; opponent } ; kevin dolan } } = true", "tointer": "select the rows whose method record fuzzily matches to tko . among these rows , select the rows whose method record fuzzily matches to strikes . there is only one such row in the table . the opponent record of this unqiue row is kevin dolan ."}, "logic_str": "and { only { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } } ; eq { hop { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } ; opponent } ; kevin dolan } } = true", "interpret": "select the rows whose method record fuzzily matches to tko . among these rows , select the rows whose method record fuzzily matches to strikes . there is only one such row in the table . the opponent record of this unqiue row is kevin dolan .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_7": 7, "method_8": 8, "tko_9": 9, "method_10": 10, "strikes_11": 11, "str_eq_4": 4, "str_hop_3": 3, "opponent_12": 12, "kevin dolan_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "method_8": "method", "tko_9": "tko", "method_10": "method", "strikes_11": "strikes", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "opponent_12": "opponent", "kevin dolan_13": "kevin dolan"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_str_eq_1": [2, 3], "filter_str_eq_0": [1], "all_rows_7": [0], "method_8": [0], "tko_9": [0], "method_10": [1], "strikes_11": [1], "str_eq_4": [5], "str_hop_3": [4], "opponent_12": [3], "kevin dolan_13": [4]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "location"], "table_cont": [["win", "12 - 8", "amr wahman", "tko ( punches )", "sfl 4", "1", "mumbai , india"], ["win", "11 - 8", "quinton arendse", "ko ( punches )", "sfl 3", "1", "new delhi , delhi india"], ["loss", "10 - 8", "joachim hansen", "submission ( armbar )", "dream5", "1", "osaka - jo hall , japan"], ["loss", "10 - 7", "tatsuya kawajiri", "decision ( unanimous )", "dream1", "2", "saitama , japan"], ["win", "10 - 6", "hideo tokoro", "tko ( punches )", "hero 's 9", "1", "yokohama , japan"], ["loss", "9 - 6", "kazuyuki miyata", "submission ( guillotine choke )", "hero 's 8", "1", "nagoya , japan"], ["loss", "9 - 5", "rodrigo damm", "submission ( rear naked choke )", "bodogfight - st petersburg", "2", "st petersburg , russia"], ["loss", "9 - 4", "caol uno", "submission ( rear naked choke )", "hero 's 6", "2", "tokyo , japan"], ["win", "9 - 3", "hideo tokoro", "ko ( knee )", "hero 's 5", "1", "tokyo , japan"], ["loss", "8 - 3", "daisuke sugie", "submission ( triangle choke )", "shooto - gig central 8", "1", "nagoya , japan"], ["win", "8 - 2", "harris sarmiento", "submission ( rear naked choke )", "sb 39 : destiny", "3", "hawaii , united states"], ["loss", "7 - 2", "fabio holanda", "submission ( kimura )", "tko major league mma", "1", "quebec , canada"], ["win", "7 - 1", "dave rivas", "submission ( rear naked choke )", "pxc 2 : chaos", "2", "guam"], ["win", "6 - 1", "donald ouimet", "submission ( rear naked choke )", "ucc 12 : adrenaline", "1", "quebec , canada"], ["win", "5 - 1", "kevin dolan", "tko ( strikes )", "mixed fighting championship", "1", "alberta , canada"], ["win", "4 - 1", "dave scholten", "submission ( rear naked choke )", "world freestyle fighting 3", "1", "vancouver , british columbia , canada"], ["loss", "3 - 1", "yves edwards", "submission ( heel hook )", "shogun 1", "2", "hawaii , united states"], ["win", "3 - 0", "trevor michaelis", "submission ( rear naked choke )", "ufcf - everett extreme challenge 4", "1", "everett , washington , united states"], ["win", "2 - 0", "dan shenk", "submission ( rear naked choke )", "western freestyle championships", "1", "british columbia , canada"], ["win", "1 - 0", "jr wallace", "decision ( unanimous )", "western canada 's toughest", "3", "vernon , british columbia , canada"]], "query": "and { only { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } } ; eq { hop { filter_eq { filter_eq { all_rows ; method ; tko } ; method ; strikes } ; opponent } ; kevin dolan } } = true", "question": "in the fights where kultar gill won by tko , the only time it was with strikes was against kevin dolan ."}, {"topic": "fifa beach soccer world cup", "wiki": "https://en.wikipedia.org/wiki/FIFA_Beach_Soccer_World_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1864131-3.html.csv", "action": "comparative", "sent": "the player of the tournament had more goals in 2006 than in 2005 .", "annotation": {"row_1": "4", "row_2": "5", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "2006 details"], "result": null, "ind": 0, "tointer": "select the rows whose year record fuzzily matches to 2006 details .", "tostr": "filter_eq { all_rows ; year ; 2006 details }"}, "player of the tournament"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; year ; 2006 details } ; player of the tournament }", "tointer": "select the rows whose year record fuzzily matches to 2006 details . take the player of the tournament record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "year", "2005 details"], "result": null, "ind": 1, "tointer": "select the rows whose year record fuzzily matches to 2005 details .", "tostr": "filter_eq { all_rows ; year ; 2005 details }"}, "player of the tournament"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; year ; 2005 details } ; player of the tournament }", "tointer": "select the rows whose year record fuzzily matches to 2005 details . take the player of the tournament record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; year ; 2006 details } ; player of the tournament } ; hop { filter_eq { all_rows ; year ; 2005 details } ; player of the tournament } } = true", "tointer": "select the rows whose year record fuzzily matches to 2006 details . take the player of the tournament record of this row . select the rows whose year record fuzzily matches to 2005 details . take the player of the tournament record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; year ; 2006 details } ; player of the tournament } ; hop { filter_eq { all_rows ; year ; 2005 details } ; player of the tournament } } = true", "interpret": "select the rows whose year record fuzzily matches to 2006 details . take the player of the tournament record of this row . select the rows whose year record fuzzily matches to 2005 details . take the player of the tournament record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "year_7": 7, "2006 details_8": 8, "player of the tournament_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "year_11": 11, "2005 details_12": 12, "player of the tournament_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "year_7": "year", "2006 details_8": "2006 details", "player of the tournament_9": "player of the tournament", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "year_11": "year", "2005 details_12": "2005 details", "player of the tournament_13": "player of the tournament"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "year_7": [0], "2006 details_8": [0], "player of the tournament_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "year_11": [1], "2005 details_12": [1], "player of the tournament_13": [3]}, "table_header": ["year", "location", "number of teams", "player of the tournament", "top goalscorer ( s )", "best goalkeeper"], "table_cont": [["2009 details", "jumeirah beach , dubai , united arab emirates", "dejan stankovic ( sui )", "16 goals dejan stankovic ( sui )", "m\u00e3o ( bra )", "269 ( 8.7 )"], ["2008 details", "plage du prado , marseille , france", "amarelle ( esp )", "13 goals madjer ( por )", "roberto valeiro ( esp )", "258 ( 8.3 )"], ["2007 details", "copacabana beach , rio de janeiro , brazil", "buru ( bra )", "10 goals buru ( bra )", "not awarded", "261 ( 8.2 )"], ["2006 details", "copacabana beach , rio de janeiro , brazil", "madjer ( por )", "21 goals madjer ( por )", "not awarded", "286 ( 8.9 )"], ["2005 details", "copacabana beach , rio de janeiro , brazil", "madjer ( por )", "12 goals madjer ( por )", "not awarded", "164 ( 8.2 )"]], "query": "greater { hop { filter_eq { all_rows ; year ; 2006 details } ; player of the tournament } ; hop { filter_eq { all_rows ; year ; 2005 details } ; player of the tournament } } = true", "question": "the player of the tournament had more goals in 2006 than in 2005 ."}, {"topic": "2007 - 08 football league one", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Football_League_One", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28181347-6.html.csv", "action": "unique", "sent": "andy ritchie was the only outgoing manager who left in april 2008 .", "annotation": {"scope": "all", "row": "8", "col": "4", "col_other": "2", "criterion": "equal", "value": "1 april 2008", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date of vacancy", "1 april 2008"], "result": null, "ind": 0, "tointer": "select the rows whose date of vacancy record fuzzily matches to 1 april 2008 .", "tostr": "filter_eq { all_rows ; date of vacancy ; 1 april 2008 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } }", "tointer": "select the rows whose date of vacancy record fuzzily matches to 1 april 2008 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date of vacancy", "1 april 2008"], "result": null, "ind": 0, "tointer": "select the rows whose date of vacancy record fuzzily matches to 1 april 2008 .", "tostr": "filter_eq { all_rows ; date of vacancy ; 1 april 2008 }"}, "outgoing manager"], "result": "andy ritchie", "ind": 2, "tostr": "hop { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } ; outgoing manager }"}, "andy ritchie"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } ; outgoing manager } ; andy ritchie }", "tointer": "the outgoing manager record of this unqiue row is andy ritchie ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } } ; eq { hop { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } ; outgoing manager } ; andy ritchie } } = true", "tointer": "select the rows whose date of vacancy record fuzzily matches to 1 april 2008 . there is only one such row in the table . the outgoing manager record of this unqiue row is andy ritchie ."}, "logic_str": "and { only { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } } ; eq { hop { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } ; outgoing manager } ; andy ritchie } } = true", "interpret": "select the rows whose date of vacancy record fuzzily matches to 1 april 2008 . there is only one such row in the table . the outgoing manager record of this unqiue row is andy ritchie .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "date of vacancy_7": 7, "1 april 2008_8": 8, "str_eq_3": 3, "str_hop_2": 2, "outgoing manager_9": 9, "andy ritchie_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date of vacancy_7": "date of vacancy", "1 april 2008_8": "1 april 2008", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "outgoing manager_9": "outgoing manager", "andy ritchie_10": "andy ritchie"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "date of vacancy_7": [0], "1 april 2008_8": [0], "str_eq_3": [4], "str_hop_2": [3], "outgoing manager_9": [2], "andy ritchie_10": [3]}, "table_header": ["team", "outgoing manager", "manner of departure", "date of vacancy", "replaced by", "date of appointment", "position in table"], "table_cont": [["carlisle united", "neil mcdonald", "contract terminated", "13 august 2007", "john ward", "2 october 2007", "8th"], ["gillingham", "ronnie jepson", "mutual consent", "9 september 2007", "mark stimson", "1 november 2007", "22nd"], ["port vale", "martin foyle", "mutual consent", "26 september 2007", "lee sinnott", "5 november 2007", "23rd"], ["cheltenham town", "john ward", "mutual consent ( hired by carlisle united )", "2 october 2007", "keith downing", "2 november 2007", "23rd"], ["millwall", "willie donachie", "contract terminated", "8 october 2007", "kenny jackett", "6 november 2007", "24th"], ["swindon town", "paul sturrock", "mutual consent ( hired by plymouth argyle )", "27 november 2007", "maurice malpas", "15 january 2008", "11th"], ["luton town", "kevin blackwell", "contract terminated", "16 january 2008", "mick harford", "16 january 2008", "22nd"], ["huddersfield town", "andy ritchie", "mutual consent", "1 april 2008", "stan ternent", "24 april 2008", "14th"]], "query": "and { only { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } } ; eq { hop { filter_eq { all_rows ; date of vacancy ; 1 april 2008 } ; outgoing manager } ; andy ritchie } } = true", "question": "andy ritchie was the only outgoing manager who left in april 2008 ."}, {"topic": "united states house of representatives elections , 1924", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1924", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1342393-10.html.csv", "action": "majority", "sent": "most of the candidates seeking election in the georgia house of representatives were re-elected .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "re - elected", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "re - elected"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to re - elected .", "tostr": "most_eq { all_rows ; result ; re - elected } = true"}, "logic_str": "most_eq { all_rows ; result ; re - elected } = true", "interpret": "for the result records of all rows , most of them fuzzily match to re - elected .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "re - elected_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "re - elected_4": "re - elected"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "re - elected_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["georgia 2", "frank park", "democratic", "1912", "lost renomination democratic hold", "edward e cox ( d ) unopposed"], ["georgia 3", "charles r crisp", "democratic", "1912", "re - elected", "charles r crisp ( d ) unopposed"], ["georgia 4", "william c wright", "democratic", "1918", "re - elected", "william c wright ( d ) unopposed"], ["georgia 5", "william d upshaw", "democratic", "1918", "re - elected", "william d upshaw ( d ) unopposed"], ["georgia 6", "james w wise", "democratic", "1914", "retired democratic hold", "samuel rutherford ( d ) unopposed"], ["georgia 7", "gordon lee", "democratic", "1904", "re - elected", "gordon lee ( d ) 99.9 % a t atwater ( i ) 0.1 %"], ["georgia 8", "charles h brand", "democratic", "1916", "re - elected", "charles h brand ( d ) unopposed"], ["georgia 10", "carl vinson", "democratic", "1914", "re - elected", "carl vinson ( d ) unopposed"], ["georgia 11", "william c lankford", "democratic", "1918", "re - elected", "william c lankford ( d ) unopposed"]], "query": "most_eq { all_rows ; result ; re - elected } = true", "question": "most of the candidates seeking election in the georgia house of representatives were re-elected ."}, {"topic": "charl schwartzel", "wiki": "https://en.wikipedia.org/wiki/Charl_Schwartzel", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1598164-9.html.csv", "action": "unique", "sent": "the masters tournament is the only golf championship tournament that charl schwartzel won .", "annotation": {"scope": "all", "row": "1", "col": "2", "col_other": "1", "criterion": "greater_than", "value": "0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "wins", "0"], "result": null, "ind": 0, "tointer": "select the rows whose wins record is greater than 0 .", "tostr": "filter_greater { all_rows ; wins ; 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; wins ; 0 } }", "tointer": "select the rows whose wins record is greater than 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "wins", "0"], "result": null, "ind": 0, "tointer": "select the rows whose wins record is greater than 0 .", "tostr": "filter_greater { all_rows ; wins ; 0 }"}, "tournament"], "result": "masters tournament", "ind": 2, "tostr": "hop { filter_greater { all_rows ; wins ; 0 } ; tournament }"}, "masters tournament"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; wins ; 0 } ; tournament } ; masters tournament }", "tointer": "the tournament record of this unqiue row is masters tournament ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; wins ; 0 } } ; eq { hop { filter_greater { all_rows ; wins ; 0 } ; tournament } ; masters tournament } } = true", "tointer": "select the rows whose wins record is greater than 0 . there is only one such row in the table . the tournament record of this unqiue row is masters tournament ."}, "logic_str": "and { only { filter_greater { all_rows ; wins ; 0 } } ; eq { hop { filter_greater { all_rows ; wins ; 0 } ; tournament } ; masters tournament } } = true", "interpret": "select the rows whose wins record is greater than 0 . there is only one such row in the table . the tournament record of this unqiue row is masters tournament .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "wins_7": 7, "0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "tournament_9": 9, "masters tournament_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "wins_7": "wins", "0_8": "0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "tournament_9": "tournament", "masters tournament_10": "masters tournament"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "wins_7": [0], "0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "tournament_9": [2], "masters tournament_10": [3]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "1", "1", "1", "2", "4", "4"], ["us open", "0", "0", "1", "3", "7", "6"], ["the open championship", "0", "0", "0", "4", "9", "4"], ["pga championship", "0", "0", "0", "2", "8", "5"], ["totals", "1", "1", "2", "11", "28", "19"]], "query": "and { only { filter_greater { all_rows ; wins ; 0 } } ; eq { hop { filter_greater { all_rows ; wins ; 0 } ; tournament } ; masters tournament } } = true", "question": "the masters tournament is the only golf championship tournament that charl schwartzel won ."}, {"topic": "reg parnell", "wiki": "https://en.wikipedia.org/wiki/Reg_Parnell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1235870-1.html.csv", "action": "aggregation", "sent": "the average number of points that reg parnell had was 3 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "3", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "points"], "result": "3", "ind": 0, "tostr": "avg { all_rows ; points }"}, "3"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; points } ; 3 } = true", "tointer": "the average of the points record of all rows is 3 ."}, "logic_str": "round_eq { avg { all_rows ; points } ; 3 } = true", "interpret": "the average of the points record of all rows is 3 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "points_4": 4, "3_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "points_4": "points", "3_5": "3"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "points_4": [0], "3_5": [1]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1950", "alfa romeo spa", "alfa romeo 158", "alfa romeo straight - 8", "4"], ["1950", "scuderia ambrosiana", "maserati 4clt / 48", "maserati straight - 4", "4"], ["1951", "ga vandervell", "ferrari 375 thinwall", "ferrari v12", "5"], ["1951", "brm ltd", "brm p15", "brm v16", "5"], ["1952", "ahm bryde", "cooper t20", "bristol straight - 6", "0"], ["1954", "scuderia ambrosiana", "ferrari 500 / 625", "ferrari straight - 4", "0"]], "query": "round_eq { avg { all_rows ; points } ; 3 } = true", "question": "the average number of points that reg parnell had was 3 ."}, {"topic": "powerade tigers all - time roster", "wiki": "https://en.wikipedia.org/wiki/Powerade_Tigers_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15463188-8.html.csv", "action": "unique", "sent": "reynel hugnatan is the only player who joined the powerade tigers via the rookie drafting acquisition .", "annotation": {"scope": "all", "row": "5", "col": "5", "col_other": "1", "criterion": "equal", "value": "rookie draft", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "acquisition via", "rookie draft"], "result": null, "ind": 0, "tointer": "select the rows whose acquisition via record fuzzily matches to rookie draft .", "tostr": "filter_eq { all_rows ; acquisition via ; rookie draft }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; acquisition via ; rookie draft } }", "tointer": "select the rows whose acquisition via record fuzzily matches to rookie draft . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "acquisition via", "rookie draft"], "result": null, "ind": 0, "tointer": "select the rows whose acquisition via record fuzzily matches to rookie draft .", "tostr": "filter_eq { all_rows ; acquisition via ; rookie draft }"}, "name"], "result": "reynel hugnatan", "ind": 2, "tostr": "hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name }"}, "reynel hugnatan"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; reynel hugnatan }", "tointer": "the name record of this unqiue row is reynel hugnatan ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; acquisition via ; rookie draft } } ; eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; reynel hugnatan } } = true", "tointer": "select the rows whose acquisition via record fuzzily matches to rookie draft . there is only one such row in the table . the name record of this unqiue row is reynel hugnatan ."}, "logic_str": "and { only { filter_eq { all_rows ; acquisition via ; rookie draft } } ; eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; reynel hugnatan } } = true", "interpret": "select the rows whose acquisition via record fuzzily matches to rookie draft . there is only one such row in the table . the name record of this unqiue row is reynel hugnatan .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "acquisition via_7": 7, "rookie draft_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "reynel hugnatan_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "acquisition via_7": "acquisition via", "rookie draft_8": "rookie draft", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "reynel hugnatan_10": "reynel hugnatan"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "acquisition via_7": [0], "rookie draft_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "reynel hugnatan_10": [3]}, "table_header": ["name", "position", "number", "season", "acquisition via"], "table_cont": [["ron hale", "forward", "22", "2002", "import"], ["rudy hatfield", "forward", "99", "2002 - 2005", "free agency"], ["bong hawkins", "forward", "16", "2002", "free agency"], ["bakari hendrix", "forward", "23", "2005", "import"], ["reynel hugnatan", "forward", "21", "2003 - 2005", "rookie draft"]], "query": "and { only { filter_eq { all_rows ; acquisition via ; rookie draft } } ; eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; reynel hugnatan } } = true", "question": "reynel hugnatan is the only player who joined the powerade tigers via the rookie drafting acquisition ."}, {"topic": "deccan chargers", "wiki": "https://en.wikipedia.org/wiki/Deccan_Chargers", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15868081-6.html.csv", "action": "count", "sent": "the deccan chargers managed to achieve exactly eight losses two times .", "annotation": {"scope": "all", "criterion": "equal", "value": "8", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "losses", "8"], "result": null, "ind": 0, "tointer": "select the rows whose losses record is equal to 8 .", "tostr": "filter_eq { all_rows ; losses ; 8 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; losses ; 8 } }", "tointer": "select the rows whose losses record is equal to 8 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; losses ; 8 } } ; 2 } = true", "tointer": "select the rows whose losses record is equal to 8 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; losses ; 8 } } ; 2 } = true", "interpret": "select the rows whose losses record is equal to 8 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "losses_5": 5, "8_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "losses_5": "losses", "8_6": "8", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "losses_5": [0], "8_6": [0], "2_7": [2]}, "table_header": ["played", "wins", "losses", "tied", "win %"], "table_cont": [["ipl", "ipl", "ipl", "ipl", "ipl"], ["14", "2", "12", "0", "14 %"], ["16", "9", "7", "0", "56 %"], ["16", "8", "8", "0", "50 %"], ["14", "6", "8", "0", "42 %"], ["15", "4", "11", "0", "26.67 %"], ["75", "29", "46", "0", "38.67 %"], ["2", "0", "2", "0", "0 %"], ["77", "29", "48", "0", "37.67 %"]], "query": "eq { count { filter_eq { all_rows ; losses ; 8 } } ; 2 } = true", "question": "the deccan chargers managed to achieve exactly eight losses two times ."}, {"topic": "united states house of representatives elections , 1988", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1988", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341577-36.html.csv", "action": "majority", "sent": "the majority of ohio representatives in the united states house of representatives elections , 1988 were re-elected .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "re - elected", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "re - elected"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to re - elected .", "tostr": "most_eq { all_rows ; result ; re - elected } = true"}, "logic_str": "most_eq { all_rows ; result ; re - elected } = true", "interpret": "for the result records of all rows , most of them fuzzily match to re - elected .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "re - elected_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "re - elected_4": "re - elected"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "re - elected_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["ohio 1", "tom luken", "democratic", "1976", "re - elected", "tom luken ( d ) 56.5 % steve chabot ( r ) 43.5 %"], ["ohio 2", "bill gradison", "republican", "1974", "re - elected", "bill gradison ( r ) 72.3 % chuck r stidham ( d ) 27.7 %"], ["ohio 3", "tony p hall", "democratic", "1978", "re - elected", "tony p hall ( d ) 76.9 % ron crutcher ( r ) 23.1 %"], ["ohio 4", "mike oxley", "republican", "1972", "re - elected", "mike oxley ( r ) unopposed"], ["ohio 5", "del latta", "republican", "1958", "retired republican hold", "paul gillmor ( r ) 60.6 % tom murray ( d ) 39.4 %"], ["ohio 6", "bob mcewen", "republican", "1980", "re - elected", "bob mcewen ( r ) 74.3 % gordon r roberts ( d ) 25.7 %"], ["ohio 7", "mike dewine", "republican", "1982", "re - elected", "mike dewine ( r ) 73.9 % jack schira ( d ) 26.1 %"], ["ohio 8", "buz lukens", "republican", "1986", "re - elected", "buz lukens ( r ) 75.9 % john w griffin ( d ) 24.1 %"], ["ohio 9", "marcy kaptur", "democratic", "1982", "re - elected", "marcy kaptur ( d ) 81.3 % al hawkins ( r ) 18.7 %"], ["ohio 12", "john kasich", "republican", "1982", "re - elected", "john kasich ( r ) 80.1 % mark p brown ( d ) 19.9 %"], ["ohio 13", "don pease", "democratic", "1976", "re - elected", "don pease ( d ) 69.8 % dwight brown ( r ) 30.2 %"], ["ohio 14", "thomas c sawyer", "democratic", "1986", "re - elected", "thomas c sawyer ( d ) 74.7 % loretta lang ( r ) 25.3 %"], ["ohio 16", "ralph regula", "republican", "1972", "re - elected", "ralph regula ( r ) 78.6 % melvin j gravely ( d ) 21.4 %"], ["ohio 19", "ed feighan", "democratic", "1982", "re - elected", "ed feighan ( d ) 70.5 % noel f roberts ( r ) 29.5 %"], ["ohio 20", "mary rose oakar", "democratic", "1976", "re - elected", "mary rose oakar ( d ) 82.6 % michael sajna ( r ) 17.4 %"]], "query": "most_eq { all_rows ; result ; re - elected } = true", "question": "the majority of ohio representatives in the united states house of representatives elections , 1988 were re-elected ."}, {"topic": "2000 carolina panthers season", "wiki": "https://en.wikipedia.org/wiki/2000_Carolina_Panthers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14094220-1.html.csv", "action": "comparative", "sent": "gillis wilson was drafted in an earlier round by the carolina panthers than lester towns .", "annotation": {"row_1": "5", "row_2": "7", "col": "1", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "gillis wilson"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to gillis wilson .", "tostr": "filter_eq { all_rows ; player ; gillis wilson }"}, "round"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; gillis wilson } ; round }", "tointer": "select the rows whose player record fuzzily matches to gillis wilson . take the round record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "lester towns"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to lester towns .", "tostr": "filter_eq { all_rows ; player ; lester towns }"}, "round"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; lester towns } ; round }", "tointer": "select the rows whose player record fuzzily matches to lester towns . take the round record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; gillis wilson } ; round } ; hop { filter_eq { all_rows ; player ; lester towns } ; round } } = true", "tointer": "select the rows whose player record fuzzily matches to gillis wilson . take the round record of this row . select the rows whose player record fuzzily matches to lester towns . take the round record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; player ; gillis wilson } ; round } ; hop { filter_eq { all_rows ; player ; lester towns } ; round } } = true", "interpret": "select the rows whose player record fuzzily matches to gillis wilson . take the round record of this row . select the rows whose player record fuzzily matches to lester towns . take the round record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "gillis wilson_8": 8, "round_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "lester towns_12": 12, "round_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "gillis wilson_8": "gillis wilson", "round_9": "round", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "lester towns_12": "lester towns", "round_13": "round"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "gillis wilson_8": [0], "round_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "lester towns_12": [1], "round_13": [3]}, "table_header": ["round", "pick", "player", "position", "college"], "table_cont": [["1", "23", "rashard anderson", "defensive back", "jackson state"], ["2", "57", "deon grant", "free safety", "tennessee"], ["3", "82", "leander jordan", "offensive tackle", "indiana university of pennsylvania"], ["4", "120", "alvin mckinley", "defensive end", "mississippi state"], ["5", "147", "gillis wilson", "defensive end", "southern u"], ["6", "182", "jeno james", "guard", "auburn"], ["7", "221", "lester towns", "middle linebacker", "washington"]], "query": "less { hop { filter_eq { all_rows ; player ; gillis wilson } ; round } ; hop { filter_eq { all_rows ; player ; lester towns } ; round } } = true", "question": "gillis wilson was drafted in an earlier round by the carolina panthers than lester towns ."}, {"topic": "500 festival open invitation", "wiki": "https://en.wikipedia.org/wiki/500_Festival_Open_Invitation", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14112941-1.html.csv", "action": "count", "sent": "billy casper has won the 500 festival open invitation 3 times .", "annotation": {"scope": "all", "criterion": "equal", "value": "billy casper", "result": "3", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "winner", "billy casper"], "result": null, "ind": 0, "tointer": "select the rows whose winner record fuzzily matches to billy casper .", "tostr": "filter_eq { all_rows ; winner ; billy casper }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; winner ; billy casper } }", "tointer": "select the rows whose winner record fuzzily matches to billy casper . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; winner ; billy casper } } ; 3 } = true", "tointer": "select the rows whose winner record fuzzily matches to billy casper . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; winner ; billy casper } } ; 3 } = true", "interpret": "select the rows whose winner record fuzzily matches to billy casper . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "winner_5": 5, "billy casper_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "winner_5": "winner", "billy casper_6": "billy casper", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "winner_5": [0], "billy casper_6": [0], "3_7": [2]}, "table_header": ["year", "date", "winner", "score", "to par", "winner 's share"], "table_cont": [["1968", "jun 6 - 9", "billy casper", "70 + 71 + 69 + 70 = 280", "8", "20000"], ["1967", "jul 6 - 9", "frank beard", "70 + 71 + 69 + 69 = 279", "9", "20000"], ["1966", "jul 28 - 31", "billy casper", "69 + 70 + 68 + 70 = 277", "11", "16400"], ["1965", "may 24 - 27", "bruce crampton", "71 + 70 + 67 + 71 = 279", "5", "15200"], ["1964", "may 27 - 31", "gary player", "70 + 66 + 70 + 67 = 273", "11", "12000"], ["1963", "may 31 - jun 3", "dow finsterwald", "68 + 68 + 64 + 68 = 268", "16", "10000"], ["1962", "may 24 - 27", "billy casper", "66 + 67 + 67 + 64 = 264", "18", "9000"], ["1961", "may 25 - 28", "doug ford", "69 + 69 + 67 + 68 = 273", "12", "9000"], ["1960", "may 26 - 29", "doug ford", "66 + 68 + 68 + 68 = 270", "14", "9000"]], "query": "eq { count { filter_eq { all_rows ; winner ; billy casper } } ; 3 } = true", "question": "billy casper has won the 500 festival open invitation 3 times ."}, {"topic": "1978 new zealand rugby union tour of britain and ireland", "wiki": "https://en.wikipedia.org/wiki/1978_New_Zealand_rugby_union_tour_of_Britain_and_Ireland", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18844321-1.html.csv", "action": "count", "sent": "in the 1978 new zealand rugby union tour of britain and ireland , 5 of the dates were in october .", "annotation": {"scope": "all", "criterion": "equal", "value": "october", "result": "5", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "october"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to october .", "tostr": "filter_eq { all_rows ; date ; october }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; date ; october } }", "tointer": "select the rows whose date record fuzzily matches to october . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; date ; october } } ; 5 } = true", "tointer": "select the rows whose date record fuzzily matches to october . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; date ; october } } ; 5 } = true", "interpret": "select the rows whose date record fuzzily matches to october . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "october_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "october_6": "october", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "october_6": [0], "5_7": [2]}, "table_header": ["opposing team", "against", "date", "venue", "status"], "table_cont": [["cambridge university", "12", "18 october 1978", "grange road , cambridge", "tour match"], ["cardiff", "7", "21 october 1978", "cardiff arms park , cardiff", "tour match"], ["west wales xv", "7", "25 october 1978", "st helen 's , swansea", "tour match"], ["london counties", "12", "28 october 1978", "twickenham , london", "tour match"], ["munster", "12", "31 october 1978", "thomond park , limerick", "tour match"], ["ireland", "6", "4 november 1978", "lansdowne road , dublin", "test match"], ["ulster", "7", "7 november 1978", "ravenhill , belfast", "tour match"], ["wales", "12", "11 november 1978", "cardiff arms park , cardiff", "test match"], ["south and south - west counties", "0", "15 november 1978", "memorial ground , bristol", "tour match"], ["midland counties", "15", "18 november 1978", "welford road , leicester", "tour match"], ["combined services", "6", "21 november 1978", "aldershot military stadium , aldershot", "tour match"], ["england", "6", "25 november 1978", "twickenham , london", "test match"], ["monmouthshire", "9", "29 november 1978", "rodney parade , newport", "tour match"], ["north of england", "6", "2 december 1978", "birkenhead park , birkenhead", "tour match"], ["north and midland of scotland", "3", "5 december 1978", "linksfield stadium , aberdeen", "tour match"], ["scotland", "9", "9 december 1978", "murrayfield , edinburgh", "test match"], ["bridgend", "6", "13 december 1978", "brewery field , bridgend", "tour match"], ["barbarians", "16", "16 december 1978", "cardiff arms park , cardiff", "tour match"]], "query": "eq { count { filter_eq { all_rows ; date ; october } } ; 5 } = true", "question": "in the 1978 new zealand rugby union tour of britain and ireland , 5 of the dates were in october ."}, {"topic": "nordic skiing", "wiki": "https://en.wikipedia.org/wiki/Nordic_skiing", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-174491-5.html.csv", "action": "count", "sent": "in nordic skiing , there were two winners from the country of sweden .", "annotation": {"scope": "all", "criterion": "equal", "value": "sweden", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "sweden"], "result": null, "ind": 0, "tointer": "select the rows whose country record fuzzily matches to sweden .", "tostr": "filter_eq { all_rows ; country ; sweden }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; country ; sweden } }", "tointer": "select the rows whose country record fuzzily matches to sweden . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; country ; sweden } } ; 2 } = true", "tointer": "select the rows whose country record fuzzily matches to sweden . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; country ; sweden } } ; 2 } = true", "interpret": "select the rows whose country record fuzzily matches to sweden . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "country_5": 5, "sweden_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "country_5": "country", "sweden_6": "sweden", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "country_5": [0], "sweden_6": [0], "2_7": [2]}, "table_header": ["winner", "country", "winter olympics", "fis nordic world ski championships", "holmenkollen"], "table_cont": [["hallgeir brenden", "norway", "1956", "1956", "1956"], ["eero m\u00e4ntyranta", "finland", "1964", "1964", "1962 , 1964 , 1968"], ["harald gr\u00f8nningen", "norway", "1968", "1968", "1960 , 1961"], ["thomas wassberg", "sweden", "1980", "1980", "1979 , 1985"], ["gunde svan", "sweden", "1984", "1989", "1985"]], "query": "eq { count { filter_eq { all_rows ; country ; sweden } } ; 2 } = true", "question": "in nordic skiing , there were two winners from the country of sweden ."}, {"topic": "1998 cfl draft", "wiki": "https://en.wikipedia.org/wiki/1998_CFL_Draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16441561-3.html.csv", "action": "superlative", "sent": "in the 1998 cfl draft , of players in the running back position , the last player drafted was for toronto .", "annotation": {"scope": "subset", "col_superlative": "1", "row_superlative": "8", "value_mentioned": "no", "max_or_min": "max", "other_col": "2,4", "subset": {"col": "4", "criterion": "equal", "value": "rb"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "rb"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; position ; rb }", "tointer": "select the rows whose position record fuzzily matches to rb ."}, "pick"], "result": null, "ind": 1, "tostr": "argmax { filter_eq { all_rows ; position ; rb } ; pick }"}, "cfl team"], "result": "toronto", "ind": 2, "tostr": "hop { argmax { filter_eq { all_rows ; position ; rb } ; pick } ; cfl team }"}, "toronto"], "result": true, "ind": 3, "tostr": "eq { hop { argmax { filter_eq { all_rows ; position ; rb } ; pick } ; cfl team } ; toronto } = true", "tointer": "select the rows whose position record fuzzily matches to rb . select the row whose pick record of these rows is maximum . the cfl team record of this row is toronto ."}, "logic_str": "eq { hop { argmax { filter_eq { all_rows ; position ; rb } ; pick } ; cfl team } ; toronto } = true", "interpret": "select the rows whose position record fuzzily matches to rb . select the row whose pick record of these rows is maximum . the cfl team record of this row is toronto .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "argmax_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "position_6": 6, "rb_7": 7, "pick_8": 8, "cfl team_9": 9, "toronto_10": 10}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "argmax_1": "argmax", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "position_6": "position", "rb_7": "rb", "pick_8": "pick", "cfl team_9": "cfl team", "toronto_10": "toronto"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "argmax_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "position_6": [0], "rb_7": [0], "pick_8": [1], "cfl team_9": [2], "toronto_10": [3]}, "table_header": ["pick", "cfl team", "player", "position", "college"], "table_cont": [["13", "hamilton", "devin grant", "ol", "utah"], ["14", "bc", "matt kellett", "k", "saskatchewan"], ["15", "montreal", "scott flory", "ol", "saskatchewan"], ["16", "calgary", "harland ah you", "dl", "brigham young"], ["17", "edmonton", "scott deibert", "rb", "minot state"], ["18", "montreal", "william loftus", "d", "manitoba"], ["19", "saskatchewan", "kevin pressburger", "lb", "waterloo"], ["20", "toronto", "jermaine brown", "rb", "winona state"]], "query": "eq { hop { argmax { filter_eq { all_rows ; position ; rb } ; pick } ; cfl team } ; toronto } = true", "question": "in the 1998 cfl draft , of players in the running back position , the last player drafted was for toronto ."}, {"topic": "geography of moldova", "wiki": "https://en.wikipedia.org/wiki/Geography_of_Moldova", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19242-5.html.csv", "action": "count", "sent": "8 land formations are classified with a habitat type of forest steppe .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "forest steppe", "result": "8", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "habitat type", "forest steppe"], "result": null, "ind": 0, "tointer": "select the rows whose habitat type record fuzzily matches to forest steppe .", "tostr": "filter_eq { all_rows ; habitat type ; forest steppe }"}], "result": "8", "ind": 1, "tostr": "count { filter_eq { all_rows ; habitat type ; forest steppe } }", "tointer": "select the rows whose habitat type record fuzzily matches to forest steppe . the number of such rows is 8 ."}, "8"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; habitat type ; forest steppe } } ; 8 } = true", "tointer": "select the rows whose habitat type record fuzzily matches to forest steppe . the number of such rows is 8 ."}, "logic_str": "eq { count { filter_eq { all_rows ; habitat type ; forest steppe } } ; 8 } = true", "interpret": "select the rows whose habitat type record fuzzily matches to forest steppe . the number of such rows is 8 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "habitat type_5": 5, "forest steppe_6": 6, "8_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "habitat type_5": "habitat type", "forest steppe_6": "forest steppe", "8_7": "8"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "habitat type_5": [0], "forest steppe_6": [0], "8_7": [2]}, "table_header": ["land formation", "area , km square", "of which currently forests , km square", "% forests", "habitat type"], "table_cont": [["northern moldavian hills", "4630", "476", "10.3 %", "forest steppe"], ["dniester - r\u0101ut ridge", "2480", "363", "14.6 %", "forest steppe"], ["middle prut valley", "2930", "312", "10.6 %", "forest steppe"], ["b\u0103l\u0163i steppe", "1920", "51", "2.7 %", "steppe"], ["ciuluc - solone\u0163 hills", "1690", "169", "10.0 %", "forest steppe"], ["corne\u015fti hills ( codru )", "4740", "1300", "27.5 %", "forest"], ["lower dniester hills", "3040", "371", "12.2 %", "forest steppe"], ["lower prut valley", "1810", "144", "8.0 %", "forest steppe"], ["tigheci hills", "3550", "533", "15.0 %", "forest steppe"], ["bugeac plain", "3210", "195", "6.1 %", "steppe"], ["part of podolian plateau", "1920", "175", "9.1 %", "forest steppe"], ["part of eurasian steppe", "1920", "140", "7.3 %", "steppe"]], "query": "eq { count { filter_eq { all_rows ; habitat type ; forest steppe } } ; 8 } = true", "question": "8 land formations are classified with a habitat type of forest steppe ."}, {"topic": "combined scottish universities ( uk parliament constituency )", "wiki": "https://en.wikipedia.org/wiki/Combined_Scottish_Universities_%28UK_Parliament_constituency%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1192925-1.html.csv", "action": "majority", "sent": "in most of the elections , the 1st party was unionist .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "unionist", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "1st party", "unionist"], "result": true, "ind": 0, "tointer": "for the 1st party records of all rows , most of them fuzzily match to unionist .", "tostr": "most_eq { all_rows ; 1st party ; unionist } = true"}, "logic_str": "most_eq { all_rows ; 1st party ; unionist } = true", "interpret": "for the 1st party records of all rows , most of them fuzzily match to unionist .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "1st party_3": 3, "unionist_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "1st party_3": "1st party", "unionist_4": "unionist"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "1st party_3": [0], "unionist_4": [0]}, "table_header": ["election", "1st member", "1st party", "2nd member", "2nd party", "3rd member", "3rd party"], "table_cont": [["1918", "sir william cheyne", "coalition conservative", "dugald mccoig cowan", "coalition liberal", "sir henry craik", "coalition conservative"], ["1922", "sir george berry", "unionist", "dugald mccoig cowan", "liberal", "sir henry craik", "coalition conservative"], ["apr 1927", "sir george berry", "unionist", "dugald mccoig cowan", "liberal", "john buchan", "unionist"], ["1931", "noel skelton", "unionist", "dugald mccoig cowan", "liberal", "john buchan", "unionist"], ["mar 1934", "noel skelton", "unionist", "george alexander morrison", "liberal", "john buchan", "unionist"], ["jun 1935", "noel skelton", "unionist", "george alexander morrison", "national liberal", "sir john kerr", "unionist"], ["jan 1936", "ramsay macdonald", "national labour", "george alexander morrison", "national liberal", "sir john kerr", "unionist"], ["feb 1938", "sir john anderson", "national", "george alexander morrison", "national liberal", "sir john kerr", "unionist"], ["apr 1945", "sir john anderson", "national", "sir john boyd - orr", "independent", "sir john kerr", "unionist"], ["nov 1946", "sir john anderson", "national", "walter elliot", "unionist", "sir john kerr", "unionist"], ["1950", "university constituencies abolished", "university constituencies abolished", "university constituencies abolished", "university constituencies abolished", "university constituencies abolished", "university constituencies abolished"]], "query": "most_eq { all_rows ; 1st party ; unionist } = true", "question": "in most of the elections , the 1st party was unionist ."}, {"topic": "plug - in electric vehicles in the united states", "wiki": "https://en.wikipedia.org/wiki/Plug-in_electric_vehicles_in_the_United_States", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24620684-2.html.csv", "action": "comparative", "sent": "the gallon to mile ratio for clean electric grid california for the mitsubishi i - mievis is lower than the chevrolet volt .", "annotation": {"row_1": "1", "row_2": "5", "col": "5", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "vehicle", "mitsubishi i - miev"], "result": null, "ind": 0, "tointer": "select the rows whose vehicle record fuzzily matches to mitsubishi i - miev .", "tostr": "filter_eq { all_rows ; vehicle ; mitsubishi i - miev }"}, "clean electric grid california ( san francisco )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; vehicle ; mitsubishi i - miev } ; clean electric grid california ( san francisco ) }", "tointer": "select the rows whose vehicle record fuzzily matches to mitsubishi i - miev . take the clean electric grid california ( san francisco ) record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "vehicle", "chevrolet volt"], "result": null, "ind": 1, "tointer": "select the rows whose vehicle record fuzzily matches to chevrolet volt .", "tostr": "filter_eq { all_rows ; vehicle ; chevrolet volt }"}, "clean electric grid california ( san francisco )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; vehicle ; chevrolet volt } ; clean electric grid california ( san francisco ) }", "tointer": "select the rows whose vehicle record fuzzily matches to chevrolet volt . take the clean electric grid california ( san francisco ) record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; vehicle ; mitsubishi i - miev } ; clean electric grid california ( san francisco ) } ; hop { filter_eq { all_rows ; vehicle ; chevrolet volt } ; clean electric grid california ( san francisco ) } } = true", "tointer": "select the rows whose vehicle record fuzzily matches to mitsubishi i - miev . take the clean electric grid california ( san francisco ) record of this row . select the rows whose vehicle record fuzzily matches to chevrolet volt . take the clean electric grid california ( san francisco ) record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; vehicle ; mitsubishi i - miev } ; clean electric grid california ( san francisco ) } ; hop { filter_eq { all_rows ; vehicle ; chevrolet volt } ; clean electric grid california ( san francisco ) } } = true", "interpret": "select the rows whose vehicle record fuzzily matches to mitsubishi i - miev . take the clean electric grid california ( san francisco ) record of this row . select the rows whose vehicle record fuzzily matches to chevrolet volt . take the clean electric grid california ( san francisco ) record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "vehicle_7": 7, "mitsubishi i - miev_8": 8, "clean electric grid california (san francisco)_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "vehicle_11": 11, "chevrolet volt_12": 12, "clean electric grid california (san francisco)_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "vehicle_7": "vehicle", "mitsubishi i - miev_8": "mitsubishi i - miev", "clean electric grid california (san francisco)_9": "clean electric grid california ( san francisco )", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "vehicle_11": "vehicle", "chevrolet volt_12": "chevrolet volt", "clean electric grid california (san francisco)_13": "clean electric grid california ( san francisco )"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "vehicle_7": [0], "mitsubishi i - miev_8": [0], "clean electric grid california (san francisco)_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "vehicle_11": [1], "chevrolet volt_12": [1], "clean electric grid california (san francisco)_13": [3]}, "table_header": ["vehicle", "operating mode", "epa rated all - electric range", "epa rated combined fuel economy", "clean electric grid california ( san francisco )", "us national average electric mix", "dirty electric grid rocky mountains ( denver )"], "table_cont": [["mitsubishi i - miev", "all - electric", "-", "112 mpg - e ( 30 kw - hrs / 100 mi )", "100 g / mi ( 62 g / km )", "200 g / mi ( 124 g / km )", "290 g / mi ( 180 g / km )"], ["ford focus electric", "all - electric", "-", "105 mpg - e ( 32 kw - hrs / 100 mi )", "110 g / mi ( 68 g / km )", "210 g / mi ( 131 g / km )", "310 g / mi ( 193 g / km )"], ["bmw activee", "all - electric", "-", "102 mpg - e ( 33 kw - hrs / 100 mi )", "110 g / mi ( 68 g / km )", "220 g / mi ( 137 g / km )", "320 g / mi ( 199 g / km )"], ["nissan leaf", "all - electric", "-", "99 mpg - e ( 34 kw - hrs / 100 mi )", "120 g / mi ( 75 g / km )", "230 g / mi ( 143 g / km )", "330 g / mi ( 205 g / km )"], ["chevrolet volt", "electricity only ( charge - depleting )", "-", "94 mpg - e ( 36 kw - hrs / 100 mi )", "190 g / mi ( 118 g / km ) ( 1 )", "260 g / mi ( 162 g / km ) ( 1 )", "330 g / mi ( 205 g / km ) ( 1 )"], ["smart ed", "all - electric", "-", "87 mpg - e ( 39 kw - hrs / 100 mi )", "130 g / mi ( 81 g / km )", "260 g / mi ( 162 g / km )", "380 g / mi ( 236 g / km )"], ["coda", "all - electric", "-", "73 mpg - e ( 46 kw - hrs / 100 mi )", "160 g / mi ( 99 g / km )", "300 g / mi ( 186 g / km )", "440 g / mi ( 273 g / km )"]], "query": "less { hop { filter_eq { all_rows ; vehicle ; mitsubishi i - miev } ; clean electric grid california ( san francisco ) } ; hop { filter_eq { all_rows ; vehicle ; chevrolet volt } ; clean electric grid california ( san francisco ) } } = true", "question": "the gallon to mile ratio for clean electric grid california for the mitsubishi i - mievis is lower than the chevrolet volt ."}, {"topic": "am5x86", "wiki": "https://en.wikipedia.org/wiki/Am5x86", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-167482-1.html.csv", "action": "superlative", "sent": "the model with the highest frequency is x5 - 150 adw .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "11", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "frequency"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; frequency }"}, "model number"], "result": "x5 - 150 adw", "ind": 1, "tostr": "hop { argmax { all_rows ; frequency } ; model number }"}, "x5 - 150 adw"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; frequency } ; model number } ; x5 - 150 adw } = true", "tointer": "select the row whose frequency record of all rows is maximum . the model number record of this row is x5 - 150 adw ."}, "logic_str": "eq { hop { argmax { all_rows ; frequency } ; model number } ; x5 - 150 adw } = true", "interpret": "select the row whose frequency record of all rows is maximum . the model number record of this row is x5 - 150 adw .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "frequency_5": 5, "model number_6": 6, "x5 - 150 adw_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "frequency_5": "frequency", "model number_6": "model number", "x5 - 150 adw_7": "x5 - 150 adw"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "frequency_5": [0], "model number_6": [1], "x5 - 150 adw_7": [2]}, "table_header": ["model number", "frequency", "l1 cache", "mult", "voltage"], "table_cont": [["x5 - 133 adh", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 ady", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 adw", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 adz", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 bgc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 v16bgc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 w16bgc", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 133 v16bhc", "133 mhz", "16 kib", "4", "3.45 v"], ["x5 - 133 w16bhc", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 133 sfz", "133 mhz", "16 kib", "4", "3.3 v"], ["x5 - 150 adw", "150 mhz", "16 kib", "3", "3.45 v"]], "query": "eq { hop { argmax { all_rows ; frequency } ; model number } ; x5 - 150 adw } = true", "question": "the model with the highest frequency is x5 - 150 adw ."}, {"topic": "iowa corn cy - hawk series", "wiki": "https://en.wikipedia.org/wiki/Iowa_Corn_Cy-Hawk_Series", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14175075-3.html.csv", "action": "count", "sent": "iowa state and iowa faced each other in women 's gymnastics twice .", "annotation": {"scope": "all", "criterion": "equal", "value": "w gymnastics", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "sport", "w gymnastics"], "result": null, "ind": 0, "tointer": "select the rows whose sport record fuzzily matches to w gymnastics .", "tostr": "filter_eq { all_rows ; sport ; w gymnastics }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; sport ; w gymnastics } }", "tointer": "select the rows whose sport record fuzzily matches to w gymnastics . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; sport ; w gymnastics } } ; 2 } = true", "tointer": "select the rows whose sport record fuzzily matches to w gymnastics . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; sport ; w gymnastics } } ; 2 } = true", "interpret": "select the rows whose sport record fuzzily matches to w gymnastics . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "sport_5": 5, "w gymnastics_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "sport_5": "sport", "w gymnastics_6": "w gymnastics", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "sport_5": [0], "w gymnastics_6": [0], "2_7": [2]}, "table_header": ["date", "site", "sport", "winning team", "series"], "table_cont": [["september 7 , 2005", "iowa city", "w soccer", "iowa state", "iowa state 2 - 0"], ["september 10 , 2005", "ames", "football", "iowa state", "iowa state 5 - 0"], ["december 2 , 2005", "ames", "wrestling", "iowa", "iowa state 5 - 2"], ["december 8 , 2005", "ames", "w basketball", "iowa state", "iowa state 7 - 2"], ["december 9 , 2005", "ames", "m basketball", "iowa state", "iowa state 9 - 2"], ["december 9 , 2005", "ames", "w swimming", "iowa", "iowa state 9 - 4"], ["january 28 , 2006", "iowa city", "w gymnastics", "iowa state", "iowa state 11 - 4"], ["march 17 , 2006", "ames", "w gymnastics", "iowa state", "iowa state 13 - 4"], ["march 17 , 2006", "ames", "softball", "iowa", "iowa state 13 - 6"]], "query": "eq { count { filter_eq { all_rows ; sport ; w gymnastics } } ; 2 } = true", "question": "iowa state and iowa faced each other in women 's gymnastics twice ."}, {"topic": "modern guilt", "wiki": "https://en.wikipedia.org/wiki/Modern_Guilt", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17388337-3.html.csv", "action": "unique", "sent": "of the releases of the album modern guilt , the version with the catalog number b001150702 was the only one released in canada .", "annotation": {"scope": "all", "row": "4", "col": "1", "col_other": "5", "criterion": "equal", "value": "canada", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "region", "canada"], "result": null, "ind": 0, "tointer": "select the rows whose region record fuzzily matches to canada .", "tostr": "filter_eq { all_rows ; region ; canada }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; region ; canada } }", "tointer": "select the rows whose region record fuzzily matches to canada . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "region", "canada"], "result": null, "ind": 0, "tointer": "select the rows whose region record fuzzily matches to canada .", "tostr": "filter_eq { all_rows ; region ; canada }"}, "catalog"], "result": "b001150702", "ind": 2, "tostr": "hop { filter_eq { all_rows ; region ; canada } ; catalog }"}, "b001150702"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; region ; canada } ; catalog } ; b001150702 }", "tointer": "the catalog record of this unqiue row is b001150702 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; region ; canada } } ; eq { hop { filter_eq { all_rows ; region ; canada } ; catalog } ; b001150702 } } = true", "tointer": "select the rows whose region record fuzzily matches to canada . there is only one such row in the table . the catalog record of this unqiue row is b001150702 ."}, "logic_str": "and { only { filter_eq { all_rows ; region ; canada } } ; eq { hop { filter_eq { all_rows ; region ; canada } ; catalog } ; b001150702 } } = true", "interpret": "select the rows whose region record fuzzily matches to canada . there is only one such row in the table . the catalog record of this unqiue row is b001150702 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "region_7": 7, "canada_8": 8, "str_eq_3": 3, "str_hop_2": 2, "catalog_9": 9, "b001150702_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "region_7": "region", "canada_8": "canada", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "catalog_9": "catalog", "b001150702_10": "b001150702"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "region_7": [0], "canada_8": [0], "str_eq_3": [4], "str_hop_2": [3], "catalog_9": [2], "b001150702_10": [3]}, "table_header": ["region", "date", "label", "format", "catalog"], "table_cont": [["world", "july 8 , 2008", "dgc", "digital download", ""], ["argentina", "july 8 , 2008", "dgc", "cd", "1775441"], ["australia", "july 8 , 2008", "dgc", "cd", "1775441"], ["canada", "july 8 , 2008", "dgc", "cd", "b001150702"], ["united states", "july 8 , 2008", "dgc", "cd", "b0011507 - 02"], ["united states", "july 8 , 2008", "dgc", "lp", "b0011630 - 01"], ["united kingdom", "july 8 , 2008", "dgc", "cd", "b001150702"], ["united kingdom", "july 8 , 2008", "xl", "cd", "xlcd369"], ["united kingdom", "july 8 , 2008", "xl", "lp", "xllp 369"], ["europe", "july 8 , 2008", "xl", "lp", "xllp 369"], ["europe", "july 8 , 2008", "xl", "cd", "xlcd369"]], "query": "and { only { filter_eq { all_rows ; region ; canada } } ; eq { hop { filter_eq { all_rows ; region ; canada } ; catalog } ; b001150702 } } = true", "question": "of the releases of the album modern guilt , the version with the catalog number b001150702 was the only one released in canada ."}, {"topic": "list of the green green grass episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_The_Green_Green_Grass_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17641206-4.html.csv", "action": "count", "sent": "there are four episodes of the green green grass written by john sullivan .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "john sullivan", "result": "4", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "written by", "john sullivan"], "result": null, "ind": 0, "tointer": "select the rows whose written by record fuzzily matches to john sullivan .", "tostr": "filter_eq { all_rows ; written by ; john sullivan }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; written by ; john sullivan } }", "tointer": "select the rows whose written by record fuzzily matches to john sullivan . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; written by ; john sullivan } } ; 4 } = true", "tointer": "select the rows whose written by record fuzzily matches to john sullivan . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; written by ; john sullivan } } ; 4 } = true", "interpret": "select the rows whose written by record fuzzily matches to john sullivan . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "written by_5": 5, "john sullivan_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "written by_5": "written by", "john sullivan_6": "john sullivan", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "written by_5": [0], "john sullivan_6": [0], "4_7": [2]}, "table_header": ["episode", "original title", "directed by", "written by", "original airdate", "duration", "viewership"], "table_cont": [["8", "testing times", "dewi humphreys", "jim sullivan", "15 september 2006", "30 minutes", "5.04 million"], ["9", "here 's to you , mrs boyce", "dewi humphreys", "john sullivan", "22 september 2006", "30 minutes", "4.79 million"], ["10", "bothered and bewildered", "dewi humphreys", "derren litten and john sullivan", "29 september 2006", "30 minutes", "4.77 million"], ["11", "mother earth", "dewi humphreys", "jim sullivan", "6 october 2006", "30 minutes", "5.01 million"], ["12", "schoolboy french", "dewi humphreys", "james windett and john sullivan", "13 october 2006", "30 minutes", "4.96 million"], ["13", "more questions than answers", "dewi humphreys", "paul alexander and john sullivan", "20 october 2006", "30 minutes", "3.90 million"]], "query": "eq { count { filter_eq { all_rows ; written by ; john sullivan } } ; 4 } = true", "question": "there are four episodes of the green green grass written by john sullivan ."}, {"topic": "2008 victoria cup", "wiki": "https://en.wikipedia.org/wiki/2008_Victoria_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17058856-2.html.csv", "action": "count", "sent": "two of the penalties in the 2008 victoria cup hockey game were for roughing .", "annotation": {"scope": "all", "criterion": "equal", "value": "roughing", "result": "2", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "penalty", "roughing"], "result": null, "ind": 0, "tointer": "select the rows whose penalty record fuzzily matches to roughing .", "tostr": "filter_eq { all_rows ; penalty ; roughing }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; penalty ; roughing } }", "tointer": "select the rows whose penalty record fuzzily matches to roughing . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; penalty ; roughing } } ; 2 } = true", "tointer": "select the rows whose penalty record fuzzily matches to roughing . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; penalty ; roughing } } ; 2 } = true", "interpret": "select the rows whose penalty record fuzzily matches to roughing . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "penalty_5": 5, "roughing_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "penalty_5": "penalty", "roughing_6": "roughing", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "penalty_5": [0], "roughing_6": [0], "2_7": [2]}, "table_header": ["period", "team", "player", "penalty", "time"], "table_cont": [["1st", "nyr", "dan fritsche", "interference", "2:39"], ["1st", "met", "vadim ermolayev", "hooking", "6:23"], ["1st", "nyr", "markus n\u00e4slund", "holding", "9:43"], ["1st", "nyr", "paul mara", "holding", "16:19"], ["2nd", "met", "evgeni biryukov", "interference", "26:27"], ["2nd", "nyr", "petr pr\u016fcha", "holding", "29:17"], ["2nd", "met", "vadim ermolayev", "hooking", "31:48"], ["2nd", "nyr", "markus n\u00e4slund", "hooking", "32:17"], ["2nd", "nyr", "wade redden", "interference", "34:09"], ["2nd", "met", "alexei kaigorodov", "hooking", "39:25"], ["2nd", "met", "nikolai zavarukhin", "hooking", "39:28"], ["3rd", "met", "vitali atyushov", "slashing", "42:19"], ["3rd", "met", "stanislav chistov", "hooking", "49:20"], ["3rd", "met", "evgeni varlamov", "tripping", "50:50"], ["3rd", "nyr", "ryan callahan", "roughing", "55:37"], ["3rd", "met", "karel pila\u0159", "roughing", "55:37"]], "query": "eq { count { filter_eq { all_rows ; penalty ; roughing } } ; 2 } = true", "question": "two of the penalties in the 2008 victoria cup hockey game were for roughing ."}, {"topic": "indiana high school athletics conferences : mid - eastern - northwestern", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Mid-Eastern_%E2%80%93_Northwestern", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18942405-6.html.csv", "action": "majority", "sent": "all schools in the mid - eastern - northwestern indiana high school athletics conference have an aaaa ihsaa class .", "annotation": {"scope": "all", "col": "5", "most_or_all": "all", "criterion": "equal", "value": "aaaa", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "ihsaa class", "aaaa"], "result": true, "ind": 0, "tointer": "for the ihsaa class records of all rows , all of them fuzzily match to aaaa .", "tostr": "all_eq { all_rows ; ihsaa class ; aaaa } = true"}, "logic_str": "all_eq { all_rows ; ihsaa class ; aaaa } = true", "interpret": "for the ihsaa class records of all rows , all of them fuzzily match to aaaa .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "ihsaa class_3": 3, "aaaa_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "ihsaa class_3": "ihsaa class", "aaaa_4": "aaaa"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "ihsaa class_3": [0], "aaaa_4": [0]}, "table_header": ["school", "mascot", "location", "enrollment", "ihsaa class", "ihsaa football class", "county"], "table_cont": [["indianapolis decatur central", "hawks", "indianapolis", "1870", "aaaa", "aaaaa", "49 marion"], ["franklin community", "grizzly cubs", "franklin", "1601", "aaaa", "aaaaa", "41 johnson"], ["greenwood", "woodmen", "greenwood", "1167", "aaaa", "aaaa", "41 johnson"], ["martinsville", "artesians", "martinsville", "1661", "aaaa", "aaaaa", "55 morgan"], ["mooresville", "pioneers", "mooresville", "1348", "aaaa", "aaaa", "55 morgan"], ["plainfield", "quakers", "plainfield", "1388", "aaaa", "aaaa", "32 hendricks"], ["whiteland community", "warriors", "whiteland", "1713", "aaaa", "aaaaa", "41 johnson"]], "query": "all_eq { all_rows ; ihsaa class ; aaaa } = true", "question": "all schools in the mid - eastern - northwestern indiana high school athletics conference have an aaaa ihsaa class ."}, {"topic": "1989 masters tournament", "wiki": "https://en.wikipedia.org/wiki/1989_Masters_Tournament", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16514242-7.html.csv", "action": "count", "sent": "there were 10 players who participated in the 1989 masters tournament .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "10", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "player"], "result": null, "ind": 0, "tointer": "select the rows whose player record is arbitrary .", "tostr": "filter_all { all_rows ; player }"}], "result": "10", "ind": 1, "tostr": "count { filter_all { all_rows ; player } }", "tointer": "select the rows whose player record is arbitrary . the number of such rows is 10 ."}, "10"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; player } } ; 10 } = true", "tointer": "select the rows whose player record is arbitrary . the number of such rows is 10 ."}, "logic_str": "eq { count { filter_all { all_rows ; player } } ; 10 } = true", "interpret": "select the rows whose player record is arbitrary . the number of such rows is 10 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "player_5": 5, "10_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "player_5": "player", "10_6": "10"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "player_5": [0], "10_6": [2]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["t1", "nick faldo", "england", "68 + 73 + 77 + 65 = 283", "- 5", "playoff"], ["t1", "scott hoch", "united states", "69 + 74 + 71 + 69 = 283", "- 5", "playoff"], ["t3", "ben crenshaw", "united states", "71 + 72 + 70 + 71 = 284", "- 4", "64450"], ["t3", "greg norman", "australia", "74 + 75 + 68 + 67 = 284", "- 4", "64450"], ["5", "seve ballesteros", "spain", "71 + 72 + 73 + 69 = 285", "- 3", "44400"], ["6", "mike reid", "united states", "72 + 71 + 71 + 72 = 286", "- 2", "40000"], ["7", "jodie mudd", "united states", "73 + 76 + 72 + 66 = 287", "- 1", "37200"], ["t8", "chip beck", "united states", "74 + 76 + 70 + 68 = 288", "e", "32200"], ["t8", "jos\u00e9 mar\u00eda olaz\u00e1bal", "spain", "77 + 73 + 70 + 68 = 288", "e", "32200"], ["t8", "jeff sluman", "united states", "74 + 72 + 74 + 68 = 288", "e", "32200"]], "query": "eq { count { filter_all { all_rows ; player } } ; 10 } = true", "question": "there were 10 players who participated in the 1989 masters tournament ."}, {"topic": "fiba eurobasket 2009 squads", "wiki": "https://en.wikipedia.org/wiki/FIBA_EuroBasket_2009_squads", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-23670057-4.html.csv", "action": "majority", "sent": "most of the people on the fiba european basketball squads were born in the 1980s .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than", "value": "1979", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "year born", "1979"], "result": true, "ind": 0, "tointer": "for the year born records of all rows , most of them are greater than 1979 .", "tostr": "most_greater { all_rows ; year born ; 1979 } = true"}, "logic_str": "most_greater { all_rows ; year born ; 1979 } = true", "interpret": "for the year born records of all rows , most of them are greater than 1979 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "year born_3": 3, "1979_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "year born_3": "year born", "1979_4": "1979"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "year born_3": [0], "1979_4": [0]}, "table_header": ["no", "player", "height ( m )", "height ( f )", "position", "year born", "current club"], "table_cont": [["4", "moran rot", "1.83", "6 ' 00", "guard", "1982", "hapoel jerusalem"], ["5", "yuval naimi", "1.87", "6 ' 02", "guard", "1988", "hapoel jerusalem"], ["6", "gal mekel", "1.95", "6 ' 05", "guard", "1988", "maccabi tel aviv"], ["7", "raviv limonad", "1.91", "6 ' 03", "guard", "1984", "maccabi tel aviv"], ["8", "guy pnini", "2.01", "6 ' 07", "forward", "1983", "maccabi tel aviv"], ["9", "yotam halperin", "1.96", "6 ' 05", "guard", "1984", "olympiacos"], ["10", "tal burstein", "1.98", "6 ' 06", "guard", "1980", "maccabi tel aviv"], ["11", "lior eliyahu", "2.07", "6 ' 09", "forward", "1985", "caja laboral"], ["12", "moshe mizrahi", "2.02", "6 ' 08", "forward", "1980", "maccabi haifa"], ["13", "ido kozikaro", "2.02", "6 ' 08", "forward", "1978", "maccabi haifa"], ["14", "yaniv green", "2.06", "6 ' 09", "center", "1980", "maccabi tel aviv"]], "query": "most_greater { all_rows ; year born ; 1979 } = true", "question": "most of the people on the fiba european basketball squads were born in the 1980s ."}, {"topic": "list of sons of anarchy episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Sons_of_Anarchy_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-20726262-3.html.csv", "action": "comparative", "sent": "the episode titled gilead had a higher viewership than the one titled fa guan .", "annotation": {"row_1": "7", "row_2": "9", "col": "8", "col_other": "3", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "title", "gilead"], "result": null, "ind": 0, "tointer": "select the rows whose title record fuzzily matches to gilead .", "tostr": "filter_eq { all_rows ; title ; gilead }"}, "usviewers ( million )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; title ; gilead } ; usviewers ( million ) }", "tointer": "select the rows whose title record fuzzily matches to gilead . take the usviewers ( million ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "title", "fa guan"], "result": null, "ind": 1, "tointer": "select the rows whose title record fuzzily matches to fa guan .", "tostr": "filter_eq { all_rows ; title ; fa guan }"}, "usviewers ( million )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; title ; fa guan } ; usviewers ( million ) }", "tointer": "select the rows whose title record fuzzily matches to fa guan . take the usviewers ( million ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; title ; gilead } ; usviewers ( million ) } ; hop { filter_eq { all_rows ; title ; fa guan } ; usviewers ( million ) } } = true", "tointer": "select the rows whose title record fuzzily matches to gilead . take the usviewers ( million ) record of this row . select the rows whose title record fuzzily matches to fa guan . take the usviewers ( million ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; title ; gilead } ; usviewers ( million ) } ; hop { filter_eq { all_rows ; title ; fa guan } ; usviewers ( million ) } } = true", "interpret": "select the rows whose title record fuzzily matches to gilead . take the usviewers ( million ) record of this row . select the rows whose title record fuzzily matches to fa guan . take the usviewers ( million ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "title_7": 7, "gilead_8": 8, "usviewers (million)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "title_11": 11, "fa guan_12": 12, "usviewers (million)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "title_7": "title", "gilead_8": "gilead", "usviewers (million)_9": "usviewers ( million )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "title_11": "title", "fa guan_12": "fa guan", "usviewers (million)_13": "usviewers ( million )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "title_7": [0], "gilead_8": [0], "usviewers (million)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "title_11": [1], "fa guan_12": [1], "usviewers (million)_13": [3]}, "table_header": ["no in series", "no in season", "title", "directedby", "writtenby", "originalairdate", "production code", "usviewers ( million )"], "table_cont": [["14", "1", "albification", "guy ferland", "kurt sutter", "september 8 , 2009", "2wab01", "4.29"], ["15", "2", "small tears", "stephen kay", "jack logiudice", "september 15 , 2009", "2wab02", "n / a"], ["16", "3", "fix", "gwyneth horder - payton", "dave erickson", "september 22 , 2009", "2wab03", "3.49"], ["17", "4", "eureka", "guy ferland", "kurt sutter & brett conrad", "september 29 , 2009", "2wab04", "3.76"], ["18", "5", "smite", "terrence o'hara", "chris collins", "october 6 , 2009", "2wab05", "n / a"], ["19", "6", "falx cerebri", "billy gierhart", "regina corrado", "october 13 , 2009", "2wab06", "n / a"], ["20", "7", "gilead", "gwyneth horder - payton", "kurt sutter & chris collins", "october 20 , 2009", "2wab07", "3.70"], ["21", "8", "potlatch", "paul maibaum", "kurt sutter & misha green", "october 27 , 2009", "2wab08", "3.39"], ["22", "9", "fa guan", "stephen kay", "brett conrad & liz sagal", "november 3 , 2009", "2wab09", "3.52"], ["23", "10", "balm", "paris barclay", "dave erickson & stevie long", "november 10 , 2009", "2wab10", "3.38"], ["25", "12", "the culling", "gwyneth horder - payton", "kurt sutter & dave erickson", "november 24 , 2009", "2wab12", "n / a"]], "query": "greater { hop { filter_eq { all_rows ; title ; gilead } ; usviewers ( million ) } ; hop { filter_eq { all_rows ; title ; fa guan } ; usviewers ( million ) } } = true", "question": "the episode titled gilead had a higher viewership than the one titled fa guan ."}, {"topic": "conference carolinas", "wiki": "https://en.wikipedia.org/wiki/Conference_Carolinas", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11658094-3.html.csv", "action": "ordinal", "sent": "guilford college is the oldest established institution among those which participated in the conference carolinas .", "annotation": {"row": "7", "col": "3", "order": "1", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "founded", "1"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; founded ; 1 }"}, "institution"], "result": "guilford college", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; founded ; 1 } ; institution }"}, "guilford college"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; founded ; 1 } ; institution } ; guilford college } = true", "tointer": "select the row whose founded record of all rows is 1st minimum . the institution record of this row is guilford college ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; founded ; 1 } ; institution } ; guilford college } = true", "interpret": "select the row whose founded record of all rows is 1st minimum . the institution record of this row is guilford college .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "founded_5": 5, "1_6": 6, "institution_7": 7, "guilford college_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "founded_5": "founded", "1_6": "1", "institution_7": "institution", "guilford college_8": "guilford college"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "founded_5": [0], "1_6": [0], "institution_7": [1], "guilford college_8": [2]}, "table_header": ["institution", "location", "founded", "type", "enrollment", "nickname", "joined", "left", "current conference"], "table_cont": [["anderson university", "anderson , south carolina", "1911", "private", "2907", "trojans", "1998", "2010", "sac"], ["appalachian state university", "boone , north carolina", "1899", "public", "17589", "mountaineers", "1930", "1967", "socon ( sun belt in 2014 ) ( ncaa division i )"], ["catawba college", "salisbury , north carolina", "1851", "private", "1300", "indians", "1930", "1975", "sac"], ["coker college", "hartsville , south carolina", "1908", "private", "1200", "cobras", "1991", "2013", "sac"], ["east carolina university", "greenville , north carolina", "1907", "public", "27386", "pirates", "1947", "1962", "c - usa ( the american in 2014 ) ( ncaa division i )"], ["elon university", "elon , north carolina", "1889", "private", "6720", "phoenix", "1930", "1975", "socon ( caa in 2014 ) ( ncaa division i )"], ["guilford college", "greensboro , north carolina", "1837", "private", "2706", "quakers", "1930", "1988", "odac ( ncaa division iii )"], ["high point university", "high point , north carolina", "1924", "private", "4519", "panthers", "1930", "1997", "big south ( ncaa division i )"], ["lenoirrhyne university", "hickory , north carolina", "1891", "private", "1983", "bears", "1930", "1975", "sac"], ["longwood university", "farmville , virginia", "1839", "public", "4800", "lancers", "1995", "2003", "big south ( ncaa division i )"], ["mars hill college", "mars hill , north carolina", "1856", "private", "1370", "lions", "1973", "1975", "sac"], ["newberry college", "newberry , south carolina", "1856", "private", "949", "wolves", "1961", "1972", "sac"], ["university of north carolina at pembroke", "pembroke , north carolina", "1887", "public", "6433", "braves", "1976", "1992", "peach belt ( pbc )"], ["presbyterian college", "clinton , south carolina", "1880", "private", "1300", "blue hose", "1965", "1972", "big south ( ncaa division i )"], ["queens university of charlotte", "charlotte , north carolina", "1857", "private", "2386", "royals", "1995", "2013", "sac"], ["st andrews university", "laurinburg , north carolina", "1958", "private", "600", "knights", "1988", "2012", "aac ( naia )"], ["western carolina university", "cullowhee , north carolina", "1889", "public", "9608", "catamounts", "1933", "1975", "socon ( ncaa division i )"]], "query": "eq { hop { nth_argmin { all_rows ; founded ; 1 } ; institution } ; guilford college } = true", "question": "guilford college is the oldest established institution among those which participated in the conference carolinas ."}, {"topic": "list of computer system emulators", "wiki": "https://en.wikipedia.org/wiki/List_of_computer_system_emulators", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11561331-17.html.csv", "action": "count", "sent": "only 1 atari emulator has unix explicitly listed as a platform .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "unix", "result": "1", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "platform", "unix"], "result": null, "ind": 0, "tointer": "select the rows whose platform record fuzzily matches to unix .", "tostr": "filter_eq { all_rows ; platform ; unix }"}], "result": "1", "ind": 1, "tostr": "count { filter_eq { all_rows ; platform ; unix } }", "tointer": "select the rows whose platform record fuzzily matches to unix . the number of such rows is 1 ."}, "1"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; platform ; unix } } ; 1 } = true", "tointer": "select the rows whose platform record fuzzily matches to unix . the number of such rows is 1 ."}, "logic_str": "eq { count { filter_eq { all_rows ; platform ; unix } } ; 1 } = true", "interpret": "select the rows whose platform record fuzzily matches to unix . the number of such rows is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "platform_5": 5, "unix_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "platform_5": "platform", "unix_6": "unix", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "platform_5": [0], "unix_6": [0], "1_7": [2]}, "table_header": ["name", "actual version", "system", "platform", "license"], "table_cont": [["steem", "3.2", "atari st e", "windows , linux", "freeware"], ["saint", "2.20", "atari st / ste", "windows", "freeware"], ["gemulator", "9.0", "atari st", "windows", "commercial ( free )"], ["hatari", "1.6.2", "atari st / ste , atari tt , atari falcon", "cross - platform", "gpl"], ["pacifist", "0.49 b", "atari st", "dos , windows", "giftware"], ["stonx", "0.6.7.6", "atari st", "unix , dos , windows", "gpl"], ["winston", "0.1 r2", "atari st", "windows", "freeware"], ["aranym", "0.9.13", "atari st , atari tt , atari falcon", "cross - platform", "gpl"], ["mess", "0.147", "various computers and consoles", "cross - platform", "custom"], ["estyjs", "n / a", "atari st", "cross - platform", "-"]], "query": "eq { count { filter_eq { all_rows ; platform ; unix } } ; 1 } = true", "question": "only 1 atari emulator has unix explicitly listed as a platform ."}, {"topic": "christian heritage party of canada candidates , 2008 canadian federal election", "wiki": "https://en.wikipedia.org/wiki/Christian_Heritage_Party_of_Canada_candidates%2C_2008_Canadian_federal_election", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12890254-2.html.csv", "action": "aggregation", "sent": "the total number of votes cast for the christian heritage party of canada candidates , 2008 canadian federal election is 3383 .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "3383", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "votes"], "result": "3383", "ind": 0, "tostr": "sum { all_rows ; votes }"}, "3383"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; votes } ; 3383 } = true", "tointer": "the sum of the votes record of all rows is 3383 ."}, "logic_str": "round_eq { sum { all_rows ; votes } ; 3383 } = true", "interpret": "the sum of the votes record of all rows is 3383 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "votes_4": 4, "3383_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "votes_4": "votes", "3383_5": "3383"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "votes_4": [0], "3383_5": [1]}, "table_header": ["riding", "candidate 's name", "gender", "residence", "occupation", "votes", "rank"], "table_cont": [["chilliwack-fraser canyon", "harold j ludwig", "m", "abbotsford", "retired", "653", "5th"], ["langley", "ron gray", "m", "langely", "political party leader", "594", "5th"], ["nanaimo-alberni", "frank wagner", "m", "nanaimo", "foster father", "176", "5th"], ["saanich-gulf islands", "dan moreau", "m", "sidney", "environmental health officer", "114", "8th"], ["skeena-bulkley valley", "rod taylor", "m", "smithers", "quality control supervisor", "1125", "5th"], ["surrey north", "kevin pielak", "m", "surrey", "teacher", "484", "5th"], ["victoria", "john cooper", "m", "victoria", "physician", "237", "5th"]], "query": "round_eq { sum { all_rows ; votes } ; 3383 } = true", "question": "the total number of votes cast for the christian heritage party of canada candidates , 2008 canadian federal election is 3383 ."}, {"topic": "2008 nascar craftsman truck series", "wiki": "https://en.wikipedia.org/wiki/2008_NASCAR_Craftsman_Truck_Series", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14292964-22.html.csv", "action": "superlative", "sent": "mike skinner had the lowest car number of all the drivers .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "car"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; car }"}, "driver"], "result": "mike skinner", "ind": 1, "tostr": "hop { argmin { all_rows ; car } ; driver }"}, "mike skinner"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; car } ; driver } ; mike skinner } = true", "tointer": "select the row whose car record of all rows is minimum . the driver record of this row is mike skinner ."}, "logic_str": "eq { hop { argmin { all_rows ; car } ; driver } ; mike skinner } = true", "interpret": "select the row whose car record of all rows is minimum . the driver record of this row is mike skinner .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "car_5": 5, "driver_6": 6, "mike skinner_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "car_5": "car", "driver_6": "driver", "mike skinner_7": "mike skinner"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "car_5": [0], "driver_6": [1], "mike skinner_7": [2]}, "table_header": ["pos", "car", "driver", "make", "team"], "table_cont": [["1", "5", "mike skinner", "toyota", "bill davis racing"], ["2", "99", "erik darnell", "ford", "roush fenway racing"], ["3", "88", "matt crafton", "chevrolet", "thorsport racing"], ["4", "15", "john andretti", "toyota", "billy ballew motorsports"], ["5", "33", "ron hornaday", "chevrolet", "kevin harvick incorporated"], ["6", "51", "kyle busch", "toyota", "billy ballew motorsports"], ["7", "40", "jeff green", "chevrolet", "key motorsports"], ["8", "7", "t j bell", "chevrolet", "the racer 's group"], ["9", "30", "todd bodine", "toyota", "germain racing"], ["10", "81", "donny lia r", "chevrolet", "randy moss motorsports"]], "query": "eq { hop { argmin { all_rows ; car } ; driver } ; mike skinner } = true", "question": "mike skinner had the lowest car number of all the drivers ."}, {"topic": "list of australian submissions for the academy award for best foreign language film", "wiki": "https://en.wikipedia.org/wiki/List_of_Australian_submissions_for_the_Academy_Award_for_Best_Foreign_Language_Film", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16254861-1.html.csv", "action": "comparative", "sent": "in the list of australian submissions for the academy award for best foreign language film , the film ten canoes was one year before the film the home song stories .", "annotation": {"row_1": "3", "row_2": "4", "col": "1", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "film title used in nomination", "ten canoes"], "result": null, "ind": 0, "tointer": "select the rows whose film title used in nomination record fuzzily matches to ten canoes .", "tostr": "filter_eq { all_rows ; film title used in nomination ; ten canoes }"}, "year ( ceremony )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; film title used in nomination ; ten canoes } ; year ( ceremony ) }", "tointer": "select the rows whose film title used in nomination record fuzzily matches to ten canoes . take the year ( ceremony ) record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "film title used in nomination", "the home song stories"], "result": null, "ind": 1, "tointer": "select the rows whose film title used in nomination record fuzzily matches to the home song stories .", "tostr": "filter_eq { all_rows ; film title used in nomination ; the home song stories }"}, "year ( ceremony )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; film title used in nomination ; the home song stories } ; year ( ceremony ) }", "tointer": "select the rows whose film title used in nomination record fuzzily matches to the home song stories . take the year ( ceremony ) record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; film title used in nomination ; ten canoes } ; year ( ceremony ) } ; hop { filter_eq { all_rows ; film title used in nomination ; the home song stories } ; year ( ceremony ) } } = true", "tointer": "select the rows whose film title used in nomination record fuzzily matches to ten canoes . take the year ( ceremony ) record of this row . select the rows whose film title used in nomination record fuzzily matches to the home song stories . take the year ( ceremony ) record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; film title used in nomination ; ten canoes } ; year ( ceremony ) } ; hop { filter_eq { all_rows ; film title used in nomination ; the home song stories } ; year ( ceremony ) } } = true", "interpret": "select the rows whose film title used in nomination record fuzzily matches to ten canoes . take the year ( ceremony ) record of this row . select the rows whose film title used in nomination record fuzzily matches to the home song stories . take the year ( ceremony ) record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "film title used in nomination_7": 7, "ten canoes_8": 8, "year (ceremony)_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "film title used in nomination_11": 11, "the home song stories_12": 12, "year (ceremony)_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "film title used in nomination_7": "film title used in nomination", "ten canoes_8": "ten canoes", "year (ceremony)_9": "year ( ceremony )", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "film title used in nomination_11": "film title used in nomination", "the home song stories_12": "the home song stories", "year (ceremony)_13": "year ( ceremony )"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "film title used in nomination_7": [0], "ten canoes_8": [0], "year (ceremony)_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "film title used in nomination_11": [1], "the home song stories_12": [1], "year (ceremony)_13": [3]}, "table_header": ["year ( ceremony )", "film title used in nomination", "language ( s )", "director", "result"], "table_cont": [["1996 ( 69th )", "floating life", "cantonese , english , german", "clara law", "not nominated"], ["2001 ( 74th )", "la spagnola", "spanish , english , italian", "steve jacobs", "not nominated"], ["2006 ( 79th )", "ten canoes", "yolngu matha , gunwinggu , english", "rolf de heer", "not nominated"], ["2007 ( 80th )", "the home song stories", "cantonese , english , mandarin", "tony ayres", "not nominated"], ["2009 ( 82nd )", "samson and delilah", "warlpiri , english", "warwick thornton", "made january shortlist"], ["2012 ( 85th )", "lore", "german", "cate shortland", "not nominated"]], "query": "less { hop { filter_eq { all_rows ; film title used in nomination ; ten canoes } ; year ( ceremony ) } ; hop { filter_eq { all_rows ; film title used in nomination ; the home song stories } ; year ( ceremony ) } } = true", "question": "in the list of australian submissions for the academy award for best foreign language film , the film ten canoes was one year before the film the home song stories ."}, {"topic": "1978 vfl season", "wiki": "https://en.wikipedia.org/wiki/1978_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10887680-13.html.csv", "action": "aggregation", "sent": "the average crowd attendance for games in the 1978 vfl season was 21012 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "21012", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "crowd"], "result": "21012", "ind": 0, "tostr": "avg { all_rows ; crowd }"}, "21012"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; crowd } ; 21012 } = true", "tointer": "the average of the crowd record of all rows is 21012 ."}, "logic_str": "round_eq { avg { all_rows ; crowd } ; 21012 } = true", "interpret": "the average of the crowd record of all rows is 21012 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "crowd_4": 4, "21012_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "crowd_4": "crowd", "21012_5": "21012"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "crowd_4": [0], "21012_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["hawthorn", "21.14 ( 140 )", "south melbourne", "18.11 ( 119 )", "princes park", "13583", "1 july 1978"], ["footscray", "33.15 ( 213 )", "st kilda", "16.10 ( 106 )", "western oval", "16300", "1 july 1978"], ["richmond", "21.16 ( 142 )", "north melbourne", "17.15 ( 117 )", "mcg", "27156", "1 july 1978"], ["essendon", "12.26 ( 98 )", "collingwood", "14.21 ( 105 )", "windy hill", "29913", "1 july 1978"], ["geelong", "8.9 ( 57 )", "carlton", "9.13 ( 67 )", "kardinia park", "25185", "1 july 1978"], ["fitzroy", "19.27 ( 141 )", "melbourne", "8.13 ( 61 )", "vfl park", "13933", "1 july 1978"]], "query": "round_eq { avg { all_rows ; crowd } ; 21012 } = true", "question": "the average crowd attendance for games in the 1978 vfl season was 21012 ."}, {"topic": "2007 - 08 minnesota wild season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Minnesota_Wild_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11739153-7.html.csv", "action": "majority", "sent": "the decision of most of the minnesota wild games in february of the 07-08 season was backstrom .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "backstrom", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "decision", "backstrom"], "result": true, "ind": 0, "tointer": "for the decision records of all rows , most of them fuzzily match to backstrom .", "tostr": "most_eq { all_rows ; decision ; backstrom } = true"}, "logic_str": "most_eq { all_rows ; decision ; backstrom } = true", "interpret": "for the decision records of all rows , most of them fuzzily match to backstrom .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "decision_3": 3, "backstrom_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "decision_3": "decision", "backstrom_4": "backstrom"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "decision_3": [0], "backstrom_4": [0]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["february 2", "minnesota", "4 - 1", "columbus", "backstrom", "18529", "30 - 19 - 3"], ["february 5", "detroit", "3 - 2", "minnesota", "backstrom", "18568", "30 - 19 - 4"], ["february 7", "dallas", "1 - 0", "minnesota", "backstrom", "18568", "30 - 20 - 4"], ["february 9", "ny islanders", "3 - 4", "minnesota", "backstrom", "18568", "31 - 20 - 4"], ["february 10", "minnesota", "2 - 1", "st louis", "harding", "16477", "32 - 20 - 4"], ["february 12", "minnesota", "2 - 4", "edmonton", "harding", "16839", "32 - 21 - 4"], ["february 14", "minnesota", "5 - 4", "vancouver", "backstrom", "18630", "33 - 21 - 4"], ["february 17", "nashville", "4 - 5", "minnesota", "backstrom", "18568", "34 - 21 - 4"], ["february 19", "vancouver", "3 - 2", "minnesota", "backstrom", "18568", "34 - 21 - 5"], ["february 20", "minnesota", "0 - 3", "chicago", "harding", "17812", "34 - 22 - 5"], ["february 24", "calgary", "2 - 1", "minnesota", "backstrom", "18568", "34 - 23 - 5"], ["february 26", "minnesota", "1 - 4", "washington", "backstrom", "17391", "34 - 24 - 5"], ["february 27", "minnesota", "3 - 2", "tampa bay", "backstrom", "17211", "35 - 24 - 5"], ["february 29", "minnesota", "3 - 2", "florida", "backstrom", "16927", "36 - 24 - 5"]], "query": "most_eq { all_rows ; decision ; backstrom } = true", "question": "the decision of most of the minnesota wild games in february of the 07-08 season was backstrom ."}, {"topic": "list of appalachian regional commission counties", "wiki": "https://en.wikipedia.org/wiki/List_of_Appalachian_Regional_Commission_counties", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22815568-6.html.csv", "action": "superlative", "sent": "the appalachian county that has the highest unemployment rate is schoharie .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "10", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "unemployment rate"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; unemployment rate }"}, "county"], "result": "schoharie", "ind": 1, "tostr": "hop { argmax { all_rows ; unemployment rate } ; county }"}, "schoharie"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; unemployment rate } ; county } ; schoharie } = true", "tointer": "select the row whose unemployment rate record of all rows is maximum . the county record of this row is schoharie ."}, "logic_str": "eq { hop { argmax { all_rows ; unemployment rate } ; county } ; schoharie } = true", "interpret": "select the row whose unemployment rate record of all rows is maximum . the county record of this row is schoharie .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "unemployment rate_5": 5, "county_6": 6, "schoharie_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "unemployment rate_5": "unemployment rate", "county_6": "county", "schoharie_7": "schoharie"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "unemployment rate_5": [0], "county_6": [1], "schoharie_7": [2]}, "table_header": ["county", "population", "unemployment rate", "market income per capita", "poverty rate", "status"], "table_cont": [["allegany", "49927", "5.8 %", "16850", "15.5 %", "- risk"], ["broome", "200536", "5.0 %", "24199", "12.8 %", "transitional"], ["cattaraugus", "83955", "5.5 %", "21285", "13.7 %", "transitional"], ["chautauqua", "136409", "4.9 %", "19622", "13.8 %", "transitional"], ["chemung", "91070", "5.1 %", "22513", "13.0 %", "transitional"], ["chenango", "51401", "5.5 %", "20896", "14.4 %", "transitional"], ["cortland", "48599", "5.7 %", "21134", "15.5 %", "transitional"], ["delaware", "48055", "4.9 %", "21160", "12.9 %", "transitional"], ["otsego", "61676", "4.9 %", "21819", "14.9 %", "transitional"], ["schoharie", "31582", "6.0 %", "23145", "11.4 %", "transitional"], ["schuyler", "19224", "5.4 %", "21042", "11.8 %", "transitional"], ["steuben", "98726", "5.6 %", "28065", "13.2 %", "transitional"], ["tioga", "51784", "4.8 %", "24885", "8.4 %", "transitional"]], "query": "eq { hop { argmax { all_rows ; unemployment rate } ; county } ; schoharie } = true", "question": "the appalachian county that has the highest unemployment rate is schoharie ."}, {"topic": "pipat thonkanya", "wiki": "https://en.wikipedia.org/wiki/Pipat_Thonkanya", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18167542-1.html.csv", "action": "aggregation", "sent": "from 2000 - 2007 , pipat thonkanya 's team scored a total of 29 points in international games .", "annotation": {"scope": "all", "col": "3", "type": "sum", "result": "29", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "score"], "result": "29", "ind": 0, "tostr": "sum { all_rows ; score }"}, "29"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; score } ; 29 } = true", "tointer": "the sum of the score record of all rows is 29 ."}, "logic_str": "round_eq { sum { all_rows ; score } ; 29 } = true", "interpret": "the sum of the score record of all rows is 29 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "score_4": 4, "29_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "score_4": "score", "29_5": "29"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "score_4": [0], "29_5": [1]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["25 february 2000", "bangkok , thailand", "2 - 1", "won", "king 's cup 2000"], ["27 february 2000", "bangkok , thailand", "5 - 1", "won", "king 's cup 2000"], ["4 april 2000", "bangkok , thailand", "5 - 3", "won", "2000 afc asian cup qualification"], ["28 december 2006", "bangkok , thailand", "2 - 2", "draw", "king 's cup 2006"], ["30 december 2006", "bangkok , thailand", "3 - 1", "won", "king 's cup 2006"], ["14 january 2007", "bangkok , thailand", "4 - 0", "won", "2007 asean football championship"], ["24 january 2007", "hanoi , vietnam", "2 - 0", "won", "2007 asean football championship"], ["31 january 2007", "singapore", "1 - 2", "lost", "2007 asean football championship"], ["4 february 2007", "bangkok , thailand", "1 - 1", "draw", "2007 asean football championship"], ["16 june 2007", "bangkok , thailand", "1 - 0", "won", "friendly"], ["12 july 2007", "bangkok , thailand", "2 - 0", "won", "asian cup 2007"], ["3 october 2007", "bangkok , thailand", "1 - 1", "draw", "testimonial ( kiatisuk senamuang )"]], "query": "round_eq { sum { all_rows ; score } ; 29 } = true", "question": "from 2000 - 2007 , pipat thonkanya 's team scored a total of 29 points in international games ."}, {"topic": "united states house of representatives elections , 1974", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1974", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341690-35.html.csv", "action": "comparative", "sent": "incumbent bill harsha was first elected before incumbent ralph regula .", "annotation": {"row_1": "4", "row_2": "6", "col": "4", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "bill harsha"], "result": null, "ind": 0, "tointer": "select the rows whose incumbent record fuzzily matches to bill harsha .", "tostr": "filter_eq { all_rows ; incumbent ; bill harsha }"}, "first elected"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; incumbent ; bill harsha } ; first elected }", "tointer": "select the rows whose incumbent record fuzzily matches to bill harsha . take the first elected record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "ralph regula"], "result": null, "ind": 1, "tointer": "select the rows whose incumbent record fuzzily matches to ralph regula .", "tostr": "filter_eq { all_rows ; incumbent ; ralph regula }"}, "first elected"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; incumbent ; ralph regula } ; first elected }", "tointer": "select the rows whose incumbent record fuzzily matches to ralph regula . take the first elected record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; incumbent ; bill harsha } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; ralph regula } ; first elected } } = true", "tointer": "select the rows whose incumbent record fuzzily matches to bill harsha . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to ralph regula . take the first elected record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; incumbent ; bill harsha } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; ralph regula } ; first elected } } = true", "interpret": "select the rows whose incumbent record fuzzily matches to bill harsha . take the first elected record of this row . select the rows whose incumbent record fuzzily matches to ralph regula . take the first elected record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "incumbent_7": 7, "bill harsha_8": 8, "first elected_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "incumbent_11": 11, "ralph regula_12": 12, "first elected_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "incumbent_7": "incumbent", "bill harsha_8": "bill harsha", "first elected_9": "first elected", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "incumbent_11": "incumbent", "ralph regula_12": "ralph regula", "first elected_13": "first elected"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "incumbent_7": [0], "bill harsha_8": [0], "first elected_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "incumbent_11": [1], "ralph regula_12": [1], "first elected_13": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["ohio 1", "tom luken", "democratic", "1974", "lost re - election republican gain", "bill gradison ( r ) 50.9 % tom luken ( d ) 49.1 %"], ["ohio 3", "charles w whalen , jr", "republican", "1966", "re - elected", "charles w whalen , jr ( r ) unopposed"], ["ohio 5", "del latta", "republican", "1958", "re - elected", "del latta ( r ) 62.5 % bruce edwards ( d ) 37.5 %"], ["ohio 6", "bill harsha", "republican", "1960", "re - elected", "bill harsha ( r ) 68.8 % lloyd allan wood ( d ) 31.2 %"], ["ohio 12", "samuel l devine", "republican", "1958", "re - elected", "samuel l devine ( r ) 50.9 % fran ryan ( d ) 49.1 %"], ["ohio 16", "ralph regula", "republican", "1972", "re - elected", "ralph regula ( r ) 65.6 % john g freedom ( d ) 34.4 %"], ["ohio 18", "wayne l hays", "democratic", "1948", "re - elected", "wayne l hays ( d ) 65.6 % ralph h romig ( r ) 34.4 %"], ["ohio 21", "louis stokes", "democratic", "1968", "re - elected", "louis stokes ( d ) 82.0 % bill mack ( r ) 18.0 %"]], "query": "less { hop { filter_eq { all_rows ; incumbent ; bill harsha } ; first elected } ; hop { filter_eq { all_rows ; incumbent ; ralph regula } ; first elected } } = true", "question": "incumbent bill harsha was first elected before incumbent ralph regula ."}, {"topic": "media in the quad cities", "wiki": "https://en.wikipedia.org/wiki/Media_in_the_Quad_Cities", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-25034983-2.html.csv", "action": "majority", "sent": "for media in the quad cities , when the start was in the 1940s , the day power is 1000 the majority of the time .", "annotation": {"scope": "subset", "col": "6", "most_or_all": "most", "criterion": "equal", "value": "1000", "subset": {"col": "5", "criterion": "fuzzily_match", "value": "194"}}, "logic": {"func": "most_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "start", "194"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; start ; 194 }", "tointer": "select the rows whose start record fuzzily matches to 194 ."}, "day power ( w )", "1000"], "result": true, "ind": 1, "tointer": "select the rows whose start record fuzzily matches to 194 . for the day power ( w ) records of these rows , most of them are equal to 1000 .", "tostr": "most_eq { filter_eq { all_rows ; start ; 194 } ; day power ( w ) ; 1000 } = true"}, "logic_str": "most_eq { filter_eq { all_rows ; start ; 194 } ; day power ( w ) ; 1000 } = true", "interpret": "select the rows whose start record fuzzily matches to 194 . for the day power ( w ) records of these rows , most of them are equal to 1000 .", "num_func": 2, "nid": 2, "g_ids": {"most_eq_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "start_4": 4, "194_5": 5, "day power ( w )_6": 6, "1000_7": 7}, "g_ids_features": {"most_eq_1": "most_eq", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "start_4": "start", "194_5": "194", "day power ( w )_6": "day power ( w )", "1000_7": "1000"}, "g_adj": {"most_eq_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "start_4": [0], "194_5": [0], "day power ( w )_6": [1], "1000_7": [1]}, "table_header": ["freq", "call", "city", "owner", "start", "day power ( w )", "night power", "nickname", "format", "stereo"], "table_cont": [["860", "kwpc", "muscatine", "prairie radio communications", "1947", "250", "8", "voice of muscatine", "soft oldies", "no"], ["960", "wdlm", "east moline", "moody bible institute", "1960", "1000", "102", "wdlm", "christian talk", "no"], ["1170", "kjoc", "davenport", "cumulus", "1946", "1000", "1000", "true oldies 1170", "oldies", "no"], ["1230", "wfxn", "moline", "clear channel", "1946", "1000", "1000", "fox sports 1230", "sports", "no"], ["1270", "wkbf", "rock island", "la jefa latino broadcasting", "1925", "5000", "5000", "la jefa 1270", "regional mexican", "no"]], "query": "most_eq { filter_eq { all_rows ; start ; 194 } ; day power ( w ) ; 1000 } = true", "question": "for media in the quad cities , when the start was in the 1940s , the day power is 1000 the majority of the time ."}, {"topic": "grado labs", "wiki": "https://en.wikipedia.org/wiki/Grado_Labs", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1601027-1.html.csv", "action": "count", "sent": "four of the headphones made by grado labs have comfort pad type earpads .", "annotation": {"scope": "all", "criterion": "equal", "value": "comfort pads", "result": "4", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "earpads", "comfort pads"], "result": null, "ind": 0, "tointer": "select the rows whose earpads record fuzzily matches to comfort pads .", "tostr": "filter_eq { all_rows ; earpads ; comfort pads }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; earpads ; comfort pads } }", "tointer": "select the rows whose earpads record fuzzily matches to comfort pads . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; earpads ; comfort pads } } ; 4 } = true", "tointer": "select the rows whose earpads record fuzzily matches to comfort pads . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; earpads ; comfort pads } } ; 4 } = true", "interpret": "select the rows whose earpads record fuzzily matches to comfort pads . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "earpads_5": 5, "comfort pads_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "earpads_5": "earpads", "comfort pads_6": "comfort pads", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "earpads_5": [0], "comfort pads_6": [0], "4_7": [2]}, "table_header": ["headphone model", "headphone class", "driver - matched db", "construction", "earpads", "termination", "us msrp"], "table_cont": [["igrado", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug", "49"], ["sr60i", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug with 1 / 4 adaptor", "79"], ["sr80i", "prestige", "0.1", "plastic", "comfort pads", "1 / 8 ( 3.5 mm ) plug with 1 / 4 adaptor", "99"], ["sr125i", "prestige", "0.1", "plastic", "comfort pads", "1 / 4 ( 6.5 mm ) plug", "150"], ["sr225i", "prestige", "0.05", "plastic", "bowls", "1 / 4 ( 6.5 mm ) plug", "200"], ["sr325is", "prestige", "0.05", "aluminum alloy / plastic inner sleeve", "bowls", "1 / 4 ( 6.5 mm ) plug", "295"], ["rs2i", "reference", "0.05", "hand - crafted mahogany", "bowls", "1 / 4 ( 6.5 mm ) plug", "495"], ["rs1i", "reference", "0.05", "hand - crafted mahogany", "bowls", "1 / 4 ( 6.5 mm ) plug", "695"], ["gs1000i", "statement", "0.05", "hand - crafted mahogany", "circumaural bowls", "1 / 4 ( 6.5 mm ) plug", "995"], ["ps500", "professional", "0.05", "hand - crafted mahogany / aluminum", "bowls", "1 / 4 ( 6.5 mm ) plug", "595"]], "query": "eq { count { filter_eq { all_rows ; earpads ; comfort pads } } ; 4 } = true", "question": "four of the headphones made by grado labs have comfort pad type earpads ."}, {"topic": "hatem aqel", "wiki": "https://en.wikipedia.org/wiki/Hatem_Aqel", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11048203-1.html.csv", "action": "comparative", "sent": "hatem aqel played a game in kuwait before he played a game in amman .", "annotation": {"row_1": "1", "row_2": "2", "col": "1", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "kuwait"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to kuwait .", "tostr": "filter_eq { all_rows ; venue ; kuwait }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; kuwait } ; date }", "tointer": "select the rows whose venue record fuzzily matches to kuwait . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "amman"], "result": null, "ind": 1, "tointer": "select the rows whose venue record fuzzily matches to amman .", "tostr": "filter_eq { all_rows ; venue ; amman }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; venue ; amman } ; date }", "tointer": "select the rows whose venue record fuzzily matches to amman . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; venue ; kuwait } ; date } ; hop { filter_eq { all_rows ; venue ; amman } ; date } } = true", "tointer": "select the rows whose venue record fuzzily matches to kuwait . take the date record of this row . select the rows whose venue record fuzzily matches to amman . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; venue ; kuwait } ; date } ; hop { filter_eq { all_rows ; venue ; amman } ; date } } = true", "interpret": "select the rows whose venue record fuzzily matches to kuwait . take the date record of this row . select the rows whose venue record fuzzily matches to amman . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "venue_7": 7, "kuwait_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "venue_11": 11, "amman_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "venue_7": "venue", "kuwait_8": "kuwait", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "venue_11": "venue", "amman_12": "amman", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "venue_7": [0], "kuwait_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "venue_11": [1], "amman_12": [1], "date_13": [3]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["16 december 2002", "kuwait", "1 - 1", "draw", "2002 arab nations cup"], ["17 october 2003", "amman", "1 - 0", "win", "2004 afc asian cup qualification"], ["18 february 2004", "amman", "5 - 0", "win", "2006 fifa world cup qualification"], ["18 august 2004", "amman", "1 - 1", "draw", "friendly"], ["14 february 2006", "amman", "2 - 0", "win", "friendly"], ["22 february 2006", "amman", "3 - 0", "win", "2007 afc asian cup qualification"], ["28 january 2009", "singapore", "2 - 1", "loss", "2011 afc asian cup qualification"], ["9 september 2009", "amman", "1 - 3", "loss", "friendly"], ["28 october 2013", "amman", "1 - 0", "win", "friendly"]], "query": "less { hop { filter_eq { all_rows ; venue ; kuwait } ; date } ; hop { filter_eq { all_rows ; venue ; amman } ; date } } = true", "question": "hatem aqel played a game in kuwait before he played a game in amman ."}, {"topic": "1979 - 80 new york rangers season", "wiki": "https://en.wikipedia.org/wiki/1979%E2%80%9380_New_York_Rangers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17562956-13.html.csv", "action": "unique", "sent": "ed hospodar was the only player that the new york rangers drafted from the united states .", "annotation": {"scope": "all", "row": "2", "col": "4", "col_other": "2", "criterion": "equal", "value": "united states", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nationality", "united states"], "result": null, "ind": 0, "tointer": "select the rows whose nationality record fuzzily matches to united states .", "tostr": "filter_eq { all_rows ; nationality ; united states }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; nationality ; united states } }", "tointer": "select the rows whose nationality record fuzzily matches to united states . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nationality", "united states"], "result": null, "ind": 0, "tointer": "select the rows whose nationality record fuzzily matches to united states .", "tostr": "filter_eq { all_rows ; nationality ; united states }"}, "player"], "result": "ed hospodar", "ind": 2, "tostr": "hop { filter_eq { all_rows ; nationality ; united states } ; player }"}, "ed hospodar"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; nationality ; united states } ; player } ; ed hospodar }", "tointer": "the player record of this unqiue row is ed hospodar ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; nationality ; united states } } ; eq { hop { filter_eq { all_rows ; nationality ; united states } ; player } ; ed hospodar } } = true", "tointer": "select the rows whose nationality record fuzzily matches to united states . there is only one such row in the table . the player record of this unqiue row is ed hospodar ."}, "logic_str": "and { only { filter_eq { all_rows ; nationality ; united states } } ; eq { hop { filter_eq { all_rows ; nationality ; united states } ; player } ; ed hospodar } } = true", "interpret": "select the rows whose nationality record fuzzily matches to united states . there is only one such row in the table . the player record of this unqiue row is ed hospodar .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "nationality_7": 7, "united states_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "ed hospodar_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "nationality_7": "nationality", "united states_8": "united states", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "ed hospodar_10": "ed hospodar"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "nationality_7": [0], "united states_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "ed hospodar_10": [3]}, "table_header": ["round", "player", "position", "nationality", "college / junior / club team ( league )"], "table_cont": [["1", "doug sulliman", "lw", "canada", "kitchener rangers ( oha )"], ["2", "ed hospodar", "d", "united states", "ottawa 67 's ( oha )"], ["4", "pat conacher", "c", "canada", "saskatoon blades ( wchl )"], ["5", "dan makuch", "rw", "canada", "clarkson university ( ncaa )"], ["6", "stan adams", "c", "canada", "niagara falls flyers ( oha )"]], "query": "and { only { filter_eq { all_rows ; nationality ; united states } } ; eq { hop { filter_eq { all_rows ; nationality ; united states } ; player } ; ed hospodar } } = true", "question": "ed hospodar was the only player that the new york rangers drafted from the united states ."}, {"topic": "marsel ilhan", "wiki": "https://en.wikipedia.org/wiki/Marsel_%C4%B0lhan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17922810-2.html.csv", "action": "majority", "sent": "the majority of tennis tournaments marsel ilhan played in were on a hard surface .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "hard", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "surface", "hard"], "result": true, "ind": 0, "tointer": "for the surface records of all rows , most of them fuzzily match to hard .", "tostr": "most_eq { all_rows ; surface ; hard } = true"}, "logic_str": "most_eq { all_rows ; surface ; hard } = true", "interpret": "for the surface records of all rows , most of them fuzzily match to hard .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "surface_3": 3, "hard_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "surface_3": "surface", "hard_4": "hard"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "surface_3": [0], "hard_4": [0]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent", "score"], "table_cont": [["runner - up", "august 20 , 2007", "karshi", "hard", "denis istomin", "1 - 6 , 4 - 6"], ["winner", "july 13 , 2008", "israel open", "hard", "ivo klec", "6 - 4 , 6 - 4"], ["runner - up", "may 17 , 2009", "izmir cup", "hard", "andrea stoppini", "6 - 7 , 2 - 6"], ["winner", "september 20 , 2010", "banja luka", "clay", "pere riba", "6 - 0 , 7 - 6 ( 7 - 4 )"], ["runner - up", "september 26 , 2010", "izmir cup", "hard", "somdev devvarman", "4 - 6 , 3 - 6"], ["runner - up", "july 10 , 2011", "scheveningen", "clay", "steve darcis", "3 - 6 , 6 - 4 , 2 - 6"], ["runner - up", "september 25 , 2011", "izmir cup", "hard", "luk\u00e1\u0161 lacko", "4 - 6 , 3 - 6"], ["runner - up", "july 29 , 2012", "president 's cup ( tennis )", "hard", "evgeny donskoy", "3 - 6 , 4 - 6"]], "query": "most_eq { all_rows ; surface ; hard } = true", "question": "the majority of tennis tournaments marsel ilhan played in were on a hard surface ."}, {"topic": "1944 vfl season", "wiki": "https://en.wikipedia.org/wiki/1944_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10809142-7.html.csv", "action": "count", "sent": "a total of three venues in the 1944 vfl season drew a crowd of 10000 people .", "annotation": {"scope": "all", "criterion": "equal", "value": "10000", "result": "3", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "crowd", "10000"], "result": null, "ind": 0, "tointer": "select the rows whose crowd record is equal to 10000 .", "tostr": "filter_eq { all_rows ; crowd ; 10000 }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; crowd ; 10000 } }", "tointer": "select the rows whose crowd record is equal to 10000 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; crowd ; 10000 } } ; 3 } = true", "tointer": "select the rows whose crowd record is equal to 10000 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; crowd ; 10000 } } ; 3 } = true", "interpret": "select the rows whose crowd record is equal to 10000 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "crowd_5": 5, "10000_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "crowd_5": "crowd", "10000_6": "10000", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "crowd_5": [0], "10000_6": [0], "3_7": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "9.13 ( 67 )", "south melbourne", "8.10 ( 58 )", "western oval", "15000", "17 june 1944"], ["fitzroy", "14.13 ( 97 )", "hawthorn", "7.10 ( 52 )", "brunswick street oval", "10000", "17 june 1944"], ["collingwood", "12.21 ( 93 )", "essendon", "9.10 ( 64 )", "victoria park", "10000", "17 june 1944"], ["north melbourne", "15.20 ( 110 )", "melbourne", "12.10 ( 82 )", "arden street oval", "12000", "17 june 1944"], ["richmond", "25.23 ( 173 )", "geelong", "9.2 ( 56 )", "punt road oval", "10000", "17 june 1944"], ["st kilda", "6.12 ( 48 )", "carlton", "15.13 ( 103 )", "junction oval", "23000", "17 june 1944"]], "query": "eq { count { filter_eq { all_rows ; crowd ; 10000 } } ; 3 } = true", "question": "a total of three venues in the 1944 vfl season drew a crowd of 10000 people ."}, {"topic": "1959 vfl season", "wiki": "https://en.wikipedia.org/wiki/1959_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10775038-6.html.csv", "action": "unique", "sent": "in the 1959 vfl season , only the match that took place at the venue kardinia park had a crowd smaller than 20000 .", "annotation": {"scope": "all", "row": "2", "col": "6", "col_other": "5", "criterion": "less_than", "value": "20000", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "crowd", "20000"], "result": null, "ind": 0, "tointer": "select the rows whose crowd record is less than 20000 .", "tostr": "filter_less { all_rows ; crowd ; 20000 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; crowd ; 20000 } }", "tointer": "select the rows whose crowd record is less than 20000 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "crowd", "20000"], "result": null, "ind": 0, "tointer": "select the rows whose crowd record is less than 20000 .", "tostr": "filter_less { all_rows ; crowd ; 20000 }"}, "venue"], "result": "kardinia park", "ind": 2, "tostr": "hop { filter_less { all_rows ; crowd ; 20000 } ; venue }"}, "kardinia park"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; crowd ; 20000 } ; venue } ; kardinia park }", "tointer": "the venue record of this unqiue row is kardinia park ."}], "result": true, "ind": 4, "tostr": "and { only { filter_less { all_rows ; crowd ; 20000 } } ; eq { hop { filter_less { all_rows ; crowd ; 20000 } ; venue } ; kardinia park } } = true", "tointer": "select the rows whose crowd record is less than 20000 . there is only one such row in the table . the venue record of this unqiue row is kardinia park ."}, "logic_str": "and { only { filter_less { all_rows ; crowd ; 20000 } } ; eq { hop { filter_less { all_rows ; crowd ; 20000 } ; venue } ; kardinia park } } = true", "interpret": "select the rows whose crowd record is less than 20000 . there is only one such row in the table . the venue record of this unqiue row is kardinia park .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_less_0": 0, "all_rows_6": 6, "crowd_7": 7, "20000_8": 8, "str_eq_3": 3, "str_hop_2": 2, "venue_9": 9, "kardinia park_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_6": "all_rows", "crowd_7": "crowd", "20000_8": "20000", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "venue_9": "venue", "kardinia park_10": "kardinia park"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_less_0": [1, 2], "all_rows_6": [0], "crowd_7": [0], "20000_8": [0], "str_eq_3": [4], "str_hop_2": [3], "venue_9": [2], "kardinia park_10": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["richmond", "11.17 ( 83 )", "st kilda", "16.10 ( 106 )", "punt road oval", "23000", "30 may 1959"], ["geelong", "11.10 ( 76 )", "melbourne", "19.15 ( 129 )", "kardinia park", "16736", "30 may 1959"], ["collingwood", "16.16 ( 112 )", "footscray", "10.11 ( 71 )", "victoria park", "24740", "30 may 1959"], ["south melbourne", "8.18 ( 66 )", "north melbourne", "13.18 ( 96 )", "lake oval", "20700", "30 may 1959"], ["fitzroy", "11.9 ( 75 )", "essendon", "12.22 ( 94 )", "brunswick street oval", "22000", "30 may 1959"], ["hawthorn", "11.9 ( 75 )", "carlton", "12.11 ( 83 )", "glenferrie oval", "28000", "30 may 1959"]], "query": "and { only { filter_less { all_rows ; crowd ; 20000 } } ; eq { hop { filter_less { all_rows ; crowd ; 20000 } ; venue } ; kardinia park } } = true", "question": "in the 1959 vfl season , only the match that took place at the venue kardinia park had a crowd smaller than 20000 ."}, {"topic": "2006 - 07 in welsh rugby union", "wiki": "https://en.wikipedia.org/wiki/2006%E2%80%9307_in_Welsh_rugby_union", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27293285-4.html.csv", "action": "count", "sent": "three welsh rugby union clubs had more than 50 points during the 2006-2007 season .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "50", "result": "3", "col": "9", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "points", "50"], "result": null, "ind": 0, "tointer": "select the rows whose points record is greater than 50 .", "tostr": "filter_greater { all_rows ; points ; 50 }"}], "result": "3", "ind": 1, "tostr": "count { filter_greater { all_rows ; points ; 50 } }", "tointer": "select the rows whose points record is greater than 50 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; points ; 50 } } ; 3 } = true", "tointer": "select the rows whose points record is greater than 50 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_greater { all_rows ; points ; 50 } } ; 3 } = true", "interpret": "select the rows whose points record is greater than 50 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "points_5": 5, "50_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "points_5": "points", "50_6": "50", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "points_5": [0], "50_6": [0], "3_7": [2]}, "table_header": ["club", "played", "won", "drawn", "lost", "points for", "points against", "tries for", "points"], "table_cont": [["club", "played", "won", "drawn", "lost", "points for", "points against", "tries for", "points"], ["beddau rfc", "22", "19", "0", "3", "654", "321", "85", "57"], ["bargoed rfc", "22", "17", "0", "5", "665", "436", "89", "51"], ["newbridge rfc", "22", "17", "0", "5", "516", "281", "63", "51"], ["pontypool rfc", "22", "15", "0", "7", "515", "370", "59", "45"], ["fleur de lys rfc", "22", "10", "0", "12", "422", "523", "49", "30"], ["uwic rfc", "22", "9", "1", "12", "625", "604", "74", "28"], ["newport saracens rfc", "22", "9", "1", "12", "368", "457", "46", "28"], ["llanharan rfc", "22", "9", "0", "13", "546", "565", "66", "27"], ["caerphilly rfc", "22", "9", "0", "14", "402", "572", "47", "24"], ["blackwood rfc", "22", "6", "1", "15", "433", "511", "51", "19"], ["abercynon rfc", "22", "5", "2", "15", "365", "718", "45", "17"], ["ystrad rhondda rfc", "22", "5", "1", "16", "417", "570", "47", "16"]], "query": "eq { count { filter_greater { all_rows ; points ; 50 } } ; 3 } = true", "question": "three welsh rugby union clubs had more than 50 points during the 2006-2007 season ."}, {"topic": "fiba eurobasket 2009 squads", "wiki": "https://en.wikipedia.org/wiki/FIBA_EuroBasket_2009_squads", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-23670057-4.html.csv", "action": "ordinal", "sent": "the second shortest person on the fiba european basketball squads was yuval naimi .", "annotation": {"row": "2", "col": "4", "order": "2", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "height ( f )", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; height ( f ) ; 2 }"}, "player"], "result": "yuval naimi", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; height ( f ) ; 2 } ; player }"}, "yuval naimi"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; height ( f ) ; 2 } ; player } ; yuval naimi } = true", "tointer": "select the row whose height ( f ) record of all rows is 2nd minimum . the player record of this row is yuval naimi ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; height ( f ) ; 2 } ; player } ; yuval naimi } = true", "interpret": "select the row whose height ( f ) record of all rows is 2nd minimum . the player record of this row is yuval naimi .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "height (f)_5": 5, "2_6": 6, "player_7": 7, "yuval naimi_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "height (f)_5": "height ( f )", "2_6": "2", "player_7": "player", "yuval naimi_8": "yuval naimi"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "height (f)_5": [0], "2_6": [0], "player_7": [1], "yuval naimi_8": [2]}, "table_header": ["no", "player", "height ( m )", "height ( f )", "position", "year born", "current club"], "table_cont": [["4", "moran rot", "1.83", "6 ' 00", "guard", "1982", "hapoel jerusalem"], ["5", "yuval naimi", "1.87", "6 ' 02", "guard", "1988", "hapoel jerusalem"], ["6", "gal mekel", "1.95", "6 ' 05", "guard", "1988", "maccabi tel aviv"], ["7", "raviv limonad", "1.91", "6 ' 03", "guard", "1984", "maccabi tel aviv"], ["8", "guy pnini", "2.01", "6 ' 07", "forward", "1983", "maccabi tel aviv"], ["9", "yotam halperin", "1.96", "6 ' 05", "guard", "1984", "olympiacos"], ["10", "tal burstein", "1.98", "6 ' 06", "guard", "1980", "maccabi tel aviv"], ["11", "lior eliyahu", "2.07", "6 ' 09", "forward", "1985", "caja laboral"], ["12", "moshe mizrahi", "2.02", "6 ' 08", "forward", "1980", "maccabi haifa"], ["13", "ido kozikaro", "2.02", "6 ' 08", "forward", "1978", "maccabi haifa"], ["14", "yaniv green", "2.06", "6 ' 09", "center", "1980", "maccabi tel aviv"]], "query": "eq { hop { nth_argmin { all_rows ; height ( f ) ; 2 } ; player } ; yuval naimi } = true", "question": "the second shortest person on the fiba european basketball squads was yuval naimi ."}, {"topic": "united states house of representatives elections , 1978", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1978", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341663-26.html.csv", "action": "unique", "sent": "gene taylor was the only incumbent in the united states house of representatives who was first elected in 1972 .", "annotation": {"scope": "all", "row": "4", "col": "4", "col_other": "2", "criterion": "equal", "value": "1972", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "first elected", "1972"], "result": null, "ind": 0, "tointer": "select the rows whose first elected record is equal to 1972 .", "tostr": "filter_eq { all_rows ; first elected ; 1972 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; first elected ; 1972 } }", "tointer": "select the rows whose first elected record is equal to 1972 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "first elected", "1972"], "result": null, "ind": 0, "tointer": "select the rows whose first elected record is equal to 1972 .", "tostr": "filter_eq { all_rows ; first elected ; 1972 }"}, "incumbent"], "result": "gene taylor", "ind": 2, "tostr": "hop { filter_eq { all_rows ; first elected ; 1972 } ; incumbent }"}, "gene taylor"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; first elected ; 1972 } ; incumbent } ; gene taylor }", "tointer": "the incumbent record of this unqiue row is gene taylor ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; first elected ; 1972 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1972 } ; incumbent } ; gene taylor } } = true", "tointer": "select the rows whose first elected record is equal to 1972 . there is only one such row in the table . the incumbent record of this unqiue row is gene taylor ."}, "logic_str": "and { only { filter_eq { all_rows ; first elected ; 1972 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1972 } ; incumbent } ; gene taylor } } = true", "interpret": "select the rows whose first elected record is equal to 1972 . there is only one such row in the table . the incumbent record of this unqiue row is gene taylor .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "first elected_7": 7, "1972_8": 8, "str_eq_3": 3, "str_hop_2": 2, "incumbent_9": 9, "gene taylor_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "first elected_7": "first elected", "1972_8": "1972", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "incumbent_9": "incumbent", "gene taylor_10": "gene taylor"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "first elected_7": [0], "1972_8": [0], "str_eq_3": [4], "str_hop_2": [3], "incumbent_9": [2], "gene taylor_10": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["missouri 2", "robert a young", "democratic", "1976", "re - elected", "robert a young ( d ) 56.4 % bob chase ( r ) 43.6 %"], ["missouri 3", "dick gephardt", "democratic", "1976", "re - elected", "dick gephardt ( d ) 81.9 % lee buchschacher ( r ) 18.1 %"], ["missouri 4", "ike skelton", "democratic", "1976", "re - elected", "ike skelton ( d ) 72.8 % bill baker ( r ) 27.2 %"], ["missouri 7", "gene taylor", "republican", "1972", "re - elected", "gene taylor ( r ) 61.2 % jim thomas ( d ) 38.8 %"], ["missouri 9", "harold volkmer", "democratic", "1976", "re - elected", "harold volkmer ( d ) 74.7 % jerry dent ( r ) 25.3 %"]], "query": "and { only { filter_eq { all_rows ; first elected ; 1972 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1972 } ; incumbent } ; gene taylor } } = true", "question": "gene taylor was the only incumbent in the united states house of representatives who was first elected in 1972 ."}, {"topic": "kieron brady", "wiki": "https://en.wikipedia.org/wiki/Kieron_Brady", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11788447-2.html.csv", "action": "majority", "sent": "most of the games in which kieron brady played were in the second division .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "division 2", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "competition", "division 2"], "result": true, "ind": 0, "tointer": "for the competition records of all rows , most of them fuzzily match to division 2 .", "tostr": "most_eq { all_rows ; competition ; division 2 } = true"}, "logic_str": "most_eq { all_rows ; competition ; division 2 } = true", "interpret": "for the competition records of all rows , most of them fuzzily match to division 2 .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "competition_3": 3, "division 2_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "competition_3": "competition", "division 2_4": "division 2"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "competition_3": [0], "division 2_4": [0]}, "table_header": ["date", "venue", "opposition", "score", "competition"], "table_cont": [["24 mar 1990", "roker park", "west ham utd", "4 - 3", "division 2"], ["31 mar 1990", "valley parade", "bradford city", "1 - 0", "division 2"], ["8 sep 1990", "stamford bridge", "chelsea fc", "2 - 3", "division 1"], ["30 mar 1991", "roker park", "crystal palace fc", "2 - 1", "division 1"], ["28 sep 1991", "ayresome park", "middlesbrough fc", "1 - 2", "division 2"], ["19 oct 1991", "vale park", "port vale fc", "3 - 3", "division 2"]], "query": "most_eq { all_rows ; competition ; division 2 } = true", "question": "most of the games in which kieron brady played were in the second division ."}, {"topic": "coast province", "wiki": "https://en.wikipedia.org/wiki/Coast_Province", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1404456-1.html.csv", "action": "aggregation", "sent": "the average population of counties in coast province is 554218 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "554218", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "population census 2009"], "result": "554218", "ind": 0, "tostr": "avg { all_rows ; population census 2009 }"}, "554218"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; population census 2009 } ; 554218 } = true", "tointer": "the average of the population census 2009 record of all rows is 554218 ."}, "logic_str": "round_eq { avg { all_rows ; population census 2009 } ; 554218 } = true", "interpret": "the average of the population census 2009 record of all rows is 554218 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "population census 2009_4": 4, "554218_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "population census 2009_4": "population census 2009", "554218_5": "554218"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "population census 2009_4": [0], "554218_5": [1]}, "table_header": ["code", "county", "former province", "area ( km 2 )", "population census 2009", "capital"], "table_cont": [["1", "mombasa", "coast", "212.5", "939370", "mombasa ( city )"], ["2", "kwale", "coast", "8270.3", "649931", "kwale"], ["3", "kilifi", "coast", "12245.9", "1109735", "kilifi"], ["4", "tana river", "coast", "35375.8", "240075", "hola"], ["5", "lamu", "coast", "6497.7", "101539", "lamu"], ["6", "taita - taveta", "coast", "17083.9", "284657", "voi"]], "query": "round_eq { avg { all_rows ; population census 2009 } ; 554218 } = true", "question": "the average population of counties in coast province is 554218 ."}, {"topic": "2008 - 09 los angeles lakers season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Los_Angeles_Lakers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17190012-7.html.csv", "action": "superlative", "sent": "during the 08 - 09 los angeles lakers season the highest attendance for a game against san antonio was 18997 .", "annotation": {"scope": "subset", "col_superlative": "8", "row_superlative": "13", "value_mentioned": "yes", "max_or_min": "max", "other_col": "3", "subset": {"col": "3", "criterion": "equal", "value": "san antonio"}}, "logic": {"func": "eq", "args": [{"func": "max", "args": [{"func": "filter_str_eq", "args": ["all_rows", "team", "san antonio"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; team ; san antonio }", "tointer": "select the rows whose team record fuzzily matches to san antonio ."}, "location attendance"], "result": "staples center 18997", "ind": 1, "tostr": "max { filter_eq { all_rows ; team ; san antonio } ; location attendance }", "tointer": "select the rows whose team record fuzzily matches to san antonio . the maximum location attendance record of these rows is staples center 18997 ."}, "staples center 18997"], "result": true, "ind": 2, "tostr": "eq { max { filter_eq { all_rows ; team ; san antonio } ; location attendance } ; staples center 18997 } = true", "tointer": "select the rows whose team record fuzzily matches to san antonio . the maximum location attendance record of these rows is staples center 18997 ."}, "logic_str": "eq { max { filter_eq { all_rows ; team ; san antonio } ; location attendance } ; staples center 18997 } = true", "interpret": "select the rows whose team record fuzzily matches to san antonio . the maximum location attendance record of these rows is staples center 18997 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "max_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "team_5": 5, "san antonio_6": 6, "location attendance_7": 7, "staples center 18997_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "max_1": "max", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "team_5": "team", "san antonio_6": "san antonio", "location attendance_7": "location attendance", "staples center 18997_8": "staples center 18997"}, "g_adj": {"eq_2": [3], "result_3": [], "max_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "team_5": [0], "san antonio_6": [0], "location attendance_7": [1], "staples center 18997_8": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["31", "january 2", "utah", "w 113 - 100 ( ot )", "kobe bryant ( 40 )", "pau gasol ( 11 )", "pau gasol ( 6 )", "staples center 18997", "26 - 5"], ["32", "january 4", "portland", "w 100 - 86 ( ot )", "kobe bryant ( 26 )", "andrew bynum ( 10 )", "derek fisher ( 5 )", "staples center 18997", "27 - 5"], ["33", "january 6", "new orleans", "l 105 - 116 ( ot )", "kobe bryant ( 39 )", "pau gasol , andrew bynum ( 8 )", "kobe bryant ( 7 )", "staples center 18997", "27 - 6"], ["34", "january 7", "golden state", "w 114 - 106 ( ot )", "pau gasol ( 33 )", "pau gasol ( 18 )", "derek fisher ( 8 )", "oracle arena 19596", "28 - 6"], ["35", "january 9", "indiana", "w 121 - 119 ( ot )", "kobe bryant ( 36 )", "pau gasol ( 11 )", "kobe bryant ( 13 )", "staples center 18997", "29 - 6"], ["36", "january 11", "miami", "w 108 - 105 ( ot )", "andrew bynum ( 24 )", "pau gasol ( 18 )", "derek fisher ( 11 )", "staples center 18997", "30 - 6"], ["37", "january 13", "houston", "w 105 - 100 ( ot )", "kobe bryant ( 33 )", "kobe bryant , pau gasol ( 7 )", "kobe bryant , pau gasol , lamar odom ( 4 )", "toyota center 18557", "31 - 6"], ["38", "january 14", "san antonio", "l 111 - 112 ( ot )", "kobe bryant ( 29 )", "kobe bryant ( 7 )", "kobe bryant ( 10 )", "at & t center 18797", "31 - 7"], ["39", "january 16", "orlando", "l 103 - 109 ( ot )", "kobe bryant ( 28 )", "kobe bryant ( 13 )", "kobe bryant ( 11 )", "staples center 18997", "31 - 8"], ["40", "january 19", "cleveland", "w 105 - 88 ( ot )", "pau gasol ( 22 )", "pau gasol ( 13 )", "kobe bryant ( 12 )", "staples center 18997", "32 - 8"], ["41", "january 21", "la clippers", "w 108 - 97 ( ot )", "andrew bynum ( 42 )", "andrew bynum ( 15 )", "kobe bryant ( 12 )", "staples center 19627", "33 - 8"], ["42", "january 22", "washington", "w 117 - 97 ( ot )", "andrew bynum ( 23 )", "andrew bynum ( 14 )", "derek fisher ( 8 )", "staples center 18997", "34 - 8"], ["43", "january 25", "san antonio", "w 99 - 85 ( ot )", "kobe bryant ( 22 )", "andrew bynum ( 11 )", "pau gasol , derek fisher ( 4 )", "staples center 18997", "35 - 8"], ["44", "january 27", "charlotte", "l 110 - 117 ( 2ot )", "kobe bryant ( 38 )", "andrew bynum ( 14 )", "derek fisher ( 6 )", "staples center 18997", "35 - 9"], ["45", "january 30", "minnesota", "w 132 - 119 ( ot )", "kobe bryant ( 30 )", "andrew bynum ( 15 )", "kobe bryant ( 5 )", "target center 19111", "36 - 9"]], "query": "eq { max { filter_eq { all_rows ; team ; san antonio } ; location attendance } ; staples center 18997 } = true", "question": "during the 08 - 09 los angeles lakers season the highest attendance for a game against san antonio was 18997 ."}, {"topic": "list of best - selling music artists", "wiki": "https://en.wikipedia.org/wiki/List_of_best-selling_music_artists", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1291598-6.html.csv", "action": "majority", "sent": "a majority of the best selling music artists are from the united states .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "united states", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "country of origin", "united states"], "result": true, "ind": 0, "tointer": "for the country of origin records of all rows , most of them fuzzily match to united states .", "tostr": "most_eq { all_rows ; country of origin ; united states } = true"}, "logic_str": "most_eq { all_rows ; country of origin ; united states } = true", "interpret": "for the country of origin records of all rows , most of them fuzzily match to united states .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "country of origin_3": 3, "united states_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "country of origin_3": "country of origin", "united states_4": "united states"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "country of origin_3": [0], "united states_4": [0]}, "table_header": ["artist", "country of origin", "period active", "release - year of first charted record", "genre", "claimed sales"], "table_cont": [["the black eyed peas", "united states", "1995 - present", "1998", "hip - hop / r & b / dance", "76 million"], ["journey", "united states", "1973 - present", "1975", "rock / soft rock", "75 million"], ["beyonc\u00e9", "united states", "2003 - present", "2003", "r & b / pop", "75 million"], ["kenny g", "united states", "1982 - present", "1984", "smooth jazz", "75 million"], ["alabama", "united states", "1972 - present", "1980", "country / pop rock", "75 million"], ["enya", "ireland", "1982 - present", "1987", "new age / celtic", "75 million"], ["green day", "united states", "1987 - present", "1994", "punk rock / alternative rock", "75 million"], ["tupac shakur", "united states", "1988 - 1996", "1991", "hip hop", "75 million"], ["nirvana", "united states", "1987 - 1994", "1989", "grunge / alternative rock", "75 million"], ["spice girls", "united kingdom", "1996 - 2000 2007 - 2008", "1996", "pop / dance - pop", "75 million"], ["andrea bocelli", "italy", "1994 - present", "1994", "pop / classical / opera", "75 million"], ["bob marley", "jamaica", "1962 - 1981", "1975", "reggae", "75 million"], ["m\u00f6tley cr\u00fce", "united states", "1981 - present", "1983", "glam metal", "75 million"], ["depeche mode", "united kingdom", "1980 - present", "1981", "synth rock / electronic", "75 million"], ["aretha franklin", "united states", "1956 - present", "1961", "soul / jazz / blues / r & b", "75 million"], ["scorpions", "germany", "1969 - present", "1978", "hard rock", "75 million"]], "query": "most_eq { all_rows ; country of origin ; united states } = true", "question": "a majority of the best selling music artists are from the united states ."}, {"topic": "united states house of representatives elections , 1962", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1962", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341884-19.html.csv", "action": "majority", "sent": "the majority of incumbents in the 1962 united states house of representatives elections were re-elected .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "re - elected", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "re - elected"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to re - elected .", "tostr": "most_eq { all_rows ; result ; re - elected } = true"}, "logic_str": "most_eq { all_rows ; result ; re - elected } = true", "interpret": "for the result records of all rows , most of them fuzzily match to re - elected .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "re - elected_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "re - elected_4": "re - elected"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "re - elected_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["kentucky 1", "frank stubblefield", "democratic", "1958", "re - elected", "frank stubblefield ( d ) unopposed"], ["kentucky 2", "william huston natcher", "democratic", "1953", "re - elected", "william huston natcher ( d ) unopposed"], ["kentucky 3", "frank w burke", "democratic", "1958", "lost re - election republican gain", "gene snyder ( r ) 50.8 % frank w burke ( d ) 49.2 %"], ["kentucky 4", "frank chelf", "democratic", "1944", "re - elected", "frank chelf ( d ) 52.9 % clyde middleton ( r ) 47.1 %"], ["kentucky 4", "brent spence redistricted from 5th", "democratic", "1930", "retired democratic loss", "frank chelf ( d ) 52.9 % clyde middleton ( r ) 47.1 %"], ["kentucky 5", "eugene siler redistricted from 8th", "republican", "1954", "re - elected", "eugene siler ( r ) unopposed"]], "query": "most_eq { all_rows ; result ; re - elected } = true", "question": "the majority of incumbents in the 1962 united states house of representatives elections were re-elected ."}, {"topic": "1963 new york giants season", "wiki": "https://en.wikipedia.org/wiki/1963_New_York_Giants_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16660997-15.html.csv", "action": "count", "sent": "during the 1963 new york giants season , the new york giants played four games during the month of october .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "october", "result": "4", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "october"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to october .", "tostr": "filter_eq { all_rows ; date ; october }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; date ; october } }", "tointer": "select the rows whose date record fuzzily matches to october . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; date ; october } } ; 4 } = true", "tointer": "select the rows whose date record fuzzily matches to october . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; date ; october } } ; 4 } = true", "interpret": "select the rows whose date record fuzzily matches to october . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "october_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "october_6": "october", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "october_6": [0], "4_7": [2]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 15 , 1963", "baltimore colts", "w 37 - 28", "60029"], ["2", "september 22 , 1963", "pittsburgh steelers", "l 31 - 0", "46068"], ["3", "september 29 , 1963", "philadelphia eagles", "w 37 - 14", "60671"], ["4", "october 6 , 1963", "washington redskins", "w 24 - 14", "49419"], ["5", "october 13 , 1963", "cleveland browns", "l 35 - 24", "62956"], ["6", "october 20 , 1963", "dallas cowboys", "w 37 - 21", "62889"], ["7", "october 27 , 1963", "cleveland browns", "w 33 - 6", "84213"], ["8", "november 3 , 1963", "st louis cardinals", "w 38 - 21", "29482"], ["9", "november 10 , 1963", "philadelphia eagles", "w 42 - 14", "62936"], ["10", "november 17 , 1963", "san francisco 49ers", "w 48 - 14", "62982"], ["11", "november 24 , 1963", "st louis cardinals", "l 24 - 17", "62992"], ["12", "december 1 , 1963", "dallas cowboys", "w 34 - 27", "29653"], ["13", "december 8 , 1963", "washington redskins", "w 44 - 14", "62992"], ["14", "december 15 , 1963", "pittsburgh steelers", "w 33 - 17", "63240"]], "query": "eq { count { filter_eq { all_rows ; date ; october } } ; 4 } = true", "question": "during the 1963 new york giants season , the new york giants played four games during the month of october ."}, {"topic": "imperfect season", "wiki": "https://en.wikipedia.org/wiki/Imperfect_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14417906-8.html.csv", "action": "superlative", "sent": "liverpool city was the imperfect season team that recorded the highest amount of losses .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "losses"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; losses }"}, "team"], "result": "liverpool city", "ind": 1, "tostr": "hop { argmax { all_rows ; losses } ; team }"}, "liverpool city"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; losses } ; team } ; liverpool city } = true", "tointer": "select the row whose losses record of all rows is maximum . the team record of this row is liverpool city ."}, "logic_str": "eq { hop { argmax { all_rows ; losses } ; team } ; liverpool city } = true", "interpret": "select the row whose losses record of all rows is maximum . the team record of this row is liverpool city .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "losses_5": 5, "team_6": 6, "liverpool city_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "losses_5": "losses", "team_6": "team", "liverpool city_7": "liverpool city"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "losses_5": [0], "team_6": [1], "liverpool city_7": [2]}, "table_header": ["season", "team", "wins", "losses", "draws"], "table_cont": [["1991 - 92", "nottingham city", "0", "26", "0"], ["1989 - 90", "runcorn highfield", "0", "28", "0"], ["1941 - 1942", "bramley", "0", "19", "0"], ["1940 - 1941", "broughton rangers", "0", "10", "0"], ["1940 - 1941", "leigh", "0", "13", "0"], ["1906 - 1907", "liverpool city", "0", "30", "0"]], "query": "eq { hop { argmax { all_rows ; losses } ; team } ; liverpool city } = true", "question": "liverpool city was the imperfect season team that recorded the highest amount of losses ."}, {"topic": "dick rathmann", "wiki": "https://en.wikipedia.org/wiki/Dick_Rathmann", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1235982-1.html.csv", "action": "superlative", "sent": "from 1960 to 1964 , dick rathmann 's lowest ranking in the indianapolis 500 was 17th .", "annotation": {"scope": "subset", "col_superlative": "3", "row_superlative": "10", "value_mentioned": "yes", "max_or_min": "max", "other_col": "n/a", "subset": {"col": "1", "criterion": "greater_than_eq", "value": "1960"}}, "logic": {"func": "eq", "args": [{"func": "max", "args": [{"func": "filter_greater_eq", "args": ["all_rows", "year", "1960"], "result": null, "ind": 0, "tostr": "filter_greater_eq { all_rows ; year ; 1960 }", "tointer": "select the rows whose year record is greater than or equal to 1960 ."}, "rank"], "result": "17", "ind": 1, "tostr": "max { filter_greater_eq { all_rows ; year ; 1960 } ; rank }", "tointer": "select the rows whose year record is greater than or equal to 1960 . the maximum rank record of these rows is 17 ."}, "17"], "result": true, "ind": 2, "tostr": "eq { max { filter_greater_eq { all_rows ; year ; 1960 } ; rank } ; 17 } = true", "tointer": "select the rows whose year record is greater than or equal to 1960 . the maximum rank record of these rows is 17 ."}, "logic_str": "eq { max { filter_greater_eq { all_rows ; year ; 1960 } ; rank } ; 17 } = true", "interpret": "select the rows whose year record is greater than or equal to 1960 . the maximum rank record of these rows is 17 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "max_1": 1, "filter_greater_eq_0": 0, "all_rows_4": 4, "year_5": 5, "1960_6": 6, "rank_7": 7, "17_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "max_1": "max", "filter_greater_eq_0": "filter_greater_eq", "all_rows_4": "all_rows", "year_5": "year", "1960_6": "1960", "rank_7": "rank", "17_8": "17"}, "g_adj": {"eq_2": [3], "result_3": [], "max_1": [2], "filter_greater_eq_0": [1], "all_rows_4": [0], "year_5": [0], "1960_6": [0], "rank_7": [1], "17_8": [2]}, "table_header": ["year", "qual", "rank", "finish", "laps"], "table_cont": [["1950", "130.928", "17", "32", "25"], ["1956", "144.471", "6", "5", "200"], ["1957", "140.780", "withdrew", "withdrew", "withdrew"], ["1958", "145.974", "1", "27", "0"], ["1959", "144.248", "5", "20", "150"], ["1960", "145.543", "6", "31", "42"], ["1961", "146.033", "8", "13", "164"], ["1962", "147.161", "13", "24", "51"], ["1963", "149.130", "14", "10", "200"], ["1964", "151.860", "17", "7", "197"]], "query": "eq { max { filter_greater_eq { all_rows ; year ; 1960 } ; rank } ; 17 } = true", "question": "from 1960 to 1964 , dick rathmann 's lowest ranking in the indianapolis 500 was 17th ."}, {"topic": "1983 nhl entry draft", "wiki": "https://en.wikipedia.org/wiki/1983_NHL_Entry_Draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2679061-11.html.csv", "action": "ordinal", "sent": "the first ranked nationality in the 1983 nhl entry draft is canadian .", "annotation": {"row": "1", "col": "1", "order": "1", "col_other": "4", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "pick", "1"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; pick ; 1 }"}, "nationality"], "result": "canada", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; pick ; 1 } ; nationality }"}, "canada"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; pick ; 1 } ; nationality } ; canada } = true", "tointer": "select the row whose pick record of all rows is 1st minimum . the nationality record of this row is canada ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; pick ; 1 } ; nationality } ; canada } = true", "interpret": "select the row whose pick record of all rows is 1st minimum . the nationality record of this row is canada .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "pick_5": 5, "1_6": 6, "nationality_7": 7, "canada_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "pick_5": "pick", "1_6": "1", "nationality_7": "nationality", "canada_8": "canada"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "pick_5": [0], "1_6": [0], "nationality_7": [1], "canada_8": [2]}, "table_header": ["pick", "player", "position", "nationality", "nhl team", "college / junior / club team"], "table_cont": [["203", "garth hildebrand", "left wing", "canada", "pittsburgh penguins", "calgary wranglers ( whl )"], ["204", "allan acton", "left wing", "canada", "hartford whalers", "saskatoon blazers ( whl )"], ["205", "alan stewart", "left wing", "canada", "new jersey devils", "prince albert raiders ( whl )"], ["206", "jeff frank", "right wing", "canada / united states", "detroit red wings", "regina pats ( whl )"], ["207", "jan blaha", "right wing", "czechoslovakia", "los angeles kings", "ceske budejovice ( czechoslovakia )"], ["208", "mike tomlak", "centre", "canada", "toronto maple leafs", "cornwall royals ( ohl )"], ["209", "eric cormier", "left wing", "canada", "winnipeg jets", "st george 's school ( canadian hs - qc )"], ["210", "steve kayser", "defence", "canada", "vancouver canucks", "university of vermont ( ecac )"], ["211", "jaroslav benak", "defence", "czechoslovakia", "calgary flames", "jihlava ( czechoslovakia )"], ["212", "oldrich valek", "right wing", "czechoslovakia", "minnesota north stars", "jihlava ( czechoslovakia )"], ["213", "bryan walker", "defence", "canada", "new york rangers", "portland winter halks ( whl )"], ["214", "uwe krupp", "defence", "west germany", "buffalo sabres", "cologne ( west germany )"], ["215", "alain raymond", "goaltender", "canada", "washington capitals", "trois - rivieres draveurs ( qmjhl )"], ["216", "anders huss", "centre", "sweden", "washington capitals", "gavle ( sweden )"], ["217", "john bjorkman", "centre", "united states", "new york islanders", "warroad high school ( ushs - mn )"], ["218", "jeff perpich", "defence", "united states", "montreal canadiens", "hibbing high school ( ushs - mn )"], ["219", "steve pepin", "centre", "canada", "chicago black hawks", "st jean castors ( qmjhl )"], ["220", "john miner", "defence", "canada", "edmonton oilers", "regina pats ( whl )"], ["221", "brian jopling", "goaltender", "united states", "philadelphia flyers", "rennssaeler polytechnic institute"], ["222", "norm foster", "goaltender", "canada", "boston bruins", "penticton knights ( bcjhl )"]], "query": "eq { hop { nth_argmin { all_rows ; pick ; 1 } ; nationality } ; canada } = true", "question": "the first ranked nationality in the 1983 nhl entry draft is canadian ."}, {"topic": "2008 - 09 los angeles lakers season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Los_Angeles_Lakers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17190012-7.html.csv", "action": "majority", "sent": "the local attendance at all of the games not played at the staples center was over 18500 .", "annotation": {"scope": "subset", "col": "8", "most_or_all": "all", "criterion": "greater_than", "value": "18500", "subset": {"col": "8", "criterion": "not_equal", "value": "staples center"}}, "logic": {"func": "all_greater", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "location attendance", "staples center"], "result": null, "ind": 0, "tostr": "filter_not_eq { all_rows ; location attendance ; staples center }", "tointer": "select the rows whose location attendance record does not match to staples center ."}, "location attendance", "18500"], "result": true, "ind": 1, "tointer": "select the rows whose location attendance record does not match to staples center . for the location attendance records of these rows , all of them are greater than 18500 .", "tostr": "all_greater { filter_not_eq { all_rows ; location attendance ; staples center } ; location attendance ; 18500 } = true"}, "logic_str": "all_greater { filter_not_eq { all_rows ; location attendance ; staples center } ; location attendance ; 18500 } = true", "interpret": "select the rows whose location attendance record does not match to staples center . for the location attendance records of these rows , all of them are greater than 18500 .", "num_func": 2, "nid": 2, "g_ids": {"all_greater_1": 1, "result_2": 2, "filter_str_not_eq_0": 0, "all_rows_3": 3, "location attendance_4": 4, "staples center_5": 5, "location attendance_6": 6, "18500_7": 7}, "g_ids_features": {"all_greater_1": "all_greater", "result_2": "true", "filter_str_not_eq_0": "filter_str_not_eq", "all_rows_3": "all_rows", "location attendance_4": "location attendance", "staples center_5": "staples center", "location attendance_6": "location attendance", "18500_7": "18500"}, "g_adj": {"all_greater_1": [2], "result_2": [], "filter_str_not_eq_0": [1], "all_rows_3": [0], "location attendance_4": [0], "staples center_5": [0], "location attendance_6": [1], "18500_7": [1]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["31", "january 2", "utah", "w 113 - 100 ( ot )", "kobe bryant ( 40 )", "pau gasol ( 11 )", "pau gasol ( 6 )", "staples center 18997", "26 - 5"], ["32", "january 4", "portland", "w 100 - 86 ( ot )", "kobe bryant ( 26 )", "andrew bynum ( 10 )", "derek fisher ( 5 )", "staples center 18997", "27 - 5"], ["33", "january 6", "new orleans", "l 105 - 116 ( ot )", "kobe bryant ( 39 )", "pau gasol , andrew bynum ( 8 )", "kobe bryant ( 7 )", "staples center 18997", "27 - 6"], ["34", "january 7", "golden state", "w 114 - 106 ( ot )", "pau gasol ( 33 )", "pau gasol ( 18 )", "derek fisher ( 8 )", "oracle arena 19596", "28 - 6"], ["35", "january 9", "indiana", "w 121 - 119 ( ot )", "kobe bryant ( 36 )", "pau gasol ( 11 )", "kobe bryant ( 13 )", "staples center 18997", "29 - 6"], ["36", "january 11", "miami", "w 108 - 105 ( ot )", "andrew bynum ( 24 )", "pau gasol ( 18 )", "derek fisher ( 11 )", "staples center 18997", "30 - 6"], ["37", "january 13", "houston", "w 105 - 100 ( ot )", "kobe bryant ( 33 )", "kobe bryant , pau gasol ( 7 )", "kobe bryant , pau gasol , lamar odom ( 4 )", "toyota center 18557", "31 - 6"], ["38", "january 14", "san antonio", "l 111 - 112 ( ot )", "kobe bryant ( 29 )", "kobe bryant ( 7 )", "kobe bryant ( 10 )", "at & t center 18797", "31 - 7"], ["39", "january 16", "orlando", "l 103 - 109 ( ot )", "kobe bryant ( 28 )", "kobe bryant ( 13 )", "kobe bryant ( 11 )", "staples center 18997", "31 - 8"], ["40", "january 19", "cleveland", "w 105 - 88 ( ot )", "pau gasol ( 22 )", "pau gasol ( 13 )", "kobe bryant ( 12 )", "staples center 18997", "32 - 8"], ["41", "january 21", "la clippers", "w 108 - 97 ( ot )", "andrew bynum ( 42 )", "andrew bynum ( 15 )", "kobe bryant ( 12 )", "staples center 19627", "33 - 8"], ["42", "january 22", "washington", "w 117 - 97 ( ot )", "andrew bynum ( 23 )", "andrew bynum ( 14 )", "derek fisher ( 8 )", "staples center 18997", "34 - 8"], ["43", "january 25", "san antonio", "w 99 - 85 ( ot )", "kobe bryant ( 22 )", "andrew bynum ( 11 )", "pau gasol , derek fisher ( 4 )", "staples center 18997", "35 - 8"], ["44", "january 27", "charlotte", "l 110 - 117 ( 2ot )", "kobe bryant ( 38 )", "andrew bynum ( 14 )", "derek fisher ( 6 )", "staples center 18997", "35 - 9"], ["45", "january 30", "minnesota", "w 132 - 119 ( ot )", "kobe bryant ( 30 )", "andrew bynum ( 15 )", "kobe bryant ( 5 )", "target center 19111", "36 - 9"]], "query": "all_greater { filter_not_eq { all_rows ; location attendance ; staples center } ; location attendance ; 18500 } = true", "question": "the local attendance at all of the games not played at the staples center was over 18500 ."}, {"topic": "list of tallest buildings in boston", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Boston", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1115824-6.html.csv", "action": "aggregation", "sent": "the average number of floors for buildings that have been the tallest buildings in boston , is 21.43 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "21.43", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "floors"], "result": "21.43", "ind": 0, "tostr": "avg { all_rows ; floors }"}, "21.43"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; floors } ; 21.43 } = true", "tointer": "the average of the floors record of all rows is 21.43 ."}, "logic_str": "round_eq { avg { all_rows ; floors } ; 21.43 } = true", "interpret": "the average of the floors record of all rows is 21.43 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "floors_4": 4, "21.43_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "floors_4": "floors", "21.43_5": "21.43"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "floors_4": [0], "21.43_5": [1]}, "table_header": ["name", "street address", "years as tallest", "height ft ( m )", "floors"], "table_cont": [["old state house", "206 washington street", "1713 - 1745", "08.0 65 ( 20 )", "3"], ["old north church", "193 salem street", "1745 - 1810", "08.0 175 ( 53 )", "1"], ["park street church", "1 park street", "1810 - 1867", "07.0 217 ( 66 )", "1"], ["church of the covenant", "67 newbury street", "1867 - 1915", "06.0 236 ( 72 )", "1"], ["custom house tower", "3 mckinley square", "1915 - 1964", "05.0 496 ( 151 )", "32"], ["prudential tower", "800 boylston street", "1964 - 1976", "04.0 749 ( 228 )", "52"], ["hancock place", "200 clarendon street", "1976 - present", "03.0 790 ( 241 )", "60"]], "query": "round_eq { avg { all_rows ; floors } ; 21.43 } = true", "question": "the average number of floors for buildings that have been the tallest buildings in boston , is 21.43 ."}, {"topic": "1947 los angeles rams season", "wiki": "https://en.wikipedia.org/wiki/1947_Los_Angeles_Rams_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11172791-1.html.csv", "action": "superlative", "sent": "the los angeles rams scored the most points in the game against the pittsburgh steelers during the 1947 season .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "result"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; result }"}, "opponent"], "result": "pittsburgh steelers", "ind": 1, "tostr": "hop { argmax { all_rows ; result } ; opponent }"}, "pittsburgh steelers"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; result } ; opponent } ; pittsburgh steelers } = true", "tointer": "select the row whose result record of all rows is maximum . the opponent record of this row is pittsburgh steelers ."}, "logic_str": "eq { hop { argmax { all_rows ; result } ; opponent } ; pittsburgh steelers } = true", "interpret": "select the row whose result record of all rows is maximum . the opponent record of this row is pittsburgh steelers .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "result_5": 5, "opponent_6": 6, "pittsburgh steelers_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "result_5": "result", "opponent_6": "opponent", "pittsburgh steelers_7": "pittsburgh steelers"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "result_5": [0], "opponent_6": [1], "pittsburgh steelers_7": [2]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 29 , 1947", "pittsburgh steelers", "w 48 - 7", "35658"], ["2", "october 5 , 1947", "green bay packers", "l 17 - 14", "31613"], ["3", "october 12 , 1947", "detroit lions", "w 27 - 13", "42955"], ["4", "october 19 , 1947", "chicago cardinals", "w 27 - 7", "69631"], ["5", "october 26 , 1947", "philadelphia eagles", "l 14 - 7", "36364"], ["6", "november 2 , 1947", "chicago cardinals", "l 17 - 10", "40075"], ["7", "november 9 , 1947", "boston yanks", "l 27 - 16", "19715"], ["8", "november 16 , 1947", "chicago bears", "l 41 - 21", "36702"], ["9", "november 23 , 1947", "detroit lions", "w 28 - 17", "17693"], ["10", "november 30 , 1947", "green bay packers", "l 30 - 10", "31080"], ["11", "december 7 , 1947", "chicago bears", "w 17 - 14", "34215"], ["12", "december 14 , 1947", "new york giants", "w 34 - 10", "24050"]], "query": "eq { hop { argmax { all_rows ; result } ; opponent } ; pittsburgh steelers } = true", "question": "the los angeles rams scored the most points in the game against the pittsburgh steelers during the 1947 season ."}, {"topic": "hong yong - jo", "wiki": "https://en.wikipedia.org/wiki/Hong_Yong-Jo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16243210-2.html.csv", "action": "unique", "sent": "in the ten games recorded here hong yong - jo played in china only once .", "annotation": {"scope": "all", "row": "7", "col": "2", "col_other": "n/a", "criterion": "fuzzily_match", "value": "china", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "china"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to china .", "tostr": "filter_eq { all_rows ; venue ; china }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; venue ; china } } = true", "tointer": "select the rows whose venue record fuzzily matches to china . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; venue ; china } } = true", "interpret": "select the rows whose venue record fuzzily matches to china . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "venue_4": 4, "china_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "venue_4": "venue", "china_5": "china"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "venue_4": [0], "china_5": [0]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["7 march 2005", "taipei , taiwan", "6 - 0", "won", "east asian cup 2005 qualification"], ["11 march 2005", "taipei , taiwan", "21 - 0", "won", "east asian cup 2005 qualification"], ["28 december 2005", "phuket , thailand", "2 - 0", "won", "friendly"], ["30 december 2005", "phuket , thailand", "1 - 2", "lost", "friendly"], ["6 february 2008", "amman , jordan", "1 - 0", "won", "2010 fifa world cup qualification"], ["14 june 2008", "pyongyang , korea dpr", "2 - 0", "won", "2010 fifa world cup qualification"], ["10 september 2008", "shanghai , china", "1 - 1", "draw", "2010 fifa world cup qualification"]], "query": "only { filter_eq { all_rows ; venue ; china } } = true", "question": "in the ten games recorded here hong yong - jo played in china only once ."}, {"topic": "new york city mayoral elections", "wiki": "https://en.wikipedia.org/wiki/New_York_City_mayoral_elections", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1108394-34.html.csv", "action": "superlative", "sent": "robert f. wagoner , jr. got the most votes in the 1953 new york mayoral election .", "annotation": {"scope": "all", "col_superlative": "8", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "total"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; total }"}, "1953"], "result": "robert f wagner , jr", "ind": 1, "tostr": "hop { argmax { all_rows ; total } ; 1953 }"}, "robert f wagner , jr"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; total } ; 1953 } ; robert f wagner , jr } = true", "tointer": "select the row whose total record of all rows is maximum . the 1953 record of this row is robert f wagner , jr ."}, "logic_str": "eq { hop { argmax { all_rows ; total } ; 1953 } ; robert f wagner , jr } = true", "interpret": "select the row whose total record of all rows is maximum . the 1953 record of this row is robert f wagner , jr .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "total_5": 5, "1953_6": 6, "robert f wagner , jr_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "total_5": "total", "1953_6": "1953", "robert f wagner , jr_7": "robert f wagner , jr"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "total_5": [0], "1953_6": [1], "robert f wagner , jr_7": [2]}, "table_header": ["1953", "party", "manhattan", "the bronx", "brooklyn", "queens", "richmond", "total"], "table_cont": [["robert f wagner , jr", "democratic", "236960", "206771", "339970", "207918", "31007", "1022626"], ["robert f wagner , jr", "democratic", "47.9 %", "46.2 %", "46.6 %", "40.6 %", "51.8 %", "1022626"], ["harold riegelman", "republican", "147876", "97224", "183968", "208829", "23694", "661591"], ["harold riegelman", "republican", "29.9 %", "21.7 %", "25.2 %", "40.8 %", "39.6 %", "661591"], ["rudolph halley", "liberal", "76884", "112825", "162275", "73192", "3514", "428690"], ["rudolph halley", "independent", "7648", "9853", "13264", "7356", "295", "38416"], ["rudolph halley", "total", "84532", "122678", "175539", "80548", "3809", "467106"], ["rudolph halley", "total", "17.1 %", "27.4 %", "24.1 %", "15.7 %", "6.4 %", "467106"], ["clifford t mcavoy", "american labor party", "14904", "13290", "17337", "7182", "332", "53045"], ["david l weiss", "socialist workers", "10683", "7760", "13062", "7254", "1019", "2054"], ["nathan karp", "industrial gov ' t", "10683", "7760", "13062", "7254", "1019", "916"], ["scattered", "scattered", "10683", "7760", "13062", "7254", "1019", "180"], ["unrecorded ( blank , spoiled , etc )", "unrecorded ( blank , spoiled , etc )", "10683", "7760", "13062", "7254", "1019", "36630"], ["t o t a l", "t o t a l", "494955", "447723", "729876", "511731", "59861", "2244146"]], "query": "eq { hop { argmax { all_rows ; total } ; 1953 } ; robert f wagner , jr } = true", "question": "robert f. wagoner , jr. got the most votes in the 1953 new york mayoral election ."}, {"topic": "judo at the 1997 mediterranean games", "wiki": "https://en.wikipedia.org/wiki/Judo_at_the_1997_Mediterranean_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15250079-3.html.csv", "action": "aggregation", "sent": "a total of 14 gold medals were won in judo at the 1997 mediterranean games .", "annotation": {"scope": "all", "col": "3", "type": "sum", "result": "14", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "gold"], "result": "14", "ind": 0, "tostr": "sum { all_rows ; gold }"}, "14"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; gold } ; 14 } = true", "tointer": "the sum of the gold record of all rows is 14 ."}, "logic_str": "round_eq { sum { all_rows ; gold } ; 14 } = true", "interpret": "the sum of the gold record of all rows is 14 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "gold_4": 4, "14_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "gold_4": "gold", "14_5": "14"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "gold_4": [0], "14_5": [1]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "france", "7", "3", "4", "14"], ["2", "italy", "5", "2", "5", "12"], ["3", "spain", "1", "2", "6", "9"], ["4", "turkey", "1", "1", "4", "5"], ["5", "algeria", "0", "2", "1", "3"], ["6 =", "tunisia", "0", "1", "3", "4"], ["6 =", "yugoslavia", "0", "1", "3", "4"], ["8 =", "egypt", "0", "1", "0", "1"], ["8 =", "slovenia", "0", "1", "0", "1"], ["10", "morocco", "0", "0", "2", "2"]], "query": "round_eq { sum { all_rows ; gold } ; 14 } = true", "question": "a total of 14 gold medals were won in judo at the 1997 mediterranean games ."}, {"topic": "china open ( badminton )", "wiki": "https://en.wikipedia.org/wiki/China_Open_%28badminton%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12204717-1.html.csv", "action": "ordinal", "sent": "the 2nd to last year of the china open was when wang yihan won the women 's singles .", "annotation": {"row": "17", "col": "1", "order": "2", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "year", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; year ; 2 }"}, "womens singles"], "result": "wang yihan", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; year ; 2 } ; womens singles }"}, "wang yihan"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; womens singles } ; wang yihan } = true", "tointer": "select the row whose year record of all rows is 2nd maximum . the womens singles record of this row is wang yihan ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; womens singles } ; wang yihan } = true", "interpret": "select the row whose year record of all rows is 2nd maximum . the womens singles record of this row is wang yihan .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "year_5": 5, "2_6": 6, "womens singles_7": 7, "wang yihan_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "year_5": "year", "2_6": "2", "womens singles_7": "womens singles", "wang yihan_8": "wang yihan"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "year_5": [0], "2_6": [0], "womens singles_7": [1], "wang yihan_8": [2]}, "table_header": ["year", "mens singles", "womens singles", "mens doubles", "womens doubles", "mixed doubles"], "table_cont": [["1991", "alan budi kusuma", "huang hua", "li yongbo tian bingyi", "chung myung - hee hwang hye - young", "liu jianjun wang xiaoyuan"], ["1992", "hermawan susanto", "yao yan", "ricky subagja rexy mainaky", "yao fen lin yanfen", "aryono miranat eliza nathanael"], ["1993", "joko suprianto", "han jingna", "rudy gunawan bambang suprianto", "wu yuhong chen ying", "chen xingdong sun man"], ["1995", "dong jiong", "ye zhaoying", "huang zhanzhong jiang xin", "ge fei gu jun", "peng xinyong chen xingdong"], ["1997", "dong jiong", "gong zhichao", "ge cheng tao xiaoqiang", "ge fei gu jun", "kim dong - moon ra kyung - min"], ["1999", "dong jiong", "zhou mi", "ha tae - kwon kim dong - moon", "ge fei gu jun", "liu yong ge fei"], ["2001", "xia xuanze", "zhou mi", "zhang wei zhang jun", "zhang jiewen wei yili", "liu yong chen lin"], ["2002", "wong choong hann", "gong ruina", "pramote teerawiwatana tesana panvisvas", "gao ling huang sui", "zhang jun gao ling"], ["2003", "lin dan", "zhou mi", "lars paaske jonas rasmussen", "gao ling huang sui", "zhang jun gao ling"], ["2004", "lin dan", "xie xingfang", "candra wijaya sigit budiarto", "yang wei zhang jiewen", "jens eriksen mette schjoldager"], ["2005", "chen hong", "zhang ning", "candra wijaya sigit budiarto", "yang wei zhang jiewen", "nathan robertson gail emms"], ["2006", "chen hong", "zhang ning", "markis kido hendra setiawan", "yang wei zhang jiewen", "xie zhongbo zhang yawen"], ["2007", "bao chunlai", "wong mew choo", "markis kido hendra setiawan", "gao ling zhao tingting", "nova widianto lilyana natsir"], ["2008", "lin dan", "jiang yanjiao", "jung jae - sung lee yong - dae", "zhang yawen zhao tingting", "lee yong - dae lee hyo - jung"], ["2009", "lin dan", "jiang yanjiao", "jung jae - sung lee yong - dae", "tian qing zhang yawen", "lee yong - dae lee hyo - jung"], ["2010", "chen long", "jiang yanjiao", "jung jae - sung lee yong - dae", "cheng shu zhao yunlei", "tao jiaming tian qing"], ["2011", "lin dan", "wang yihan", "mathias boe carsten mogensen", "wang xiaoli yu yang", "zhang nan zhao yunlei"], ["2012", "chen long", "li xuerui", "mathias boe carsten mogensen", "wang xiaoli yu yang", "xu chen ma jin"]], "query": "eq { hop { nth_argmax { all_rows ; year ; 2 } ; womens singles } ; wang yihan } = true", "question": "the 2nd to last year of the china open was when wang yihan won the women 's singles ."}, {"topic": "1977 - 78 san antonio spurs season", "wiki": "https://en.wikipedia.org/wiki/1977%E2%80%9378_San_Antonio_Spurs_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17063833-1.html.csv", "action": "unique", "sent": "in the 1977-78 san antonio spurs season , the only player who went to college at arizona was jerome gladney .", "annotation": {"scope": "all", "row": "7", "col": "5", "col_other": "3", "criterion": "equal", "value": "arizona", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "arizona"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to arizona .", "tostr": "filter_eq { all_rows ; college ; arizona }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; college ; arizona } }", "tointer": "select the rows whose college record fuzzily matches to arizona . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "arizona"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to arizona .", "tostr": "filter_eq { all_rows ; college ; arizona }"}, "player"], "result": "jerome gladney", "ind": 2, "tostr": "hop { filter_eq { all_rows ; college ; arizona } ; player }"}, "jerome gladney"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; college ; arizona } ; player } ; jerome gladney }", "tointer": "the player record of this unqiue row is jerome gladney ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; college ; arizona } } ; eq { hop { filter_eq { all_rows ; college ; arizona } ; player } ; jerome gladney } } = true", "tointer": "select the rows whose college record fuzzily matches to arizona . there is only one such row in the table . the player record of this unqiue row is jerome gladney ."}, "logic_str": "and { only { filter_eq { all_rows ; college ; arizona } } ; eq { hop { filter_eq { all_rows ; college ; arizona } ; player } ; jerome gladney } } = true", "interpret": "select the rows whose college record fuzzily matches to arizona . there is only one such row in the table . the player record of this unqiue row is jerome gladney .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "college_7": 7, "arizona_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "jerome gladney_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "college_7": "college", "arizona_8": "arizona", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "jerome gladney_10": "jerome gladney"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "college_7": [0], "arizona_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "jerome gladney_10": [3]}, "table_header": ["round", "pick", "player", "nationality", "college"], "table_cont": [["2", "37", "jeff wilkins", "united states", "illinois state"], ["3", "59", "dan henderson", "united states", "arkansas state"], ["4", "81", "matt hicks ( basketball )", "united states", "northern illinois"], ["5", "103", "scott sims", "united states", "missouri"], ["6", "125", "bruce buckley", "united states", "north carolina"], ["7", "145", "richard robinson", "united states", "new mexico"], ["8", "164", "jerome gladney", "united states", "arizona"]], "query": "and { only { filter_eq { all_rows ; college ; arizona } } ; eq { hop { filter_eq { all_rows ; college ; arizona } ; player } ; jerome gladney } } = true", "question": "in the 1977-78 san antonio spurs season , the only player who went to college at arizona was jerome gladney ."}, {"topic": "1996 atp super 9", "wiki": "https://en.wikipedia.org/wiki/1996_ATP_Super_9", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16381189-1.html.csv", "action": "count", "sent": "of the games played on a clay surface in the 1996 atp super 9 singles , two took place in the month of may .", "annotation": {"scope": "subset", "criterion": "fuzzily_match", "value": "may", "result": "2", "col": "3", "subset": {"col": "2", "criterion": "equal", "value": "clay"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "surface", "clay"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; surface ; clay }", "tointer": "select the rows whose surface record fuzzily matches to clay ."}, "week", "may"], "result": null, "ind": 1, "tointer": "select the rows whose surface record fuzzily matches to clay . among these rows , select the rows whose week record fuzzily matches to may .", "tostr": "filter_eq { filter_eq { all_rows ; surface ; clay } ; week ; may }"}], "result": "2", "ind": 2, "tostr": "count { filter_eq { filter_eq { all_rows ; surface ; clay } ; week ; may } }", "tointer": "select the rows whose surface record fuzzily matches to clay . among these rows , select the rows whose week record fuzzily matches to may . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_eq { all_rows ; surface ; clay } ; week ; may } } ; 2 } = true", "tointer": "select the rows whose surface record fuzzily matches to clay . among these rows , select the rows whose week record fuzzily matches to may . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { filter_eq { all_rows ; surface ; clay } ; week ; may } } ; 2 } = true", "interpret": "select the rows whose surface record fuzzily matches to clay . among these rows , select the rows whose week record fuzzily matches to may . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "surface_6": 6, "clay_7": 7, "week_8": 8, "may_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "surface_6": "surface", "clay_7": "clay", "week_8": "week", "may_9": "may", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_eq_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "surface_6": [0], "clay_7": [0], "week_8": [1], "may_9": [1], "2_10": [3]}, "table_header": ["tournament", "surface", "week", "winner and score", "finalist", "semifinalists"], "table_cont": [["indian wells", "hard", "march 11", "michael chang 7 - 5 , 6 - 1 , 6 - 1", "paul haarhuis", "goran ivani\u0161evi\u0107 marcelo r\u00edos"], ["key biscane", "hard", "march 18", "andre agassi 3 - 0 ret", "goran ivani\u0161evi\u0107", "arnaud boetsch pete sampras"], ["monte carlo", "clay", "april 22", "thomas muster 6 - 3 , 5 - 7 , 4 - 6 , 6 - 3 , 6 - 2", "albert costa", "c\u00e9dric pioline marcelo r\u00edos"], ["hamburg", "clay", "may 6", "roberto carretero 2 - 6 , 6 - 4 , 6 - 4 , 6 - 4", "\u00e0lex corretja", "yevgeny kafelnikov marcelo r\u00edos"], ["rome", "clay", "may 13", "thomas muster 6 - 2 , 6 - 4 , 3 - 6 , 6 - 3", "richard krajicek", "albert costa wayne ferreira"], ["cincinnati", "hard", "august 5", "andre agassi 7 - 6 ( 4 ) , 6 - 4", "michael chang", "thomas enqvist thomas muster"], ["toronto", "hard", "august 19", "wayne ferreira 6 - 2 , 6 - 4", "todd woodbridge", "marcelo r\u00edos todd martin"], ["stuttgart", "carpet ( i )", "october 21", "boris becker 3 - 6 , 6 - 3 , 3 - 6 , 6 - 3 , 6 - 4", "pete sampras", "jan siemerink michael chang"], ["paris", "carpet ( i )", "october 28", "thomas enqvist 6 - 2 , 6 - 4 , 7 - 5", "yevgeny kafelnikov", "magnus gustafsson petr korda"], ["hanover ( awc )", "carpet ( i )", "november 18", "pete sampras 3 - 6 , 7 - 6 ( 5 ) , 7 - 6 ( 4 ) , 6 - 7 ( 11 ) , 6 - 4", "boris becker", "richard krajicek goran ivani\u0161evi\u0107"]], "query": "eq { count { filter_eq { filter_eq { all_rows ; surface ; clay } ; week ; may } } ; 2 } = true", "question": "of the games played on a clay surface in the 1996 atp super 9 singles , two took place in the month of may ."}, {"topic": "randy lajoie", "wiki": "https://en.wikipedia.org/wiki/Randy_LaJoie", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2182562-1.html.csv", "action": "ordinal", "sent": "the 3rd largest amount of winnings that randy lajoie had , was 160261 .", "annotation": {"row": "10", "col": "9", "order": "3", "col_other": "n/a", "max_or_min": "max_to_min", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "nth_max", "args": ["all_rows", "winnings", "3"], "result": "160261", "ind": 0, "tostr": "nth_max { all_rows ; winnings ; 3 }", "tointer": "the 3rd maximum winnings record of all rows is 160261 ."}, "160261"], "result": true, "ind": 1, "tostr": "eq { nth_max { all_rows ; winnings ; 3 } ; 160261 } = true", "tointer": "the 3rd maximum winnings record of all rows is 160261 ."}, "logic_str": "eq { nth_max { all_rows ; winnings ; 3 } ; 160261 } = true", "interpret": "the 3rd maximum winnings record of all rows is 160261 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "nth_max_0": 0, "all_rows_3": 3, "winnings_4": 4, "3_5": 5, "160261_6": 6}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "nth_max_0": "nth_max", "all_rows_3": "all_rows", "winnings_4": "winnings", "3_5": "3", "160261_6": "160261"}, "g_adj": {"eq_1": [2], "result_2": [], "nth_max_0": [1], "all_rows_3": [0], "winnings_4": [0], "3_5": [0], "160261_6": [1]}, "table_header": ["year", "starts", "wins", "top 5", "top 10", "poles", "avg start", "avg finish", "winnings", "position", "team ( s )"], "table_cont": [["1985", "1", "0", "0", "0", "0", "16.0", "14.0", "2925", "101st", "07 bob johnson racing"], ["1986", "1", "0", "0", "0", "0", "20.0", "29.0", "1815", "107th", "07 bob johnson racing"], ["1988", "1", "0", "0", "0", "0", "29.0", "37.0", "1460", "97th", "74 wawak racing"], ["1989", "1", "0", "0", "0", "0", "32.0", "28.0", "2725", "83rd", "63 linro motorsports"], ["1990", "2", "0", "0", "0", "0", "33.0", "35.5", "6675", "73rd", "13 linro motorsports"], ["1994", "3", "0", "0", "0", "0", "20.3", "19.7", "30565", "48th", "20 moroso racing 02 tw taylor"], ["1995", "14", "0", "0", "0", "0", "29.4", "27.4", "281945", "40th", "22 bill davis racing 40 brooks / sabco racing"], ["1998", "9", "0", "1", "3", "0", "25.3", "26.2", "336905", "49th", "50 hendrick motorsports"], ["1999", "2", "0", "0", "0", "0", "19.0", "38.5", "71200", "61st", "14 no fear racing"], ["2004", "3", "0", "0", "0", "0", "41.0", "40.3", "160261", "68th", "80 hover motorsports 98 mach 1 motorsports"]], "query": "eq { nth_max { all_rows ; winnings ; 3 } ; 160261 } = true", "question": "the 3rd largest amount of winnings that randy lajoie had , was 160261 ."}, {"topic": "1969 vfl season", "wiki": "https://en.wikipedia.org/wiki/1969_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10809157-3.html.csv", "action": "comparative", "sent": "among the venues in the 1969 vfl season , windy hill had a larger crowd than princes park .", "annotation": {"row_1": "3", "row_2": "2", "col": "6", "col_other": "5", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "windy hill"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to windy hill .", "tostr": "filter_eq { all_rows ; venue ; windy hill }"}, "crowd"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; windy hill } ; crowd }", "tointer": "select the rows whose venue record fuzzily matches to windy hill . take the crowd record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "princes park"], "result": null, "ind": 1, "tointer": "select the rows whose venue record fuzzily matches to princes park .", "tostr": "filter_eq { all_rows ; venue ; princes park }"}, "crowd"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; venue ; princes park } ; crowd }", "tointer": "select the rows whose venue record fuzzily matches to princes park . take the crowd record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; venue ; windy hill } ; crowd } ; hop { filter_eq { all_rows ; venue ; princes park } ; crowd } } = true", "tointer": "select the rows whose venue record fuzzily matches to windy hill . take the crowd record of this row . select the rows whose venue record fuzzily matches to princes park . take the crowd record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; venue ; windy hill } ; crowd } ; hop { filter_eq { all_rows ; venue ; princes park } ; crowd } } = true", "interpret": "select the rows whose venue record fuzzily matches to windy hill . take the crowd record of this row . select the rows whose venue record fuzzily matches to princes park . take the crowd record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "venue_7": 7, "windy hill_8": 8, "crowd_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "venue_11": 11, "princes park_12": 12, "crowd_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "venue_7": "venue", "windy hill_8": "windy hill", "crowd_9": "crowd", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "venue_11": "venue", "princes park_12": "princes park", "crowd_13": "crowd"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "venue_7": [0], "windy hill_8": [0], "crowd_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "venue_11": [1], "princes park_12": [1], "crowd_13": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "19.20 ( 134 )", "south melbourne", "11.8 ( 74 )", "kardinia park", "15068", "19 april 1969"], ["fitzroy", "14.7 ( 91 )", "st kilda", "19.18 ( 132 )", "princes park", "12240", "19 april 1969"], ["essendon", "12.13 ( 85 )", "hawthorn", "14.14 ( 98 )", "windy hill", "15800", "19 april 1969"], ["collingwood", "19.16 ( 130 )", "melbourne", "9.8 ( 62 )", "victoria park", "18729", "19 april 1969"], ["richmond", "13.28 ( 106 )", "north melbourne", "16.15 ( 111 )", "mcg", "26884", "19 april 1969"], ["footscray", "7.10 ( 52 )", "carlton", "11.15 ( 81 )", "western oval", "20250", "19 april 1969"]], "query": "greater { hop { filter_eq { all_rows ; venue ; windy hill } ; crowd } ; hop { filter_eq { all_rows ; venue ; princes park } ; crowd } } = true", "question": "among the venues in the 1969 vfl season , windy hill had a larger crowd than princes park ."}, {"topic": "sheri - ann brooks", "wiki": "https://en.wikipedia.org/wiki/Sheri-Ann_Brooks", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13214149-1.html.csv", "action": "unique", "sent": "sheri-ann brooks only received 5th place in one race .", "annotation": {"scope": "all", "row": "2", "col": "4", "col_other": "n/a", "criterion": "equal", "value": "5th", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "5th"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to 5th .", "tostr": "filter_eq { all_rows ; result ; 5th }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; result ; 5th } } = true", "tointer": "select the rows whose result record fuzzily matches to 5th . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; result ; 5th } } = true", "interpret": "select the rows whose result record fuzzily matches to 5th . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "result_4": 4, "5th_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "result_4": "result", "5th_5": "5th"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "result_4": [0], "5th_5": [0]}, "table_header": ["year", "tournament", "venue", "result", "extra"], "table_cont": [["2006", "commonwealth games", "melbourne , australia", "1st", "100 m"], ["2006", "commonwealth games", "melbourne , australia", "5th", "200 m"], ["2006", "commonwealth games", "melbourne , australia", "1st", "4 x 100 m relay"], ["2007", "pan american games", "rio , brazil", "2nd", "200 m"], ["2007", "pan american games", "rio , brazil", "1st", "4 x 400 m relay"], ["2007", "world championships", "osaka , japan", "2nd", "4 x 100 m relay"]], "query": "only { filter_eq { all_rows ; result ; 5th } } = true", "question": "sheri-ann brooks only received 5th place in one race ."}, {"topic": "soybean oil", "wiki": "https://en.wikipedia.org/wiki/Soybean_oil", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2540803-2.html.csv", "action": "ordinal", "sent": "hydrogenated vegetable shortening is the type of fat that has the 4th highest amount of saturated fat .", "annotation": {"row": "8", "col": "3", "order": "4", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "saturated fat", "4"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; saturated fat ; 4 }"}, ""], "result": "vegetable shortening ( hydrogenated )", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; saturated fat ; 4 } ; }"}, "vegetable shortening ( hydrogenated )"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; saturated fat ; 4 } ; } ; vegetable shortening ( hydrogenated ) } = true", "tointer": "select the row whose saturated fat record of all rows is 4th maximum . the record of this row is vegetable shortening ( hydrogenated ) ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; saturated fat ; 4 } ; } ; vegetable shortening ( hydrogenated ) } = true", "interpret": "select the row whose saturated fat record of all rows is 4th maximum . the record of this row is vegetable shortening ( hydrogenated ) .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "saturated fat_5": 5, "4_6": 6, "_7": 7, "vegetable shortening ( hydrogenated )_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "saturated fat_5": "saturated fat", "4_6": "4", "_7": "", "vegetable shortening ( hydrogenated )_8": "vegetable shortening ( hydrogenated )"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "saturated fat_5": [0], "4_6": [0], "_7": [1], "vegetable shortening ( hydrogenated )_8": [2]}, "table_header": ["", "total fat", "saturated fat", "monounsaturated fat", "polyunsaturated fat", "smoke point"], "table_cont": [["sunflower oil", "100 g", "11 g", "20 g ( 84 g in high oleic variety )", "69 g ( 4 g in high oleic variety )", "degree"], ["soybean oil", "100 g", "16 g", "23 g", "58 g", "degree"], ["canola oil", "100 g", "7 g", "63 g", "28 g", "degree"], ["olive oil", "100 g", "14 g", "73 g", "11 g", "degree"], ["corn oil", "100 g", "15 g", "30 g", "55 g", "degree"], ["peanut oil", "100 g", "17 g", "46 g", "32 g", "degree"], ["rice bran oil", "100 g", "25 g", "38 g", "37 g", "degree"], ["vegetable shortening ( hydrogenated )", "71 g", "23 g ( 34 % )", "8 g ( 11 % )", "37 g ( 52 % )", "degree"], ["lard", "100 g", "39 g", "45 g", "11 g", "degree"], ["suet", "94 g", "52 g ( 55 % )", "32 g ( 34 % )", "3 g ( 3 % )", "200degree ( 400degree )"]], "query": "eq { hop { nth_argmax { all_rows ; saturated fat ; 4 } ; } ; vegetable shortening ( hydrogenated ) } = true", "question": "hydrogenated vegetable shortening is the type of fat that has the 4th highest amount of saturated fat ."}, {"topic": "jahid hasan ameli", "wiki": "https://en.wikipedia.org/wiki/Jahid_Hasan_Ameli", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15687212-1.html.csv", "action": "ordinal", "sent": "of the competitions that jahid hasan ameli participated in , the 2nd to last one was in kuala lumpur .", "annotation": {"row": "10", "col": "1", "order": "10", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "10"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; date ; 10 }"}, "venue"], "result": "national stadium , kuala lumpur", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; date ; 10 } ; venue }"}, "national stadium , kuala lumpur"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 10 } ; venue } ; national stadium , kuala lumpur } = true", "tointer": "select the row whose date record of all rows is 10th minimum . the venue record of this row is national stadium , kuala lumpur ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; date ; 10 } ; venue } ; national stadium , kuala lumpur } = true", "interpret": "select the row whose date record of all rows is 10th minimum . the venue record of this row is national stadium , kuala lumpur .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "date_5": 5, "10_6": 6, "venue_7": 7, "national stadium , kuala lumpur_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "date_5": "date", "10_6": "10", "venue_7": "venue", "national stadium , kuala lumpur_8": "national stadium , kuala lumpur"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "date_5": [0], "10_6": [0], "venue_7": [1], "national stadium , kuala lumpur_8": [2]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["8 december 2005", "peoples football stadium , karachi", "3 - 0", "3 - 0", "2005 saff gold cup"], ["12 december 2005", "peoples football stadium , karachi", "1 - 1", "1 - 1", "2005 saff gold cup"], ["1 april 2006", "bangabandhu national stadium , dhaka", "2 - 0", "2 - 1", "2006 afc challenge cup"], ["3 april 2006", "bangabandhu national stadium , dhaka", "1 - 0", "3 - 0", "2006 afc challenge cup"], ["9 may 2008", "spartak stadium , bishkek", "1 - 0", "1 - 2", "2008 afc challenge cup qualifier"], ["6 june 2008", "sugathadasa stadium , colombo", "1 - 2", "2 - 2", "2008 saff championship"], ["4 december 2009", "bangabandhu national stadium , dhaka", "4 - 1", "4 - 1", "2009 saff championship"], ["29 june 2011", "bangabandhu national stadium , dhaka", "1 - 0", "3 - 0", "2014 fifa world cup qualifier"], ["28 july 2011", "bangabandhu national stadium , dhaka", "2 - 0", "2 - 0", "2014 fifa world cup qualifier"], ["20 november 2012", "national stadium , kuala lumpur", "1 - 1", "1 - 1", "international friendly"], ["5 september 2013", "halchowk stadium , kathmandu", "1 - 0", "1 - 2", "2013 saff championship"]], "query": "eq { hop { nth_argmin { all_rows ; date ; 10 } ; venue } ; national stadium , kuala lumpur } = true", "question": "of the competitions that jahid hasan ameli participated in , the 2nd to last one was in kuala lumpur ."}, {"topic": "list of schools in the hawke 's bay region", "wiki": "https://en.wikipedia.org/wiki/List_of_schools_in_the_Hawke%27s_Bay_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12195931-1.html.csv", "action": "unique", "sent": "st joseph 's school is the only state-integrated school .", "annotation": {"scope": "all", "row": "8", "col": "5", "col_other": "1", "criterion": "equal", "value": "state integrated", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "authority", "state integrated"], "result": null, "ind": 0, "tointer": "select the rows whose authority record fuzzily matches to state integrated .", "tostr": "filter_eq { all_rows ; authority ; state integrated }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; authority ; state integrated } }", "tointer": "select the rows whose authority record fuzzily matches to state integrated . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "authority", "state integrated"], "result": null, "ind": 0, "tointer": "select the rows whose authority record fuzzily matches to state integrated .", "tostr": "filter_eq { all_rows ; authority ; state integrated }"}, "name"], "result": "st joseph 's school", "ind": 2, "tostr": "hop { filter_eq { all_rows ; authority ; state integrated } ; name }"}, "st joseph 's school"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; authority ; state integrated } ; name } ; st joseph 's school }", "tointer": "the name record of this unqiue row is st joseph 's school ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; authority ; state integrated } } ; eq { hop { filter_eq { all_rows ; authority ; state integrated } ; name } ; st joseph 's school } } = true", "tointer": "select the rows whose authority record fuzzily matches to state integrated . there is only one such row in the table . the name record of this unqiue row is st joseph 's school ."}, "logic_str": "and { only { filter_eq { all_rows ; authority ; state integrated } } ; eq { hop { filter_eq { all_rows ; authority ; state integrated } ; name } ; st joseph 's school } } = true", "interpret": "select the rows whose authority record fuzzily matches to state integrated . there is only one such row in the table . the name record of this unqiue row is st joseph 's school .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "authority_7": 7, "state integrated_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "st joseph 's school_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "authority_7": "authority", "state integrated_8": "state integrated", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "st joseph 's school_10": "st joseph 's school"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "authority_7": [0], "state integrated_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "st joseph 's school_10": [3]}, "table_header": ["name", "years", "gender", "area", "authority", "decile", "roll"], "table_cont": [["frasertown school", "1 - 6", "coed", "frasertown", "state", "4", "107"], ["kotemaori school", "1 - 8", "coed", "kotemaori", "state", "4", "6"], ["mohaka school", "1 - 8", "coed", "mohaka", "state", "1", "36"], ["nuhaka school", "1 - 8", "coed", "nuhaka", "state", "2", "123"], ["ohuka school", "1 - 8", "coed", "ohuka", "state", "10", "12"], ["putere school", "1 - 8", "coed", "putere", "state", "2", "12"], ["ruakituri school", "1 - 8", "coed", "ruakituri", "state", "7", "9"], ["st joseph 's school", "1 - 8", "coed", "wairoa", "state integrated", "3", "122"], ["te kura o waikaremoana", "1 - 8", "coed", "tuai", "state", "2", "27"], ["te mahia school", "1 - 8", "coed", "mahia", "state", "1", "48"], ["tiaho primary school", "1 - 6", "coed", "wairoa", "state", "2", "150"], ["tkkm o ngati kahungunu o te wairoa", "1 - 8", "coed", "wairoa", "state", "1", "61"], ["wairoa college", "7 - 15", "coed", "wairoa", "state", "2", "544"], ["wairoa primary school", "1 - 6", "coed", "wairoa", "state", "2", "228"]], "query": "and { only { filter_eq { all_rows ; authority ; state integrated } } ; eq { hop { filter_eq { all_rows ; authority ; state integrated } ; name } ; st joseph 's school } } = true", "question": "st joseph 's school is the only state-integrated school ."}, {"topic": "auburn tigers football", "wiki": "https://en.wikipedia.org/wiki/Auburn_Tigers_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2846320-4.html.csv", "action": "comparative", "sent": "for auburn tigers football , the auburn - tennessee football rivalry has had 3 more games than the auburn - clemson rivalry .", "annotation": {"row_1": "6", "row_2": "8", "col": "3", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "3", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name of rivalry", "auburn - tennessee football rivalry"], "result": null, "ind": 0, "tointer": "select the rows whose name of rivalry record fuzzily matches to auburn - tennessee football rivalry .", "tostr": "filter_eq { all_rows ; name of rivalry ; auburn - tennessee football rivalry }"}, "games played"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name of rivalry ; auburn - tennessee football rivalry } ; games played }", "tointer": "select the rows whose name of rivalry record fuzzily matches to auburn - tennessee football rivalry . take the games played record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name of rivalry", "auburn - clemson rivalry"], "result": null, "ind": 1, "tointer": "select the rows whose name of rivalry record fuzzily matches to auburn - clemson rivalry .", "tostr": "filter_eq { all_rows ; name of rivalry ; auburn - clemson rivalry }"}, "games played"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name of rivalry ; auburn - clemson rivalry } ; games played }", "tointer": "select the rows whose name of rivalry record fuzzily matches to auburn - clemson rivalry . take the games played record of this row ."}], "result": "3", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; name of rivalry ; auburn - tennessee football rivalry } ; games played } ; hop { filter_eq { all_rows ; name of rivalry ; auburn - clemson rivalry } ; games played } }"}, "3"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; name of rivalry ; auburn - tennessee football rivalry } ; games played } ; hop { filter_eq { all_rows ; name of rivalry ; auburn - clemson rivalry } ; games played } } ; 3 } = true", "tointer": "select the rows whose name of rivalry record fuzzily matches to auburn - tennessee football rivalry . take the games played record of this row . select the rows whose name of rivalry record fuzzily matches to auburn - clemson rivalry . take the games played record of this row . the first record is 3 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; name of rivalry ; auburn - tennessee football rivalry } ; games played } ; hop { filter_eq { all_rows ; name of rivalry ; auburn - clemson rivalry } ; games played } } ; 3 } = true", "interpret": "select the rows whose name of rivalry record fuzzily matches to auburn - tennessee football rivalry . take the games played record of this row . select the rows whose name of rivalry record fuzzily matches to auburn - clemson rivalry . take the games played record of this row . the first record is 3 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "name of rivalry_8": 8, "auburn - tennessee football rivalry_9": 9, "games played_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "name of rivalry_12": 12, "auburn - clemson rivalry_13": 13, "games played_14": 14, "3_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "name of rivalry_8": "name of rivalry", "auburn - tennessee football rivalry_9": "auburn - tennessee football rivalry", "games played_10": "games played", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "name of rivalry_12": "name of rivalry", "auburn - clemson rivalry_13": "auburn - clemson rivalry", "games played_14": "games played", "3_15": "3"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "name of rivalry_8": [0], "auburn - tennessee football rivalry_9": [0], "games played_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "name of rivalry_12": [1], "auburn - clemson rivalry_13": [1], "games played_14": [3], "3_15": [5]}, "table_header": ["name of rivalry", "rival", "games played", "first meeting", "last meeting", "au won", "au lost", "ties", "streak", "latest win"], "table_cont": [["iron bowl", "alabama", "77", "1893", "2012", "34", "42", "1", "2 losses", "2010 , 28 - 27"], ["deep south 's oldest rivalry", "georgia", "115", "1892", "2012", "54", "54", "8", "2 losses", "2010 , 49 - 31"], ["auburn - lsu football rivalry", "lsu", "47", "1901", "2012", "20", "26", "1", "2 losses", "2010 , 24 - 17"], ["auburn - florida football rivalry", "florida", "83", "1912", "2011", "43", "38", "2", "3 wins", "2011 , 17 - 6"], ["auburn - georgia tech football rivalry", "georgia tech", "92", "1892", "2005", "47", "41", "4", "2 losses", "1987 , 20 - 10"], ["auburn - tennessee football rivalry", "tennessee", "51", "1900", "2009", "27", "21", "3", "5 wins", "2009 , 26 - 22"], ["auburn - tulane football rivalry", "tulane", "37", "1902", "2006", "14", "17", "6", "1 win", "2006 , 38 - 13"], ["auburn - clemson rivalry", "clemson", "48", "1899", "2012", "34", "13", "2", "2 losses", "2010 , 27 - 24"]], "query": "eq { diff { hop { filter_eq { all_rows ; name of rivalry ; auburn - tennessee football rivalry } ; games played } ; hop { filter_eq { all_rows ; name of rivalry ; auburn - clemson rivalry } ; games played } } ; 3 } = true", "question": "for auburn tigers football , the auburn - tennessee football rivalry has had 3 more games than the auburn - clemson rivalry ."}, {"topic": "marek ham\u0161\u00edk", "wiki": "https://en.wikipedia.org/wiki/Marek_Ham%C5%A1%C3%ADk", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11895475-1.html.csv", "action": "comparative", "sent": "the competition where the result was 7-0 took place the month before the competition where the result was 5-0 .", "annotation": {"row_1": "1", "row_2": "2", "col": "1", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "13 october 2007"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to 13 october 2007 .", "tostr": "filter_eq { all_rows ; date ; 13 october 2007 }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; 13 october 2007 } ; date }", "tointer": "select the rows whose date record fuzzily matches to 13 october 2007 . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "21 november 2007"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to 21 november 2007 .", "tostr": "filter_eq { all_rows ; date ; 21 november 2007 }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; date ; 21 november 2007 } ; date }", "tointer": "select the rows whose date record fuzzily matches to 21 november 2007 . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; date ; 13 october 2007 } ; date } ; hop { filter_eq { all_rows ; date ; 21 november 2007 } ; date } } = true", "tointer": "select the rows whose date record fuzzily matches to 13 october 2007 . take the date record of this row . select the rows whose date record fuzzily matches to 21 november 2007 . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; date ; 13 october 2007 } ; date } ; hop { filter_eq { all_rows ; date ; 21 november 2007 } ; date } } = true", "interpret": "select the rows whose date record fuzzily matches to 13 october 2007 . take the date record of this row . select the rows whose date record fuzzily matches to 21 november 2007 . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "date_7": 7, "13 october 2007_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "date_11": 11, "21 november 2007_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date_7": "date", "13 october 2007_8": "13 october 2007", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "date_11": "date", "21 november 2007_12": "21 november 2007", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "date_7": [0], "13 october 2007_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "date_11": [1], "21 november 2007_12": [1], "date_13": [3]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["13 october 2007", "\u0161tadi\u00f3n zimn\u00fd , dubnica , slovakia", "1 - 0", "7 - 0", "uefa euro 2008 qualifying"], ["21 november 2007", "stadio olimpico , serravalle , san marino", "3 - 0", "5 - 0", "uefa euro 2008 qualifying"], ["6 september 2008", "teheln\u00e9 pole , bratislava , slovakia", "2 - 0", "2 - 1", "2010 fifa world cup qualification"], ["19 november 2008", "stadium pod dub\u0148om , \u017eilina , slovakia", "1 - 0", "4 - 0", "friendly match"], ["19 november 2008", "stadium pod dub\u0148om , \u017eilina , slovakia", "2 - 0", "4 - 0", "friendly match"], ["10 february 2009", "tsirion stadium , limassol , cyprus", "2 - 0", "2 - 3", "friendly match"], ["5 september 2009", "teheln\u00e9 pole , bratislava , slovakia", "2 - 1", "2 - 2", "2010 fifa world cup qualification"], ["14 november 2009", "teheln\u00e9 pole , bratislava , slovakia", "1 - 0", "1 - 0", "friendly match"], ["15 august 2012", "tre - for park , odense , denmark", "2 - 1", "3 - 1", "friendly match"], ["12 october 2012", "\u0161tadi\u00f3n pasienky , bratislava , slovakia", "1 - 0", "2 - 1", "2014 fifa world cup qualification"], ["10 september 2013", "\u0161tadi\u00f3n pod dub\u0148om , \u017eilina , slovakia", "1 - 0", "1 - 2", "2014 fifa world cup qualification"]], "query": "less { hop { filter_eq { all_rows ; date ; 13 october 2007 } ; date } ; hop { filter_eq { all_rows ; date ; 21 november 2007 } ; date } } = true", "question": "the competition where the result was 7-0 took place the month before the competition where the result was 5-0 ."}, {"topic": "manila", "wiki": "https://en.wikipedia.org/wiki/Manila", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-184334-2.html.csv", "action": "superlative", "sent": "manila 's sampaloc has the largest area out of all districts at 513.71 .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "9", "value_mentioned": "yes", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "max", "args": ["all_rows", "population ( 2010 census )"], "result": "241528", "ind": 0, "tostr": "max { all_rows ; population ( 2010 census ) }", "tointer": "the maximum population ( 2010 census ) record of all rows is 241528 ."}, "241528"], "result": true, "ind": 1, "tostr": "eq { max { all_rows ; population ( 2010 census ) } ; 241528 }", "tointer": "the maximum population ( 2010 census ) record of all rows is 241528 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "population ( 2010 census )"], "result": null, "ind": 2, "tostr": "argmax { all_rows ; population ( 2010 census ) }"}, "district"], "result": "sampaloc", "ind": 3, "tostr": "hop { argmax { all_rows ; population ( 2010 census ) } ; district }"}, "sampaloc"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; population ( 2010 census ) } ; district } ; sampaloc }", "tointer": "the district record of the row with superlative population ( 2010 census ) record is sampaloc ."}], "result": true, "ind": 5, "tostr": "and { eq { max { all_rows ; population ( 2010 census ) } ; 241528 } ; eq { hop { argmax { all_rows ; population ( 2010 census ) } ; district } ; sampaloc } } = true", "tointer": "the maximum population ( 2010 census ) record of all rows is 241528 . the district record of the row with superlative population ( 2010 census ) record is sampaloc ."}, "logic_str": "and { eq { max { all_rows ; population ( 2010 census ) } ; 241528 } ; eq { hop { argmax { all_rows ; population ( 2010 census ) } ; district } ; sampaloc } } = true", "interpret": "the maximum population ( 2010 census ) record of all rows is 241528 . the district record of the row with superlative population ( 2010 census ) record is sampaloc .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "max_0": 0, "all_rows_7": 7, "population (2010 census)_8": 8, "241528_9": 9, "str_eq_4": 4, "str_hop_3": 3, "argmax_2": 2, "all_rows_10": 10, "population (2010 census)_11": 11, "district_12": 12, "sampaloc_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "max_0": "max", "all_rows_7": "all_rows", "population (2010 census)_8": "population ( 2010 census )", "241528_9": "241528", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "argmax_2": "argmax", "all_rows_10": "all_rows", "population (2010 census)_11": "population ( 2010 census )", "district_12": "district", "sampaloc_13": "sampaloc"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "max_0": [1], "all_rows_7": [0], "population (2010 census)_8": [0], "241528_9": [1], "str_eq_4": [5], "str_hop_3": [4], "argmax_2": [3], "all_rows_10": [2], "population (2010 census)_11": [2], "district_12": [3], "sampaloc_13": [4]}, "table_header": ["district", "s barangay", "population ( 2010 census )", "area ( has )", "pop density ( per km2 )"], "table_cont": [["binondo", "10", "12985", "66.11", "19641.5"], ["ermita", "13", "7143", "158.91", "4495.0"], ["intramuros", "5", "4925", "67.26", "7322.3"], ["malate", "57", "77513", "259.58", "29860.9"], ["paco", "43", "70978", "278.69", "25468.4"], ["pandacan", "38", "73895", "166.00", "44515.1"], ["port area", "5", "57405", "315.28", "18207.6"], ["quiapo", "16", "24886", "84.69", "29384.8"], ["sampaloc", "192", "241528", "513.71", "47016.4"], ["san andr\u00e3s", "65", "115942", "168.02", "69004.9"], ["san miguel", "12", "15992", "91.37", "17502.5"], ["san nicolas", "15", "44241", "163.85", "27000.9"], ["santa ana", "34", "60952", "169.42", "35976.9"], ["santa cruz", "82", "115747", "309.01", "37457.4"], ["santa mesa", "51", "99933", "261.01", "38287.0"]], "query": "and { eq { max { all_rows ; population ( 2010 census ) } ; 241528 } ; eq { hop { argmax { all_rows ; population ( 2010 census ) } ; district } ; sampaloc } } = true", "question": "manila 's sampaloc has the largest area out of all districts at 513.71 ."}, {"topic": "list of schools in the southland region", "wiki": "https://en.wikipedia.org/wiki/List_of_schools_in_the_Southland_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12375672-2.html.csv", "action": "unique", "sent": "gore high school is the only school in the southland region that has 9-15 .", "annotation": {"scope": "all", "row": "2", "col": "2", "col_other": "1", "criterion": "equal", "value": "9 - 15", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "years", "9 - 15"], "result": null, "ind": 0, "tointer": "select the rows whose years record fuzzily matches to 9 - 15 .", "tostr": "filter_eq { all_rows ; years ; 9 - 15 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; years ; 9 - 15 } }", "tointer": "select the rows whose years record fuzzily matches to 9 - 15 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "years", "9 - 15"], "result": null, "ind": 0, "tointer": "select the rows whose years record fuzzily matches to 9 - 15 .", "tostr": "filter_eq { all_rows ; years ; 9 - 15 }"}, "name"], "result": "gore high school", "ind": 2, "tostr": "hop { filter_eq { all_rows ; years ; 9 - 15 } ; name }"}, "gore high school"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; years ; 9 - 15 } ; name } ; gore high school }", "tointer": "the name record of this unqiue row is gore high school ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; years ; 9 - 15 } } ; eq { hop { filter_eq { all_rows ; years ; 9 - 15 } ; name } ; gore high school } } = true", "tointer": "select the rows whose years record fuzzily matches to 9 - 15 . there is only one such row in the table . the name record of this unqiue row is gore high school ."}, "logic_str": "and { only { filter_eq { all_rows ; years ; 9 - 15 } } ; eq { hop { filter_eq { all_rows ; years ; 9 - 15 } ; name } ; gore high school } } = true", "interpret": "select the rows whose years record fuzzily matches to 9 - 15 . there is only one such row in the table . the name record of this unqiue row is gore high school .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "years_7": 7, "9 - 15_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "gore high school_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "years_7": "years", "9 - 15_8": "9 - 15", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "gore high school_10": "gore high school"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "years_7": [0], "9 - 15_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "gore high school_10": [3]}, "table_header": ["name", "years", "gender", "area", "authority", "decile", "roll"], "table_cont": [["east gore school", "1 - 6", "coed", "gore", "state", "3", "102"], ["gore high school", "9 - 15", "coed", "gore", "state", "6", "653"], ["gore main school", "1 - 6", "coed", "gore", "state", "6", "209"], ["knapdale school", "1 - 8", "coed", "knapdale", "state", "7", "37"], ["longford intermediate", "7 - 8", "coed", "gore", "state", "5", "250"], ["mataura school", "1 - 6", "coed", "mataura", "state", "1", "96"], ["otama school", "1 - 8", "coed", "otama", "state", "9", "29"], ["pukerau school", "1 - 6", "coed", "pukerau", "state", "8", "45"], ["st mary 's school", "1 - 6", "coed", "gore", "state integrated", "7", "182"], ["st peter 's college", "7 - 15", "coed", "gore", "state integrated", "8", "414"], ["waikaka school", "1 - 8", "coed", "waikaka", "state", "8", "39"], ["west gore school", "1 - 6", "coed", "gore", "state", "6", "241"], ["willowbank school", "1 - 6", "coed", "maitland", "state", "8", "9"]], "query": "and { only { filter_eq { all_rows ; years ; 9 - 15 } } ; eq { hop { filter_eq { all_rows ; years ; 9 - 15 } ; name } ; gore high school } } = true", "question": "gore high school is the only school in the southland region that has 9-15 ."}, {"topic": "1979 - 80 philadelphia flyers season", "wiki": "https://en.wikipedia.org/wiki/1979%E2%80%9380_Philadelphia_Flyers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14208862-7.html.csv", "action": "majority", "sent": "the majority of games had an attendance over 15000 .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than", "value": "15000", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "attendance", "15000"], "result": true, "ind": 0, "tointer": "for the attendance records of all rows , most of them are greater than 15000 .", "tostr": "most_greater { all_rows ; attendance ; 15000 } = true"}, "logic_str": "most_greater { all_rows ; attendance ; 15000 } = true", "interpret": "for the attendance records of all rows , most of them are greater than 15000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "attendance_3": 3, "15000_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "attendance_3": "attendance", "15000_4": "15000"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "attendance_3": [0], "15000_4": [0]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["march 1", "philadelphia", "3 - 3", "toronto", "myre", "16485", "41 - 5 - 15"], ["march 2", "montreal", "5 - 1", "philadelphia", "peeters", "17077", "41 - 6 - 15"], ["march 4", "colorado", "1 - 4", "philadelphia", "peeters", "17007", "42 - 6 - 15"], ["march 6", "ny islanders", "5 - 2", "philadelphia", "myre", "17077", "42 - 7 - 15"], ["march 8", "philadelphia", "6 - 2", "minnesota", "peeters", "15701", "43 - 7 - 15"], ["march 9", "edmonton", "3 - 5", "philadelphia", "myre", "17077", "44 - 7 - 15"], ["march 11", "philadelphia", "4 - 3", "pittsburgh", "peeters", "9972", "45 - 7 - 15"], ["march 12", "philadelphia", "6 - 6", "chicago", "myre", "17306", "45 - 7 - 16"], ["march 15", "philadelphia", "3 - 4", "atlanta", "peeters", "15156", "45 - 8 - 16"], ["march 16", "colorado", "4 - 4", "philadelphia", "myre", "17077", "45 - 8 - 17"], ["march 20", "toronto", "3 - 0", "philadelphia", "peeters", "17077", "45 - 9 - 17"], ["march 21", "philadelphia", "5 - 5", "hartford", "myre", "14460", "45 - 9 - 18"], ["march 23", "philadelphia", "2 - 7", "boston", "peeters", "14673", "45 - 10 - 18"], ["march 25", "philadelphia", "2 - 5", "ny islanders", "myre", "14995", "45 - 11 - 18"], ["march 27", "quebec", "2 - 5", "philadelphia", "peeters", "17077", "46 - 11 - 18"], ["march 29", "philadelphia", "3 - 3", "washington", "myre", "18130", "46 - 11 - 19"], ["march 30", "atlanta", "2 - 4", "philadelphia", "peeters", "17077", "47 - 11 - 19"]], "query": "most_greater { all_rows ; attendance ; 15000 } = true", "question": "the majority of games had an attendance over 15000 ."}, {"topic": "1969 player 's county league", "wiki": "https://en.wikipedia.org/wiki/1969_Player%27s_County_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28797906-3.html.csv", "action": "aggregation", "sent": "the average balls across all 6 players is around 670 .", "annotation": {"scope": "all", "col": "3", "type": "average", "result": "670", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "balls"], "result": "670", "ind": 0, "tostr": "avg { all_rows ; balls }"}, "670"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; balls } ; 670 } = true", "tointer": "the average of the balls record of all rows is 670 ."}, "logic_str": "round_eq { avg { all_rows ; balls } ; 670 } = true", "interpret": "the average of the balls record of all rows is 670 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "balls_4": 4, "670_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "balls_4": "balls", "670_5": "670"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "balls_4": [0], "670_5": [1]}, "table_header": ["player", "county", "balls", "wickets", "average", "economy", "bbi", "4wi", "5wi"], "table_cont": [["keith boyce", "essex", "708", "26", "12.00", "2.54", "3 / 15", "0", "0"], ["peter sainsbury", "hampshire", "644", "28", "13.96", "3.64", "4 / 23", "2", "0"], ["stuart turner", "essex", "639", "27", "14.85", "3.76", "4 / 14", "1", "0"], ["ken higgs", "lancashire", "673", "26", "15.23", "3.53", "4 / 22", "1", "0"], ["ray east", "essex", "660", "29", "15.24", "4.01", "6 / 18", "0", "2"], ["butch white", "hampshire", "698", "26", "17.92", "4.00", "5 / 31", "1", "1"]], "query": "round_eq { avg { all_rows ; balls } ; 670 } = true", "question": "the average balls across all 6 players is around 670 ."}, {"topic": "c\u00e9sar cielo", "wiki": "https://en.wikipedia.org/wiki/C%C3%A9sar_Cielo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12627202-2.html.csv", "action": "unique", "sent": "c\u00e9sar cielo participated in only a single medley distance event .", "annotation": {"scope": "all", "row": "5", "col": "1", "col_other": "n/a", "criterion": "fuzzily_match", "value": "medley", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "event", "medley"], "result": null, "ind": 0, "tointer": "select the rows whose event record fuzzily matches to medley .", "tostr": "filter_eq { all_rows ; event ; medley }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; event ; medley } } = true", "tointer": "select the rows whose event record fuzzily matches to medley . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; event ; medley } } = true", "interpret": "select the rows whose event record fuzzily matches to medley . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "event_4": 4, "medley_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "event_4": "event", "medley_5": "medley"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "event_4": [0], "medley_5": [0]}, "table_header": ["event", "time", "venue", "date", "notes"], "table_cont": [["50 m freestyle", "20.51", "dubai", "december 17 , 2010", "am"], ["100 m freestyle", "45.74", "dubai", "december 19 , 2010", "sa"], ["450 m freestyle", "1:25.28", "s\u00e3o paulo", "august 20 , 2012", "sa"], ["4100 m freestyle", "3:05.74", "dubai", "december 15 , 2010", "sa"], ["4100 m medley", "3:23.12", "dubai", "december 19 , 2010", "sa"], ["4200 m freestyle", "7:06.09", "shanghai", "april 6 , 2006", "sa"]], "query": "only { filter_eq { all_rows ; event ; medley } } = true", "question": "c\u00e9sar cielo participated in only a single medley distance event ."}, {"topic": "list of drake & josh episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Drake_%26_Josh_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2453243-3.html.csv", "action": "comparative", "sent": "the episode of smart girl aired before the episode number 1 fan .", "annotation": {"row_1": "6", "row_2": "10", "col": "6", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "title", "smart girl"], "result": null, "ind": 0, "tointer": "select the rows whose title record fuzzily matches to smart girl .", "tostr": "filter_eq { all_rows ; title ; smart girl }"}, "original air date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; title ; smart girl } ; original air date }", "tointer": "select the rows whose title record fuzzily matches to smart girl . take the original air date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "title", "number 1 fan"], "result": null, "ind": 1, "tointer": "select the rows whose title record fuzzily matches to number 1 fan .", "tostr": "filter_eq { all_rows ; title ; number 1 fan }"}, "original air date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; title ; number 1 fan } ; original air date }", "tointer": "select the rows whose title record fuzzily matches to number 1 fan . take the original air date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; title ; smart girl } ; original air date } ; hop { filter_eq { all_rows ; title ; number 1 fan } ; original air date } } = true", "tointer": "select the rows whose title record fuzzily matches to smart girl . take the original air date record of this row . select the rows whose title record fuzzily matches to number 1 fan . take the original air date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; title ; smart girl } ; original air date } ; hop { filter_eq { all_rows ; title ; number 1 fan } ; original air date } } = true", "interpret": "select the rows whose title record fuzzily matches to smart girl . take the original air date record of this row . select the rows whose title record fuzzily matches to number 1 fan . take the original air date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "title_7": 7, "smart girl_8": 8, "original air date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "title_11": 11, "number 1 fan_12": 12, "original air date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "title_7": "title", "smart girl_8": "smart girl", "original air date_9": "original air date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "title_11": "title", "number 1 fan_12": "number 1 fan", "original air date_13": "original air date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "title_7": [0], "smart girl_8": [0], "original air date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "title_11": [1], "number 1 fan_12": [1], "original air date_13": [3]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "original air date", "production code"], "table_cont": [["7", "1", "the bet", "steve hoefer", "george doty iv", "march 14 , 2004", "202"], ["8", "2", "guitar", "virgil fabian", "dan schneider", "march 21 , 2004", "201"], ["9", "3", "movie job", "virgil fabian", "dan schneider", "march 28 , 2004", "203"], ["10", "4", "football", "virgil fabian", "story by : barry o'brien teleplay by : dan schneider", "april 4 , 2004", "205"], ["11", "5", "pool shark", "steve hoefer", "anthony del broccolo", "april 18 , 2004", "204"], ["12", "6", "smart girl", "roger christiansen", "dan schneider", "april 25 , 2004", "207"], ["13", "7", "little diva", "virgil fabian", "eric friedman", "may 2 , 2004", "208"], ["14", "8", "blues brothers", "fred savage", "craig digregorio", "september 12 , 2004", "206"], ["15", "9", "driver 's license", "virgil fabian", "dan schneider", "september 12 , 2004", "209"], ["16", "10", "number 1 fan", "virgil fabian", "dan schneider", "september 19 , 2004", "211"], ["17", "11", "mean teacher", "steve hoefer", "george doty iv", "september 26 , 2004", "210"], ["18", "12", "the gary grill", "virgil fabian", "anthony del broccolo", "october 17 , 2004", "212"], ["19", "13", "drew & jerry", "steve hoefer", "dan schneider", "october 24 , 2004", "213"]], "query": "less { hop { filter_eq { all_rows ; title ; smart girl } ; original air date } ; hop { filter_eq { all_rows ; title ; number 1 fan } ; original air date } } = true", "question": "the episode of smart girl aired before the episode number 1 fan ."}, {"topic": "turkish cup", "wiki": "https://en.wikipedia.org/wiki/Turkish_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1859269-9.html.csv", "action": "aggregation", "sent": "the average number of goals per player in the turkish cup was 26.2 .", "annotation": {"scope": "all", "col": "3", "type": "average", "result": "26.2", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "goals"], "result": "26.2", "ind": 0, "tostr": "avg { all_rows ; goals }"}, "26.2"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; goals } ; 26.2 } = true", "tointer": "the average of the goals record of all rows is 26.2 ."}, "logic_str": "round_eq { avg { all_rows ; goals } ; 26.2 } = true", "interpret": "the average of the goals record of all rows is 26.2 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "goals_4": 4, "26.2_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "goals_4": "goals", "26.2_5": "26.2"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "goals_4": [0], "26.2_5": [1]}, "table_header": ["rank", "player", "goals", "apps", "rate"], "table_cont": [["1", "hami mand\u0131ral\u0131", "31", "54", "0.57"], ["2", "cemil turan", "30", "55", "0.55"], ["2", "fevzi zemzem", "30", "40", "0.75"], ["4", "tanju \u00e7olak", "26", "39", "0.67"], ["5", "\u00fcmit karan", "25", "43", "0.58"], ["5", "hakan \u015f\u00fck\u00fcr", "25", "68", "0.37"], ["7", "ertu\u011frul sa\u011flam", "24", "42", "0.57"], ["8", "bob\u00f4", "24", "38", "0.63"], ["9", "mustafa denizli", "24", "68", "0.35"], ["10", "mehmet y\u0131lmaz", "23", "34", "0.68"]], "query": "round_eq { avg { all_rows ; goals } ; 26.2 } = true", "question": "the average number of goals per player in the turkish cup was 26.2 ."}, {"topic": "united states house of representatives elections , 1994", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1994", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341522-41.html.csv", "action": "unique", "sent": "rick santorum is the only incumbent in the united states house of representatives elections of '94 that did not end up becoming reelected .", "annotation": {"scope": "all", "row": "7", "col": "5", "col_other": "2", "criterion": "not_equal", "value": "re - elected", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "status", "re - elected"], "result": null, "ind": 0, "tointer": "select the rows whose status record does not match to re - elected .", "tostr": "filter_not_eq { all_rows ; status ; re - elected }"}], "result": true, "ind": 1, "tostr": "only { filter_not_eq { all_rows ; status ; re - elected } }", "tointer": "select the rows whose status record does not match to re - elected . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "status", "re - elected"], "result": null, "ind": 0, "tointer": "select the rows whose status record does not match to re - elected .", "tostr": "filter_not_eq { all_rows ; status ; re - elected }"}, "incumbent"], "result": "rick santorum", "ind": 2, "tostr": "hop { filter_not_eq { all_rows ; status ; re - elected } ; incumbent }"}, "rick santorum"], "result": true, "ind": 3, "tostr": "eq { hop { filter_not_eq { all_rows ; status ; re - elected } ; incumbent } ; rick santorum }", "tointer": "the incumbent record of this unqiue row is rick santorum ."}], "result": true, "ind": 4, "tostr": "and { only { filter_not_eq { all_rows ; status ; re - elected } } ; eq { hop { filter_not_eq { all_rows ; status ; re - elected } ; incumbent } ; rick santorum } } = true", "tointer": "select the rows whose status record does not match to re - elected . there is only one such row in the table . the incumbent record of this unqiue row is rick santorum ."}, "logic_str": "and { only { filter_not_eq { all_rows ; status ; re - elected } } ; eq { hop { filter_not_eq { all_rows ; status ; re - elected } ; incumbent } ; rick santorum } } = true", "interpret": "select the rows whose status record does not match to re - elected . there is only one such row in the table . the incumbent record of this unqiue row is rick santorum .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_not_eq_0": 0, "all_rows_6": 6, "status_7": 7, "re - elected_8": 8, "str_eq_3": 3, "str_hop_2": 2, "incumbent_9": 9, "rick santorum_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_not_eq_0": "filter_str_not_eq", "all_rows_6": "all_rows", "status_7": "status", "re - elected_8": "re - elected", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "incumbent_9": "incumbent", "rick santorum_10": "rick santorum"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_not_eq_0": [1, 2], "all_rows_6": [0], "status_7": [0], "re - elected_8": [0], "str_eq_3": [4], "str_hop_2": [3], "incumbent_9": [2], "rick santorum_10": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "status", "opponent"], "table_cont": [["pennsylvania4", "ron klink", "democratic", "1992", "re - elected", "ron klink ( d ) 64.2 % ed peglow ( r ) 35.8 %"], ["pennsylvania5", "william f clinger , jr", "republican", "1978", "re - elected", "william f clinger , jr ( r ) unopposed"], ["pennsylvania7", "curt weldon", "republican", "1986", "re - elected", "curt weldon ( r ) 69.7 % sara r nichols ( d ) 30.3 %"], ["pennsylvania9", "bud shuster", "republican", "1972", "re - elected", "bud shuster ( r ) unopposed"], ["pennsylvania12", "john murtha", "democratic", "1974", "re - elected", "john murtha ( d ) 68.9 % bill choby ( r ) 31.1 %"], ["pennsylvania17", "george gekas", "republican", "1982", "re - elected", "george gekas ( r ) unopposed"], ["pennsylvania18", "rick santorum", "republican", "1990", "retired to run for us senate democratic gain", "michael f doyle ( d ) 54.8 % john mccarty ( r ) 45.2 %"], ["pennsylvania19", "william f goodling", "republican", "1974", "re - elected", "william f goodling ( r ) unopposed"]], "query": "and { only { filter_not_eq { all_rows ; status ; re - elected } } ; eq { hop { filter_not_eq { all_rows ; status ; re - elected } ; incumbent } ; rick santorum } } = true", "question": "rick santorum is the only incumbent in the united states house of representatives elections of '94 that did not end up becoming reelected ."}, {"topic": "marsel ilhan", "wiki": "https://en.wikipedia.org/wiki/Marsel_%C4%B0lhan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17922810-2.html.csv", "action": "comparative", "sent": "marsel ilhan played in the israel open tournament earlier than he did in the president 's cup tennis tournament .", "annotation": {"row_1": "2", "row_2": "8", "col": "2", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "israel open"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to israel open .", "tostr": "filter_eq { all_rows ; tournament ; israel open }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; israel open } ; date }", "tointer": "select the rows whose tournament record fuzzily matches to israel open . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "president 's cup ( tennis )"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to president 's cup ( tennis ) .", "tostr": "filter_eq { all_rows ; tournament ; president 's cup ( tennis ) }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; tournament ; president 's cup ( tennis ) } ; date }", "tointer": "select the rows whose tournament record fuzzily matches to president 's cup ( tennis ) . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; tournament ; israel open } ; date } ; hop { filter_eq { all_rows ; tournament ; president 's cup ( tennis ) } ; date } } = true", "tointer": "select the rows whose tournament record fuzzily matches to israel open . take the date record of this row . select the rows whose tournament record fuzzily matches to president 's cup ( tennis ) . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; tournament ; israel open } ; date } ; hop { filter_eq { all_rows ; tournament ; president 's cup ( tennis ) } ; date } } = true", "interpret": "select the rows whose tournament record fuzzily matches to israel open . take the date record of this row . select the rows whose tournament record fuzzily matches to president 's cup ( tennis ) . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "tournament_7": 7, "israel open_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "tournament_11": 11, "president 's cup (tennis)_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "tournament_7": "tournament", "israel open_8": "israel open", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "tournament_11": "tournament", "president 's cup (tennis)_12": "president 's cup ( tennis )", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "tournament_7": [0], "israel open_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "tournament_11": [1], "president 's cup (tennis)_12": [1], "date_13": [3]}, "table_header": ["outcome", "date", "tournament", "surface", "opponent", "score"], "table_cont": [["runner - up", "august 20 , 2007", "karshi", "hard", "denis istomin", "1 - 6 , 4 - 6"], ["winner", "july 13 , 2008", "israel open", "hard", "ivo klec", "6 - 4 , 6 - 4"], ["runner - up", "may 17 , 2009", "izmir cup", "hard", "andrea stoppini", "6 - 7 , 2 - 6"], ["winner", "september 20 , 2010", "banja luka", "clay", "pere riba", "6 - 0 , 7 - 6 ( 7 - 4 )"], ["runner - up", "september 26 , 2010", "izmir cup", "hard", "somdev devvarman", "4 - 6 , 3 - 6"], ["runner - up", "july 10 , 2011", "scheveningen", "clay", "steve darcis", "3 - 6 , 6 - 4 , 2 - 6"], ["runner - up", "september 25 , 2011", "izmir cup", "hard", "luk\u00e1\u0161 lacko", "4 - 6 , 3 - 6"], ["runner - up", "july 29 , 2012", "president 's cup ( tennis )", "hard", "evgeny donskoy", "3 - 6 , 4 - 6"]], "query": "less { hop { filter_eq { all_rows ; tournament ; israel open } ; date } ; hop { filter_eq { all_rows ; tournament ; president 's cup ( tennis ) } ; date } } = true", "question": "marsel ilhan played in the israel open tournament earlier than he did in the president 's cup tennis tournament ."}, {"topic": "government of hamburg", "wiki": "https://en.wikipedia.org/wiki/Government_of_Hamburg", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17159413-1.html.csv", "action": "comparative", "sent": "alliance '90 / the greens has a higher vote proportion than the free democratic party in the 2011 government of hamburg .", "annotation": {"row_1": "3", "row_2": "4", "col": "6", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name ( english )", "alliance '90 / the greens"], "result": null, "ind": 0, "tointer": "select the rows whose name ( english ) record fuzzily matches to alliance '90 / the greens .", "tostr": "filter_eq { all_rows ; name ( english ) ; alliance '90 / the greens }"}, "votes ( 2011 )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ( english ) ; alliance '90 / the greens } ; votes ( 2011 ) }", "tointer": "select the rows whose name ( english ) record fuzzily matches to alliance '90 / the greens . take the votes ( 2011 ) record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name ( english )", "free democratic party"], "result": null, "ind": 1, "tointer": "select the rows whose name ( english ) record fuzzily matches to free democratic party .", "tostr": "filter_eq { all_rows ; name ( english ) ; free democratic party }"}, "votes ( 2011 )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ( english ) ; free democratic party } ; votes ( 2011 ) }", "tointer": "select the rows whose name ( english ) record fuzzily matches to free democratic party . take the votes ( 2011 ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; name ( english ) ; alliance '90 / the greens } ; votes ( 2011 ) } ; hop { filter_eq { all_rows ; name ( english ) ; free democratic party } ; votes ( 2011 ) } } = true", "tointer": "select the rows whose name ( english ) record fuzzily matches to alliance '90 / the greens . take the votes ( 2011 ) record of this row . select the rows whose name ( english ) record fuzzily matches to free democratic party . take the votes ( 2011 ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; name ( english ) ; alliance '90 / the greens } ; votes ( 2011 ) } ; hop { filter_eq { all_rows ; name ( english ) ; free democratic party } ; votes ( 2011 ) } } = true", "interpret": "select the rows whose name ( english ) record fuzzily matches to alliance '90 / the greens . take the votes ( 2011 ) record of this row . select the rows whose name ( english ) record fuzzily matches to free democratic party . take the votes ( 2011 ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name (english)_7": 7, "alliance '90 / the greens_8": 8, "votes (2011)_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name (english)_11": 11, "free democratic party_12": 12, "votes (2011)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name (english)_7": "name ( english )", "alliance '90 / the greens_8": "alliance '90 / the greens", "votes (2011)_9": "votes ( 2011 )", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name (english)_11": "name ( english )", "free democratic party_12": "free democratic party", "votes (2011)_13": "votes ( 2011 )"}, "g_adj": {"greater_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name (english)_7": [0], "alliance '90 / the greens_8": [0], "votes (2011)_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name (english)_11": [1], "free democratic party_12": [1], "votes (2011)_13": [3]}, "table_header": ["name ( english )", "name ( german )", "abbr", "ideology", "position", "votes ( 2011 )", "seats in hamburgische b\u00fcrgerschaft"], "table_cont": [["social democratic party", "sozialdemokratische partei deutschlands", "spd", "social democracy", "centre - left", "48.4 %", "62"], ["christian democratic union", "christlich demokratische union", "cdu", "christian democracy", "centre - right", "21.9 %", "28"], ["alliance '90 / the greens", "b\u00fcndnis 90 / die gr\u00fcnen ( gal )", "b\u00fcndnis 90 / die gr\u00fcnen ( gal )", "green politics", "centre - left", "11.2 %", "14"], ["free democratic party", "freie demokratische partei", "fdp", "liberalism", "centre", "6.7 %", "9"], ["the left", "die linke", "die linke", "socialism eurocommunism", "left - wing", "6.4 %", "8"]], "query": "greater { hop { filter_eq { all_rows ; name ( english ) ; alliance '90 / the greens } ; votes ( 2011 ) } ; hop { filter_eq { all_rows ; name ( english ) ; free democratic party } ; votes ( 2011 ) } } = true", "question": "alliance '90 / the greens has a higher vote proportion than the free democratic party in the 2011 government of hamburg ."}, {"topic": "list of awards and nominations received by the x - files", "wiki": "https://en.wikipedia.org/wiki/List_of_awards_and_nominations_received_by_The_X-Files", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18552926-7.html.csv", "action": "majority", "sent": "three of the 5 wins on the list of awards and nominations received by the x-files were for best series - drama .", "annotation": {"scope": "subset", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "best series-drama", "subset": {"col": "2", "criterion": "equal", "value": "best series - drama"}}, "logic": {"func": "most_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "category", "best series - drama"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; category ; best series - drama }", "tointer": "select the rows whose category record fuzzily matches to best series - drama ."}, "recipients and nominees", "best series-drama"], "result": true, "ind": 1, "tointer": "select the rows whose category record fuzzily matches to best series - drama . for the recipients and nominees records of these rows , most of them fuzzily match to best series-drama .", "tostr": "most_eq { filter_eq { all_rows ; category ; best series - drama } ; recipients and nominees ; best series-drama } = true"}, "logic_str": "most_eq { filter_eq { all_rows ; category ; best series - drama } ; recipients and nominees ; best series-drama } = true", "interpret": "select the rows whose category record fuzzily matches to best series - drama . for the recipients and nominees records of these rows , most of them fuzzily match to best series-drama .", "num_func": 2, "nid": 2, "g_ids": {"most_str_eq_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "category_4": 4, "best series - drama_5": 5, "recipients and nominees_6": 6, "best series-drama_7": 7}, "g_ids_features": {"most_str_eq_1": "most_str_eq", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "category_4": "category", "best series - drama_5": "best series - drama", "recipients and nominees_6": "recipients and nominees", "best series-drama_7": "best series-drama"}, "g_adj": {"most_str_eq_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "category_4": [0], "best series - drama_5": [0], "recipients and nominees_6": [1], "best series-drama_7": [1]}, "table_header": ["year", "category", "recipients and nominees", "role / episode", "result"], "table_cont": [["1994", "best series - drama", "best series - drama", "best series - drama", "won"], ["1995", "best actor in leading role - drama series", "david duchovny", "fox mulder", "nominated"], ["1995", "best actress in a leading role - drama series", "gillian anderson", "dana scully", "nominated"], ["1996", "best actor in leading role - drama series", "david duchovny", "david duchovny", "won"], ["1996", "best actress in leading role - drama series", "gillian anderson", "gillian anderson", "won"], ["1996", "best series - drama", "best series - drama", "best series - drama", "won"], ["1997", "best actor in leading role - drama series", "david duchovny", "david duchovny", "nominated"], ["1997", "best actress in leading role - drama series", "gillian anderson", "gillian anderson", "nominated"], ["1997", "best series - drama", "best series - drama", "best series - drama", "won"], ["1998", "best actor in leading role - drama series", "david duchovny", "david duchovny", "nominated"], ["1998", "best actress in leading role - drama series", "gillian anderson", "gillian anderson", "nominated"], ["1998", "best series - drama", "best series - drama", "best series - drama", "nominated"]], "query": "most_eq { filter_eq { all_rows ; category ; best series - drama } ; recipients and nominees ; best series-drama } = true", "question": "three of the 5 wins on the list of awards and nominations received by the x-files were for best series - drama ."}, {"topic": "marc surer", "wiki": "https://en.wikipedia.org/wiki/Marc_Surer", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1226338-2.html.csv", "action": "aggregation", "sent": "marc surer scored a total of two points in the year of 1984 .", "annotation": {"scope": "subset", "col": "5", "type": "sum", "result": "2", "subset": {"col": "1", "criterion": "equal", "value": "1984"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_eq", "args": ["all_rows", "year", "1984"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; year ; 1984 }", "tointer": "select the rows whose year record is equal to 1984 ."}, "points"], "result": "2", "ind": 1, "tostr": "sum { filter_eq { all_rows ; year ; 1984 } ; points }"}, "2"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_eq { all_rows ; year ; 1984 } ; points } ; 2 } = true", "tointer": "select the rows whose year record is equal to 1984 . the sum of the points record of these rows is 2 ."}, "logic_str": "round_eq { sum { filter_eq { all_rows ; year ; 1984 } ; points } ; 2 } = true", "interpret": "select the rows whose year record is equal to 1984 . the sum of the points record of these rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "year_5": 5, "1984_6": 6, "points_7": 7, "2_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "year_5": "year", "1984_6": "1984", "points_7": "points", "2_8": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "year_5": [0], "1984_6": [0], "points_7": [1], "2_8": [2]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1979", "team ensign", "ensign n179", "cosworth v8", "0"], ["1980", "team ats", "ats d3", "cosworth v8", "0"], ["1980", "team ats", "ats d4", "cosworth v8", "0"], ["1981", "ensign racing", "ensign n180b", "cosworth v8", "4"], ["1981", "theodore racing team", "theodore ty01", "cosworth v8", "4"], ["1982", "arrows racing team", "arrows a4", "cosworth v8", "3"], ["1982", "arrows racing team", "arrows a5", "cosworth v8", "3"], ["1983", "arrows racing team", "arrows a6", "cosworth v8", "4"], ["1984", "barclay nordica arrows bmw", "arrows a6", "cosworth v8", "1"], ["1984", "barclay nordica arrows bmw", "arrows a7", "bmw str - 4 t / c", "1"], ["1985", "motor racing developments ltd", "brabham bt54", "bmw str - 4 t / c", "5"], ["1986", "barclay arrows bmw", "arrows a8", "bmw str - 4 t / c", "0"]], "query": "round_eq { sum { filter_eq { all_rows ; year ; 1984 } ; points } ; 2 } = true", "question": "marc surer scored a total of two points in the year of 1984 ."}, {"topic": "liberia", "wiki": "https://en.wikipedia.org/wiki/Liberia", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17791-1.html.csv", "action": "unique", "sent": "for liberia , and counties with a population of under 100000 , the only one created in 2000 was river gee .", "annotation": {"scope": "subset", "row": "14", "col": "6", "col_other": "2", "criterion": "equal", "value": "2000", "subset": {"col": "4", "criterion": "less_than", "value": "100000"}}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": [{"func": "filter_less", "args": ["all_rows", "population ( 2008 )", "100000"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; population ( 2008 ) ; 100000 }", "tointer": "select the rows whose population ( 2008 ) record is less than 100000 ."}, "created", "2000"], "result": null, "ind": 1, "tointer": "select the rows whose population ( 2008 ) record is less than 100000 . among these rows , select the rows whose created record is equal to 2000 .", "tostr": "filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 }"}], "result": true, "ind": 2, "tostr": "only { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } }", "tointer": "select the rows whose population ( 2008 ) record is less than 100000 . among these rows , select the rows whose created record is equal to 2000 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": [{"func": "filter_less", "args": ["all_rows", "population ( 2008 )", "100000"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; population ( 2008 ) ; 100000 }", "tointer": "select the rows whose population ( 2008 ) record is less than 100000 ."}, "created", "2000"], "result": null, "ind": 1, "tointer": "select the rows whose population ( 2008 ) record is less than 100000 . among these rows , select the rows whose created record is equal to 2000 .", "tostr": "filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 }"}, "county"], "result": "river gee", "ind": 3, "tostr": "hop { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } ; county }"}, "river gee"], "result": true, "ind": 4, "tostr": "eq { hop { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } ; county } ; river gee }", "tointer": "the county record of this unqiue row is river gee ."}], "result": true, "ind": 5, "tostr": "and { only { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } } ; eq { hop { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } ; county } ; river gee } } = true", "tointer": "select the rows whose population ( 2008 ) record is less than 100000 . among these rows , select the rows whose created record is equal to 2000 . there is only one such row in the table . the county record of this unqiue row is river gee ."}, "logic_str": "and { only { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } } ; eq { hop { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } ; county } ; river gee } } = true", "interpret": "select the rows whose population ( 2008 ) record is less than 100000 . among these rows , select the rows whose created record is equal to 2000 . there is only one such row in the table . the county record of this unqiue row is river gee .", "num_func": 8, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "only_2": 2, "filter_eq_1": 1, "filter_less_0": 0, "all_rows_7": 7, "population (2008)_8": 8, "100000_9": 9, "created_10": 10, "2000_11": 11, "str_eq_4": 4, "str_hop_3": 3, "county_12": 12, "river gee_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "only_2": "only", "filter_eq_1": "filter_eq", "filter_less_0": "filter_less", "all_rows_7": "all_rows", "population (2008)_8": "population ( 2008 )", "100000_9": "100000", "created_10": "created", "2000_11": "2000", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "county_12": "county", "river gee_13": "river gee"}, "g_adj": {"and_5": [6], "result_6": [], "only_2": [5], "filter_eq_1": [2, 3], "filter_less_0": [1], "all_rows_7": [0], "population (2008)_8": [0], "100000_9": [0], "created_10": [1], "2000_11": [1], "str_eq_4": [5], "str_hop_3": [4], "county_12": [3], "river gee_13": [4]}, "table_header": ["map", "county", "capital", "population ( 2008 )", "area", "created"], "table_cont": [["1", "bomi", "tubmanburg", "82036", "sqmi ( km2 )", "1984"], ["2", "bong", "gbarnga", "328919", "sqmi ( km2 )", "1964"], ["3", "gbarpolu", "bopulu", "83758", "sqmi ( km2 )", "2001"], ["4", "grand bassa", "buchanan", "224839", "sqmi ( km2 )", "1839"], ["5", "grand cape mount", "robertsport", "129055", "sqmi ( km2 )", "1844"], ["6", "grand gedeh", "zwedru", "126146", "sqmi ( km2 )", "1964"], ["7", "grand kru", "barclayville", "57106", "sqmi ( km2 )", "1984"], ["8", "lofa", "voinjama", "270114", "sqmi ( km2 )", "1964"], ["9", "margibi", "kakata", "199689", "sqmi ( km2 )", "1985"], ["10", "maryland", "harper", "136404", "sqmi ( km2 )", "1857"], ["11", "montserrado", "bensonville", "1144806", "sqmi ( km2 )", "1839"], ["12", "nimba", "sanniquellie", "468088", "sqmi ( km2 )", "1964"], ["13", "rivercess", "rivercess", "65862", "sqmi ( km2 )", "1985"], ["14", "river gee", "fish town", "67318", "sqmi ( km2 )", "2000"], ["15", "sinoe", "greenville", "104932", "sqmi ( km2 )", "1843"]], "query": "and { only { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } } ; eq { hop { filter_eq { filter_less { all_rows ; population ( 2008 ) ; 100000 } ; created ; 2000 } ; county } ; river gee } } = true", "question": "for liberia , and counties with a population of under 100000 , the only one created in 2000 was river gee ."}, {"topic": "abc saturday movie of the week", "wiki": "https://en.wikipedia.org/wiki/ABC_Saturday_Movie_of_the_Week", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22837363-1.html.csv", "action": "ordinal", "sent": "season 3 of the abc saturday movie of the week had the 3rd highest number of viewers .", "annotation": {"row": "3", "col": "8", "order": "3", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "viewers ( in millions )", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; viewers ( in millions ) ; 3 }"}, "season"], "result": "3", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; viewers ( in millions ) ; 3 } ; season }"}, "3"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; viewers ( in millions ) ; 3 } ; season } ; 3 } = true", "tointer": "select the row whose viewers ( in millions ) record of all rows is 3rd maximum . the season record of this row is 3 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; viewers ( in millions ) ; 3 } ; season } ; 3 } = true", "interpret": "select the row whose viewers ( in millions ) record of all rows is 3rd maximum . the season record of this row is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "viewers (in millions)_5": 5, "3_6": 6, "season_7": 7, "3_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "viewers (in millions)_5": "viewers ( in millions )", "3_6": "3", "season_7": "season", "3_8": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "viewers (in millions)_5": [0], "3_6": [0], "season_7": [1], "3_8": [2]}, "table_header": ["season", "episodes", "timeslot ( et )", "season premiere", "season finale", "tv season", "rank", "viewers ( in millions )"], "table_cont": [["1", "10", "saturday 8:00 pm", "february 21 , 2004", "august 14 , 2004", "2003 - 2004", "123", "6.21"], ["2", "17", "saturday 8:00 pm", "september 25 , 2004", "august 27 , 2005", "2004 - 2005", "107", "6.41"], ["3", "25", "saturday 8:00 pm", "september 17 , 2005", "august 12 , 2006", "2005 - 2006", "126", "5.74"], ["4", "25", "saturday 8:00 pm", "october 21 , 2006", "august 25 , 2007", "2006 - 2007", "180", "5.12"], ["5", "23", "saturday 8:00 pm", "december 8 , 2007", "august 23 , 2008", "2007 - 2008", "160", "4.69"], ["6", "21", "saturday 8:00 pm", "december 13 , 2008", "august 29 , 2009", "2008 - 2009", "149", "3.80"], ["7", "18", "saturday 8:00 pm", "december 12 , 2009", "august 28 , 2010", "2009 - 2010", "119", "3.55"], ["8", "22", "saturday 8:00 pm", "december 11 , 2010", "august 20 , 2011", "2010 - 2011", "170", "3.53"], ["9", "14", "saturday 8:00 pm", "december 24 , 2011", "august 18 , 2012", "2011 - 2012", "156", "3.46"]], "query": "eq { hop { nth_argmax { all_rows ; viewers ( in millions ) ; 3 } ; season } ; 3 } = true", "question": "season 3 of the abc saturday movie of the week had the 3rd highest number of viewers ."}, {"topic": "2008 - 09 manchester united f.c. season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Manchester_United_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17626681-10.html.csv", "action": "aggregation", "sent": "the 2008-2009 manchester united f.c. season had a total of 476,381 attendees .", "annotation": {"scope": "all", "col": "6", "type": "sum", "result": "476,381", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "attendance"], "result": "476,381", "ind": 0, "tostr": "sum { all_rows ; attendance }"}, "476,381"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; attendance } ; 476,381 } = true", "tointer": "the sum of the attendance record of all rows is 476,381 ."}, "logic_str": "round_eq { sum { all_rows ; attendance } ; 476,381 } = true", "interpret": "the sum of the attendance record of all rows is 476,381 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "attendance_4": 4, "476,381_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "attendance_4": "attendance", "476,381_5": "476,381"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "attendance_4": [0], "476,381_5": [1]}, "table_header": ["date", "round", "opponents", "h / a", "result f - a", "attendance"], "table_cont": [["24 february 2009", "first knockout round first leg", "internazionale", "a", "0 - 0", "80018"], ["11 march 2009", "first knockout round second leg", "internazionale", "h", "2 - 0", "74769"], ["7 april 2009", "quarter - final first leg", "porto", "h", "2 - 2", "74517"], ["15 april 2009", "quarter - final second leg", "porto", "a", "1 - 0", "50010"], ["29 april 2009", "semi - final first leg", "arsenal", "h", "1 - 0", "74733"], ["5 may 2009", "semi - final second leg", "arsenal", "a", "3 - 1", "59867"], ["27 may 2009", "final", "barcelona", "n", "0 - 2", "62467"]], "query": "round_eq { sum { all_rows ; attendance } ; 476,381 } = true", "question": "the 2008-2009 manchester united f.c. season had a total of 476,381 attendees ."}, {"topic": "1990 - 91 fa cup", "wiki": "https://en.wikipedia.org/wiki/1990%E2%80%9391_FA_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17751797-5.html.csv", "action": "majority", "sent": "most of the games in the 1990 - 91 fa cup competition were played in the month of february .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "fuzzily_match", "value": "02", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "date", "02"], "result": true, "ind": 0, "tointer": "for the date records of all rows , most of them fuzzily match to 02 .", "tostr": "most_eq { all_rows ; date ; 02 } = true"}, "logic_str": "most_eq { all_rows ; date ; 02 } = true", "interpret": "for the date records of all rows , most of them fuzzily match to 02 .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "02_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "02_4": "02"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "02_4": [0]}, "table_header": ["tie no", "home team", "score", "away team", "date"], "table_cont": [["1", "liverpool", "0 - 0", "everton", "17 / 02 / 1991"], ["replay", "everton", "4 - 4", "liverpool", "20 / 02 / 1991"], ["replay", "everton", "1 - 0", "liverpool", "27 / 02 / 1991"], ["2", "southampton", "1 - 1", "nottingham forest", "25 / 02 / 1991"], ["replay", "nottingham forest", "3 - 1", "southampton", "04 / 03 / 1991"], ["3", "notts county", "1 - 0", "manchester city", "16 / 02 / 1991"], ["4", "shrewsbury town", "0 - 1", "arsenal", "27 / 02 / 1991"], ["5", "portsmouth", "1 - 2", "tottenham hotspur", "16 / 02 / 1991"], ["6", "west ham united", "1 - 0", "crewe alexandra", "16 / 02 / 1991"], ["7", "norwich city", "2 - 1", "manchester united", "18 / 02 / 1991"], ["8", "cambridge united", "4 - 0", "sheffield wednesday", "16 / 02 / 1991"]], "query": "most_eq { all_rows ; date ; 02 } = true", "question": "most of the games in the 1990 - 91 fa cup competition were played in the month of february ."}, {"topic": "2007 - 08 kfc twenty20 big bash", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_KFC_Twenty20_Big_Bash", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12562212-5.html.csv", "action": "comparative", "sent": "in the 2007 - 08 kfc twenty20 big bash , shane watson 's score was one lower than david hussey 's score .", "annotation": {"row_1": "5", "row_2": "3", "col": "2", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "1", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "shane watson ( queensland )"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to shane watson ( queensland ) .", "tostr": "filter_eq { all_rows ; player ; shane watson ( queensland ) }"}, "score"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; shane watson ( queensland ) } ; score }", "tointer": "select the rows whose player record fuzzily matches to shane watson ( queensland ) . take the score record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "david hussey ( victoria )"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to david hussey ( victoria ) .", "tostr": "filter_eq { all_rows ; player ; david hussey ( victoria ) }"}, "score"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; david hussey ( victoria ) } ; score }", "tointer": "select the rows whose player record fuzzily matches to david hussey ( victoria ) . take the score record of this row ."}], "result": "-1", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; player ; shane watson ( queensland ) } ; score } ; hop { filter_eq { all_rows ; player ; david hussey ( victoria ) } ; score } }"}, "-1"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; player ; shane watson ( queensland ) } ; score } ; hop { filter_eq { all_rows ; player ; david hussey ( victoria ) } ; score } } ; -1 } = true", "tointer": "select the rows whose player record fuzzily matches to shane watson ( queensland ) . take the score record of this row . select the rows whose player record fuzzily matches to david hussey ( victoria ) . take the score record of this row . the second record is 1 larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; player ; shane watson ( queensland ) } ; score } ; hop { filter_eq { all_rows ; player ; david hussey ( victoria ) } ; score } } ; -1 } = true", "interpret": "select the rows whose player record fuzzily matches to shane watson ( queensland ) . take the score record of this row . select the rows whose player record fuzzily matches to david hussey ( victoria ) . take the score record of this row . the second record is 1 larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "player_8": 8, "shane watson (queensland)_9": 9, "score_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "player_12": 12, "david hussey (victoria)_13": 13, "score_14": 14, "-1_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "player_8": "player", "shane watson (queensland)_9": "shane watson ( queensland )", "score_10": "score", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "player_12": "player", "david hussey (victoria)_13": "david hussey ( victoria )", "score_14": "score", "-1_15": "-1"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "player_8": [0], "shane watson (queensland)_9": [0], "score_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "player_12": [1], "david hussey (victoria)_13": [1], "score_14": [3], "-1_15": [5]}, "table_header": ["player", "score", "balls", "opponent", "ground"], "table_cont": [["shaun marsh ( western australia )", "86", "55", "victoria", "waca ground"], ["luke pomersbach ( western australia )", "79", "45", "tasmania", "waca ground"], ["david hussey ( victoria )", "70", "40", "new south wales", "melbourne cricket ground"], ["shaun marsh ( western australia )", "70", "49", "queensland", "waca ground"], ["shane watson ( queensland )", "69", "32", "tasmania", "brisbane cricket ground"]], "query": "eq { diff { hop { filter_eq { all_rows ; player ; shane watson ( queensland ) } ; score } ; hop { filter_eq { all_rows ; player ; david hussey ( victoria ) } ; score } } ; -1 } = true", "question": "in the 2007 - 08 kfc twenty20 big bash , shane watson 's score was one lower than david hussey 's score ."}, {"topic": "dave stockton", "wiki": "https://en.wikipedia.org/wiki/Dave_Stockton", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1586876-6.html.csv", "action": "superlative", "sent": "the golf tournament that dave stockton played the most events in was the pga championship .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "4", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "events"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; events }"}, "tournament"], "result": "pga championship", "ind": 1, "tostr": "hop { argmax { all_rows ; events } ; tournament }"}, "pga championship"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; events } ; tournament } ; pga championship } = true", "tointer": "select the row whose events record of all rows is maximum . the tournament record of this row is pga championship ."}, "logic_str": "eq { hop { argmax { all_rows ; events } ; tournament } ; pga championship } = true", "interpret": "select the row whose events record of all rows is maximum . the tournament record of this row is pga championship .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "events_5": 5, "tournament_6": 6, "pga championship_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "events_5": "events", "tournament_6": "tournament", "pga championship_7": "pga championship"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "events_5": [0], "tournament_6": [1], "pga championship_7": [2]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "2", "4", "6", "12", "10"], ["us open", "0", "1", "2", "3", "16", "9"], ["the open championship", "0", "0", "0", "1", "2", "2"], ["pga championship", "2", "2", "2", "5", "24", "17"], ["totals", "2", "5", "8", "15", "54", "38"]], "query": "eq { hop { argmax { all_rows ; events } ; tournament } ; pga championship } = true", "question": "the golf tournament that dave stockton played the most events in was the pga championship ."}, {"topic": "superettan", "wiki": "https://en.wikipedia.org/wiki/Superettan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1560673-1.html.csv", "action": "superlative", "sent": "assyriska ff is the football club that has spent the highest number of seasons in the superettan league .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "number of seasons in superettan"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; number of seasons in superettan }"}, "club"], "result": "assyriska ff", "ind": 1, "tostr": "hop { argmax { all_rows ; number of seasons in superettan } ; club }"}, "assyriska ff"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; number of seasons in superettan } ; club } ; assyriska ff } = true", "tointer": "select the row whose number of seasons in superettan record of all rows is maximum . the club record of this row is assyriska ff ."}, "logic_str": "eq { hop { argmax { all_rows ; number of seasons in superettan } ; club } ; assyriska ff } = true", "interpret": "select the row whose number of seasons in superettan record of all rows is maximum . the club record of this row is assyriska ff .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "number of seasons in superettan_5": 5, "club_6": 6, "assyriska ff_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "number of seasons in superettan_5": "number of seasons in superettan", "club_6": "club", "assyriska ff_7": "assyriska ff"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "number of seasons in superettan_5": [0], "club_6": [1], "assyriska ff_7": [2]}, "table_header": ["club", "position in 2013", "first season", "first season of current spell", "number of seasons in superettan", "number of seasons in second tier"], "table_cont": [["assyriska ff", "8th", "2000", "2008", "12", "17"], ["degerfors if", "4th", "2005", "2010", "8", "35"], ["gais", "7th", "2001", "2013", "4", "29"], ["hammarby if", "5th", "2010", "2010", "4", "36.5"], ["husqvarna ff", "1st in div 1 s\u00f6dra", "2014", "2014", "0", "1"], ["j\u00f6nk\u00f6pings s\u00f6dra", "11th", "2006", "2006", "8", "35"], ["landskrona bois", "12th", "2000", "2006", "10", "51"], ["ljungskile sk", "9th", "2000", "2009", "9", "14"], ["ik sirius", "1st in div 1 norra", "2007", "2014", "3", "23"], ["syrianska fc", "16th in allsvenskan", "2009", "2014", "2", "2"], ["\u00e4ngelholms ff", "6th", "2002", "2008", "7", "11"], ["\u00f6sters if", "15th in allsvenskan", "2000", "2014", "9", "19"]], "query": "eq { hop { argmax { all_rows ; number of seasons in superettan } ; club } ; assyriska ff } = true", "question": "assyriska ff is the football club that has spent the highest number of seasons in the superettan league ."}, {"topic": "1982 detroit lions season", "wiki": "https://en.wikipedia.org/wiki/1982_Detroit_Lions_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18811930-2.html.csv", "action": "count", "sent": "the detroit lions won 4 games during the season 1982 season .", "annotation": {"scope": "all", "criterion": "equal", "value": "win", "result": "4", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "win"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to win .", "tostr": "filter_eq { all_rows ; result ; win }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; result ; win } }", "tointer": "select the rows whose result record fuzzily matches to win . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; result ; win } } ; 4 } = true", "tointer": "select the rows whose result record fuzzily matches to win . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; result ; win } } ; 4 } = true", "interpret": "select the rows whose result record fuzzily matches to win . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "result_5": 5, "win_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "result_5": "result", "win_6": "win", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "result_5": [0], "win_6": [0], "4_7": [2]}, "table_header": ["game", "date", "opponent", "result", "lions points", "opponents", "record", "streak", "attendance"], "table_cont": [["1", "sept 12", "chicago bears", "win", "17", "10", "1 - 0", "win 1", "71337"], ["2", "sept 19", "los angeles rams", "win", "19", "14", "2 - 0", "win 2", "59470"], ["player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games", "player strike cancels seven games"], ["3", "nov 21", "chicago bears", "loss", "17", "20", "2 - 1", "lose 1", "46783"], ["4", "nov 25", "new york giants", "loss", "6", "13", "2 - 2", "lose 2", "64348"], ["5", "dec 6", "new york jets", "loss", "13", "28", "2 - 3", "lose 3", "79361"], ["6", "dec 12", "green bay packers", "win", "30", "10", "3 - 3", "win 1", "51875"], ["7", "dec 19", "minnesota vikings", "loss", "31", "34", "3 - 4", "lose 1", "73058"], ["8", "dec 26", "tampa bay buccaneers", "loss", "21", "23", "3 - 5", "lose 2", "65997"], ["9", "jan 2", "green bay packers", "win", "27", "24", "4 - 5", "win 1", "64377"]], "query": "eq { count { filter_eq { all_rows ; result ; win } } ; 4 } = true", "question": "the detroit lions won 4 games during the season 1982 season ."}, {"topic": "1963 all - ireland senior hurling championship", "wiki": "https://en.wikipedia.org/wiki/1963_All-Ireland_Senior_Hurling_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18937160-2.html.csv", "action": "count", "sent": "there were 12 players competing at the 1963 all-ireland senior hurling championship .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "12", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "player"], "result": null, "ind": 0, "tointer": "select the rows whose player record is arbitrary .", "tostr": "filter_all { all_rows ; player }"}], "result": "12", "ind": 1, "tostr": "count { filter_all { all_rows ; player } }", "tointer": "select the rows whose player record is arbitrary . the number of such rows is 12 ."}, "12"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; player } } ; 12 } = true", "tointer": "select the rows whose player record is arbitrary . the number of such rows is 12 ."}, "logic_str": "eq { count { filter_all { all_rows ; player } } ; 12 } = true", "interpret": "select the rows whose player record is arbitrary . the number of such rows is 12 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "player_5": 5, "12_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "player_5": "player", "12_6": "12"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "player_5": [0], "12_6": [2]}, "table_header": ["rank", "player", "county", "tally", "total", "opposition"], "table_cont": [["1", "eddie keher", "kilkenny", "0 - 14", "14", "waterford"], ["2", "eddie keher", "kilkenny", "2 - 5", "11", "wexford"], ["3", "jimmy smyth", "clare", "1 - 7", "10", "cork"], ["4", "richard browne", "cork", "3 - 0", "9", "clare"], ["4", "se\u00e1n mcloughlin", "tipperary", "3 - 0", "9", "waterford"], ["4", "s\u00e9amus power", "waterford", "3 - 0", "9", "kilkenny"], ["4", "willie walsh", "carlow", "2 - 3", "9", "dublin"], ["8", "fran whelan", "dublin", "1 - 5", "8", "carlow"], ["8", "philly grimes", "waterford", "0 - 8", "8", "tipperary"], ["10", "tom walsh", "kilkenny", "2 - 1", "7", "waterford"], ["10", "mick kennedy", "dublin", "1 - 4", "7", "carlow"], ["10", "philly grimes", "waterford", "1 - 4", "7", "kilkenny"]], "query": "eq { count { filter_all { all_rows ; player } } ; 12 } = true", "question": "there were 12 players competing at the 1963 all-ireland senior hurling championship ."}, {"topic": "scandinavian family name etymology", "wiki": "https://en.wikipedia.org/wiki/Scandinavian_family_name_etymology", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16605179-1.html.csv", "action": "unique", "sent": "m\u00f8ller is the single scandinavian surname in denmark that is of an occupational type .", "annotation": {"scope": "all", "row": "20", "col": "5", "col_other": "2", "criterion": "equal", "value": "occupational", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "type", "occupational"], "result": null, "ind": 0, "tointer": "select the rows whose type record fuzzily matches to occupational .", "tostr": "filter_eq { all_rows ; type ; occupational }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; type ; occupational } }", "tointer": "select the rows whose type record fuzzily matches to occupational . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "type", "occupational"], "result": null, "ind": 0, "tointer": "select the rows whose type record fuzzily matches to occupational .", "tostr": "filter_eq { all_rows ; type ; occupational }"}, "surname"], "result": "m\u00f8ller", "ind": 2, "tostr": "hop { filter_eq { all_rows ; type ; occupational } ; surname }"}, "m\u00f8ller"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; type ; occupational } ; surname } ; m\u00f8ller }", "tointer": "the surname record of this unqiue row is m\u00f8ller ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; type ; occupational } } ; eq { hop { filter_eq { all_rows ; type ; occupational } ; surname } ; m\u00f8ller } } = true", "tointer": "select the rows whose type record fuzzily matches to occupational . there is only one such row in the table . the surname record of this unqiue row is m\u00f8ller ."}, "logic_str": "and { only { filter_eq { all_rows ; type ; occupational } } ; eq { hop { filter_eq { all_rows ; type ; occupational } ; surname } ; m\u00f8ller } } = true", "interpret": "select the rows whose type record fuzzily matches to occupational . there is only one such row in the table . the surname record of this unqiue row is m\u00f8ller .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "type_7": 7, "occupational_8": 8, "str_eq_3": 3, "str_hop_2": 2, "surname_9": 9, "m\u00f8ller_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "type_7": "type", "occupational_8": "occupational", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "surname_9": "surname", "m\u00f8ller_10": "m\u00f8ller"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "type_7": [0], "occupational_8": [0], "str_eq_3": [4], "str_hop_2": [3], "surname_9": [2], "m\u00f8ller_10": [3]}, "table_header": ["rank", "surname", "number of bearers 1971", "number of bearers 2009", "type", "etymology"], "table_cont": [["1", "jensen", "368.631", "278.782", "patronymic", "son of jens"], ["2", "nielsen", "349.126", "275.744", "patronymic", "son of niels"], ["3", "hansen", "297.937", "231.221", "patronymic", "son of hans"], ["4", "pedersen", "203.426", "173.639", "patronymic", "son of peder"], ["5", "andersen", "188.359", "165.871", "patronymic", "son of anders"], ["6", "christensen", "159.943", "125.192", "patronymic", "son of christen"], ["7", "larsen", "148.214", "122.712", "patronymic", "son of lars"], ["8", "s\u00f8rensen", "139.111", "117.300", "patronymic", "son of s\u00f8ren"], ["9", "rasmussen", "117.355", "99.238", "patronymic", "son of rasmus"], ["10", "j\u00f8rgensen", "110.132", "93.182", "patronymic", "son of j\u00f8rgen"], ["11", "petersen", "130.236", "85.268", "patronymic", "son of peter"], ["12", "madsen", "76.441", "67.075", "patronymic", "son of mads"], ["13", "kristensen", "58.990", "62.549", "patronymic", "son of kristen"], ["14", "olsen", "65.194", "50.904", "patronymic", "son of ole"], ["15", "thomsen", "40.180", "39.860", "patronymic", "son of thomas"], ["16", "christiansen", "45.984", "38.528", "patronymic", "son of christian"], ["17", "poulsen", "36.544", "33.106", "patronymic", "son of poul"], ["18", "johansen", "36.470", "32.166", "patronymic", "son of johan"], ["19", "knudsen", "34.660", "30.634", "patronymic", "son of knud"], ["20", "m\u00f8ller", "31.645", "30.516", "occupational", "miller"]], "query": "and { only { filter_eq { all_rows ; type ; occupational } } ; eq { hop { filter_eq { all_rows ; type ; occupational } ; surname } ; m\u00f8ller } } = true", "question": "m\u00f8ller is the single scandinavian surname in denmark that is of an occupational type ."}, {"topic": "u.s. cities with teams from four major league sports", "wiki": "https://en.wikipedia.org/wiki/U.S._cities_with_teams_from_four_major_league_sports", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1205598-1.html.csv", "action": "count", "sent": "there are two cities that have hosted four major league sports teams since 1993 .", "annotation": {"scope": "all", "criterion": "equal", "value": "1993", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "hosted 4 teams since", "1993"], "result": null, "ind": 0, "tointer": "select the rows whose hosted 4 teams since record is equal to 1993 .", "tostr": "filter_eq { all_rows ; hosted 4 teams since ; 1993 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; hosted 4 teams since ; 1993 } }", "tointer": "select the rows whose hosted 4 teams since record is equal to 1993 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; hosted 4 teams since ; 1993 } } ; 2 } = true", "tointer": "select the rows whose hosted 4 teams since record is equal to 1993 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; hosted 4 teams since ; 1993 } } ; 2 } = true", "interpret": "select the rows whose hosted 4 teams since record is equal to 1993 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "hosted 4 teams since_5": 5, "1993_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "hosted 4 teams since_5": "hosted 4 teams since", "1993_6": "1993", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "hosted 4 teams since_5": [0], "1993_6": [0], "2_7": [2]}, "table_header": ["metropolitan area", "media market ranking", "hosted 4 teams since", "nfl team ( s )", "mlb team ( s )", "nba team ( s )", "nhl team ( s )"], "table_cont": [["boston , massachusetts", "7", "1960", "patriots ( foxborough , ma )", "red sox", "celtics", "bruins"], ["chicago , illinois", "3", "1966", "bears", "cubs white sox", "bulls", "blackhawks"], ["dallas - fort worth , texas", "5", "1993", "cowboys ( arlington , tx )", "rangers ( arlington , tx )", "mavericks ( dallas )", "stars ( dallas )"], ["denver , colorado", "17", "1995", "broncos", "rockies", "nuggets", "avalanche"], ["detroit , michigan", "11", "1957", "lions", "tigers", "pistons ( auburn hills , mi )", "red wings"], ["miami , florida", "16", "1993", "dolphins ( miami gardens , fl )", "marlins", "heat", "panthers ( sunrise , fl )"], ["minneapolis - st paul , minnesota", "15", "2000", "vikings ( minneapolis )", "twins ( minneapolis )", "timberwolves ( minneapolis )", "wild ( st paul )"], ["philadelphia , pennsylvania", "4", "1967", "eagles", "phillies", "76ers", "flyers"], ["phoenix , arizona", "13", "1998", "cardinals ( glendale , az )", "diamondbacks", "suns", "coyotes ( glendale , az )"], ["san francisco bay area , california", "6", "1991", "49ers ( san francisco ) raiders ( oakland )", "giants ( san francisco ) athletics ( oakland )", "warriors ( oakland )", "sharks ( san jose )"]], "query": "eq { count { filter_eq { all_rows ; hosted 4 teams since ; 1993 } } ; 2 } = true", "question": "there are two cities that have hosted four major league sports teams since 1993 ."}, {"topic": "seattle supersonics all - time roster", "wiki": "https://en.wikipedia.org/wiki/Seattle_SuperSonics_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16772687-6.html.csv", "action": "unique", "sent": "reggie evans is the only player to have two jersey numbers from the seattle supersonics .", "annotation": {"scope": "all", "row": "5", "col": "3", "col_other": "1", "criterion": "equal", "value": ",", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "jersey number ( s )", ","], "result": null, "ind": 0, "tointer": "select the rows whose jersey number ( s ) record fuzzily matches to , .", "tostr": "filter_eq { all_rows ; jersey number ( s ) ; , }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; jersey number ( s ) ; , } }", "tointer": "select the rows whose jersey number ( s ) record fuzzily matches to , . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "jersey number ( s )", ","], "result": null, "ind": 0, "tointer": "select the rows whose jersey number ( s ) record fuzzily matches to , .", "tostr": "filter_eq { all_rows ; jersey number ( s ) ; , }"}, "player"], "result": "reggie evans", "ind": 2, "tostr": "hop { filter_eq { all_rows ; jersey number ( s ) ; , } ; player }"}, "reggie evans"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; jersey number ( s ) ; , } ; player } ; reggie evans }", "tointer": "the player record of this unqiue row is reggie evans ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; jersey number ( s ) ; , } } ; eq { hop { filter_eq { all_rows ; jersey number ( s ) ; , } ; player } ; reggie evans } } = true", "tointer": "select the rows whose jersey number ( s ) record fuzzily matches to , . there is only one such row in the table . the player record of this unqiue row is reggie evans ."}, "logic_str": "and { only { filter_eq { all_rows ; jersey number ( s ) ; , } } ; eq { hop { filter_eq { all_rows ; jersey number ( s ) ; , } ; player } ; reggie evans } } = true", "interpret": "select the rows whose jersey number ( s ) record fuzzily matches to , . there is only one such row in the table . the player record of this unqiue row is reggie evans .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "jersey number (s)_7": 7, ",_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "reggie evans_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "jersey number (s)_7": "jersey number ( s )", ",_8": ",", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "reggie evans_10": "reggie evans"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "jersey number (s)_7": [0], ",_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "reggie evans_10": [3]}, "table_header": ["player", "nationality", "jersey number ( s )", "position", "years", "from"], "table_cont": [["craig ehlo", "united states", "3", "sg", "1996 - 1997", "washington state"], ["dale ellis", "united states", "3", "sg / sf", "1986 - 1991 1997 - 1999", "tennessee"], ["pervis ellison", "united states", "29", "c", "2000", "louisville"], ["francisco elson", "netherlands", "16", "c", "2008", "california"], ["reggie evans", "united states", "34 , 30", "pf", "2002 - 2006", "iowa"], ["patrick ewing", "united states", "33", "center", "2000 - 2001", "georgetown"]], "query": "and { only { filter_eq { all_rows ; jersey number ( s ) ; , } } ; eq { hop { filter_eq { all_rows ; jersey number ( s ) ; , } ; player } ; reggie evans } } = true", "question": "reggie evans is the only player to have two jersey numbers from the seattle supersonics ."}, {"topic": "southeastern collegiate roller hockey league", "wiki": "https://en.wikipedia.org/wiki/Southeastern_Collegiate_Roller_Hockey_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11214772-2.html.csv", "action": "count", "sent": "in the southeastern collegiate roller hockey league , when the location is georgia , there were two times that the champion was emory .", "annotation": {"scope": "subset", "criterion": "equal", "value": "emory", "result": "2", "col": "2", "subset": {"col": "5", "criterion": "fuzzily_match", "value": "ga"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "location", "ga"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; location ; ga }", "tointer": "select the rows whose location record fuzzily matches to ga ."}, "champion", "emory"], "result": null, "ind": 1, "tointer": "select the rows whose location record fuzzily matches to ga . among these rows , select the rows whose champion record fuzzily matches to emory .", "tostr": "filter_eq { filter_eq { all_rows ; location ; ga } ; champion ; emory }"}], "result": "2", "ind": 2, "tostr": "count { filter_eq { filter_eq { all_rows ; location ; ga } ; champion ; emory } }", "tointer": "select the rows whose location record fuzzily matches to ga . among these rows , select the rows whose champion record fuzzily matches to emory . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_eq { all_rows ; location ; ga } ; champion ; emory } } ; 2 } = true", "tointer": "select the rows whose location record fuzzily matches to ga . among these rows , select the rows whose champion record fuzzily matches to emory . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { filter_eq { all_rows ; location ; ga } ; champion ; emory } } ; 2 } = true", "interpret": "select the rows whose location record fuzzily matches to ga . among these rows , select the rows whose champion record fuzzily matches to emory . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "location_6": 6, "ga_7": 7, "champion_8": 8, "emory_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "location_6": "location", "ga_7": "ga", "champion_8": "champion", "emory_9": "emory", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_eq_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "location_6": [0], "ga_7": [0], "champion_8": [1], "emory_9": [1], "2_10": [3]}, "table_header": ["year", "champion", "score", "runner - up", "location", "semi - finalist 1", "semi - finalist 2"], "table_cont": [["2004", "duke", "6 - 5", "elon", "morrisville , nc", "western carolina", "clemson"], ["2005", "elon", "12 - 1", "clemson", "morrisville , nc", "western carolina", "longwood"], ["2005", "miami", "6 - 5", "emory", "ellenton , fl", "embry - riddle", "north florida"], ["2006", "emory", "6 - 5 ot", "elon", "snellville , ga", "miami", "embry - riddle"], ["2007", "emory", "6 - 5 ot", "miami", "snellville , ga", "elon", "north carolina"], ["2008", "elon", "6 - 4", "tampa", "snellville , ga", "emory", "west carolina"]], "query": "eq { count { filter_eq { filter_eq { all_rows ; location ; ga } ; champion ; emory } } ; 2 } = true", "question": "in the southeastern collegiate roller hockey league , when the location is georgia , there were two times that the champion was emory ."}, {"topic": "united states house of representatives elections , 1990", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1990", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341568-24.html.csv", "action": "comparative", "sent": "incumbent bruce vento won against his opponent by .10 % more than gerry sikorski beat his opponent by in the 1990 united states house of representative elections .", "annotation": {"row_1": "4", "row_2": "5", "col": "6", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": ".10 %", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "bruce vento"], "result": null, "ind": 0, "tointer": "select the rows whose incumbent record fuzzily matches to bruce vento .", "tostr": "filter_eq { all_rows ; incumbent ; bruce vento }"}, "opponent"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; incumbent ; bruce vento } ; opponent }", "tointer": "select the rows whose incumbent record fuzzily matches to bruce vento . take the opponent record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "incumbent", "gerry sikorski"], "result": null, "ind": 1, "tointer": "select the rows whose incumbent record fuzzily matches to gerry sikorski .", "tostr": "filter_eq { all_rows ; incumbent ; gerry sikorski }"}, "opponent"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; incumbent ; gerry sikorski } ; opponent }", "tointer": "select the rows whose incumbent record fuzzily matches to gerry sikorski . take the opponent record of this row ."}], "result": ".10 %", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; incumbent ; bruce vento } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; gerry sikorski } ; opponent } }"}, ".10 %"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; incumbent ; bruce vento } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; gerry sikorski } ; opponent } } ; .10 % } = true", "tointer": "select the rows whose incumbent record fuzzily matches to bruce vento . take the opponent record of this row . select the rows whose incumbent record fuzzily matches to gerry sikorski . take the opponent record of this row . the first record is .10 % larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; incumbent ; bruce vento } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; gerry sikorski } ; opponent } } ; .10 % } = true", "interpret": "select the rows whose incumbent record fuzzily matches to bruce vento . take the opponent record of this row . select the rows whose incumbent record fuzzily matches to gerry sikorski . take the opponent record of this row . the first record is .10 % larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"str_eq_5": 5, "result_6": 6, "diff_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "incumbent_8": 8, "bruce vento_9": 9, "opponent_10": 10, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "incumbent_12": 12, "gerry sikorski_13": 13, "opponent_14": 14, ".10%_15": 15}, "g_ids_features": {"str_eq_5": "str_eq", "result_6": "true", "diff_4": "diff", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "incumbent_8": "incumbent", "bruce vento_9": "bruce vento", "opponent_10": "opponent", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "incumbent_12": "incumbent", "gerry sikorski_13": "gerry sikorski", "opponent_14": "opponent", ".10%_15": ".10 %"}, "g_adj": {"str_eq_5": [6], "result_6": [], "diff_4": [5], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "incumbent_8": [0], "bruce vento_9": [0], "opponent_10": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "incumbent_12": [1], "gerry sikorski_13": [1], "opponent_14": [3], ".10%_15": [5]}, "table_header": ["district", "incumbent", "party", "elected", "status", "opponent"], "table_cont": [["minnesota1", "tim penny", "democratic", "1982", "re - elected", "tim penny ( d ) 78.1 % doug andersen ( r ) 21.9 %"], ["minnesota2", "vin weber", "republican", "1980", "re - elected", "vin weber ( r ) 61.8 % jim stone ( d ) 38.1 %"], ["minnesota3", "bill frenzel", "republican", "1970", "retired republican hold", "jim ramstad ( r ) 66.9 % lou demars ( d ) 32.9 %"], ["minnesota4", "bruce vento", "democratic", "1976", "re - elected", "bruce vento ( d ) 64.7 % ian maitland ( r ) 35.1 %"], ["minnesota6", "gerry sikorski", "democratic", "1982", "re - elected", "gerry sikorski ( d ) 64.6 % bruce anderson ( r ) 35.3 %"]], "query": "eq { diff { hop { filter_eq { all_rows ; incumbent ; bruce vento } ; opponent } ; hop { filter_eq { all_rows ; incumbent ; gerry sikorski } ; opponent } } ; .10 % } = true", "question": "incumbent bruce vento won against his opponent by .10 % more than gerry sikorski beat his opponent by in the 1990 united states house of representative elections ."}, {"topic": "mandsaur ( lok sabha constituency )", "wiki": "https://en.wikipedia.org/wiki/Mandsaur_%28Lok_Sabha_constituency%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18518150-1.html.csv", "action": "unique", "sent": "the only district that had over 190,000 electorates was mandsaur .", "annotation": {"scope": "all", "row": "4", "col": "5", "col_other": "2", "criterion": "greater_than", "value": "190000", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "number of electorates ( 2009 )", "190000"], "result": null, "ind": 0, "tointer": "select the rows whose number of electorates ( 2009 ) record is greater than 190000 .", "tostr": "filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } }", "tointer": "select the rows whose number of electorates ( 2009 ) record is greater than 190000 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "number of electorates ( 2009 )", "190000"], "result": null, "ind": 0, "tointer": "select the rows whose number of electorates ( 2009 ) record is greater than 190000 .", "tostr": "filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 }"}, "name"], "result": "suwasra", "ind": 2, "tostr": "hop { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } ; name }"}, "suwasra"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } ; name } ; suwasra }", "tointer": "the name record of this unqiue row is suwasra ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } } ; eq { hop { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } ; name } ; suwasra } } = true", "tointer": "select the rows whose number of electorates ( 2009 ) record is greater than 190000 . there is only one such row in the table . the name record of this unqiue row is suwasra ."}, "logic_str": "and { only { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } } ; eq { hop { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } ; name } ; suwasra } } = true", "interpret": "select the rows whose number of electorates ( 2009 ) record is greater than 190000 . there is only one such row in the table . the name record of this unqiue row is suwasra .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "number of electorates (2009)_7": 7, "190000_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "suwasra_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "number of electorates (2009)_7": "number of electorates ( 2009 )", "190000_8": "190000", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "suwasra_10": "suwasra"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "number of electorates (2009)_7": [0], "190000_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "suwasra_10": [3]}, "table_header": ["constituency number", "name", "reserved for ( sc / st / none )", "district", "number of electorates ( 2009 )"], "table_cont": [["222", "jaora", "none", "ratlam", "165174"], ["224", "mandsour", "none", "mandsaur", "186581"], ["225", "malhargarh", "sc", "mandsaur", "183257"], ["226", "suwasra", "none", "mandsaur", "198249"], ["227", "garoth", "none", "mandsaur", "185692"], ["228", "manasa", "none", "neemuch", "147829"], ["229", "neemuch", "none", "neemuch", "167545"], ["230", "jawad", "none", "neemuch", "136640"], ["total :", "total :", "total :", "total :", "1370967"]], "query": "and { only { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } } ; eq { hop { filter_greater { all_rows ; number of electorates ( 2009 ) ; 190000 } ; name } ; suwasra } } = true", "question": "the only district that had over 190,000 electorates was mandsaur ."}, {"topic": "2008 manx grand prix", "wiki": "https://en.wikipedia.org/wiki/2008_Manx_Grand_Prix", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18649514-5.html.csv", "action": "majority", "sent": "the majority of the time the highest speed was over 93 mph .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "greater_than", "value": "93", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "speed", "93"], "result": true, "ind": 0, "tointer": "for the speed records of all rows , most of them are greater than 93 .", "tostr": "most_greater { all_rows ; speed ; 93 } = true"}, "logic_str": "most_greater { all_rows ; speed ; 93 } = true", "interpret": "for the speed records of all rows , most of them are greater than 93 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "speed_3": 3, "93_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "speed_3": "speed", "93_4": "93"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "speed_3": [0], "93_4": [0]}, "table_header": ["rank", "rider", "team", "speed", "time"], "table_cont": [["1", "roy richardson", "349cc honda", "99.814 mph", "1:08.02.42"], ["2", "paul coward", "348cc k4 honda", "98.136 mph", "1:09.12.26"], ["3", "ryan farquhar", "347cc honda", "97.873 mph", "1:09.23.39"], ["4", "rich hawkins", "348cc k4 honda", "97.743 mph", "1:09.29.85"], ["5", "wattie brown", "350cc honda", "94.349 mph", "1:11.58.88"], ["6", "john burrows", "350cc honda", "93.929 mph", "1:12.18.19"], ["7", "bob price", "350cc honda", "93.537 mph", "1:12.36.41"], ["8", "paul dobbs", "350cc aermacchi", "93.161 mph", "1:12.53.99"], ["9", "dave madsen - mygdal", "349cc honda", "92.922 mph", "1:13.05.25"], ["10", "alec whitwell", "349cc honda", "92.234 mph", "1:13.37.95"]], "query": "most_greater { all_rows ; speed ; 93 } = true", "question": "the majority of the time the highest speed was over 93 mph ."}, {"topic": "united states house of representatives elections , 1990", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1990", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341568-24.html.csv", "action": "unique", "sent": "district 3 was the only district in minnesota that had a retired republican hold status in the 1990 united states house of representative elections .", "annotation": {"scope": "all", "row": "3", "col": "5", "col_other": "1", "criterion": "equal", "value": "retired republican hold", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "status", "retired republican hold"], "result": null, "ind": 0, "tointer": "select the rows whose status record fuzzily matches to retired republican hold .", "tostr": "filter_eq { all_rows ; status ; retired republican hold }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; status ; retired republican hold } }", "tointer": "select the rows whose status record fuzzily matches to retired republican hold . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "status", "retired republican hold"], "result": null, "ind": 0, "tointer": "select the rows whose status record fuzzily matches to retired republican hold .", "tostr": "filter_eq { all_rows ; status ; retired republican hold }"}, "district"], "result": "minnesota3", "ind": 2, "tostr": "hop { filter_eq { all_rows ; status ; retired republican hold } ; district }"}, "minnesota3"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; status ; retired republican hold } ; district } ; minnesota3 }", "tointer": "the district record of this unqiue row is minnesota3 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; status ; retired republican hold } } ; eq { hop { filter_eq { all_rows ; status ; retired republican hold } ; district } ; minnesota3 } } = true", "tointer": "select the rows whose status record fuzzily matches to retired republican hold . there is only one such row in the table . the district record of this unqiue row is minnesota3 ."}, "logic_str": "and { only { filter_eq { all_rows ; status ; retired republican hold } } ; eq { hop { filter_eq { all_rows ; status ; retired republican hold } ; district } ; minnesota3 } } = true", "interpret": "select the rows whose status record fuzzily matches to retired republican hold . there is only one such row in the table . the district record of this unqiue row is minnesota3 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "status_7": 7, "retired republican hold_8": 8, "str_eq_3": 3, "str_hop_2": 2, "district_9": 9, "minnesota3_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "status_7": "status", "retired republican hold_8": "retired republican hold", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "district_9": "district", "minnesota3_10": "minnesota3"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "status_7": [0], "retired republican hold_8": [0], "str_eq_3": [4], "str_hop_2": [3], "district_9": [2], "minnesota3_10": [3]}, "table_header": ["district", "incumbent", "party", "elected", "status", "opponent"], "table_cont": [["minnesota1", "tim penny", "democratic", "1982", "re - elected", "tim penny ( d ) 78.1 % doug andersen ( r ) 21.9 %"], ["minnesota2", "vin weber", "republican", "1980", "re - elected", "vin weber ( r ) 61.8 % jim stone ( d ) 38.1 %"], ["minnesota3", "bill frenzel", "republican", "1970", "retired republican hold", "jim ramstad ( r ) 66.9 % lou demars ( d ) 32.9 %"], ["minnesota4", "bruce vento", "democratic", "1976", "re - elected", "bruce vento ( d ) 64.7 % ian maitland ( r ) 35.1 %"], ["minnesota6", "gerry sikorski", "democratic", "1982", "re - elected", "gerry sikorski ( d ) 64.6 % bruce anderson ( r ) 35.3 %"]], "query": "and { only { filter_eq { all_rows ; status ; retired republican hold } } ; eq { hop { filter_eq { all_rows ; status ; retired republican hold } ; district } ; minnesota3 } } = true", "question": "district 3 was the only district in minnesota that had a retired republican hold status in the 1990 united states house of representative elections ."}, {"topic": "laredo , texas", "wiki": "https://en.wikipedia.org/wiki/Laredo%2C_Texas", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-136773-10.html.csv", "action": "count", "sent": "a total of four radio channels in laredo , texas are licensed in the city of san antonio .", "annotation": {"scope": "all", "criterion": "equal", "value": "san antonio", "result": "4", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "city of license", "san antonio"], "result": null, "ind": 0, "tointer": "select the rows whose city of license record fuzzily matches to san antonio .", "tostr": "filter_eq { all_rows ; city of license ; san antonio }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; city of license ; san antonio } }", "tointer": "select the rows whose city of license record fuzzily matches to san antonio . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; city of license ; san antonio } } ; 4 } = true", "tointer": "select the rows whose city of license record fuzzily matches to san antonio . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; city of license ; san antonio } } ; 4 } = true", "interpret": "select the rows whose city of license record fuzzily matches to san antonio . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "city of license_5": 5, "san antonio_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "city of license_5": "city of license", "san antonio_6": "san antonio", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "city of license_5": [0], "san antonio_6": [0], "4_7": [2]}, "table_header": ["frequency", "callsign", "brand", "city of license", "website", "webcast"], "table_cont": [["680", "kkyx", "country legends 680", "san antonio", "kkyxcom", "listen live"], ["720", "ksah", "norte\u00f1o 720", "san antonio", "-", "-"], ["740", "ktrh", "newsradio 740 ktrh", "houston", "ktrhcom", "listen live"], ["760", "ktkr", "ticket 760 am", "san antonio", "ticket760.com", "listen live"], ["990", "xet", "la t grande", "monterrey", "-", "listen live"], ["1030", "kcta", "kcta 1030 am", "corpus christi", "kctaradiocom", "listen live"], ["1050", "xeg", "ranchera de monterrey", "monterrey", "rancherademonterreycom", "listen live"], ["1140", "xemr", "mr deportes", "monterrey", "-", "-"], ["1200", "woai", "news radio 1200", "san antonio", "radiowoaicom", "listen live"], ["1210", "kubr", "radio cristiana", "san juan", "-", "listen live"], ["1530", "kgbt", "la tremenda 1530", "harlingen", "latremenda1530.com", "-"]], "query": "eq { count { filter_eq { all_rows ; city of license ; san antonio } } ; 4 } = true", "question": "a total of four radio channels in laredo , texas are licensed in the city of san antonio ."}, {"topic": "indianapolis colts draft history", "wiki": "https://en.wikipedia.org/wiki/Indianapolis_Colts_draft_history", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13312898-46.html.csv", "action": "ordinal", "sent": "jerome pathon was the second highest overall drafted player by the indianapolis colts .", "annotation": {"row": "2", "col": "3", "order": "2", "col_other": "4", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "overall", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; overall ; 2 }"}, "name"], "result": "jerome pathon", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; overall ; 2 } ; name }"}, "jerome pathon"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; overall ; 2 } ; name } ; jerome pathon } = true", "tointer": "select the row whose overall record of all rows is 2nd minimum . the name record of this row is jerome pathon ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; overall ; 2 } ; name } ; jerome pathon } = true", "interpret": "select the row whose overall record of all rows is 2nd minimum . the name record of this row is jerome pathon .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "overall_5": 5, "2_6": 6, "name_7": 7, "jerome pathon_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "overall_5": "overall", "2_6": "2", "name_7": "name", "jerome pathon_8": "jerome pathon"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "overall_5": [0], "2_6": [0], "name_7": [1], "jerome pathon_8": [2]}, "table_header": ["round", "pick", "overall", "name", "position", "college"], "table_cont": [["1", "1", "1", "peyton manning", "quarterback", "tennessee"], ["2", "2", "32", "jerome pathon", "wide receiver", "washington"], ["3", "10", "71", "e g green", "wide receiver", "florida state"], ["4", "1", "93", "steve mckinney", "guard", "texas a & m"], ["5", "12", "135", "antony jordan", "linebacker", "vanderbilt"], ["7", "1", "190", "aaron taylor", "guard", "nebraska"], ["7", "42", "231", "corey gaines", "defensive back", "tennessee"]], "query": "eq { hop { nth_argmin { all_rows ; overall ; 2 } ; name } ; jerome pathon } = true", "question": "jerome pathon was the second highest overall drafted player by the indianapolis colts ."}, {"topic": "2007 - 08 los angeles kings season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Los_Angeles_Kings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11821711-13.html.csv", "action": "count", "sent": "five of the players had previously played for teams in the whl .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "whl", "result": "5", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college / junior / club team ( league )", "whl"], "result": null, "ind": 0, "tointer": "select the rows whose college / junior / club team ( league ) record fuzzily matches to whl .", "tostr": "filter_eq { all_rows ; college / junior / club team ( league ) ; whl }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; college / junior / club team ( league ) ; whl } }", "tointer": "select the rows whose college / junior / club team ( league ) record fuzzily matches to whl . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; college / junior / club team ( league ) ; whl } } ; 5 } = true", "tointer": "select the rows whose college / junior / club team ( league ) record fuzzily matches to whl . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; college / junior / club team ( league ) ; whl } } ; 5 } = true", "interpret": "select the rows whose college / junior / club team ( league ) record fuzzily matches to whl . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "college / junior / club team (league)_5": 5, "whl_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "college / junior / club team (league)_5": "college / junior / club team ( league )", "whl_6": "whl", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "college / junior / club team (league)_5": [0], "whl_6": [0], "5_7": [2]}, "table_header": ["round", "player", "nationality", "nhl team", "college / junior / club team ( league )"], "table_cont": [["1", "thomas hickey ( d )", "canada", "los angeles kings", "seattle thunderbirds ( whl )"], ["2", "oscar moller ( c )", "sweden", "los angeles kings", "chilliwack bruins ( whl )"], ["2", "wayne simmonds ( rw )", "canada", "los angeles kings", "owen sound attack ( whl )"], ["3", "bryan cameron ( c )", "canada", "los angeles kings", "belleville bulls ( ohl )"], ["4", "alec martinez ( d )", "united states", "los angeles kings", "miami university ( ncaa )"], ["4", "dwight king ( c )", "canada", "los angeles kings", "lethbridge hurricanes ( whl )"], ["5", "linden rowat ( g )", "canada", "los angeles kings", "regina pats ( whl )"], ["5", "joshua turnbull ( c )", "united states", "los angeles kings", "waterloo black hawks ( ushl )"], ["7", "josh kidd ( d )", "canada", "los angeles kings", "erie otters ( ohl )"], ["7", "matt fillier ( lw )", "canada", "los angeles kings", "st john 's fog devils ( qmjhl )"]], "query": "eq { count { filter_eq { all_rows ; college / junior / club team ( league ) ; whl } } ; 5 } = true", "question": "five of the players had previously played for teams in the whl ."}, {"topic": "2008 kentucky derby", "wiki": "https://en.wikipedia.org/wiki/2008_Kentucky_Derby", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17232312-2.html.csv", "action": "unique", "sent": "anak nakal was the only horse in the 2008 kentucky derby owned by four roses thoroughbreds llc .", "annotation": {"scope": "all", "row": "3", "col": "7", "col_other": "4", "criterion": "equal", "value": "four roses thoroughbreds llc", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "owner", "four roses thoroughbreds llc"], "result": null, "ind": 0, "tointer": "select the rows whose owner record fuzzily matches to four roses thoroughbreds llc .", "tostr": "filter_eq { all_rows ; owner ; four roses thoroughbreds llc }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } }", "tointer": "select the rows whose owner record fuzzily matches to four roses thoroughbreds llc . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "owner", "four roses thoroughbreds llc"], "result": null, "ind": 0, "tointer": "select the rows whose owner record fuzzily matches to four roses thoroughbreds llc .", "tostr": "filter_eq { all_rows ; owner ; four roses thoroughbreds llc }"}, "horse"], "result": "anak nakal", "ind": 2, "tostr": "hop { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } ; horse }"}, "anak nakal"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } ; horse } ; anak nakal }", "tointer": "the horse record of this unqiue row is anak nakal ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } } ; eq { hop { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } ; horse } ; anak nakal } } = true", "tointer": "select the rows whose owner record fuzzily matches to four roses thoroughbreds llc . there is only one such row in the table . the horse record of this unqiue row is anak nakal ."}, "logic_str": "and { only { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } } ; eq { hop { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } ; horse } ; anak nakal } } = true", "interpret": "select the rows whose owner record fuzzily matches to four roses thoroughbreds llc . there is only one such row in the table . the horse record of this unqiue row is anak nakal .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "owner_7": 7, "four roses thoroughbreds llc_8": 8, "str_eq_3": 3, "str_hop_2": 2, "horse_9": 9, "anak nakal_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "owner_7": "owner", "four roses thoroughbreds llc_8": "four roses thoroughbreds llc", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "horse_9": "horse", "anak nakal_10": "anak nakal"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "owner_7": [0], "four roses thoroughbreds llc_8": [0], "str_eq_3": [4], "str_hop_2": [3], "horse_9": [2], "anak nakal_10": [3]}, "table_header": ["finished", "time / behind", "post", "horse", "jockey", "trainer", "owner"], "table_cont": [["15", "31 \u00be", "1", "cool coal man", "julien leparoux", "nick zito", "robert v lapenta"], ["4", "11", "2", "tale of ekati", "eibar coa", "barclay tagg", "charles e fipke"], ["7", "15", "3", "anak nakal", "rafael bejarano", "nick zito", "four roses thoroughbreds llc"], ["13", "24 \u00bc", "4", "court vision", "garrett gomez", "william i mott", "ieah stables & winstar farm llc"], ["2", "04 \u00be", "5", "eight belles", "gabriel saez", "larry jones", "fox hill farms , inc"], ["10", "19 \u00bd", "6", "z fortune", "robby albarado", "steve asmussen", "zayat stables , llc"], ["18", "48 \u00be", "7", "big truck", "javier castellano", "barclay tagg", "eric fein"], ["12", "22 \u00be", "8", "visionaire", "jose lezcano", "michael matz", "team valor & vision racing llc"], ["8", "15", "9", "pyro", "shaun bridgmohan", "steve asmussen", "winchell thoroughbreds llc"], ["6", "14 \u00bc", "10", "colonel john", "corey nakatani", "eoin g harty", "winstar farm llc"], ["14", "24 \u00bd", "11", "z humor", "rene douglas", "william i mott", "zayat stables , llc"], ["11", "21", "12", "smooth air", "manoel cruz", "bennie stutts jr", "mount joy stables , inc"], ["16", "32", "13", "bob black jack", "richard migliore", "james kasparoff", "jeff harmon & tim kasparoff"], ["20", "59 \u00bc", "14", "monba", "ramon dominguez", "todd pletcher", "starlight , lucarelli & saylor"], ["19", "50 \u00be", "15", "adriano", "edgar prado", "graham motion", "courtlandt farms"], ["3", "08 \u00bc", "16", "denis of cork", "calvin borel", "david carroll", "mr & mrs william k warren jr"], ["9", "15 \u00be", "17", "cowboy cal", "john velazquez", "todd pletcher", "stonerside stable"], ["5", "11 \u00be", "18", "recapturetheglory", "e t baird", "louie j roussel iii", "louie j roussel iii & ronald lamarque"], ["17", "36 \u00be", "19", "gayego", "mike smith", "paulo lobo", "cubanacan stables"], ["1", "- 2:01.82", "20", "big brown", "kent desormeaux", "richard e dutrow , jr", "ieah stables & paul pompa jr"]], "query": "and { only { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } } ; eq { hop { filter_eq { all_rows ; owner ; four roses thoroughbreds llc } ; horse } ; anak nakal } } = true", "question": "anak nakal was the only horse in the 2008 kentucky derby owned by four roses thoroughbreds llc ."}, {"topic": "1956 vfl season", "wiki": "https://en.wikipedia.org/wiki/1956_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10640687-10.html.csv", "action": "aggregation", "sent": "average vfl match attendance on 16 june 1956 was 24,570 people .", "annotation": {"scope": "subset", "col": "6", "type": "average", "result": "24,570", "subset": {"col": "7", "criterion": "equal", "value": "16 june 1956"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "16 june 1956"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; 16 june 1956 }", "tointer": "select the rows whose date record fuzzily matches to 16 june 1956 ."}, "crowd"], "result": "24,570", "ind": 1, "tostr": "avg { filter_eq { all_rows ; date ; 16 june 1956 } ; crowd }"}, "24,570"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; date ; 16 june 1956 } ; crowd } ; 24,570 } = true", "tointer": "select the rows whose date record fuzzily matches to 16 june 1956 . the average of the crowd record of these rows is 24,570 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; date ; 16 june 1956 } ; crowd } ; 24,570 } = true", "interpret": "select the rows whose date record fuzzily matches to 16 june 1956 . the average of the crowd record of these rows is 24,570 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "16 june 1956_6": 6, "crowd_7": 7, "24,570_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "16 june 1956_6": "16 june 1956", "crowd_7": "crowd", "24,570_8": "24,570"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "16 june 1956_6": [0], "crowd_7": [1], "24,570_8": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["north melbourne", "10.13 ( 73 )", "richmond", "12.11 ( 83 )", "arden street oval", "11000", "16 june 1956"], ["footscray", "13.12 ( 90 )", "geelong", "10.8 ( 68 )", "western oval", "35909", "16 june 1956"], ["st kilda", "9.9 ( 63 )", "collingwood", "8.21 ( 69 )", "junction oval", "26800", "16 june 1956"], ["melbourne", "12.10 ( 82 )", "south melbourne", "8.11 ( 59 )", "mcg", "36361", "23 june 1956"], ["essendon", "12.20 ( 92 )", "hawthorn", "10.11 ( 71 )", "windy hill", "17000", "23 june 1956"], ["fitzroy", "7.11 ( 53 )", "carlton", "13.11 ( 89 )", "brunswick street oval", "27000", "23 june 1956"]], "query": "round_eq { avg { filter_eq { all_rows ; date ; 16 june 1956 } ; crowd } ; 24,570 } = true", "question": "average vfl match attendance on 16 june 1956 was 24,570 people ."}, {"topic": "2003 in paraguayan football", "wiki": "https://en.wikipedia.org/wiki/2003_in_Paraguayan_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14911550-1.html.csv", "action": "ordinal", "sent": "the cerro porte\u00f1o team recorded the 2nd highest number of wins in the 2003 paraguayan football season .", "annotation": {"row": "2", "col": "4", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "wins", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; wins ; 2 }"}, "team"], "result": "cerro porte\u00f1o", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; wins ; 2 } ; team }"}, "cerro porte\u00f1o"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; team } ; cerro porte\u00f1o } = true", "tointer": "select the row whose wins record of all rows is 2nd maximum . the team record of this row is cerro porte\u00f1o ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; team } ; cerro porte\u00f1o } = true", "interpret": "select the row whose wins record of all rows is 2nd maximum . the team record of this row is cerro porte\u00f1o .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "wins_5": 5, "2_6": 6, "team_7": 7, "cerro porte\u00f1o_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "wins_5": "wins", "2_6": "2", "team_7": "team", "cerro porte\u00f1o_8": "cerro porte\u00f1o"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "wins_5": [0], "2_6": [0], "team_7": [1], "cerro porte\u00f1o_8": [2]}, "table_header": ["position", "team", "played", "wins", "draws", "losses", "scored", "conceded", "points"], "table_cont": [["1", "libertad", "9", "6", "3", "0", "13", "3", "21"], ["2", "cerro porte\u00f1o", "9", "5", "3", "1", "20", "8", "18"], ["3", "olimpia", "9", "4", "4", "1", "16", "11", "16"], ["4", "sol de am\u00e9rica", "9", "3", "4", "2", "12", "7", "13"], ["5", "tacuary", "9", "4", "1", "4", "15", "16", "13"], ["6", "guaran\u00ed", "9", "3", "3", "3", "18", "20", "12"], ["7", "sportivo luque\u00f1o", "9", "3", "2", "4", "14", "12", "11"], ["8", "sport colombia", "9", "2", "2", "5", "14", "20", "8"], ["9", "12 de octubre", "9", "1", "4", "4", "8", "18", "7"], ["10", "san lorenzo", "9", "1", "0", "8", "10", "25", "3"]], "query": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; team } ; cerro porte\u00f1o } = true", "question": "the cerro porte\u00f1o team recorded the 2nd highest number of wins in the 2003 paraguayan football season ."}, {"topic": "list of playboy cyber girls of the week", "wiki": "https://en.wikipedia.org/wiki/List_of_Playboy_Cyber_Girls_of_the_Week", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17993994-7.html.csv", "action": "comparative", "sent": "the month of january had more girls of the week than the month of february .", "annotation": {"row_1": "1", "row_2": "2", "col": "1", "col_other": "6", "relation": "less", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "week 5", "melisa jackson"], "result": null, "ind": 0, "tointer": "select the rows whose week 5 record fuzzily matches to melisa jackson .", "tostr": "filter_eq { all_rows ; week 5 ; melisa jackson }"}, ""], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; }", "tointer": "select the rows whose week 5 record fuzzily matches to melisa jackson . take the record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "week 5", "-"], "result": null, "ind": 1, "tointer": "select the rows whose week 5 record fuzzily matches to - .", "tostr": "filter_eq { all_rows ; week 5 ; - }"}, ""], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; week 5 ; - } ; }", "tointer": "select the rows whose week 5 record fuzzily matches to - . take the record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; hop { filter_eq { all_rows ; week 5 ; - } ; } }", "tointer": "select the rows whose week 5 record fuzzily matches to melisa jackson . take the record of this row . select the rows whose week 5 record fuzzily matches to - . take the record of this row . the first record is less than the second record ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "week 5", "melisa jackson"], "result": null, "ind": 0, "tointer": "select the rows whose week 5 record fuzzily matches to melisa jackson .", "tostr": "filter_eq { all_rows ; week 5 ; melisa jackson }"}, ""], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; }", "tointer": "select the rows whose week 5 record fuzzily matches to melisa jackson . take the record of this row ."}, "january"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; january }", "tointer": "the record of the first row is january ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "week 5", "-"], "result": null, "ind": 1, "tointer": "select the rows whose week 5 record fuzzily matches to - .", "tostr": "filter_eq { all_rows ; week 5 ; - }"}, ""], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; week 5 ; - } ; }", "tointer": "select the rows whose week 5 record fuzzily matches to - . take the record of this row ."}, "february"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; week 5 ; - } ; } ; february }", "tointer": "the record of the second row is february ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; january } ; eq { hop { filter_eq { all_rows ; week 5 ; - } ; } ; february } }", "tointer": "the record of the first row is january . the record of the second row is february ."}], "result": true, "ind": 8, "tostr": "and { less { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; hop { filter_eq { all_rows ; week 5 ; - } ; } } ; and { eq { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; january } ; eq { hop { filter_eq { all_rows ; week 5 ; - } ; } ; february } } } = true", "tointer": "select the rows whose week 5 record fuzzily matches to melisa jackson . take the record of this row . select the rows whose week 5 record fuzzily matches to - . take the record of this row . the first record is less than the second record . the record of the first row is january . the record of the second row is february ."}, "logic_str": "and { less { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; hop { filter_eq { all_rows ; week 5 ; - } ; } } ; and { eq { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; january } ; eq { hop { filter_eq { all_rows ; week 5 ; - } ; } ; february } } } = true", "interpret": "select the rows whose week 5 record fuzzily matches to melisa jackson . take the record of this row . select the rows whose week 5 record fuzzily matches to - . take the record of this row . the first record is less than the second record . the record of the first row is january . the record of the second row is february .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "less_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "week 5_11": 11, "melisa jackson_12": 12, "_13": 13, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "week 5_15": 15, "-_16": 16, "_17": 17, "and_7": 7, "str_eq_5": 5, "january_18": 18, "str_eq_6": 6, "february_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "less_4": "less", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "week 5_11": "week 5", "melisa jackson_12": "melisa jackson", "_13": "", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "week 5_15": "week 5", "-_16": "-", "_17": "", "and_7": "and", "str_eq_5": "str_eq", "january_18": "january", "str_eq_6": "str_eq", "february_19": "february"}, "g_adj": {"and_8": [9], "result_9": [], "less_4": [8], "str_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "week 5_11": [0], "melisa jackson_12": [0], "_13": [2], "str_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "week 5_15": [1], "-_16": [1], "_17": [3], "and_7": [8], "str_eq_5": [7], "january_18": [5], "str_eq_6": [7], "february_19": [6]}, "table_header": ["", "week 1", "week 2", "week 3", "week 4", "week 5"], "table_cont": [["january", "ashley engli", "claudia nathalia", "jamie lee thomas", "megan elizabeth", "melisa jackson"], ["february", "megan hauserman", "shannon marie", "elena daniels", "sheena lee", "-"], ["march", "triana iglesias", "jurgita valts", "lijon jones", "ambra jones", "-"], ["april", "celine mrazovich", "mandy lynn", "amanda duncan", "shannon shay", "-"], ["may", "alison foran", "breann mcgregor", "thea coleman", "victoria lynn melody", "elisa prevot"], ["june", "erica campbell", "kristin queen", "crystal pierce", "kristin vye cardenas", "-"], ["july", "victoria stevens", "candice cassidy", "brittney cox", "nikki rose", "stephanie rotuna"], ["august", "amanda quagliata", "shannon sunderlin", "laura grillo", "anna nava", "-"], ["september", "kortnie o'connor", "jennifer lynn", "brandie moses", "annie bronson", "-"], ["october", "candi marie", "nancy erminia", "cidney carson", "debra ling", "katie jones"], ["november", "crystal alice", "amanda corey", "ashlee jae", "roxanne dawn", "-"]], "query": "and { less { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; hop { filter_eq { all_rows ; week 5 ; - } ; } } ; and { eq { hop { filter_eq { all_rows ; week 5 ; melisa jackson } ; } ; january } ; eq { hop { filter_eq { all_rows ; week 5 ; - } ; } ; february } } } = true", "question": "the month of january had more girls of the week than the month of february ."}, {"topic": "fahed attal", "wiki": "https://en.wikipedia.org/wiki/Fahed_Attal", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14033387-1.html.csv", "action": "unique", "sent": "the only score in march 2006 was at the 2007 afc asian cup qualifier .", "annotation": {"scope": "all", "row": "4", "col": "1", "col_other": "3", "criterion": "equal", "value": "march 2006", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "march 2006"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to march 2006 .", "tostr": "filter_eq { all_rows ; date ; march 2006 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; date ; march 2006 } }", "tointer": "select the rows whose date record fuzzily matches to march 2006 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "march 2006"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to march 2006 .", "tostr": "filter_eq { all_rows ; date ; march 2006 }"}, "score"], "result": "1 - 0", "ind": 2, "tostr": "hop { filter_eq { all_rows ; date ; march 2006 } ; score }"}, "1 - 0"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; date ; march 2006 } ; score } ; 1 - 0 }", "tointer": "the score record of this unqiue row is 1 - 0 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; date ; march 2006 } } ; eq { hop { filter_eq { all_rows ; date ; march 2006 } ; score } ; 1 - 0 } } = true", "tointer": "select the rows whose date record fuzzily matches to march 2006 . there is only one such row in the table . the score record of this unqiue row is 1 - 0 ."}, "logic_str": "and { only { filter_eq { all_rows ; date ; march 2006 } } ; eq { hop { filter_eq { all_rows ; date ; march 2006 } ; score } ; 1 - 0 } } = true", "interpret": "select the rows whose date record fuzzily matches to march 2006 . there is only one such row in the table . the score record of this unqiue row is 1 - 0 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "date_7": 7, "march 2006_8": 8, "str_eq_3": 3, "str_hop_2": 2, "score_9": 9, "1 - 0_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "date_7": "date", "march 2006_8": "march 2006", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "score_9": "score", "1 - 0_10": "1 - 0"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "date_7": [0], "march 2006_8": [0], "str_eq_3": [4], "str_hop_2": [3], "score_9": [2], "1 - 0_10": [3]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["16 february 2006", "bahrain national stadium , manama", "2 - 0", "2 - 0", "friendly"], ["18 february 2006", "bahrain national stadium , manama", "1 - 0", "1 - 0", "friendly"], ["18 february 2006", "bahrain national stadium , manama", "2 - 0", "2 - 0", "friendly"], ["1 march 2006", "king abdullah stadium , amman", "1 - 0", "1 - 0", "2007 afc asian cup qualifier"], ["1 april 2006", "bangabandhu stadium , dhaka", "2 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "3 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "5 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "6 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "8 - 0", "11 - 0", "2006 afc challenge cup"], ["1 april 2006", "bangabandhu stadium , dhaka", "11 - 0", "11 - 0", "2006 afc challenge cup"], ["3 april 2006", "bangabandhu stadium , dhaka", "3 - 0", "4 - 0", "2006 afc challenge cup"], ["5 april 2006", "bangabandhu stadium , dhaka", "1 - 0", "1 - 1", "2006 afc challenge cup"], ["8 march 2012", "dasarath rangasala stadium , kathmandu", "2 - 0", "2 - 0", "2012 afc challenge cup"], ["19 march 2012", "dasarath rangasala stadium , kathmandu", "3 - 4", "3 - 4", "2012 afc challenge cup"]], "query": "and { only { filter_eq { all_rows ; date ; march 2006 } } ; eq { hop { filter_eq { all_rows ; date ; march 2006 } ; score } ; 1 - 0 } } = true", "question": "the only score in march 2006 was at the 2007 afc asian cup qualifier ."}, {"topic": "2004 cfl draft", "wiki": "https://en.wikipedia.org/wiki/2004_CFL_Draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10975034-1.html.csv", "action": "comparative", "sent": "in the 2004 cfl draft , alain kashama was picked one person before amarpreet sanghera .", "annotation": {"row_1": "8", "row_2": "9", "col": "1", "col_other": "3", "relation": "less", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "alain kashama"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to alain kashama .", "tostr": "filter_eq { all_rows ; player ; alain kashama }"}, "pick"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; alain kashama } ; pick }", "tointer": "select the rows whose player record fuzzily matches to alain kashama . take the pick record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "amarpreet sanghera"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to amarpreet sanghera .", "tostr": "filter_eq { all_rows ; player ; amarpreet sanghera }"}, "pick"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick }", "tointer": "select the rows whose player record fuzzily matches to amarpreet sanghera . take the pick record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } }", "tointer": "select the rows whose player record fuzzily matches to alain kashama . take the pick record of this row . select the rows whose player record fuzzily matches to amarpreet sanghera . take the pick record of this row . the first record is less than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "alain kashama"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to alain kashama .", "tostr": "filter_eq { all_rows ; player ; alain kashama }"}, "pick"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; alain kashama } ; pick }", "tointer": "select the rows whose player record fuzzily matches to alain kashama . take the pick record of this row ."}, "8"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; 8 }", "tointer": "the pick record of the first row is 8 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "amarpreet sanghera"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to amarpreet sanghera .", "tostr": "filter_eq { all_rows ; player ; amarpreet sanghera }"}, "pick"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick }", "tointer": "select the rows whose player record fuzzily matches to amarpreet sanghera . take the pick record of this row ."}, "9"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } ; 9 }", "tointer": "the pick record of the second row is 9 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; 8 } ; eq { hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } ; 9 } }", "tointer": "the pick record of the first row is 8 . the pick record of the second row is 9 ."}], "result": true, "ind": 8, "tostr": "and { less { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } } ; and { eq { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; 8 } ; eq { hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } ; 9 } } } = true", "tointer": "select the rows whose player record fuzzily matches to alain kashama . take the pick record of this row . select the rows whose player record fuzzily matches to amarpreet sanghera . take the pick record of this row . the first record is less than the second record . the pick record of the first row is 8 . the pick record of the second row is 9 ."}, "logic_str": "and { less { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } } ; and { eq { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; 8 } ; eq { hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } ; 9 } } } = true", "interpret": "select the rows whose player record fuzzily matches to alain kashama . take the pick record of this row . select the rows whose player record fuzzily matches to amarpreet sanghera . take the pick record of this row . the first record is less than the second record . the pick record of the first row is 8 . the pick record of the second row is 9 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "less_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "player_11": 11, "alain kashama_12": 12, "pick_13": 13, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "player_15": 15, "amarpreet sanghera_16": 16, "pick_17": 17, "and_7": 7, "eq_5": 5, "8_18": 18, "eq_6": 6, "9_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "less_4": "less", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "alain kashama_12": "alain kashama", "pick_13": "pick", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "player_15": "player", "amarpreet sanghera_16": "amarpreet sanghera", "pick_17": "pick", "and_7": "and", "eq_5": "eq", "8_18": "8", "eq_6": "eq", "9_19": "9"}, "g_adj": {"and_8": [9], "result_9": [], "less_4": [8], "num_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "player_11": [0], "alain kashama_12": [0], "pick_13": [2], "num_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "player_15": [1], "amarpreet sanghera_16": [1], "pick_17": [3], "and_7": [8], "eq_5": [7], "8_18": [5], "eq_6": [7], "9_19": [6]}, "table_header": ["pick", "cfl team", "player", "position", "college"], "table_cont": [["1", "hamilton tiger - cats", "wayne smith", "ol", "appalachian state"], ["2", "ottawa renegades", "ibrahim khan", "ol", "simon fraser"], ["3", "ottawa renegades", "david azzi", "wr", "ottawa"], ["4", "toronto argonauts", "mark moroz", "ol", "wake forest"], ["5", "bc lions", "oj atogwe", "s", "stanford"], ["6", "saskatchewan roughriders", "ducamel augustin", "fb", "villanova"], ["7", "toronto argonauts", "jean - fredric tremblay", "wr", "laval"], ["8", "montreal alouettes", "alain kashama", "dl", "michigan"], ["9", "edmonton eskimos", "amarpreet sanghera", "ol", "british columbia"]], "query": "and { less { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } } ; and { eq { hop { filter_eq { all_rows ; player ; alain kashama } ; pick } ; 8 } ; eq { hop { filter_eq { all_rows ; player ; amarpreet sanghera } ; pick } ; 9 } } } = true", "question": "in the 2004 cfl draft , alain kashama was picked one person before amarpreet sanghera ."}, {"topic": "1975 denver broncos season", "wiki": "https://en.wikipedia.org/wiki/1975_Denver_Broncos_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17924362-1.html.csv", "action": "majority", "sent": "during the 1975 season , denver broncos lost most games in the month of october .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "fuzzily_match", "value": "l", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "l"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to l .", "tostr": "most_eq { all_rows ; result ; l } = true"}, "logic_str": "most_eq { all_rows ; result ; l } = true", "interpret": "for the result records of all rows , most of them fuzzily match to l .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "l_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "l_4": "l"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "l_4": [0]}, "table_header": ["week", "date", "opponent", "result", "game site", "record", "attendance"], "table_cont": [["1", "september 21", "kansas city chiefs", "w 37 - 33", "mile high stadium", "1 - 0", "51858"], ["2", "september 29", "green bay packers", "w 23 - 13", "mile high stadium", "2 - 0", "52621"], ["3", "october 5", "buffalo bills", "l 14 - 38", "rich stadium", "2 - 1", "79864"], ["4", "october 12", "pittsburgh steelers", "l 9 - 20", "three rivers stadium", "2 - 2", "49169"], ["5", "october 19", "cleveland browns", "w 16 - 15", "mile high stadium", "3 - 2", "52590"], ["6", "october 26", "kansas city chiefs", "l 13 - 26", "arrowhead stadium", "3 - 3", "70043"], ["7", "november 26", "oakland raiders", "l 17 - 42", "mile high stadium", "3 - 4", "52505"], ["8", "november 9", "cincinnati bengals", "l 16 - 17", "mile high stadium", "3 - 5", "49919"], ["9", "november 16", "san diego chargers", "w 27 - 17", "san diego stadium", "4 - 5", "26048"], ["10", "november 23", "atlanta falcons", "l 21 - 35", "atlanta - fulton county stadium", "4 - 6", "28686"], ["11", "november 30", "san diego chargers", "w 13 - 10 ( ot )", "mile high stadium", "5 - 6", "44982"], ["12", "december 8", "oakland raiders", "l 10 - 17", "oakland - alameda county coliseum", "5 - 7", "51075"], ["13", "december 14", "philadelphia eagles", "w 25 - 10", "mile high stadium", "6 - 7", "36860"], ["14", "december 20", "miami dolphins", "l 13 - 14", "miami orange bowl", "6 - 8", "43064"]], "query": "most_eq { all_rows ; result ; l } = true", "question": "during the 1975 season , denver broncos lost most games in the month of october ."}, {"topic": "list of australian test bowlers who have taken over 200 test wickets", "wiki": "https://en.wikipedia.org/wiki/List_of_Australian_Test_bowlers_who_have_taken_over_200_Test_wickets", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-18914438-1.html.csv", "action": "comparative", "sent": "of the australian test bowlers who have taken over 200 test wickets , ray lindwall has 12 more wickets than clarrie grimmett .", "annotation": {"row_1": "9", "row_2": "10", "col": "7", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "12", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "ray lindwall"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to ray lindwall .", "tostr": "filter_eq { all_rows ; name ; ray lindwall }"}, "wickets"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; ray lindwall } ; wickets }", "tointer": "select the rows whose name record fuzzily matches to ray lindwall . take the wickets record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "clarrie grimmett"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to clarrie grimmett .", "tostr": "filter_eq { all_rows ; name ; clarrie grimmett }"}, "wickets"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; clarrie grimmett } ; wickets }", "tointer": "select the rows whose name record fuzzily matches to clarrie grimmett . take the wickets record of this row ."}], "result": "12", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; name ; ray lindwall } ; wickets } ; hop { filter_eq { all_rows ; name ; clarrie grimmett } ; wickets } }"}, "12"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; name ; ray lindwall } ; wickets } ; hop { filter_eq { all_rows ; name ; clarrie grimmett } ; wickets } } ; 12 } = true", "tointer": "select the rows whose name record fuzzily matches to ray lindwall . take the wickets record of this row . select the rows whose name record fuzzily matches to clarrie grimmett . take the wickets record of this row . the first record is 12 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; name ; ray lindwall } ; wickets } ; hop { filter_eq { all_rows ; name ; clarrie grimmett } ; wickets } } ; 12 } = true", "interpret": "select the rows whose name record fuzzily matches to ray lindwall . take the wickets record of this row . select the rows whose name record fuzzily matches to clarrie grimmett . take the wickets record of this row . the first record is 12 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "name_8": 8, "ray lindwall_9": 9, "wickets_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "name_12": 12, "clarrie grimmett_13": 13, "wickets_14": 14, "12_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "name_8": "name", "ray lindwall_9": "ray lindwall", "wickets_10": "wickets", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "name_12": "name", "clarrie grimmett_13": "clarrie grimmett", "wickets_14": "wickets", "12_15": "12"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "name_8": [0], "ray lindwall_9": [0], "wickets_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "name_12": [1], "clarrie grimmett_13": [1], "wickets_14": [3], "12_15": [5]}, "table_header": ["name", "career", "matches", "overs", "maidens", "runs", "wickets", "average", "best", "5w", "10w"], "table_cont": [["shane warne", "1992 - 2007", "145", "6784.1", "1762", "17995", "708", "25.42", "8 / 71", "37", "10"], ["glenn mcgrath", "1993 - 2007", "124", "4874.4", "1470", "12186", "563", "21.64", "8 / 24", "29", "3"], ["dennis lillee", "1971 - 1984", "70", "2834.1", "652", "8493", "355", "23.92", "7 / 83", "23", "7"], ["brett lee", "1999 - 2010", "76", "2755.1", "547", "9555", "310", "30.82", "5 / 30", "10", "0"], ["craig mcdermott", "1984 - 1996", "71", "2764.2", "583", "8332", "291", "28.63", "8 / 97", "14", "2"], ["jason gillespie", "1996 - 2006", "71", "2372.2", "630", "6770", "259", "26.14", "7 / 37", "8", "0"], ["richie benaud", "1952 - 1964", "63", "2727.2", "805", "6704", "248", "27.03", "7 / 72", "16", "1"], ["graham mckenzie", "1961 - 1971", "60", "2629.5", "547", "7328", "246", "29.79", "8 / 71", "16", "3"], ["ray lindwall", "1946 - 1960", "61", "1970.2", "419", "5251", "228", "23.03", "7 / 38", "12", "0"], ["clarrie grimmett", "1925 - 1936", "37", "2408.3", "736", "5231", "216", "24.22", "7 / 40", "21", "7"], ["merv hughes", "1985 - 1994", "53", "2047.3", "499", "6017", "212", "28.38", "8 / 87", "7", "1"], ["stuart macgill", "1998 - 2008", "44", "1872.5", "365", "6037", "208", "29.02", "8 / 108", "12", "2"], ["mitchell johnson", "2007 -", "50", "1870", "331", "6281", "205", "30.64", "8 / 61", "8", "0"]], "query": "eq { diff { hop { filter_eq { all_rows ; name ; ray lindwall } ; wickets } ; hop { filter_eq { all_rows ; name ; clarrie grimmett } ; wickets } } ; 12 } = true", "question": "of the australian test bowlers who have taken over 200 test wickets , ray lindwall has 12 more wickets than clarrie grimmett ."}, {"topic": "2005 - 06 philadelphia flyers season", "wiki": "https://en.wikipedia.org/wiki/2005%E2%80%9306_Philadelphia_Flyers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14159731-3.html.csv", "action": "unique", "sent": "the game on october 5 was the only game with a n/a attendance .", "annotation": {"scope": "all", "row": "7", "col": "6", "col_other": "1", "criterion": "equal", "value": "n / a", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "attendance", "n / a"], "result": null, "ind": 0, "tointer": "select the rows whose attendance record fuzzily matches to n / a .", "tostr": "filter_eq { all_rows ; attendance ; n / a }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; attendance ; n / a } }", "tointer": "select the rows whose attendance record fuzzily matches to n / a . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "attendance", "n / a"], "result": null, "ind": 0, "tointer": "select the rows whose attendance record fuzzily matches to n / a .", "tostr": "filter_eq { all_rows ; attendance ; n / a }"}, "date"], "result": "october 25", "ind": 2, "tostr": "hop { filter_eq { all_rows ; attendance ; n / a } ; date }"}, "october 25"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; attendance ; n / a } ; date } ; october 25 }", "tointer": "the date record of this unqiue row is october 25 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; attendance ; n / a } } ; eq { hop { filter_eq { all_rows ; attendance ; n / a } ; date } ; october 25 } } = true", "tointer": "select the rows whose attendance record fuzzily matches to n / a . there is only one such row in the table . the date record of this unqiue row is october 25 ."}, "logic_str": "and { only { filter_eq { all_rows ; attendance ; n / a } } ; eq { hop { filter_eq { all_rows ; attendance ; n / a } ; date } ; october 25 } } = true", "interpret": "select the rows whose attendance record fuzzily matches to n / a . there is only one such row in the table . the date record of this unqiue row is october 25 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "attendance_7": 7, "n / a_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "october 25_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "attendance_7": "attendance", "n / a_8": "n / a", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "october 25_10": "october 25"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "attendance_7": [0], "n / a_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "october 25_10": [3]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["october 5", "ny rangers", "5 - 3", "philadelphia", "esche", "19821", "0 - 1 - 0"], ["october 7", "new jersey", "2 - 5", "philadelphia", "niittymaki", "19590", "1 - 1 - 0"], ["october 11", "philadelphia", "2 - 4", "toronto", "esche", "19391", "1 - 2 - 0"], ["october 14", "pittsburgh", "5 - 6", "philadelphia", "niittymaki", "19566", "2 - 2 - 0"], ["october 15", "ny islanders", "1 - 5", "philadelphia", "esche", "19543", "3 - 2 - 0"], ["october 22", "philadelphia", "5 - 2", "toronto", "esche", "19391", "4 - 2 - 0"], ["october 25", "philadelphia", "2 - 3", "montreal", "esche", "n / a", "4 - 2 - 1"], ["october 27", "florida", "4 - 5", "philadelphia", "esche", "19533", "5 - 2 - 1"], ["october 28", "philadelphia", "6 - 8", "carolina", "niittymaki", "18165", "5 - 3 - 1"], ["october 30", "philadelphia", "5 - 3", "ottawa", "esche", "19335", "6 - 3 - 1"]], "query": "and { only { filter_eq { all_rows ; attendance ; n / a } } ; eq { hop { filter_eq { all_rows ; attendance ; n / a } ; date } ; october 25 } } = true", "question": "the game on october 5 was the only game with a n/a attendance ."}, {"topic": "list of hewitts and nuttalls in england", "wiki": "https://en.wikipedia.org/wiki/List_of_Hewitts_and_Nuttalls_in_England", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10814429-12.html.csv", "action": "superlative", "sent": "birks fell has the lowest height among hewitts and nuttalls in england at 610m .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "18", "value_mentioned": "yes", "max_or_min": "min", "other_col": "1", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "min", "args": ["all_rows", "height ( m )"], "result": "610", "ind": 0, "tostr": "min { all_rows ; height ( m ) }", "tointer": "the minimum height ( m ) record of all rows is 610 ."}, "610"], "result": true, "ind": 1, "tostr": "eq { min { all_rows ; height ( m ) } ; 610 }", "tointer": "the minimum height ( m ) record of all rows is 610 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "height ( m )"], "result": null, "ind": 2, "tostr": "argmin { all_rows ; height ( m ) }"}, "peak"], "result": "birks fell", "ind": 3, "tostr": "hop { argmin { all_rows ; height ( m ) } ; peak }"}, "birks fell"], "result": true, "ind": 4, "tostr": "eq { hop { argmin { all_rows ; height ( m ) } ; peak } ; birks fell }", "tointer": "the peak record of the row with superlative height ( m ) record is birks fell ."}], "result": true, "ind": 5, "tostr": "and { eq { min { all_rows ; height ( m ) } ; 610 } ; eq { hop { argmin { all_rows ; height ( m ) } ; peak } ; birks fell } } = true", "tointer": "the minimum height ( m ) record of all rows is 610 . the peak record of the row with superlative height ( m ) record is birks fell ."}, "logic_str": "and { eq { min { all_rows ; height ( m ) } ; 610 } ; eq { hop { argmin { all_rows ; height ( m ) } ; peak } ; birks fell } } = true", "interpret": "the minimum height ( m ) record of all rows is 610 . the peak record of the row with superlative height ( m ) record is birks fell .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "min_0": 0, "all_rows_7": 7, "height (m)_8": 8, "610_9": 9, "str_eq_4": 4, "str_hop_3": 3, "argmin_2": 2, "all_rows_10": 10, "height (m)_11": 11, "peak_12": 12, "birks fell_13": 13}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "min_0": "min", "all_rows_7": "all_rows", "height (m)_8": "height ( m )", "610_9": "610", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "argmin_2": "argmin", "all_rows_10": "all_rows", "height (m)_11": "height ( m )", "peak_12": "peak", "birks fell_13": "birks fell"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "min_0": [1], "all_rows_7": [0], "height (m)_8": [0], "610_9": [1], "str_eq_4": [5], "str_hop_3": [4], "argmin_2": [3], "all_rows_10": [2], "height (m)_11": [2], "peak_12": [3], "birks fell_13": [4]}, "table_header": ["peak", "height ( m )", "prom ( m )", "class", "parent"], "table_cont": [["whernside", "736", "408", "marilyn", "cross fell"], ["ingleborough", "724", "428", "marilyn", "cross fell"], ["great whernside", "704", "288", "marilyn", "whernside"], ["buckden pike", "702", "207", "marilyn", "great whernside"], ["pen - y - ghent", "694", "306", "marilyn", "whernside"], ["great coum", "687", "221", "marilyn", "whernside"], ["plover hill", "680", "59", "hewitt", "pen - y - ghent"], ["great knoutberry hill", "672", "254", "marilyn", "great whernside"], ["dodd fell hill", "668", "230", "marilyn", "great knoutberry hill"], ["fountains fell", "668", "243", "marilyn", "pen - y - ghent"], ["fountains fell south top", "662", "15", "nuttall", "fountains fell"], ["simon fell", "650", "35", "hewitt", "ingleborough"], ["yockenthwaite moor", "643", "86", "hewitt", "dodd fell hill"], ["green hill", "628", "24", "nuttall", "great coum"], ["gragareth", "627", "30", "hewitt", "great coum"], ["darnbrook fell", "624", "40", "hewitt", "fountains fell"], ["drumaldrace", "614", "66", "hewitt", "dodd fell hill"], ["birks fell", "610", "158", "marilyn", "pen - y - ghent"]], "query": "and { eq { min { all_rows ; height ( m ) } ; 610 } ; eq { hop { argmin { all_rows ; height ( m ) } ; peak } ; birks fell } } = true", "question": "birks fell has the lowest height among hewitts and nuttalls in england at 610m ."}, {"topic": "list of museums in montana", "wiki": "https://en.wikipedia.org/wiki/List_of_museums_in_Montana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15104400-2.html.csv", "action": "count", "sent": "a total of seven museums in montana have education programs / guided tours .", "annotation": {"scope": "all", "criterion": "equal", "value": "yes", "result": "7", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "education programs / guided tours", "yes"], "result": null, "ind": 0, "tointer": "select the rows whose education programs / guided tours record fuzzily matches to yes .", "tostr": "filter_eq { all_rows ; education programs / guided tours ; yes }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; education programs / guided tours ; yes } }", "tointer": "select the rows whose education programs / guided tours record fuzzily matches to yes . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; education programs / guided tours ; yes } } ; 7 } = true", "tointer": "select the rows whose education programs / guided tours record fuzzily matches to yes . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; education programs / guided tours ; yes } } ; 7 } = true", "interpret": "select the rows whose education programs / guided tours record fuzzily matches to yes . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "education programs / guided tours_5": 5, "yes_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "education programs / guided tours_5": "education programs / guided tours", "yes_6": "yes", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "education programs / guided tours_5": [0], "yes_6": [0], "7_7": [2]}, "table_header": ["name", "town / city", "region", "on dinosaur trail", "education programs / guided tours", "associated field digs"], "table_cont": [["blaine county museum", "chinook", "north central", "yes", "no", "no"], ["carter county museum", "ekalaka", "southeast", "yes", "no", "no"], ["fort peck field station of paleontology", "fort peck", "northeast", "yes", "yes", "no"], ["fort peck interpretive center and museum", "fort peck", "northeast", "yes", "yes", "no"], ["garfield county museum", "jordan", "northeast", "yes", "no", "yes"], ["great plains dinosaur museum and field station", "malta", "northeast", "yes", "yes", "yes"], ["h earl clack memorial museum", "havre", "north central", "yes", "no", "no"], ["makoshika state park", "glendive", "southeast", "yes", "yes", "no"], ["makoshika dinosaur museum", "glendive", "southeast", "yes", "yes", "yes"], ["museum of the rockies", "bozeman", "south central", "yes", "yes", "no"], ["old trail museum", "choteau", "north central", "yes", "no", "no"], ["phillips county museum", "malta", "northeast", "yes", "no", "no"], ["rudyard depot museum", "rudyard", "north central", "yes", "no", "no"], ["two medicine dinosaur center", "bynum", "north central", "yes", "yes", "yes"], ["upper musselshell museum", "harlowton", "south central", "yes", "no", "no"]], "query": "eq { count { filter_eq { all_rows ; education programs / guided tours ; yes } } ; 7 } = true", "question": "a total of seven museums in montana have education programs / guided tours ."}, {"topic": "united states house of representatives elections , 1928", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1928", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1342370-17.html.csv", "action": "majority", "sent": "most of the people elected into the 1928 louisiana house of representatives were originally elected before 1920 .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "less_than", "value": "1920", "subset": null}, "logic": {"func": "most_less", "args": ["all_rows", "first elected", "1920"], "result": true, "ind": 0, "tointer": "for the first elected records of all rows , most of them are less than 1920 .", "tostr": "most_less { all_rows ; first elected ; 1920 } = true"}, "logic_str": "most_less { all_rows ; first elected ; 1920 } = true", "interpret": "for the first elected records of all rows , most of them are less than 1920 .", "num_func": 1, "nid": 1, "g_ids": {"most_less_0": 0, "result_1": 1, "all_rows_2": 2, "first elected_3": 3, "1920_4": 4}, "g_ids_features": {"most_less_0": "most_less", "result_1": "true", "all_rows_2": "all_rows", "first elected_3": "first elected", "1920_4": "1920"}, "g_adj": {"most_less_0": [1], "result_1": [], "all_rows_2": [0], "first elected_3": [0], "1920_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["louisiana 1", "james o'connor", "democratic", "1918", "re - elected", "james o'connor ( d ) unopposed"], ["louisiana 3", "whitmell p martin", "democratic", "1914", "re - elected", "whitmell p martin ( d ) unopposed"], ["louisiana 4", "john n sandlin", "democratic", "1920", "re - elected", "john n sandlin ( d ) unopposed"], ["louisiana 5", "riley joseph wilson", "democratic", "1914", "re - elected", "riley joseph wilson ( d ) unopposed"], ["louisiana 6", "bolivar e kemp", "democratic", "1924", "re - elected", "bolivar e kemp ( d ) unopposed"], ["louisiana 7", "ren\u00e9 louis derouen", "democratic", "1927", "re - elected", "ren\u00e9 louis derouen ( d ) unopposed"]], "query": "most_less { all_rows ; first elected ; 1920 } = true", "question": "most of the people elected into the 1928 louisiana house of representatives were originally elected before 1920 ."}, {"topic": "the howie carr show", "wiki": "https://en.wikipedia.org/wiki/The_Howie_Carr_Show", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10333757-1.html.csv", "action": "majority", "sent": "the howie carr show is always a news/talk format .", "annotation": {"scope": "all", "col": "4", "most_or_all": "all", "criterion": "equal", "value": "news / talk", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "format", "news / talk"], "result": true, "ind": 0, "tointer": "for the format records of all rows , all of them fuzzily match to news / talk .", "tostr": "all_eq { all_rows ; format ; news / talk } = true"}, "logic_str": "all_eq { all_rows ; format ; news / talk } = true", "interpret": "for the format records of all rows , all of them fuzzily match to news / talk .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "format_3": 3, "news / talk_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "format_3": "format", "news / talk_4": "news / talk"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "format_3": [0], "news / talk_4": [0]}, "table_header": ["calls", "frequency", "branding", "format", "timeslot", "group owner"], "table_cont": [["wgan", "560 khz", "news radio 560 wgan", "news / talk", "live 3p - 6p", "saga communications"], ["whyn", "560 khz", "news / talk 560 whyn", "news / talk", "live 3p - 7p", "clear channel communications"], ["wvmt", "620 khz", "news / talk 620 wvmt", "news / talk", "live 3p - 7p", "sison broadcasting"], ["wrko", "680 khz", "am 680 wrko", "news / talk", "live 3p - 7p", "entercom"], ["wcrn", "830 khz", "wcrn 830 true talk", "news / talk", "live 3p - 7p", "carter broadcasting"], ["wkbk", "1290 khz", "1290 wkbk w281au 104.1", "news / talk", "live 3p - 6p", "saga communications"], ["wegp", "1390 khz", "wegp 1390 am - the talk of the county", "news / talk", "live 3p - 6p", "decelles / media , inc"], ["wxtk", "95.1 mhz", "news radio 95 wxtk", "news / talk", "live 3p - 7p", "qantam of cape cod , llc"], ["wntk - fm", "99.7 mhz", "wntk talk radio", "news / talk", "live 3p - 6p", "koor communications"], ["wuvr", "1490 khz", "wntk talk radio", "news / talk", "live 3p - 6p", "koor communications"], ["wvom - fm / wvqm", "103.9 / 101.3 mhz", "the voice of maine", "news / talk", "live 3p - 7p", "blueberry broadcasting"]], "query": "all_eq { all_rows ; format ; news / talk } = true", "question": "the howie carr show is always a news/talk format ."}, {"topic": "1963 england rugby union tour of australasia", "wiki": "https://en.wikipedia.org/wiki/1963_England_rugby_union_tour_of_Australasia", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16994527-1.html.csv", "action": "ordinal", "sent": "wellington was the earliest opposing team met during the 1963 england rugby union tour of australasia .", "annotation": {"row": "1", "col": "3", "order": "1", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "1"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; date ; 1 }"}, "opposing team"], "result": "wellington", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; date ; 1 } ; opposing team }"}, "wellington"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opposing team } ; wellington } = true", "tointer": "select the row whose date record of all rows is 1st minimum . the opposing team record of this row is wellington ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opposing team } ; wellington } = true", "interpret": "select the row whose date record of all rows is 1st minimum . the opposing team record of this row is wellington .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "date_5": 5, "1_6": 6, "opposing team_7": 7, "wellington_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "date_5": "date", "1_6": "1", "opposing team_7": "opposing team", "wellington_8": "wellington"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "date_5": [0], "1_6": [0], "opposing team_7": [1], "wellington_8": [2]}, "table_header": ["opposing team", "against", "date", "venue", "status"], "table_cont": [["wellington", "9", "may 18 , 1963", "athletic park , wellington", "tour match"], ["otago", "14", "may 22 , 1963", "carisbrook , dunedin", "tour match"], ["new zealand", "21", "may 25 , 1963", "eden park , auckland", "test match"], ["hawke 's bay", "20", "may 28 , 1963", "mclean park , napier", "tour match"], ["new zealand", "9", "june 1 , 1963", "lancaster park , christchurch", "test match"], ["australia", "18", "june 4 , 1963", "sportground , sydney", "test match"]], "query": "eq { hop { nth_argmin { all_rows ; date ; 1 } ; opposing team } ; wellington } = true", "question": "wellington was the earliest opposing team met during the 1963 england rugby union tour of australasia ."}, {"topic": "list of californication episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Californication_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-13336122-6.html.csv", "action": "aggregation", "sent": "in 2012 californication had 7.9 million us viewers overall .", "annotation": {"scope": "all", "col": "7", "type": "sum", "result": "7.9", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "us viewers ( million )"], "result": "7.9", "ind": 0, "tostr": "sum { all_rows ; us viewers ( million ) }"}, "7.9"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; us viewers ( million ) } ; 7.9 } = true", "tointer": "the sum of the us viewers ( million ) record of all rows is 7.9 ."}, "logic_str": "round_eq { sum { all_rows ; us viewers ( million ) } ; 7.9 } = true", "interpret": "the sum of the us viewers ( million ) record of all rows is 7.9 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "us viewers (million)_4": 4, "7.9_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "us viewers (million)_4": "us viewers ( million )", "7.9_5": "7.9"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "us viewers (million)_4": [0], "7.9_5": [1]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "original air date", "us viewers ( million )"], "table_cont": [["49", "1", "jfk to lax", "john dahl", "tom kapinos", "january 8 , 2012", "0.76"], ["50", "2", "the way of the fist", "david duchovny", "tom kapinos", "january 15 , 2012", "0.75"], ["51", "3", "boys & girls", "seith mann", "tom kapinos", "january 22 , 2012", "0.64"], ["52", "4", "waiting for the miracle", "bart freundlich", "tom kapinos", "january 29 , 2012", "0.75"], ["53", "5", "the ride - along", "millicent shelton", "tom kapinos", "february 5 , 2012", "0.74"], ["54", "6", "love song", "eric stoltz", "tom kapinos", "february 12 , 2012", "0.83"], ["55", "7", "here i go again", "michael weaver", "tom kapinos", "february 19 , 2012", "0.71"], ["56", "8", "raw", "bart freundlich", "tom kapinos", "march 4 , 2012", "0.67"], ["57", "9", "the movies", "helen hunt", "tom kapinos", "march 11 , 2012", "0.68"], ["58", "10", "perverts & whores", "bart freundlich", "tom kapinos", "march 18 , 2012", "0.64"], ["59", "11", "the party", "michael lehmann", "tom kapinos", "march 25 , 2012", "0.73"]], "query": "round_eq { sum { all_rows ; us viewers ( million ) } ; 7.9 } = true", "question": "in 2012 californication had 7.9 million us viewers overall ."}, {"topic": "eurovision song contest 1963", "wiki": "https://en.wikipedia.org/wiki/Eurovision_Song_Contest_1963", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-182845-1.html.csv", "action": "count", "sent": "four of the songs were in the french language .", "annotation": {"scope": "all", "criterion": "equal", "value": "french", "result": "4", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "language", "french"], "result": null, "ind": 0, "tointer": "select the rows whose language record fuzzily matches to french .", "tostr": "filter_eq { all_rows ; language ; french }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; language ; french } }", "tointer": "select the rows whose language record fuzzily matches to french . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; language ; french } } ; 4 } = true", "tointer": "select the rows whose language record fuzzily matches to french . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; language ; french } } ; 4 } = true", "interpret": "select the rows whose language record fuzzily matches to french . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "language_5": 5, "french_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "language_5": "language", "french_6": "french", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "language_5": [0], "french_6": [0], "4_7": [2]}, "table_header": ["draw", "language", "artist", "song", "english translation", "place", "points"], "table_cont": [["01", "english", "ronnie carroll", "say wonderful things", "-", "4", "28"], ["02", "dutch", "annie palmen", "een speeldoos", "a musical box", "13", "0"], ["03", "german", "heidi br\u00fchl", "marcel", "-", "9", "5"], ["04", "german , english", "carmela corren", "vielleicht geschieht ein wunder", "maybe a miracle will happen", "7", "16"], ["05", "norwegian", "anita thallaug", "solhverv", "solstice", "13", "0"], ["06", "italian", "emilio pericoli", "uno per tutte", "one for all", "3", "37"], ["07", "finnish", "laila halme", "muistojeni laulu", "the song of my memories", "13", "0"], ["08", "danish", "grethe & j\u00f8rgen ingmann", "dansevise", "dance ballad", "1", "42"], ["09", "croatian", "vice vukov", "brodovi", "ships", "11", "3"], ["10", "french", "esther ofarim", "t ' en va pas", "do n't go away", "2", "40"], ["11", "french", "alain barri\u00e8re", "elle \u00e9tait si jolie", "she was so pretty", "5", "25"], ["12", "spanish", "jos\u00e9 guardiola", "algo prodigioso", "something marvellous", "12", "2"], ["13", "swedish", "monica zetterlund", "en g\u00e5ng i stockholm", "once in stockholm", "13", "0"], ["14", "dutch", "jacques raymond", "waarom", "why", "10", "4"], ["15", "french", "fran\u00e7oise hardy", "l'amour s ' en va", "love goes away", "5", "25"], ["16", "french", "nana mouskouri", "\u00e0 force de prier", "by the might of prayer", "8", "13"]], "query": "eq { count { filter_eq { all_rows ; language ; french } } ; 4 } = true", "question": "four of the songs were in the french language ."}, {"topic": "1949 vfl season", "wiki": "https://en.wikipedia.org/wiki/1949_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10809351-13.html.csv", "action": "majority", "sent": "all games of the 1949 vfl season were played on the 16th of july .", "annotation": {"scope": "all", "col": "7", "most_or_all": "all", "criterion": "equal", "value": "16 july 1949", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "date", "16 july 1949"], "result": true, "ind": 0, "tointer": "for the date records of all rows , all of them fuzzily match to 16 july 1949 .", "tostr": "all_eq { all_rows ; date ; 16 july 1949 } = true"}, "logic_str": "all_eq { all_rows ; date ; 16 july 1949 } = true", "interpret": "for the date records of all rows , all of them fuzzily match to 16 july 1949 .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "16 july 1949_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "16 july 1949_4": "16 july 1949"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "16 july 1949_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["st kilda", "16.15 ( 111 )", "south melbourne", "13.13 ( 91 )", "junction oval", "6000", "16 july 1949"], ["essendon", "8.22 ( 70 )", "north melbourne", "6.13 ( 49 )", "windy hill", "16000", "16 july 1949"], ["collingwood", "7.16 ( 58 )", "melbourne", "10.13 ( 73 )", "victoria park", "22000", "16 july 1949"], ["carlton", "9.13 ( 67 )", "fitzroy", "9.8 ( 62 )", "princes park", "17500", "16 july 1949"], ["richmond", "16.21 ( 117 )", "hawthorn", "9.13 ( 67 )", "punt road oval", "7000", "16 july 1949"], ["geelong", "13.15 ( 93 )", "footscray", "4.10 ( 34 )", "kardinia park", "15000", "16 july 1949"]], "query": "all_eq { all_rows ; date ; 16 july 1949 } = true", "question": "all games of the 1949 vfl season were played on the 16th of july ."}, {"topic": "houston rockets all - time roster", "wiki": "https://en.wikipedia.org/wiki/Houston_Rockets_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11734041-17.html.csv", "action": "superlative", "sent": "ralph sampson was the tallest player to have played for the houston rockets .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "height in ft"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; height in ft }"}, "player"], "result": "sampson , ralph ralph sampson", "ind": 1, "tostr": "hop { argmax { all_rows ; height in ft } ; player }"}, "sampson , ralph ralph sampson"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; height in ft } ; player } ; sampson , ralph ralph sampson } = true", "tointer": "select the row whose height in ft record of all rows is maximum . the player record of this row is sampson , ralph ralph sampson ."}, "logic_str": "eq { hop { argmax { all_rows ; height in ft } ; player } ; sampson , ralph ralph sampson } = true", "interpret": "select the row whose height in ft record of all rows is maximum . the player record of this row is sampson , ralph ralph sampson .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "height in ft_5": 5, "player_6": 6, "sampson , ralph ralph sampson_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "height in ft_5": "height in ft", "player_6": "player", "sampson , ralph ralph sampson_7": "sampson , ralph ralph sampson"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "height in ft_5": [0], "player_6": [1], "sampson , ralph ralph sampson_7": [2]}, "table_header": ["player", "no ( s )", "height in ft", "position", "years for rockets", "school / club team / country"], "table_cont": [["sampson , ralph ralph sampson", "50", "7 - 4", "forward / center", "1983 - 88", "virginia"], ["scola , luis luis scola", "4", "6 - 9", "forward", "2007 - 2012", "argentina"], ["short , purvis purvis short", "10", "6 - 7", "forward / guard", "1987 - 89", "jackson state"], ["shumate , john john shumate", "34", "6 - 9", "forward", "1979 - 80", "notre dame"], ["siegfried , larry larry siegfried", "20", "6 - 3", "guard", "1970 - 71", "ohio state"], ["smith , bobby bobby smith", "32", "6 - 5", "forward", "1969 - 70", "tulsa"], ["smith , greg greg smith", "4", "6 - 5", "forward", "1971 - 72", "western kentucky"], ["smith , kenny kenny smith", "30", "6 - 3", "guard", "1990 - 96", "north carolina"], ["smith , larry larry smith", "13", "6 - 8", "forward / center", "1989 - 92", "alcorn state"], ["snyder , kirk kirk snyder", "13", "6 - 6", "guard", "2006 - 08", "nevada - reno"], ["spanoulis , vassilis vassilis spanoulis", "10", "6 - 4", "guard", "2006 - 07", "greece"], ["spriggs , larry larry spriggs", "35", "6 - 7", "forward", "1981", "howard"], ["stephens , joe joe stephens", "41", "6 - 7", "forward", "1997", "arkansas - little rock"], ["strickland , rod rod strickland", "31", "6 - 3", "guard", "2004 - 05", "depaul"], ["stroud , john john stroud", "42", "6 - 7", "forward", "1980 - 81", "mississippi"], ["sura , bob bob sura", "3", "6 - 5", "guard", "2004 - 07", "florida state"]], "query": "eq { hop { argmax { all_rows ; height in ft } ; player } ; sampson , ralph ralph sampson } = true", "question": "ralph sampson was the tallest player to have played for the houston rockets ."}, {"topic": "modern pentathlon at the 2007 pan american games", "wiki": "https://en.wikipedia.org/wiki/Modern_pentathlon_at_the_2007_Pan_American_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12407546-2.html.csv", "action": "ordinal", "sent": "the athlete with the 2nd highest total in the modern pentathlon at the 2007 pan american games was monica pinette .", "annotation": {"row": "2", "col": "8", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "total", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; total ; 2 }"}, "athlete"], "result": "monica pinette", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; total ; 2 } ; athlete }"}, "monica pinette"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; total ; 2 } ; athlete } ; monica pinette } = true", "tointer": "select the row whose total record of all rows is 2nd maximum . the athlete record of this row is monica pinette ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; total ; 2 } ; athlete } ; monica pinette } = true", "interpret": "select the row whose total record of all rows is 2nd maximum . the athlete record of this row is monica pinette .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "total_5": 5, "2_6": 6, "athlete_7": 7, "monica pinette_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "total_5": "total", "2_6": "2", "athlete_7": "athlete", "monica pinette_8": "monica pinette"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "total_5": [0], "2_6": [0], "athlete_7": [1], "monica pinette_8": [2]}, "table_header": ["", "athlete", "shooting", "fencing", "swimming", "riding", "running", "total"], "table_cont": [["1", "yane marques", "174 ( 1024 pts )", "24 - 2 ( 1216 pts )", "2:14.72 ( 1304 pts )", "74.42 ( 1032 pts )", "11:43.01 ( 908 pts )", "5484"], ["2", "monica pinette", "176 ( 1048 pts )", "17 - 9 ( 964 pts )", "2:30.85 ( 1112 pts )", "68.59 ( 1116 pts )", "11:08.75 ( 1048 pts )", "5288"], ["3", "mickelle kelly", "170 ( 976 pts )", "12 - 14 ( 784 pts )", "2:26.75 ( 1160 pts )", "68.25 ( 1144 pts )", "10:33.55 ( 1188 pts )", "5252"], ["4", "kara grant", "176 ( 1048 pts )", "11 - 15 ( 748 pts )", "2:40.98 ( 992 pts )", "77.53 ( 1192 pts )", "10:33.38 ( 1188 pts )", "5168"], ["5", "rita sanz - agero", "172 ( 1000 pts )", "15 - 11 ( 892 pts )", "2:33.11 ( 1084 pts )", "69.32 ( 1172 pts )", "11:17.10 ( 1012 pts )", "5160"], ["6", "marlene sanchez", "169 ( 964 pts )", "16 - 10 ( 928 pts )", "2:30.47 ( 1116 pts )", "68.04 ( 1060 pts )", "11:14.67 ( 1024 pts )", "5092"], ["7", "katia rodriguez", "162 ( 880 pts )", "14 - 12 ( 856 pts )", "2:24.89 ( 1184 pts )", "75.66 ( 1088 pts )", "11:26.25 ( 976 pts )", "4984"], ["8", "larissa lellys", "153 ( 772 pts )", "13 - 13 ( 820 pts )", "2:24.01 ( 1192 pts )", "64.85 ( 1116 pts )", "11:22.38 ( 992 pts )", "4892"], ["9", "marines garza", "164 ( 904 pts )", "11 - 15 ( 748 pts )", "2:29.22 ( 1132 pts )", "73.09 ( 1088 pts )", "11:39.65 ( 924 pts )", "4796"], ["10", "suaima garcia", "179 ( 1084 pts )", "12 - 14 ( 784 pts )", "2:26.50 ( 1164 pts )", "dnf ( 512 pts )", "11:43.16 ( 908 pts )", "4452"], ["11", "sheila taormina", "161 ( 868 pts )", "12 - 14 ( 784 pts )", "2:07.36 ( 1392 pts )", "dnf ( 100 pts )", "11:28.18 ( 968 pts )", "4112"], ["12", "gabriela raute", "175 ( 1036 pts )", "3 - 23 ( 460 pts )", "3:32.10 ( 376 pts )", "72.40 ( 1088 pts )", "12:12.20 ( 792 pts )", "3752"], ["13", "pamela zapata", "154 ( 784 pts )", "12 - 14 ( 784 pts )", "2:31.01 ( 1108 pts )", "dnf ( 240 pts )", "12:49.91 ( 644 pts )", "3560"]], "query": "eq { hop { nth_argmax { all_rows ; total ; 2 } ; athlete } ; monica pinette } = true", "question": "the athlete with the 2nd highest total in the modern pentathlon at the 2007 pan american games was monica pinette ."}, {"topic": "1958 in brazilian football", "wiki": "https://en.wikipedia.org/wiki/1958_in_Brazilian_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15282692-1.html.csv", "action": "majority", "sent": "in the 1958 brazilian football season , majority of teams that finished with 6 points lost 6 games .", "annotation": {"scope": "subset", "col": "6", "most_or_all": "most", "criterion": "equal", "value": "6", "subset": {"col": "3", "criterion": "equal", "value": "6"}}, "logic": {"func": "most_eq", "args": [{"func": "filter_eq", "args": ["all_rows", "points", "6"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; points ; 6 }", "tointer": "select the rows whose points record is equal to 6 ."}, "lost", "6"], "result": true, "ind": 1, "tointer": "select the rows whose points record is equal to 6 . for the lost records of these rows , most of them are equal to 6 .", "tostr": "most_eq { filter_eq { all_rows ; points ; 6 } ; lost ; 6 } = true"}, "logic_str": "most_eq { filter_eq { all_rows ; points ; 6 } ; lost ; 6 } = true", "interpret": "select the rows whose points record is equal to 6 . for the lost records of these rows , most of them are equal to 6 .", "num_func": 2, "nid": 2, "g_ids": {"most_eq_1": 1, "result_2": 2, "filter_eq_0": 0, "all_rows_3": 3, "points_4": 4, "6_5": 5, "lost_6": 6, "6_7": 7}, "g_ids_features": {"most_eq_1": "most_eq", "result_2": "true", "filter_eq_0": "filter_eq", "all_rows_3": "all_rows", "points_4": "points", "6_5": "6", "lost_6": "lost", "6_7": "6"}, "g_adj": {"most_eq_1": [2], "result_2": [], "filter_eq_0": [1], "all_rows_3": [0], "points_4": [0], "6_5": [0], "lost_6": [1], "6_7": [1]}, "table_header": ["position", "team", "points", "played", "drawn", "lost", "against", "difference"], "table_cont": [["1", "vasco da gama", "15", "9", "1", "1", "12", "14"], ["2", "flamengo", "13", "9", "1", "2", "15", "9"], ["3", "corinthians", "11", "9", "3", "2", "11", "3"], ["4", "s\u00e3o paulo", "10", "9", "2", "3", "19", "9"], ["5", "botafogo", "8", "9", "2", "4", "25", "- 4"], ["6", "fluminense", "8", "9", "2", "4", "16", "- 6"], ["7", "santos", "7", "9", "1", "5", "24", "0"], ["8", "palmeiras", "6", "9", "0", "6", "28", "- 6"], ["9", "am\u00e3rica", "6", "9", "0", "6", "25", "- 10"], ["10", "portuguesa", "6", "9", "2", "5", "22", "- 9"]], "query": "most_eq { filter_eq { all_rows ; points ; 6 } ; lost ; 6 } = true", "question": "in the 1958 brazilian football season , majority of teams that finished with 6 points lost 6 games ."}, {"topic": "list of drake & josh episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Drake_%26_Josh_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2453243-3.html.csv", "action": "count", "sent": "7 episodes of drake and josh were directed by virgil fabian .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "virgil fabian", "result": "7", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "directed by", "virgil fabian"], "result": null, "ind": 0, "tointer": "select the rows whose directed by record fuzzily matches to virgil fabian .", "tostr": "filter_eq { all_rows ; directed by ; virgil fabian }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; directed by ; virgil fabian } }", "tointer": "select the rows whose directed by record fuzzily matches to virgil fabian . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; directed by ; virgil fabian } } ; 7 } = true", "tointer": "select the rows whose directed by record fuzzily matches to virgil fabian . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; directed by ; virgil fabian } } ; 7 } = true", "interpret": "select the rows whose directed by record fuzzily matches to virgil fabian . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "directed by_5": 5, "virgil fabian_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "directed by_5": "directed by", "virgil fabian_6": "virgil fabian", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "directed by_5": [0], "virgil fabian_6": [0], "7_7": [2]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "original air date", "production code"], "table_cont": [["7", "1", "the bet", "steve hoefer", "george doty iv", "march 14 , 2004", "202"], ["8", "2", "guitar", "virgil fabian", "dan schneider", "march 21 , 2004", "201"], ["9", "3", "movie job", "virgil fabian", "dan schneider", "march 28 , 2004", "203"], ["10", "4", "football", "virgil fabian", "story by : barry o'brien teleplay by : dan schneider", "april 4 , 2004", "205"], ["11", "5", "pool shark", "steve hoefer", "anthony del broccolo", "april 18 , 2004", "204"], ["12", "6", "smart girl", "roger christiansen", "dan schneider", "april 25 , 2004", "207"], ["13", "7", "little diva", "virgil fabian", "eric friedman", "may 2 , 2004", "208"], ["14", "8", "blues brothers", "fred savage", "craig digregorio", "september 12 , 2004", "206"], ["15", "9", "driver 's license", "virgil fabian", "dan schneider", "september 12 , 2004", "209"], ["16", "10", "number 1 fan", "virgil fabian", "dan schneider", "september 19 , 2004", "211"], ["17", "11", "mean teacher", "steve hoefer", "george doty iv", "september 26 , 2004", "210"], ["18", "12", "the gary grill", "virgil fabian", "anthony del broccolo", "october 17 , 2004", "212"], ["19", "13", "drew & jerry", "steve hoefer", "dan schneider", "october 24 , 2004", "213"]], "query": "eq { count { filter_eq { all_rows ; directed by ; virgil fabian } } ; 7 } = true", "question": "7 episodes of drake and josh were directed by virgil fabian ."}, {"topic": "max snegirev", "wiki": "https://en.wikipedia.org/wiki/Max_Snegirev", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26815674-1.html.csv", "action": "superlative", "sent": "for max snegirev , the highest number of points he had was when his final placing was 11th .", "annotation": {"scope": "all", "col_superlative": "8", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "9", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "final placing"], "result": "11th", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; final placing }"}, "11th"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; final placing } ; 11th } = true", "tointer": "select the row whose points record of all rows is maximum . the final placing record of this row is 11th ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; final placing } ; 11th } = true", "interpret": "select the row whose points record of all rows is maximum . the final placing record of this row is 11th .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "final placing_6": 6, "11th_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "final placing_6": "final placing", "11th_7": "11th"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "final placing_6": [1], "11th_7": [2]}, "table_header": ["season", "series", "team name", "races", "wins", "poles", "podiums", "points", "final placing"], "table_cont": [["2007", "formula palmer audi", "audi russia motorsport", "20", "0", "0", "0", "74", "19th"], ["2007", "formula palmer audi autumn trophy", "audi russia motorsport", "6", "0", "0", "0", "41", "12th"], ["2008", "formula palmer audi", "audi russia motorsport", "20", "0", "0", "0", "137", "11th"], ["2008", "formula palmer audi autumn trophy", "audi russia motorsport", "6", "0", "0", "0", "42", "10th"], ["2008", "formula renault uk winter series", "falcon motorsport", "2", "0", "0", "0", "10", "22nd"], ["2009", "british formula three national class", "team west - tec", "16", "0", "0", "4", "108", "4th"], ["2009", "formula renault uk", "tempus sport", "2", "0", "0", "0", "0", "32nd"], ["2009", "formula palmer audi", "audi russia motorsport", "1", "0", "0", "0", "5", "33rd"], ["2010", "british formula three", "fortec motorsport", "30", "0", "0", "0", "1", "18th"], ["2010", "formula palmer audi", "motorsport vision", "7", "1", "0", "3", "104", "13th"], ["2011", "fia formula two championship", "motorsport vision", "16", "0", "0", "0", "14", "18th"], ["2011", "british formula three", "hitech racing", "9", "0", "0", "0", "2", "24th"], ["2012", "auto gp world series", "campos racing", "14", "0", "0", "0", "34", "13th"]], "query": "eq { hop { argmax { all_rows ; points } ; final placing } ; 11th } = true", "question": "for max snegirev , the highest number of points he had was when his final placing was 11th ."}, {"topic": "sweden in the eurovision song contest 1997", "wiki": "https://en.wikipedia.org/wiki/Sweden_in_the_Eurovision_Song_Contest_1997", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13594823-1.html.csv", "action": "comparative", "sent": "andreas lundstedt scored more points than garmarna in the 1997 eurovision song contest .", "annotation": {"row_1": "7", "row_2": "8", "col": "4", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "artist", "andreas lundstedt"], "result": null, "ind": 0, "tointer": "select the rows whose artist record fuzzily matches to andreas lundstedt .", "tostr": "filter_eq { all_rows ; artist ; andreas lundstedt }"}, "points"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; artist ; andreas lundstedt } ; points }", "tointer": "select the rows whose artist record fuzzily matches to andreas lundstedt . take the points record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "artist", "garmarna"], "result": null, "ind": 1, "tointer": "select the rows whose artist record fuzzily matches to garmarna .", "tostr": "filter_eq { all_rows ; artist ; garmarna }"}, "points"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; artist ; garmarna } ; points }", "tointer": "select the rows whose artist record fuzzily matches to garmarna . take the points record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; artist ; andreas lundstedt } ; points } ; hop { filter_eq { all_rows ; artist ; garmarna } ; points } } = true", "tointer": "select the rows whose artist record fuzzily matches to andreas lundstedt . take the points record of this row . select the rows whose artist record fuzzily matches to garmarna . take the points record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; artist ; andreas lundstedt } ; points } ; hop { filter_eq { all_rows ; artist ; garmarna } ; points } } = true", "interpret": "select the rows whose artist record fuzzily matches to andreas lundstedt . take the points record of this row . select the rows whose artist record fuzzily matches to garmarna . take the points record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "artist_7": 7, "andreas lundstedt_8": 8, "points_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "artist_11": 11, "garmarna_12": 12, "points_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "artist_7": "artist", "andreas lundstedt_8": "andreas lundstedt", "points_9": "points", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "artist_11": "artist", "garmarna_12": "garmarna", "points_13": "points"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "artist_7": [0], "andreas lundstedt_8": [0], "points_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "artist_11": [1], "garmarna_12": [1], "points_13": [3]}, "table_header": ["draw", "artist", "song", "points", "place"], "table_cont": [["1", "monia sj\u00f6str\u00f6m", "nu idag", "11", "11th"], ["2", "photogenique", "nattens \u00e4nglar", "0", "12th"], ["3", "robert randqvist", "hand i hand", "55", "5th"], ["4", "n - mix", "d\u00e4r en \u00e4ngel h\u00e4lsat p\u00e5", "68", "2nd"], ["5", "jim jidhed", "charlie", "12", "10th"], ["6", "nick borgen", "world wide web", "26", "9th"], ["7", "andreas lundstedt", "jag saknar dig , jag saknar dig", "32", "7th"], ["8", "garmarna", "en g\u00e5ng ska han gr\u00e5ta", "28", "8th"], ["9", "big", "jag skall aldrig l\u00e4mna dig", "40", "6th"], ["10", "wille craaford", "missarna", "65", "3rd"], ["11", "cajsalisa ejemyr", "du g\u00f6r mig hel igen", "56", "4th"], ["12", "blond", "bara hon \u00e4lskar mig", "80", "1st"]], "query": "greater { hop { filter_eq { all_rows ; artist ; andreas lundstedt } ; points } ; hop { filter_eq { all_rows ; artist ; garmarna } ; points } } = true", "question": "andreas lundstedt scored more points than garmarna in the 1997 eurovision song contest ."}, {"topic": "jake rosholt", "wiki": "https://en.wikipedia.org/wiki/Jake_Rosholt", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1634072-2.html.csv", "action": "majority", "sent": "the majority of jake rosholt 's fights were wins for jake rosholt .", "annotation": {"scope": "all", "col": "1", "most_or_all": "most", "criterion": "equal", "value": "win", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "res", "win"], "result": true, "ind": 0, "tointer": "for the res records of all rows , most of them fuzzily match to win .", "tostr": "most_eq { all_rows ; res ; win } = true"}, "logic_str": "most_eq { all_rows ; res ; win } = true", "interpret": "for the res records of all rows , most of them fuzzily match to win .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "res_3": 3, "win_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "res_3": "res", "win_4": "win"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "res_3": [0], "win_4": [0]}, "table_header": ["res", "record", "opponent", "method", "event", "round", "time", "location"], "table_cont": [["loss", "12 - 5 ( 1 )", "anthony johnson", "tko ( head kick )", "xtreme fight night 9", "2", "4:22", "tulsa , oklahoma , united states"], ["loss", "12 - 4 ( 1 )", "matt thompson", "submission ( kneebar )", "xko 15", "1", "4:16", "arlington , texas , united states"], ["win", "12 - 3 ( 1 )", "matt horwich", "decision ( unanimous )", "shark fights 17 : horwich vs rosholt 2", "3", "5:00", "frisco , texas , united states"], ["nc", "11 - 3 ( 1 )", "john ott", "no contest ( illegal knee )", "titan fighting championships 18", "3", "4:23", "kansas city , kansas , united states"], ["win", "11 - 3", "john malbrough", "submission ( arm - triangle choke )", "cowboy mma : caged cowboys", "1", "1:42", "ponca city , oklahoma , united states"], ["win", "10 - 3", "brandon mcdowell", "tko ( punches )", "back alley promotions", "1", "1:36", "arlington , texas , united states"], ["win", "9 - 3", "john bryant", "technical submission ( rear - naked choke )", "bellator 37", "1", "1:02", "concho , oklahoma , united states"], ["win", "8 - 3", "josh smidt", "submission ( guillotine choke )", "c3 fights : slamfest", "1", "1:41", "newkirk , oklahoma , united states"], ["loss", "7 - 3", "matt horwich", "tko ( punches )", "xtreme fight night : rosholt vs horwich", "3", "2:56", "tulsa , oklahoma , united states"], ["win", "7 - 2", "rudy lindsey", "submission ( rear - naked choke )", "xfl : march badness", "1", "2:37", "tulsa , oklahoma , united states"], ["loss", "6 - 2", "kendall grove", "submission ( triangle choke )", "ufc 106", "1", "3:59", "las vegas , nevada , united states"], ["win", "6 - 1", "chris leben", "technical submission ( arm - triangle choke )", "ufc 102", "3", "1:30", "portland , oregon , united states"], ["loss", "5 - 1", "dan miller", "submission ( guillotine choke )", "ufc fight night : lauzon vs stephens", "1", "1:03", "tampa , florida , united states"], ["win", "5 - 0", "nissen osterneck", "tko ( punches )", "wec 36", "2", "3:48", "hollywood , florida , united states"], ["win", "4 - 0", "chad jay", "tko ( punches )", "xtreme fighting league", "3", "2:37", "tulsa , oklahoma , united states"], ["win", "3 - 0", "jeremiah caves", "tko ( punches )", "hrp : fight night", "1", "1:42", "tulsa , oklahoma , united states"], ["win", "2 - 0", "christopher clark", "tko ( punches )", "masters of the cage 16", "3", "2:37", "oklahoma city , oklahoma , united states"], ["win", "1 - 0", "dusty miller", "submission ( guillotine choke )", "masters of the cage 15", "1", "3:40", "oklahoma city , oklahoma , united states"]], "query": "most_eq { all_rows ; res ; win } = true", "question": "the majority of jake rosholt 's fights were wins for jake rosholt ."}, {"topic": "outline of hungary", "wiki": "https://en.wikipedia.org/wiki/Outline_of_Hungary", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16278825-1.html.csv", "action": "unique", "sent": "the county of borsod - aba\u00faj - zempl\u00e9n is the only one with more than 350 towns / villages .", "annotation": {"scope": "all", "row": "4", "col": "6", "col_other": "1", "criterion": "greater_than", "value": "350", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "towns / villages", "350"], "result": null, "ind": 0, "tointer": "select the rows whose towns / villages record is greater than 350 .", "tostr": "filter_greater { all_rows ; towns / villages ; 350 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; towns / villages ; 350 } }", "tointer": "select the rows whose towns / villages record is greater than 350 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "towns / villages", "350"], "result": null, "ind": 0, "tointer": "select the rows whose towns / villages record is greater than 350 .", "tostr": "filter_greater { all_rows ; towns / villages ; 350 }"}, "name of county"], "result": "borsod - aba\u00faj - zempl\u00e9n", "ind": 2, "tostr": "hop { filter_greater { all_rows ; towns / villages ; 350 } ; name of county }"}, "borsod - aba\u00faj - zempl\u00e9n"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; towns / villages ; 350 } ; name of county } ; borsod - aba\u00faj - zempl\u00e9n }", "tointer": "the name of county record of this unqiue row is borsod - aba\u00faj - zempl\u00e9n ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; towns / villages ; 350 } } ; eq { hop { filter_greater { all_rows ; towns / villages ; 350 } ; name of county } ; borsod - aba\u00faj - zempl\u00e9n } } = true", "tointer": "select the rows whose towns / villages record is greater than 350 . there is only one such row in the table . the name of county record of this unqiue row is borsod - aba\u00faj - zempl\u00e9n ."}, "logic_str": "and { only { filter_greater { all_rows ; towns / villages ; 350 } } ; eq { hop { filter_greater { all_rows ; towns / villages ; 350 } ; name of county } ; borsod - aba\u00faj - zempl\u00e9n } } = true", "interpret": "select the rows whose towns / villages record is greater than 350 . there is only one such row in the table . the name of county record of this unqiue row is borsod - aba\u00faj - zempl\u00e9n .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "towns / villages_7": 7, "350_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name of county_9": 9, "borsod - aba\u00faj - zempl\u00e9n_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "towns / villages_7": "towns / villages", "350_8": "350", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name of county_9": "name of county", "borsod - aba\u00faj - zempl\u00e9n_10": "borsod - aba\u00faj - zempl\u00e9n"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "towns / villages_7": [0], "350_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name of county_9": [2], "borsod - aba\u00faj - zempl\u00e9n_10": [3]}, "table_header": ["name of county", "county seat", "area ( km square )", "population", "population density", "towns / villages"], "table_cont": [["b\u00e1cs - kiskun", "kecskem\u00e9t", "8445", "541584", "64", "119"], ["baranya", "p\u00e9cs", "4430", "402260", "91", "301"], ["b\u00e9k\u00e9s", "b\u00e9k\u00e9scsaba", "5631", "392845", "70", "75"], ["borsod - aba\u00faj - zempl\u00e9n", "miskolc", "7247", "739143", "102", "355"], ["csongr\u00e1d", "szeged", "4263", "425785", "100", "60"], ["fej\u00e9r", "sz\u00e9kesfeh\u00e9rv\u00e1r", "4359", "428579", "98", "108"], ["gy\u0151r - moson - sopron", "gy\u0151r", "4208", "440138", "105", "182"], ["hajd\u00fa - bihar", "debrecen", "6211", "550265", "89", "82"], ["heves", "eger", "3637", "323769", "89", "119"], ["j\u00e1sz - nagykun - szolnok", "szolnok", "5582", "413174", "74", "75"], ["kom\u00e1rom - esztergom", "tatab\u00e1nya", "2265", "315886", "139", "76"], ["n\u00f3gr\u00e1d", "salg\u00f3tarj\u00e1n", "2546", "218218", "86", "129"], ["pest", "budapest", "6393", "1124395", "176", "186"], ["somogy", "kaposv\u00e1r", "6036", "334065", "55", "244"], ["szabolcs - szatm\u00e1r - bereg", "ny\u00edregyh\u00e1za", "5936", "583564", "98", "228"], ["tolna", "szeksz\u00e1rd", "3703", "247287", "67", "108"], ["vas", "szombathely", "3336", "266342", "80", "216"], ["veszpr\u00e9m", "veszpr\u00e9m", "4493", "368519", "82", "217"]], "query": "and { only { filter_greater { all_rows ; towns / villages ; 350 } } ; eq { hop { filter_greater { all_rows ; towns / villages ; 350 } ; name of county } ; borsod - aba\u00faj - zempl\u00e9n } } = true", "question": "the county of borsod - aba\u00faj - zempl\u00e9n is the only one with more than 350 towns / villages ."}, {"topic": "max snegirev", "wiki": "https://en.wikipedia.org/wiki/Max_Snegirev", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26815674-1.html.csv", "action": "majority", "sent": "for max snegirev , in most seasons he did n't have any podiums .", "annotation": {"scope": "all", "col": "7", "most_or_all": "most", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "podiums", "0"], "result": true, "ind": 0, "tointer": "for the podiums records of all rows , most of them are equal to 0 .", "tostr": "most_eq { all_rows ; podiums ; 0 } = true"}, "logic_str": "most_eq { all_rows ; podiums ; 0 } = true", "interpret": "for the podiums records of all rows , most of them are equal to 0 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "podiums_3": 3, "0_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "podiums_3": "podiums", "0_4": "0"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "podiums_3": [0], "0_4": [0]}, "table_header": ["season", "series", "team name", "races", "wins", "poles", "podiums", "points", "final placing"], "table_cont": [["2007", "formula palmer audi", "audi russia motorsport", "20", "0", "0", "0", "74", "19th"], ["2007", "formula palmer audi autumn trophy", "audi russia motorsport", "6", "0", "0", "0", "41", "12th"], ["2008", "formula palmer audi", "audi russia motorsport", "20", "0", "0", "0", "137", "11th"], ["2008", "formula palmer audi autumn trophy", "audi russia motorsport", "6", "0", "0", "0", "42", "10th"], ["2008", "formula renault uk winter series", "falcon motorsport", "2", "0", "0", "0", "10", "22nd"], ["2009", "british formula three national class", "team west - tec", "16", "0", "0", "4", "108", "4th"], ["2009", "formula renault uk", "tempus sport", "2", "0", "0", "0", "0", "32nd"], ["2009", "formula palmer audi", "audi russia motorsport", "1", "0", "0", "0", "5", "33rd"], ["2010", "british formula three", "fortec motorsport", "30", "0", "0", "0", "1", "18th"], ["2010", "formula palmer audi", "motorsport vision", "7", "1", "0", "3", "104", "13th"], ["2011", "fia formula two championship", "motorsport vision", "16", "0", "0", "0", "14", "18th"], ["2011", "british formula three", "hitech racing", "9", "0", "0", "0", "2", "24th"], ["2012", "auto gp world series", "campos racing", "14", "0", "0", "0", "34", "13th"]], "query": "most_eq { all_rows ; podiums ; 0 } = true", "question": "for max snegirev , in most seasons he did n't have any podiums ."}, {"topic": "list of inter milan records and statistics", "wiki": "https://en.wikipedia.org/wiki/List_of_Inter_Milan_records_and_statistics", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17160236-2.html.csv", "action": "unique", "sent": "benito lorenzi is the only one in the inter milan records and statistics to begin in 1947 .", "annotation": {"scope": "all", "row": "6", "col": "3", "col_other": "2", "criterion": "equal", "value": "1947", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "years", "1947"], "result": null, "ind": 0, "tointer": "select the rows whose years record is equal to 1947 .", "tostr": "filter_eq { all_rows ; years ; 1947 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; years ; 1947 } }", "tointer": "select the rows whose years record is equal to 1947 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "years", "1947"], "result": null, "ind": 0, "tointer": "select the rows whose years record is equal to 1947 .", "tostr": "filter_eq { all_rows ; years ; 1947 }"}, "name"], "result": "benito lorenzi", "ind": 2, "tostr": "hop { filter_eq { all_rows ; years ; 1947 } ; name }"}, "benito lorenzi"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; years ; 1947 } ; name } ; benito lorenzi }", "tointer": "the name record of this unqiue row is benito lorenzi ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; years ; 1947 } } ; eq { hop { filter_eq { all_rows ; years ; 1947 } ; name } ; benito lorenzi } } = true", "tointer": "select the rows whose years record is equal to 1947 . there is only one such row in the table . the name record of this unqiue row is benito lorenzi ."}, "logic_str": "and { only { filter_eq { all_rows ; years ; 1947 } } ; eq { hop { filter_eq { all_rows ; years ; 1947 } ; name } ; benito lorenzi } } = true", "interpret": "select the rows whose years record is equal to 1947 . there is only one such row in the table . the name record of this unqiue row is benito lorenzi .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "years_7": 7, "1947_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "benito lorenzi_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "years_7": "years", "1947_8": "1947", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "benito lorenzi_10": "benito lorenzi"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "years_7": [0], "1947_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "benito lorenzi_10": [3]}, "table_header": ["rank", "name", "years", "league", "total"], "table_cont": [["1", "giuseppe meazza", "1927 - 1940 1946 - 1947", "247", "284"], ["2", "alessandro altobelli", "1977 - 1988", "128", "209"], ["3", "roberto boninsegna", "1969 - 1976", "113", "171"], ["4", "sandro mazzola", "1960 - 1977", "116", "160"], ["5", "luigi cevenini", "1912 - 1915 1919 - 1921 1922 - 1927", "158", "158"], ["6", "benito lorenzi", "1947 - 1958", "138", "143"], ["7", "istv\u00e1n nyers", "1948 - 1954", "133", "133"], ["8", "christian vieri", "1999 - 2005", "103", "123"], ["9", "ermanno aebi", "1909 - 1915 1919 - 1923", "106", "106"], ["10", "mario corso", "1958 - 1973", "75", "94"]], "query": "and { only { filter_eq { all_rows ; years ; 1947 } } ; eq { hop { filter_eq { all_rows ; years ; 1947 } ; name } ; benito lorenzi } } = true", "question": "benito lorenzi is the only one in the inter milan records and statistics to begin in 1947 ."}, {"topic": "bears - packers rivalry", "wiki": "https://en.wikipedia.org/wiki/Bears%E2%80%93Packers_rivalry", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11650849-12.html.csv", "action": "superlative", "sent": "the highest attendance at a game between the bears and packers was at the game on november 16 , 2008 .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "17", "value_mentioned": "no", "max_or_min": "max", "other_col": "1,2", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance }"}, "year"], "result": "2008", "ind": 1, "tostr": "hop { argmax { all_rows ; attendance } ; year }"}, "2008"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; attendance } ; year } ; 2008 }", "tointer": "select the row whose attendance record of all rows is maximum . the year record of this row is 2008 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance }"}, "date"], "result": "sunday , november 16", "ind": 3, "tostr": "hop { argmax { all_rows ; attendance } ; date }"}, "sunday , november 16"], "result": true, "ind": 4, "tostr": "eq { hop { argmax { all_rows ; attendance } ; date } ; sunday , november 16 }", "tointer": "the date record of this row is sunday , november 16 ."}], "result": true, "ind": 5, "tostr": "and { eq { hop { argmax { all_rows ; attendance } ; year } ; 2008 } ; eq { hop { argmax { all_rows ; attendance } ; date } ; sunday , november 16 } } = true", "tointer": "select the row whose attendance record of all rows is maximum . the year record of this row is 2008 . the date record of this row is sunday , november 16 ."}, "logic_str": "and { eq { hop { argmax { all_rows ; attendance } ; year } ; 2008 } ; eq { hop { argmax { all_rows ; attendance } ; date } ; sunday , november 16 } } = true", "interpret": "select the row whose attendance record of all rows is maximum . the year record of this row is 2008 . the date record of this row is sunday , november 16 .", "num_func": 7, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_2": 2, "num_hop_1": 1, "argmax_0": 0, "all_rows_7": 7, "attendance_8": 8, "year_9": 9, "2008_10": 10, "str_eq_4": 4, "str_hop_3": 3, "date_11": 11, "sunday , november 16_12": 12}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_2": "eq", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_7": "all_rows", "attendance_8": "attendance", "year_9": "year", "2008_10": "2008", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "date_11": "date", "sunday , november 16_12": "sunday , november 16"}, "g_adj": {"and_5": [6], "result_6": [], "eq_2": [5], "num_hop_1": [2], "argmax_0": [1, 3], "all_rows_7": [0], "attendance_8": [0], "year_9": [1], "2008_10": [2], "str_eq_4": [5], "str_hop_3": [4], "date_11": [3], "sunday , november 16_12": [4]}, "table_header": ["year", "date", "winner", "result", "loser", "attendance", "location"], "table_cont": [["2000", "sunday , october 1", "chicago bears", "27 - 24", "green bay packers", "59869", "green bay"], ["2000", "sunday , december 3", "green bay packers", "28 - 6", "chicago bears", "66994", "chicago"], ["2001", "sunday , november 11", "green bay packers", "20 - 12", "chicago bears", "66944", "chicago"], ["2001", "sunday , december 9", "green bay packers", "17 - 7", "chicago bears", "59869", "green bay"], ["2002", "monday , october 7", "green bay packers", "34 - 21", "chicago bears", "63226", "champaign"], ["2002", "sunday , december 1", "green bay packers", "30 - 20", "chicago bears", "64196", "green bay"], ["2003", "monday , september 29", "green bay packers", "38 - 23", "chicago bears", "61500", "chicago"], ["2003", "sunday , december 7", "green bay packers", "34 - 21", "chicago bears", "70458", "green bay"], ["2004", "sunday , september 19", "chicago bears", "21 - 10", "green bay packers", "70688", "green bay"], ["2005", "sunday , january 2", "green bay packers", "31 - 14", "chicago bears", "62197", "chicago"], ["2005", "sunday , december 4", "chicago bears", "19 - 7", "green bay packers", "62177", "chicago"], ["2005", "sunday , december 25", "chicago bears", "24 - 17", "green bay packers", "69757", "green bay"], ["2006", "sunday , september 10", "chicago bears", "26 - 0", "green bay packers", "70918", "green bay"], ["2006", "sunday , december 31", "green bay packers", "26 - 7", "chicago bears", "62287", "chicago"], ["2007", "sunday , october 7", "chicago bears", "27 - 20", "green bay packers", "70904", "green bay"], ["2007", "sunday , december 23", "chicago bears", "35 - 7", "green bay packers", "62272", "chicago"], ["2008", "sunday , november 16", "green bay packers", "37 - 3", "chicago bears", "71040", "green bay"], ["2008", "monday , december 22", "chicago bears", "20 - 17", "green bay packers", "62151", "chicago"], ["2009", "sunday , september 13", "green bay packers", "21 - 15", "chicago bears", "70920", "green bay"], ["2009", "sunday , december 13", "green bay packers", "21 - 14", "chicago bears", "62214", "chicago"]], "query": "and { eq { hop { argmax { all_rows ; attendance } ; year } ; 2008 } ; eq { hop { argmax { all_rows ; attendance } ; date } ; sunday , november 16 } } = true", "question": "the highest attendance at a game between the bears and packers was at the game on november 16 , 2008 ."}, {"topic": "1979 vfl season", "wiki": "https://en.wikipedia.org/wiki/1979_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10823719-15.html.csv", "action": "unique", "sent": "the only match not played on 14 july was played the next day on 15 july .", "annotation": {"scope": "all", "row": "6", "col": "7", "col_other": "n/a", "criterion": "not_equal", "value": "14 july 1979", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "date", "14 july 1979"], "result": null, "ind": 0, "tointer": "select the rows whose date record does not match to 14 july 1979 .", "tostr": "filter_not_eq { all_rows ; date ; 14 july 1979 }"}], "result": true, "ind": 1, "tostr": "only { filter_not_eq { all_rows ; date ; 14 july 1979 } } = true", "tointer": "select the rows whose date record does not match to 14 july 1979 . there is only one such row in the table ."}, "logic_str": "only { filter_not_eq { all_rows ; date ; 14 july 1979 } } = true", "interpret": "select the rows whose date record does not match to 14 july 1979 . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_not_eq_0": 0, "all_rows_3": 3, "date_4": 4, "14 july 1979_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_not_eq_0": "filter_str_not_eq", "all_rows_3": "all_rows", "date_4": "date", "14 july 1979_5": "14 july 1979"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_not_eq_0": [1], "all_rows_3": [0], "date_4": [0], "14 july 1979_5": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["melbourne", "24.23 ( 167 )", "south melbourne", "24.10 ( 154 )", "mcg", "15039", "14 july 1979"], ["footscray", "24.16 ( 160 )", "st kilda", "11.15 ( 81 )", "western oval", "13386", "14 july 1979"], ["collingwood", "10.16 ( 76 )", "north melbourne", "20.13 ( 133 )", "victoria park", "30415", "14 july 1979"], ["carlton", "18.18 ( 126 )", "essendon", "12.11 ( 83 )", "princes park", "44661", "14 july 1979"], ["hawthorn", "11.13 ( 79 )", "geelong", "11.12 ( 78 )", "vfl park", "20777", "14 july 1979"], ["richmond", "22.20 ( 152 )", "fitzroy", "20.15 ( 135 )", "scg", "17140", "15 july 1979"]], "query": "only { filter_not_eq { all_rows ; date ; 14 july 1979 } } = true", "question": "the only match not played on 14 july was played the next day on 15 july ."}, {"topic": "italy in the eurovision song contest 2011", "wiki": "https://en.wikipedia.org/wiki/Italy_in_the_Eurovision_Song_Contest_2011", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29857115-4.html.csv", "action": "comparative", "sent": "micaela finshed in a higher position than serena abrami for italy .", "annotation": {"row_1": "2", "row_2": "4", "col": "1", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "singer", "micaela"], "result": null, "ind": 0, "tointer": "select the rows whose singer record fuzzily matches to micaela .", "tostr": "filter_eq { all_rows ; singer ; micaela }"}, "position"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; singer ; micaela } ; position }", "tointer": "select the rows whose singer record fuzzily matches to micaela . take the position record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "singer", "serena abrami"], "result": null, "ind": 1, "tointer": "select the rows whose singer record fuzzily matches to serena abrami .", "tostr": "filter_eq { all_rows ; singer ; serena abrami }"}, "position"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; singer ; serena abrami } ; position }", "tointer": "select the rows whose singer record fuzzily matches to serena abrami . take the position record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; singer ; micaela } ; position } ; hop { filter_eq { all_rows ; singer ; serena abrami } ; position } } = true", "tointer": "select the rows whose singer record fuzzily matches to micaela . take the position record of this row . select the rows whose singer record fuzzily matches to serena abrami . take the position record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; singer ; micaela } ; position } ; hop { filter_eq { all_rows ; singer ; serena abrami } ; position } } = true", "interpret": "select the rows whose singer record fuzzily matches to micaela . take the position record of this row . select the rows whose singer record fuzzily matches to serena abrami . take the position record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "singer_7": 7, "micaela_8": 8, "position_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "singer_11": 11, "serena abrami_12": 12, "position_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "singer_7": "singer", "micaela_8": "micaela", "position_9": "position", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "singer_11": "singer", "serena abrami_12": "serena abrami", "position_13": "position"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "singer_7": [0], "micaela_8": [0], "position_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "singer_11": [1], "serena abrami_12": [1], "position_13": [3]}, "table_header": ["position", "singer", "2nd evening", "3rd evening", "4th evening", "5th evening"], "table_cont": [["1", "raphael gualazzi", "pass", "n / a", "1st place", "selected as esc entrant"], ["2", "micaela", "n / a", "pass", "2nd place", "n / a"], ["3", "roberto amad\u00e3 \u00a8", "n / a", "pass", "3rd place", "n / a"], ["4", "serena abrami", "pass", "n / a", "4th place", "n / a"], ["5 - 8", "anansi", "out", "out", "out", "n / a"], ["5 - 8", "gabriella ferrone", "out", "out", "out", "n / a"], ["5 - 8", "marco menichini", "n / a", "out", "out", "n / a"]], "query": "less { hop { filter_eq { all_rows ; singer ; micaela } ; position } ; hop { filter_eq { all_rows ; singer ; serena abrami } ; position } } = true", "question": "micaela finshed in a higher position than serena abrami for italy ."}, {"topic": "list of k league 40 - 40 club members", "wiki": "https://en.wikipedia.org/wiki/List_of_K_League_40-40_club_members", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14904515-1.html.csv", "action": "comparative", "sent": "eninho has received 51 goals when compared to ko jeong - woon who has scored 42 goals in k league 40 .", "annotation": {"row_1": "11", "row_2": "1", "col": "3", "col_other": "1", "relation": "greater", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "eninho"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to eninho .", "tostr": "filter_eq { all_rows ; name ; eninho }"}, "goals"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; eninho } ; goals }", "tointer": "select the rows whose name record fuzzily matches to eninho . take the goals record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "ko jeong - woon"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to ko jeong - woon .", "tostr": "filter_eq { all_rows ; name ; ko jeong - woon }"}, "goals"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals }", "tointer": "select the rows whose name record fuzzily matches to ko jeong - woon . take the goals record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } }", "tointer": "select the rows whose name record fuzzily matches to eninho . take the goals record of this row . select the rows whose name record fuzzily matches to ko jeong - woon . take the goals record of this row . the first record is greater than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "eninho"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to eninho .", "tostr": "filter_eq { all_rows ; name ; eninho }"}, "goals"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; eninho } ; goals }", "tointer": "select the rows whose name record fuzzily matches to eninho . take the goals record of this row ."}, "51"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; 51 }", "tointer": "the goals record of the first row is 51 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "ko jeong - woon"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to ko jeong - woon .", "tostr": "filter_eq { all_rows ; name ; ko jeong - woon }"}, "goals"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals }", "tointer": "select the rows whose name record fuzzily matches to ko jeong - woon . take the goals record of this row ."}, "42"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } ; 42 }", "tointer": "the goals record of the second row is 42 ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; 51 } ; eq { hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } ; 42 } }", "tointer": "the goals record of the first row is 51 . the goals record of the second row is 42 ."}], "result": true, "ind": 8, "tostr": "and { greater { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } } ; and { eq { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; 51 } ; eq { hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } ; 42 } } } = true", "tointer": "select the rows whose name record fuzzily matches to eninho . take the goals record of this row . select the rows whose name record fuzzily matches to ko jeong - woon . take the goals record of this row . the first record is greater than the second record . the goals record of the first row is 51 . the goals record of the second row is 42 ."}, "logic_str": "and { greater { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } } ; and { eq { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; 51 } ; eq { hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } ; 42 } } } = true", "interpret": "select the rows whose name record fuzzily matches to eninho . take the goals record of this row . select the rows whose name record fuzzily matches to ko jeong - woon . take the goals record of this row . the first record is greater than the second record . the goals record of the first row is 51 . the goals record of the second row is 42 .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "greater_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "name_11": 11, "eninho_12": 12, "goals_13": 13, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "name_15": 15, "ko jeong - woon_16": 16, "goals_17": 17, "and_7": 7, "eq_5": 5, "51_18": 18, "eq_6": 6, "42_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "greater_4": "greater", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "eninho_12": "eninho", "goals_13": "goals", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "name_15": "name", "ko jeong - woon_16": "ko jeong - woon", "goals_17": "goals", "and_7": "and", "eq_5": "eq", "51_18": "51", "eq_6": "eq", "42_19": "42"}, "g_adj": {"and_8": [9], "result_9": [], "greater_4": [8], "num_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "name_11": [0], "eninho_12": [0], "goals_13": [2], "num_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "name_15": [1], "ko jeong - woon_16": [1], "goals_17": [3], "and_7": [8], "eq_5": [7], "51_18": [5], "eq_6": [7], "42_19": [6]}, "table_header": ["name", "date", "goals", "assists", "team", "venue", "opponent", "competition", "total goals", "total assists"], "table_cont": [["ko jeong - woon", "1998 - 09 - 05", "42", "40", "pohang steelers", "pohang", "chunnam dragons", "k - league", "55", "48"], ["kim hyun - seok", "1998 - 10 - 10", "89", "40", "ulsan hyundai horang - i", "pohang", "pohang steelers", "k - league", "110", "54"], ["shin tae - yong", "2000 - 09 - 03", "72", "40", "seongnam ilhwa chunma", "mokdong", "bucheon sk", "k - league", "99", "68"], ["lee sang - yoon", "2001 - 04 - 29", "70", "40", "bucheon sk", "bucheon", "daejeon citizen", "k - league cup", "71", "43"], ["roh sang - rae", "2003 - 04 - 27", "72", "40", "daegu fc", "daegu", "busan i ' cons", "k - league", "76", "40"], ["denis laktionov", "2003 - 08 - 27", "45", "40", "seongnam ilhwa chunma", "busan", "busan i ' cons", "k - league", "57", "59"], ["kim do - hoon", "2005 - 08 - 31", "113", "40", "seongnam ilhwa chunma", "seongnam", "incheon united", "k - league", "114", "41"], ["woo sung - yong", "2007 - 10 - 22", "109", "40", "ulsan hyundai horang - i", "ulsan", "daejeon citizen", "k - league", "116", "43"], ["kim dae - eui", "2010 - 05 - 29", "51", "40", "suwon samsung bluewings", "suwon", "gangwon fc", "k - league cup", "51", "41"], ["kim eun - jung", "2010 - 08 - 28", "91", "40", "jeju united", "daejeon", "daejeon citizen", "k - league", "119", "54"], ["eninho", "2010 - 11 - 20", "51", "40", "jeonbuk hyundai motors", "jeonju", "gyeongnam fc", "championship", "80", "60"], ["lee dong - gook", "2011 - 07 - 03", "109", "40", "jeonbuk hyundai motors", "jeonju", "fc seoul", "k - league", "141", "53"], ["mauricio molina", "2012 - 11 - 15", "49", "40", "fc seoul", "seoul", "ulsan hyundai", "k - league", "50", "42"], ["hwang jin - sung", "2012 - 11 - 29", "40", "51", "pohang steelers", "pohang", "fc seoul", "k - league", "41", "51"]], "query": "and { greater { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } } ; and { eq { hop { filter_eq { all_rows ; name ; eninho } ; goals } ; 51 } ; eq { hop { filter_eq { all_rows ; name ; ko jeong - woon } ; goals } ; 42 } } } = true", "question": "eninho has received 51 goals when compared to ko jeong - woon who has scored 42 goals in k league 40 ."}, {"topic": "2008 fresno state bulldogs baseball team", "wiki": "https://en.wikipedia.org/wiki/2008_Fresno_State_Bulldogs_baseball_team", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18025024-7.html.csv", "action": "count", "sent": "all seven of the 2008 fresno state bulldogs baseball games were played at rosenblatt stadium .", "annotation": {"scope": "all", "criterion": "equal", "value": "rosenblatt stadium", "result": "7", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "site / stadium", "rosenblatt stadium"], "result": null, "ind": 0, "tointer": "select the rows whose site / stadium record fuzzily matches to rosenblatt stadium .", "tostr": "filter_eq { all_rows ; site / stadium ; rosenblatt stadium }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; site / stadium ; rosenblatt stadium } }", "tointer": "select the rows whose site / stadium record fuzzily matches to rosenblatt stadium . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; site / stadium ; rosenblatt stadium } } ; 7 } = true", "tointer": "select the rows whose site / stadium record fuzzily matches to rosenblatt stadium . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; site / stadium ; rosenblatt stadium } } ; 7 } = true", "interpret": "select the rows whose site / stadium record fuzzily matches to rosenblatt stadium . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "site / stadium_5": 5, "rosenblatt stadium_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "site / stadium_5": "site / stadium", "rosenblatt stadium_6": "rosenblatt stadium", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "site / stadium_5": [0], "rosenblatt stadium_6": [0], "7_7": [2]}, "table_header": ["date", "opponent", "score", "site / stadium", "loss", "save", "attendance", "overall record", "ncaat record"], "table_cont": [["june 15", "rice", "17 - 5", "rosenblatt stadium", "berry ( 8 - 5 )", "none", "18108", "43 - 29", "6 - 2"], ["june 17", "north carolina", "5 - 3", "rosenblatt stadium", "warren ( 9 - 2 )", "burke ( 13 )", "23314", "44 - 29", "7 - 2"], ["june 21", "north carolina", "4 - 3", "rosenblatt stadium", "miller ( 6 - 4 )", "none", "18611", "44 - 30", "7 - 3"], ["june 22", "north carolina", "6 - 1", "rosenblatt stadium", "moran ( 1 - 2 )", "none", "15125", "45 - 30", "8 - 3"], ["june 23", "georgia", "7 - 6", "rosenblatt stadium", "burke ( 4 - 6 )", "fields ( 18 )", "19559", "45 - 31", "8 - 4"], ["june 24", "georgia", "19 - 10", "rosenblatt stadium", "dodson ( 5 - 5 )", "hower ( 1 )", "17223", "46 - 31", "9 - 4"], ["june 25", "georgia", "6 - 1", "rosenblatt stadium", "moreau ( 4 - 4 )", "none", "18932", "47 - 31", "10 - 4"]], "query": "eq { count { filter_eq { all_rows ; site / stadium ; rosenblatt stadium } } ; 7 } = true", "question": "all seven of the 2008 fresno state bulldogs baseball games were played at rosenblatt stadium ."}, {"topic": "oumar tchomogo", "wiki": "https://en.wikipedia.org/wiki/Oumar_Tchomogo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1663052-1.html.csv", "action": "aggregation", "sent": "oumar tchomogo 's average winning score during competitions in 2003 was 3 .", "annotation": {"scope": "subset", "col": "3", "type": "average", "result": "3", "subset": {"col": "1", "criterion": "fuzzily_match", "value": "2003"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "2003"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; 2003 }", "tointer": "select the rows whose date record fuzzily matches to 2003 ."}, "score"], "result": "3", "ind": 1, "tostr": "avg { filter_eq { all_rows ; date ; 2003 } ; score }"}, "3"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; date ; 2003 } ; score } ; 3 } = true", "tointer": "select the rows whose date record fuzzily matches to 2003 . the average of the score record of these rows is 3 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; date ; 2003 } ; score } ; 3 } = true", "interpret": "select the rows whose date record fuzzily matches to 2003 . the average of the score record of these rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "2003_6": 6, "score_7": 7, "3_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "2003_6": "2003", "score_7": "score", "3_8": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "2003_6": [0], "score_7": [1], "3_8": [2]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["8 september 2002", "stade ren\u00e9 pleven d'akpakpa , cotonou , benin", "4 - 0", "win", "2004 african cup of nations qualification"], ["2003", "cotonou , benin", "3 - 0", "win", "2004 african cup of nations qualification"], ["16 november 2003", "stade de l'amiti\u00e9 , cotonou , benin", "3 - 2", "win", "2006 fifa world cup qualification"], ["4 july 2004", "stade de l'amiti\u00e9 , cotonou , benin", "3 - 3", "win", "2006 fifa world cup qualification"], ["12 october 2007", "national stadium , freetown , sierra leone", "2 - 0", "win", "2008 africa cup of nations qualification"], ["8 june 2008", "stade de l'amiti\u00e9 , cotonou , benin", "4 - 1", "win", "2010 fifa world cup qualification"]], "query": "round_eq { avg { filter_eq { all_rows ; date ; 2003 } ; score } ; 3 } = true", "question": "oumar tchomogo 's average winning score during competitions in 2003 was 3 ."}, {"topic": "1932 vfl season", "wiki": "https://en.wikipedia.org/wiki/1932_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10790099-4.html.csv", "action": "unique", "sent": "the match that took place at arden street oval was the only match with a crowd of over 20,000 people .", "annotation": {"scope": "all", "row": "1", "col": "6", "col_other": "5", "criterion": "greater_than", "value": "20000", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "crowd", "20000"], "result": null, "ind": 0, "tointer": "select the rows whose crowd record is greater than 20000 .", "tostr": "filter_greater { all_rows ; crowd ; 20000 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; crowd ; 20000 } }", "tointer": "select the rows whose crowd record is greater than 20000 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "crowd", "20000"], "result": null, "ind": 0, "tointer": "select the rows whose crowd record is greater than 20000 .", "tostr": "filter_greater { all_rows ; crowd ; 20000 }"}, "venue"], "result": "arden street oval", "ind": 2, "tostr": "hop { filter_greater { all_rows ; crowd ; 20000 } ; venue }"}, "arden street oval"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; crowd ; 20000 } ; venue } ; arden street oval }", "tointer": "the venue record of this unqiue row is arden street oval ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; crowd ; 20000 } } ; eq { hop { filter_greater { all_rows ; crowd ; 20000 } ; venue } ; arden street oval } } = true", "tointer": "select the rows whose crowd record is greater than 20000 . there is only one such row in the table . the venue record of this unqiue row is arden street oval ."}, "logic_str": "and { only { filter_greater { all_rows ; crowd ; 20000 } } ; eq { hop { filter_greater { all_rows ; crowd ; 20000 } ; venue } ; arden street oval } } = true", "interpret": "select the rows whose crowd record is greater than 20000 . there is only one such row in the table . the venue record of this unqiue row is arden street oval .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "crowd_7": 7, "20000_8": 8, "str_eq_3": 3, "str_hop_2": 2, "venue_9": 9, "arden street oval_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "crowd_7": "crowd", "20000_8": "20000", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "venue_9": "venue", "arden street oval_10": "arden street oval"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "crowd_7": [0], "20000_8": [0], "str_eq_3": [4], "str_hop_2": [3], "venue_9": [2], "arden street oval_10": [3]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["north melbourne", "9.16 ( 70 )", "south melbourne", "11.7 ( 73 )", "arden street oval", "23000", "21 may 1932"], ["footscray", "6.12 ( 48 )", "richmond", "7.9 ( 51 )", "western oval", "19000", "21 may 1932"], ["collingwood", "14.22 ( 106 )", "fitzroy", "11.9 ( 75 )", "victoria park", "17000", "21 may 1932"], ["carlton", "16.16 ( 112 )", "hawthorn", "7.7 ( 49 )", "princes park", "16000", "21 may 1932"], ["st kilda", "7.15 ( 57 )", "essendon", "12.15 ( 87 )", "junction oval", "16000", "21 may 1932"], ["geelong", "20.13 ( 133 )", "melbourne", "14.11 ( 95 )", "motordrome", "7000", "21 may 1932"]], "query": "and { only { filter_greater { all_rows ; crowd ; 20000 } } ; eq { hop { filter_greater { all_rows ; crowd ; 20000 } ; venue } ; arden street oval } } = true", "question": "the match that took place at arden street oval was the only match with a crowd of over 20,000 people ."}, {"topic": "1979 - 80 philadelphia flyers season", "wiki": "https://en.wikipedia.org/wiki/1979%E2%80%9380_Philadelphia_Flyers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14208862-7.html.csv", "action": "unique", "sent": "the march 11th game had the lowest attendance and the only time under 10000 .", "annotation": {"scope": "all", "row": "7", "col": "6", "col_other": "1", "criterion": "less_than", "value": "10000", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "attendance", "10000"], "result": null, "ind": 0, "tointer": "select the rows whose attendance record is less than 10000 .", "tostr": "filter_less { all_rows ; attendance ; 10000 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; attendance ; 10000 } }", "tointer": "select the rows whose attendance record is less than 10000 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "attendance", "10000"], "result": null, "ind": 0, "tointer": "select the rows whose attendance record is less than 10000 .", "tostr": "filter_less { all_rows ; attendance ; 10000 }"}, "date"], "result": "march 11", "ind": 2, "tostr": "hop { filter_less { all_rows ; attendance ; 10000 } ; date }"}, "march 11"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; attendance ; 10000 } ; date } ; march 11 }", "tointer": "the date record of this unqiue row is march 11 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_less { all_rows ; attendance ; 10000 } } ; eq { hop { filter_less { all_rows ; attendance ; 10000 } ; date } ; march 11 } } = true", "tointer": "select the rows whose attendance record is less than 10000 . there is only one such row in the table . the date record of this unqiue row is march 11 ."}, "logic_str": "and { only { filter_less { all_rows ; attendance ; 10000 } } ; eq { hop { filter_less { all_rows ; attendance ; 10000 } ; date } ; march 11 } } = true", "interpret": "select the rows whose attendance record is less than 10000 . there is only one such row in the table . the date record of this unqiue row is march 11 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_less_0": 0, "all_rows_6": 6, "attendance_7": 7, "10000_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "march 11_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_6": "all_rows", "attendance_7": "attendance", "10000_8": "10000", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "march 11_10": "march 11"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_less_0": [1, 2], "all_rows_6": [0], "attendance_7": [0], "10000_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "march 11_10": [3]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["march 1", "philadelphia", "3 - 3", "toronto", "myre", "16485", "41 - 5 - 15"], ["march 2", "montreal", "5 - 1", "philadelphia", "peeters", "17077", "41 - 6 - 15"], ["march 4", "colorado", "1 - 4", "philadelphia", "peeters", "17007", "42 - 6 - 15"], ["march 6", "ny islanders", "5 - 2", "philadelphia", "myre", "17077", "42 - 7 - 15"], ["march 8", "philadelphia", "6 - 2", "minnesota", "peeters", "15701", "43 - 7 - 15"], ["march 9", "edmonton", "3 - 5", "philadelphia", "myre", "17077", "44 - 7 - 15"], ["march 11", "philadelphia", "4 - 3", "pittsburgh", "peeters", "9972", "45 - 7 - 15"], ["march 12", "philadelphia", "6 - 6", "chicago", "myre", "17306", "45 - 7 - 16"], ["march 15", "philadelphia", "3 - 4", "atlanta", "peeters", "15156", "45 - 8 - 16"], ["march 16", "colorado", "4 - 4", "philadelphia", "myre", "17077", "45 - 8 - 17"], ["march 20", "toronto", "3 - 0", "philadelphia", "peeters", "17077", "45 - 9 - 17"], ["march 21", "philadelphia", "5 - 5", "hartford", "myre", "14460", "45 - 9 - 18"], ["march 23", "philadelphia", "2 - 7", "boston", "peeters", "14673", "45 - 10 - 18"], ["march 25", "philadelphia", "2 - 5", "ny islanders", "myre", "14995", "45 - 11 - 18"], ["march 27", "quebec", "2 - 5", "philadelphia", "peeters", "17077", "46 - 11 - 18"], ["march 29", "philadelphia", "3 - 3", "washington", "myre", "18130", "46 - 11 - 19"], ["march 30", "atlanta", "2 - 4", "philadelphia", "peeters", "17077", "47 - 11 - 19"]], "query": "and { only { filter_less { all_rows ; attendance ; 10000 } } ; eq { hop { filter_less { all_rows ; attendance ; 10000 } ; date } ; march 11 } } = true", "question": "the march 11th game had the lowest attendance and the only time under 10000 ."}, {"topic": "1969 player 's county league", "wiki": "https://en.wikipedia.org/wiki/1969_Player%27s_County_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-28797906-3.html.csv", "action": "superlative", "sent": "in the 1969 player 's county league , keith boyce bowled the most balls .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "balls"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; balls }"}, "player"], "result": "keith boyce", "ind": 1, "tostr": "hop { argmax { all_rows ; balls } ; player }"}, "keith boyce"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; balls } ; player } ; keith boyce } = true", "tointer": "select the row whose balls record of all rows is maximum . the player record of this row is keith boyce ."}, "logic_str": "eq { hop { argmax { all_rows ; balls } ; player } ; keith boyce } = true", "interpret": "select the row whose balls record of all rows is maximum . the player record of this row is keith boyce .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "balls_5": 5, "player_6": 6, "keith boyce_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "balls_5": "balls", "player_6": "player", "keith boyce_7": "keith boyce"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "balls_5": [0], "player_6": [1], "keith boyce_7": [2]}, "table_header": ["player", "county", "balls", "wickets", "average", "economy", "bbi", "4wi", "5wi"], "table_cont": [["keith boyce", "essex", "708", "26", "12.00", "2.54", "3 / 15", "0", "0"], ["peter sainsbury", "hampshire", "644", "28", "13.96", "3.64", "4 / 23", "2", "0"], ["stuart turner", "essex", "639", "27", "14.85", "3.76", "4 / 14", "1", "0"], ["ken higgs", "lancashire", "673", "26", "15.23", "3.53", "4 / 22", "1", "0"], ["ray east", "essex", "660", "29", "15.24", "4.01", "6 / 18", "0", "2"], ["butch white", "hampshire", "698", "26", "17.92", "4.00", "5 / 31", "1", "1"]], "query": "eq { hop { argmax { all_rows ; balls } ; player } ; keith boyce } = true", "question": "in the 1969 player 's county league , keith boyce bowled the most balls ."}, {"topic": "list of european ultra prominent peaks", "wiki": "https://en.wikipedia.org/wiki/List_of_European_ultra_prominent_peaks", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18918776-7.html.csv", "action": "comparative", "sent": "pietrosul rodnei 's peak is at an elevation that is lower than that of moldoveanu peak .", "annotation": {"row_1": "5", "row_2": "3", "col": "3", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "peak", "pietrosul rodnei"], "result": null, "ind": 0, "tointer": "select the rows whose peak record fuzzily matches to pietrosul rodnei .", "tostr": "filter_eq { all_rows ; peak ; pietrosul rodnei }"}, "elevation ( m )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; peak ; pietrosul rodnei } ; elevation ( m ) }", "tointer": "select the rows whose peak record fuzzily matches to pietrosul rodnei . take the elevation ( m ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "peak", "moldoveanu peak"], "result": null, "ind": 1, "tointer": "select the rows whose peak record fuzzily matches to moldoveanu peak .", "tostr": "filter_eq { all_rows ; peak ; moldoveanu peak }"}, "elevation ( m )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; peak ; moldoveanu peak } ; elevation ( m ) }", "tointer": "select the rows whose peak record fuzzily matches to moldoveanu peak . take the elevation ( m ) record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; peak ; pietrosul rodnei } ; elevation ( m ) } ; hop { filter_eq { all_rows ; peak ; moldoveanu peak } ; elevation ( m ) } } = true", "tointer": "select the rows whose peak record fuzzily matches to pietrosul rodnei . take the elevation ( m ) record of this row . select the rows whose peak record fuzzily matches to moldoveanu peak . take the elevation ( m ) record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; peak ; pietrosul rodnei } ; elevation ( m ) } ; hop { filter_eq { all_rows ; peak ; moldoveanu peak } ; elevation ( m ) } } = true", "interpret": "select the rows whose peak record fuzzily matches to pietrosul rodnei . take the elevation ( m ) record of this row . select the rows whose peak record fuzzily matches to moldoveanu peak . take the elevation ( m ) record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "peak_7": 7, "pietrosul rodnei_8": 8, "elevation (m)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "peak_11": 11, "moldoveanu peak_12": 12, "elevation (m)_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "peak_7": "peak", "pietrosul rodnei_8": "pietrosul rodnei", "elevation (m)_9": "elevation ( m )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "peak_11": "peak", "moldoveanu peak_12": "moldoveanu peak", "elevation (m)_13": "elevation ( m )"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "peak_7": [0], "pietrosul rodnei_8": [0], "elevation (m)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "peak_11": [1], "moldoveanu peak_12": [1], "elevation (m)_13": [3]}, "table_header": ["peak", "country", "elevation ( m )", "prominence ( m )", "col ( m )"], "table_cont": [["gerlachovsk\u00fd \u0161t\u00edt", "slovakia", "2655", "2355", "300"], ["parngu mare", "romania", "2519", "2103", "416"], ["moldoveanu peak", "romania", "2544", "2046", "498"], ["peleaga", "romania", "2509", "1759", "750"], ["pietrosul rodnei", "romania", "2303", "1565", "738"]], "query": "less { hop { filter_eq { all_rows ; peak ; pietrosul rodnei } ; elevation ( m ) } ; hop { filter_eq { all_rows ; peak ; moldoveanu peak } ; elevation ( m ) } } = true", "question": "pietrosul rodnei 's peak is at an elevation that is lower than that of moldoveanu peak ."}, {"topic": "papal conclave , 1389", "wiki": "https://en.wikipedia.org/wiki/Papal_conclave%2C_1389", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12141437-1.html.csv", "action": "majority", "sent": "urban vi was the elevator for all of the electors in the 1389 papal conclave .", "annotation": {"scope": "all", "col": "5", "most_or_all": "all", "criterion": "equal", "value": "urban vi", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "elevator", "urban vi"], "result": true, "ind": 0, "tointer": "for the elevator records of all rows , all of them fuzzily match to urban vi .", "tostr": "all_eq { all_rows ; elevator ; urban vi } = true"}, "logic_str": "all_eq { all_rows ; elevator ; urban vi } = true", "interpret": "for the elevator records of all rows , all of them fuzzily match to urban vi .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "elevator_3": 3, "urban vi_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "elevator_3": "elevator", "urban vi_4": "urban vi"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "elevator_3": [0], "urban vi_4": [0]}, "table_header": ["elector", "order", "title", "elevated", "elevator"], "table_cont": [["francesco moricotti prignani", "cardinal - bishop", "bishop of palestrina", "1378 , september 18", "urban vi"], ["andrea bontempi martini", "cardinal - priest", "titulus ss marcellino e pietro", "1378 , september 18", "urban vi"], ["poncello orsini", "cardinal - priest", "titulus s clemente", "1378 , september 18", "urban vi"], ["pietro tomacelli", "cardinal - priest", "titulus s anastasia", "1381 , december 21", "urban vi"], ["angelo acciaioli", "cardinal - priest", "titulus s lorenzo in damaso", "1384 , december 17", "urban vi"], ["francesco carbone tomacelli , ocist", "cardinal - priest", "titulus s susanna", "1384 , december 17", "urban vi"], ["stefano palosio", "cardinal - priest", "titulus s marcello", "1384 , december 17", "urban vi"], ["tommaso orsini dei conti di manupello", "cardinal - deacon", "deacon of s maria in domnica", "circa 13831379", "urban vi"], ["francesco renzio", "cardinal - deacon", "deacon of s eustachio", "1381 , december 21", "urban vi"], ["marino bulcani", "cardinal - deacon", "deacon of s maria nuova", "1384 , december 17", "urban vi"], ["rinaldo brancaccio", "cardinal - deacon", "deacon of ss vito e modesto", "1384 , december 17", "urban vi"], ["ludovico fieschi", "cardinal - deacon", "deacon of s adriano", "1384 , december 17", "urban vi"], ["angelo d'anna de sommariva , ocamald", "cardinal - deacon", "deacon of s lucia in septisolio", "1384 , december 17", "urban vi"]], "query": "all_eq { all_rows ; elevator ; urban vi } = true", "question": "urban vi was the elevator for all of the electors in the 1389 papal conclave ."}, {"topic": "deccan chargers", "wiki": "https://en.wikipedia.org/wiki/Deccan_Chargers", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15868081-6.html.csv", "action": "aggregation", "sent": "the average number of wins for the deccan chargers is approximately 10.9 .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "10.9", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "wins"], "result": "10.9", "ind": 0, "tostr": "avg { all_rows ; wins }"}, "10.9"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; wins } ; 10.9 } = true", "tointer": "the average of the wins record of all rows is 10.9 ."}, "logic_str": "round_eq { avg { all_rows ; wins } ; 10.9 } = true", "interpret": "the average of the wins record of all rows is 10.9 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "wins_4": 4, "10.9_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "wins_4": "wins", "10.9_5": "10.9"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "wins_4": [0], "10.9_5": [1]}, "table_header": ["played", "wins", "losses", "tied", "win %"], "table_cont": [["ipl", "ipl", "ipl", "ipl", "ipl"], ["14", "2", "12", "0", "14 %"], ["16", "9", "7", "0", "56 %"], ["16", "8", "8", "0", "50 %"], ["14", "6", "8", "0", "42 %"], ["15", "4", "11", "0", "26.67 %"], ["75", "29", "46", "0", "38.67 %"], ["2", "0", "2", "0", "0 %"], ["77", "29", "48", "0", "37.67 %"]], "query": "round_eq { avg { all_rows ; wins } ; 10.9 } = true", "question": "the average number of wins for the deccan chargers is approximately 10.9 ."}, {"topic": "great northeast athletic conference", "wiki": "https://en.wikipedia.org/wiki/Great_Northeast_Athletic_Conference", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1973816-1.html.csv", "action": "unique", "sent": "norwich university is the only military type college in the great northeast athletic conference .", "annotation": {"scope": "all", "row": "7", "col": "5", "col_other": "1", "criterion": "fuzzily_match", "value": "military", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "type", "military"], "result": null, "ind": 0, "tointer": "select the rows whose type record fuzzily matches to military .", "tostr": "filter_eq { all_rows ; type ; military }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; type ; military } }", "tointer": "select the rows whose type record fuzzily matches to military . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "type", "military"], "result": null, "ind": 0, "tointer": "select the rows whose type record fuzzily matches to military .", "tostr": "filter_eq { all_rows ; type ; military }"}, "institution"], "result": "norwich university", "ind": 2, "tostr": "hop { filter_eq { all_rows ; type ; military } ; institution }"}, "norwich university"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; type ; military } ; institution } ; norwich university }", "tointer": "the institution record of this unqiue row is norwich university ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; type ; military } } ; eq { hop { filter_eq { all_rows ; type ; military } ; institution } ; norwich university } } = true", "tointer": "select the rows whose type record fuzzily matches to military . there is only one such row in the table . the institution record of this unqiue row is norwich university ."}, "logic_str": "and { only { filter_eq { all_rows ; type ; military } } ; eq { hop { filter_eq { all_rows ; type ; military } ; institution } ; norwich university } } = true", "interpret": "select the rows whose type record fuzzily matches to military . there is only one such row in the table . the institution record of this unqiue row is norwich university .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "type_7": 7, "military_8": 8, "str_eq_3": 3, "str_hop_2": 2, "institution_9": 9, "norwich university_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "type_7": "type", "military_8": "military", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "institution_9": "institution", "norwich university_10": "norwich university"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "type_7": [0], "military_8": [0], "str_eq_3": [4], "str_hop_2": [3], "institution_9": [2], "norwich university_10": [3]}, "table_header": ["institution", "location", "nickname", "founded", "type", "enrollment", "joined"], "table_cont": [["albertus magnus college", "new haven , connecticut", "falcons", "1925", "private ( catholic )", "1769", "1995"], ["anna maria college", "paxton , massachusetts", "amcats", "1946", "private ( catholic )", "1244", "2011"], ["emmanuel college 2", "boston , massachusetts", "saints", "1919", "private ( catholic )", "2350", "1995"], ["johnson & wales university", "providence , rhode island", "wildcats", "1914", "private", "16000", "1995"], ["lasell college", "newton , massachusetts", "lasers", "1851", "private", "1200", "2007"], ["mount ida college", "newton , massachusetts", "mustangs", "1899", "private", "1300", "2007"], ["norwich university", "northfield , vermont", "cadets", "1819", "private ( military )", "3000", "1998"], ["rivier university", "nashua , new hampshire", "raiders", "1933", "private ( catholic )", "2300", "1995"], ["university of saint joseph 1", "west hartford , connecticut", "blue jays", "1932", "private ( catholic )", "1020", "1995"], ["saint joseph 's college of maine", "standish , maine", "monks", "1912", "private ( catholic )", "1034", "2007"], ["simmons college 1", "boston , massachusetts", "sharks", "1899", "private", "4912", "1995"]], "query": "and { only { filter_eq { all_rows ; type ; military } } ; eq { hop { filter_eq { all_rows ; type ; military } ; institution } ; norwich university } } = true", "question": "norwich university is the only military type college in the great northeast athletic conference ."}, {"topic": "seat toledo", "wiki": "https://en.wikipedia.org/wiki/SEAT_Toledo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1176162-3.html.csv", "action": "aggregation", "sent": "for the seat toledo , the average top speed was 202.86 kilometers per hour .", "annotation": {"scope": "all", "col": "7", "type": "average", "result": "202.86", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "top speed ( km / h )"], "result": "202.86", "ind": 0, "tostr": "avg { all_rows ; top speed ( km / h ) }"}, "202.86"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; top speed ( km / h ) } ; 202.86 } = true", "tointer": "the average of the top speed ( km / h ) record of all rows is 202.86 ."}, "logic_str": "round_eq { avg { all_rows ; top speed ( km / h ) } ; 202.86 } = true", "interpret": "the average of the top speed ( km / h ) record of all rows is 202.86 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "top speed (km / h)_4": 4, "202.86_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "top speed (km / h)_4": "top speed ( km / h )", "202.86_5": "202.86"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "top speed (km / h)_4": [0], "202.86_5": [1]}, "table_header": ["model", "cylinders / valves", "displacement cc", "max power kw ( ps ) at rpm", "max torque ( nm ) at rpm", "engine code", "top speed ( km / h )", "production period"], "table_cont": [["1.4 16v", "r4 / 16", "1390", "55 ( 75 ) / 5000", "126 / 3800", "ahw / axp / akq / ape / aua / bca", "170", "1999 - 2004"], ["1.6", "r4 / 8", "1595", "74 ( 101 ) / 5600", "145 / 3800", "akl / aeh / apf", "188", "1999 - 2000"], ["1.6 16v", "r4 / 16", "1598", "77 ( 105 ) / 5700", "148 / 4500", "aus / azd / atn / bcb", "192", "2000 - 2004"], ["1.8 20v", "r4 / 20", "1781", "92 ( 125 ) / 6000", "170 / 4200", "agn / apg", "200", "1999 - 2003"], ["1.8 20v", "r4 / 20", "1781", "132 ( 180 ) / 5500", "235 / 1950 - 5000", "auq", "229", "2003 - 2004"], ["2.3 v5", "vr5 / 10", "2324", "110 ( 150 ) / 6000", "205 / 3200", "agz", "216", "1999 - 2000"], ["2.3 v5", "vr5 / 20", "2324", "125 ( 170 ) / 6200", "225 / 3300", "aqn", "225", "2000 - 2003"]], "query": "round_eq { avg { all_rows ; top speed ( km / h ) } ; 202.86 } = true", "question": "for the seat toledo , the average top speed was 202.86 kilometers per hour ."}, {"topic": "list of six feet under episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_Six_Feet_Under_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2182654-3.html.csv", "action": "unique", "sent": "out , out brief candle is the only six feet under episode written by kathy bates .", "annotation": {"scope": "all", "row": "2", "col": "4", "col_other": "3", "criterion": "equal", "value": "kathy bates", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "directed by", "kathy bates"], "result": null, "ind": 0, "tointer": "select the rows whose directed by record fuzzily matches to kathy bates .", "tostr": "filter_eq { all_rows ; directed by ; kathy bates }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; directed by ; kathy bates } }", "tointer": "select the rows whose directed by record fuzzily matches to kathy bates . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "directed by", "kathy bates"], "result": null, "ind": 0, "tointer": "select the rows whose directed by record fuzzily matches to kathy bates .", "tostr": "filter_eq { all_rows ; directed by ; kathy bates }"}, "title"], "result": "out , out brief candle", "ind": 2, "tostr": "hop { filter_eq { all_rows ; directed by ; kathy bates } ; title }"}, "out , out brief candle"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; directed by ; kathy bates } ; title } ; out , out brief candle }", "tointer": "the title record of this unqiue row is out , out brief candle ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; directed by ; kathy bates } } ; eq { hop { filter_eq { all_rows ; directed by ; kathy bates } ; title } ; out , out brief candle } } = true", "tointer": "select the rows whose directed by record fuzzily matches to kathy bates . there is only one such row in the table . the title record of this unqiue row is out , out brief candle ."}, "logic_str": "and { only { filter_eq { all_rows ; directed by ; kathy bates } } ; eq { hop { filter_eq { all_rows ; directed by ; kathy bates } ; title } ; out , out brief candle } } = true", "interpret": "select the rows whose directed by record fuzzily matches to kathy bates . there is only one such row in the table . the title record of this unqiue row is out , out brief candle .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "directed by_7": 7, "kathy bates_8": 8, "str_eq_3": 3, "str_hop_2": 2, "title_9": 9, "out , out brief candle_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "directed by_7": "directed by", "kathy bates_8": "kathy bates", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "title_9": "title", "out , out brief candle_10": "out , out brief candle"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "directed by_7": [0], "kathy bates_8": [0], "str_eq_3": [4], "str_hop_2": [3], "title_9": [2], "out , out brief candle_10": [3]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "original air date"], "table_cont": [["14", "1", "in the game", "rodrigo garc\u00e3\u00ada", "alan ball", "march 3 , 2002"], ["15", "2", "out , out brief candle", "kathy bates", "laurence andries", "march 10 , 2002"], ["16", "3", "the plan", "rose troche", "kate robin", "march 17 , 2002"], ["17", "4", "driving mr mossback", "michael cuesta", "rick cleveland", "march 24 , 2002"], ["18", "5", "the invisible woman", "jeremy podeswa", "bruce eric kaplan", "march 31 , 2002"], ["19", "6", "in place of anger", "michael engler", "christian taylor", "april 7 , 2002"], ["20", "7", "back to the garden", "dan attias", "jill soloway", "april 14 , 2002"], ["21", "8", "it 's the most wonderful time of the year", "alan taylor", "scott buck", "april 21 , 2002"], ["22", "9", "someone else 's eyes", "michael cuesta", "alan ball", "april 28 , 2002"], ["23", "10", "the secret", "alan poul", "bruce eric kaplan", "may 5 , 2002"], ["24", "11", "the liar and the whore", "miguel arteta", "rick cleveland", "may 12 , 2002"], ["25", "12", "i 'll take you", "michael engler", "jill soloway", "may 19 , 2002"]], "query": "and { only { filter_eq { all_rows ; directed by ; kathy bates } } ; eq { hop { filter_eq { all_rows ; directed by ; kathy bates } ; title } ; out , out brief candle } } = true", "question": "out , out brief candle is the only six feet under episode written by kathy bates ."}, {"topic": "united states house of representatives elections , 1978", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1978", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341663-26.html.csv", "action": "majority", "sent": "all of the incumbents in the united states house of representatives were re-elected in the 1978 election .", "annotation": {"scope": "all", "col": "5", "most_or_all": "all", "criterion": "equal", "value": "re - elected", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "result", "re - elected"], "result": true, "ind": 0, "tointer": "for the result records of all rows , all of them fuzzily match to re - elected .", "tostr": "all_eq { all_rows ; result ; re - elected } = true"}, "logic_str": "all_eq { all_rows ; result ; re - elected } = true", "interpret": "for the result records of all rows , all of them fuzzily match to re - elected .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "re - elected_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "re - elected_4": "re - elected"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "re - elected_4": [0]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["missouri 2", "robert a young", "democratic", "1976", "re - elected", "robert a young ( d ) 56.4 % bob chase ( r ) 43.6 %"], ["missouri 3", "dick gephardt", "democratic", "1976", "re - elected", "dick gephardt ( d ) 81.9 % lee buchschacher ( r ) 18.1 %"], ["missouri 4", "ike skelton", "democratic", "1976", "re - elected", "ike skelton ( d ) 72.8 % bill baker ( r ) 27.2 %"], ["missouri 7", "gene taylor", "republican", "1972", "re - elected", "gene taylor ( r ) 61.2 % jim thomas ( d ) 38.8 %"], ["missouri 9", "harold volkmer", "democratic", "1976", "re - elected", "harold volkmer ( d ) 74.7 % jerry dent ( r ) 25.3 %"]], "query": "all_eq { all_rows ; result ; re - elected } = true", "question": "all of the incumbents in the united states house of representatives were re-elected in the 1978 election ."}, {"topic": "randy lajoie", "wiki": "https://en.wikipedia.org/wiki/Randy_LaJoie", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2182562-1.html.csv", "action": "unique", "sent": "the only time that randy lajoie earned more than 300,000 was in 1998 .", "annotation": {"scope": "all", "row": "8", "col": "9", "col_other": "1", "criterion": "greater_than", "value": "300000", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "winnings", "300000"], "result": null, "ind": 0, "tointer": "select the rows whose winnings record is greater than 300000 .", "tostr": "filter_greater { all_rows ; winnings ; 300000 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; winnings ; 300000 } }", "tointer": "select the rows whose winnings record is greater than 300000 . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "winnings", "300000"], "result": null, "ind": 0, "tointer": "select the rows whose winnings record is greater than 300000 .", "tostr": "filter_greater { all_rows ; winnings ; 300000 }"}, "year"], "result": "1998", "ind": 2, "tostr": "hop { filter_greater { all_rows ; winnings ; 300000 } ; year }"}, "1998"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; winnings ; 300000 } ; year } ; 1998 }", "tointer": "the year record of this unqiue row is 1998 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; winnings ; 300000 } } ; eq { hop { filter_greater { all_rows ; winnings ; 300000 } ; year } ; 1998 } } = true", "tointer": "select the rows whose winnings record is greater than 300000 . there is only one such row in the table . the year record of this unqiue row is 1998 ."}, "logic_str": "and { only { filter_greater { all_rows ; winnings ; 300000 } } ; eq { hop { filter_greater { all_rows ; winnings ; 300000 } ; year } ; 1998 } } = true", "interpret": "select the rows whose winnings record is greater than 300000 . there is only one such row in the table . the year record of this unqiue row is 1998 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "winnings_7": 7, "300000_8": 8, "eq_3": 3, "num_hop_2": 2, "year_9": 9, "1998_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "winnings_7": "winnings", "300000_8": "300000", "eq_3": "eq", "num_hop_2": "num_hop", "year_9": "year", "1998_10": "1998"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "winnings_7": [0], "300000_8": [0], "eq_3": [4], "num_hop_2": [3], "year_9": [2], "1998_10": [3]}, "table_header": ["year", "starts", "wins", "top 5", "top 10", "poles", "avg start", "avg finish", "winnings", "position", "team ( s )"], "table_cont": [["1985", "1", "0", "0", "0", "0", "16.0", "14.0", "2925", "101st", "07 bob johnson racing"], ["1986", "1", "0", "0", "0", "0", "20.0", "29.0", "1815", "107th", "07 bob johnson racing"], ["1988", "1", "0", "0", "0", "0", "29.0", "37.0", "1460", "97th", "74 wawak racing"], ["1989", "1", "0", "0", "0", "0", "32.0", "28.0", "2725", "83rd", "63 linro motorsports"], ["1990", "2", "0", "0", "0", "0", "33.0", "35.5", "6675", "73rd", "13 linro motorsports"], ["1994", "3", "0", "0", "0", "0", "20.3", "19.7", "30565", "48th", "20 moroso racing 02 tw taylor"], ["1995", "14", "0", "0", "0", "0", "29.4", "27.4", "281945", "40th", "22 bill davis racing 40 brooks / sabco racing"], ["1998", "9", "0", "1", "3", "0", "25.3", "26.2", "336905", "49th", "50 hendrick motorsports"], ["1999", "2", "0", "0", "0", "0", "19.0", "38.5", "71200", "61st", "14 no fear racing"], ["2004", "3", "0", "0", "0", "0", "41.0", "40.3", "160261", "68th", "80 hover motorsports 98 mach 1 motorsports"]], "query": "and { only { filter_greater { all_rows ; winnings ; 300000 } } ; eq { hop { filter_greater { all_rows ; winnings ; 300000 } ; year } ; 1998 } } = true", "question": "the only time that randy lajoie earned more than 300,000 was in 1998 ."}, {"topic": "1942 vfl season", "wiki": "https://en.wikipedia.org/wiki/1942_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10807990-12.html.csv", "action": "majority", "sent": "the majority of the attendances at the games listed in the 1942 vfl season was over 6000 .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "greater_than", "value": "6000", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "crowd", "6000"], "result": true, "ind": 0, "tointer": "for the crowd records of all rows , most of them are greater than 6000 .", "tostr": "most_greater { all_rows ; crowd ; 6000 } = true"}, "logic_str": "most_greater { all_rows ; crowd ; 6000 } = true", "interpret": "for the crowd records of all rows , most of them are greater than 6000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "crowd_3": 3, "6000_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "crowd_3": "crowd", "6000_4": "6000"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "crowd_3": [0], "6000_4": [0]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["footscray", "19.15 ( 129 )", "richmond", "17.20 ( 122 )", "yarraville oval", "15000", "25 july 1942"], ["collingwood", "9.15 ( 69 )", "south melbourne", "15.21 ( 111 )", "victoria park", "8000", "25 july 1942"], ["north melbourne", "9.10 ( 64 )", "hawthorn", "6.16 ( 52 )", "arden street oval", "3000", "25 july 1942"], ["st kilda", "10.13 ( 73 )", "fitzroy", "12.14 ( 86 )", "toorak park", "8000", "25 july 1942"], ["melbourne", "14.20 ( 104 )", "essendon", "12.12 ( 84 )", "punt road oval", "6000", "25 july 1942"]], "query": "most_greater { all_rows ; crowd ; 6000 } = true", "question": "the majority of the attendances at the games listed in the 1942 vfl season was over 6000 ."}, {"topic": "forbes global 2000", "wiki": "https://en.wikipedia.org/wiki/Forbes_Global_2000", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1682026-7.html.csv", "action": "ordinal", "sent": "of the companies in the forbes global 2000 , the 2nd highest amount of profits is for royal dutch shell .", "annotation": {"row": "8", "col": "6", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "profits ( billion )", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; profits ( billion ) ; 2 }"}, "company"], "result": "royal dutch shell", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; profits ( billion ) ; 2 } ; company }"}, "royal dutch shell"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; profits ( billion ) ; 2 } ; company } ; royal dutch shell } = true", "tointer": "select the row whose profits ( billion ) record of all rows is 2nd maximum . the company record of this row is royal dutch shell ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; profits ( billion ) ; 2 } ; company } ; royal dutch shell } = true", "interpret": "select the row whose profits ( billion ) record of all rows is 2nd maximum . the company record of this row is royal dutch shell .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "profits (billion )_5": 5, "2_6": 6, "company_7": 7, "royal dutch shell_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "profits (billion )_5": "profits ( billion )", "2_6": "2", "company_7": "company", "royal dutch shell_8": "royal dutch shell"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "profits (billion )_5": [0], "2_6": [0], "company_7": [1], "royal dutch shell_8": [2]}, "table_header": ["rank", "company", "headquarters", "industry", "sales ( billion )", "profits ( billion )", "assets ( billion )", "market value ( billion )"], "table_cont": [["1", "citigroup", "usa", "banking", "146.56", "21.54", "1884.32", "247.42"], ["2", "bank of america", "usa", "banking", "116.57", "21.13", "1459.74", "226.61"], ["3", "hsbc", "uk", "banking", "121.51", "16.63", "1860.76", "202.29"], ["4", "general electric", "usa", "conglomerate", "163.39", "20.83", "697.24", "358.98"], ["5", "jpmorgan chase", "usa", "banking", "99.30", "14.44", "1351.52", "170.97"], ["6", "american international group", "usa", "insurance", "113.19", "14.01", "979.41", "174.47"], ["7", "exxonmobil", "usa", "oil and gas", "335.09", "39.50", "223.95", "410.65"], ["8", "royal dutch shell", "netherlands", "oil and gas", "318.85", "25.44", "232.31", "208.25"], ["9", "ubs", "switzerland", "diversified financials", "105.59", "9.78", "1776.89", "116.84"], ["10", "ing group", "netherlands", "diversified financials", "153.44", "9.65", "1615.05", "93.99"], ["11", "bp", "uk", "oil and gas", "265.91", "22.29", "217.60", "198.14"], ["12", "toyota", "japan", "automotive", "179.02", "11.68", "243.60", "217.69"], ["13", "the royal bank of scotland", "uk", "banking", "77.41", "12.51", "1705.35", "124.13"], ["14", "bnp paribas", "france", "banking", "89.16", "9.64", "1898.19", "97.03"], ["15", "allianz", "germany", "insurance", "125.33", "8.81", "1380.88", "87.22"], ["16", "berkshire hathaway", "usa", "diversified financials", "98.54", "11.02", "248.44", "163.79"], ["17", "walmart", "usa", "retailing", "348.65", "11.29", "151.19", "201.36"], ["18", "barclays", "uk", "banking", "67.71", "8.95", "1949.17", "94.79"], ["19", "chevron", "usa", "oil and gas", "195.34", "17.14", "132.63", "149.37"]], "query": "eq { hop { nth_argmax { all_rows ; profits ( billion ) ; 2 } ; company } ; royal dutch shell } = true", "question": "of the companies in the forbes global 2000 , the 2nd highest amount of profits is for royal dutch shell ."}, {"topic": "list of bavarian locomotives and railbuses", "wiki": "https://en.wikipedia.org/wiki/List_of_Bavarian_locomotives_and_railbuses", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17941795-5.html.csv", "action": "ordinal", "sent": "the second greatest quantity of bavarian locomotives and railbuses made were in class pt 2 / 3 .", "annotation": {"row": "9", "col": "3", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "quantity", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; quantity ; 2 }"}, "class"], "result": "pt 2 / 3", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; quantity ; 2 } ; class }"}, "pt 2 / 3"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; quantity ; 2 } ; class } ; pt 2 / 3 } = true", "tointer": "select the row whose quantity record of all rows is 2nd maximum . the class record of this row is pt 2 / 3 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; quantity ; 2 } ; class } ; pt 2 / 3 } = true", "interpret": "select the row whose quantity record of all rows is 2nd maximum . the class record of this row is pt 2 / 3 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "quantity_5": 5, "2_6": 6, "class_7": 7, "pt 2 / 3_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "quantity_5": "quantity", "2_6": "2", "class_7": "class", "pt 2 / 3_8": "pt 2 / 3"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "quantity_5": [0], "2_6": [0], "class_7": [1], "pt 2 / 3_8": [2]}, "table_header": ["class", "number ( s )", "quantity", "year ( s ) of manufacture", "type"], "table_cont": [["d i", "names", "15", "1871 - 1875", "b n2t"], ["d ii ( old )", "names", "4", "1873", "b n2t"], ["d ii", "2400 - 2472", "73", "1898 - 1904", "c n2t"], ["d iii", "names", "6", "1873", "b n2t"], ["d iv", "names , 1701 - 1737", "132", "1875 - 1897", "b n2t"], ["d v", "names", "10", "1877 - 1878", "c n2t"], ["d ix", "names , 1931 - 1960 , 2101 - 2115", "55", "1888 - 1899", "1b n2t"], ["d xii", "2201 - 2296", "96", "1897 - 1904", "1 \u2032 b2 \u2032 n2t"], ["pt 2 / 3", "6001 - 6097", "97", "1909 - 1916", "1b h2t"], ["pt 2 / 4 n", "6501 - 6502", "2", "1909", "2 \u2032 b n2t"], ["pt 2 / 4 h", "5001 - 5012", "12", "1906 - 1909", "1 \u2032 b1 \u2032 h2t"], ["pt 2 / 5 n", "5202 - 5210", "9", "1907", "1 \u2032 b2 \u2032 n2t"], ["pt 2 / 5 h", "5201", "1", "1906", "1 \u2032 b2 \u2032 h2t"], ["pt 3 / 6", "6101 - 6110", "10", "1923", "1 \u2032 c2 \u2032 h2t"], ["gt 2x4 / 4", "5751 - 5765", "15", "1913 - 1914", "d \u2032 d h4vt"], ["gt 2x4 / 4", "5766 - 5775", "10", "1922 - 1923", "d \u2032 d h4vt"], ["r 3 / 3", "2473 - 2490", "18", "1906 - 1913", "c n2t"], ["r 3 / 3", "4701 - 4790", "90", "1921 - 1922", "c n2t"], ["r 4 / 4", "4151 - 4183", "33", "1918 - 1919", "d n2t"], ["r 4 / 4", "4184 - 4192", "9", "1924 - 1925", "d n2t"]], "query": "eq { hop { nth_argmax { all_rows ; quantity ; 2 } ; class } ; pt 2 / 3 } = true", "question": "the second greatest quantity of bavarian locomotives and railbuses made were in class pt 2 / 3 ."}, {"topic": "china open ( badminton )", "wiki": "https://en.wikipedia.org/wiki/China_Open_%28badminton%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12204717-1.html.csv", "action": "count", "sent": "in the china open , chen hong won the mens singles in two different years .", "annotation": {"scope": "all", "criterion": "equal", "value": "chen hong", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "mens singles", "chen hong"], "result": null, "ind": 0, "tointer": "select the rows whose mens singles record fuzzily matches to chen hong .", "tostr": "filter_eq { all_rows ; mens singles ; chen hong }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; mens singles ; chen hong } }", "tointer": "select the rows whose mens singles record fuzzily matches to chen hong . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; mens singles ; chen hong } } ; 2 } = true", "tointer": "select the rows whose mens singles record fuzzily matches to chen hong . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; mens singles ; chen hong } } ; 2 } = true", "interpret": "select the rows whose mens singles record fuzzily matches to chen hong . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "mens singles_5": 5, "chen hong_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "mens singles_5": "mens singles", "chen hong_6": "chen hong", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "mens singles_5": [0], "chen hong_6": [0], "2_7": [2]}, "table_header": ["year", "mens singles", "womens singles", "mens doubles", "womens doubles", "mixed doubles"], "table_cont": [["1991", "alan budi kusuma", "huang hua", "li yongbo tian bingyi", "chung myung - hee hwang hye - young", "liu jianjun wang xiaoyuan"], ["1992", "hermawan susanto", "yao yan", "ricky subagja rexy mainaky", "yao fen lin yanfen", "aryono miranat eliza nathanael"], ["1993", "joko suprianto", "han jingna", "rudy gunawan bambang suprianto", "wu yuhong chen ying", "chen xingdong sun man"], ["1995", "dong jiong", "ye zhaoying", "huang zhanzhong jiang xin", "ge fei gu jun", "peng xinyong chen xingdong"], ["1997", "dong jiong", "gong zhichao", "ge cheng tao xiaoqiang", "ge fei gu jun", "kim dong - moon ra kyung - min"], ["1999", "dong jiong", "zhou mi", "ha tae - kwon kim dong - moon", "ge fei gu jun", "liu yong ge fei"], ["2001", "xia xuanze", "zhou mi", "zhang wei zhang jun", "zhang jiewen wei yili", "liu yong chen lin"], ["2002", "wong choong hann", "gong ruina", "pramote teerawiwatana tesana panvisvas", "gao ling huang sui", "zhang jun gao ling"], ["2003", "lin dan", "zhou mi", "lars paaske jonas rasmussen", "gao ling huang sui", "zhang jun gao ling"], ["2004", "lin dan", "xie xingfang", "candra wijaya sigit budiarto", "yang wei zhang jiewen", "jens eriksen mette schjoldager"], ["2005", "chen hong", "zhang ning", "candra wijaya sigit budiarto", "yang wei zhang jiewen", "nathan robertson gail emms"], ["2006", "chen hong", "zhang ning", "markis kido hendra setiawan", "yang wei zhang jiewen", "xie zhongbo zhang yawen"], ["2007", "bao chunlai", "wong mew choo", "markis kido hendra setiawan", "gao ling zhao tingting", "nova widianto lilyana natsir"], ["2008", "lin dan", "jiang yanjiao", "jung jae - sung lee yong - dae", "zhang yawen zhao tingting", "lee yong - dae lee hyo - jung"], ["2009", "lin dan", "jiang yanjiao", "jung jae - sung lee yong - dae", "tian qing zhang yawen", "lee yong - dae lee hyo - jung"], ["2010", "chen long", "jiang yanjiao", "jung jae - sung lee yong - dae", "cheng shu zhao yunlei", "tao jiaming tian qing"], ["2011", "lin dan", "wang yihan", "mathias boe carsten mogensen", "wang xiaoli yu yang", "zhang nan zhao yunlei"], ["2012", "chen long", "li xuerui", "mathias boe carsten mogensen", "wang xiaoli yu yang", "xu chen ma jin"]], "query": "eq { count { filter_eq { all_rows ; mens singles ; chen hong } } ; 2 } = true", "question": "in the china open , chen hong won the mens singles in two different years ."}, {"topic": "eduardo schwank", "wiki": "https://en.wikipedia.org/wiki/Eduardo_Schwank", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16773017-6.html.csv", "action": "majority", "sent": "the majority of eduardo schwank 's tennis tournaments were on a clay surface .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "clay", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "surface", "clay"], "result": true, "ind": 0, "tointer": "for the surface records of all rows , most of them fuzzily match to clay .", "tostr": "most_eq { all_rows ; surface ; clay } = true"}, "logic_str": "most_eq { all_rows ; surface ; clay } = true", "interpret": "for the surface records of all rows , most of them fuzzily match to clay .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "surface_3": 3, "clay_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "surface_3": "surface", "clay_4": "clay"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "surface_3": [0], "clay_4": [0]}, "table_header": ["date", "tournament", "surface", "opponent", "score"], "table_cont": [["march 27 , 2006", "buenos aires", "clay", "cristian villagr\u00e1n", "4 - 6 , 6 - 3 , 6 - 4"], ["april 24 , 2006", "buenos aires", "clay", "leandro migani", "6 - 3 , 7 - 6"], ["august 7 , 2006", "c\u00f3rdoba", "clay", "leandro migani", "5 - 7 , 6 - 0 , 6 - 0"], ["august 14 , 2006", "mendoza", "clay", "andr\u00e9s molteni", "6 - 4 , 6 - 1"], ["september 11 , 2006", "la paz", "clay", "guillermo carry", "6 - 3 , 6 - 1"], ["september 18 , 2006", "cochabamba", "clay", "mart\u00edn alund", "7 - 6 , 6 - 7 , 7 - 6"], ["april 23 , 2007", "santa fe", "clay", "juan - mart\u00edn aranguren", "6 - 3 , 6 - 2"], ["april 30 , 2007", "buenos aires", "clay", "juan - mart\u00edn aranguren", "6 - 4 , 6 - 4"], ["may 7 , 2007", "tucuman", "clay", "juan pablo amado", "6 - 1 , 6 - 4"], ["october 1 , 2007", "medell\u00edn", "clay", "chris guccione", "7 - 5 , 5 - 7 , 7 - 5"], ["april 21 , 2008", "cremona", "hard", "bj\u00f6rn phau", "6 - 3 , 6 - 4"], ["april 28 , 2008", "rome", "clay", "\u00e9ric prodon", "6 - 3 , 6 - 7 , 7 - 6"], ["may 12 , 2008", "bordeaux", "clay", "igor kunitsyn", "6 - 2 , 6 - 2"], ["october 25 , 2009", "santiago", "clay", "nicol\u00e1s mass\u00fa", "6 - 2 , 6 - 2"], ["november 22 , 2009", "lima", "clay", "jorge aguilar", "7 - 5 , 6 - 4"], ["january 31 , 2010", "bucaramanga", "clay", "juan pablo brzezicki", "6 - 4 , 6 - 2"]], "query": "most_eq { all_rows ; surface ; clay } = true", "question": "the majority of eduardo schwank 's tennis tournaments were on a clay surface ."}, {"topic": "list of derbyshire list a cricket records", "wiki": "https://en.wikipedia.org/wiki/List_of_Derbyshire_List_A_cricket_records", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11241613-4.html.csv", "action": "comparative", "sent": "iain anderson and alan hill scored more runs than chris taylor and ant botha .", "annotation": {"row_1": "2", "row_2": "6", "col": "2", "col_other": "3", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "batsmen", "iain anderson alan hill"], "result": null, "ind": 0, "tointer": "select the rows whose batsmen record fuzzily matches to iain anderson alan hill .", "tostr": "filter_eq { all_rows ; batsmen ; iain anderson alan hill }"}, "runs"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; batsmen ; iain anderson alan hill } ; runs }", "tointer": "select the rows whose batsmen record fuzzily matches to iain anderson alan hill . take the runs record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "batsmen", "chris taylor ant botha"], "result": null, "ind": 1, "tointer": "select the rows whose batsmen record fuzzily matches to chris taylor ant botha .", "tostr": "filter_eq { all_rows ; batsmen ; chris taylor ant botha }"}, "runs"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; batsmen ; chris taylor ant botha } ; runs }", "tointer": "select the rows whose batsmen record fuzzily matches to chris taylor ant botha . take the runs record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; batsmen ; iain anderson alan hill } ; runs } ; hop { filter_eq { all_rows ; batsmen ; chris taylor ant botha } ; runs } } = true", "tointer": "select the rows whose batsmen record fuzzily matches to iain anderson alan hill . take the runs record of this row . select the rows whose batsmen record fuzzily matches to chris taylor ant botha . take the runs record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; batsmen ; iain anderson alan hill } ; runs } ; hop { filter_eq { all_rows ; batsmen ; chris taylor ant botha } ; runs } } = true", "interpret": "select the rows whose batsmen record fuzzily matches to iain anderson alan hill . take the runs record of this row . select the rows whose batsmen record fuzzily matches to chris taylor ant botha . take the runs record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "batsmen_7": 7, "iain anderson alan hill_8": 8, "runs_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "batsmen_11": 11, "chris taylor ant botha_12": 12, "runs_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "batsmen_7": "batsmen", "iain anderson alan hill_8": "iain anderson alan hill", "runs_9": "runs", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "batsmen_11": "batsmen", "chris taylor ant botha_12": "chris taylor ant botha", "runs_13": "runs"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "batsmen_7": [0], "iain anderson alan hill_8": [0], "runs_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "batsmen_11": [1], "chris taylor ant botha_12": [1], "runs_13": [3]}, "table_header": ["wicket partnership", "runs", "batsmen", "opponents", "venue", "season"], "table_cont": [["1st", "232", "kim barnett john morris", "v somerset", "taunton", "1990"], ["2nd", "286", "iain anderson alan hill", "v cornwall", "derby", "1986"], ["3rd", "191", "andrew gait chris bassano", "v glamorgan", "cardiff", "2003"], ["4th", "165", "john morris geoff miller", "v gloucestershire", "gloucestershire", "1984"], ["5th", "158", "kim barnett bruce roberts", "v essex", "derby", "1984"], ["6th", "126", "chris taylor ant botha", "v durham", "derby", "2006"], ["7th", "106", "james bryant graeme welch", "v sussex", "hove", "2004"], ["8th", "95", "adrian rollins phillip defreitas", "v worcestershire", "worcester", "1998"], ["9th", "105", "dallas moir bob taylor", "v kent", "derby", "1984"], ["10th", "60", "kevin dean devon malcolm", "v surrey", "the oval", "1996"]], "query": "greater { hop { filter_eq { all_rows ; batsmen ; iain anderson alan hill } ; runs } ; hop { filter_eq { all_rows ; batsmen ; chris taylor ant botha } ; runs } } = true", "question": "iain anderson and alan hill scored more runs than chris taylor and ant botha ."}, {"topic": "2007 manx grand prix", "wiki": "https://en.wikipedia.org/wiki/2007_Manx_Grand_Prix", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11972799-5.html.csv", "action": "superlative", "sent": "in the 2007 manx gran prix , roy richardson ranked the highest .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmin", "args": ["all_rows", "rank"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; rank }"}, "rank"], "result": "1", "ind": 1, "tostr": "hop { argmin { all_rows ; rank } ; rank }"}, "1"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; rank } ; rank } ; 1 } = true", "tointer": "select the row whose rank record of all rows is minimum . the rank record of this row is 1 ."}, "logic_str": "eq { hop { argmin { all_rows ; rank } ; rank } ; 1 } = true", "interpret": "select the row whose rank record of all rows is minimum . the rank record of this row is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "rank_5": 5, "rank_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "rank_5": "rank", "rank_6": "rank", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "rank_5": [0], "rank_6": [1], "1_7": [2]}, "table_header": ["rank", "rider", "team", "speed", "time"], "table_cont": [["1", "roy richardson", "349cc drixton honda", "101.545 mph", "1:31.04.39"], ["2", "ryan farquhar", "349cc k4 honda", "100.755 mph", "1:29.52.41"], ["3", "chris mcgahan", "350cc honda", "100.238 mph", "1:30.20.24"], ["4", "john goodall", "349cc ajs 7r", "98.191 mph", "1:32.13.21"], ["5", "steve elliot", "349cc honda", "97.573 mph", "1:32.48.24"], ["6", "tony myres", "349cc manx norton", "96.776 mph", "1:34.21.19"], ["7", "rich hawkins", "349cc ducati", "96.672 mph", "1:33.40.14"], ["8", "dave madsen - mygdal", "349cc honda", "94.891 mph", "1:35.25.62"], ["9", "pete swallow", "348cc petty manx", "93.804 mph", "1:36.32.01"], ["10", "andy reynolds", "348cc honda", "93.563 mph", "1:36.46.93"]], "query": "eq { hop { argmin { all_rows ; rank } ; rank } ; 1 } = true", "question": "in the 2007 manx gran prix , roy richardson ranked the highest ."}, {"topic": "ali al saadi", "wiki": "https://en.wikipedia.org/wiki/Ali_Al_Saadi", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17004178-1.html.csv", "action": "ordinal", "sent": "the last competition won by ali al saadi in new delhi was held on 22 august 2009 .", "annotation": {"scope": "subset", "row": "2", "col": "1", "order": "1", "col_other": "n/a", "max_or_min": "max_to_min", "value_mentioned": "yes", "subset": {"col": "2", "criterion": "equal", "value": "new delhi"}}, "logic": {"func": "eq", "args": [{"func": "nth_max", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "new delhi"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; venue ; new delhi }", "tointer": "select the rows whose venue record fuzzily matches to new delhi ."}, "date", "1"], "result": "22 august 2009", "ind": 1, "tostr": "nth_max { filter_eq { all_rows ; venue ; new delhi } ; date ; 1 }", "tointer": "select the rows whose venue record fuzzily matches to new delhi . the 1st maximum date record of these rows is 22 august 2009 ."}, "22 august 2009"], "result": true, "ind": 2, "tostr": "eq { nth_max { filter_eq { all_rows ; venue ; new delhi } ; date ; 1 } ; 22 august 2009 } = true", "tointer": "select the rows whose venue record fuzzily matches to new delhi . the 1st maximum date record of these rows is 22 august 2009 ."}, "logic_str": "eq { nth_max { filter_eq { all_rows ; venue ; new delhi } ; date ; 1 } ; 22 august 2009 } = true", "interpret": "select the rows whose venue record fuzzily matches to new delhi . the 1st maximum date record of these rows is 22 august 2009 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "nth_max_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "venue_5": 5, "new delhi_6": 6, "date_7": 7, "1_8": 8, "22 august 2009_9": 9}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "nth_max_1": "nth_max", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "venue_5": "venue", "new delhi_6": "new delhi", "date_7": "date", "1_8": "1", "22 august 2009_9": "22 august 2009"}, "g_adj": {"eq_2": [3], "result_3": [], "nth_max_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "venue_5": [0], "new delhi_6": [0], "date_7": [1], "1_8": [1], "22 august 2009_9": [2]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["19 august 2009", "new delhi", "1 - 0", "win", "2009 nehru cup"], ["22 august 2009", "new delhi", "3 - 4", "loss", "2009 nehru cup"], ["23 july 2011", "beirut", "4 - 0", "win", "2014 fifa world cup qualification"], ["15 november 2011", "beirut", "2 - 1", "win", "2014 fifa world cup qualification"], ["18 may 2012", "beirut", "1 - 2", "loss", "friendly"], ["8 june 2012", "beirut", "1 - 1", "draw", "2014 fifa world cup qualification"]], "query": "eq { nth_max { filter_eq { all_rows ; venue ; new delhi } ; date ; 1 } ; 22 august 2009 } = true", "question": "the last competition won by ali al saadi in new delhi was held on 22 august 2009 ."}, {"topic": "1983 nhl entry draft", "wiki": "https://en.wikipedia.org/wiki/1983_NHL_Entry_Draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2679061-11.html.csv", "action": "comparative", "sent": "steve pepin is from the chicago blackhawks while john miner is from the edmonton oilers .", "annotation": {"row_1": "17", "row_2": "18", "col": "5", "col_other": "2", "relation": "not_equal", "record_mentioned": "yes", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "not_str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "steve pepin"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to steve pepin .", "tostr": "filter_eq { all_rows ; player ; steve pepin }"}, "nhl team"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team }", "tointer": "select the rows whose player record fuzzily matches to steve pepin . take the nhl team record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "john miner"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to john miner .", "tostr": "filter_eq { all_rows ; player ; john miner }"}, "nhl team"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; john miner } ; nhl team }", "tointer": "select the rows whose player record fuzzily matches to john miner . take the nhl team record of this row ."}], "result": true, "ind": 4, "tostr": "not_eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; hop { filter_eq { all_rows ; player ; john miner } ; nhl team } }", "tointer": "select the rows whose player record fuzzily matches to steve pepin . take the nhl team record of this row . select the rows whose player record fuzzily matches to john miner . take the nhl team record of this row . the first record does not match to the second record ."}, {"func": "and", "args": [{"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "steve pepin"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to steve pepin .", "tostr": "filter_eq { all_rows ; player ; steve pepin }"}, "nhl team"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team }", "tointer": "select the rows whose player record fuzzily matches to steve pepin . take the nhl team record of this row ."}, "chicago black hawks"], "result": true, "ind": 5, "tostr": "eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; chicago black hawks }", "tointer": "the nhl team record of the first row is chicago black hawks ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "john miner"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to john miner .", "tostr": "filter_eq { all_rows ; player ; john miner }"}, "nhl team"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; john miner } ; nhl team }", "tointer": "select the rows whose player record fuzzily matches to john miner . take the nhl team record of this row ."}, "edmonton oilers"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; player ; john miner } ; nhl team } ; edmonton oilers }", "tointer": "the nhl team record of the second row is edmonton oilers ."}], "result": true, "ind": 7, "tostr": "and { eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; chicago black hawks } ; eq { hop { filter_eq { all_rows ; player ; john miner } ; nhl team } ; edmonton oilers } }", "tointer": "the nhl team record of the first row is chicago black hawks . the nhl team record of the second row is edmonton oilers ."}], "result": true, "ind": 8, "tostr": "and { not_eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; hop { filter_eq { all_rows ; player ; john miner } ; nhl team } } ; and { eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; chicago black hawks } ; eq { hop { filter_eq { all_rows ; player ; john miner } ; nhl team } ; edmonton oilers } } } = true", "tointer": "select the rows whose player record fuzzily matches to steve pepin . take the nhl team record of this row . select the rows whose player record fuzzily matches to john miner . take the nhl team record of this row . the first record does not match to the second record . the nhl team record of the first row is chicago black hawks . the nhl team record of the second row is edmonton oilers ."}, "logic_str": "and { not_eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; hop { filter_eq { all_rows ; player ; john miner } ; nhl team } } ; and { eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; chicago black hawks } ; eq { hop { filter_eq { all_rows ; player ; john miner } ; nhl team } ; edmonton oilers } } } = true", "interpret": "select the rows whose player record fuzzily matches to steve pepin . take the nhl team record of this row . select the rows whose player record fuzzily matches to john miner . take the nhl team record of this row . the first record does not match to the second record . the nhl team record of the first row is chicago black hawks . the nhl team record of the second row is edmonton oilers .", "num_func": 13, "nid": 9, "g_ids": {"and_8": 8, "result_9": 9, "not_str_eq_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_10": 10, "player_11": 11, "steve pepin_12": 12, "nhl team_13": 13, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_14": 14, "player_15": 15, "john miner_16": 16, "nhl team_17": 17, "and_7": 7, "str_eq_5": 5, "chicago black hawks_18": 18, "str_eq_6": 6, "edmonton oilers_19": 19}, "g_ids_features": {"and_8": "and", "result_9": "true", "not_str_eq_4": "not_str_eq", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "steve pepin_12": "steve pepin", "nhl team_13": "nhl team", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_14": "all_rows", "player_15": "player", "john miner_16": "john miner", "nhl team_17": "nhl team", "and_7": "and", "str_eq_5": "str_eq", "chicago black hawks_18": "chicago black hawks", "str_eq_6": "str_eq", "edmonton oilers_19": "edmonton oilers"}, "g_adj": {"and_8": [9], "result_9": [], "not_str_eq_4": [8], "str_hop_2": [4, 5], "filter_str_eq_0": [2], "all_rows_10": [0], "player_11": [0], "steve pepin_12": [0], "nhl team_13": [2], "str_hop_3": [4, 6], "filter_str_eq_1": [3], "all_rows_14": [1], "player_15": [1], "john miner_16": [1], "nhl team_17": [3], "and_7": [8], "str_eq_5": [7], "chicago black hawks_18": [5], "str_eq_6": [7], "edmonton oilers_19": [6]}, "table_header": ["pick", "player", "position", "nationality", "nhl team", "college / junior / club team"], "table_cont": [["203", "garth hildebrand", "left wing", "canada", "pittsburgh penguins", "calgary wranglers ( whl )"], ["204", "allan acton", "left wing", "canada", "hartford whalers", "saskatoon blazers ( whl )"], ["205", "alan stewart", "left wing", "canada", "new jersey devils", "prince albert raiders ( whl )"], ["206", "jeff frank", "right wing", "canada / united states", "detroit red wings", "regina pats ( whl )"], ["207", "jan blaha", "right wing", "czechoslovakia", "los angeles kings", "ceske budejovice ( czechoslovakia )"], ["208", "mike tomlak", "centre", "canada", "toronto maple leafs", "cornwall royals ( ohl )"], ["209", "eric cormier", "left wing", "canada", "winnipeg jets", "st george 's school ( canadian hs - qc )"], ["210", "steve kayser", "defence", "canada", "vancouver canucks", "university of vermont ( ecac )"], ["211", "jaroslav benak", "defence", "czechoslovakia", "calgary flames", "jihlava ( czechoslovakia )"], ["212", "oldrich valek", "right wing", "czechoslovakia", "minnesota north stars", "jihlava ( czechoslovakia )"], ["213", "bryan walker", "defence", "canada", "new york rangers", "portland winter halks ( whl )"], ["214", "uwe krupp", "defence", "west germany", "buffalo sabres", "cologne ( west germany )"], ["215", "alain raymond", "goaltender", "canada", "washington capitals", "trois - rivieres draveurs ( qmjhl )"], ["216", "anders huss", "centre", "sweden", "washington capitals", "gavle ( sweden )"], ["217", "john bjorkman", "centre", "united states", "new york islanders", "warroad high school ( ushs - mn )"], ["218", "jeff perpich", "defence", "united states", "montreal canadiens", "hibbing high school ( ushs - mn )"], ["219", "steve pepin", "centre", "canada", "chicago black hawks", "st jean castors ( qmjhl )"], ["220", "john miner", "defence", "canada", "edmonton oilers", "regina pats ( whl )"], ["221", "brian jopling", "goaltender", "united states", "philadelphia flyers", "rennssaeler polytechnic institute"], ["222", "norm foster", "goaltender", "canada", "boston bruins", "penticton knights ( bcjhl )"]], "query": "and { not_eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; hop { filter_eq { all_rows ; player ; john miner } ; nhl team } } ; and { eq { hop { filter_eq { all_rows ; player ; steve pepin } ; nhl team } ; chicago black hawks } ; eq { hop { filter_eq { all_rows ; player ; john miner } ; nhl team } ; edmonton oilers } } } = true", "question": "steve pepin is from the chicago blackhawks while john miner is from the edmonton oilers ."}, {"topic": "2007 - 08 los angeles kings season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Los_Angeles_Kings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11821711-13.html.csv", "action": "majority", "sent": "most of the players have a nationality of canada .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "canada", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "nationality", "canada"], "result": true, "ind": 0, "tointer": "for the nationality records of all rows , most of them fuzzily match to canada .", "tostr": "most_eq { all_rows ; nationality ; canada } = true"}, "logic_str": "most_eq { all_rows ; nationality ; canada } = true", "interpret": "for the nationality records of all rows , most of them fuzzily match to canada .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "nationality_3": 3, "canada_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "nationality_3": "nationality", "canada_4": "canada"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "nationality_3": [0], "canada_4": [0]}, "table_header": ["round", "player", "nationality", "nhl team", "college / junior / club team ( league )"], "table_cont": [["1", "thomas hickey ( d )", "canada", "los angeles kings", "seattle thunderbirds ( whl )"], ["2", "oscar moller ( c )", "sweden", "los angeles kings", "chilliwack bruins ( whl )"], ["2", "wayne simmonds ( rw )", "canada", "los angeles kings", "owen sound attack ( whl )"], ["3", "bryan cameron ( c )", "canada", "los angeles kings", "belleville bulls ( ohl )"], ["4", "alec martinez ( d )", "united states", "los angeles kings", "miami university ( ncaa )"], ["4", "dwight king ( c )", "canada", "los angeles kings", "lethbridge hurricanes ( whl )"], ["5", "linden rowat ( g )", "canada", "los angeles kings", "regina pats ( whl )"], ["5", "joshua turnbull ( c )", "united states", "los angeles kings", "waterloo black hawks ( ushl )"], ["7", "josh kidd ( d )", "canada", "los angeles kings", "erie otters ( ohl )"], ["7", "matt fillier ( lw )", "canada", "los angeles kings", "st john 's fog devils ( qmjhl )"]], "query": "most_eq { all_rows ; nationality ; canada } = true", "question": "most of the players have a nationality of canada ."}, {"topic": "1921 world wrestling championships", "wiki": "https://en.wikipedia.org/wiki/1921_World_Wrestling_Championships", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15981100-1.html.csv", "action": "aggregation", "sent": "in the 1921 world wrestling championships , the total number of silver medals from the countries with less than 13 total medals was 2 .", "annotation": {"scope": "subset", "col": "4", "type": "sum", "result": "2", "subset": {"col": "6", "criterion": "less_than", "value": "13"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_less", "args": ["all_rows", "total", "13"], "result": null, "ind": 0, "tostr": "filter_less { all_rows ; total ; 13 }", "tointer": "select the rows whose total record is less than 13 ."}, "silver"], "result": "2", "ind": 1, "tostr": "sum { filter_less { all_rows ; total ; 13 } ; silver }"}, "2"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_less { all_rows ; total ; 13 } ; silver } ; 2 } = true", "tointer": "select the rows whose total record is less than 13 . the sum of the silver record of these rows is 2 ."}, "logic_str": "round_eq { sum { filter_less { all_rows ; total ; 13 } ; silver } ; 2 } = true", "interpret": "select the rows whose total record is less than 13 . the sum of the silver record of these rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_less_0": 0, "all_rows_4": 4, "total_5": 5, "13_6": 6, "silver_7": 7, "2_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_less_0": "filter_less", "all_rows_4": "all_rows", "total_5": "total", "13_6": "13", "silver_7": "silver", "2_8": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_less_0": [1], "all_rows_4": [0], "total_5": [0], "13_6": [0], "silver_7": [1], "2_8": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "finland", "6", "4", "3", "13"], ["2", "sweden", "0", "1", "1", "2"], ["3", "latvia", "0", "1", "0", "1"], ["4", "denmark", "0", "0", "1", "1"], ["4", "netherlands", "0", "0", "1", "1"], ["total", "total", "6", "6", "6", "18"]], "query": "round_eq { sum { filter_less { all_rows ; total ; 13 } ; silver } ; 2 } = true", "question": "in the 1921 world wrestling championships , the total number of silver medals from the countries with less than 13 total medals was 2 ."}, {"topic": "manila", "wiki": "https://en.wikipedia.org/wiki/Manila", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-184334-2.html.csv", "action": "ordinal", "sent": "the tondo district recorded the highest population in the 2010 census of manila .", "annotation": {"row": "16", "col": "3", "order": "1", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "population ( 2010 census )", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; population ( 2010 census ) ; 1 }"}, "district"], "result": "tondo", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; population ( 2010 census ) ; 1 } ; district }"}, "tondo"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; population ( 2010 census ) ; 1 } ; district } ; tondo } = true", "tointer": "select the row whose population ( 2010 census ) record of all rows is 1st maximum . the district record of this row is tondo ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; population ( 2010 census ) ; 1 } ; district } ; tondo } = true", "interpret": "select the row whose population ( 2010 census ) record of all rows is 1st maximum . the district record of this row is tondo .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "population (2010 census)_5": 5, "1_6": 6, "district_7": 7, "tondo_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "population (2010 census)_5": "population ( 2010 census )", "1_6": "1", "district_7": "district", "tondo_8": "tondo"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "population (2010 census)_5": [0], "1_6": [0], "district_7": [1], "tondo_8": [2]}, "table_header": ["district", "s barangay", "population ( 2010 census )", "area ( has )", "pop density ( per km2 )"], "table_cont": [["binondo", "10", "12985", "66.11", "19641.5"], ["ermita", "13", "7143", "158.91", "4495.0"], ["intramuros", "5", "4925", "67.26", "7322.3"], ["malate", "57", "77513", "259.58", "29860.9"], ["paco", "43", "70978", "278.69", "25468.4"], ["pandacan", "38", "73895", "166.00", "44515.1"], ["port area", "5", "57405", "315.28", "18207.6"], ["quiapo", "16", "24886", "84.69", "29384.8"], ["sampaloc", "192", "241528", "513.71", "47016.4"], ["san andr\u00e3s", "65", "115942", "168.02", "69004.9"], ["san miguel", "12", "15992", "91.37", "17502.5"], ["san nicolas", "15", "44241", "163.85", "27000.9"], ["santa ana", "34", "60952", "169.42", "35976.9"], ["santa cruz", "82", "115747", "309.01", "37457.4"], ["santa mesa", "51", "99933", "261.01", "38287.0"], ["tondo", "259", "628106", "865.13", "72602.5"]], "query": "eq { hop { nth_argmax { all_rows ; population ( 2010 census ) ; 1 } ; district } ; tondo } = true", "question": "the tondo district recorded the highest population in the 2010 census of manila ."}, {"topic": "dwbl", "wiki": "https://en.wikipedia.org/wiki/DWBL", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16615322-1.html.csv", "action": "comparative", "sent": "for dwbl , the power for dwll is 10 kilowatts higher than the power for dyku .", "annotation": {"row_1": "2", "row_2": "3", "col": "4", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "10", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "callsign", "dwll"], "result": null, "ind": 0, "tointer": "select the rows whose callsign record fuzzily matches to dwll .", "tostr": "filter_eq { all_rows ; callsign ; dwll }"}, "power"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; callsign ; dwll } ; power }", "tointer": "select the rows whose callsign record fuzzily matches to dwll . take the power record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "callsign", "dyku"], "result": null, "ind": 1, "tointer": "select the rows whose callsign record fuzzily matches to dyku .", "tostr": "filter_eq { all_rows ; callsign ; dyku }"}, "power"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; callsign ; dyku } ; power }", "tointer": "select the rows whose callsign record fuzzily matches to dyku . take the power record of this row ."}], "result": "10", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; callsign ; dwll } ; power } ; hop { filter_eq { all_rows ; callsign ; dyku } ; power } }"}, "10"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; callsign ; dwll } ; power } ; hop { filter_eq { all_rows ; callsign ; dyku } ; power } } ; 10 } = true", "tointer": "select the rows whose callsign record fuzzily matches to dwll . take the power record of this row . select the rows whose callsign record fuzzily matches to dyku . take the power record of this row . the first record is 10 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; callsign ; dwll } ; power } ; hop { filter_eq { all_rows ; callsign ; dyku } ; power } } ; 10 } = true", "interpret": "select the rows whose callsign record fuzzily matches to dwll . take the power record of this row . select the rows whose callsign record fuzzily matches to dyku . take the power record of this row . the first record is 10 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "callsign_8": 8, "dwll_9": 9, "power_10": 10, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "callsign_12": 12, "dyku_13": 13, "power_14": 14, "10_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "callsign_8": "callsign", "dwll_9": "dwll", "power_10": "power", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "callsign_12": "callsign", "dyku_13": "dyku", "power_14": "power", "10_15": "10"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "callsign_8": [0], "dwll_9": [0], "power_10": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "callsign_12": [1], "dyku_13": [1], "power_14": [3], "10_15": [5]}, "table_header": ["branding", "callsign", "frequency", "power", "location"], "table_cont": [["dwbl 1242", "dwbl", "1242 khz", "20 kw", "metro manila"], ["mellow 947", "dwll", "94.7 mhz", "20 kw", "metro manila"], ["mellow 887", "dyku", "88.7 mhz", "10 kw", "iloilo city"], ["mellow 957", "dxbl", "95.7 mhz", "10 kw", "cagayan de oro"], ["mellow 947 davao", "dxll", "94.7 mhz", "20 kw", "davao city"]], "query": "eq { diff { hop { filter_eq { all_rows ; callsign ; dwll } ; power } ; hop { filter_eq { all_rows ; callsign ; dyku } ; power } } ; 10 } = true", "question": "for dwbl , the power for dwll is 10 kilowatts higher than the power for dyku ."}, {"topic": "utah jazz all - time roster", "wiki": "https://en.wikipedia.org/wiki/Utah_Jazz_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11545282-19.html.csv", "action": "unique", "sent": "jamaal tinsley is the only player from this roster that is still playing for the utah jazz .", "annotation": {"scope": "all", "row": "4", "col": "4", "col_other": "1", "criterion": "fuzzily_match", "value": "present", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "years for jazz", "present"], "result": null, "ind": 0, "tointer": "select the rows whose years for jazz record fuzzily matches to present .", "tostr": "filter_eq { all_rows ; years for jazz ; present }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; years for jazz ; present } }", "tointer": "select the rows whose years for jazz record fuzzily matches to present . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "years for jazz", "present"], "result": null, "ind": 0, "tointer": "select the rows whose years for jazz record fuzzily matches to present .", "tostr": "filter_eq { all_rows ; years for jazz ; present }"}, "player"], "result": "jamaal tinsley", "ind": 2, "tostr": "hop { filter_eq { all_rows ; years for jazz ; present } ; player }"}, "jamaal tinsley"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; years for jazz ; present } ; player } ; jamaal tinsley }", "tointer": "the player record of this unqiue row is jamaal tinsley ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; years for jazz ; present } } ; eq { hop { filter_eq { all_rows ; years for jazz ; present } ; player } ; jamaal tinsley } } = true", "tointer": "select the rows whose years for jazz record fuzzily matches to present . there is only one such row in the table . the player record of this unqiue row is jamaal tinsley ."}, "logic_str": "and { only { filter_eq { all_rows ; years for jazz ; present } } ; eq { hop { filter_eq { all_rows ; years for jazz ; present } ; player } ; jamaal tinsley } } = true", "interpret": "select the rows whose years for jazz record fuzzily matches to present . there is only one such row in the table . the player record of this unqiue row is jamaal tinsley .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "years for jazz_7": 7, "present_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "jamaal tinsley_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "years for jazz_7": "years for jazz", "present_8": "present", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "jamaal tinsley_10": "jamaal tinsley"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "years for jazz_7": [0], "present_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "jamaal tinsley_10": [3]}, "table_header": ["player", "nationality", "position", "years for jazz", "school / club team"], "table_cont": [["ira terrell", "united states", "forward", "1978 - 79", "southern methodist"], ["brooks thompson", "united states", "guard", "1996", "oklahoma state"], ["bob thornton", "united states", "forward", "1991 - 92", "saddleback college"], ["jamaal tinsley", "united states", "point guard", "2011 - present", "iowa state"], ["andy toolson", "united states", "guard - forward", "1990 - 91 , 1995 - 96", "byu"], ["kelly tripucka", "united states", "shooting guard", "1986 - 88", "notre dame"], ["mel turpin", "united states", "center", "1987 - 88", "kentucky"]], "query": "and { only { filter_eq { all_rows ; years for jazz ; present } } ; eq { hop { filter_eq { all_rows ; years for jazz ; present } ; player } ; jamaal tinsley } } = true", "question": "jamaal tinsley is the only player from this roster that is still playing for the utah jazz ."}, {"topic": "jorge aguilar", "wiki": "https://en.wikipedia.org/wiki/Jorge_Aguilar", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10713126-4.html.csv", "action": "comparative", "sent": "the tournament in buenos aires occurred before the tournament in panama city .", "annotation": {"row_1": "3", "row_2": "6", "col": "2", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "buenos aires"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to buenos aires .", "tostr": "filter_eq { all_rows ; tournament ; buenos aires }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; buenos aires } ; date }", "tointer": "select the rows whose tournament record fuzzily matches to buenos aires . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "panama city"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to panama city .", "tostr": "filter_eq { all_rows ; tournament ; panama city }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; tournament ; panama city } ; date }", "tointer": "select the rows whose tournament record fuzzily matches to panama city . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; tournament ; buenos aires } ; date } ; hop { filter_eq { all_rows ; tournament ; panama city } ; date } } = true", "tointer": "select the rows whose tournament record fuzzily matches to buenos aires . take the date record of this row . select the rows whose tournament record fuzzily matches to panama city . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; tournament ; buenos aires } ; date } ; hop { filter_eq { all_rows ; tournament ; panama city } ; date } } = true", "interpret": "select the rows whose tournament record fuzzily matches to buenos aires . take the date record of this row . select the rows whose tournament record fuzzily matches to panama city . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "tournament_7": 7, "buenos aires_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "tournament_11": 11, "panama city_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "tournament_7": "tournament", "buenos aires_8": "buenos aires", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "tournament_11": "tournament", "panama city_12": "panama city", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "tournament_7": [0], "buenos aires_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "tournament_11": [1], "panama city_12": [1], "date_13": [3]}, "table_header": ["outcome", "date", "tournament", "surface", "partner", "opponent", "score"], "table_cont": [["runner - up", "23 january 2006", "santiago", "clay", "felipe parada", "m\u00e1ximo gonz\u00e1lez sergio roitman", "4 - 6 , 3 - 6"], ["runner - up", "2 april 2007", "san luis potos\u00ed", "clay", "pablo gonzalez", "j\u00e9r\u00e9my chardy marcelo melo", "0 - 6 , 3 - 6"], ["runner - up", "4 october 2010", "buenos aires", "clay", "federico delbonis", "carlos berlocq brian dabul", "3 - 6 , 2 - 6"], ["runner - up", "30 may 2011", "furth", "clay", "julio c\u00e9sar campozano", "rameez junaid frank moser", "2 - 6 , 7 - 6 ( 2 ) , 7 - 10"], ["winner", "1 august 2011", "trani", "clay", "andres molteni", "giulio di meo stefano ianni", "6 - 4 , 6 - 4"], ["winner", "15 april 2013", "panama city", "clay", "sergio gald\u00f3s", "alejandro gonz\u00e1lez julio c\u00e9sar campozano", "6 - 4 , 6 - 4"]], "query": "less { hop { filter_eq { all_rows ; tournament ; buenos aires } ; date } ; hop { filter_eq { all_rows ; tournament ; panama city } ; date } } = true", "question": "the tournament in buenos aires occurred before the tournament in panama city ."}, {"topic": "list of great central railway locomotives and rolling stock", "wiki": "https://en.wikipedia.org/wiki/List_of_Great_Central_Railway_locomotives_and_rolling_stock", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11913905-4.html.csv", "action": "count", "sent": "five of the great central railway locomotives and rolling stock were owned by private owners .", "annotation": {"scope": "all", "criterion": "equal", "value": "private owner", "result": "5", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "owner ( s )", "private owner"], "result": null, "ind": 0, "tointer": "select the rows whose owner ( s ) record fuzzily matches to private owner .", "tostr": "filter_eq { all_rows ; owner ( s ) ; private owner }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; owner ( s ) ; private owner } }", "tointer": "select the rows whose owner ( s ) record fuzzily matches to private owner . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; owner ( s ) ; private owner } } ; 5 } = true", "tointer": "select the rows whose owner ( s ) record fuzzily matches to private owner . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; owner ( s ) ; private owner } } ; 5 } = true", "interpret": "select the rows whose owner ( s ) record fuzzily matches to private owner . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "owner (s)_5": 5, "private owner_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "owner (s)_5": "owner ( s )", "private owner_6": "private owner", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "owner (s)_5": [0], "private owner_6": [0], "5_7": [2]}, "table_header": ["number & name", "description", "livery", "owner ( s )", "date"], "table_cont": [["operational", "operational", "operational", "operational", "operational"], ["no 15097", "simplex 0 - 4 - 0 pm", "br black with the early crest", "private owner", "1919"], ["no 15099 morris", "simplex 0 - 4 - 0dm", "br black with the early crest", "simplex 2028 association", "1920"], ["marblaegis", "ruston & hornsby 88ds 0 - 4 - 0dm", "green", "simplex 2028 association", "1946"], ["qwag", "ruston & hornsby 0 - 4 - 0dm", "green", "private owner", "1954"], ["no 28 bardon", "andrew barclay 0 - 4 - 0dm", "lined green", "private owner", "1956"], ["d2959 staythorpe", "ruston & hornsby 165 0 - 4 - 0de", "br green with the late crest", "private owner", "1961"], ["undergoing overhaul , restoration or repairs", "undergoing overhaul , restoration or repairs", "undergoing overhaul , restoration or repairs", "undergoing overhaul , restoration or repairs", "undergoing overhaul , restoration or repairs"], ["stored or static", "stored or static", "stored or static", "stored or static", "stored or static"], ["no d4279 arthur wright", "john fowler 0 - 4 - 0dm", "dark blue", "private owner", "1952"]], "query": "eq { count { filter_eq { all_rows ; owner ( s ) ; private owner } } ; 5 } = true", "question": "five of the great central railway locomotives and rolling stock were owned by private owners ."}, {"topic": "1981 england rugby union tour of argentina", "wiki": "https://en.wikipedia.org/wiki/1981_England_rugby_union_tour_of_Argentina", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17007880-1.html.csv", "action": "superlative", "sent": "buenos aires selection was the opposing team that scored the highest number of points against the england rugby union team in the 1981 tour of argentina .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "3", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "against"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; against }"}, "opposing team"], "result": "buenos aires selection", "ind": 1, "tostr": "hop { argmax { all_rows ; against } ; opposing team }"}, "buenos aires selection"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; against } ; opposing team } ; buenos aires selection } = true", "tointer": "select the row whose against record of all rows is maximum . the opposing team record of this row is buenos aires selection ."}, "logic_str": "eq { hop { argmax { all_rows ; against } ; opposing team } ; buenos aires selection } = true", "interpret": "select the row whose against record of all rows is maximum . the opposing team record of this row is buenos aires selection .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "against_5": 5, "opposing team_6": 6, "buenos aires selection_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "against_5": "against", "opposing team_6": "opposing team", "buenos aires selection_7": "buenos aires selection"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "against_5": [0], "opposing team_6": [1], "buenos aires selection_7": [2]}, "table_header": ["opposing team", "against", "date", "venue", "status"], "table_cont": [["san isidro club", "14", "16 / 05 / 1981", "buenos aires", "tour match"], ["northern region xv", "12", "19 / 05 / 1981", "c\u00e3 cubicrdoba", "tour match"], ["buenos aires selection", "25", "23 / 05 / 1981", "buenos aires", "tour match"], ["southern region xv", "3", "25 / 05 / 1981", "mar del plata", "tour match"], ["argentina", "19", "30 / 05 / 1981", "ferrocarril stadium , buenos aires", "first test"], ["litoral region xv", "21", "02 / 06 / 1981", "rosario", "tour match"], ["argentina", "6", "06 / 06 / 1981", "ferrocarril stadium , buenos aires", "second test"]], "query": "eq { hop { argmax { all_rows ; against } ; opposing team } ; buenos aires selection } = true", "question": "buenos aires selection was the opposing team that scored the highest number of points against the england rugby union team in the 1981 tour of argentina ."}, {"topic": "athletics at the 1935 central american and caribbean games", "wiki": "https://en.wikipedia.org/wiki/Athletics_at_the_1935_Central_American_and_Caribbean_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10102961-2.html.csv", "action": "superlative", "sent": "cuba had the most gold in athletics at the 1935 central american and caribbean games .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "gold"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; gold }"}, "nation"], "result": "cuba", "ind": 1, "tostr": "hop { argmax { all_rows ; gold } ; nation }"}, "cuba"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; gold } ; nation } ; cuba } = true", "tointer": "select the row whose gold record of all rows is maximum . the nation record of this row is cuba ."}, "logic_str": "eq { hop { argmax { all_rows ; gold } ; nation } ; cuba } = true", "interpret": "select the row whose gold record of all rows is maximum . the nation record of this row is cuba .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "gold_5": 5, "nation_6": 6, "cuba_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "gold_5": "gold", "nation_6": "nation", "cuba_7": "cuba"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "gold_5": [0], "nation_6": [1], "cuba_7": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "cuba", "8", "9", "7", "24"], ["2", "mexico", "7", "6", "8", "21"], ["3", "puerto rico", "4", "4", "3", "11"], ["4", "guatemala", "1", "1", "1", "3"], ["5", "panama", "0", "0", "1", "1"]], "query": "eq { hop { argmax { all_rows ; gold } ; nation } ; cuba } = true", "question": "cuba had the most gold in athletics at the 1935 central american and caribbean games ."}, {"topic": "2008 - 09 sacramento kings season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Sacramento_Kings_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17102076-9.html.csv", "action": "aggregation", "sent": "during the 2008 - 09 sacramento kings season , in the games where beno udrih had the high assists , the average number of assists was 6.29 .", "annotation": {"scope": "subset", "col": "6", "type": "average", "result": "6.29", "subset": {"col": "6", "criterion": "fuzzily_match", "value": "beno udrih"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "high assists", "beno udrih"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; high assists ; beno udrih }", "tointer": "select the rows whose high assists record fuzzily matches to beno udrih ."}, "high assists"], "result": "6.29", "ind": 1, "tostr": "avg { filter_eq { all_rows ; high assists ; beno udrih } ; high assists }"}, "6.29"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; high assists ; beno udrih } ; high assists } ; 6.29 } = true", "tointer": "select the rows whose high assists record fuzzily matches to beno udrih . the average of the high assists record of these rows is 6.29 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; high assists ; beno udrih } ; high assists } ; 6.29 } = true", "interpret": "select the rows whose high assists record fuzzily matches to beno udrih . the average of the high assists record of these rows is 6.29 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "high assists_5": 5, "beno udrih_6": 6, "high assists_7": 7, "6.29_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "high assists_5": "high assists", "beno udrih_6": "beno udrih", "high assists_7": "high assists", "6.29_8": "6.29"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "high assists_5": [0], "beno udrih_6": [0], "high assists_7": [1], "6.29_8": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high assists", "location attendance", "record"], "table_cont": [["62", "march 3", "indiana", "l 109 - 117 ( ot )", "kevin martin ( 21 )", "bobby jackson ( 5 )", "arco arena 10748", "13 - 49"], ["63", "march 8", "denver", "w 114 - 106 ( ot )", "kevin martin ( 26 )", "kevin martin ( 8 )", "arco arena 12678", "14 - 49"], ["64", "march 10", "oklahoma city", "l 98 - 99 ( ot )", "spencer hawes ( 20 )", "bobby jackson ( 6 )", "arco arena 10784", "14 - 50"], ["65", "march 13", "cleveland", "l 123 - 126 ( ot )", "kevin martin ( 34 )", "spencer hawes ( 4 )", "arco arena 16317", "14 - 51"], ["66", "march 15", "washington", "l 104 - 106 ( ot )", "kevin martin ( 24 )", "beno udrih ( 7 )", "verizon center 15108", "14 - 52"], ["67", "march 17", "atlanta", "l 97 - 119 ( ot )", "kevin martin ( 31 )", "beno udrih ( 6 )", "philips arena 14226", "14 - 53"], ["68", "march 18", "charlotte", "l 88 - 104 ( ot )", "rashad mccants ( 30 )", "beno udrih ( 6 )", "time warner cable arena 13594", "14 - 54"], ["69", "march 20", "new york", "w 121 - 94 ( ot )", "kevin martin ( 30 )", "beno udrih ( 7 )", "madison square garden 19763", "15 - 54"], ["70", "march 22", "philadelphia", "l 100 - 112 ( ot )", "francisco garc\u00eda ( 24 )", "spencer hawes ( 9 )", "arco arena 12943", "15 - 55"], ["71", "march 27", "memphis", "l 95 - 113 ( ot )", "kevin martin ( 31 )", "beno udrih ( 5 )", "arco arena 12987", "15 - 56"], ["72", "march 29", "phoenix", "w 126 - 118 ( ot )", "jason thompson ( 21 )", "beno udrih ( 7 )", "arco arena 13623", "16 - 56"], ["73", "march 31", "new orleans", "l 110 - 111 ( ot )", "andr\u00e9s nocioni ( 23 )", "beno udrih ( 6 )", "arco arena 17317", "16 - 57"]], "query": "round_eq { avg { filter_eq { all_rows ; high assists ; beno udrih } ; high assists } ; 6.29 } = true", "question": "during the 2008 - 09 sacramento kings season , in the games where beno udrih had the high assists , the average number of assists was 6.29 ."}, {"topic": "1977 - 78 philadelphia flyers season", "wiki": "https://en.wikipedia.org/wiki/1977%E2%80%9378_Philadelphia_Flyers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14305802-4.html.csv", "action": "superlative", "sent": "game 27 was the game in which the flyers recorded their highest goals scored .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "6", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "score"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; score }"}, "game"], "result": "27", "ind": 1, "tostr": "hop { argmax { all_rows ; score } ; game }"}, "27"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; score } ; game } ; 27 } = true", "tointer": "select the row whose score record of all rows is maximum . the game record of this row is 27 ."}, "logic_str": "eq { hop { argmax { all_rows ; score } ; game } ; 27 } = true", "interpret": "select the row whose score record of all rows is maximum . the game record of this row is 27 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "score_5": 5, "game_6": 6, "27_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "score_5": "score", "game_6": "game", "27_7": "27"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "score_5": [0], "game_6": [1], "27_7": [2]}, "table_header": ["game", "december", "opponent", "score", "record", "points"], "table_cont": [["22", "1", "los angeles kings", "4 - 2", "15 - 4 - 3", "33"], ["23", "3", "colorado rockies", "6 - 3", "16 - 4 - 3", "35"], ["24", "7", "new york rangers", "3 - 3", "16 - 4 - 4", "36"], ["25", "8", "new york rangers", "7 - 4", "17 - 4 - 4", "38"], ["26", "10", "chicago black hawks", "4 - 2", "18 - 4 - 4", "40"], ["27", "11", "cleveland barons", "11 - 1", "19 - 4 - 4", "42"], ["28", "15", "boston bruins", "6 - 4", "20 - 4 - 4", "44"], ["29", "17", "atlanta flames", "4 - 3", "21 - 4 - 4", "46"], ["30", "18", "montreal canadiens", "0 - 2", "21 - 5 - 4", "46"], ["31", "21", "cleveland barons", "4 - 0", "22 - 5 - 4", "48"], ["32", "23", "boston bruins", "1 - 6", "22 - 6 - 4", "48"], ["33", "28", "new york rangers", "4 - 3", "23 - 6 - 4", "50"], ["34", "29", "minnesota north stars", "5 - 2", "24 - 6 - 4", "52"], ["35", "31", "st louis blues", "2 - 3", "24 - 7 - 4", "52"]], "query": "eq { hop { argmax { all_rows ; score } ; game } ; 27 } = true", "question": "game 27 was the game in which the flyers recorded their highest goals scored ."}, {"topic": "florida collegiate summer league", "wiki": "https://en.wikipedia.org/wiki/Florida_Collegiate_Summer_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18373863-2.html.csv", "action": "count", "sent": "two of the players from the florida collegiate summer league who were drafted from 2006 to 2012 were drafted in the first round .", "annotation": {"scope": "all", "criterion": "equal", "value": "1st", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "round", "1st"], "result": null, "ind": 0, "tointer": "select the rows whose round record fuzzily matches to 1st .", "tostr": "filter_eq { all_rows ; round ; 1st }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; round ; 1st } }", "tointer": "select the rows whose round record fuzzily matches to 1st . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; round ; 1st } } ; 2 } = true", "tointer": "select the rows whose round record fuzzily matches to 1st . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; round ; 1st } } ; 2 } = true", "interpret": "select the rows whose round record fuzzily matches to 1st . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "round_5": 5, "1st_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "round_5": "round", "1st_6": "1st", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "round_5": [0], "1st_6": [0], "2_7": [2]}, "table_header": ["player", "fcsl team", "years played", "year drafted", "round", "mlb team"], "table_cont": [["mike mcclendon", "winter park", "2006", "2006", "10th", "milwaukee brewers"], ["corey brown", "orlando shockers", "2006", "2007", "1st", "oakland athletics"], ["jonathan lucroy", "sanford", "2005 06", "2007", "3rd", "milwaukee brewers"], ["alan farina", "orlando shockers", "2005", "2007", "3rd", "toronto blue jays"], ["jonathan holt", "leesburg", "2006 - 2007", "2007", "5th", "cleveland indians"], ["dee gordon", "belleview", "2008", "2008", "4th", "los angeles dodgers"], ["mycal jones", "leesburg", "2007 - 2008", "2009", "4th", "atlanta braves"], ["kent matthes", "winter pines", "2008", "2009", "4th", "colorado rockies"], ["thomas berryhill", "deland", "2008", "2009", "5th", "atlanta braves"], ["jimmy nelson", "deland", "2009", "2010", "2nd", "milwaukee brewers"], ["dante bichette jr", "winter park", "2011", "2011", "1st", "new york yankees"], ["peter o'brien", "deland", "2010", "2012", "2nd", "new york yankees"], ["brandon thomas", "sanford", "2010", "2012", "4th", "pittsburgh pirates"], ["tucker donahue", "winter park", "2010", "2012", "4th", "toronto blue jays"]], "query": "eq { count { filter_eq { all_rows ; round ; 1st } } ; 2 } = true", "question": "two of the players from the florida collegiate summer league who were drafted from 2006 to 2012 were drafted in the first round ."}, {"topic": "laredo , texas", "wiki": "https://en.wikipedia.org/wiki/Laredo%2C_Texas", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-136773-10.html.csv", "action": "superlative", "sent": "the radio channel with the callsign kgbt broadcasts on the highest frequency .", "annotation": {"scope": "all", "col_superlative": "1", "row_superlative": "11", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "frequency"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; frequency }"}, "callsign"], "result": "kgbt", "ind": 1, "tostr": "hop { argmax { all_rows ; frequency } ; callsign }"}, "kgbt"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; frequency } ; callsign } ; kgbt } = true", "tointer": "select the row whose frequency record of all rows is maximum . the callsign record of this row is kgbt ."}, "logic_str": "eq { hop { argmax { all_rows ; frequency } ; callsign } ; kgbt } = true", "interpret": "select the row whose frequency record of all rows is maximum . the callsign record of this row is kgbt .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "frequency_5": 5, "callsign_6": 6, "kgbt_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "frequency_5": "frequency", "callsign_6": "callsign", "kgbt_7": "kgbt"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "frequency_5": [0], "callsign_6": [1], "kgbt_7": [2]}, "table_header": ["frequency", "callsign", "brand", "city of license", "website", "webcast"], "table_cont": [["680", "kkyx", "country legends 680", "san antonio", "kkyxcom", "listen live"], ["720", "ksah", "norte\u00f1o 720", "san antonio", "-", "-"], ["740", "ktrh", "newsradio 740 ktrh", "houston", "ktrhcom", "listen live"], ["760", "ktkr", "ticket 760 am", "san antonio", "ticket760.com", "listen live"], ["990", "xet", "la t grande", "monterrey", "-", "listen live"], ["1030", "kcta", "kcta 1030 am", "corpus christi", "kctaradiocom", "listen live"], ["1050", "xeg", "ranchera de monterrey", "monterrey", "rancherademonterreycom", "listen live"], ["1140", "xemr", "mr deportes", "monterrey", "-", "-"], ["1200", "woai", "news radio 1200", "san antonio", "radiowoaicom", "listen live"], ["1210", "kubr", "radio cristiana", "san juan", "-", "listen live"], ["1530", "kgbt", "la tremenda 1530", "harlingen", "latremenda1530.com", "-"]], "query": "eq { hop { argmax { all_rows ; frequency } ; callsign } ; kgbt } = true", "question": "the radio channel with the callsign kgbt broadcasts on the highest frequency ."}, {"topic": "1959 vfl season", "wiki": "https://en.wikipedia.org/wiki/1959_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10775038-6.html.csv", "action": "aggregation", "sent": "in the 1959 vfl season , the average score for away teams was 13.81 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "13.81", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "away team score"], "result": "13.81", "ind": 0, "tostr": "avg { all_rows ; away team score }"}, "13.81"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; away team score } ; 13.81 } = true", "tointer": "the average of the away team score record of all rows is 13.81 ."}, "logic_str": "round_eq { avg { all_rows ; away team score } ; 13.81 } = true", "interpret": "the average of the away team score record of all rows is 13.81 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "away team score_4": 4, "13.81_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "away team score_4": "away team score", "13.81_5": "13.81"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "away team score_4": [0], "13.81_5": [1]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["richmond", "11.17 ( 83 )", "st kilda", "16.10 ( 106 )", "punt road oval", "23000", "30 may 1959"], ["geelong", "11.10 ( 76 )", "melbourne", "19.15 ( 129 )", "kardinia park", "16736", "30 may 1959"], ["collingwood", "16.16 ( 112 )", "footscray", "10.11 ( 71 )", "victoria park", "24740", "30 may 1959"], ["south melbourne", "8.18 ( 66 )", "north melbourne", "13.18 ( 96 )", "lake oval", "20700", "30 may 1959"], ["fitzroy", "11.9 ( 75 )", "essendon", "12.22 ( 94 )", "brunswick street oval", "22000", "30 may 1959"], ["hawthorn", "11.9 ( 75 )", "carlton", "12.11 ( 83 )", "glenferrie oval", "28000", "30 may 1959"]], "query": "round_eq { avg { all_rows ; away team score } ; 13.81 } = true", "question": "in the 1959 vfl season , the average score for away teams was 13.81 ."}, {"topic": "list of tallest buildings in rochester , new york", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Rochester%2C_New_York", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17265352-1.html.csv", "action": "aggregation", "sent": "the 16 tallest buildings in rochester , new york , have an average of 18 floors .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "18", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "floors"], "result": "18", "ind": 0, "tostr": "avg { all_rows ; floors }"}, "18"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; floors } ; 18 } = true", "tointer": "the average of the floors record of all rows is 18 ."}, "logic_str": "round_eq { avg { all_rows ; floors } ; 18 } = true", "interpret": "the average of the floors record of all rows is 18 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "floors_4": 4, "18_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "floors_4": "floors", "18_5": "18"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "floors_4": [0], "18_5": [1]}, "table_header": ["rank", "name", "height ft / m", "floors", "year"], "table_cont": [["1", "xerox tower", "443 / 135", "30", "1968"], ["2", "bausch & lomb place", "401 / 122", "20", "1995"], ["3", "chase tower", "392 / 119", "27", "1973"], ["4", "kodak tower", "360 / 110", "19", "1914"], ["5", "first federal plaza", "309 / 94", "21", "1976"], ["6", "one hsbc plaza", "284 / 87", "21", "1970"], ["7", "hyatt regency hotel", "271 / 83", "25", "1990"], ["8", "times square building", "260 / 79", "14", "1930"], ["9", "midtown tower", "251 / 77", "18", "1962"], ["10", "saint michael 's church", "246 / 75", "1", "1890"], ["11", "temple building", "218 / 66", "14", "1925"], ["12", "crossroads building", "215 / 66", "15", "1969"], ["13", "eastman school of music student living center", "213 / 65", "14", "1990"], ["14", "seneca towers apartments", "212 / 65", "22", "1968"], ["15", "sibley center", "203 / 62", "12", "1926"], ["16", "clinton square building", "200 / 61", "14", "1990"]], "query": "round_eq { avg { all_rows ; floors } ; 18 } = true", "question": "the 16 tallest buildings in rochester , new york , have an average of 18 floors ."}, {"topic": "united states house of representatives elections , 1810", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1810", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2668374-13.html.csv", "action": "count", "sent": "david baird appears as a candidate in two elections .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "david bard", "result": "2", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "candidates", "david bard"], "result": null, "ind": 0, "tointer": "select the rows whose candidates record fuzzily matches to david bard .", "tostr": "filter_eq { all_rows ; candidates ; david bard }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; candidates ; david bard } }", "tointer": "select the rows whose candidates record fuzzily matches to david bard . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; candidates ; david bard } } ; 2 } = true", "tointer": "select the rows whose candidates record fuzzily matches to david bard . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; candidates ; david bard } } ; 2 } = true", "interpret": "select the rows whose candidates record fuzzily matches to david bard . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "candidates_5": 5, "david bard_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "candidates_5": "candidates", "david bard_6": "david bard", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "candidates_5": [0], "david bard_6": [0], "2_7": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["pennsylvania 4 plural district with 2 seats", "robert whitehill", "democratic - republican", "1805 ( special )", "re - elected", "david bard ( dr ) 50.0 % robert whitehill ( dr ) 50.0 %"], ["pennsylvania 4 plural district with 2 seats", "david bard", "democratic - republican", "1802", "re - elected", "david bard ( dr ) 50.0 % robert whitehill ( dr ) 50.0 %"], ["pennsylvania 5", "george smith", "democratic - republican", "1808", "re - elected", "george smith ( dr ) 100 %"], ["pennsylvania 6", "william crawford", "democratic - republican", "1808", "re - elected", "william crawford ( dr ) 56.6 % david cassat ( f ) 43.4 %"], ["pennsylvania 7", "john rea", "democratic - republican", "1802", "lost re - election democratic - republican hold", "william piper ( dr ) 58.5 % john rea ( dr ) 41.5 %"], ["pennsylvania 9", "john smilie", "democratic - republican", "1792 1798", "re - elected", "john smilie ( dr ) 100 %"]], "query": "eq { count { filter_eq { all_rows ; candidates ; david bard } } ; 2 } = true", "question": "david baird appears as a candidate in two elections ."}, {"topic": "seattle supersonics all - time roster", "wiki": "https://en.wikipedia.org/wiki/Seattle_SuperSonics_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16772687-6.html.csv", "action": "ordinal", "sent": "patrick ewing of the seattle supersonics has the second highest jersey number .", "annotation": {"row": "6", "col": "3", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "jersey number ( s )", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; jersey number ( s ) ; 2 }"}, "player"], "result": "patrick ewing", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; jersey number ( s ) ; 2 } ; player }"}, "patrick ewing"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; jersey number ( s ) ; 2 } ; player } ; patrick ewing } = true", "tointer": "select the row whose jersey number ( s ) record of all rows is 2nd maximum . the player record of this row is patrick ewing ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; jersey number ( s ) ; 2 } ; player } ; patrick ewing } = true", "interpret": "select the row whose jersey number ( s ) record of all rows is 2nd maximum . the player record of this row is patrick ewing .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "jersey number (s)_5": 5, "2_6": 6, "player_7": 7, "patrick ewing_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "jersey number (s)_5": "jersey number ( s )", "2_6": "2", "player_7": "player", "patrick ewing_8": "patrick ewing"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "jersey number (s)_5": [0], "2_6": [0], "player_7": [1], "patrick ewing_8": [2]}, "table_header": ["player", "nationality", "jersey number ( s )", "position", "years", "from"], "table_cont": [["craig ehlo", "united states", "3", "sg", "1996 - 1997", "washington state"], ["dale ellis", "united states", "3", "sg / sf", "1986 - 1991 1997 - 1999", "tennessee"], ["pervis ellison", "united states", "29", "c", "2000", "louisville"], ["francisco elson", "netherlands", "16", "c", "2008", "california"], ["reggie evans", "united states", "34 , 30", "pf", "2002 - 2006", "iowa"], ["patrick ewing", "united states", "33", "center", "2000 - 2001", "georgetown"]], "query": "eq { hop { nth_argmax { all_rows ; jersey number ( s ) ; 2 } ; player } ; patrick ewing } = true", "question": "patrick ewing of the seattle supersonics has the second highest jersey number ."}, {"topic": "2009 volta a catalunya", "wiki": "https://en.wikipedia.org/wiki/2009_Volta_a_Catalunya", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22713796-14.html.csv", "action": "unique", "sent": "stage 1 was the only stage with no award for the sprint classification in the 2009 volta a catalunya .", "annotation": {"scope": "all", "row": "1", "col": "4", "col_other": "1", "criterion": "equal", "value": "no award", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "mountains classification", "no award"], "result": null, "ind": 0, "tointer": "select the rows whose mountains classification record fuzzily matches to no award .", "tostr": "filter_eq { all_rows ; mountains classification ; no award }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; mountains classification ; no award } }", "tointer": "select the rows whose mountains classification record fuzzily matches to no award . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "mountains classification", "no award"], "result": null, "ind": 0, "tointer": "select the rows whose mountains classification record fuzzily matches to no award .", "tostr": "filter_eq { all_rows ; mountains classification ; no award }"}, "stage"], "result": "1", "ind": 2, "tostr": "hop { filter_eq { all_rows ; mountains classification ; no award } ; stage }"}, "1"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; mountains classification ; no award } ; stage } ; 1 }", "tointer": "the stage record of this unqiue row is 1 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; mountains classification ; no award } } ; eq { hop { filter_eq { all_rows ; mountains classification ; no award } ; stage } ; 1 } } = true", "tointer": "select the rows whose mountains classification record fuzzily matches to no award . there is only one such row in the table . the stage record of this unqiue row is 1 ."}, "logic_str": "and { only { filter_eq { all_rows ; mountains classification ; no award } } ; eq { hop { filter_eq { all_rows ; mountains classification ; no award } ; stage } ; 1 } } = true", "interpret": "select the rows whose mountains classification record fuzzily matches to no award . there is only one such row in the table . the stage record of this unqiue row is 1 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "mountains classification_7": 7, "no award_8": 8, "eq_3": 3, "num_hop_2": 2, "stage_9": 9, "1_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "mountains classification_7": "mountains classification", "no award_8": "no award", "eq_3": "eq", "num_hop_2": "num_hop", "stage_9": "stage", "1_10": "1"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "mountains classification_7": [0], "no award_8": [0], "eq_3": [4], "num_hop_2": [3], "stage_9": [2], "1_10": [3]}, "table_header": ["stage", "winner", "general classification", "mountains classification", "sprint classification", "team classification"], "table_cont": [["1", "thor hushovd", "thor hushovd", "no award", "no award", "cerv\u00e9lo testteam"], ["2", "matti breschel", "alejandro valverde", "lloyd mondory", "samuel dumoulin", "cerv\u00e9lo testteam"], ["3", "alejandro valverde", "alejandro valverde", "xavier tond\u00f3", "samuel dumoulin", "euskaltel - euskadi"], ["4", "juli\u00e1n s\u00e1nchez", "alejandro valverde", "xavier tond\u00f3", "samuel dumoulin", "astana"], ["5", "nikolay trusov", "alejandro valverde", "xavier tond\u00f3", "samuel dumoulin", "astana"], ["6", "thor hushovd", "alejandro valverde", "juli\u00e1n s\u00e1nchez", "samuel dumoulin", "astana"], ["7", "greg henderson", "alejandro valverde", "juli\u00e1n s\u00e1nchez", "samuel dumoulin", "astana"]], "query": "and { only { filter_eq { all_rows ; mountains classification ; no award } } ; eq { hop { filter_eq { all_rows ; mountains classification ; no award } ; stage } ; 1 } } = true", "question": "stage 1 was the only stage with no award for the sprint classification in the 2009 volta a catalunya ."}, {"topic": "1958 new york giants season", "wiki": "https://en.wikipedia.org/wiki/1958_New_York_Giants_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16660856-1.html.csv", "action": "count", "sent": "in their november 1958 games , the new york giants had an attendance over 70000 twice .", "annotation": {"scope": "subset", "criterion": "greater_than", "value": "70000", "result": "2", "col": "5", "subset": {"col": "2", "criterion": "fuzzily_match", "value": "november"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "november"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; november }", "tointer": "select the rows whose date record fuzzily matches to november ."}, "attendance", "70000"], "result": null, "ind": 1, "tointer": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 70000 .", "tostr": "filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 70000 }"}], "result": "2", "ind": 2, "tostr": "count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 70000 } }", "tointer": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 70000 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 70000 } } ; 2 } = true", "tointer": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 70000 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 70000 } } ; 2 } = true", "interpret": "select the rows whose date record fuzzily matches to november . among these rows , select the rows whose attendance record is greater than 70000 . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_greater_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "date_6": 6, "november_7": 7, "attendance_8": 8, "70000_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_greater_1": "filter_greater", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "date_6": "date", "november_7": "november", "attendance_8": "attendance", "70000_9": "70000", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_greater_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "date_6": [0], "november_7": [0], "attendance_8": [1], "70000_9": [1], "2_10": [3]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 28 , 1958", "chicago cardinals", "w 37 - 7", "21923"], ["2", "october 5 , 1958", "philadelphia eagles", "l 27 - 24", "23178"], ["3", "october 12 , 1958", "washington redskins", "w 21 - 14", "30348"], ["4", "october 19 , 1958", "chicago cardinals", "l 23 - 6", "52684"], ["5", "october 26 , 1958", "pittsburgh steelers", "w 17 - 6", "25007"], ["6", "november 2 , 1958", "cleveland browns", "w 21 - 17", "78404"], ["7", "november 9 , 1958", "baltimore colts", "w 24 - 21", "71164"], ["8", "november 16 , 1958", "pittsburgh steelers", "l 31 - 10", "30030"], ["9", "november 23 , 1958", "washington redskins", "w 30 - 0", "46752"], ["10", "november 30 , 1958", "philadelphia eagles", "w 24 - 10", "35438"], ["11", "december 7 , 1958", "detroit lions", "w 19 - 17", "50115"], ["12", "december 14 , 1958", "cleveland browns", "w 13 - 10", "63192"]], "query": "eq { count { filter_greater { filter_eq { all_rows ; date ; november } ; attendance ; 70000 } } ; 2 } = true", "question": "in their november 1958 games , the new york giants had an attendance over 70000 twice ."}, {"topic": "list of paris saint - germain f.c. players", "wiki": "https://en.wikipedia.org/wiki/List_of_Paris_Saint-Germain_F.C._players", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-24565004-22.html.csv", "action": "superlative", "sent": "valdo was the player who recorded the highest number of appearances for paris saint - germain f.c.", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "appearances"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; appearances }"}, "name"], "result": "valdo", "ind": 1, "tostr": "hop { argmax { all_rows ; appearances } ; name }"}, "valdo"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; appearances } ; name } ; valdo } = true", "tointer": "select the row whose appearances record of all rows is maximum . the name record of this row is valdo ."}, "logic_str": "eq { hop { argmax { all_rows ; appearances } ; name } ; valdo } = true", "interpret": "select the row whose appearances record of all rows is maximum . the name record of this row is valdo .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "appearances_5": 5, "name_6": 6, "valdo_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "appearances_5": "appearances", "name_6": "name", "valdo_7": "valdo"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "appearances_5": [0], "name_6": [1], "valdo_7": [2]}, "table_header": ["name", "position", "period", "appearances", "goals", "nationality square"], "table_cont": [["valdo", "midfielder", "1991 - 1995", "153", "16", "brazil"], ["vampeta", "midfielder", "2000 - 2001", "8", "1", "brazil"], ["franck vandecasteele", "forward", "1984 - 1988 , 1990 - 1992", "1", "0", "france"], ["gregory van der wiel", "defender", "2012", "29", "1", "netherlands"], ["richard vanquelef", "forward", "1970 - 1974", "1", "1", "france"], ["jean - luc vasseur", "defender", "1986 - 1988 , 1990 - 1992", "22", "0", "france"], ["pierre vermeulen", "forward", "1985 - 1987", "55", "1", "netherlands"], ["marco verratti", "midfielder", "2012", "39", "0", "italy"]], "query": "eq { hop { argmax { all_rows ; appearances } ; name } ; valdo } = true", "question": "valdo was the player who recorded the highest number of appearances for paris saint - germain f.c."}, {"topic": "kevin cogan", "wiki": "https://en.wikipedia.org/wiki/Kevin_Cogan", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1568649-3.html.csv", "action": "aggregation", "sent": "kevin cogan average finish position with the machinist union racing team was 22 .", "annotation": {"scope": "subset", "col": "5", "type": "average", "result": "22", "subset": {"col": "6", "criterion": "equal", "value": "machinist union racing team"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "entrant", "machinist union racing team"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; entrant ; machinist union racing team }", "tointer": "select the rows whose entrant record fuzzily matches to machinist union racing team ."}, "finish"], "result": "22", "ind": 1, "tostr": "avg { filter_eq { all_rows ; entrant ; machinist union racing team } ; finish }"}, "22"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; entrant ; machinist union racing team } ; finish } ; 22 } = true", "tointer": "select the rows whose entrant record fuzzily matches to machinist union racing team . the average of the finish record of these rows is 22 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; entrant ; machinist union racing team } ; finish } ; 22 } = true", "interpret": "select the rows whose entrant record fuzzily matches to machinist union racing team . the average of the finish record of these rows is 22 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "entrant_5": 5, "machinist union racing team_6": 6, "finish_7": 7, "22_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "entrant_5": "entrant", "machinist union racing team_6": "machinist union racing team", "finish_7": "finish", "22_8": "22"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "entrant_5": [0], "machinist union racing team_6": [0], "finish_7": [1], "22_8": [2]}, "table_header": ["year", "chassis", "engine", "start", "finish", "entrant"], "table_cont": [["1981", "phoenix 80", "ford cosworth dfx", "12", "4", "jerry o'connell racing"], ["1982", "penske pc - 10", "ford cosworth dfx", "2", "30", "team penske"], ["1983", "march 83c", "ford cosworth dfx", "22", "5", "bignotti - cotter"], ["1984", "eagle 84sb", "pontiac v8", "27", "20", "all american racers"], ["1985", "march 85c", "ford cosworth dfx", "32", "11", "kraco enterprises"], ["1986", "march 86c", "ford cosworth dfx", "6", "2", "patrick racing"], ["1987", "march 87c", "chevrolet 265a", "24", "31", "patrick racing"], ["1988", "march 88c", "ford cosworth dfx", "13", "11", "machinist union racing team"], ["1989", "march 88c", "ford cosworth dfx", "27", "32", "machinist union racing team"], ["1990", "penske pc - 18", "buick", "15", "9", "granatelli racing"], ["1991", "lola t91 / 00", "buick", "16", "29", "team menard"], ["1993", "lola t93 / 00", "chevrolet 265c", "14", "14", "galles racing"]], "query": "round_eq { avg { filter_eq { all_rows ; entrant ; machinist union racing team } ; finish } ; 22 } = true", "question": "kevin cogan average finish position with the machinist union racing team was 22 ."}, {"topic": "elena pampoulova", "wiki": "https://en.wikipedia.org/wiki/Elena_Pampoulova", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18330817-10.html.csv", "action": "majority", "sent": "elena pampoulova played most of her matches on a hard surface .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "fuzzily_match", "value": "hard", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "surface", "hard"], "result": true, "ind": 0, "tointer": "for the surface records of all rows , most of them fuzzily match to hard .", "tostr": "most_eq { all_rows ; surface ; hard } = true"}, "logic_str": "most_eq { all_rows ; surface ; hard } = true", "interpret": "for the surface records of all rows , most of them fuzzily match to hard .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "surface_3": 3, "hard_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "surface_3": "surface", "hard_4": "hard"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "surface_3": [0], "hard_4": [0]}, "table_header": ["edition", "round", "date", "partner", "surface", "opponents", "result"], "table_cont": [["1988 world group i", "r1", "december 5 , 1988", "galia angelova", "hard", "jonna jonerup maria lindstr\u00f6m", "6 - 2 , 6 - 7 ( 5 - 7 ) , 1 - 6"], ["1990 world group i", "po", "july 23 , 1990", "dora rangelova", "hard", "amy jonsson - r\u00e5holt astrid sunde", "4 - 6 , 6 - 2 , 6 - 3"], ["1992 world group i play - offs", "rpo", "july 16 , 1992", "magdalena maleeva", "hard", "ruxandra dragomir irina sp\u00eerlea", "6 - 7 ( 5 - 7 ) , 2 - 6"], ["1992 world group i play - offs", "rpo", "july 17 , 1992", "katerina maleeva", "hard", "vir\u00e1g csurg\u00f3 kata gy\u00f6rke", "7 - 6 ( 8 - 6 ) , 4 - 6 , 6 - 1"], ["\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193", "\u2193 representing \u2193"], ["1997 world group i", "qf", "march 2 , 1997", "barbara rittner", "hard ( i )", "eva martincov\u00e1 ludmila richterov\u00e1", "7 - 6 ( 7 - 3 ) , 6 - 2"]], "query": "most_eq { all_rows ; surface ; hard } = true", "question": "elena pampoulova played most of her matches on a hard surface ."}, {"topic": "list of australian test bowlers who have taken over 200 test wickets", "wiki": "https://en.wikipedia.org/wiki/List_of_Australian_Test_bowlers_who_have_taken_over_200_Test_wickets", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-18914438-1.html.csv", "action": "ordinal", "sent": "of the australian test bowlers who have taken over 200 test wickets , the one with the 2nd highest number of matches is glenn mcgrath .", "annotation": {"row": "2", "col": "3", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "matches", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; matches ; 2 }"}, "name"], "result": "glenn mcgrath", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; matches ; 2 } ; name }"}, "glenn mcgrath"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; matches ; 2 } ; name } ; glenn mcgrath } = true", "tointer": "select the row whose matches record of all rows is 2nd maximum . the name record of this row is glenn mcgrath ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; matches ; 2 } ; name } ; glenn mcgrath } = true", "interpret": "select the row whose matches record of all rows is 2nd maximum . the name record of this row is glenn mcgrath .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "matches_5": 5, "2_6": 6, "name_7": 7, "glenn mcgrath_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "matches_5": "matches", "2_6": "2", "name_7": "name", "glenn mcgrath_8": "glenn mcgrath"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "matches_5": [0], "2_6": [0], "name_7": [1], "glenn mcgrath_8": [2]}, "table_header": ["name", "career", "matches", "overs", "maidens", "runs", "wickets", "average", "best", "5w", "10w"], "table_cont": [["shane warne", "1992 - 2007", "145", "6784.1", "1762", "17995", "708", "25.42", "8 / 71", "37", "10"], ["glenn mcgrath", "1993 - 2007", "124", "4874.4", "1470", "12186", "563", "21.64", "8 / 24", "29", "3"], ["dennis lillee", "1971 - 1984", "70", "2834.1", "652", "8493", "355", "23.92", "7 / 83", "23", "7"], ["brett lee", "1999 - 2010", "76", "2755.1", "547", "9555", "310", "30.82", "5 / 30", "10", "0"], ["craig mcdermott", "1984 - 1996", "71", "2764.2", "583", "8332", "291", "28.63", "8 / 97", "14", "2"], ["jason gillespie", "1996 - 2006", "71", "2372.2", "630", "6770", "259", "26.14", "7 / 37", "8", "0"], ["richie benaud", "1952 - 1964", "63", "2727.2", "805", "6704", "248", "27.03", "7 / 72", "16", "1"], ["graham mckenzie", "1961 - 1971", "60", "2629.5", "547", "7328", "246", "29.79", "8 / 71", "16", "3"], ["ray lindwall", "1946 - 1960", "61", "1970.2", "419", "5251", "228", "23.03", "7 / 38", "12", "0"], ["clarrie grimmett", "1925 - 1936", "37", "2408.3", "736", "5231", "216", "24.22", "7 / 40", "21", "7"], ["merv hughes", "1985 - 1994", "53", "2047.3", "499", "6017", "212", "28.38", "8 / 87", "7", "1"], ["stuart macgill", "1998 - 2008", "44", "1872.5", "365", "6037", "208", "29.02", "8 / 108", "12", "2"], ["mitchell johnson", "2007 -", "50", "1870", "331", "6281", "205", "30.64", "8 / 61", "8", "0"]], "query": "eq { hop { nth_argmax { all_rows ; matches ; 2 } ; name } ; glenn mcgrath } = true", "question": "of the australian test bowlers who have taken over 200 test wickets , the one with the 2nd highest number of matches is glenn mcgrath ."}, {"topic": "liberia", "wiki": "https://en.wikipedia.org/wiki/Liberia", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17791-1.html.csv", "action": "majority", "sent": "most of the cities in liberia have a population of more than 100,000 .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "greater_than", "value": "100000", "subset": null}, "logic": {"func": "most_greater", "args": ["all_rows", "population ( 2008 )", "100000"], "result": true, "ind": 0, "tointer": "for the population ( 2008 ) records of all rows , most of them are greater than 100000 .", "tostr": "most_greater { all_rows ; population ( 2008 ) ; 100000 } = true"}, "logic_str": "most_greater { all_rows ; population ( 2008 ) ; 100000 } = true", "interpret": "for the population ( 2008 ) records of all rows , most of them are greater than 100000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_0": 0, "result_1": 1, "all_rows_2": 2, "population (2008)_3": 3, "100000_4": 4}, "g_ids_features": {"most_greater_0": "most_greater", "result_1": "true", "all_rows_2": "all_rows", "population (2008)_3": "population ( 2008 )", "100000_4": "100000"}, "g_adj": {"most_greater_0": [1], "result_1": [], "all_rows_2": [0], "population (2008)_3": [0], "100000_4": [0]}, "table_header": ["map", "county", "capital", "population ( 2008 )", "area", "created"], "table_cont": [["1", "bomi", "tubmanburg", "82036", "sqmi ( km2 )", "1984"], ["2", "bong", "gbarnga", "328919", "sqmi ( km2 )", "1964"], ["3", "gbarpolu", "bopulu", "83758", "sqmi ( km2 )", "2001"], ["4", "grand bassa", "buchanan", "224839", "sqmi ( km2 )", "1839"], ["5", "grand cape mount", "robertsport", "129055", "sqmi ( km2 )", "1844"], ["6", "grand gedeh", "zwedru", "126146", "sqmi ( km2 )", "1964"], ["7", "grand kru", "barclayville", "57106", "sqmi ( km2 )", "1984"], ["8", "lofa", "voinjama", "270114", "sqmi ( km2 )", "1964"], ["9", "margibi", "kakata", "199689", "sqmi ( km2 )", "1985"], ["10", "maryland", "harper", "136404", "sqmi ( km2 )", "1857"], ["11", "montserrado", "bensonville", "1144806", "sqmi ( km2 )", "1839"], ["12", "nimba", "sanniquellie", "468088", "sqmi ( km2 )", "1964"], ["13", "rivercess", "rivercess", "65862", "sqmi ( km2 )", "1985"], ["14", "river gee", "fish town", "67318", "sqmi ( km2 )", "2000"], ["15", "sinoe", "greenville", "104932", "sqmi ( km2 )", "1843"]], "query": "most_greater { all_rows ; population ( 2008 ) ; 100000 } = true", "question": "most of the cities in liberia have a population of more than 100,000 ."}, {"topic": "1970 denver broncos season", "wiki": "https://en.wikipedia.org/wiki/1970_Denver_Broncos_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17794610-1.html.csv", "action": "superlative", "sent": "during the 1970 denver broncos season , the game against the new orleans saints had the greatest attendance .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "10", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance }"}, "opponent"], "result": "new orleans saints", "ind": 1, "tostr": "hop { argmax { all_rows ; attendance } ; opponent }"}, "new orleans saints"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; attendance } ; opponent } ; new orleans saints } = true", "tointer": "select the row whose attendance record of all rows is maximum . the opponent record of this row is new orleans saints ."}, "logic_str": "eq { hop { argmax { all_rows ; attendance } ; opponent } ; new orleans saints } = true", "interpret": "select the row whose attendance record of all rows is maximum . the opponent record of this row is new orleans saints .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "opponent_6": 6, "new orleans saints_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "opponent_6": "opponent", "new orleans saints_7": "new orleans saints"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "opponent_6": [1], "new orleans saints_7": [2]}, "table_header": ["week", "date", "opponent", "result", "game site", "record", "attendance"], "table_cont": [["1", "september 20", "buffalo bills", "w 25 - 10", "war memorial stadium", "1 - 0", "34882"], ["2", "september 27", "pittsburgh steelers", "w 16 - 13", "mile high stadium", "2 - 0", "50705"], ["3", "october 4", "kansas city chiefs", "w 26 - 13", "mile high stadium", "3 - 0", "50705"], ["4", "october 11", "oakland raiders", "l 23 - 35", "oakland - alameda county coliseum", "3 - 1", "54436"], ["5", "october 18", "atlanta falcons", "w 24 - 10", "mile high stadium", "4 - 1", "50705"], ["6", "october 25", "san francisco 49ers", "l 14 - 19", "kezar stadium", "4 - 2", "39515"], ["7", "november 1", "washington redskins", "l 3 - 19", "mile high stadium", "4 - 3", "50705"], ["8", "november 8", "san diego chargers", "l 21 - 24", "san diego stadium", "4 - 4", "48327"], ["9", "november 15", "oakland raiders", "l 19 - 24", "mile high stadium", "4 - 5", "50959"], ["10", "november 22", "new orleans saints", "w 31 - 6", "tulane stadium", "5 - 5", "66837"], ["11", "november 29", "houston oilers", "l 21 - 31", "astrodome", "5 - 6", "35733"], ["12", "december 6", "kansas city chiefs", "l 0 - 16", "municipal stadium", "5 - 7", "50454"], ["13", "december 13", "san diego chargers", "t 17 - 17", "mile high stadium", "5 - 7 - 1", "50959"], ["14", "december 20", "cleveland browns", "l 13 - 27", "mile high stadium", "5 - 8 - 1", "51001"]], "query": "eq { hop { argmax { all_rows ; attendance } ; opponent } ; new orleans saints } = true", "question": "during the 1970 denver broncos season , the game against the new orleans saints had the greatest attendance ."}, {"topic": "kira nagy", "wiki": "https://en.wikipedia.org/wiki/Kira_Nagy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12531158-2.html.csv", "action": "comparative", "sent": "kira nagy played against christ\u00edna papad\u00e1ki before she played against julia vakulenko .", "annotation": {"row_1": "4", "row_2": "9", "col": "1", "col_other": "4", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent in the final", "christ\u00edna papad\u00e1ki"], "result": null, "ind": 0, "tointer": "select the rows whose opponent in the final record fuzzily matches to christ\u00edna papad\u00e1ki .", "tostr": "filter_eq { all_rows ; opponent in the final ; christ\u00edna papad\u00e1ki }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; opponent in the final ; christ\u00edna papad\u00e1ki } ; date }", "tointer": "select the rows whose opponent in the final record fuzzily matches to christ\u00edna papad\u00e1ki . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent in the final", "julia vakulenko"], "result": null, "ind": 1, "tointer": "select the rows whose opponent in the final record fuzzily matches to julia vakulenko .", "tostr": "filter_eq { all_rows ; opponent in the final ; julia vakulenko }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; opponent in the final ; julia vakulenko } ; date }", "tointer": "select the rows whose opponent in the final record fuzzily matches to julia vakulenko . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; opponent in the final ; christ\u00edna papad\u00e1ki } ; date } ; hop { filter_eq { all_rows ; opponent in the final ; julia vakulenko } ; date } } = true", "tointer": "select the rows whose opponent in the final record fuzzily matches to christ\u00edna papad\u00e1ki . take the date record of this row . select the rows whose opponent in the final record fuzzily matches to julia vakulenko . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; opponent in the final ; christ\u00edna papad\u00e1ki } ; date } ; hop { filter_eq { all_rows ; opponent in the final ; julia vakulenko } ; date } } = true", "interpret": "select the rows whose opponent in the final record fuzzily matches to christ\u00edna papad\u00e1ki . take the date record of this row . select the rows whose opponent in the final record fuzzily matches to julia vakulenko . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "opponent in the final_7": 7, "christ\u00edna papad\u00e1ki_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "opponent in the final_11": 11, "julia vakulenko_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "opponent in the final_7": "opponent in the final", "christ\u00edna papad\u00e1ki_8": "christ\u00edna papad\u00e1ki", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "opponent in the final_11": "opponent in the final", "julia vakulenko_12": "julia vakulenko", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "opponent in the final_7": [0], "christ\u00edna papad\u00e1ki_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "opponent in the final_11": [1], "julia vakulenko_12": [1], "date_13": [3]}, "table_header": ["date", "tournament", "surface", "opponent in the final", "score"], "table_cont": [["oct 2 , 1994", "mali lo\u0161inj", "clay", "radka surova", "6 - 4 , 6 - 2"], ["nov 26 , 1995", "majorca", "clay ( i )", "andrea nosz\u00e1ly", "6 - 4 , 6 - 3"], ["sep 14 , 1997", "madrid", "clay", "nuria montero", "6 - 1 , 6 - 0"], ["apr 5 , 1998", "athens", "clay", "christ\u00edna papad\u00e1ki", "7 - 5 , 2 - 6 , 6 - 3"], ["apr 12 , 1998", "dubai", "hard", "wynne prakusya", "6 - 4 , 6 - 1"], ["nov 14 , 1999", "monterrey", "hard", "ansley cargill", "6 - 4 , 6 - 2"], ["nov 21 , 1999", "campos", "clay", "miriam dagostini", "5 - 7 6 - 3 6 - 2"], ["may 28 , 2000", "guimar\u00e3es", "hard", "bahia mouhtassine", "6 - 0 , 5 - 7 , 7 - 6"], ["jun 18 , 2000", "lenzerheide", "clay", "julia vakulenko", "6 - 2 , 3 - 6 , 7 - 6"], ["oct 21 , 2001", "jou\u00e9 - l\u00e8s - tours", "hard ( i )", "anne - laure heitz", "1 - 6 , 6 - 4 , 6 - 0"], ["sep 28 , 2003", "jounieh", "clay", "ana timoti\u0107", "6 - 1 , 7 - 5"], ["nov 16 , 2003", "mexico city", "hard", "melinda czink", "6 - 2 , 6 - 3"], ["apr 2 , 2006", "poza rica", "hard", "zs\u00f3fia gubacsi", "6 - 4 , 6 - 2"], ["jun 19 , 2006", "zagreb", "clay", "tathiana garbin", "7 - 6 , 3 - 6 , 7 - 6"], ["jul 23 , 2006", "rome", "clay", "aliz\u00e9 cornet", "6 - 2 , 6 - 7 , 6 - 4"], ["jun 10 , 2007", "zagreb", "clay", "ivana lisjak", "2 - 6 , 7 - 6 , 6 - 2"], ["jun 17 , 2007", "campobasso", "clay", "christina wheeler", "6 - 2 , 6 - 0"], ["jul 1 , 2007", "istanbul", "hard", "maria fernanda alves", "6 - 7 , 7 - 5 , 6 - 1"]], "query": "less { hop { filter_eq { all_rows ; opponent in the final ; christ\u00edna papad\u00e1ki } ; date } ; hop { filter_eq { all_rows ; opponent in the final ; julia vakulenko } ; date } } = true", "question": "kira nagy played against christ\u00edna papad\u00e1ki before she played against julia vakulenko ."}, {"topic": "imperfect season", "wiki": "https://en.wikipedia.org/wiki/Imperfect_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14417906-8.html.csv", "action": "majority", "sent": "all of the teams with imperfect seasons recorded a total of 0 draws .", "annotation": {"scope": "all", "col": "5", "most_or_all": "all", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "all_eq", "args": ["all_rows", "draws", "0"], "result": true, "ind": 0, "tointer": "for the draws records of all rows , all of them are equal to 0 .", "tostr": "all_eq { all_rows ; draws ; 0 } = true"}, "logic_str": "all_eq { all_rows ; draws ; 0 } = true", "interpret": "for the draws records of all rows , all of them are equal to 0 .", "num_func": 1, "nid": 1, "g_ids": {"all_eq_0": 0, "result_1": 1, "all_rows_2": 2, "draws_3": 3, "0_4": 4}, "g_ids_features": {"all_eq_0": "all_eq", "result_1": "true", "all_rows_2": "all_rows", "draws_3": "draws", "0_4": "0"}, "g_adj": {"all_eq_0": [1], "result_1": [], "all_rows_2": [0], "draws_3": [0], "0_4": [0]}, "table_header": ["season", "team", "wins", "losses", "draws"], "table_cont": [["1991 - 92", "nottingham city", "0", "26", "0"], ["1989 - 90", "runcorn highfield", "0", "28", "0"], ["1941 - 1942", "bramley", "0", "19", "0"], ["1940 - 1941", "broughton rangers", "0", "10", "0"], ["1940 - 1941", "leigh", "0", "13", "0"], ["1906 - 1907", "liverpool city", "0", "30", "0"]], "query": "all_eq { all_rows ; draws ; 0 } = true", "question": "all of the teams with imperfect seasons recorded a total of 0 draws ."}, {"topic": "adrian mannarino", "wiki": "https://en.wikipedia.org/wiki/Adrian_Mannarino", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17995113-2.html.csv", "action": "ordinal", "sent": "the 2nd tournament adrian mannarino played in the united kingdom was played on a hard surface .", "annotation": {"scope": "subset", "row": "4", "col": "1", "order": "2", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "no", "subset": {"col": "2", "criterion": "fuzzily_match", "value": "united kingdom"}}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "united kingdom"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; tournament ; united kingdom }", "tointer": "select the rows whose tournament record fuzzily matches to united kingdom ."}, "date", "2"], "result": null, "ind": 1, "tostr": "nth_argmin { filter_eq { all_rows ; tournament ; united kingdom } ; date ; 2 }"}, "surface"], "result": "hard", "ind": 2, "tostr": "hop { nth_argmin { filter_eq { all_rows ; tournament ; united kingdom } ; date ; 2 } ; surface }"}, "hard"], "result": true, "ind": 3, "tostr": "eq { hop { nth_argmin { filter_eq { all_rows ; tournament ; united kingdom } ; date ; 2 } ; surface } ; hard } = true", "tointer": "select the rows whose tournament record fuzzily matches to united kingdom . select the row whose date record of these rows is 2nd minimum . the surface record of this row is hard ."}, "logic_str": "eq { hop { nth_argmin { filter_eq { all_rows ; tournament ; united kingdom } ; date ; 2 } ; surface } ; hard } = true", "interpret": "select the rows whose tournament record fuzzily matches to united kingdom . select the row whose date record of these rows is 2nd minimum . the surface record of this row is hard .", "num_func": 4, "nid": 4, "g_ids": {"str_eq_3": 3, "result_4": 4, "str_hop_2": 2, "nth_argmin_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "tournament_6": 6, "united kingdom_7": 7, "date_8": 8, "2_9": 9, "surface_10": 10, "hard_11": 11}, "g_ids_features": {"str_eq_3": "str_eq", "result_4": "true", "str_hop_2": "str_hop", "nth_argmin_1": "nth_argmin", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "tournament_6": "tournament", "united kingdom_7": "united kingdom", "date_8": "date", "2_9": "2", "surface_10": "surface", "hard_11": "hard"}, "g_adj": {"str_eq_3": [4], "result_4": [], "str_hop_2": [3], "nth_argmin_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "tournament_6": [0], "united kingdom_7": [0], "date_8": [1], "2_9": [1], "surface_10": [2], "hard_11": [3]}, "table_header": ["date", "tournament", "surface", "opponent in the final", "score"], "table_cont": [["18 april 2006", "melilla , spain", "hard", "komlavi loglo", "6 - 2 , 6 - 3"], ["19 june 2006", "santa cruz de tenerife , spain", "hard", "albert ramos - vi\u00f1olas", "6 - 2 , 6 - 0"], ["22 october 2007", "rodez , france", "hard", "baptiste dupuy", "6 - 1 , 6 - 2"], ["12 november 2007", "sunderland , united kingdom", "hard", "ken skupski", "6 - 4 , 6 - 3"], ["22 january 2008", "sheffield , united kingdom", "hard", "timo nieminen", "3 - 6 , 7 - 6 ( 8 - 6 ) , 6 - 2"], ["15 september 2008", "plaisir , france", "hard", "jean - christophe faurel", "4 - 6 , 6 - 4 , 6 - 2"], ["10 november 2008", "jersey , united kingdom", "hard", "andreas beck", "7 - 6 ( 7 - 4 ) , 7 - 6 ( 7 - 4 )"], ["15 august 2010", "istanbul , turkey", "hard", "mikhail kukushkin", "6 - 4 , 3 - 6 , 6 - 3"], ["10 october 2010", "mons , belgium", "hard ( i )", "steve darcis", "7 - 5 , 6 - 4"], ["5 january 2013", "noum\u00e9a , new caledonia", "hard", "andrej martin", "6 - 4 , 6 - 3"], ["17 march 2013", "sarajevo , bosnia and herzegovina", "hard ( i )", "dustin brown", "7 - 6 ( 7 - 3 ) , 7 - 6 ( 7 - 2 )"]], "query": "eq { hop { nth_argmin { filter_eq { all_rows ; tournament ; united kingdom } ; date ; 2 } ; surface } ; hard } = true", "question": "the 2nd tournament adrian mannarino played in the united kingdom was played on a hard surface ."}, {"topic": "2008 chicago bears season", "wiki": "https://en.wikipedia.org/wiki/2008_Chicago_Bears_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15185487-1.html.csv", "action": "ordinal", "sent": "marcus harrison was the fourth highest overall pick in the 2008 chicago bears season .", "annotation": {"row": "4", "col": "2", "order": "4", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "pick", "4"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; pick ; 4 }"}, "player"], "result": "marcus harrison", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; pick ; 4 } ; player }"}, "marcus harrison"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; pick ; 4 } ; player } ; marcus harrison } = true", "tointer": "select the row whose pick record of all rows is 4th minimum . the player record of this row is marcus harrison ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; pick ; 4 } ; player } ; marcus harrison } = true", "interpret": "select the row whose pick record of all rows is 4th minimum . the player record of this row is marcus harrison .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "pick_5": 5, "4_6": 6, "player_7": 7, "marcus harrison_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "pick_5": "pick", "4_6": "4", "player_7": "player", "marcus harrison_8": "marcus harrison"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "pick_5": [0], "4_6": [0], "player_7": [1], "marcus harrison_8": [2]}, "table_header": ["round", "pick", "player", "position", "college"], "table_cont": [["1", "14", "chris williams", "ot", "vanderbilt"], ["2", "44", "matt forte", "rb", "tulane"], ["3", "70", "earl bennett", "wr", "vanderbilt"], ["3", "90", "marcus harrison", "dt", "arkansas"], ["4", "120", "craig steltz", "s", "lsu"], ["5", "142", "zack bowman", "cb", "nebraska"], ["5", "158", "kellen davis", "te", "michigan state"], ["7", "208", "ervin baldwin", "de", "michigan state"], ["7", "222", "chester adams", "og", "georgia"], ["7", "243", "joey larocque", "lb", "oregon state"], ["7", "247", "kirk barton", "ot", "ohio state"], ["7", "248", "marcus monk", "wr", "arkansas"], ["according to official website", "according to official website", "according to official website", "according to official website", "according to official website"]], "query": "eq { hop { nth_argmin { all_rows ; pick ; 4 } ; player } ; marcus harrison } = true", "question": "marcus harrison was the fourth highest overall pick in the 2008 chicago bears season ."}, {"topic": "b \" king 's commissioner \"", "wiki": "https://en.wikipedia.org/wiki/King%27s_Commissioner", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1825239-1.html.csv", "action": "count", "sent": "three of the king 's commissioner office holders were affiliated with the labour party .", "annotation": {"scope": "all", "criterion": "equal", "value": "labour party", "result": "3", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "party", "labour party"], "result": null, "ind": 0, "tointer": "select the rows whose party record fuzzily matches to labour party .", "tostr": "filter_eq { all_rows ; party ; labour party }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; party ; labour party } }", "tointer": "select the rows whose party record fuzzily matches to labour party . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; party ; labour party } } ; 3 } = true", "tointer": "select the rows whose party record fuzzily matches to labour party . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; party ; labour party } } ; 3 } = true", "interpret": "select the rows whose party record fuzzily matches to labour party . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "party_5": 5, "labour party_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "party_5": "party", "labour party_6": "labour party", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "party_5": [0], "labour party_6": [0], "3_7": [2]}, "table_header": ["province", "commissioner", "assumed office", "duration", "party", "born"], "table_cont": [["drenthe", "jacques tichelaar", "may 1 , 2009", "4years , 276days", "labour party", "january 2 , 1953 ( age61 )"], ["flevoland", "leen verbeek", "november 1 , 2008", "5years , 92days", "labour party", "march 5 , 1954 ( age59 )"], ["frysln", "john jorritsma", "may 16 , 2008", "5years , 261days", "people 's party for freedom and democracy", "september 16 , 1956 ( age57 )"], ["gelderland", "clemens cornielje", "august 31 , 2005", "8years , 154days", "peoples party for freedom and democracy", "june 10 , 1958 ( age55 )"], ["groningen", "max van den berg", "september 1 , 2007", "6years , 153days", "labour party", "march 22 , 1946 ( age67 )"], ["limburg", "theo bovens", "june 30 , 2011", "2years , 216days", "christian democratic appeal", "october 1 , 1959 ( age54 )"], ["north brabant", "wim van de donk", "october 1 , 2009", "4years , 123days", "christian democratic appeal", "may 17 , 1962 ( age51 )"], ["north holland", "johan remkes", "july 1 , 2010", "3years , 215days", "peoples party for freedom and democracy", "june 15 , 1951 ( age62 )"], ["overijssel", "ank bijleveld", "january 1 , 2011", "3years , 31days", "christian democratic appeal", "march 17 , 1962 ( age51 )"], ["south holland", "jan franssen", "may 3 , 2000", "13years , 274days", "peoples party for freedom and democracy", "june 11 , 1951 ( age62 )"], ["utrecht", "willibrord van beek", "september 15 , 2013", "0years , 139days", "peoples party for freedom and democracy", "january 15 , 1949 ( age65 )"], ["zeeland", "han polman", "march 1 , 2013", "0years , 337days", "democrats 66", "january 16 , 1963 ( age51 )"]], "query": "eq { count { filter_eq { all_rows ; party ; labour party } } ; 3 } = true", "question": "three of the king 's commissioner office holders were affiliated with the labour party ."}, {"topic": "2007 - 08 chicago bulls season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Chicago_Bulls_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11960610-6.html.csv", "action": "aggregation", "sent": "a total of 240,206 fans attended games during the 2007-08 chicago bulls season .", "annotation": {"scope": "all", "col": "8", "type": "sum", "result": "240,206", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "location attendance"], "result": "240,206", "ind": 0, "tostr": "sum { all_rows ; location attendance }"}, "240,206"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; location attendance } ; 240,206 } = true", "tointer": "the sum of the location attendance record of all rows is 240,206 ."}, "logic_str": "round_eq { sum { all_rows ; location attendance } ; 240,206 } = true", "interpret": "the sum of the location attendance record of all rows is 240,206 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "location attendance_4": 4, "240,206_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "location attendance_4": "location attendance", "240,206_5": "240,206"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "location attendance_4": [0], "240,206_5": [1]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["2", "november 2", "philadelphia", "85 - 96", "gordon ( 25 )", "thomas ( 12 )", "hinrich ( 8 )", "united center 22034", "0 - 2"], ["3", "november 3", "milwaukee", "72 - 78", "gordon ( 15 )", "smith ( 10 )", "hinrich ( 4 )", "bradley center 18717", "0 - 3"], ["4", "november 6", "la clippers", "91 - 97", "deng ( 22 )", "deng ( 8 )", "thomas ( 5 )", "united center 21742", "0 - 4"], ["5", "november 8", "detroit", "97 - 93", "thomas ( 19 )", "thomas ( 14 )", "hinrich ( 14 )", "united center 21797", "1 - 4"], ["6", "november 10", "toronto", "71 - 101", "nocioni ( 20 )", "sefolosha ( 6 )", "hinrich , duhon , sefolosha ( 4 )", "united center 22467", "1 - 5"], ["7", "november 15", "phoenix", "102 - 112", "gordon ( 24 )", "wallace ( 10 )", "hinrich ( 7 )", "us airways center 18422", "1 - 6"], ["8", "november 17", "la clippers", "92 - 73", "gordon ( 25 )", "wallace ( 13 )", "hinrich , gordon , duhon ( 4 )", "staples center 17535", "2 - 6"], ["9", "november 18", "la lakers", "78 - 106", "gordon ( 20 )", "wallace ( 8 )", "hinrich ( 8 )", "staples center 18997", "2 - 7"], ["10", "november 20", "denver", "91 - 112", "noah ( 16 )", "wallace ( 12 )", "duhon ( 5 )", "pepsi center 17106", "2 - 8"], ["11", "november 24", "new york", "78 - 85", "nocioni ( 23 )", "wallace ( 12 )", "hinrich ( 4 )", "madison square garden 19763", "2 - 9"], ["12", "november 25", "toronto", "78 - 93", "deng ( 21 )", "deng ( 9 )", "hinrich ( 7 )", "air canada centre 19800", "2 - 10"], ["13", "november 27", "atlanta", "90 - 78", "deng ( 22 )", "wallace , thomas ( 12 )", "duhon ( 7 )", "united center 21826", "3 - 10"]], "query": "round_eq { sum { all_rows ; location attendance } ; 240,206 } = true", "question": "a total of 240,206 fans attended games during the 2007-08 chicago bulls season ."}, {"topic": "croatia national football team results", "wiki": "https://en.wikipedia.org/wiki/Croatia_national_football_team_results", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14282690-16.html.csv", "action": "majority", "sent": "the majority of these matches were world cup 2006 qualifiers .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "world cup 2006 qualifier", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "friendly", "world cup 2006 qualifier"], "result": true, "ind": 0, "tointer": "for the friendly records of all rows , most of them fuzzily match to world cup 2006 qualifier .", "tostr": "most_eq { all_rows ; friendly ; world cup 2006 qualifier } = true"}, "logic_str": "most_eq { all_rows ; friendly ; world cup 2006 qualifier } = true", "interpret": "for the friendly records of all rows , most of them fuzzily match to world cup 2006 qualifier .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "friendly_3": 3, "world cup 2006 qualifier_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "friendly_3": "friendly", "world cup 2006 qualifier_4": "world cup 2006 qualifier"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "friendly_3": [0], "world cup 2006 qualifier_4": [0]}, "table_header": ["149", "9 february", "friendly", "israel", "croatia"], "table_cont": [["150", "26 march", "world cup 2006 qualifier", "croatia", "iceland"], ["151", "30 march", "world cup 2006 qualifier", "croatia", "malta"], ["152", "4 june", "world cup 2006 qualifier", "bulgaria", "croatia"], ["153", "17 august", "friendly", "croatia", "brazil"], ["154", "3 september", "world cup 2006 qualifier", "iceland", "croatia"], ["155", "7 september", "world cup 2006 qualifier", "malta", "croatia"], ["156", "8 october", "world cup 2006 qualifier", "croatia", "sweden"], ["157", "12 october", "world cup 2006 qualifier", "hungary", "croatia"], ["158", "12 november", "friendly", "portugal", "croatia"]], "query": "most_eq { all_rows ; friendly ; world cup 2006 qualifier } = true", "question": "the majority of these matches were world cup 2006 qualifiers ."}, {"topic": "list of longest - serving soap opera actors", "wiki": "https://en.wikipedia.org/wiki/List_of_longest-serving_soap_opera_actors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18772558-1.html.csv", "action": "aggregation", "sent": "the average duration of the longest serving soap opera actors is 54 years .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "54", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "duration"], "result": "54", "ind": 0, "tostr": "avg { all_rows ; duration }"}, "54"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; duration } ; 54 } = true", "tointer": "the average of the duration record of all rows is 54 ."}, "logic_str": "round_eq { avg { all_rows ; duration } ; 54 } = true", "interpret": "the average of the duration record of all rows is 54 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "duration_4": 4, "54_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "duration_4": "duration", "54_5": "54"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "duration_4": [0], "54_5": [1]}, "table_header": ["rank", "actor", "character", "soap opera", "years", "duration"], "table_cont": [["1", "lesley saweard", "christine barford", "the archers", "1953 -", "61 years"], ["2", "norman painting", "phil archer", "the archers", "1950 - 2009", "59 years"], ["3", "patricia greene", "jill archer", "the archers", "1957 -", "57 years"], ["4", "june spencer", "peggy woolley", "the archers", "1951 - 1953 , 1962 -", "54 years"], ["5", "william roache", "ken barlow", "coronation street", "1960 -", "54 years"], ["6", "helen wagner", "nancy hughes", "as the world turns", "1956 - 1981 , 1983 - 2010", "52 years"], ["7", "eileen derbyshire", "emily bishop", "coronation street", "1961 , 1962 - 1966 , 1967 -", "52 years"], ["8", "angela piper", "jennifer aldridge", "the archers", "1963 -", "51 years"], ["9", "don hastings", "bob hughes", "as the world turns", "1960 - 2010", "50 years"], ["10", "eileen fulton", "lisa grimaldi", "as the world turns", "1960 - 1965 , 1965 - 1983 , 1984 - 2010", "50 years"]], "query": "round_eq { avg { all_rows ; duration } ; 54 } = true", "question": "the average duration of the longest serving soap opera actors is 54 years ."}, {"topic": "robert seguso", "wiki": "https://en.wikipedia.org/wiki/Robert_Seguso", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2362606-1.html.csv", "action": "majority", "sent": "out of the tennis doubles finals that robert seguso participated in , ken flach was robert 's partner for most of his finals appearances .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "ken flach", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "partnering", "ken flach"], "result": true, "ind": 0, "tointer": "for the partnering records of all rows , most of them fuzzily match to ken flach .", "tostr": "most_eq { all_rows ; partnering ; ken flach } = true"}, "logic_str": "most_eq { all_rows ; partnering ; ken flach } = true", "interpret": "for the partnering records of all rows , most of them fuzzily match to ken flach .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "partnering_3": 3, "ken flach_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "partnering_3": "partnering", "ken flach_4": "ken flach"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "partnering_3": [0], "ken flach_4": [0]}, "table_header": ["outcome", "year", "championship", "partnering", "opponents in final", "score in final"], "table_cont": [["winner", "1985", "us open", "ken flach", "henri leconte yannick noah", "6 - 7 , 7 - 6 , 7 - 6 , 6 - 0"], ["winner", "1987", "french open", "anders j\u00e4rryd", "guy forget yannick noah", "6 - 7 , 6 - 7 , 6 - 3 , 6 - 4 , 6 - 2"], ["winner", "1987", "wimbledon", "ken flach", "sergio casal emilio s\u00e1nchez", "3 - 6 , 6 - 7 , 7 - 6 , 6 - 1 , 6 - 4"], ["runner - up", "1987", "us open", "ken flach", "stefan edberg anders j\u00e4rryd", "6 - 7 , 2 - 6 , 6 - 4 , 7 - 5 , 6 - 7"], ["winner", "1988", "wimbledon ( 2 )", "ken flach", "john fitzgerald anders j\u00e4rryd", "6 - 4 , 2 - 6 , 6 - 4 , 7 - 6"]], "query": "most_eq { all_rows ; partnering ; ken flach } = true", "question": "out of the tennis doubles finals that robert seguso participated in , ken flach was robert 's partner for most of his finals appearances ."}, {"topic": "1976 buffalo bills season", "wiki": "https://en.wikipedia.org/wiki/1976_Buffalo_Bills_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18842944-2.html.csv", "action": "majority", "sent": "the majority of games resulted in losses for the buffalo bills .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "fuzzily_match", "value": "l", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "l"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to l .", "tostr": "most_eq { all_rows ; result ; l } = true"}, "logic_str": "most_eq { all_rows ; result ; l } = true", "interpret": "for the result records of all rows , most of them fuzzily match to l .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "l_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "l_4": "l"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "l_4": [0]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 13 , 1976", "miami dolphins", "l 30 - 21", "77683"], ["2", "september 19 , 1976", "houston oilers", "l 13 - 3", "61384"], ["3", "september 26 , 1976", "tampa bay buccaneers", "w 14 - 9", "44505"], ["4", "october 3 , 1976", "kansas city chiefs", "w 50 - 17", "51909"], ["5", "october 10 , 1976", "new york jets", "l 17 - 14", "59110"], ["6", "october 17 , 1976", "baltimore colts", "l 31 - 13", "71009"], ["7", "october 24 , 1976", "new england patriots", "l 26 - 22", "45144"], ["8", "october 31 , 1976", "new york jets", "l 19 - 14", "41285"], ["9", "november 7 , 1976", "new england patriots", "l 20 - 10", "61157"], ["10", "november 15 , 1976", "dallas cowboys", "l 17 - 10", "51799"], ["11", "november 21 , 1976", "san diego chargers", "l 34 - 13", "36539"], ["12", "november 25 , 1976", "detroit lions", "l 27 - 14", "66875"], ["13", "december 5 , 1976", "miami dolphins", "l 45 - 27", "43475"], ["14", "december 12 , 1976", "baltimore colts", "l 58 - 20", "50451"]], "query": "most_eq { all_rows ; result ; l } = true", "question": "the majority of games resulted in losses for the buffalo bills ."}, {"topic": "1992 indianapolis colts season", "wiki": "https://en.wikipedia.org/wiki/1992_Indianapolis_Colts_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14876891-1.html.csv", "action": "unique", "sent": "rodney culver is the only player from notre dame college drafted during the 1992 indianapolis colts season .", "annotation": {"scope": "all", "row": "4", "col": "5", "col_other": "3", "criterion": "equal", "value": "notre dame", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "notre dame"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to notre dame .", "tostr": "filter_eq { all_rows ; college ; notre dame }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; college ; notre dame } }", "tointer": "select the rows whose college record fuzzily matches to notre dame . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "college", "notre dame"], "result": null, "ind": 0, "tointer": "select the rows whose college record fuzzily matches to notre dame .", "tostr": "filter_eq { all_rows ; college ; notre dame }"}, "player"], "result": "rodney culver", "ind": 2, "tostr": "hop { filter_eq { all_rows ; college ; notre dame } ; player }"}, "rodney culver"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; college ; notre dame } ; player } ; rodney culver }", "tointer": "the player record of this unqiue row is rodney culver ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; college ; notre dame } } ; eq { hop { filter_eq { all_rows ; college ; notre dame } ; player } ; rodney culver } } = true", "tointer": "select the rows whose college record fuzzily matches to notre dame . there is only one such row in the table . the player record of this unqiue row is rodney culver ."}, "logic_str": "and { only { filter_eq { all_rows ; college ; notre dame } } ; eq { hop { filter_eq { all_rows ; college ; notre dame } ; player } ; rodney culver } } = true", "interpret": "select the rows whose college record fuzzily matches to notre dame . there is only one such row in the table . the player record of this unqiue row is rodney culver .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "college_7": 7, "notre dame_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "rodney culver_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "college_7": "college", "notre dame_8": "notre dame", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "rodney culver_10": "rodney culver"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "college_7": [0], "notre dame_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "rodney culver_10": [3]}, "table_header": ["round ( overall )", "nfl team", "player", "position", "college"], "table_cont": [["1 ( 1 )", "indianapolis colts", "steve emtman", "defensive tackle", "washington"], ["1 ( 2 )", "indianapolis colts", "quentin coryatt", "linebacker", "texas a & m"], ["2 ( 29 )", "indianapolis colts", "ashley ambrose", "defensive back", "mississippi valley st"], ["4 ( 85 )", "indianapolis colts", "rodney culver", "running back", "notre dame"], ["4 ( 105 )", "indianapolis colts", "tony mccoy", "defensive tackle", "florida"]], "query": "and { only { filter_eq { all_rows ; college ; notre dame } } ; eq { hop { filter_eq { all_rows ; college ; notre dame } ; player } ; rodney culver } } = true", "question": "rodney culver is the only player from notre dame college drafted during the 1992 indianapolis colts season ."}, {"topic": "2007 - 08 new jersey devils season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_New_Jersey_Devils_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11902366-4.html.csv", "action": "majority", "sent": "all games of the 2007 - 08 new jersey devils season were scheduled for the month of november .", "annotation": {"scope": "all", "col": "1", "most_or_all": "all", "criterion": "equal", "value": "november", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "date", "november"], "result": true, "ind": 0, "tointer": "for the date records of all rows , all of them fuzzily match to november .", "tostr": "all_eq { all_rows ; date ; november } = true"}, "logic_str": "all_eq { all_rows ; date ; november } = true", "interpret": "for the date records of all rows , all of them fuzzily match to november .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "date_3": 3, "november_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "date_3": "date", "november_4": "november"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "date_3": [0], "november_4": [0]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["november 2", "toronto", "2 - 3", "new jersey", "brodeur", "14523", "5 - 6 - 1"], ["november 3", "new jersey", "1 - 2", "ny rangers", "brodeur", "18200", "5 - 6 - 2"], ["november 5", "pittsburgh", "5 - 0", "new jersey", "brodeur", "14032", "5 - 7 - 2"], ["november 8", "philadelphia", "1 - 4", "new jersey", "brodeur", "14948", "6 - 7 - 2"], ["november 10", "new jersey", "1 - 2", "ny islanders", "brodeur", "15361", "6 - 8 - 2"], ["november 12", "new jersey", "3 - 2", "pittsburgh", "weekes", "17096", "7 - 8 - 2"], ["november 14", "ny rangers", "4 - 2", "new jersey", "brodeur", "17625", "7 - 9 - 2"], ["november 16", "ny islanders", "1 - 0", "new jersey", "brodeur", "15076", "7 - 10 - 2"], ["november 17", "new jersey", "6 - 2", "philadelphia", "brodeur", "19621", "8 - 10 - 2"], ["november 21", "new jersey", "2 - 1", "pittsburgh", "brodeur", "17132", "9 - 10 - 2"], ["november 23", "new jersey", "3 - 0", "atlanta", "brodeur", "18545", "10 - 10 - 2"], ["november 24", "new jersey", "3 - 2", "tampa bay", "brodeur", "19077", "11 - 10 - 2"], ["november 28", "dallas", "2 - 4", "new jersey", "brodeur", "13665", "12 - 10 - 2"], ["november 30", "montreal", "0 - 4", "new jersey", "brodeur", "15081", "13 - 10 - 2"]], "query": "all_eq { all_rows ; date ; november } = true", "question": "all games of the 2007 - 08 new jersey devils season were scheduled for the month of november ."}, {"topic": "damoh ( lok sabha constituency )", "wiki": "https://en.wikipedia.org/wiki/Damoh_%28Lok_Sabha_constituency%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18504485-1.html.csv", "action": "count", "sent": "there are 3 sagar districts in the damoh ( lok sabha constituency ) .", "annotation": {"scope": "all", "criterion": "equal", "value": "sagar", "result": "3", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "district", "sagar"], "result": null, "ind": 0, "tointer": "select the rows whose district record fuzzily matches to sagar .", "tostr": "filter_eq { all_rows ; district ; sagar }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; district ; sagar } }", "tointer": "select the rows whose district record fuzzily matches to sagar . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; district ; sagar } } ; 3 } = true", "tointer": "select the rows whose district record fuzzily matches to sagar . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; district ; sagar } } ; 3 } = true", "interpret": "select the rows whose district record fuzzily matches to sagar . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "district_5": 5, "sagar_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "district_5": "district", "sagar_6": "sagar", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "district_5": [0], "sagar_6": [0], "3_7": [2]}, "table_header": ["constituency number", "name", "reserved for ( sc / st / none )", "district", "number of electorates ( 2009 )"], "table_cont": [["38", "deori", "none", "sagar", "160350"], ["39", "rehli", "none", "sagar", "176108"], ["42", "banda", "none", "sagar", "176993"], ["53", "malhara", "none", "chhatarpur", "150503"], ["54", "pathariya", "none", "damoh", "165758"], ["55", "damoh", "none", "damoh", "185489"], ["56", "jabera", "none", "damoh", "169816"], ["57", "hatta", "sc", "damoh", "173217"], ["total :", "total :", "total :", "total :", "1358234"]], "query": "eq { count { filter_eq { all_rows ; district ; sagar } } ; 3 } = true", "question": "there are 3 sagar districts in the damoh ( lok sabha constituency ) ."}, {"topic": "2008 - 09 charlotte bobcats season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Charlotte_Bobcats_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17001658-9.html.csv", "action": "ordinal", "sent": "charlotte bobcat 's game against atlanta on march 6 was the second game in march for the bobcat 's 2008-09 season .", "annotation": {"row": "2", "col": "1", "order": "2", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "game", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; game ; 2 }"}, "date"], "result": "march 6", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; game ; 2 } ; date }"}, "march 6"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; game ; 2 } ; date } ; march 6 } = true", "tointer": "select the row whose game record of all rows is 2nd minimum . the date record of this row is march 6 ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; game ; 2 } ; date } ; march 6 } = true", "interpret": "select the row whose game record of all rows is 2nd minimum . the date record of this row is march 6 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "game_5": 5, "2_6": 6, "date_7": 7, "march 6_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "game_5": "game", "2_6": "2", "date_7": "date", "march 6_8": "march 6"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "game_5": [0], "2_6": [0], "date_7": [1], "march 6_8": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["61", "march 3", "chicago", "w 96 - 80 ( ot )", "raymond felton , raja bell ( 18 )", "emeka okafor ( 10 )", "raymond felton ( 9 )", "time warner cable arena 14216", "26 - 35"], ["62", "march 6", "atlanta", "w 98 - 91 ( ot )", "gerald wallace ( 21 )", "emeka okafor ( 11 )", "boris diaw ( 13 )", "time warner cable arena 15058", "27 - 35"], ["63", "march 7", "new york", "w 114 - 105 ( ot )", "gerald wallace ( 23 )", "gerald wallace ( 13 )", "raymond felton ( 10 )", "madison square garden 19763", "28 - 35"], ["64", "march 10", "san antonio", "l 86 - 100 ( ot )", "emeka okafor , raja bell ( 16 )", "desagana diop , gerald wallace ( 7 )", "boris diaw ( 8 )", "at & t center 18254", "28 - 36"], ["65", "march 13", "houston", "l 86 - 91 ( ot )", "gerald wallace ( 17 )", "gerald wallace , emeka okafor ( 8 )", "raymond felton ( 8 )", "time warner cable arena 16809", "28 - 37"], ["66", "march 14", "minnesota", "l 100 - 108 ( ot )", "gerald wallace ( 26 )", "gerald wallace ( 10 )", "raymond felton ( 5 )", "target center 15276", "28 - 38"], ["67", "march 16", "toronto", "w 112 - 86 ( ot )", "gerald wallace ( 25 )", "vladimir radmanovi\u0107 , gerald wallace ( 9 )", "raymond felton ( 8 )", "time warner cable arena 11349", "29 - 38"], ["68", "march 18", "sacramento", "w 104 - 88 ( ot )", "gerald wallace ( 25 )", "gerald wallace ( 12 )", "raymond felton ( 7 )", "time warner cable arena 13594", "30 - 38"], ["69", "march 20", "toronto", "w 102 - 89 ( ot )", "boris diaw , gerald wallace ( 30 )", "gerald wallace ( 9 )", "gerald wallace ( 8 )", "air canada centre 18641", "31 - 38"], ["70", "march 21", "indiana", "l 83 - 108 ( ot )", "boris diaw ( 15 )", "emeka okafor ( 9 )", "raymond felton , gerald wallace ( 5 )", "time warner cable arena 15721", "31 - 39"], ["71", "march 25", "washington", "l 93 - 95 ( ot )", "gerald wallace ( 21 )", "gerald wallace ( 11 )", "raymond felton ( 8 )", "verizon center 14657", "31 - 40"], ["72", "march 27", "philadelphia", "w 100 - 95 ( ot )", "boris diaw ( 24 )", "gerald wallace ( 11 )", "boris diaw ( 6 )", "wachovia center 19098", "32 - 40"], ["73", "march 28", "new york", "w 96 - 85 ( ot )", "gerald wallace ( 23 )", "emeka okafor ( 14 )", "gerald wallace ( 8 )", "time warner cable arena 19133", "33 - 40"]], "query": "eq { hop { nth_argmin { all_rows ; game ; 2 } ; date } ; march 6 } = true", "question": "charlotte bobcat 's game against atlanta on march 6 was the second game in march for the bobcat 's 2008-09 season ."}, {"topic": "wru division two north", "wiki": "https://en.wikipedia.org/wiki/WRU_Division_Two_North", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17921347-4.html.csv", "action": "count", "sent": "two rugby clubs in the wru division two north tallied a total of five losses .", "annotation": {"scope": "all", "criterion": "equal", "value": "5", "result": "2", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "lost", "5"], "result": null, "ind": 0, "tointer": "select the rows whose lost record is equal to 5 .", "tostr": "filter_eq { all_rows ; lost ; 5 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; lost ; 5 } }", "tointer": "select the rows whose lost record is equal to 5 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; lost ; 5 } } ; 2 } = true", "tointer": "select the rows whose lost record is equal to 5 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; lost ; 5 } } ; 2 } = true", "interpret": "select the rows whose lost record is equal to 5 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "lost_5": 5, "5_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "lost_5": "lost", "5_6": "5", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "lost_5": [0], "5_6": [0], "2_7": [2]}, "table_header": ["club", "played", "drawn", "lost", "points for", "points against", "tries for", "tries against", "try bonus"], "table_cont": [["club", "played", "drawn", "lost", "points for", "points against", "tries for", "tries against", "try bonus"], ["pwllheli rfc", "14", "0", "1", "623", "133", "101", "13", "14"], ["bro ffestiniog rfc", "14", "0", "3", "452", "155", "67", "25", "8"], ["bethesda rfc", "14", "0", "5", "373", "202", "56", "30", "8"], ["caereinion obra", "14", "0", "5", "254", "253", "36", "38", "4"], ["machynlleth rfc", "14", "0", "6", "283", "329", "39", "48", "4"], ["rhyl and district rfc", "14", "0", "11", "184", "484", "31", "77", "3"], ["welshpool rfc", "14", "0", "11", "205", "397", "25", "60", "2"], ["rhosllanerchrugog rfc", "14", "0", "14", "142", "563", "24", "88", "1"], ["bangor rfc ''", "0", "0", "0", "0", "0", "0", "0", "0"], ["rhayader rfc", "0", "0", "0", "0", "0", "0", "0", "0"], ["wrexham rfc", "0", "0", "0", "0", "0", "0", "0", "0"]], "query": "eq { count { filter_eq { all_rows ; lost ; 5 } } ; 2 } = true", "question": "two rugby clubs in the wru division two north tallied a total of five losses ."}, {"topic": "indiana high school athletics conferences : ohio river valley - western indiana", "wiki": "https://en.wikipedia.org/wiki/Indiana_High_School_Athletics_Conferences%3A_Ohio_River_Valley_%E2%80%93_Western_Indiana", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18974097-2.html.csv", "action": "aggregation", "sent": "for the ohio river valley and western indiana conferences in indiana high school athletics , the average school size is 405.1 .", "annotation": {"scope": "all", "col": "4", "type": "average", "result": "405.1", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "size"], "result": "405.1", "ind": 0, "tostr": "avg { all_rows ; size }"}, "405.1"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; size } ; 405.1 } = true", "tointer": "the average of the size record of all rows is 405.1 ."}, "logic_str": "round_eq { avg { all_rows ; size } ; 405.1 } = true", "interpret": "the average of the size record of all rows is 405.1 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "size_4": 4, "405.1_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "size_4": "size", "405.1_5": "405.1"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "size_4": [0], "405.1_5": [1]}, "table_header": ["school", "location", "mascot", "size", "ihsaa class", "county"], "table_cont": [["crawford county", "marengo", "wolfpack", "487", "aa", "13 crawford"], ["mitchell", "mitchell", "bluejackets", "620", "aaa", "47 lawrence"], ["orleans", "orleans", "bulldogs", "258", "a", "59 orange"], ["paoli", "paoli", "rams", "511", "aa", "59 orange"], ["perry central", "leopold", "commodores", "334", "aa", "62 perry"], ["springs valley", "french lick", "blackhawks", "319", "a", "59 orange"], ["west washington", "campbellsburg", "senators", "307", "a", "88 washington"]], "query": "round_eq { avg { all_rows ; size } ; 405.1 } = true", "question": "for the ohio river valley and western indiana conferences in indiana high school athletics , the average school size is 405.1 ."}, {"topic": "sleepless nights ( patty loveless album )", "wiki": "https://en.wikipedia.org/wiki/Sleepless_Nights_%28Patty_Loveless_album%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18424482-2.html.csv", "action": "majority", "sent": "most of the songs on the album were originally released during the 1960s .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "fuzzily_match", "value": "196", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "original release", "196"], "result": true, "ind": 0, "tointer": "for the original release records of all rows , most of them fuzzily match to 196 .", "tostr": "most_eq { all_rows ; original release ; 196 } = true"}, "logic_str": "most_eq { all_rows ; original release ; 196 } = true", "interpret": "for the original release records of all rows , most of them fuzzily match to 196 .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "original release_3": 3, "196_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "original release_3": "original release", "196_4": "196"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "original release_3": [0], "196_4": [0]}, "table_header": ["track", "song title", "writer ( s )", "original artist", "original release", "length"], "table_cont": [["1", "why baby why", "darrell edwards , george jones", "george jones", "1955", "2:18"], ["2", "the pain of loving you", "dolly parton , porter wagoner", "porter wagoner & dolly parton", "1971", "2:46"], ["3", "he thinks i still care", "dickey lee", "george jones", "1962", "2:59"], ["4", "sleepless nights ( featuring vince gill )", "boudleaux bryant , felice bryant", "everly brothers", "1960", "4:21"], ["5", "crazy arms", "ralph mooney , chuck seals", "ray price", "1956", "4:00"], ["6", "there stands the glass", "audrey greisham , russ hull , mary jean shurtz", "webb pierce", "1953", "2:35"], ["7", "that 's all it took ( featuring jedd hughes )", "darrell edwards , carlos grier , jones", "george jones & gene pitney", "1966", "2:35"], ["8", "color of the blues", "jones , lawton williams", "george jones", "1958", "3:06"], ["9", "i forgot more than you 'll ever know", "cecil null", "the davis sisters", "1953", "3:30"], ["10", "next in line", "wayne kemp , curtis wayne", "conway twitty", "1968", "3:06"], ["11", "do n't let me cross over", "penny jay", "carl butler and pearl", "1962", "3:23"], ["12", "please help me i 'm falling", "hal blair , don robertson", "hank locklin", "1960", "2:40"], ["13", "there goes my everything", "dallas frazier", "jack greene", "1966", "2:50"], ["14", "cold , cold heart", "hank williams", "hank williams", "1951", "2:53"], ["15", "we 'll sweep out the ashes in the morning", "joyce ann allsup", "carl butler & pearl", "1969", "3:14"], ["16", "if teardrops were pennies", "carl butler", "carl smith", "1951", "2:38"]], "query": "most_eq { all_rows ; original release ; 196 } = true", "question": "most of the songs on the album were originally released during the 1960s ."}, {"topic": "usa today all - usa high school basketball team", "wiki": "https://en.wikipedia.org/wiki/USA_Today_All-USA_high_school_basketball_team", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11677760-31.html.csv", "action": "unique", "sent": "the only person on the usa high school basketball team to have been drafted is marquis teague .", "annotation": {"scope": "all", "row": "5", "col": "6", "col_other": "1", "criterion": "fuzzily_match", "value": "pick", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nba draft", "pick"], "result": null, "ind": 0, "tointer": "select the rows whose nba draft record fuzzily matches to pick .", "tostr": "filter_eq { all_rows ; nba draft ; pick }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; nba draft ; pick } }", "tointer": "select the rows whose nba draft record fuzzily matches to pick . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "nba draft", "pick"], "result": null, "ind": 0, "tointer": "select the rows whose nba draft record fuzzily matches to pick .", "tostr": "filter_eq { all_rows ; nba draft ; pick }"}, "player"], "result": "marquis teague", "ind": 2, "tostr": "hop { filter_eq { all_rows ; nba draft ; pick } ; player }"}, "marquis teague"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; nba draft ; pick } ; player } ; marquis teague }", "tointer": "the player record of this unqiue row is marquis teague ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; nba draft ; pick } } ; eq { hop { filter_eq { all_rows ; nba draft ; pick } ; player } ; marquis teague } } = true", "tointer": "select the rows whose nba draft record fuzzily matches to pick . there is only one such row in the table . the player record of this unqiue row is marquis teague ."}, "logic_str": "and { only { filter_eq { all_rows ; nba draft ; pick } } ; eq { hop { filter_eq { all_rows ; nba draft ; pick } ; player } ; marquis teague } } = true", "interpret": "select the rows whose nba draft record fuzzily matches to pick . there is only one such row in the table . the player record of this unqiue row is marquis teague .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "nba draft_7": 7, "pick_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "marquis teague_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "nba draft_7": "nba draft", "pick_8": "pick", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "marquis teague_10": "marquis teague"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "nba draft_7": [0], "pick_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "marquis teague_10": [3]}, "table_header": ["player", "height", "school", "hometown", "college", "nba draft"], "table_cont": [["johnny o'bryant", "6 - 10", "east side high school", "cleveland , ms", "lsu", "has not yet declared for the nba draft"], ["kyle wiltjer", "6 - 10", "jesuit high school", "portland , or", "kentucky / gonzaga", "has not yet declared for the nba draft"], ["tyrone johnson", "6 - 3", "montrose christian school", "rockville , md", "villanova", "has not yet declared for the nba draft"], ["shannon scott", "6 - 2", "alpharetta high school", "alpharetta , ga", "ohio state", "has not yet declared for the nba draft"], ["marquis teague", "6 - 1", "pike high school", "indianapolis , in", "kentucky", "1st round - 29th pick of 2012 draft ( bulls )"]], "query": "and { only { filter_eq { all_rows ; nba draft ; pick } } ; eq { hop { filter_eq { all_rows ; nba draft ; pick } ; player } ; marquis teague } } = true", "question": "the only person on the usa high school basketball team to have been drafted is marquis teague ."}, {"topic": "2007 - 08 new jersey devils season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_New_Jersey_Devils_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11902366-4.html.csv", "action": "comparative", "sent": "during the 2007 - 08 season , the new jersey devils played against their dallas visitor earlier than montreal .", "annotation": {"row_1": "13", "row_2": "14", "col": "1", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "visitor", "dallas"], "result": null, "ind": 0, "tointer": "select the rows whose visitor record fuzzily matches to dallas .", "tostr": "filter_eq { all_rows ; visitor ; dallas }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; visitor ; dallas } ; date }", "tointer": "select the rows whose visitor record fuzzily matches to dallas . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "visitor", "montreal"], "result": null, "ind": 1, "tointer": "select the rows whose visitor record fuzzily matches to montreal .", "tostr": "filter_eq { all_rows ; visitor ; montreal }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; visitor ; montreal } ; date }", "tointer": "select the rows whose visitor record fuzzily matches to montreal . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; visitor ; dallas } ; date } ; hop { filter_eq { all_rows ; visitor ; montreal } ; date } } = true", "tointer": "select the rows whose visitor record fuzzily matches to dallas . take the date record of this row . select the rows whose visitor record fuzzily matches to montreal . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; visitor ; dallas } ; date } ; hop { filter_eq { all_rows ; visitor ; montreal } ; date } } = true", "interpret": "select the rows whose visitor record fuzzily matches to dallas . take the date record of this row . select the rows whose visitor record fuzzily matches to montreal . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "visitor_7": 7, "dallas_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "visitor_11": 11, "montreal_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "visitor_7": "visitor", "dallas_8": "dallas", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "visitor_11": "visitor", "montreal_12": "montreal", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "visitor_7": [0], "dallas_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "visitor_11": [1], "montreal_12": [1], "date_13": [3]}, "table_header": ["date", "visitor", "score", "home", "decision", "attendance", "record"], "table_cont": [["november 2", "toronto", "2 - 3", "new jersey", "brodeur", "14523", "5 - 6 - 1"], ["november 3", "new jersey", "1 - 2", "ny rangers", "brodeur", "18200", "5 - 6 - 2"], ["november 5", "pittsburgh", "5 - 0", "new jersey", "brodeur", "14032", "5 - 7 - 2"], ["november 8", "philadelphia", "1 - 4", "new jersey", "brodeur", "14948", "6 - 7 - 2"], ["november 10", "new jersey", "1 - 2", "ny islanders", "brodeur", "15361", "6 - 8 - 2"], ["november 12", "new jersey", "3 - 2", "pittsburgh", "weekes", "17096", "7 - 8 - 2"], ["november 14", "ny rangers", "4 - 2", "new jersey", "brodeur", "17625", "7 - 9 - 2"], ["november 16", "ny islanders", "1 - 0", "new jersey", "brodeur", "15076", "7 - 10 - 2"], ["november 17", "new jersey", "6 - 2", "philadelphia", "brodeur", "19621", "8 - 10 - 2"], ["november 21", "new jersey", "2 - 1", "pittsburgh", "brodeur", "17132", "9 - 10 - 2"], ["november 23", "new jersey", "3 - 0", "atlanta", "brodeur", "18545", "10 - 10 - 2"], ["november 24", "new jersey", "3 - 2", "tampa bay", "brodeur", "19077", "11 - 10 - 2"], ["november 28", "dallas", "2 - 4", "new jersey", "brodeur", "13665", "12 - 10 - 2"], ["november 30", "montreal", "0 - 4", "new jersey", "brodeur", "15081", "13 - 10 - 2"]], "query": "less { hop { filter_eq { all_rows ; visitor ; dallas } ; date } ; hop { filter_eq { all_rows ; visitor ; montreal } ; date } } = true", "question": "during the 2007 - 08 season , the new jersey devils played against their dallas visitor earlier than montreal ."}, {"topic": "2008 formula 3 euro series season", "wiki": "https://en.wikipedia.org/wiki/2008_Formula_3_Euro_Series_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15660445-7.html.csv", "action": "ordinal", "sent": "jens klingmann has the third highest nor1 score of any of the athletes listed here .", "annotation": {"row": "10", "col": "2", "order": "3", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "nor 1", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; nor 1 ; 3 }"}, "driver"], "result": "jens klingmann", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; nor 1 ; 3 } ; driver }"}, "jens klingmann"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; nor 1 ; 3 } ; driver } ; jens klingmann } = true", "tointer": "select the row whose nor 1 record of all rows is 3rd maximum . the driver record of this row is jens klingmann ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; nor 1 ; 3 } ; driver } ; jens klingmann } = true", "interpret": "select the row whose nor 1 record of all rows is 3rd maximum . the driver record of this row is jens klingmann .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "nor 1_5": 5, "3_6": 6, "driver_7": 7, "jens klingmann_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "nor 1_5": "nor 1", "3_6": "3", "driver_7": "driver", "jens klingmann_8": "jens klingmann"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "nor 1_5": [0], "3_6": [0], "driver_7": [1], "jens klingmann_8": [2]}, "table_header": ["driver", "nor 1", "nor 2", "zan 1", "zan 2", "n\u00fcr 1", "n\u00fcr 2"], "table_cont": [["erik jani\u0161", "8", "22", "12", "10", "ret", "12"], ["mika m\u00e4ki", "ret", "18", "2", "5", "4", "ret"], ["jules bianchi", "ret", "9", "3", "9", "2", "3"], ["jon lancaster", "5", "ret", "ret", "ret", "7", "1"], ["richard philippe", "22", "16", "16", "12", "10", "18"], ["robert wickens", "7", "2", "8", "ret", "12", "16"], ["stefano coletti", "11", "6", "19", "ret", "9", "ret"], ["daniel campos - hull", "17", "11", "23", "14", "20", "8"], ["henkie waldschmidt", "9", "ret", "17", "ret", "15", "17"], ["jens klingmann", "15", "10", "21", "18", "16", "10"], ["martin plowman", "ret", "ret", "20", "17", "17", "21"], ["driver", "nor 1", "nor 2", "zan 1", "zan 2", "n\u00fcr 1", "n\u00fcr 2"]], "query": "eq { hop { nth_argmax { all_rows ; nor 1 ; 3 } ; driver } ; jens klingmann } = true", "question": "jens klingmann has the third highest nor1 score of any of the athletes listed here ."}, {"topic": "1988 senior pga tour", "wiki": "https://en.wikipedia.org/wiki/1988_Senior_PGA_Tour", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11622562-3.html.csv", "action": "unique", "sent": "harold henning is the only golfer who only won once .", "annotation": {"scope": "all", "row": "5", "col": "6", "col_other": "2", "criterion": "equal", "value": "1", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "wins", "1"], "result": null, "ind": 0, "tointer": "select the rows whose wins record is equal to 1 .", "tostr": "filter_eq { all_rows ; wins ; 1 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; wins ; 1 } }", "tointer": "select the rows whose wins record is equal to 1 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "wins", "1"], "result": null, "ind": 0, "tointer": "select the rows whose wins record is equal to 1 .", "tostr": "filter_eq { all_rows ; wins ; 1 }"}, "player"], "result": "harold henning", "ind": 2, "tostr": "hop { filter_eq { all_rows ; wins ; 1 } ; player }"}, "harold henning"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; wins ; 1 } ; player } ; harold henning }", "tointer": "the player record of this unqiue row is harold henning ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; wins ; 1 } } ; eq { hop { filter_eq { all_rows ; wins ; 1 } ; player } ; harold henning } } = true", "tointer": "select the rows whose wins record is equal to 1 . there is only one such row in the table . the player record of this unqiue row is harold henning ."}, "logic_str": "and { only { filter_eq { all_rows ; wins ; 1 } } ; eq { hop { filter_eq { all_rows ; wins ; 1 } ; player } ; harold henning } } = true", "interpret": "select the rows whose wins record is equal to 1 . there is only one such row in the table . the player record of this unqiue row is harold henning .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "wins_7": 7, "1_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "harold henning_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "wins_7": "wins", "1_8": "1", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "harold henning_10": "harold henning"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "wins_7": [0], "1_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "harold henning_10": [3]}, "table_header": ["rank", "player", "country", "earnings", "events", "wins"], "table_cont": [["1", "bob charles", "new zealand", "533929", "28", "5"], ["2", "gary player", "south africa", "435914", "20", "5"], ["3", "dave hill", "united states", "415594", "27", "3"], ["4", "orville moody", "united states", "411859", "31", "3"], ["5", "harold henning", "south africa", "366230", "31", "1"]], "query": "and { only { filter_eq { all_rows ; wins ; 1 } } ; eq { hop { filter_eq { all_rows ; wins ; 1 } ; player } ; harold henning } } = true", "question": "harold henning is the only golfer who only won once ."}, {"topic": "united states house of representatives elections , 1974", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1974", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341690-35.html.csv", "action": "unique", "sent": "tom luken was the only incumbent that lost lost re - election resulting in a republican gain .", "annotation": {"scope": "all", "row": "1", "col": "5", "col_other": "2", "criterion": "equal", "value": "lost re-election republican gain", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "lost re-election republican gain"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to lost re-election republican gain .", "tostr": "filter_eq { all_rows ; result ; lost re-election republican gain }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; result ; lost re-election republican gain } }", "tointer": "select the rows whose result record fuzzily matches to lost re-election republican gain . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "lost re-election republican gain"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to lost re-election republican gain .", "tostr": "filter_eq { all_rows ; result ; lost re-election republican gain }"}, "incumbent"], "result": "tom luken", "ind": 2, "tostr": "hop { filter_eq { all_rows ; result ; lost re-election republican gain } ; incumbent }"}, "tom luken"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; result ; lost re-election republican gain } ; incumbent } ; tom luken }", "tointer": "the incumbent record of this unqiue row is tom luken ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; result ; lost re-election republican gain } } ; eq { hop { filter_eq { all_rows ; result ; lost re-election republican gain } ; incumbent } ; tom luken } } = true", "tointer": "select the rows whose result record fuzzily matches to lost re-election republican gain . there is only one such row in the table . the incumbent record of this unqiue row is tom luken ."}, "logic_str": "and { only { filter_eq { all_rows ; result ; lost re-election republican gain } } ; eq { hop { filter_eq { all_rows ; result ; lost re-election republican gain } ; incumbent } ; tom luken } } = true", "interpret": "select the rows whose result record fuzzily matches to lost re-election republican gain . there is only one such row in the table . the incumbent record of this unqiue row is tom luken .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "result_7": 7, "lost re-election republican gain_8": 8, "str_eq_3": 3, "str_hop_2": 2, "incumbent_9": 9, "tom luken_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "result_7": "result", "lost re-election republican gain_8": "lost re-election republican gain", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "incumbent_9": "incumbent", "tom luken_10": "tom luken"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "result_7": [0], "lost re-election republican gain_8": [0], "str_eq_3": [4], "str_hop_2": [3], "incumbent_9": [2], "tom luken_10": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["ohio 1", "tom luken", "democratic", "1974", "lost re - election republican gain", "bill gradison ( r ) 50.9 % tom luken ( d ) 49.1 %"], ["ohio 3", "charles w whalen , jr", "republican", "1966", "re - elected", "charles w whalen , jr ( r ) unopposed"], ["ohio 5", "del latta", "republican", "1958", "re - elected", "del latta ( r ) 62.5 % bruce edwards ( d ) 37.5 %"], ["ohio 6", "bill harsha", "republican", "1960", "re - elected", "bill harsha ( r ) 68.8 % lloyd allan wood ( d ) 31.2 %"], ["ohio 12", "samuel l devine", "republican", "1958", "re - elected", "samuel l devine ( r ) 50.9 % fran ryan ( d ) 49.1 %"], ["ohio 16", "ralph regula", "republican", "1972", "re - elected", "ralph regula ( r ) 65.6 % john g freedom ( d ) 34.4 %"], ["ohio 18", "wayne l hays", "democratic", "1948", "re - elected", "wayne l hays ( d ) 65.6 % ralph h romig ( r ) 34.4 %"], ["ohio 21", "louis stokes", "democratic", "1968", "re - elected", "louis stokes ( d ) 82.0 % bill mack ( r ) 18.0 %"]], "query": "and { only { filter_eq { all_rows ; result ; lost re-election republican gain } } ; eq { hop { filter_eq { all_rows ; result ; lost re-election republican gain } ; incumbent } ; tom luken } } = true", "question": "tom luken was the only incumbent that lost lost re - election resulting in a republican gain ."}, {"topic": "geography of moldova", "wiki": "https://en.wikipedia.org/wiki/Geography_of_Moldova", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19242-5.html.csv", "action": "majority", "sent": "the majority of all areas have less than 1000 km square of forests .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "less_than", "value": "1000", "subset": null}, "logic": {"func": "most_less", "args": ["all_rows", "of which currently forests , km square", "1000"], "result": true, "ind": 0, "tointer": "for the of which currently forests , km square records of all rows , most of them are less than 1000 .", "tostr": "most_less { all_rows ; of which currently forests , km square ; 1000 } = true"}, "logic_str": "most_less { all_rows ; of which currently forests , km square ; 1000 } = true", "interpret": "for the of which currently forests , km square records of all rows , most of them are less than 1000 .", "num_func": 1, "nid": 1, "g_ids": {"most_less_0": 0, "result_1": 1, "all_rows_2": 2, "of which currently forests , km square_3": 3, "1000_4": 4}, "g_ids_features": {"most_less_0": "most_less", "result_1": "true", "all_rows_2": "all_rows", "of which currently forests , km square_3": "of which currently forests , km square", "1000_4": "1000"}, "g_adj": {"most_less_0": [1], "result_1": [], "all_rows_2": [0], "of which currently forests , km square_3": [0], "1000_4": [0]}, "table_header": ["land formation", "area , km square", "of which currently forests , km square", "% forests", "habitat type"], "table_cont": [["northern moldavian hills", "4630", "476", "10.3 %", "forest steppe"], ["dniester - r\u0101ut ridge", "2480", "363", "14.6 %", "forest steppe"], ["middle prut valley", "2930", "312", "10.6 %", "forest steppe"], ["b\u0103l\u0163i steppe", "1920", "51", "2.7 %", "steppe"], ["ciuluc - solone\u0163 hills", "1690", "169", "10.0 %", "forest steppe"], ["corne\u015fti hills ( codru )", "4740", "1300", "27.5 %", "forest"], ["lower dniester hills", "3040", "371", "12.2 %", "forest steppe"], ["lower prut valley", "1810", "144", "8.0 %", "forest steppe"], ["tigheci hills", "3550", "533", "15.0 %", "forest steppe"], ["bugeac plain", "3210", "195", "6.1 %", "steppe"], ["part of podolian plateau", "1920", "175", "9.1 %", "forest steppe"], ["part of eurasian steppe", "1920", "140", "7.3 %", "steppe"]], "query": "most_less { all_rows ; of which currently forests , km square ; 1000 } = true", "question": "the majority of all areas have less than 1000 km square of forests ."}, {"topic": "list of municipalities in quebec", "wiki": "https://en.wikipedia.org/wiki/List_of_municipalities_in_Quebec", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11218948-15.html.csv", "action": "majority", "sent": "all of the quebec municipalities are not part of a regional county municipality .", "annotation": {"scope": "all", "col": "6", "most_or_all": "all", "criterion": "fuzzily_match", "value": "not part of a rcm", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "regional county municipality", "not part of a rcm"], "result": true, "ind": 0, "tointer": "for the regional county municipality records of all rows , all of them fuzzily match to not part of a rcm .", "tostr": "all_eq { all_rows ; regional county municipality ; not part of a rcm } = true"}, "logic_str": "all_eq { all_rows ; regional county municipality ; not part of a rcm } = true", "interpret": "for the regional county municipality records of all rows , all of them fuzzily match to not part of a rcm .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "regional county municipality_3": 3, "not part of a rcm_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "regional county municipality_3": "regional county municipality", "not part of a rcm_4": "not part of a rcm"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "regional county municipality_3": [0], "not part of a rcm_4": [0]}, "table_header": ["code", "type", "name", "area ( km 2 )", "population", "regional county municipality", "region"], "table_cont": [["99005", "v", "lebel - sur - qu\u00e3villon", "44.74", "3140", "not part of a rcm", "10"], ["99015", "v", "matagami", "64.75", "1828", "not part of a rcm", "10"], ["99020", "v", "chapais", "62.78", "1755", "not part of a rcm", "10"], ["99025", "v", "chibougamau", "1041.97", "7747", "not part of a rcm", "10"], ["99060", "m", "baie - james", "333255.55", "1976", "not part of a rcm", "10"]], "query": "all_eq { all_rows ; regional county municipality ; not part of a rcm } = true", "question": "all of the quebec municipalities are not part of a regional county municipality ."}, {"topic": "finnish people 's democratic league", "wiki": "https://en.wikipedia.org/wiki/Finnish_People%27s_Democratic_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1517649-5.html.csv", "action": "aggregation", "sent": "in presidential elections , the finnish people 's democratic league had an average of 50.85 electors .", "annotation": {"scope": "all", "col": "2", "type": "average", "result": "50.85", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "electors"], "result": "50.85", "ind": 0, "tostr": "avg { all_rows ; electors }"}, "50.85"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; electors } ; 50.85 } = true", "tointer": "the average of the electors record of all rows is 50.85 ."}, "logic_str": "round_eq { avg { all_rows ; electors } ; 50.85 } = true", "interpret": "the average of the electors record of all rows is 50.85 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "electors_4": 4, "50.85_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "electors_4": "electors", "50.85_5": "50.85"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "electors_4": [0], "50.85_5": [1]}, "table_header": ["year", "electors", "votes", "share of votes", "candidate"], "table_cont": [["1950", "67", "338 035", "21 , 4 %", "mauno pekkala"], ["1956", "56", "354 575", "18 , 7 %", "eino kilpi"], ["1962", "63", "451 750", "20 , 5 %", "paavo aitio"], ["1968", "56", "345 609", "17 , 0 %", "seconded urho kekkonen of centre"], ["1978", "56", "445 098", "18 , 2 %", "seconded urho kekkonen of centre"], ["1982", "32", "348 359", "11 , 0 %", "kalevi kivist\u00f6"], ["1988", "26", "330 072 286 833", "10 , 7 % 9 , 6 %", "kalevi kivist\u00f6 liike 88"]], "query": "round_eq { avg { all_rows ; electors } ; 50.85 } = true", "question": "in presidential elections , the finnish people 's democratic league had an average of 50.85 electors ."}, {"topic": "1973 world championship tennis circuit", "wiki": "https://en.wikipedia.org/wiki/1973_World_Championship_Tennis_circuit", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29302711-13.html.csv", "action": "comparative", "sent": "arthur ashe played more matches than mark cox .", "annotation": {"row_1": "2", "row_2": "5", "col": "4", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "arthur ashe"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to arthur ashe .", "tostr": "filter_eq { all_rows ; name ; arthur ashe }"}, "matches played"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; arthur ashe } ; matches played }", "tointer": "select the rows whose name record fuzzily matches to arthur ashe . take the matches played record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "mark cox"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to mark cox .", "tostr": "filter_eq { all_rows ; name ; mark cox }"}, "matches played"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; mark cox } ; matches played }", "tointer": "select the rows whose name record fuzzily matches to mark cox . take the matches played record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; name ; arthur ashe } ; matches played } ; hop { filter_eq { all_rows ; name ; mark cox } ; matches played } } = true", "tointer": "select the rows whose name record fuzzily matches to arthur ashe . take the matches played record of this row . select the rows whose name record fuzzily matches to mark cox . take the matches played record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; name ; arthur ashe } ; matches played } ; hop { filter_eq { all_rows ; name ; mark cox } ; matches played } } = true", "interpret": "select the rows whose name record fuzzily matches to arthur ashe . take the matches played record of this row . select the rows whose name record fuzzily matches to mark cox . take the matches played record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name_7": 7, "arthur ashe_8": 8, "matches played_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name_11": 11, "mark cox_12": 12, "matches played_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name_7": "name", "arthur ashe_8": "arthur ashe", "matches played_9": "matches played", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "mark cox_12": "mark cox", "matches played_13": "matches played"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name_7": [0], "arthur ashe_8": [0], "matches played_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name_11": [1], "mark cox_12": [1], "matches played_13": [3]}, "table_header": ["rk", "name", "country", "matches played", "matches won", "points", "prize money ( usd )"], "table_cont": [["1", "ken rosewall", "aus", "42", "34", "53", "66400"], ["2", "arthur ashe", "usa", "36", "26", "41", "63150"], ["3", "marty riessen", "usa", "36", "26", "35", "47200"], ["4", "roger taylor", "gbr", "31", "21", "34", "42800"], ["4", "mark cox", "gbr", "33", "23", "34", "31950"], ["6", "brian fairlie", "aus", "32", "22", "33", "30900"], ["7", "jan kode\u00e5 \u00a1", "tch", "27", "19", "28", "23800"], ["8", "tom okker", "ned", "29", "19", "25", "34400"], ["9", "roscoe tanner", "usa", "27", "16", "24", "25250"]], "query": "greater { hop { filter_eq { all_rows ; name ; arthur ashe } ; matches played } ; hop { filter_eq { all_rows ; name ; mark cox } ; matches played } } = true", "question": "arthur ashe played more matches than mark cox ."}, {"topic": "the howie carr show", "wiki": "https://en.wikipedia.org/wiki/The_Howie_Carr_Show", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10333757-1.html.csv", "action": "unique", "sent": "call wcrn is the only time when the frequency was 830 khz .", "annotation": {"scope": "all", "row": "5", "col": "2", "col_other": "1", "criterion": "equal", "value": "830 khz", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "frequency", "830 khz"], "result": null, "ind": 0, "tointer": "select the rows whose frequency record fuzzily matches to 830 khz .", "tostr": "filter_eq { all_rows ; frequency ; 830 khz }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; frequency ; 830 khz } }", "tointer": "select the rows whose frequency record fuzzily matches to 830 khz . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "frequency", "830 khz"], "result": null, "ind": 0, "tointer": "select the rows whose frequency record fuzzily matches to 830 khz .", "tostr": "filter_eq { all_rows ; frequency ; 830 khz }"}, "calls"], "result": "wcrn", "ind": 2, "tostr": "hop { filter_eq { all_rows ; frequency ; 830 khz } ; calls }"}, "wcrn"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; frequency ; 830 khz } ; calls } ; wcrn }", "tointer": "the calls record of this unqiue row is wcrn ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; frequency ; 830 khz } } ; eq { hop { filter_eq { all_rows ; frequency ; 830 khz } ; calls } ; wcrn } } = true", "tointer": "select the rows whose frequency record fuzzily matches to 830 khz . there is only one such row in the table . the calls record of this unqiue row is wcrn ."}, "logic_str": "and { only { filter_eq { all_rows ; frequency ; 830 khz } } ; eq { hop { filter_eq { all_rows ; frequency ; 830 khz } ; calls } ; wcrn } } = true", "interpret": "select the rows whose frequency record fuzzily matches to 830 khz . there is only one such row in the table . the calls record of this unqiue row is wcrn .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "frequency_7": 7, "830 khz_8": 8, "str_eq_3": 3, "str_hop_2": 2, "calls_9": 9, "wcrn_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "frequency_7": "frequency", "830 khz_8": "830 khz", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "calls_9": "calls", "wcrn_10": "wcrn"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "frequency_7": [0], "830 khz_8": [0], "str_eq_3": [4], "str_hop_2": [3], "calls_9": [2], "wcrn_10": [3]}, "table_header": ["calls", "frequency", "branding", "format", "timeslot", "group owner"], "table_cont": [["wgan", "560 khz", "news radio 560 wgan", "news / talk", "live 3p - 6p", "saga communications"], ["whyn", "560 khz", "news / talk 560 whyn", "news / talk", "live 3p - 7p", "clear channel communications"], ["wvmt", "620 khz", "news / talk 620 wvmt", "news / talk", "live 3p - 7p", "sison broadcasting"], ["wrko", "680 khz", "am 680 wrko", "news / talk", "live 3p - 7p", "entercom"], ["wcrn", "830 khz", "wcrn 830 true talk", "news / talk", "live 3p - 7p", "carter broadcasting"], ["wkbk", "1290 khz", "1290 wkbk w281au 104.1", "news / talk", "live 3p - 6p", "saga communications"], ["wegp", "1390 khz", "wegp 1390 am - the talk of the county", "news / talk", "live 3p - 6p", "decelles / media , inc"], ["wxtk", "95.1 mhz", "news radio 95 wxtk", "news / talk", "live 3p - 7p", "qantam of cape cod , llc"], ["wntk - fm", "99.7 mhz", "wntk talk radio", "news / talk", "live 3p - 6p", "koor communications"], ["wuvr", "1490 khz", "wntk talk radio", "news / talk", "live 3p - 6p", "koor communications"], ["wvom - fm / wvqm", "103.9 / 101.3 mhz", "the voice of maine", "news / talk", "live 3p - 7p", "blueberry broadcasting"]], "query": "and { only { filter_eq { all_rows ; frequency ; 830 khz } } ; eq { hop { filter_eq { all_rows ; frequency ; 830 khz } ; calls } ; wcrn } } = true", "question": "call wcrn is the only time when the frequency was 830 khz ."}, {"topic": "fil world luge championships 1961", "wiki": "https://en.wikipedia.org/wiki/FIL_World_Luge_Championships_1961", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11137150-4.html.csv", "action": "ordinal", "sent": "italy had the second most number of silver medals in the luge championships in 1961 .", "annotation": {"row": "2", "col": "4", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "silver", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; silver ; 2 }"}, "nation"], "result": "italy", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; silver ; 2 } ; nation }"}, "italy"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; silver ; 2 } ; nation } ; italy } = true", "tointer": "select the row whose silver record of all rows is 2nd maximum . the nation record of this row is italy ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; silver ; 2 } ; nation } ; italy } = true", "interpret": "select the row whose silver record of all rows is 2nd maximum . the nation record of this row is italy .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "silver_5": 5, "2_6": 6, "nation_7": 7, "italy_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "silver_5": "silver", "2_6": "2", "nation_7": "nation", "italy_8": "italy"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "silver_5": [0], "2_6": [0], "nation_7": [1], "italy_8": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "austria", "0", "0", "3", "3"], ["2", "italy", "1", "1", "0", "2"], ["3", "west germany", "0", "2", "0", "2"], ["4", "poland", "1", "0", "0", "1"], ["5", "switzerland", "1", "0", "0", "1"]], "query": "eq { hop { nth_argmax { all_rows ; silver ; 2 } ; nation } ; italy } = true", "question": "italy had the second most number of silver medals in the luge championships in 1961 ."}, {"topic": "damian paul chopa", "wiki": "https://en.wikipedia.org/wiki/Damian_Paul_Chopa", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10265361-1.html.csv", "action": "comparative", "sent": "considering the year of 2006 , damian paul chopa achieved a better result in the commonwealth games compared to when he participated in the african championships .", "annotation": {"row_1": "3", "row_2": "4", "col": "4", "col_other": "2,1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "and", "args": [{"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "commonwealth games"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to commonwealth games .", "tostr": "filter_eq { all_rows ; tournament ; commonwealth games }"}, "result"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; commonwealth games } ; result }", "tointer": "select the rows whose tournament record fuzzily matches to commonwealth games . take the result record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "african championships"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to african championships .", "tostr": "filter_eq { all_rows ; tournament ; african championships }"}, "result"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; tournament ; african championships } ; result }", "tointer": "select the rows whose tournament record fuzzily matches to african championships . take the result record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; result } ; hop { filter_eq { all_rows ; tournament ; african championships } ; result } }", "tointer": "select the rows whose tournament record fuzzily matches to commonwealth games . take the result record of this row . select the rows whose tournament record fuzzily matches to african championships . take the result record of this row . the first record is less than the second record ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "commonwealth games"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to commonwealth games .", "tostr": "filter_eq { all_rows ; tournament ; commonwealth games }"}, "year"], "result": "2006", "ind": 5, "tostr": "hop { filter_eq { all_rows ; tournament ; commonwealth games } ; year }"}, "2006"], "result": true, "ind": 6, "tostr": "eq { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; year } ; 2006 }", "tointer": "the year record of the first row is 2006 ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "african championships"], "result": null, "ind": 1, "tointer": "select the rows whose tournament record fuzzily matches to african championships .", "tostr": "filter_eq { all_rows ; tournament ; african championships }"}, "year"], "result": "2006", "ind": 7, "tostr": "hop { filter_eq { all_rows ; tournament ; african championships } ; year }"}, "2006"], "result": true, "ind": 8, "tostr": "eq { hop { filter_eq { all_rows ; tournament ; african championships } ; year } ; 2006 }", "tointer": "the year record of the second row is 2006 ."}], "result": true, "ind": 9, "tostr": "and { eq { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; year } ; 2006 } ; eq { hop { filter_eq { all_rows ; tournament ; african championships } ; year } ; 2006 } }", "tointer": "the year record of the first row is 2006 . the year record of the second row is 2006 ."}], "result": true, "ind": 10, "tostr": "and { less { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; result } ; hop { filter_eq { all_rows ; tournament ; african championships } ; result } } ; and { eq { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; year } ; 2006 } ; eq { hop { filter_eq { all_rows ; tournament ; african championships } ; year } ; 2006 } } } = true", "tointer": "select the rows whose tournament record fuzzily matches to commonwealth games . take the result record of this row . select the rows whose tournament record fuzzily matches to african championships . take the result record of this row . the first record is less than the second record . the year record of the first row is 2006 . the year record of the second row is 2006 ."}, "logic_str": "and { less { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; result } ; hop { filter_eq { all_rows ; tournament ; african championships } ; result } } ; and { eq { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; year } ; 2006 } ; eq { hop { filter_eq { all_rows ; tournament ; african championships } ; year } ; 2006 } } } = true", "interpret": "select the rows whose tournament record fuzzily matches to commonwealth games . take the result record of this row . select the rows whose tournament record fuzzily matches to african championships . take the result record of this row . the first record is less than the second record . the year record of the first row is 2006 . the year record of the second row is 2006 .", "num_func": 13, "nid": 11, "g_ids": {"and_10": 10, "result_11": 11, "less_4": 4, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_12": 12, "tournament_13": 13, "commonwealth games_14": 14, "result_15": 15, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_16": 16, "tournament_17": 17, "african championships_18": 18, "result_19": 19, "and_9": 9, "eq_6": 6, "num_hop_5": 5, "year_20": 20, "2006_21": 21, "eq_8": 8, "num_hop_7": 7, "year_22": 22, "2006_23": 23}, "g_ids_features": {"and_10": "and", "result_11": "true", "less_4": "less", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_12": "all_rows", "tournament_13": "tournament", "commonwealth games_14": "commonwealth games", "result_15": "result", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_16": "all_rows", "tournament_17": "tournament", "african championships_18": "african championships", "result_19": "result", "and_9": "and", "eq_6": "eq", "num_hop_5": "num_hop", "year_20": "year", "2006_21": "2006", "eq_8": "eq", "num_hop_7": "num_hop", "year_22": "year", "2006_23": "2006"}, "g_adj": {"and_10": [11], "result_11": [], "less_4": [10], "str_hop_2": [4], "filter_str_eq_0": [2, 5], "all_rows_12": [0], "tournament_13": [0], "commonwealth games_14": [0], "result_15": [2], "str_hop_3": [4], "filter_str_eq_1": [3, 7], "all_rows_16": [1], "tournament_17": [1], "african championships_18": [1], "result_19": [3], "and_9": [10], "eq_6": [9], "num_hop_5": [6], "year_20": [5], "2006_21": [6], "eq_8": [9], "num_hop_7": [8], "year_22": [7], "2006_23": [8]}, "table_header": ["year", "tournament", "venue", "result", "extra"], "table_cont": [["2004", "world cross country championships", "brussels , belgium", "27th", "short race"], ["2005", "world cross country championships", "st etienne , france", "27th", "short race"], ["2006", "commonwealth games", "melbourne , australia", "6th", "5000 m , 13:24.03 pb"], ["2006", "african championships", "bambous , mauritius", "9th", "5000 m"], ["2007", "world cross country championships", "mombasa , kenya", "12th", "senior race"]], "query": "and { less { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; result } ; hop { filter_eq { all_rows ; tournament ; african championships } ; result } } ; and { eq { hop { filter_eq { all_rows ; tournament ; commonwealth games } ; year } ; 2006 } ; eq { hop { filter_eq { all_rows ; tournament ; african championships } ; year } ; 2006 } } } = true", "question": "considering the year of 2006 , damian paul chopa achieved a better result in the commonwealth games compared to when he participated in the african championships ."}, {"topic": "fiba eurobasket 2007 squads", "wiki": "https://en.wikipedia.org/wiki/FIBA_EuroBasket_2007_squads", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12962773-13.html.csv", "action": "count", "sent": "11 players were listed in the fiba eurobasket 2007 squad .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "11", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "no"], "result": null, "ind": 0, "tointer": "select the rows whose no record is arbitrary .", "tostr": "filter_all { all_rows ; no }"}], "result": "11", "ind": 1, "tostr": "count { filter_all { all_rows ; no } }", "tointer": "select the rows whose no record is arbitrary . the number of such rows is 11 ."}, "11"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; no } } ; 11 } = true", "tointer": "select the rows whose no record is arbitrary . the number of such rows is 11 ."}, "logic_str": "eq { count { filter_all { all_rows ; no } } ; 11 } = true", "interpret": "select the rows whose no record is arbitrary . the number of such rows is 11 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "no_5": 5, "11_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "no_5": "no", "11_6": "11"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "no_5": [0], "11_6": [2]}, "table_header": ["no", "player", "height", "position", "year born", "current club"], "table_cont": [["4", "joseph gomis", "1.80", "guard", "1978", "grupo capitol valladolid"], ["5", "pape badiane", "2.08", "center", "1980", "roanne"], ["6", "sacha giffa", "1.97", "forward", "1977", "strasbourg"], ["7", "yohann sangare", "1.92", "guard", "1983", "lyon - villeurbanne"], ["8", "yakhouba diawara", "2.01", "forward", "1982", "denver nuggets"], ["9", "tony parker", "1.86", "guard", "1982", "san antonio spurs"], ["10", "c\u00e9dric ferchaud", "1.94", "guard", "1980", "pau - orthez"], ["11", "florent pi\u00e9trus", "2.02", "forward", "1981", "unicaja m\u00e1laga"], ["12", "tariq kirksay", "1.98", "guard", "1978", "nancy"], ["13", "boris diaw", "2.03", "forward", "1982", "phoenix suns"], ["14", "ronny turiaf", "2.06", "center", "1983", "los angeles lakers"]], "query": "eq { count { filter_all { all_rows ; no } } ; 11 } = true", "question": "11 players were listed in the fiba eurobasket 2007 squad ."}, {"topic": "ana timoti\u0107", "wiki": "https://en.wikipedia.org/wiki/Ana_Timoti%C4%87", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11326124-3.html.csv", "action": "majority", "sent": "of the matches ana timoti\u0107 participated in , all of them took place on a clay surface .", "annotation": {"scope": "all", "col": "6", "most_or_all": "all", "criterion": "equal", "value": "clay", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "surface", "clay"], "result": true, "ind": 0, "tointer": "for the surface records of all rows , all of them fuzzily match to clay .", "tostr": "all_eq { all_rows ; surface ; clay } = true"}, "logic_str": "all_eq { all_rows ; surface ; clay } = true", "interpret": "for the surface records of all rows , all of them fuzzily match to clay .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "surface_3": 3, "clay_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "surface_3": "surface", "clay_4": "clay"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "surface_3": [0], "clay_4": [0]}, "table_header": ["edition", "zone", "round", "date", "against", "surface", "opponent", "outcome", "result"], "table_cont": [["2005", "europe / africa group i c", "1r", "21 april 2005", "slovenia", "clay", "tina pisnik", "loss", "6 - 0 , 6 - 1"], ["2005", "europe / africa group i c", "2r", "22 april 2005", "great britain", "clay", "elena baltacha", "win", "5 - 7 , 6 - 3 , 6 - 0"], ["2005", "europe / africa group play - off", "semifinal", "23 april 2005", "israel", "clay", "shahar pe'er", "loss", "6 - 4 , 4 - 6 , 6 - 3"], ["2006", "europe / africa group i b", "1r", "18 april 2006", "slovenia", "clay", "polona reber\u0161ak", "loss", "6 - 3 , 6 - 2"], ["2006", "europe / africa group i b", "3r", "20 april 2006", "denmark", "clay", "eva dyrberg", "win", "2 - 6 , 6 - 4 , 6 - 4"], ["2006", "europe / africa group i", "semifinal", "22 april 2006", "israel", "clay", "anna smashnova", "win", "5 - 7 , 4 - 5 ret"], ["2007", "europe / africa group i c", "1r", "20 april 2007", "slovenia", "clay", "ma\u0161a zec pe\u0161kiri\u010d", "loss", "6 - 3 , 4 - 6 , 6 - 0"], ["2007", "europe / africa group i c", "semifinal", "21 april 2007", "romania", "clay", "m\u0103d\u0103lina gojnea", "loss", "1 - 6 , 6 - 4 , 6 - 3"]], "query": "all_eq { all_rows ; surface ; clay } = true", "question": "of the matches ana timoti\u0107 participated in , all of them took place on a clay surface ."}, {"topic": "television in italy", "wiki": "https://en.wikipedia.org/wiki/Television_in_Italy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15887683-22.html.csv", "action": "comparative", "sent": "regarding television in italy , the channel rai 2 launched earlier than the channel canale 5 .", "annotation": {"row_1": "4", "row_2": "2", "col": "3", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "channel", "rai 2"], "result": null, "ind": 0, "tointer": "select the rows whose channel record fuzzily matches to rai 2 .", "tostr": "filter_eq { all_rows ; channel ; rai 2 }"}, "launch date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; channel ; rai 2 } ; launch date }", "tointer": "select the rows whose channel record fuzzily matches to rai 2 . take the launch date record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "channel", "canale 5"], "result": null, "ind": 1, "tointer": "select the rows whose channel record fuzzily matches to canale 5 .", "tostr": "filter_eq { all_rows ; channel ; canale 5 }"}, "launch date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; channel ; canale 5 } ; launch date }", "tointer": "select the rows whose channel record fuzzily matches to canale 5 . take the launch date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; channel ; rai 2 } ; launch date } ; hop { filter_eq { all_rows ; channel ; canale 5 } ; launch date } } = true", "tointer": "select the rows whose channel record fuzzily matches to rai 2 . take the launch date record of this row . select the rows whose channel record fuzzily matches to canale 5 . take the launch date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; channel ; rai 2 } ; launch date } ; hop { filter_eq { all_rows ; channel ; canale 5 } ; launch date } } = true", "interpret": "select the rows whose channel record fuzzily matches to rai 2 . take the launch date record of this row . select the rows whose channel record fuzzily matches to canale 5 . take the launch date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "channel_7": 7, "rai 2_8": 8, "launch date_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "channel_11": 11, "canale 5_12": 12, "launch date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "channel_7": "channel", "rai 2_8": "rai 2", "launch date_9": "launch date", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "channel_11": "channel", "canale 5_12": "canale 5", "launch date_13": "launch date"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "channel_7": [0], "rai 2_8": [0], "launch date_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "channel_11": [1], "canale 5_12": [1], "launch date_13": [3]}, "table_header": ["position", "channel", "launch date", "owner", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013 ( p )"], "table_cont": [["1", "rai 1", "1954", "rai", "22.86", "22.99", "22.33", "21.80", "20.63", "19.86", "18.1", "18.3", "19.12"], ["2", "canale 5", "1980", "mediaset", "21.82", "20.96", "20.67", "20.33", "20.50", "18.78", "17.0", "15.9", "15.25"], ["3", "rai 3", "1979", "rai", "9.11", "9.31", "9.06", "9.07", "8.46", "7.75", "8.5", "7.7", "7.93"], ["4", "rai 2", "1961", "rai", "11.29", "11.27", "10.38", "10.60", "8.90", "9.02", "8.3", "7.6", "6.81"], ["5", "italia 1", "1982", "mediaset", "11.48", "11.09", "11.18", "10.83", "10.68", "9.22", "8.3", "6.18", "6.48"], ["6", "rete 4", "1982", "mediaset", "8.63", "8.22", "8.68", "8.28", "7.47", "6.79", "6.7", "5.42", "5.26"], ["7", "la7", "2001", "cairo communication", "2.71", "3.02", "2.97", "3.08", "2.90", "3.67", "3.8", "3.68", "4.29"], ["8", "real time", "2005", "discovery networks", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.09", "1.4", "1.49"], ["9", "iris", "2007", "mediaset", "ne", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.1", "1.27"], ["10", "rai yoyo", "2006", "rai", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "0.90", "1.24"], ["11", "dmax", "2011", "discovery networks", "ne", "ne", "ne", "ne", "ne", "ne", "< 0.90", "< 0.90", "1.17"], ["12", "rai premium", "2003", "rai", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.25", "1.11"], ["13", "rai movie", "1999", "rai", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "0.92", "0.93"], ["14", "rai 4", "2008", "rai", "ne", "ne", "ne", "< 0.90", "< 0.90", "< 0.90", "0.98", "1.1", "0.91"]], "query": "less { hop { filter_eq { all_rows ; channel ; rai 2 } ; launch date } ; hop { filter_eq { all_rows ; channel ; canale 5 } ; launch date } } = true", "question": "regarding television in italy , the channel rai 2 launched earlier than the channel canale 5 ."}, {"topic": "auburn tigers football", "wiki": "https://en.wikipedia.org/wiki/Auburn_Tigers_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2846320-4.html.csv", "action": "unique", "sent": "for auburn tigers football , the only time there have been over 100 games was when the rival was georgia .", "annotation": {"scope": "all", "row": "2", "col": "3", "col_other": "2", "criterion": "greater_than", "value": "100", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "games played", "100"], "result": null, "ind": 0, "tointer": "select the rows whose games played record is greater than 100 .", "tostr": "filter_greater { all_rows ; games played ; 100 }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; games played ; 100 } }", "tointer": "select the rows whose games played record is greater than 100 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "games played", "100"], "result": null, "ind": 0, "tointer": "select the rows whose games played record is greater than 100 .", "tostr": "filter_greater { all_rows ; games played ; 100 }"}, "rival"], "result": "georgia", "ind": 2, "tostr": "hop { filter_greater { all_rows ; games played ; 100 } ; rival }"}, "georgia"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; games played ; 100 } ; rival } ; georgia }", "tointer": "the rival record of this unqiue row is georgia ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; games played ; 100 } } ; eq { hop { filter_greater { all_rows ; games played ; 100 } ; rival } ; georgia } } = true", "tointer": "select the rows whose games played record is greater than 100 . there is only one such row in the table . the rival record of this unqiue row is georgia ."}, "logic_str": "and { only { filter_greater { all_rows ; games played ; 100 } } ; eq { hop { filter_greater { all_rows ; games played ; 100 } ; rival } ; georgia } } = true", "interpret": "select the rows whose games played record is greater than 100 . there is only one such row in the table . the rival record of this unqiue row is georgia .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "games played_7": 7, "100_8": 8, "str_eq_3": 3, "str_hop_2": 2, "rival_9": 9, "georgia_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "games played_7": "games played", "100_8": "100", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "rival_9": "rival", "georgia_10": "georgia"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "games played_7": [0], "100_8": [0], "str_eq_3": [4], "str_hop_2": [3], "rival_9": [2], "georgia_10": [3]}, "table_header": ["name of rivalry", "rival", "games played", "first meeting", "last meeting", "au won", "au lost", "ties", "streak", "latest win"], "table_cont": [["iron bowl", "alabama", "77", "1893", "2012", "34", "42", "1", "2 losses", "2010 , 28 - 27"], ["deep south 's oldest rivalry", "georgia", "115", "1892", "2012", "54", "54", "8", "2 losses", "2010 , 49 - 31"], ["auburn - lsu football rivalry", "lsu", "47", "1901", "2012", "20", "26", "1", "2 losses", "2010 , 24 - 17"], ["auburn - florida football rivalry", "florida", "83", "1912", "2011", "43", "38", "2", "3 wins", "2011 , 17 - 6"], ["auburn - georgia tech football rivalry", "georgia tech", "92", "1892", "2005", "47", "41", "4", "2 losses", "1987 , 20 - 10"], ["auburn - tennessee football rivalry", "tennessee", "51", "1900", "2009", "27", "21", "3", "5 wins", "2009 , 26 - 22"], ["auburn - tulane football rivalry", "tulane", "37", "1902", "2006", "14", "17", "6", "1 win", "2006 , 38 - 13"], ["auburn - clemson rivalry", "clemson", "48", "1899", "2012", "34", "13", "2", "2 losses", "2010 , 27 - 24"]], "query": "and { only { filter_greater { all_rows ; games played ; 100 } } ; eq { hop { filter_greater { all_rows ; games played ; 100 } ; rival } ; georgia } } = true", "question": "for auburn tigers football , the only time there have been over 100 games was when the rival was georgia ."}, {"topic": "cooke locomotive and machine works", "wiki": "https://en.wikipedia.org/wiki/Cooke_Locomotive_and_Machine_Works", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1057316-1.html.csv", "action": "unique", "sent": "the cooke locomotive and machine works built on october 1856 is the only one with an unknown serial number .", "annotation": {"scope": "all", "row": "1", "col": "1", "col_other": "3", "criterion": "equal", "value": "unknown", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "serial number", "unknown"], "result": null, "ind": 0, "tointer": "select the rows whose serial number record fuzzily matches to unknown .", "tostr": "filter_eq { all_rows ; serial number ; unknown }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; serial number ; unknown } }", "tointer": "select the rows whose serial number record fuzzily matches to unknown . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "serial number", "unknown"], "result": null, "ind": 0, "tointer": "select the rows whose serial number record fuzzily matches to unknown .", "tostr": "filter_eq { all_rows ; serial number ; unknown }"}, "build date"], "result": "october 1856", "ind": 2, "tostr": "hop { filter_eq { all_rows ; serial number ; unknown } ; build date }"}, "october 1856"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; serial number ; unknown } ; build date } ; october 1856 }", "tointer": "the build date record of this unqiue row is october 1856 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; serial number ; unknown } } ; eq { hop { filter_eq { all_rows ; serial number ; unknown } ; build date } ; october 1856 } } = true", "tointer": "select the rows whose serial number record fuzzily matches to unknown . there is only one such row in the table . the build date record of this unqiue row is october 1856 ."}, "logic_str": "and { only { filter_eq { all_rows ; serial number ; unknown } } ; eq { hop { filter_eq { all_rows ; serial number ; unknown } ; build date } ; october 1856 } } = true", "interpret": "select the rows whose serial number record fuzzily matches to unknown . there is only one such row in the table . the build date record of this unqiue row is october 1856 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "serial number_7": 7, "unknown_8": 8, "str_eq_3": 3, "str_hop_2": 2, "build date_9": 9, "october 1856_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "serial number_7": "serial number", "unknown_8": "unknown", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "build date_9": "build date", "october 1856_10": "october 1856"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "serial number_7": [0], "unknown_8": [0], "str_eq_3": [4], "str_hop_2": [3], "build date_9": [2], "october 1856_10": [3]}, "table_header": ["serial number", "wheel arrangement ( whyte notation )", "build date", "operational owner ( s )", "disposition"], "table_cont": [["unknown", "4 - 4 - 0", "october 1856", "western and atlantic railroad 49 texas", "static display in grant park , atlanta , georgia"], ["1555", "2 - 6 - 0", "february 1884", "colorado and southern railway 9", "georgetown loop railroad , silver plume , colorado"], ["1861", "4 - 4 - 0", "february 1888", "dardanelle and russelville 8", "nevada state railroad museum , carson city , nevada"], ["2053", "4 - 6 - 0", "october , 1890", "union pacific railroad 1242", "lion 's park , cheyenne , wyoming"], ["2054", "4 - 6 - 0", "october , 1890", "union pacific railroad 1243", "durham western heritage museum , omaha , nebraska"], ["2202", "4 - 6 - 0", "april 1892", "texas and new orleans railroad 319", "riverdale , georgia"], ["2341", "4 - 6 - 0", "july 1896", "southern pacific railroad 2248", "grapevine vintage railroad , grapevine , texas"]], "query": "and { only { filter_eq { all_rows ; serial number ; unknown } } ; eq { hop { filter_eq { all_rows ; serial number ; unknown } ; build date } ; october 1856 } } = true", "question": "the cooke locomotive and machine works built on october 1856 is the only one with an unknown serial number ."}, {"topic": "2007 - 08 plymouth argyle f.c. season", "wiki": "https://en.wikipedia.org/wiki/2007%E2%80%9308_Plymouth_Argyle_F.C._season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12666456-6.html.csv", "action": "count", "sent": "three of the players plymouth argyle f.c. received were from the country of france .", "annotation": {"scope": "all", "criterion": "equal", "value": "fra", "result": "3", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "fra"], "result": null, "ind": 0, "tointer": "select the rows whose country record fuzzily matches to fra .", "tostr": "filter_eq { all_rows ; country ; fra }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; country ; fra } }", "tointer": "select the rows whose country record fuzzily matches to fra . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; country ; fra } } ; 3 } = true", "tointer": "select the rows whose country record fuzzily matches to fra . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; country ; fra } } ; 3 } = true", "interpret": "select the rows whose country record fuzzily matches to fra . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "country_5": 5, "fra_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "country_5": "country", "fra_6": "fra", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "country_5": [0], "fra_6": [0], "3_7": [2]}, "table_header": ["name", "country", "type", "moving from", "transfer window", "ends", "transfer fee"], "table_cont": [["abdou", "fra", "signed", "sedan", "summer", "2008", "free"], ["mabiala", "fra", "loan", "parissaint - germain", "summer", "2008", "loan"], ["martin", "eng", "loan", "manchester united", "summer", "2008", "loan"], ["easter", "wal", "transfer", "wycombe wanderers", "winter", "2008", "210k"], ["jutkiewicz", "eng", "loan", "everton", "winter", "2008", "loan"], ["folly", "fra", "transfer", "sheffield wednesday", "winter", "2008", "xxxk"]], "query": "eq { count { filter_eq { all_rows ; country ; fra } } ; 3 } = true", "question": "three of the players plymouth argyle f.c. received were from the country of france ."}, {"topic": "2010 nba all - star game", "wiki": "https://en.wikipedia.org/wiki/2010_NBA_All-Star_Game", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15753220-17.html.csv", "action": "ordinal", "sent": "in the 2010 nba all star game , the player with the 2nd highest weight was mike harris .", "annotation": {"row": "7", "col": "5", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "weight", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; weight ; 2 }"}, "player"], "result": "mike harris", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; weight ; 2 } ; player }"}, "mike harris"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; weight ; 2 } ; player } ; mike harris } = true", "tointer": "select the row whose weight record of all rows is 2nd maximum . the player record of this row is mike harris ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; weight ; 2 } ; player } ; mike harris } = true", "interpret": "select the row whose weight record of all rows is 2nd maximum . the player record of this row is mike harris .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "weight_5": 5, "2_6": 6, "player_7": 7, "mike harris_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "weight_5": "weight", "2_6": "2", "player_7": "player", "mike harris_8": "mike harris"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "weight_5": [0], "2_6": [0], "player_7": [1], "mike harris_8": [2]}, "table_header": ["pos", "player", "team", "height", "weight"], "table_cont": [["g", "pat carroll", "iowa energy", "6 - 5", "190"], ["f", "trey gilder", "maine red claws", "6 - 9", "185"], ["f", "carlos powell", "albuquerque thunderbirds", "6 - 7", "225"], ["f", "romel beck", "dakota wizards", "6 - 8", "195"], ["f", "brian butch", "bakersfield jam", "6 - 11", "240"], ["f", "desmon farmer", "reno bighorns", "6 - 5", "210"], ["f", "mike harris", "rio grande valley vipers", "6 - 6", "235"], ["g", "donell taylor", "idaho stampede", "6 - 5", "215"], ["g", "curtis jerrells", "austin toros", "6 - 1", "195"], ["g", "mustafa shakur", "tulsa 66ers", "6 - 3", "190"], ["f", "diamon simpson", "los angeles d - fenders", "6 - 7", "230"], ["f", "reggie williams", "sioux falls skyforce", "6 - 6", "210"], ["g", "dontell jefferson", "utah flash", "6 - 5", "190"]], "query": "eq { hop { nth_argmax { all_rows ; weight ; 2 } ; player } ; mike harris } = true", "question": "in the 2010 nba all star game , the player with the 2nd highest weight was mike harris ."}, {"topic": "2008 - 09 denver nuggets season", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_Denver_Nuggets_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17355408-5.html.csv", "action": "aggregation", "sent": "in december 2008 , the denver nuggets scored an average of 104.6 points per game .", "annotation": {"scope": "subset", "col": "4", "type": "average", "result": "104.6", "subset": {"col": "2", "criterion": "equal", "value": "december"}}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "december"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; date ; december }", "tointer": "select the rows whose date record fuzzily matches to december ."}, "score"], "result": "104.6", "ind": 1, "tostr": "avg { filter_eq { all_rows ; date ; december } ; score }"}, "104.6"], "result": true, "ind": 2, "tostr": "round_eq { avg { filter_eq { all_rows ; date ; december } ; score } ; 104.6 } = true", "tointer": "select the rows whose date record fuzzily matches to december . the average of the score record of these rows is 104.6 ."}, "logic_str": "round_eq { avg { filter_eq { all_rows ; date ; december } ; score } ; 104.6 } = true", "interpret": "select the rows whose date record fuzzily matches to december . the average of the score record of these rows is 104.6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "avg_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "december_6": 6, "score_7": 7, "104.6_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "avg_1": "avg", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "december_6": "december", "score_7": "score", "104.6_8": "104.6"}, "g_adj": {"eq_2": [3], "result_3": [], "avg_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "december_6": [0], "score_7": [1], "104.6_8": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["19", "december 2", "toronto", "w 132 - 93 ( ot )", "chauncey billups ( 24 )", "nen\u00ea ( 11 )", "chauncey billups ( 14 )", "pepsi center 14243", "13 - 6"], ["20", "december 4", "san antonio", "l 91 - 108 ( ot )", "carmelo anthony ( 16 )", "j r smith ( 10 )", "j r smith , chauncey billups ( 4 )", "pepsi center 15866", "13 - 7"], ["21", "december 6", "sacramento", "w 118 - 85 ( ot )", "chauncey billups ( 24 )", "nen\u00ea , carmelo anthony ( 7 )", "chauncey billups ( 4 )", "arco arena 12322", "14 - 7"], ["22", "december 10", "minnesota", "w 116 - 105 ( ot )", "carmelo anthony ( 45 )", "carmelo anthony ( 11 )", "chauncey billups ( 6 )", "pepsi center 14007", "15 - 7"], ["23", "december 13", "golden state", "w 123 - 105 ( ot )", "carmelo anthony ( 27 )", "carmelo anthony ( 9 )", "chauncey billups ( 11 )", "pepsi center 15322", "16 - 7"], ["24", "december 15", "dallas", "w 98 - 88 ( ot )", "j r smith ( 25 )", "kenyon martin ( 10 )", "chauncey billups ( 8 )", "american airlines center 19969", "17 - 7"], ["25", "december 16", "houston", "l 96 - 108 ( ot )", "carmelo anthony ( 22 )", "kenyon martin ( 8 )", "chauncey billups ( 6 )", "toyota center 17737", "17 - 8"], ["26", "december 19", "cleveland", "l 88 - 105 ( ot )", "chauncey billups ( 16 )", "chris andersen ( 10 )", "anthony carter , j r smith ( 4 )", "pepsi center 19155", "17 - 9"], ["27", "december 20", "phoenix", "l 101 - 108 ( ot )", "j r smith ( 23 )", "nen\u00ea ( 15 )", "chauncey billups ( 8 )", "us airways center 18422", "17 - 10"], ["28", "december 22", "portland", "w 97 - 89 ( ot )", "chauncey billups , nen\u00ea ( 19 )", "kenyon martin ( 12 )", "chauncey billups ( 10 )", "pepsi center 18611", "18 - 10"], ["29", "december 23", "portland", "l 92 - 101 ( ot )", "linas kleiza ( 20 )", "nen\u00ea ( 13 )", "chucky atkins ( 4 )", "rose garden 20007", "18 - 11"], ["30", "december 26", "philadelphia", "w 105 - 101 ( ot )", "j r smith ( 27 )", "nen\u00ea ( 12 )", "chauncey billups ( 10 )", "pepsi center 19155", "19 - 11"], ["31", "december 28", "new york", "w 117 - 110 ( ot )", "carmelo anthony ( 32 )", "carmelo anthony , nen\u00ea ( 9 )", "chauncey billups ( 5 )", "madison square garden 19763", "20 - 11"], ["32", "december 29", "atlanta", "l 91 - 109 ( ot )", "kenyon martin ( 19 )", "chris andersen ( 6 )", "anthony carter ( 7 )", "philips arena 17131", "20 - 12"]], "query": "round_eq { avg { filter_eq { all_rows ; date ; december } ; score } ; 104.6 } = true", "question": "in december 2008 , the denver nuggets scored an average of 104.6 points per game ."}, {"topic": "list of longest - serving soap opera actors", "wiki": "https://en.wikipedia.org/wiki/List_of_longest-serving_soap_opera_actors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18772558-1.html.csv", "action": "count", "sent": "3 of the longest serving soap opera actors appeared in as the world turns .", "annotation": {"scope": "all", "criterion": "equal", "value": "as the world turns", "result": "3", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "soap opera", "as the world turns"], "result": null, "ind": 0, "tointer": "select the rows whose soap opera record fuzzily matches to as the world turns .", "tostr": "filter_eq { all_rows ; soap opera ; as the world turns }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; soap opera ; as the world turns } }", "tointer": "select the rows whose soap opera record fuzzily matches to as the world turns . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; soap opera ; as the world turns } } ; 3 } = true", "tointer": "select the rows whose soap opera record fuzzily matches to as the world turns . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; soap opera ; as the world turns } } ; 3 } = true", "interpret": "select the rows whose soap opera record fuzzily matches to as the world turns . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "soap opera_5": 5, "as the world turns_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "soap opera_5": "soap opera", "as the world turns_6": "as the world turns", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "soap opera_5": [0], "as the world turns_6": [0], "3_7": [2]}, "table_header": ["rank", "actor", "character", "soap opera", "years", "duration"], "table_cont": [["1", "lesley saweard", "christine barford", "the archers", "1953 -", "61 years"], ["2", "norman painting", "phil archer", "the archers", "1950 - 2009", "59 years"], ["3", "patricia greene", "jill archer", "the archers", "1957 -", "57 years"], ["4", "june spencer", "peggy woolley", "the archers", "1951 - 1953 , 1962 -", "54 years"], ["5", "william roache", "ken barlow", "coronation street", "1960 -", "54 years"], ["6", "helen wagner", "nancy hughes", "as the world turns", "1956 - 1981 , 1983 - 2010", "52 years"], ["7", "eileen derbyshire", "emily bishop", "coronation street", "1961 , 1962 - 1966 , 1967 -", "52 years"], ["8", "angela piper", "jennifer aldridge", "the archers", "1963 -", "51 years"], ["9", "don hastings", "bob hughes", "as the world turns", "1960 - 2010", "50 years"], ["10", "eileen fulton", "lisa grimaldi", "as the world turns", "1960 - 1965 , 1965 - 1983 , 1984 - 2010", "50 years"]], "query": "eq { count { filter_eq { all_rows ; soap opera ; as the world turns } } ; 3 } = true", "question": "3 of the longest serving soap opera actors appeared in as the world turns ."}, {"topic": "royal canadian mint numismatic coins ( 2000s )", "wiki": "https://en.wikipedia.org/wiki/Royal_Canadian_Mint_numismatic_coins_%282000s%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11916083-27.html.csv", "action": "majority", "sent": "the majority of royal canadian mint numismatic coins of the 2000s have an issue price of 24.95 .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "24.95", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "issue price", "24.95"], "result": true, "ind": 0, "tointer": "for the issue price records of all rows , most of them are equal to 24.95 .", "tostr": "most_eq { all_rows ; issue price ; 24.95 } = true"}, "logic_str": "most_eq { all_rows ; issue price ; 24.95 } = true", "interpret": "for the issue price records of all rows , most of them are equal to 24.95 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "issue price_3": 3, "24.95_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "issue price_3": "issue price", "24.95_4": "24.95"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "issue price_3": [0], "24.95_4": [0]}, "table_header": ["year", "theme", "artist", "issue price", "special notes"], "table_cont": [["2008", "calgary flames", "n / a", "15.95", "from coin and puck set"], ["2008", "calgary flames", "n / a", "24.95", "from calgary flames gift set"], ["2008", "edmonton oilers", "n / a", "15.95", "from coin and puck set"], ["2008", "edmonton oilers", "n / a", "24.95", "from edmonton oilers gift set"], ["2008", "montreal canadiens", "n / a", "15.95", "from coin and puck set"], ["2008", "montreal canadiens", "n / a", "24.95", "from montreal canadiens gift set"], ["2008", "ottawa senators", "n / a", "15.95", "from coin and puck set"], ["2008", "ottawa senators", "n / a", "24.95", "from ottawa senators gift set"], ["2008", "toronto maple leafs", "n / a", "15.95", "from coin and puck set"], ["2008", "toronto maple leafs", "n / a", "24.95", "from toronto maple leafs gift set"], ["2008", "vancouver canucks", "n / a", "15.95", "from coin and puck set"], ["2008", "vancouver canucks", "n / a", "24.95", "from vancouver canucks gift set"], ["2009", "calgary flames", "n / a", "24.95", "from calgary flames gift set"], ["2009", "edmonton oilers", "n / a", "24.95", "from edmonton oilers gift set"], ["2009", "montreal canadiens", "n / a", "24.95", "from montreal canadiens gift set"], ["2009", "ottawa senators", "n / a", "24.95", "from ottawa senators gift set"], ["2009", "toronto maple leafs", "n / a", "24.95", "from toronto maple leafs gift set"], ["2009", "vancouver canucks", "n / a", "24.95", "from vancouver canucks gift set"]], "query": "most_eq { all_rows ; issue price ; 24.95 } = true", "question": "the majority of royal canadian mint numismatic coins of the 2000s have an issue price of 24.95 ."}, {"topic": "dick rathmann", "wiki": "https://en.wikipedia.org/wiki/Dick_Rathmann", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1235982-1.html.csv", "action": "aggregation", "sent": "from 1950 to 1964 , dick rathmann averaged 102.9 laps in the indianapolis 500 .", "annotation": {"scope": "all", "col": "5", "type": "average", "result": "102.9", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "laps"], "result": "102.9", "ind": 0, "tostr": "avg { all_rows ; laps }"}, "102.9"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; laps } ; 102.9 } = true", "tointer": "the average of the laps record of all rows is 102.9 ."}, "logic_str": "round_eq { avg { all_rows ; laps } ; 102.9 } = true", "interpret": "the average of the laps record of all rows is 102.9 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "laps_4": 4, "102.9_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "laps_4": "laps", "102.9_5": "102.9"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "laps_4": [0], "102.9_5": [1]}, "table_header": ["year", "qual", "rank", "finish", "laps"], "table_cont": [["1950", "130.928", "17", "32", "25"], ["1956", "144.471", "6", "5", "200"], ["1957", "140.780", "withdrew", "withdrew", "withdrew"], ["1958", "145.974", "1", "27", "0"], ["1959", "144.248", "5", "20", "150"], ["1960", "145.543", "6", "31", "42"], ["1961", "146.033", "8", "13", "164"], ["1962", "147.161", "13", "24", "51"], ["1963", "149.130", "14", "10", "200"], ["1964", "151.860", "17", "7", "197"]], "query": "round_eq { avg { all_rows ; laps } ; 102.9 } = true", "question": "from 1950 to 1964 , dick rathmann averaged 102.9 laps in the indianapolis 500 ."}, {"topic": "2009 - 10 temple owls men 's basketball team", "wiki": "https://en.wikipedia.org/wiki/2009%E2%80%9310_Temple_Owls_men%27s_basketball_team", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-25461946-5.html.csv", "action": "count", "sent": "lavoy allen had the high rebound in 5 games .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "allen", "result": "5", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "high rebounds", "allen"], "result": null, "ind": 0, "tointer": "select the rows whose high rebounds record fuzzily matches to allen .", "tostr": "filter_eq { all_rows ; high rebounds ; allen }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; high rebounds ; allen } }", "tointer": "select the rows whose high rebounds record fuzzily matches to allen . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; high rebounds ; allen } } ; 5 } = true", "tointer": "select the rows whose high rebounds record fuzzily matches to allen . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; high rebounds ; allen } } ; 5 } = true", "interpret": "select the rows whose high rebounds record fuzzily matches to allen . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "high rebounds_5": 5, "allen_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "high rebounds_5": "high rebounds", "allen_6": "allen", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "high rebounds_5": [0], "allen_6": [0], "5_7": [2]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["1", "november 14", "delaware", "w 76 - 56", "ryan brooks - 23", "lavoy allen - 15", "juan fernandez - 5", "bob carpenter center , newark , de ( 3080 )", "1 - 0"], ["2", "november 17", "georgetown ( 19 )", "l 46 - 45", "allen - 12", "allen - 14", "luiz guzman - 6", "verizon center , washington , dc ( 8712 )", "1 - 1"], ["3", "november 21", "siena", "w 73 - 69", "fernandez - 20", "allen - 7", "allen - 5", "liacouras center , philadelphia , pa ( 6759 )", "2 - 1"], ["4", "november 24", "ball state", "w 66 - 46", "brooks - 17", "allen - 9", "allen / brooks - 7", "liacouras center , philadelphia , pa ( 3597 )", "3 - 1"], ["5", "november 27", "virginia tech", "w 61 - 50", "allen - 18", "allen - 10", "fernandez - 6", "palestra , philadelphia , pa ( 3750 )", "4 - 1"]], "query": "eq { count { filter_eq { all_rows ; high rebounds ; allen } } ; 5 } = true", "question": "lavoy allen had the high rebound in 5 games ."}, {"topic": "b \" finnish people 's democratic league \"", "wiki": "https://en.wikipedia.org/wiki/Finnish_People%27s_Democratic_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1517649-5.html.csv", "action": "count", "sent": "kalevi kivist\u00f6 was the candidate of the finnish people 's democratic league 2 times .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "kalevi kivist\u00f6", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "candidate", "kalevi kivist\u00f6"], "result": null, "ind": 0, "tointer": "select the rows whose candidate record fuzzily matches to kalevi kivist\u00f6 .", "tostr": "filter_eq { all_rows ; candidate ; kalevi kivist\u00f6 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; candidate ; kalevi kivist\u00f6 } }", "tointer": "select the rows whose candidate record fuzzily matches to kalevi kivist\u00f6 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; candidate ; kalevi kivist\u00f6 } } ; 2 } = true", "tointer": "select the rows whose candidate record fuzzily matches to kalevi kivist\u00f6 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; candidate ; kalevi kivist\u00f6 } } ; 2 } = true", "interpret": "select the rows whose candidate record fuzzily matches to kalevi kivist\u00f6 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "candidate_5": 5, "kalevi kivist\u00f6_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "candidate_5": "candidate", "kalevi kivist\u00f6_6": "kalevi kivist\u00f6", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "candidate_5": [0], "kalevi kivist\u00f6_6": [0], "2_7": [2]}, "table_header": ["year", "electors", "votes", "share of votes", "candidate"], "table_cont": [["1950", "67", "338 035", "21 , 4 %", "mauno pekkala"], ["1956", "56", "354 575", "18 , 7 %", "eino kilpi"], ["1962", "63", "451 750", "20 , 5 %", "paavo aitio"], ["1968", "56", "345 609", "17 , 0 %", "seconded urho kekkonen of centre"], ["1978", "56", "445 098", "18 , 2 %", "seconded urho kekkonen of centre"], ["1982", "32", "348 359", "11 , 0 %", "kalevi kivist\u00f6"], ["1988", "26", "330 072 286 833", "10 , 7 % 9 , 6 %", "kalevi kivist\u00f6 liike 88"]], "query": "eq { count { filter_eq { all_rows ; candidate ; kalevi kivist\u00f6 } } ; 2 } = true", "question": "kalevi kivist\u00f6 was the candidate of the finnish people 's democratic league 2 times ."}, {"topic": "saori obata", "wiki": "https://en.wikipedia.org/wiki/Saori_Obata", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11695454-2.html.csv", "action": "unique", "sent": "of the tournaments that saori obata participated in , the one on may 11 , 2003 was the only one in fukuoka .", "annotation": {"scope": "all", "row": "3", "col": "2", "col_other": "1", "criterion": "equal", "value": "fukuoka , japan", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "fukuoka , japan"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to fukuoka , japan .", "tostr": "filter_eq { all_rows ; tournament ; fukuoka , japan }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; tournament ; fukuoka , japan } }", "tointer": "select the rows whose tournament record fuzzily matches to fukuoka , japan . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "tournament", "fukuoka , japan"], "result": null, "ind": 0, "tointer": "select the rows whose tournament record fuzzily matches to fukuoka , japan .", "tostr": "filter_eq { all_rows ; tournament ; fukuoka , japan }"}, "date"], "result": "may 11 , 2003", "ind": 2, "tostr": "hop { filter_eq { all_rows ; tournament ; fukuoka , japan } ; date }"}, "may 11 , 2003"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; tournament ; fukuoka , japan } ; date } ; may 11 , 2003 }", "tointer": "the date record of this unqiue row is may 11 , 2003 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; tournament ; fukuoka , japan } } ; eq { hop { filter_eq { all_rows ; tournament ; fukuoka , japan } ; date } ; may 11 , 2003 } } = true", "tointer": "select the rows whose tournament record fuzzily matches to fukuoka , japan . there is only one such row in the table . the date record of this unqiue row is may 11 , 2003 ."}, "logic_str": "and { only { filter_eq { all_rows ; tournament ; fukuoka , japan } } ; eq { hop { filter_eq { all_rows ; tournament ; fukuoka , japan } ; date } ; may 11 , 2003 } } = true", "interpret": "select the rows whose tournament record fuzzily matches to fukuoka , japan . there is only one such row in the table . the date record of this unqiue row is may 11 , 2003 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "tournament_7": 7, "fukuoka , japan_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "may 11 , 2003_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "tournament_7": "tournament", "fukuoka , japan_8": "fukuoka , japan", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "may 11 , 2003_10": "may 11 , 2003"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "tournament_7": [0], "fukuoka , japan_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "may 11 , 2003_10": [3]}, "table_header": ["date", "tournament", "surface", "opponent in the final", "score"], "table_cont": [["november 18 , 2001", "port pirie , australia", "hard", "pavlina nola", "6 - 1 , 6 - 2"], ["november 25 , 2001", "nuriootpa , australia", "hard", "yoon - jeong cho", "6 - 4 , 6 - 1"], ["may 11 , 2003", "fukuoka , japan", "clay", "maria elena camerin", "2 - 6 , 6 - 3 , 6 - 3"], ["april 3 , 2005", "augusta , united states", "hard", "victoria azarenka", "6 - 2 , 6 - 2"], ["may 8 , 2005", "gifu , japan", "hard", "shiho hisamatsu", "6 - 1 , 2 - 6 , 6 - 4"]], "query": "and { only { filter_eq { all_rows ; tournament ; fukuoka , japan } } ; eq { hop { filter_eq { all_rows ; tournament ; fukuoka , japan } ; date } ; may 11 , 2003 } } = true", "question": "of the tournaments that saori obata participated in , the one on may 11 , 2003 was the only one in fukuoka ."}, {"topic": "essendon football club", "wiki": "https://en.wikipedia.org/wiki/Essendon_Football_Club", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10257-5.html.csv", "action": "unique", "sent": "1924 is the only year where essendon did not play .", "annotation": {"scope": "all", "row": "3", "col": "4", "col_other": "1", "criterion": "equal", "value": "did not play", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "did not play"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to did not play .", "tostr": "filter_eq { all_rows ; score ; did not play }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; score ; did not play } }", "tointer": "select the rows whose score record fuzzily matches to did not play . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "did not play"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to did not play .", "tostr": "filter_eq { all_rows ; score ; did not play }"}, "year"], "result": "1924", "ind": 2, "tostr": "hop { filter_eq { all_rows ; score ; did not play } ; year }"}, "1924"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; score ; did not play } ; year } ; 1924 }", "tointer": "the year record of this unqiue row is 1924 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; score ; did not play } } ; eq { hop { filter_eq { all_rows ; score ; did not play } ; year } ; 1924 } } = true", "tointer": "select the rows whose score record fuzzily matches to did not play . there is only one such row in the table . the year record of this unqiue row is 1924 ."}, "logic_str": "and { only { filter_eq { all_rows ; score ; did not play } } ; eq { hop { filter_eq { all_rows ; score ; did not play } ; year } ; 1924 } } = true", "interpret": "select the rows whose score record fuzzily matches to did not play . there is only one such row in the table . the year record of this unqiue row is 1924 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "score_7": 7, "did not play_8": 8, "str_eq_3": 3, "str_hop_2": 2, "year_9": 9, "1924_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "score_7": "score", "did not play_8": "did not play", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "year_9": "year", "1924_10": "1924"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "score_7": [0], "did not play_8": [0], "str_eq_3": [4], "str_hop_2": [3], "year_9": [2], "1924_10": [3]}, "table_header": ["year", "competition", "opponent", "score", "venue"], "table_cont": [["year", "competition", "opponent", "score", "venue"], ["1922", "vfl reserves", "collingwood", "1.9 ( 15 ) - 8.10 ( 58 )", "mcg"], ["1924", "vfl reserves", "geelong", "did not play", "kardinia park"], ["1932", "vfl reserves", "melbourne", "4.10 ( 34 ) - 8.12 ( 60 )", "mcg"], ["1949", "vfl reserves", "melbourne", "9.14 ( 68 ) - 17.10 ( 112 )", "mcg"], ["1951", "vfl reserves", "carlton", "7.9 ( 51 ) - 8.15 ( 63 )", "mcg"], ["1953", "vfl reserves", "carlton", "11.7 ( 73 ) - 15.7 ( 97 )", "mcg"], ["1971", "vfl reserves", "richmond", "8.18 ( 66 ) - 14.14 ( 98 )", "mcg"], ["1981", "vfl reserves", "geelong", "18.6 ( 114 ) - 21.14 ( 140 )", "mcg"], ["1996", "vsfl", "north melbourne", "7.10 ( 52 ) - 23.18 ( 156 )", "mcg"], ["1998", "vsfl", "footscray", "12.8 ( 80 ) - 20.16 ( 136 )", "mcg"]], "query": "and { only { filter_eq { all_rows ; score ; did not play } } ; eq { hop { filter_eq { all_rows ; score ; did not play } ; year } ; 1924 } } = true", "question": "1924 is the only year where essendon did not play ."}, {"topic": "juan bravo murillo", "wiki": "https://en.wikipedia.org/wiki/Juan_Bravo_Murillo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-26362472-1.html.csv", "action": "superlative", "sent": "the latest date juan bravo murillo was elected to the fregenal de la sierra district was february 4 , 1853 .", "annotation": {"scope": "subset", "col_superlative": "2", "row_superlative": "11", "value_mentioned": "yes", "max_or_min": "max", "other_col": "3", "subset": {"col": "3", "criterion": "equal", "value": "fregenal de la sierra"}}, "logic": {"func": "eq", "args": [{"func": "max", "args": [{"func": "filter_str_eq", "args": ["all_rows", "district", "fregenal de la sierra"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; district ; fregenal de la sierra }", "tointer": "select the rows whose district record fuzzily matches to fregenal de la sierra ."}, "election date"], "result": "1853 - 2 - 4", "ind": 1, "tostr": "max { filter_eq { all_rows ; district ; fregenal de la sierra } ; election date }", "tointer": "select the rows whose district record fuzzily matches to fregenal de la sierra . the maximum election date record of these rows is 1853 - 2 - 4 ."}, "1853 - 2 - 4"], "result": true, "ind": 2, "tostr": "eq { max { filter_eq { all_rows ; district ; fregenal de la sierra } ; election date } ; 1853 - 2 - 4 } = true", "tointer": "select the rows whose district record fuzzily matches to fregenal de la sierra . the maximum election date record of these rows is 1853 - 2 - 4 ."}, "logic_str": "eq { max { filter_eq { all_rows ; district ; fregenal de la sierra } ; election date } ; 1853 - 2 - 4 } = true", "interpret": "select the rows whose district record fuzzily matches to fregenal de la sierra . the maximum election date record of these rows is 1853 - 2 - 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "max_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "district_5": 5, "fregenal de la sierra_6": 6, "election date_7": 7, "1853 - 2 - 4_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "max_1": "max", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "district_5": "district", "fregenal de la sierra_6": "fregenal de la sierra", "election date_7": "election date", "1853 - 2 - 4_8": "1853 - 2 - 4"}, "g_adj": {"eq_2": [3], "result_3": [], "max_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "district_5": [0], "fregenal de la sierra_6": [0], "election date_7": [1], "1853 - 2 - 4_8": [2]}, "table_header": ["election number", "election date", "district", "province", "took office", "left office"], "table_cont": [["9", "1837 - 9 - 22", "large", "seville", "1837 - 12 - 19", "1839 - 06 - 01"], ["11", "1840 - 1 - 19", "large", "\u00e1vila", "1840 - 02 - 21", "1840 - 10 - 11"], ["14", "1843 - 9 - 15", "large", "badajoz", "1843 - 10 - 18", "1844 - 07 - 10"], ["15", "1844 - 9 - 3", "large", "badajoz", "1844 - 10 - 14", "1846 - 10 - 31"], ["16", "1846 - 6 - 21", "fregenal de la sierra", "badajoz", "1847 - 01 - 03", "1848 - 12 - 18"], ["16", "1846 - 6 - 21", "fregenal de la sierra", "badajoz", "1847 - 12 - 20", "1850 - 08 - 04"], ["17", "1850 - 8 - 31", "fregenal de la sierra", "badajoz", "1850 - 11 - 06", "1851 - 04 - 07"], ["17", "1850 - 8 - 31", "huelva", "huelva", "1850 - 11 - 06", "1850 - 11 - 15"], ["18", "1851 - 5 - 10", "elche de la sierra", "albacete", "1851 - 06 - 04", "1851 - 06 - 17"], ["18", "1851 - 5 - 10", "fregenal de la sierra", "badajoz", "1851 - 06 - 04", "1852 - 12 - 02"], ["19", "1853 - 2 - 4", "fregenal de la sierra", "badajoz", "1853 - 03 - 15", "1853 - 12 - 10"]], "query": "eq { max { filter_eq { all_rows ; district ; fregenal de la sierra } ; election date } ; 1853 - 2 - 4 } = true", "question": "the latest date juan bravo murillo was elected to the fregenal de la sierra district was february 4 , 1853 ."}, {"topic": "rex caldwell", "wiki": "https://en.wikipedia.org/wiki/Rex_Caldwell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13965339-3.html.csv", "action": "majority", "sent": "rex caldwell had a total of 0 wins for all of the golf championships that he played in .", "annotation": {"scope": "all", "col": "2", "most_or_all": "all", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "all_eq", "args": ["all_rows", "wins", "0"], "result": true, "ind": 0, "tointer": "for the wins records of all rows , all of them are equal to 0 .", "tostr": "all_eq { all_rows ; wins ; 0 } = true"}, "logic_str": "all_eq { all_rows ; wins ; 0 } = true", "interpret": "for the wins records of all rows , all of them are equal to 0 .", "num_func": 1, "nid": 1, "g_ids": {"all_eq_0": 0, "result_1": 1, "all_rows_2": 2, "wins_3": 3, "0_4": 4}, "g_ids_features": {"all_eq_0": "all_eq", "result_1": "true", "all_rows_2": "all_rows", "wins_3": "wins", "0_4": "0"}, "g_adj": {"all_eq_0": [1], "result_1": [], "all_rows_2": [0], "wins_3": [0], "0_4": [0]}, "table_header": ["tournament", "wins", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "1", "3", "3"], ["us open", "0", "0", "3", "0"], ["the open championship", "0", "0", "1", "0"], ["pga championship", "0", "3", "8", "6"], ["totals", "0", "4", "15", "9"]], "query": "all_eq { all_rows ; wins ; 0 } = true", "question": "rex caldwell had a total of 0 wins for all of the golf championships that he played in ."}, {"topic": "1947 baa draft", "wiki": "https://en.wikipedia.org/wiki/1947_BAA_draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12093318-3.html.csv", "action": "ordinal", "sent": "of the picks in the 1947 baa draft , the 2nd to last one is dick o'keefe .", "annotation": {"row": "9", "col": "2", "order": "9", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "pick", "9"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; pick ; 9 }"}, "player"], "result": "dick o'keefe", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; pick ; 9 } ; player }"}, "dick o'keefe"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; pick ; 9 } ; player } ; dick o'keefe } = true", "tointer": "select the row whose pick record of all rows is 9th minimum . the player record of this row is dick o'keefe ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; pick ; 9 } ; player } ; dick o'keefe } = true", "interpret": "select the row whose pick record of all rows is 9th minimum . the player record of this row is dick o'keefe .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "pick_5": 5, "9_6": 6, "player_7": 7, "dick o'keefe_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "pick_5": "pick", "9_6": "9", "player_7": "player", "dick o'keefe_8": "dick o'keefe"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "pick_5": [0], "9_6": [0], "player_7": [1], "dick o'keefe_8": [2]}, "table_header": ["round", "pick", "player", "position", "team", "college"], "table_cont": [["1", "1", "clifton mcneely", "-", "pittsburgh ironmen", "texas wesleyan"], ["1", "2", "glen selbo", "g / f", "toronto huskies", "wisconsin"], ["1", "3", "bulbs ehlers", "g / f", "boston celtics", "purdue"], ["1", "4", "walt dropo", "-", "providence steamrollers", "connecticut"], ["1", "5", "dick holub", "c", "new york knicks", "long island"], ["1", "6", "chink crossin", "g", "philadelphia warriors", "pennsylvania"], ["1", "7", "jack underman", "-", "st louis bombers", "ohio state"], ["1", "8", "paul huston", "f", "chicago stags", "ohio state"], ["1", "9", "dick o'keefe", "g / f", "washington capitols", "santa clara"], ["1", "10", "larry killick", "-", "baltimore bullets", "vermont"]], "query": "eq { hop { nth_argmin { all_rows ; pick ; 9 } ; player } ; dick o'keefe } = true", "question": "of the picks in the 1947 baa draft , the 2nd to last one is dick o'keefe ."}, {"topic": "1914 in brazilian football", "wiki": "https://en.wikipedia.org/wiki/1914_in_Brazilian_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-15405904-1.html.csv", "action": "aggregation", "sent": "brazilian football teams in 1914 averaged a total of 11 points scored .", "annotation": {"scope": "all", "col": "3", "type": "average", "result": "11", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "points"], "result": "11", "ind": 0, "tostr": "avg { all_rows ; points }"}, "11"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; points } ; 11 } = true", "tointer": "the average of the points record of all rows is 11 ."}, "logic_str": "round_eq { avg { all_rows ; points } ; 11 } = true", "interpret": "the average of the points record of all rows is 11 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "points_4": 4, "11_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "points_4": "points", "11_5": "11"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "points_4": [0], "11_5": [1]}, "table_header": ["position", "team", "points", "played", "won", "drawn", "lost", "for", "against", "difference"], "table_cont": [["1", "aa s\u00e3o bento", "15", "10", "7", "1", "2", "21", "16", "5"], ["2", "paulistano", "14", "10", "7", "0", "3", "22", "15", "7"], ["3", "mackenzie", "11", "10", "5", "1", "4", "20", "14", "6"], ["4", "ypiranga - sp", "11", "10", "4", "3", "3", "19", "15", "4"], ["5", "scottish wanderers", "5", "10", "2", "1", "7", "13", "23", "- 10"]], "query": "round_eq { avg { all_rows ; points } ; 11 } = true", "question": "brazilian football teams in 1914 averaged a total of 11 points scored ."}, {"topic": "1969 vfl season", "wiki": "https://en.wikipedia.org/wiki/1969_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10809157-3.html.csv", "action": "ordinal", "sent": "among the home teams in the 1969 vfl season , essendon had the 2nd lowest score .", "annotation": {"row": "3", "col": "2", "order": "2", "col_other": "1", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "home team score", "2"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; home team score ; 2 }"}, "home team"], "result": "essendon", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; home team score ; 2 } ; home team }"}, "essendon"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; home team score ; 2 } ; home team } ; essendon } = true", "tointer": "select the row whose home team score record of all rows is 2nd minimum . the home team record of this row is essendon ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; home team score ; 2 } ; home team } ; essendon } = true", "interpret": "select the row whose home team score record of all rows is 2nd minimum . the home team record of this row is essendon .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "home team score_5": 5, "2_6": 6, "home team_7": 7, "essendon_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "home team score_5": "home team score", "2_6": "2", "home team_7": "home team", "essendon_8": "essendon"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "home team score_5": [0], "2_6": [0], "home team_7": [1], "essendon_8": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["geelong", "19.20 ( 134 )", "south melbourne", "11.8 ( 74 )", "kardinia park", "15068", "19 april 1969"], ["fitzroy", "14.7 ( 91 )", "st kilda", "19.18 ( 132 )", "princes park", "12240", "19 april 1969"], ["essendon", "12.13 ( 85 )", "hawthorn", "14.14 ( 98 )", "windy hill", "15800", "19 april 1969"], ["collingwood", "19.16 ( 130 )", "melbourne", "9.8 ( 62 )", "victoria park", "18729", "19 april 1969"], ["richmond", "13.28 ( 106 )", "north melbourne", "16.15 ( 111 )", "mcg", "26884", "19 april 1969"], ["footscray", "7.10 ( 52 )", "carlton", "11.15 ( 81 )", "western oval", "20250", "19 april 1969"]], "query": "eq { hop { nth_argmin { all_rows ; home team score ; 2 } ; home team } ; essendon } = true", "question": "among the home teams in the 1969 vfl season , essendon had the 2nd lowest score ."}, {"topic": "orlando pizzolato", "wiki": "https://en.wikipedia.org/wiki/Orlando_Pizzolato", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15399415-1.html.csv", "action": "comparative", "sent": "of the competitions that orlando pizzolato participated in , the one in west germany took place two years before the one in south korea .", "annotation": {"row_1": "3", "row_2": "5", "col": "1", "col_other": "3", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "2 years", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "stuttgart , west germany"], "result": null, "ind": 0, "tointer": "select the rows whose venue record fuzzily matches to stuttgart , west germany .", "tostr": "filter_eq { all_rows ; venue ; stuttgart , west germany }"}, "year"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; venue ; stuttgart , west germany } ; year }", "tointer": "select the rows whose venue record fuzzily matches to stuttgart , west germany . take the year record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "venue", "seoul , south korea"], "result": null, "ind": 1, "tointer": "select the rows whose venue record fuzzily matches to seoul , south korea .", "tostr": "filter_eq { all_rows ; venue ; seoul , south korea }"}, "year"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; venue ; seoul , south korea } ; year }", "tointer": "select the rows whose venue record fuzzily matches to seoul , south korea . take the year record of this row ."}], "result": "-2 years", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; venue ; stuttgart , west germany } ; year } ; hop { filter_eq { all_rows ; venue ; seoul , south korea } ; year } }"}, "-2 years"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; venue ; stuttgart , west germany } ; year } ; hop { filter_eq { all_rows ; venue ; seoul , south korea } ; year } } ; -2 years } = true", "tointer": "select the rows whose venue record fuzzily matches to stuttgart , west germany . take the year record of this row . select the rows whose venue record fuzzily matches to seoul , south korea . take the year record of this row . the second record is 2 years larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; venue ; stuttgart , west germany } ; year } ; hop { filter_eq { all_rows ; venue ; seoul , south korea } ; year } } ; -2 years } = true", "interpret": "select the rows whose venue record fuzzily matches to stuttgart , west germany . take the year record of this row . select the rows whose venue record fuzzily matches to seoul , south korea . take the year record of this row . the second record is 2 years larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"str_eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "venue_8": 8, "stuttgart , west germany_9": 9, "year_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "venue_12": 12, "seoul , south korea_13": 13, "year_14": 14, "-2 years_15": 15}, "g_ids_features": {"str_eq_5": "str_eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "venue_8": "venue", "stuttgart , west germany_9": "stuttgart , west germany", "year_10": "year", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "venue_12": "venue", "seoul , south korea_13": "seoul , south korea", "year_14": "year", "-2 years_15": "-2 years"}, "g_adj": {"str_eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "venue_8": [0], "stuttgart , west germany_9": [0], "year_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "venue_12": [1], "seoul , south korea_13": [1], "year_14": [3], "-2 years_15": [5]}, "table_header": ["year", "competition", "venue", "position", "notes"], "table_cont": [["1984", "new york city marathon", "new york , united states", "1st", "2:14:53"], ["1985", "new york city marathon", "new york , united states", "1st", "2:11:34"], ["1986", "european championships", "stuttgart , west germany", "2nd", "2:10:57"], ["1987", "world championships", "rome , italy", "7th", "2:14:03"], ["1988", "olympic games", "seoul , south korea", "16th", "2:15:20"], ["1988", "venice marathon", "venice , italy", "1st", "2:15:24"]], "query": "eq { diff { hop { filter_eq { all_rows ; venue ; stuttgart , west germany } ; year } ; hop { filter_eq { all_rows ; venue ; seoul , south korea } ; year } } ; -2 years } = true", "question": "of the competitions that orlando pizzolato participated in , the one in west germany took place two years before the one in south korea ."}, {"topic": "list of leading rugby union test point scorers", "wiki": "https://en.wikipedia.org/wiki/List_of_leading_rugby_union_test_point_scorers", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13255695-3.html.csv", "action": "aggregation", "sent": "the average score of the top five international leading rugby union test point scorers is just over 317 .", "annotation": {"scope": "all", "col": "10", "type": "average", "result": "317.8", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "score"], "result": "317.8", "ind": 0, "tostr": "avg { all_rows ; score }"}, "317.8"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; score } ; 317.8 } = true", "tointer": "the average of the score record of all rows is 317.8 ."}, "logic_str": "round_eq { avg { all_rows ; score } ; 317.8 } = true", "interpret": "the average of the score record of all rows is 317.8 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "score_4": 4, "317.8_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "score_4": "score", "317.8_5": "317.8"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "score_4": [0], "317.8_5": [1]}, "table_header": ["number", "player", "years active", "caps", "tries", "conversions", "penalties", "drop goals", "average score", "score"], "table_cont": [["1", "yuri kushnarev", "2005 -", "56", "7", "51", "84", "0", "6.95", "389"], ["2", "jaco coetzee", "1990 - 1995", "28", "6", "81", "45", "3", "11.96", "335"], ["3", "konstantin rachkov", "1997 - 2011", "44", "10", "51", "36", "10", "7.18", "316"], ["4", "gon\u00e3 \u00a7 alo malheiro", "1998 - 2007", "40", "8", "25", "46", "17", "6.98", "279"], ["5", "esteban roque segovia", "2004 - 2007", "20", "1", "53", "52", "1", "13.5", "270"]], "query": "round_eq { avg { all_rows ; score } ; 317.8 } = true", "question": "the average score of the top five international leading rugby union test point scorers is just over 317 ."}, {"topic": "hot in cleveland ( season 1 )", "wiki": "https://en.wikipedia.org/wiki/Hot_in_Cleveland_%28season_1%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29920800-1.html.csv", "action": "count", "sent": "andy caddif has directed a total of 3 movies .", "annotation": {"scope": "all", "criterion": "equal", "value": "andy cadiff", "result": "3", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "directed by", "andy cadiff"], "result": null, "ind": 0, "tointer": "select the rows whose directed by record fuzzily matches to andy cadiff .", "tostr": "filter_eq { all_rows ; directed by ; andy cadiff }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; directed by ; andy cadiff } }", "tointer": "select the rows whose directed by record fuzzily matches to andy cadiff . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; directed by ; andy cadiff } } ; 3 } = true", "tointer": "select the rows whose directed by record fuzzily matches to andy cadiff . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; directed by ; andy cadiff } } ; 3 } = true", "interpret": "select the rows whose directed by record fuzzily matches to andy cadiff . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "directed by_5": 5, "andy cadiff_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "directed by_5": "directed by", "andy cadiff_6": "andy cadiff", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "directed by_5": [0], "andy cadiff_6": [0], "3_7": [2]}, "table_header": ["no in series", "title", "directed by", "written by", "original air date", "production code", "us viewers ( million )"], "table_cont": [["1", "pilot", "michael lembeck", "suzanne martin", "june 16 , 2010", "101", "4.75"], ["2", "who 's your mama", "andy cadiff", "suzanne martin", "june 23 , 2010", "102", "3.37"], ["3", "birthdates", "andy cadiff", "vanessa mccarthy", "june 30 , 2010", "103", "3.07"], ["4", "the sex that got away", "david trainer", "anne flett - giordano & chuck ranberg", "july 7 , 2010", "105", "2.93"], ["5", "good neighbors", "david trainer", "sam johnson & chris marcil", "july 14 , 2010", "106", "2.99"], ["6", "meet the parents", "andy cadiff", "liz feldman", "july 21 , 2010", "104", "2.44"], ["7", "it 's not that complicated", "david trainer", "anne flett - giordano & chuck ranberg", "july 28 , 2010", "107", "2.97"], ["8", "the play 's the thing", "gil junger", "sam johnson & chris marcil", "august 4 , 2010", "108", "2.57"], ["9", "good luck faking the goiter", "gil junger", "suzanne martin", "august 11 , 2010", "109", "2.72"]], "query": "eq { count { filter_eq { all_rows ; directed by ; andy cadiff } } ; 3 } = true", "question": "andy caddif has directed a total of 3 movies ."}, {"topic": "1978 vfl season", "wiki": "https://en.wikipedia.org/wiki/1978_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10887680-13.html.csv", "action": "superlative", "sent": "the windy hill venue drew the highest crowd attendance in the 1978 vfl season .", "annotation": {"scope": "all", "col_superlative": "6", "row_superlative": "4", "value_mentioned": "no", "max_or_min": "max", "other_col": "5", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "crowd"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; crowd }"}, "venue"], "result": "windy hill", "ind": 1, "tostr": "hop { argmax { all_rows ; crowd } ; venue }"}, "windy hill"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; crowd } ; venue } ; windy hill } = true", "tointer": "select the row whose crowd record of all rows is maximum . the venue record of this row is windy hill ."}, "logic_str": "eq { hop { argmax { all_rows ; crowd } ; venue } ; windy hill } = true", "interpret": "select the row whose crowd record of all rows is maximum . the venue record of this row is windy hill .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "crowd_5": 5, "venue_6": 6, "windy hill_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "crowd_5": "crowd", "venue_6": "venue", "windy hill_7": "windy hill"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "crowd_5": [0], "venue_6": [1], "windy hill_7": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["hawthorn", "21.14 ( 140 )", "south melbourne", "18.11 ( 119 )", "princes park", "13583", "1 july 1978"], ["footscray", "33.15 ( 213 )", "st kilda", "16.10 ( 106 )", "western oval", "16300", "1 july 1978"], ["richmond", "21.16 ( 142 )", "north melbourne", "17.15 ( 117 )", "mcg", "27156", "1 july 1978"], ["essendon", "12.26 ( 98 )", "collingwood", "14.21 ( 105 )", "windy hill", "29913", "1 july 1978"], ["geelong", "8.9 ( 57 )", "carlton", "9.13 ( 67 )", "kardinia park", "25185", "1 july 1978"], ["fitzroy", "19.27 ( 141 )", "melbourne", "8.13 ( 61 )", "vfl park", "13933", "1 july 1978"]], "query": "eq { hop { argmax { all_rows ; crowd } ; venue } ; windy hill } = true", "question": "the windy hill venue drew the highest crowd attendance in the 1978 vfl season ."}, {"topic": "club santos laguna", "wiki": "https://en.wikipedia.org/wiki/Club_Santos_Laguna", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1217587-2.html.csv", "action": "comparative", "sent": "jared borgetti played for club santos laguna before rafael figueroa did .", "annotation": {"row_1": "2", "row_2": "8", "col": "2", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "jared borgetti"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to jared borgetti .", "tostr": "filter_eq { all_rows ; player ; jared borgetti }"}, "period"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; jared borgetti } ; period }", "tointer": "select the rows whose player record fuzzily matches to jared borgetti . take the period record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "rafael figueroa"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to rafael figueroa .", "tostr": "filter_eq { all_rows ; player ; rafael figueroa }"}, "period"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; rafael figueroa } ; period }", "tointer": "select the rows whose player record fuzzily matches to rafael figueroa . take the period record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; player ; jared borgetti } ; period } ; hop { filter_eq { all_rows ; player ; rafael figueroa } ; period } } = true", "tointer": "select the rows whose player record fuzzily matches to jared borgetti . take the period record of this row . select the rows whose player record fuzzily matches to rafael figueroa . take the period record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; player ; jared borgetti } ; period } ; hop { filter_eq { all_rows ; player ; rafael figueroa } ; period } } = true", "interpret": "select the rows whose player record fuzzily matches to jared borgetti . take the period record of this row . select the rows whose player record fuzzily matches to rafael figueroa . take the period record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "player_7": 7, "jared borgetti_8": 8, "period_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "player_11": 11, "rafael figueroa_12": 12, "period_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "player_7": "player", "jared borgetti_8": "jared borgetti", "period_9": "period", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "player_11": "player", "rafael figueroa_12": "rafael figueroa", "period_13": "period"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "player_7": [0], "jared borgetti_8": [0], "period_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "player_11": [1], "rafael figueroa_12": [1], "period_13": [3]}, "table_header": ["player", "period", "league", "concacaf", "libertadores", "merconorte", "interliga", "superliga", "matches"], "table_cont": [["rodrigo ruiz", "2000 - 2006 / 2010 - 2011", "294", "12", "8", "8", "7", "0", "329"], ["jared borgetti", "1996 - 2004", "295", "0", "8", "4", "4", "0", "311"], ["oswaldo s\u00e1nchez", "2007 -", "252", "25", "0", "0", "4", "7", "289"], ["juan pablo rodr\u00edguez", "2007 -", "251", "25", "0", "0", "3", "6", "287"], ["iv\u00e1n estrada", "2007 - 2013", "244", "31", "0", "0", "2", "7", "284"], ["carlos cari\u00f1o", "2000 - 2006", "251", "2", "8", "6", "7", "0", "274"], ["h\u00e9ctor altamirano", "1998 - 2005", "237", "4", "8", "8", "7", "0", "264"], ["rafael figueroa", "2005 -", "223", "22", "0", "0", "2", "7", "260"], ["vicente mat\u00edas vuoso", "2003 - 2006 / 2007 - 2010", "226", "7", "8", "0", "10", "6", "257"], ["adri\u00e1n mart\u00ednez", "1998 - 2003 / 2004 - 2005", "223", "4", "8", "8", "3", "0", "246"]], "query": "less { hop { filter_eq { all_rows ; player ; jared borgetti } ; period } ; hop { filter_eq { all_rows ; player ; rafael figueroa } ; period } } = true", "question": "jared borgetti played for club santos laguna before rafael figueroa did ."}, {"topic": "manny ayulo", "wiki": "https://en.wikipedia.org/wiki/Manny_Ayulo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1236164-3.html.csv", "action": "aggregation", "sent": "manny ayulo earned a sum total of 2 points during the six years listed .", "annotation": {"scope": "all", "col": "5", "type": "sum", "result": "2", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "points"], "result": "2", "ind": 0, "tostr": "sum { all_rows ; points }"}, "2"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; points } ; 2 } = true", "tointer": "the sum of the points record of all rows is 2 ."}, "logic_str": "round_eq { sum { all_rows ; points } ; 2 } = true", "interpret": "the sum of the points record of all rows is 2 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "points_4": 4, "2_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "points_4": "points", "2_5": "2"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "points_4": [0], "2_5": [1]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1950", "coast grain", "maserati 8ctf", "offenhauser l4", "0"], ["1951", "jack hinkle", "kurtis kraft 3000", "offenhauser l4", "2"], ["1952", "coast grain", "lesovsky", "offenhauser l4", "0"], ["1953", "peter schmidt", "kuzma indy roadster", "offenhauser l4", "0"], ["1954", "peter schmidt", "kuzma indy roadster", "offenhauser l4", "0"], ["1955", "peter schmidt", "kurtis kraft 500c", "offenhauser l4", "0"]], "query": "round_eq { sum { all_rows ; points } ; 2 } = true", "question": "manny ayulo earned a sum total of 2 points during the six years listed ."}, {"topic": "1992 indycar season", "wiki": "https://en.wikipedia.org/wiki/1992_IndyCar_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10725629-2.html.csv", "action": "majority", "sent": "michael andretti won the most races in the 1992 indycar season , winning 5 races .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "michael andretti", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "pole position", "michael andretti"], "result": true, "ind": 0, "tointer": "for the pole position records of all rows , most of them fuzzily match to michael andretti .", "tostr": "most_eq { all_rows ; pole position ; michael andretti } = true"}, "logic_str": "most_eq { all_rows ; pole position ; michael andretti } = true", "interpret": "for the pole position records of all rows , most of them fuzzily match to michael andretti .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "pole position_3": 3, "michael andretti_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "pole position_3": "pole position", "michael andretti_4": "michael andretti"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "pole position_3": [0], "michael andretti_4": [0]}, "table_header": ["race name", "circuit", "city / location", "date", "pole position", "fastest lap", "winning driver", "winning team", "report"], "table_cont": [["dailkyo indycar grand prix", "surfers paradise street circuit", "surfers paradise , australia", "march 22", "al unser , jr", "emerson fittipaldi", "emerson fittipaldi", "marlboro team penske", "report"], ["valvoline 200", "phoenix international raceway", "phoenix , arizona", "april 5", "michael andretti", "rick mears", "bobby rahal", "rahal - hogan racing", "report"], ["toyota grand prix of long beach", "streets of long beach", "long beach , california", "april 12", "michael andretti", "unknown", "danny sullivan", "galles - kraco racing", "report"], ["76th indianapolis 500", "indianapolis motor speedway", "speedway , indiana", "may 24", "roberto guerrero", "michael andretti", "al unser , jr", "galles - kraco racing", "report"], ["itt automotive grand prix of detroit", "the raceway on belle isle park", "detroit , michigan", "june 7", "michael andretti", "unknown", "bobby rahal", "rahal - hogan racing", "report"], ["budweiser / gijoes 200", "portland international raceway", "portland , oregon", "june 21", "emerson fittipaldi", "unknown", "michael andretti", "newman / haas racing", "report"], ["miller genuine draft 200", "milwaukee mile", "west allis , wisconsin", "june 28", "bobby rahal", "unknown", "michael andretti", "newman / haas racing", "report"], ["new england 200", "new hampshire international speedway", "loudon , new hampshire", "july 5", "bobby rahal", "michael andretti", "bobby rahal", "rahal - hogan racing", "report"], ["molson indy toronto", "exhibition place", "toronto , ontario", "july 19", "bobby rahal", "unknown", "michael andretti", "newman / haas racing", "report"], ["marlboro 500", "michigan international speedway", "brooklyn , michigan", "august 2", "mario andretti", "unknown", "scott goodyear", "walker motorsport", "report"], ["budweiser grand prix of cleveland", "cleveland burke lakefront airport", "cleveland , ohio", "august 9", "emerson fittipaldi", "unknown", "emerson fittipaldi", "marlboro team penske", "report"], ["texaco / havoline 200", "road america", "elkhart lake , wisconsin", "august 23", "paul tracy", "emerson fittipaldi", "emerson fittipaldi", "marlboro team penske", "report"], ["molson indy vancouver", "streets of vancouver", "vancouver , british columbia", "august 30", "michael andretti", "emerson fittipaldi", "michael andretti", "newman / haas racing", "report"], ["pioneer electronics 200", "mid - ohio sports car course", "lexington , ohio", "september 13", "michael andretti", "unknown", "emerson fittipaldi", "marlboro team penske", "report"], ["marlboro challenge", "nazareth speedway", "nazareth , pennsylvania", "october 3", "michael andretti", "unknown", "emerson fittipaldi", "marlboro team penske", "report"], ["bosch spark plug grand prix", "nazareth speedway", "nazareth , pennsylvania", "october 4", "michael andretti", "bobby rahal", "bobby rahal", "rahal - hogan racing", "report"], ["toyota monterey grand prix", "mazda raceway laguna seca", "monterey , california", "october 18", "michael andretti", "unknown", "michael andretti", "newman / haas racing", "report"]], "query": "most_eq { all_rows ; pole position ; michael andretti } = true", "question": "michael andretti won the most races in the 1992 indycar season , winning 5 races ."}, {"topic": "1988 senior pga tour", "wiki": "https://en.wikipedia.org/wiki/1988_Senior_PGA_Tour", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11622562-3.html.csv", "action": "ordinal", "sent": "bob charles is the number one golf player in 1988 .", "annotation": {"row": "1", "col": "1", "order": "1", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "rank", "1"], "result": "1", "ind": 0, "tostr": "nth_min { all_rows ; rank ; 1 }", "tointer": "the 1st minimum rank record of all rows is 1 ."}, "1"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; rank ; 1 } ; 1 }", "tointer": "the 1st minimum rank record of all rows is 1 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "rank", "1"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; rank ; 1 }"}, "player"], "result": "bob charles", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; rank ; 1 } ; player }"}, "bob charles"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; rank ; 1 } ; player } ; bob charles }", "tointer": "the player record of the row with 1st minimum rank record is bob charles ."}], "result": true, "ind": 5, "tostr": "and { eq { nth_min { all_rows ; rank ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; rank ; 1 } ; player } ; bob charles } } = true", "tointer": "the 1st minimum rank record of all rows is 1 . the player record of the row with 1st minimum rank record is bob charles ."}, "logic_str": "and { eq { nth_min { all_rows ; rank ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; rank ; 1 } ; player } ; bob charles } } = true", "interpret": "the 1st minimum rank record of all rows is 1 . the player record of the row with 1st minimum rank record is bob charles .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "nth_min_0": 0, "all_rows_7": 7, "rank_8": 8, "1_9": 9, "1_10": 10, "str_eq_4": 4, "str_hop_3": 3, "nth_argmin_2": 2, "all_rows_11": 11, "rank_12": 12, "1_13": 13, "player_14": 14, "bob charles_15": 15}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "nth_min_0": "nth_min", "all_rows_7": "all_rows", "rank_8": "rank", "1_9": "1", "1_10": "1", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "nth_argmin_2": "nth_argmin", "all_rows_11": "all_rows", "rank_12": "rank", "1_13": "1", "player_14": "player", "bob charles_15": "bob charles"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "nth_min_0": [1], "all_rows_7": [0], "rank_8": [0], "1_9": [0], "1_10": [1], "str_eq_4": [5], "str_hop_3": [4], "nth_argmin_2": [3], "all_rows_11": [2], "rank_12": [2], "1_13": [2], "player_14": [3], "bob charles_15": [4]}, "table_header": ["rank", "player", "country", "earnings", "events", "wins"], "table_cont": [["1", "bob charles", "new zealand", "533929", "28", "5"], ["2", "gary player", "south africa", "435914", "20", "5"], ["3", "dave hill", "united states", "415594", "27", "3"], ["4", "orville moody", "united states", "411859", "31", "3"], ["5", "harold henning", "south africa", "366230", "31", "1"]], "query": "and { eq { nth_min { all_rows ; rank ; 1 } ; 1 } ; eq { hop { nth_argmin { all_rows ; rank ; 1 } ; player } ; bob charles } } = true", "question": "bob charles is the number one golf player in 1988 ."}, {"topic": "mauri rose", "wiki": "https://en.wikipedia.org/wiki/Mauri_Rose", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1236138-1.html.csv", "action": "aggregation", "sent": "the average rank that mauri rose has had is 12.56 .", "annotation": {"scope": "all", "col": "3", "type": "average", "result": "12.56", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "rank"], "result": "12.56", "ind": 0, "tostr": "avg { all_rows ; rank }"}, "12.56"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; rank } ; 12.56 } = true", "tointer": "the average of the rank record of all rows is 12.56 ."}, "logic_str": "round_eq { avg { all_rows ; rank } ; 12.56 } = true", "interpret": "the average of the rank record of all rows is 12.56 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "rank_4": 4, "12.56_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "rank_4": "rank", "12.56_5": "12.56"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "rank_4": [0], "12.56_5": [1]}, "table_header": ["start", "qual", "rank", "finish", "laps"], "table_cont": [["42", "117.649", "6", "35", "48"], ["4", "116.044", "7", "2", "200"], ["10", "116.470", "9", "20", "103"], ["30", "113.890", "21", "4", "200"], ["8", "118.540", "19", "18", "127"], ["9", "119.796", "20", "13", "165"], ["8", "124.896", "13", "8", "200"], ["3", "125.624", "3", "3", "200"], ["1", "128.691", "1", "26", "60"], ["17", "121.106", "25", "1", "128"], ["9", "124.065", "10", "23", "40"], ["3", "120.040", "20", "1", "200"], ["3", "129.129", "4", "1", "200"], ["10", "127.759", "19", "13", "192"], ["3", "132.319", "6", "3", "137"], ["5", "133.422", "18", "14", "126"]], "query": "round_eq { avg { all_rows ; rank } ; 12.56 } = true", "question": "the average rank that mauri rose has had is 12.56 ."}, {"topic": "piers courage", "wiki": "https://en.wikipedia.org/wiki/Piers_Courage", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1226532-1.html.csv", "action": "majority", "sent": "in the complete formula one world championship results for piers courage , he did not receive any points in most of the races .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "points", "0"], "result": true, "ind": 0, "tointer": "for the points records of all rows , most of them are equal to 0 .", "tostr": "most_eq { all_rows ; points ; 0 } = true"}, "logic_str": "most_eq { all_rows ; points ; 0 } = true", "interpret": "for the points records of all rows , most of them are equal to 0 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "points_3": 3, "0_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "points_3": "points", "0_4": "0"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "points_3": [0], "0_4": [0]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1966", "ron harris / team lotus", "lotus 44 f2", "cosworth straight - 4", "0"], ["1967", "reg parnell racing", "lotus 25", "brm", "0"], ["1967", "reg parnell racing", "brm p261", "brm", "0"], ["1968", "reg parnell racing", "brm p126", "brm", "4"], ["1969", "frank williams racing cars", "brabham bt26a", "ford", "16"], ["1970", "frank williams racing cars", "de tomaso 505", "ford", "0"]], "query": "most_eq { all_rows ; points ; 0 } = true", "question": "in the complete formula one world championship results for piers courage , he did not receive any points in most of the races ."}, {"topic": "list of the busiest airports in brazil", "wiki": "https://en.wikipedia.org/wiki/List_of_the_busiest_airports_in_Brazil", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15494883-14.html.csv", "action": "ordinal", "sent": "the airport in rio de janeiro receives the third highest number of passengers .", "annotation": {"row": "3", "col": "3", "order": "3", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "total passengers", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; total passengers ; 3 }"}, "rank"], "result": "3", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; total passengers ; 3 } ; rank }"}, "3"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; total passengers ; 3 } ; rank } ; 3 } = true", "tointer": "select the row whose total passengers record of all rows is 3rd maximum . the rank record of this row is 3 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; total passengers ; 3 } ; rank } ; 3 } = true", "interpret": "select the row whose total passengers record of all rows is 3rd maximum . the rank record of this row is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "total passengers_5": 5, "3_6": 6, "rank_7": 7, "3_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "total passengers_5": "total passengers", "3_6": "3", "rank_7": "rank", "3_8": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "total passengers_5": [0], "3_6": [0], "rank_7": [1], "3_8": [2]}, "table_header": ["rank", "location", "total passengers", "annual change", "capacity in use"], "table_cont": [["1", "s\u00e3o paulo", "20400304", "8.5 %", "123.6 %"], ["2", "s\u00e3o paulo", "13672301", "10.4 %", "113.9 %"], ["3", "rio de janeiro", "10717120", "3.5 %", "71.4 %"], ["4", "bras\u00edlia", "10443393", "6.1 %", "141.1 %"], ["5", "salvador", "6042307", "1.6 %", "100.7 %"], ["6", "belo horizonte", "5189528", "19.6 %", "103.8 %"], ["7", "porto alegre", "4931464", "10.9 %", "80.8 %"], ["8", "recife", "4679457", "11.7 %", "93.6 %"], ["9", "curitiba", "4281354", "9.6 %", "122.3 %"], ["10", "rio de janeiro", "3628766", "12.9 %", "42.7 %"], ["11", "fortaleza", "3465791", "4.1 %", "115.5 %"], ["12", "bel\u00e9m", "2153508", "1.6 %", "79.8 %"], ["13", "florian\u00f3polis", "2080342", "6.8 %", "189.1 %"], ["14", "manaus", "2021668", "2.0 %", "113.4 %"], ["15", "vit\u00f3ria", "1988447", "5.0 %", "355.1 %"]], "query": "eq { hop { nth_argmax { all_rows ; total passengers ; 3 } ; rank } ; 3 } = true", "question": "the airport in rio de janeiro receives the third highest number of passengers ."}, {"topic": "blouberg local municipality", "wiki": "https://en.wikipedia.org/wiki/Blouberg_Local_Municipality", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1894556-1.html.csv", "action": "comparative", "sent": "in blouberg , petersburg has a higher population than alldays .", "annotation": {"row_1": "9", "row_2": "1", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "place", "pietersburg"], "result": null, "ind": 0, "tointer": "select the rows whose place record fuzzily matches to pietersburg .", "tostr": "filter_eq { all_rows ; place ; pietersburg }"}, "population"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; place ; pietersburg } ; population }", "tointer": "select the rows whose place record fuzzily matches to pietersburg . take the population record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "place", "alldays"], "result": null, "ind": 1, "tointer": "select the rows whose place record fuzzily matches to alldays .", "tostr": "filter_eq { all_rows ; place ; alldays }"}, "population"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; place ; alldays } ; population }", "tointer": "select the rows whose place record fuzzily matches to alldays . take the population record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; place ; pietersburg } ; population } ; hop { filter_eq { all_rows ; place ; alldays } ; population } } = true", "tointer": "select the rows whose place record fuzzily matches to pietersburg . take the population record of this row . select the rows whose place record fuzzily matches to alldays . take the population record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; place ; pietersburg } ; population } ; hop { filter_eq { all_rows ; place ; alldays } ; population } } = true", "interpret": "select the rows whose place record fuzzily matches to pietersburg . take the population record of this row . select the rows whose place record fuzzily matches to alldays . take the population record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "place_7": 7, "pietersburg_8": 8, "population_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "place_11": 11, "alldays_12": 12, "population_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "place_7": "place", "pietersburg_8": "pietersburg", "population_9": "population", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "place_11": "place", "alldays_12": "alldays", "population_13": "population"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "place_7": [0], "pietersburg_8": [0], "population_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "place_11": [1], "alldays_12": [1], "population_13": [3]}, "table_header": ["place", "code", "area ( km 2 )", "population", "most spoken language"], "table_cont": [["alldays", "90901", "11.75", "385", "northern sotho"], ["bahanawa", "90902", "390.17", "19068", "northern sotho"], ["bahanawa - ba - kibi", "90903", "163.78", "7763", "northern sotho"], ["bochum part 1", "90912", "4.33", "8501", "northern sotho"], ["bochum part 2", "90905", "182.33", "15911", "northern sotho"], ["dichoeng", "90906", "58.29", "17347", "northern sotho"], ["manthata", "90907", "1335.47", "72175", "northern sotho"], ["matlala", "90908", "180.83", "8697", "northern sotho"], ["pietersburg", "90909", "1.33", "3818", "northern sotho"], ["ramutla", "90910", "7.81", "1047", "northern sotho"], ["seshego", "90911", "6.00", "1058", "northern sotho"], ["remainder of the municipality", "90904", "2198.72", "5539", "northern sotho"]], "query": "greater { hop { filter_eq { all_rows ; place ; pietersburg } ; population } ; hop { filter_eq { all_rows ; place ; alldays } ; population } } = true", "question": "in blouberg , petersburg has a higher population than alldays ."}, {"topic": "atlanta silverbacks", "wiki": "https://en.wikipedia.org/wiki/Atlanta_Silverbacks", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1032084-2.html.csv", "action": "count", "sent": "the atlanta silverbacks were on hiatus for a total of two years .", "annotation": {"scope": "all", "criterion": "equal", "value": "on hiatus", "result": "2", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "division", "on hiatus"], "result": null, "ind": 0, "tointer": "select the rows whose division record fuzzily matches to on hiatus .", "tostr": "filter_eq { all_rows ; division ; on hiatus }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; division ; on hiatus } }", "tointer": "select the rows whose division record fuzzily matches to on hiatus . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; division ; on hiatus } } ; 2 } = true", "tointer": "select the rows whose division record fuzzily matches to on hiatus . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; division ; on hiatus } } ; 2 } = true", "interpret": "select the rows whose division record fuzzily matches to on hiatus . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "division_5": 5, "on hiatus_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "division_5": "division", "on hiatus_6": "on hiatus", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "division_5": [0], "on hiatus_6": [0], "2_7": [2]}, "table_header": ["year", "division", "league", "reg season", "playoffs", "open cup", "avg attendance"], "table_cont": [["1995", "2", "a - league", "4th", "finalist", "2nd round", "2632"], ["1996", "2", "a - league", "7th", "did not qualify", "did not qualify", "4315"], ["1997", "2", "usisl a - league", "7th , central", "did not qualify", "did not qualify", "2406"], ["1998", "2", "usisl a - league", "6th , atlantic", "did not qualify", "did not qualify", "923"], ["1999", "2", "usl a - league", "5th , atlantic", "did not qualify", "did not qualify", "2703"], ["2000", "2", "usl a - league", "6th , atlantic", "did not qualify", "did not qualify", "3327"], ["2001", "2", "usl a - league", "5th , central", "did not qualify", "did not qualify", "1094"], ["2002", "2", "usl a - league", "3rd , southeast", "1st round", "3rd round", "1006"], ["2003", "2", "usl a - league", "5th , southeast", "did not qualify", "3rd round", "1200"], ["2004", "2", "usl a - league", "5th , eastern", "did not qualify", "4th round", "1662"], ["2005", "2", "usl first division", "8th", "did not qualify", "3rd round", "1724"], ["2006", "2", "usl first division", "8th", "did not qualify", "3rd round", "2298"], ["2007", "2", "usl first division", "4th", "finalist", "3rd round", "2372"], ["2008", "2", "usl first division", "9th", "did not qualify", "2nd round", "2281"], ["2009", "on hiatus", "on hiatus", "on hiatus", "on hiatus", "on hiatus", "on hiatus"], ["2010", "on hiatus", "on hiatus", "on hiatus", "on hiatus", "on hiatus", "on hiatus"], ["2011", "2", "nasl", "8th", "did not qualify", "denied entry", "2866"], ["2012", "2", "nasl", "7th", "did not qualify", "3rd round", "4505"], ["2013", "2", "nasl", "1st - spring 7th - fall", "hosting nasl soccer bowl", "3rd round", "5039"]], "query": "eq { count { filter_eq { all_rows ; division ; on hiatus } } ; 2 } = true", "question": "the atlanta silverbacks were on hiatus for a total of two years ."}, {"topic": "2001 fivb volleyball world league", "wiki": "https://en.wikipedia.org/wiki/2001_FIVB_Volleyball_World_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16013858-13.html.csv", "action": "ordinal", "sent": "the 2nd match of the 2001 men 's flvb volleyball world league international tournament took place on june 25th of that year with a final score of 2 sets to 3 .", "annotation": {"scope": "all", "row": "2", "col": "1", "order": "2", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "yes", "subset": null}, "logic": {"func": "and", "args": [{"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "date", "2"], "result": "jun 25", "ind": 0, "tostr": "nth_min { all_rows ; date ; 2 }", "tointer": "the 2nd minimum date record of all rows is jun 25 ."}, "jun 25"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; date ; 2 } ; jun 25 }", "tointer": "the 2nd minimum date record of all rows is jun 25 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "date", "2"], "result": null, "ind": 2, "tostr": "nth_argmin { all_rows ; date ; 2 }"}, "score"], "result": "2 - 3", "ind": 3, "tostr": "hop { nth_argmin { all_rows ; date ; 2 } ; score }"}, "2 - 3"], "result": true, "ind": 4, "tostr": "eq { hop { nth_argmin { all_rows ; date ; 2 } ; score } ; 2 - 3 }", "tointer": "the score record of the row with 2nd minimum date record is 2 - 3 ."}], "result": true, "ind": 5, "tostr": "and { eq { nth_min { all_rows ; date ; 2 } ; jun 25 } ; eq { hop { nth_argmin { all_rows ; date ; 2 } ; score } ; 2 - 3 } } = true", "tointer": "the 2nd minimum date record of all rows is jun 25 . the score record of the row with 2nd minimum date record is 2 - 3 ."}, "logic_str": "and { eq { nth_min { all_rows ; date ; 2 } ; jun 25 } ; eq { hop { nth_argmin { all_rows ; date ; 2 } ; score } ; 2 - 3 } } = true", "interpret": "the 2nd minimum date record of all rows is jun 25 . the score record of the row with 2nd minimum date record is 2 - 3 .", "num_func": 6, "nid": 6, "g_ids": {"and_5": 5, "result_6": 6, "eq_1": 1, "nth_min_0": 0, "all_rows_7": 7, "date_8": 8, "2_9": 9, "jun 25_10": 10, "str_eq_4": 4, "str_hop_3": 3, "nth_argmin_2": 2, "all_rows_11": 11, "date_12": 12, "2_13": 13, "score_14": 14, "2 - 3_15": 15}, "g_ids_features": {"and_5": "and", "result_6": "true", "eq_1": "eq", "nth_min_0": "nth_min", "all_rows_7": "all_rows", "date_8": "date", "2_9": "2", "jun 25_10": "jun 25", "str_eq_4": "str_eq", "str_hop_3": "str_hop", "nth_argmin_2": "nth_argmin", "all_rows_11": "all_rows", "date_12": "date", "2_13": "2", "score_14": "score", "2 - 3_15": "2 - 3"}, "g_adj": {"and_5": [6], "result_6": [], "eq_1": [5], "nth_min_0": [1], "all_rows_7": [0], "date_8": [0], "2_9": [0], "jun 25_10": [1], "str_eq_4": [5], "str_hop_3": [4], "nth_argmin_2": [3], "all_rows_11": [2], "date_12": [2], "2_13": [2], "score_14": [3], "2 - 3_15": [4]}, "table_header": ["date", "score", "set 1", "set 2", "set 3", "set 4", "set 5", "total"], "table_cont": [["jun 25", "1 - 3", "20 - 25", "18 - 25", "26 - 24", "25 - 27", "na", "89 - 101"], ["jun 25", "2 - 3", "26 - 24", "26 - 28", "24 - 26", "25 - 18", "13 - 15", "114 - 111"], ["jun 26", "3 - 1", "21 - 25", "25 - 16", "25 - 21", "25 - 19", "na", "96 - 81"], ["jun 26", "2 - 3", "27 - 29", "25 - 18", "21 - 25", "25 - 22", "13 - 15", "111 - 109"], ["jun 27", "3 - 1", "25 - 23", "25 - 19", "15 - 25", "25 - 18", "na", "90 - 85"], ["jun 27", "0 - 3", "21 - 25", "17 - 25", "22 - 25", "na", "na", "60 - 75"]], "query": "and { eq { nth_min { all_rows ; date ; 2 } ; jun 25 } ; eq { hop { nth_argmin { all_rows ; date ; 2 } ; score } ; 2 - 3 } } = true", "question": "the 2nd match of the 2001 men 's flvb volleyball world league international tournament took place on june 25th of that year with a final score of 2 sets to 3 ."}, {"topic": "list of superlative academy award winners and nominees", "wiki": "https://en.wikipedia.org/wiki/List_of_superlative_Academy_Award_winners_and_nominees", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10966872-5.html.csv", "action": "comparative", "sent": "marlee matlin won an award before jessica tandy won her award .", "annotation": {"row_1": "5", "row_2": "3", "col": "4", "col_other": "2", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "actress", "marlee matlin"], "result": null, "ind": 0, "tointer": "select the rows whose actress record fuzzily matches to marlee matlin .", "tostr": "filter_eq { all_rows ; actress ; marlee matlin }"}, "year"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; actress ; marlee matlin } ; year }", "tointer": "select the rows whose actress record fuzzily matches to marlee matlin . take the year record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "actress", "jessica tandy"], "result": null, "ind": 1, "tointer": "select the rows whose actress record fuzzily matches to jessica tandy .", "tostr": "filter_eq { all_rows ; actress ; jessica tandy }"}, "year"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; actress ; jessica tandy } ; year }", "tointer": "select the rows whose actress record fuzzily matches to jessica tandy . take the year record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; actress ; marlee matlin } ; year } ; hop { filter_eq { all_rows ; actress ; jessica tandy } ; year } } = true", "tointer": "select the rows whose actress record fuzzily matches to marlee matlin . take the year record of this row . select the rows whose actress record fuzzily matches to jessica tandy . take the year record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; actress ; marlee matlin } ; year } ; hop { filter_eq { all_rows ; actress ; jessica tandy } ; year } } = true", "interpret": "select the rows whose actress record fuzzily matches to marlee matlin . take the year record of this row . select the rows whose actress record fuzzily matches to jessica tandy . take the year record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "actress_7": 7, "marlee matlin_8": 8, "year_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "actress_11": 11, "jessica tandy_12": 12, "year_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "actress_7": "actress", "marlee matlin_8": "marlee matlin", "year_9": "year", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "actress_11": "actress", "jessica tandy_12": "jessica tandy", "year_13": "year"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "actress_7": [0], "marlee matlin_8": [0], "year_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "actress_11": [1], "jessica tandy_12": [1], "year_13": [3]}, "table_header": ["superlative", "actress", "record set", "year", "notes"], "table_cont": [["most awards", "katharine hepburn", "4 awards", "1981", "awards resulted from 12 nominations"], ["most nominations", "meryl streep", "14 nominations", "2011", "nominations resulted in 2 awards"], ["oldest winner", "jessica tandy", "80 years old", "1989", "driving miss daisy"], ["oldest nominee", "emmanuelle riva", "85 years old", "2012", "amour"], ["youngest winner", "marlee matlin", "21 years old", "1986", "children of a lesser god"], ["youngest nominee", "quvenzhan\u00e3 wallis", "9 years old", "2012", "beasts of the southern wild"]], "query": "less { hop { filter_eq { all_rows ; actress ; marlee matlin } ; year } ; hop { filter_eq { all_rows ; actress ; jessica tandy } ; year } } = true", "question": "marlee matlin won an award before jessica tandy won her award ."}, {"topic": "parken stadium", "wiki": "https://en.wikipedia.org/wiki/Parken_Stadium", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1664918-1.html.csv", "action": "count", "sent": "there have been four times in which the attendance at parken stadium has exceeded 40,000 .", "annotation": {"scope": "all", "criterion": "greater_than", "value": "40000", "result": "4", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_greater", "args": ["all_rows", "attendance", "40000"], "result": null, "ind": 0, "tointer": "select the rows whose attendance record is greater than 40000 .", "tostr": "filter_greater { all_rows ; attendance ; 40000 }"}], "result": "4", "ind": 1, "tostr": "count { filter_greater { all_rows ; attendance ; 40000 } }", "tointer": "select the rows whose attendance record is greater than 40000 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_greater { all_rows ; attendance ; 40000 } } ; 4 } = true", "tointer": "select the rows whose attendance record is greater than 40000 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_greater { all_rows ; attendance ; 40000 } } ; 4 } = true", "interpret": "select the rows whose attendance record is greater than 40000 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_greater_0": 0, "all_rows_4": 4, "attendance_5": 5, "40000_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_greater_0": "filter_greater", "all_rows_4": "all_rows", "attendance_5": "attendance", "40000_6": "40000", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_greater_0": [1], "all_rows_4": [0], "attendance_5": [0], "40000_6": [0], "4_7": [2]}, "table_header": ["date", "team 1", "res", "team 2", "competition", "attendance"], "table_cont": [["9 september 1992", "denmark", "1 - 2", "germany", "friendly match", "40500"], ["4 may 1994", "arsenal", "1 - 0", "parma", "1994 european cup winners ' cup final", "33765"], ["17 may 2000", "galatasaray", "0 - 0 ( p 4 - 1 )", "arsenal", "2000 uefa cup final", "38919"], ["8 october 2005", "denmark", "1 - 0", "greece", "2006 fifa world cup qualifying group 2", "42099"], ["6 april 2006", "fc copenhagen", "1 - 0", "lillestr\u00f8m", "2006 royal league final", "13617"], ["30 april 2006", "fc copenhagen", "0 - 0", "br\u00f8ndby", "danish superliga 2005 - 06", "41201"], ["2 june 2007", "denmark", "0 - 3", "sweden", "uefa euro 2008 qualifying group f", "42083"], ["21 may 2011", "ag k\u00f8benhavn", "30 - 21", "bjerringbro - silkeborg", "2011 danish handball league final", "36651"], ["20 april 2012", "ag k\u00f8benhavn", "29 - 23", "fc barcelona", "2011 - 12 ehf champions league quarterfinal", "21293"]], "query": "eq { count { filter_greater { all_rows ; attendance ; 40000 } } ; 4 } = true", "question": "there have been four times in which the attendance at parken stadium has exceeded 40,000 ."}, {"topic": "northland conference ( ihsaa )", "wiki": "https://en.wikipedia.org/wiki/Northland_Conference_%28IHSAA%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18710130-1.html.csv", "action": "ordinal", "sent": "the elkhart christian school was the latest to join the northland conference ( ihsaa ) .", "annotation": {"row": "2", "col": "5", "order": "1", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "year joined", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; year joined ; 1 }"}, "school"], "result": "elkhart christian", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; year joined ; 1 } ; school }"}, "elkhart christian"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; year joined ; 1 } ; school } ; elkhart christian } = true", "tointer": "select the row whose year joined record of all rows is 1st maximum . the school record of this row is elkhart christian ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; year joined ; 1 } ; school } ; elkhart christian } = true", "interpret": "select the row whose year joined record of all rows is 1st maximum . the school record of this row is elkhart christian .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "year joined_5": 5, "1_6": 6, "school_7": 7, "elkhart christian_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "year joined_5": "year joined", "1_6": "1", "school_7": "school", "elkhart christian_8": "elkhart christian"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "year joined_5": [0], "1_6": [0], "school_7": [1], "elkhart christian_8": [2]}, "table_header": ["school", "location", "mascot", "county", "year joined", "previous conference", "year left", "conference joined"], "table_cont": [["argos", "argos , in", "dragons", "50 marshall", "1998", "independent", "2008", "independent"], ["elkhart christian", "elkhart , in", "eagles", "20 elkhart", "2004", "new ihsaa school", "2008", "independent"], ["marquette catholic", "michigan city", "blazers", "46 laporte", "1998", "independent", "2007", "greater south shore"], ["oregon - davis", "hamlet , in", "bobcats", "75 starke", "1998", "independent", "2008", "independent"], ["river forest", "lake station", "ingots", "45 lake", "1998", "northwest hoosier conference", "2007", "greater south shore"], ["south central ( union mills )", "union mills", "satellites", "46 la porte", "1998", "independent", "2003", "porter county"], ["westville", "westville , in", "blackhawks", "46 la porte", "1998", "porter county", "2008", "independent"]], "query": "eq { hop { nth_argmax { all_rows ; year joined ; 1 } ; school } ; elkhart christian } = true", "question": "the elkhart christian school was the latest to join the northland conference ( ihsaa ) ."}, {"topic": "politics of khuzestan province", "wiki": "https://en.wikipedia.org/wiki/Politics_of_Khuzestan_Province", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1827900-1.html.csv", "action": "ordinal", "sent": "among the candidates for the 2005 iranian presidential election , akbar hashemi rafsanjani got the 2nd highest percentage of votes in the khuzestan province .", "annotation": {"row": "1", "col": "3", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "% of votes khuzestan", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; % of votes khuzestan ; 2 }"}, "candidates"], "result": "akbar hashemi rafsanjani", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; % of votes khuzestan ; 2 } ; candidates }"}, "akbar hashemi rafsanjani"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; % of votes khuzestan ; 2 } ; candidates } ; akbar hashemi rafsanjani } = true", "tointer": "select the row whose % of votes khuzestan record of all rows is 2nd maximum . the candidates record of this row is akbar hashemi rafsanjani ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; % of votes khuzestan ; 2 } ; candidates } ; akbar hashemi rafsanjani } = true", "interpret": "select the row whose % of votes khuzestan record of all rows is 2nd maximum . the candidates record of this row is akbar hashemi rafsanjani .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "% of votes khuzestan_5": 5, "2_6": 6, "candidates_7": 7, "akbar hashemi rafsanjani_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "% of votes khuzestan_5": "% of votes khuzestan", "2_6": "2", "candidates_7": "candidates", "akbar hashemi rafsanjani_8": "akbar hashemi rafsanjani"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "% of votes khuzestan_5": [0], "2_6": [0], "candidates_7": [1], "akbar hashemi rafsanjani_8": [2]}, "table_header": ["candidates", "votes khuzestan", "% of votes khuzestan", "votes nationally", "% of votes nationally"], "table_cont": [["akbar hashemi rafsanjani", "319883", "20.50", "6211937", "21.13"], ["mahmoud ahmadinejad", "224427", "14.40", "5711696", "19.43"], ["mehdi karroubi", "539158", "34.50", "5070114", "17.24"], ["mostafa moeen", "148375", "9.50", "4095827", "13.93"], ["mohammad bagher ghalibaf", "148207", "9.50", "4083951", "13.89"], ["ali larijani", "58554", "3.70", "1713810", "5.83"]], "query": "eq { hop { nth_argmax { all_rows ; % of votes khuzestan ; 2 } ; candidates } ; akbar hashemi rafsanjani } = true", "question": "among the candidates for the 2005 iranian presidential election , akbar hashemi rafsanjani got the 2nd highest percentage of votes in the khuzestan province ."}, {"topic": "asian junior volleyball championship", "wiki": "https://en.wikipedia.org/wiki/Asian_Junior_Volleyball_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16744814-5.html.csv", "action": "aggregation", "sent": "there were a total of 16 gold rankings at the asian junior volleyball championship .", "annotation": {"scope": "all", "col": "2", "type": "sum", "result": "16", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "gold"], "result": "16", "ind": 0, "tostr": "sum { all_rows ; gold }"}, "16"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; gold } ; 16 } = true", "tointer": "the sum of the gold record of all rows is 16 ."}, "logic_str": "round_eq { sum { all_rows ; gold } ; 16 } = true", "interpret": "the sum of the gold record of all rows is 16 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "gold_4": 4, "16_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "gold_4": "gold", "16_5": "16"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "gold_4": [0], "16_5": [1]}, "table_header": ["rank", "gold", "silver", "bronze", "total"], "table_cont": [["1", "10", "3", "2", "15"], ["2", "5", "6", "3", "14"], ["3", "1", "4", "7", "12"], ["4", "0", "2", "3", "5"], ["5", "0", "1", "0", "1"], ["6", "0", "0", "1", "1"], ["total", "16", "16", "16", "48"]], "query": "round_eq { sum { all_rows ; gold } ; 16 } = true", "question": "there were a total of 16 gold rankings at the asian junior volleyball championship ."}, {"topic": "outline of hungary", "wiki": "https://en.wikipedia.org/wiki/Outline_of_Hungary", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16278825-1.html.csv", "action": "comparative", "sent": "among the counties of hungary veszpr\u00e9m has a larger area compared to tolna .", "annotation": {"row_1": "18", "row_2": "16", "col": "3", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name of county", "veszpr\u00e9m"], "result": null, "ind": 0, "tointer": "select the rows whose name of county record fuzzily matches to veszpr\u00e9m .", "tostr": "filter_eq { all_rows ; name of county ; veszpr\u00e9m }"}, "area ( km square )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name of county ; veszpr\u00e9m } ; area ( km square ) }", "tointer": "select the rows whose name of county record fuzzily matches to veszpr\u00e9m . take the area ( km square ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name of county", "tolna"], "result": null, "ind": 1, "tointer": "select the rows whose name of county record fuzzily matches to tolna .", "tostr": "filter_eq { all_rows ; name of county ; tolna }"}, "area ( km square )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name of county ; tolna } ; area ( km square ) }", "tointer": "select the rows whose name of county record fuzzily matches to tolna . take the area ( km square ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; name of county ; veszpr\u00e9m } ; area ( km square ) } ; hop { filter_eq { all_rows ; name of county ; tolna } ; area ( km square ) } } = true", "tointer": "select the rows whose name of county record fuzzily matches to veszpr\u00e9m . take the area ( km square ) record of this row . select the rows whose name of county record fuzzily matches to tolna . take the area ( km square ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; name of county ; veszpr\u00e9m } ; area ( km square ) } ; hop { filter_eq { all_rows ; name of county ; tolna } ; area ( km square ) } } = true", "interpret": "select the rows whose name of county record fuzzily matches to veszpr\u00e9m . take the area ( km square ) record of this row . select the rows whose name of county record fuzzily matches to tolna . take the area ( km square ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name of county_7": 7, "veszpr\u00e9m_8": 8, "area (km square)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name of county_11": 11, "tolna_12": 12, "area (km square)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name of county_7": "name of county", "veszpr\u00e9m_8": "veszpr\u00e9m", "area (km square)_9": "area ( km square )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name of county_11": "name of county", "tolna_12": "tolna", "area (km square)_13": "area ( km square )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name of county_7": [0], "veszpr\u00e9m_8": [0], "area (km square)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name of county_11": [1], "tolna_12": [1], "area (km square)_13": [3]}, "table_header": ["name of county", "county seat", "area ( km square )", "population", "population density", "towns / villages"], "table_cont": [["b\u00e1cs - kiskun", "kecskem\u00e9t", "8445", "541584", "64", "119"], ["baranya", "p\u00e9cs", "4430", "402260", "91", "301"], ["b\u00e9k\u00e9s", "b\u00e9k\u00e9scsaba", "5631", "392845", "70", "75"], ["borsod - aba\u00faj - zempl\u00e9n", "miskolc", "7247", "739143", "102", "355"], ["csongr\u00e1d", "szeged", "4263", "425785", "100", "60"], ["fej\u00e9r", "sz\u00e9kesfeh\u00e9rv\u00e1r", "4359", "428579", "98", "108"], ["gy\u0151r - moson - sopron", "gy\u0151r", "4208", "440138", "105", "182"], ["hajd\u00fa - bihar", "debrecen", "6211", "550265", "89", "82"], ["heves", "eger", "3637", "323769", "89", "119"], ["j\u00e1sz - nagykun - szolnok", "szolnok", "5582", "413174", "74", "75"], ["kom\u00e1rom - esztergom", "tatab\u00e1nya", "2265", "315886", "139", "76"], ["n\u00f3gr\u00e1d", "salg\u00f3tarj\u00e1n", "2546", "218218", "86", "129"], ["pest", "budapest", "6393", "1124395", "176", "186"], ["somogy", "kaposv\u00e1r", "6036", "334065", "55", "244"], ["szabolcs - szatm\u00e1r - bereg", "ny\u00edregyh\u00e1za", "5936", "583564", "98", "228"], ["tolna", "szeksz\u00e1rd", "3703", "247287", "67", "108"], ["vas", "szombathely", "3336", "266342", "80", "216"], ["veszpr\u00e9m", "veszpr\u00e9m", "4493", "368519", "82", "217"]], "query": "greater { hop { filter_eq { all_rows ; name of county ; veszpr\u00e9m } ; area ( km square ) } ; hop { filter_eq { all_rows ; name of county ; tolna } ; area ( km square ) } } = true", "question": "among the counties of hungary veszpr\u00e9m has a larger area compared to tolna ."}, {"topic": "kjrt", "wiki": "https://en.wikipedia.org/wiki/KJRT", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14035388-2.html.csv", "action": "ordinal", "sent": "for station kjrt , the 2nd highest frequency they broadcast on is in tulia , texas .", "annotation": {"row": "8", "col": "2", "order": "2", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "frequency mhz", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; frequency mhz ; 2 }"}, "city of license"], "result": "tulia , texas", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; frequency mhz ; 2 } ; city of license }"}, "tulia , texas"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; frequency mhz ; 2 } ; city of license } ; tulia , texas } = true", "tointer": "select the row whose frequency mhz record of all rows is 2nd maximum . the city of license record of this row is tulia , texas ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; frequency mhz ; 2 } ; city of license } ; tulia , texas } = true", "interpret": "select the row whose frequency mhz record of all rows is 2nd maximum . the city of license record of this row is tulia , texas .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "frequency mhz_5": 5, "2_6": 6, "city of license_7": 7, "tulia , texas_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "frequency mhz_5": "frequency mhz", "2_6": "2", "city of license_7": "city of license", "tulia , texas_8": "tulia , texas"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "frequency mhz_5": [0], "2_6": [0], "city of license_7": [1], "tulia , texas_8": [2]}, "table_header": ["call sign", "frequency mhz", "city of license", "erp w", "class", "fcc info"], "table_cont": [["k201bm", "88.1", "canadian , texas", "74", "d", "fcc"], ["k202ck", "88.3", "childress , texas", "200", "d", "fcc"], ["k216 gg", "91.1", "plainview , texas", "40", "a", "fcc"], ["k220cp", "91.9", "pampa , texas", "67", "d", "fcc"], ["k220iz", "91.9", "perryton , texas", "250", "d", "fcc"], ["k220jz", "91.9", "memphis , texas", "25", "d", "fcc"], ["k219lo", "91.7", "hereford , texas", "10", "d", "fcc"], ["k229by", "93.7", "tulia , texas", "100", "d", "fcc"], ["k291aq", "106.1", "dumas , texas", "92", "d", "fcc"], ["k202ag", "88.3", "elk city , oklahoma", "38", "d", "fcc"]], "query": "eq { hop { nth_argmax { all_rows ; frequency mhz ; 2 } ; city of license } ; tulia , texas } = true", "question": "for station kjrt , the 2nd highest frequency they broadcast on is in tulia , texas ."}, {"topic": "united states house of representatives elections , 2012", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_2012", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-25030512-26.html.csv", "action": "ordinal", "sent": "keith ellison received the first highest percentage of votes in his election .", "annotation": {"row": "4", "col": "6", "order": "1", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "candidates", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; candidates ; 1 }"}, "incumbent"], "result": "keith ellison", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent }"}, "keith ellison"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; keith ellison } = true", "tointer": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is keith ellison ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; keith ellison } = true", "interpret": "select the row whose candidates record of all rows is 1st maximum . the incumbent record of this row is keith ellison .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "candidates_5": 5, "1_6": 6, "incumbent_7": 7, "keith ellison_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "candidates_5": "candidates", "1_6": "1", "incumbent_7": "incumbent", "keith ellison_8": "keith ellison"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "candidates_5": [0], "1_6": [0], "incumbent_7": [1], "keith ellison_8": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["minnesota 1", "tim walz", "democratic", "2006", "re - elected", "tim walz ( d ) 57.6 % allen quist ( r ) 42.4 %"], ["minnesota 2", "john kline", "republican", "2002", "re - elected", "john kline ( r ) 54.1 % mike obermueller ( d ) 45.9 %"], ["minnesota 3", "erik paulsen", "republican", "2008", "re - elected", "erik paulsen ( r ) 58.2 % brian barnes ( d ) 41.8 %"], ["minnesota 5", "keith ellison", "democratic", "2006", "re - elected", "keith ellison ( d ) 74.5 % chris fields ( r ) 25.5 %"], ["minnesota 6", "michele bachmann", "republican", "2006", "re - elected", "michele bachmann ( r ) 50.6 % jim graves ( d ) 49.4 %"]], "query": "eq { hop { nth_argmax { all_rows ; candidates ; 1 } ; incumbent } ; keith ellison } = true", "question": "keith ellison received the first highest percentage of votes in his election ."}, {"topic": "tom weiskopf", "wiki": "https://en.wikipedia.org/wiki/Tom_Weiskopf", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1579748-6.html.csv", "action": "superlative", "sent": "of the tournaments that tom weiskopf participated in , the highest number of top-25s was at the masters tournament .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "top - 25"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; top - 25 }"}, "tournament"], "result": "masters tournament", "ind": 1, "tostr": "hop { argmax { all_rows ; top - 25 } ; tournament }"}, "masters tournament"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; top - 25 } ; tournament } ; masters tournament } = true", "tointer": "select the row whose top - 25 record of all rows is maximum . the tournament record of this row is masters tournament ."}, "logic_str": "eq { hop { argmax { all_rows ; top - 25 } ; tournament } ; masters tournament } = true", "interpret": "select the row whose top - 25 record of all rows is maximum . the tournament record of this row is masters tournament .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "top - 25_5": 5, "tournament_6": 6, "masters tournament_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "top - 25_5": "top - 25", "tournament_6": "tournament", "masters tournament_7": "masters tournament"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "top - 25_5": [0], "tournament_6": [1], "masters tournament_7": [2]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "4", "7", "12", "16", "15"], ["us open", "0", "5", "6", "11", "18", "16"], ["the open championship", "1", "1", "3", "9", "19", "12"], ["pga championship", "0", "2", "5", "6", "18", "12"], ["totals", "1", "12", "21", "38", "71", "55"]], "query": "eq { hop { argmax { all_rows ; top - 25 } ; tournament } ; masters tournament } = true", "question": "of the tournaments that tom weiskopf participated in , the highest number of top-25s was at the masters tournament ."}, {"topic": "imperfect season", "wiki": "https://en.wikipedia.org/wiki/Imperfect_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14417906-8.html.csv", "action": "ordinal", "sent": "runcorn highfield is the team that has the second newest imperfect season .", "annotation": {"row": "2", "col": "1", "order": "5", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "season", "5"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; season ; 5 }"}, "team"], "result": "runcorn highfield", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; season ; 5 } ; team }"}, "runcorn highfield"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; season ; 5 } ; team } ; runcorn highfield } = true", "tointer": "select the row whose season record of all rows is 5th minimum . the team record of this row is runcorn highfield ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; season ; 5 } ; team } ; runcorn highfield } = true", "interpret": "select the row whose season record of all rows is 5th minimum . the team record of this row is runcorn highfield .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "season_5": 5, "5_6": 6, "team_7": 7, "runcorn highfield_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "season_5": "season", "5_6": "5", "team_7": "team", "runcorn highfield_8": "runcorn highfield"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "season_5": [0], "5_6": [0], "team_7": [1], "runcorn highfield_8": [2]}, "table_header": ["season", "team", "wins", "losses", "draws"], "table_cont": [["1991 - 92", "nottingham city", "0", "26", "0"], ["1989 - 90", "runcorn highfield", "0", "28", "0"], ["1941 - 1942", "bramley", "0", "19", "0"], ["1940 - 1941", "broughton rangers", "0", "10", "0"], ["1940 - 1941", "leigh", "0", "13", "0"], ["1906 - 1907", "liverpool city", "0", "30", "0"]], "query": "eq { hop { nth_argmin { all_rows ; season ; 5 } ; team } ; runcorn highfield } = true", "question": "runcorn highfield is the team that has the second newest imperfect season ."}, {"topic": "ana timoti\u0107", "wiki": "https://en.wikipedia.org/wiki/Ana_Timoti%C4%87", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11326124-3.html.csv", "action": "ordinal", "sent": "of the matches ana timoti\u0107 participated in , the 2nd most recent was the one where the opponent was ma\u0161a zec pe\u0161kiri\u010d .", "annotation": {"row": "7", "col": "4", "order": "2", "col_other": "7", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "date", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; date ; 2 }"}, "opponent"], "result": "ma\u0161a zec pe\u0161kiri\u010d", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; date ; 2 } ; opponent }"}, "ma\u0161a zec pe\u0161kiri\u010d"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; date ; 2 } ; opponent } ; ma\u0161a zec pe\u0161kiri\u010d } = true", "tointer": "select the row whose date record of all rows is 2nd maximum . the opponent record of this row is ma\u0161a zec pe\u0161kiri\u010d ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; date ; 2 } ; opponent } ; ma\u0161a zec pe\u0161kiri\u010d } = true", "interpret": "select the row whose date record of all rows is 2nd maximum . the opponent record of this row is ma\u0161a zec pe\u0161kiri\u010d .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "date_5": 5, "2_6": 6, "opponent_7": 7, "ma\u0161a zec pe\u0161kiri\u010d_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "date_5": "date", "2_6": "2", "opponent_7": "opponent", "ma\u0161a zec pe\u0161kiri\u010d_8": "ma\u0161a zec pe\u0161kiri\u010d"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "date_5": [0], "2_6": [0], "opponent_7": [1], "ma\u0161a zec pe\u0161kiri\u010d_8": [2]}, "table_header": ["edition", "zone", "round", "date", "against", "surface", "opponent", "outcome", "result"], "table_cont": [["2005", "europe / africa group i c", "1r", "21 april 2005", "slovenia", "clay", "tina pisnik", "loss", "6 - 0 , 6 - 1"], ["2005", "europe / africa group i c", "2r", "22 april 2005", "great britain", "clay", "elena baltacha", "win", "5 - 7 , 6 - 3 , 6 - 0"], ["2005", "europe / africa group play - off", "semifinal", "23 april 2005", "israel", "clay", "shahar pe'er", "loss", "6 - 4 , 4 - 6 , 6 - 3"], ["2006", "europe / africa group i b", "1r", "18 april 2006", "slovenia", "clay", "polona reber\u0161ak", "loss", "6 - 3 , 6 - 2"], ["2006", "europe / africa group i b", "3r", "20 april 2006", "denmark", "clay", "eva dyrberg", "win", "2 - 6 , 6 - 4 , 6 - 4"], ["2006", "europe / africa group i", "semifinal", "22 april 2006", "israel", "clay", "anna smashnova", "win", "5 - 7 , 4 - 5 ret"], ["2007", "europe / africa group i c", "1r", "20 april 2007", "slovenia", "clay", "ma\u0161a zec pe\u0161kiri\u010d", "loss", "6 - 3 , 4 - 6 , 6 - 0"], ["2007", "europe / africa group i c", "semifinal", "21 april 2007", "romania", "clay", "m\u0103d\u0103lina gojnea", "loss", "1 - 6 , 6 - 4 , 6 - 3"]], "query": "eq { hop { nth_argmax { all_rows ; date ; 2 } ; opponent } ; ma\u0161a zec pe\u0161kiri\u010d } = true", "question": "of the matches ana timoti\u0107 participated in , the 2nd most recent was the one where the opponent was ma\u0161a zec pe\u0161kiri\u010d ."}, {"topic": "2008 - 09 hkfa 7 - a - side competition", "wiki": "https://en.wikipedia.org/wiki/2008%E2%80%9309_HKFA_7-A-Side_Competition", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18880018-14.html.csv", "action": "unique", "sent": "eastern team a is the only home team to win their game at 2008 \u2013 09 hkfa 7-a-side competition .", "annotation": {"scope": "all", "row": "5", "col": "3", "col_other": "2", "criterion": "equal", "value": "2 - 0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "2 - 0"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to 2 - 0 .", "tostr": "filter_eq { all_rows ; score ; 2 - 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; score ; 2 - 0 } }", "tointer": "select the rows whose score record fuzzily matches to 2 - 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "score", "2 - 0"], "result": null, "ind": 0, "tointer": "select the rows whose score record fuzzily matches to 2 - 0 .", "tostr": "filter_eq { all_rows ; score ; 2 - 0 }"}, "home team"], "result": "eastern team a", "ind": 2, "tostr": "hop { filter_eq { all_rows ; score ; 2 - 0 } ; home team }"}, "eastern team a"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; score ; 2 - 0 } ; home team } ; eastern team a }", "tointer": "the home team record of this unqiue row is eastern team a ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; score ; 2 - 0 } } ; eq { hop { filter_eq { all_rows ; score ; 2 - 0 } ; home team } ; eastern team a } } = true", "tointer": "select the rows whose score record fuzzily matches to 2 - 0 . there is only one such row in the table . the home team record of this unqiue row is eastern team a ."}, "logic_str": "and { only { filter_eq { all_rows ; score ; 2 - 0 } } ; eq { hop { filter_eq { all_rows ; score ; 2 - 0 } ; home team } ; eastern team a } } = true", "interpret": "select the rows whose score record fuzzily matches to 2 - 0 . there is only one such row in the table . the home team record of this unqiue row is eastern team a .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "score_7": 7, "2 - 0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "home team_9": 9, "eastern team a_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "score_7": "score", "2 - 0_8": "2 - 0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "home team_9": "home team", "eastern team a_10": "eastern team a"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "score_7": [0], "2 - 0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "home team_9": [2], "eastern team a_10": [3]}, "table_header": ["time", "home team", "score", "away team", "venue"], "table_cont": [["15:00", "derico", "0 - 3", "citizen team a", "mong kok stadium"], ["15:30", "tuen mun progoal team a", "1 - 1 , 7 - 8 ( pso )", "mutual team a", "mong kok stadium"], ["16:00", "south china team a", "1 - 4", "convoy sun hei team a", "mong kok stadium"], ["16:30", "tsw pegasus team a", "0 - 5", "ntr wf tai po team a", "mong kok stadium"], ["17:00", "eastern team a", "2 - 0", "shatin", "mong kok stadium"], ["17:30", "south china team b", "0 - 3", "fourway team b", "mong kok stadium"], ["18:00", "citizen team b", "0 - 1", "convoy sun hei team b", "mong kok stadium"], ["18:30", "tsw pegasus team b", "0 - 1", "happy valley team b", "mong kok stadium"], ["19:00", "hkssf", "0 - 4", "mutual team b", "mong kok stadium"], ["19:30", "tuen mun progoal team b", "0 - 1", "kitchee team b", "mong kok stadium"]], "query": "and { only { filter_eq { all_rows ; score ; 2 - 0 } } ; eq { hop { filter_eq { all_rows ; score ; 2 - 0 } ; home team } ; eastern team a } } = true", "question": "eastern team a is the only home team to win their game at 2008 \u2013 09 hkfa 7-a-side competition ."}, {"topic": "mandsaur ( lok sabha constituency )", "wiki": "https://en.wikipedia.org/wiki/Mandsaur_%28Lok_Sabha_constituency%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18518150-1.html.csv", "action": "majority", "sent": "most of the districts had at least 140,000 electorates in them .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "greater_than_eq", "value": "140000", "subset": null}, "logic": {"func": "most_greater_eq", "args": ["all_rows", "number of electorates ( 2009 )", "140000"], "result": true, "ind": 0, "tointer": "for the number of electorates ( 2009 ) records of all rows , most of them are greater than or equal to 140000 .", "tostr": "most_greater_eq { all_rows ; number of electorates ( 2009 ) ; 140000 } = true"}, "logic_str": "most_greater_eq { all_rows ; number of electorates ( 2009 ) ; 140000 } = true", "interpret": "for the number of electorates ( 2009 ) records of all rows , most of them are greater than or equal to 140000 .", "num_func": 1, "nid": 1, "g_ids": {"most_greater_eq_0": 0, "result_1": 1, "all_rows_2": 2, "number of electorates (2009)_3": 3, "140000_4": 4}, "g_ids_features": {"most_greater_eq_0": "most_greater_eq", "result_1": "true", "all_rows_2": "all_rows", "number of electorates (2009)_3": "number of electorates ( 2009 )", "140000_4": "140000"}, "g_adj": {"most_greater_eq_0": [1], "result_1": [], "all_rows_2": [0], "number of electorates (2009)_3": [0], "140000_4": [0]}, "table_header": ["constituency number", "name", "reserved for ( sc / st / none )", "district", "number of electorates ( 2009 )"], "table_cont": [["222", "jaora", "none", "ratlam", "165174"], ["224", "mandsour", "none", "mandsaur", "186581"], ["225", "malhargarh", "sc", "mandsaur", "183257"], ["226", "suwasra", "none", "mandsaur", "198249"], ["227", "garoth", "none", "mandsaur", "185692"], ["228", "manasa", "none", "neemuch", "147829"], ["229", "neemuch", "none", "neemuch", "167545"], ["230", "jawad", "none", "neemuch", "136640"], ["total :", "total :", "total :", "total :", "1370967"]], "query": "most_greater_eq { all_rows ; number of electorates ( 2009 ) ; 140000 } = true", "question": "most of the districts had at least 140,000 electorates in them ."}, {"topic": "2007 eneco tour", "wiki": "https://en.wikipedia.org/wiki/2007_Eneco_Tour", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12608303-21.html.csv", "action": "majority", "sent": "the majority of team classifications are categorized as predictor - lotto .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "predictor-lotto", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "team classification", "predictor-lotto"], "result": true, "ind": 0, "tointer": "for the team classification records of all rows , most of them fuzzily match to predictor-lotto .", "tostr": "most_eq { all_rows ; team classification ; predictor-lotto } = true"}, "logic_str": "most_eq { all_rows ; team classification ; predictor-lotto } = true", "interpret": "for the team classification records of all rows , most of them fuzzily match to predictor-lotto .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "team classification_3": 3, "predictor-lotto_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "team classification_3": "team classification", "predictor-lotto_4": "predictor-lotto"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "team classification_3": [0], "predictor-lotto_4": [0]}, "table_header": ["stage", "winner", "general classification", "points classification", "team classification"], "table_cont": [["p", "michiel elijzen", "michiel elijzen", "not awarded", "cofidis"], ["1", "nick nuyens", "nick nuyens", "nick nuyens", "predictor - lotto"], ["2", "mark cavendish", "nick nuyens", "nick nuyens", "predictor - lotto"], ["3", "robbie mcewen", "nick nuyens", "mark cavendish", "predictor - lotto"], ["4", "wouter weylandt", "nick nuyens", "mark cavendish", "predictor - lotto"], ["5", "luciano pagliarini", "nick nuyens", "mark cavendish", "predictor - lotto"], ["6", "pablo lastras", "thomas dekker", "mark cavendish", "predictor - lotto"], ["7", "s\u00e9bastien rosseler", "iv\u00e1n guti\u00e9rrez", "mark cavendish", "quick step - innergetic"], ["final", "final", "iv\u00e1n guti\u00e9rrez", "mark cavendish", "quick step - innergetic"]], "query": "most_eq { all_rows ; team classification ; predictor-lotto } = true", "question": "the majority of team classifications are categorized as predictor - lotto ."}, {"topic": "papal conclave , 1389", "wiki": "https://en.wikipedia.org/wiki/Papal_conclave%2C_1389", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12141437-1.html.csv", "action": "unique", "sent": "francesco moricotti prignani was the only elector with the order cardinal-bishop in the 1389 papal conclave .", "annotation": {"scope": "all", "row": "1", "col": "2", "col_other": "1", "criterion": "equal", "value": "cardinal - bishop", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "order", "cardinal - bishop"], "result": null, "ind": 0, "tointer": "select the rows whose order record fuzzily matches to cardinal - bishop .", "tostr": "filter_eq { all_rows ; order ; cardinal - bishop }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; order ; cardinal - bishop } }", "tointer": "select the rows whose order record fuzzily matches to cardinal - bishop . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "order", "cardinal - bishop"], "result": null, "ind": 0, "tointer": "select the rows whose order record fuzzily matches to cardinal - bishop .", "tostr": "filter_eq { all_rows ; order ; cardinal - bishop }"}, "elector"], "result": "francesco moricotti prignani", "ind": 2, "tostr": "hop { filter_eq { all_rows ; order ; cardinal - bishop } ; elector }"}, "francesco moricotti prignani"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; order ; cardinal - bishop } ; elector } ; francesco moricotti prignani }", "tointer": "the elector record of this unqiue row is francesco moricotti prignani ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; order ; cardinal - bishop } } ; eq { hop { filter_eq { all_rows ; order ; cardinal - bishop } ; elector } ; francesco moricotti prignani } } = true", "tointer": "select the rows whose order record fuzzily matches to cardinal - bishop . there is only one such row in the table . the elector record of this unqiue row is francesco moricotti prignani ."}, "logic_str": "and { only { filter_eq { all_rows ; order ; cardinal - bishop } } ; eq { hop { filter_eq { all_rows ; order ; cardinal - bishop } ; elector } ; francesco moricotti prignani } } = true", "interpret": "select the rows whose order record fuzzily matches to cardinal - bishop . there is only one such row in the table . the elector record of this unqiue row is francesco moricotti prignani .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "order_7": 7, "cardinal - bishop_8": 8, "str_eq_3": 3, "str_hop_2": 2, "elector_9": 9, "francesco moricotti prignani_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "order_7": "order", "cardinal - bishop_8": "cardinal - bishop", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "elector_9": "elector", "francesco moricotti prignani_10": "francesco moricotti prignani"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "order_7": [0], "cardinal - bishop_8": [0], "str_eq_3": [4], "str_hop_2": [3], "elector_9": [2], "francesco moricotti prignani_10": [3]}, "table_header": ["elector", "order", "title", "elevated", "elevator"], "table_cont": [["francesco moricotti prignani", "cardinal - bishop", "bishop of palestrina", "1378 , september 18", "urban vi"], ["andrea bontempi martini", "cardinal - priest", "titulus ss marcellino e pietro", "1378 , september 18", "urban vi"], ["poncello orsini", "cardinal - priest", "titulus s clemente", "1378 , september 18", "urban vi"], ["pietro tomacelli", "cardinal - priest", "titulus s anastasia", "1381 , december 21", "urban vi"], ["angelo acciaioli", "cardinal - priest", "titulus s lorenzo in damaso", "1384 , december 17", "urban vi"], ["francesco carbone tomacelli , ocist", "cardinal - priest", "titulus s susanna", "1384 , december 17", "urban vi"], ["stefano palosio", "cardinal - priest", "titulus s marcello", "1384 , december 17", "urban vi"], ["tommaso orsini dei conti di manupello", "cardinal - deacon", "deacon of s maria in domnica", "circa 13831379", "urban vi"], ["francesco renzio", "cardinal - deacon", "deacon of s eustachio", "1381 , december 21", "urban vi"], ["marino bulcani", "cardinal - deacon", "deacon of s maria nuova", "1384 , december 17", "urban vi"], ["rinaldo brancaccio", "cardinal - deacon", "deacon of ss vito e modesto", "1384 , december 17", "urban vi"], ["ludovico fieschi", "cardinal - deacon", "deacon of s adriano", "1384 , december 17", "urban vi"], ["angelo d'anna de sommariva , ocamald", "cardinal - deacon", "deacon of s lucia in septisolio", "1384 , december 17", "urban vi"]], "query": "and { only { filter_eq { all_rows ; order ; cardinal - bishop } } ; eq { hop { filter_eq { all_rows ; order ; cardinal - bishop } ; elector } ; francesco moricotti prignani } } = true", "question": "francesco moricotti prignani was the only elector with the order cardinal-bishop in the 1389 papal conclave ."}, {"topic": "tri - eastern conference ( ihsaa )", "wiki": "https://en.wikipedia.org/wiki/Tri-Eastern_Conference_%28IHSAA%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18973139-2.html.csv", "action": "majority", "sent": "the majority of schools joined the tri-eastern conference in the year 1962 .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "1962", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "year joined", "1962"], "result": true, "ind": 0, "tointer": "for the year joined records of all rows , most of them are equal to 1962 .", "tostr": "most_eq { all_rows ; year joined ; 1962 } = true"}, "logic_str": "most_eq { all_rows ; year joined ; 1962 } = true", "interpret": "for the year joined records of all rows , most of them are equal to 1962 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "year joined_3": 3, "1962_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "year joined_3": "year joined", "1962_4": "1962"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "year joined_3": [0], "1962_4": [0]}, "table_header": ["school", "location", "mascot", "county", "year joined", "previous conference", "year left", "conference joined"], "table_cont": [["cambridge city", "cambridge city", "wampus cats", "89 wayne", "1962", "eastern indiana", "1965", "none ( consolidated into lincoln )"], ["knightstown", "knightstown", "panthers", "32 henry", "1962", "east central", "1969", "big blue river"], ["liberty", "liberty", "lancers", "81 union", "1962", "east central / whitewater valley", "1965", "none ( consolidated into short )"], ["short", "liberty", "lancers", "81 union", "1965", "none ( new school )", "1973", "none ( consolidated into union county )"], ["brookville", "brookville", "greyhounds", "24 franklin", "1966", "eastern indiana", "1973", "eastern indiana"]], "query": "most_eq { all_rows ; year joined ; 1962 } = true", "question": "the majority of schools joined the tri-eastern conference in the year 1962 ."}, {"topic": "1947 los angeles rams season", "wiki": "https://en.wikipedia.org/wiki/1947_Los_Angeles_Rams_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11172791-1.html.csv", "action": "ordinal", "sent": "the game played on october 12 , 1947 had the 2nd highest attendance .", "annotation": {"row": "3", "col": "5", "order": "2", "col_other": "2", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 2 }"}, "date"], "result": "october 12 , 1947", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 2 } ; date }"}, "october 12 , 1947"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 12 , 1947 } = true", "tointer": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is october 12 , 1947 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 12 , 1947 } = true", "interpret": "select the row whose attendance record of all rows is 2nd maximum . the date record of this row is october 12 , 1947 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "2_6": 6, "date_7": 7, "october 12 , 1947_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "2_6": "2", "date_7": "date", "october 12 , 1947_8": "october 12 , 1947"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "2_6": [0], "date_7": [1], "october 12 , 1947_8": [2]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 29 , 1947", "pittsburgh steelers", "w 48 - 7", "35658"], ["2", "october 5 , 1947", "green bay packers", "l 17 - 14", "31613"], ["3", "october 12 , 1947", "detroit lions", "w 27 - 13", "42955"], ["4", "october 19 , 1947", "chicago cardinals", "w 27 - 7", "69631"], ["5", "october 26 , 1947", "philadelphia eagles", "l 14 - 7", "36364"], ["6", "november 2 , 1947", "chicago cardinals", "l 17 - 10", "40075"], ["7", "november 9 , 1947", "boston yanks", "l 27 - 16", "19715"], ["8", "november 16 , 1947", "chicago bears", "l 41 - 21", "36702"], ["9", "november 23 , 1947", "detroit lions", "w 28 - 17", "17693"], ["10", "november 30 , 1947", "green bay packers", "l 30 - 10", "31080"], ["11", "december 7 , 1947", "chicago bears", "w 17 - 14", "34215"], ["12", "december 14 , 1947", "new york giants", "w 34 - 10", "24050"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 12 , 1947 } = true", "question": "the game played on october 12 , 1947 had the 2nd highest attendance ."}, {"topic": "united states house of representatives elections , 2010", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_2010", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-19753079-36.html.csv", "action": "count", "sent": "6 incumbents were re - elected during the 2010 united states house of representatives elections .", "annotation": {"scope": "all", "criterion": "equal", "value": "re - elected", "result": "6", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "re - elected"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to re - elected .", "tostr": "filter_eq { all_rows ; result ; re - elected }"}], "result": "6", "ind": 1, "tostr": "count { filter_eq { all_rows ; result ; re - elected } }", "tointer": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 6 ."}, "6"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 6 } = true", "tointer": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 6 ."}, "logic_str": "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 6 } = true", "interpret": "select the rows whose result record fuzzily matches to re - elected . the number of such rows is 6 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "result_5": 5, "re - elected_6": 6, "6_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "result_5": "result", "re - elected_6": "re - elected", "6_7": "6"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "result_5": [0], "re - elected_6": [0], "6_7": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["north carolina 4", "david price", "democratic", "1996", "re - elected", "david price ( d ) 57.2 % bj lawson ( r ) 42.8 %"], ["north carolina 5", "virginia foxx", "republican", "2004", "re - elected", "virginia foxx ( r ) 65.9 % william kennedy ( d ) 34.1 %"], ["north carolina 7", "mike mcintyre", "democratic", "1996", "re - elected", "mike mcintyre ( d ) 53.7 % ilario pantano ( r ) 46.3 %"], ["north carolina 9", "sue myrick", "republican", "1994", "re - elected", "sue myrick ( r ) 69.0 % jeff doctor ( d ) 31.0 %"], ["north carolina 10", "patrick mchenry", "republican", "2004", "re - elected", "patrick mchenry ( r ) 71.2 % jeff gregory ( d ) 28.8 %"], ["north carolina 11", "heath shuler", "democratic", "2006", "re - elected", "heath shuler ( d ) 54.3 % jeff miller ( r ) 45.7 %"]], "query": "eq { count { filter_eq { all_rows ; result ; re - elected } } ; 6 } = true", "question": "6 incumbents were re - elected during the 2010 united states house of representatives elections ."}, {"topic": "swimming at the 2008 summer olympics - women 's 200 metre breaststroke", "wiki": "https://en.wikipedia.org/wiki/Swimming_at_the_2008_Summer_Olympics_%E2%80%93_Women%27s_200_metre_breaststroke", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18625509-4.html.csv", "action": "ordinal", "sent": "leisel jones recorded the fastest time for the women 's 200 metre breaststroke during the 2008 summer olympics .", "annotation": {"row": "1", "col": "5", "order": "1", "col_other": "3", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "time", "1"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; time ; 1 }"}, "name"], "result": "leisel jones", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; time ; 1 } ; name }"}, "leisel jones"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; time ; 1 } ; name } ; leisel jones } = true", "tointer": "select the row whose time record of all rows is 1st minimum . the name record of this row is leisel jones ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; time ; 1 } ; name } ; leisel jones } = true", "interpret": "select the row whose time record of all rows is 1st minimum . the name record of this row is leisel jones .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "time_5": 5, "1_6": 6, "name_7": 7, "leisel jones_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "time_5": "time", "1_6": "1", "name_7": "name", "leisel jones_8": "leisel jones"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "time_5": [0], "1_6": [0], "name_7": [1], "leisel jones_8": [2]}, "table_header": ["rank", "lane", "name", "nationality", "time"], "table_cont": [["1", "4", "leisel jones", "australia", "2:23.04"], ["2", "5", "sara nordenstam", "norway", "2:23.79"], ["3", "6", "yuliya yefimova", "russia", "2:24.00"], ["4", "3", "megumi taneda", "japan", "2:25.42"], ["5", "2", "sally foster", "australia", "2:26.33"], ["6", "1", "anne poleska", "germany", "2:26.71"], ["7", "7", "joline h\u00e3stman", "sweden", "2:27.14"], ["8", "8", "jeong da - rae", "south korea", "2:28.28"]], "query": "eq { hop { nth_argmin { all_rows ; time ; 1 } ; name } ; leisel jones } = true", "question": "leisel jones recorded the fastest time for the women 's 200 metre breaststroke during the 2008 summer olympics ."}, {"topic": "1984 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1984_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17231267-4.html.csv", "action": "superlative", "sent": "the player with the most strokes under par is hale irwin .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "to par"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; to par }"}, "player"], "result": "hale irwin", "ind": 1, "tostr": "hop { argmin { all_rows ; to par } ; player }"}, "hale irwin"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; to par } ; player } ; hale irwin } = true", "tointer": "select the row whose to par record of all rows is minimum . the player record of this row is hale irwin ."}, "logic_str": "eq { hop { argmin { all_rows ; to par } ; player } ; hale irwin } = true", "interpret": "select the row whose to par record of all rows is minimum . the player record of this row is hale irwin .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "to par_5": 5, "player_6": 6, "hale irwin_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "to par_5": "to par", "player_6": "player", "hale irwin_7": "hale irwin"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "to par_5": [0], "player_6": [1], "hale irwin_7": [2]}, "table_header": ["place", "player", "country", "score", "to par"], "table_cont": [["1", "hale irwin", "united states", "68 + 68 = 136", "- 4"], ["2", "fuzzy zoeller", "united states", "71 + 66 = 137", "-- 3"], ["t3", "david canipe", "united states", "69 + 69 = 138", "- 2"], ["t3", "greg norman", "australia", "70 + 68 = 138", "- 2"], ["t5", "curtis strange", "united states", "70 + 69 = 139", "- 1"], ["t5", "jim thorpe", "united states", "68 + 71 = 139", "- 1"], ["7", "fred couples", "united states", "69 + 71 = 140", "e"], ["t8", "andy bean", "united states", "70 + 71 = 141", "+ 1"], ["t8", "jay sigel ( a )", "united states", "69 + 72 = 141", "+ 1"], ["t10", "isao aoki", "japan", "72 + 70 = 142", "+ 2"], ["t10", "seve ballesteros", "spain", "69 + 73 = 142", "+ 2"], ["t10", "johnny miller", "united states", "74 + 68 = 142", "+ 2"], ["t10", "jack nicklaus", "united states", "71 + 71 = 142", "+ 2"], ["t10", "mike reid", "united states", "70 + 72 = 142", "+ 2"]], "query": "eq { hop { argmin { all_rows ; to par } ; player } ; hale irwin } = true", "question": "the player with the most strokes under par is hale irwin ."}, {"topic": "2011 tour de suisse", "wiki": "https://en.wikipedia.org/wiki/2011_Tour_de_Suisse", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29077342-19.html.csv", "action": "unique", "sent": "the first stage of the 2011 tour de suisse is the only one without sprints classification .", "annotation": {"scope": "all", "row": "1", "col": "6", "col_other": "1", "criterion": "equal", "value": "no award", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "sprints classification", "no award"], "result": null, "ind": 0, "tointer": "select the rows whose sprints classification record fuzzily matches to no award .", "tostr": "filter_eq { all_rows ; sprints classification ; no award }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; sprints classification ; no award } }", "tointer": "select the rows whose sprints classification record fuzzily matches to no award . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "sprints classification", "no award"], "result": null, "ind": 0, "tointer": "select the rows whose sprints classification record fuzzily matches to no award .", "tostr": "filter_eq { all_rows ; sprints classification ; no award }"}, "stage"], "result": "1", "ind": 2, "tostr": "hop { filter_eq { all_rows ; sprints classification ; no award } ; stage }"}, "1"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; sprints classification ; no award } ; stage } ; 1 }", "tointer": "the stage record of this unqiue row is 1 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; sprints classification ; no award } } ; eq { hop { filter_eq { all_rows ; sprints classification ; no award } ; stage } ; 1 } } = true", "tointer": "select the rows whose sprints classification record fuzzily matches to no award . there is only one such row in the table . the stage record of this unqiue row is 1 ."}, "logic_str": "and { only { filter_eq { all_rows ; sprints classification ; no award } } ; eq { hop { filter_eq { all_rows ; sprints classification ; no award } ; stage } ; 1 } } = true", "interpret": "select the rows whose sprints classification record fuzzily matches to no award . there is only one such row in the table . the stage record of this unqiue row is 1 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "sprints classification_7": 7, "no award_8": 8, "eq_3": 3, "num_hop_2": 2, "stage_9": 9, "1_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "sprints classification_7": "sprints classification", "no award_8": "no award", "eq_3": "eq", "num_hop_2": "num_hop", "stage_9": "stage", "1_10": "1"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "sprints classification_7": [0], "no award_8": [0], "eq_3": [4], "num_hop_2": [3], "stage_9": [2], "1_10": [3]}, "table_header": ["stage", "winner", "general classification", "mountains classification", "points classification", "sprints classification", "team classification"], "table_cont": [["1", "fabian cancellara", "fabian cancellara", "no award", "fabian cancellara", "no award", "leopard trek"], ["2", "mauricio soler", "mauricio soler", "matti breschel", "tejay van garderen", "lloyd mondory", "rabobank"], ["3", "peter sagan", "damiano cunego", "laurens ten dam", "peter sagan", "lloyd mondory", "rabobank"], ["4", "thor hushovd", "damiano cunego", "laurens ten dam", "peter sagan", "lloyd mondory", "rabobank"], ["5", "borut bo\u017ei\u010d", "damiano cunego", "laurens ten dam", "peter sagan", "lloyd mondory", "rabobank"], ["6", "steven kruijswijk", "damiano cunego", "laurens ten dam", "peter sagan", "lloyd mondory", "rabobank"], ["7", "thomas de gendt", "damiano cunego", "andy schleck", "peter sagan", "lloyd mondory", "leopard trek"], ["8", "peter sagan", "damiano cunego", "andy schleck", "peter sagan", "lloyd mondory", "leopard trek"], ["9", "fabian cancellara", "levi leipheimer", "andy schleck", "peter sagan", "lloyd mondory", "leopard trek"]], "query": "and { only { filter_eq { all_rows ; sprints classification ; no award } } ; eq { hop { filter_eq { all_rows ; sprints classification ; no award } ; stage } ; 1 } } = true", "question": "the first stage of the 2011 tour de suisse is the only one without sprints classification ."}, {"topic": "1970 denver broncos season", "wiki": "https://en.wikipedia.org/wiki/1970_Denver_Broncos_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17794610-1.html.csv", "action": "majority", "sent": "the 1970 denver broncos lost most of their games .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "fuzzily_match", "value": "l", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "result", "l"], "result": true, "ind": 0, "tointer": "for the result records of all rows , most of them fuzzily match to l .", "tostr": "most_eq { all_rows ; result ; l } = true"}, "logic_str": "most_eq { all_rows ; result ; l } = true", "interpret": "for the result records of all rows , most of them fuzzily match to l .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "result_3": 3, "l_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "result_3": "result", "l_4": "l"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "result_3": [0], "l_4": [0]}, "table_header": ["week", "date", "opponent", "result", "game site", "record", "attendance"], "table_cont": [["1", "september 20", "buffalo bills", "w 25 - 10", "war memorial stadium", "1 - 0", "34882"], ["2", "september 27", "pittsburgh steelers", "w 16 - 13", "mile high stadium", "2 - 0", "50705"], ["3", "october 4", "kansas city chiefs", "w 26 - 13", "mile high stadium", "3 - 0", "50705"], ["4", "october 11", "oakland raiders", "l 23 - 35", "oakland - alameda county coliseum", "3 - 1", "54436"], ["5", "october 18", "atlanta falcons", "w 24 - 10", "mile high stadium", "4 - 1", "50705"], ["6", "october 25", "san francisco 49ers", "l 14 - 19", "kezar stadium", "4 - 2", "39515"], ["7", "november 1", "washington redskins", "l 3 - 19", "mile high stadium", "4 - 3", "50705"], ["8", "november 8", "san diego chargers", "l 21 - 24", "san diego stadium", "4 - 4", "48327"], ["9", "november 15", "oakland raiders", "l 19 - 24", "mile high stadium", "4 - 5", "50959"], ["10", "november 22", "new orleans saints", "w 31 - 6", "tulane stadium", "5 - 5", "66837"], ["11", "november 29", "houston oilers", "l 21 - 31", "astrodome", "5 - 6", "35733"], ["12", "december 6", "kansas city chiefs", "l 0 - 16", "municipal stadium", "5 - 7", "50454"], ["13", "december 13", "san diego chargers", "t 17 - 17", "mile high stadium", "5 - 7 - 1", "50959"], ["14", "december 20", "cleveland browns", "l 13 - 27", "mile high stadium", "5 - 8 - 1", "51001"]], "query": "most_eq { all_rows ; result ; l } = true", "question": "the 1970 denver broncos lost most of their games ."}, {"topic": "taking chances", "wiki": "https://en.wikipedia.org/wiki/Taking_Chances", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11391762-5.html.csv", "action": "majority", "sent": "taking chances was released mostly on columbia records .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "columbia", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "label", "columbia"], "result": true, "ind": 0, "tointer": "for the label records of all rows , most of them fuzzily match to columbia .", "tostr": "most_eq { all_rows ; label ; columbia } = true"}, "logic_str": "most_eq { all_rows ; label ; columbia } = true", "interpret": "for the label records of all rows , most of them fuzzily match to columbia .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "label_3": 3, "columbia_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "label_3": "label", "columbia_4": "columbia"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "label_3": [0], "columbia_4": [0]}, "table_header": ["region", "date", "label", "format", "catalog"], "table_cont": [["japan", "november 7 , 2007", "sony", "cd", "eicp - 875"], ["europe", "november 9 , 2007", "columbia", "cd", "88697081142"], ["europe", "november 9 , 2007", "columbia", "cd / dvd", "88697147842"], ["australia", "november 10 , 2007", "epic", "cd", "88697081142"], ["australia", "november 10 , 2007", "epic", "cd / dvd", "88697147842"], ["united states", "november 13 , 2007", "columbia", "cd", "88697081142"], ["united states", "november 13 , 2007", "columbia", "cd / dvd", "88697147842"], ["united states", "december 11 , 2007", "columbia", "cd / dvd / perfume", "88697147862"], ["canada", "november 13 , 2007", "columbia", "cd", "88697081142"], ["canada", "november 13 , 2007", "columbia", "cd / dvd", "88697147842"], ["canada", "december 11 , 2007", "columbia", "cd / dvd / perfume", "88697147862"], ["europe", "february 8 , 2008", "columbia", "cd / dvd / perfume", "88697147862"]], "query": "most_eq { all_rows ; label ; columbia } = true", "question": "taking chances was released mostly on columbia records ."}, {"topic": "i brought you my bullets , you brought me your love", "wiki": "https://en.wikipedia.org/wiki/I_Brought_You_My_Bullets%2C_You_Brought_Me_Your_Love", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1449587-4.html.csv", "action": "ordinal", "sent": "the first release of \" i brought you my bullets , you brought me your love \" was in 2002 .", "annotation": {"row": "3", "col": "2", "order": "1", "col_other": "n/a", "max_or_min": "min_to_max", "value_mentioned": "yes", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "nth_min", "args": ["all_rows", "date", "1"], "result": "july 23 , 2002", "ind": 0, "tostr": "nth_min { all_rows ; date ; 1 }", "tointer": "the 1st minimum date record of all rows is july 23 , 2002 ."}, "july 23 , 2002"], "result": true, "ind": 1, "tostr": "eq { nth_min { all_rows ; date ; 1 } ; july 23 , 2002 } = true", "tointer": "the 1st minimum date record of all rows is july 23 , 2002 ."}, "logic_str": "eq { nth_min { all_rows ; date ; 1 } ; july 23 , 2002 } = true", "interpret": "the 1st minimum date record of all rows is july 23 , 2002 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "nth_min_0": 0, "all_rows_3": 3, "date_4": 4, "1_5": 5, "july 23 , 2002_6": 6}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "nth_min_0": "nth_min", "all_rows_3": "all_rows", "date_4": "date", "1_5": "1", "july 23 , 2002_6": "july 23 , 2002"}, "g_adj": {"eq_1": [2], "result_2": [], "nth_min_0": [1], "all_rows_3": [0], "date_4": [0], "1_5": [0], "july 23 , 2002_6": [1]}, "table_header": ["region", "date", "label", "format", "catalogue"], "table_cont": [["japan", "march 25 , 2009", "warner", "cd", "wpcr13347"], ["united kingdom", "april 12 , 2004", "eyeball , 20:20", "cd", "9866233"], ["united states", "july 23 , 2002", "eyeball", "cd", "eye20022"], ["united states", "june 21 , 2005", "eyeball", "cd", "7200222"], ["united states", "february 3 , 2009", "eyeball", "12 vinyl", "eye20059"]], "query": "eq { nth_min { all_rows ; date ; 1 } ; july 23 , 2002 } = true", "question": "the first release of \" i brought you my bullets , you brought me your love \" was in 2002 ."}, {"topic": "katee sackhoff", "wiki": "https://en.wikipedia.org/wiki/Katee_Sackhoff", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1703894-3.html.csv", "action": "unique", "sent": "the year 2010 was the only year that katee sackhoff was nominated for an award other than the saturn award and did not win .", "annotation": {"scope": "all", "row": "5", "col": "2", "col_other": "1,5", "criterion": "not_equal", "value": "saturn award", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "award", "saturn award"], "result": null, "ind": 0, "tointer": "select the rows whose award record does not match to saturn award .", "tostr": "filter_not_eq { all_rows ; award ; saturn award }"}], "result": true, "ind": 1, "tostr": "only { filter_not_eq { all_rows ; award ; saturn award } }", "tointer": "select the rows whose award record does not match to saturn award . there is only one such row in the table ."}, {"func": "and", "args": [{"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "award", "saturn award"], "result": null, "ind": 0, "tointer": "select the rows whose award record does not match to saturn award .", "tostr": "filter_not_eq { all_rows ; award ; saturn award }"}, "year"], "result": "2010", "ind": 2, "tostr": "hop { filter_not_eq { all_rows ; award ; saturn award } ; year }"}, "2010"], "result": true, "ind": 3, "tostr": "eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; year } ; 2010 }", "tointer": "the year record of this unqiue row is 2010 ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_not_eq", "args": ["all_rows", "award", "saturn award"], "result": null, "ind": 0, "tointer": "select the rows whose award record does not match to saturn award .", "tostr": "filter_not_eq { all_rows ; award ; saturn award }"}, "result"], "result": "nominated", "ind": 4, "tostr": "hop { filter_not_eq { all_rows ; award ; saturn award } ; result }"}, "nominated"], "result": true, "ind": 5, "tostr": "eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; result } ; nominated }", "tointer": "the result record of this unqiue row is nominated ."}], "result": true, "ind": 6, "tostr": "and { eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; year } ; 2010 } ; eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; result } ; nominated } }", "tointer": "the year record of this unqiue row is 2010 . the result record of this unqiue row is nominated ."}], "result": true, "ind": 7, "tostr": "and { only { filter_not_eq { all_rows ; award ; saturn award } } ; and { eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; year } ; 2010 } ; eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; result } ; nominated } } } = true", "tointer": "select the rows whose award record does not match to saturn award . there is only one such row in the table . the year record of this unqiue row is 2010 . the result record of this unqiue row is nominated ."}, "logic_str": "and { only { filter_not_eq { all_rows ; award ; saturn award } } ; and { eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; year } ; 2010 } ; eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; result } ; nominated } } } = true", "interpret": "select the rows whose award record does not match to saturn award . there is only one such row in the table . the year record of this unqiue row is 2010 . the result record of this unqiue row is nominated .", "num_func": 10, "nid": 8, "g_ids": {"and_7": 7, "result_8": 8, "only_1": 1, "filter_str_not_eq_0": 0, "all_rows_9": 9, "award_10": 10, "saturn award_11": 11, "and_6": 6, "eq_3": 3, "num_hop_2": 2, "year_12": 12, "2010_13": 13, "str_eq_5": 5, "str_hop_4": 4, "result_14": 14, "nominated_15": 15}, "g_ids_features": {"and_7": "and", "result_8": "true", "only_1": "only", "filter_str_not_eq_0": "filter_str_not_eq", "all_rows_9": "all_rows", "award_10": "award", "saturn award_11": "saturn award", "and_6": "and", "eq_3": "eq", "num_hop_2": "num_hop", "year_12": "year", "2010_13": "2010", "str_eq_5": "str_eq", "str_hop_4": "str_hop", "result_14": "result", "nominated_15": "nominated"}, "g_adj": {"and_7": [8], "result_8": [], "only_1": [7], "filter_str_not_eq_0": [1, 2, 4], "all_rows_9": [0], "award_10": [0], "saturn award_11": [0], "and_6": [7], "eq_3": [6], "num_hop_2": [3], "year_12": [2], "2010_13": [3], "str_eq_5": [6], "str_hop_4": [5], "result_14": [4], "nominated_15": [5]}, "table_header": ["year", "award", "category", "nominated work", "result"], "table_cont": [["2003", "saturn award", "best supporting actress in a television series", "battlestar galactica", "nominated"], ["2005", "saturn award", "best supporting actress in a television series", "battlestar galactica", "won"], ["2006", "saturn award", "best actress on television", "battlestar galactica", "nominated"], ["2008", "saturn award", "best supporting actress in a television series", "battlestar galactica", "nominated"], ["2010", "teen choice award", "choice tv actress : action", "24", "nominated"]], "query": "and { only { filter_not_eq { all_rows ; award ; saturn award } } ; and { eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; year } ; 2010 } ; eq { hop { filter_not_eq { all_rows ; award ; saturn award } ; result } ; nominated } } } = true", "question": "the year 2010 was the only year that katee sackhoff was nominated for an award other than the saturn award and did not win ."}, {"topic": "dirk raudies", "wiki": "https://en.wikipedia.org/wiki/Dirk_Raudies", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13815322-3.html.csv", "action": "ordinal", "sent": "1994 was the year that dirk raudies recorded his second highest amount of race wins .", "annotation": {"row": "6", "col": "6", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "wins", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; wins ; 2 }"}, "year"], "result": "1994", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; wins ; 2 } ; year }"}, "1994"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; year } ; 1994 } = true", "tointer": "select the row whose wins record of all rows is 2nd maximum . the year record of this row is 1994 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; year } ; 1994 } = true", "interpret": "select the row whose wins record of all rows is 2nd maximum . the year record of this row is 1994 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "wins_5": 5, "2_6": 6, "year_7": 7, "1994_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "wins_5": "wins", "2_6": "2", "year_7": "year", "1994_8": "1994"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "wins_5": [0], "2_6": [0], "year_7": [1], "1994_8": [2]}, "table_header": ["year", "class", "team", "points", "rank", "wins"], "table_cont": [["1989", "125cc", "honda", "29", "15", "0"], ["1990", "125cc", "honda", "113", "5th", "0"], ["1991", "125cc", "honda", "81", "8th", "0"], ["1992", "125cc", "honda", "91", "6th", "1"], ["1993", "125cc", "honda", "280", "1st", "9"], ["1994", "125cc", "honda", "162", "4th", "3"], ["1995", "125cc", "honda", "124.5", "5th", "1"], ["1996", "125cc", "honda", "81", "13th", "0"], ["1997", "125cc", "honda", "8", "25th", "0"]], "query": "eq { hop { nth_argmax { all_rows ; wins ; 2 } ; year } ; 1994 } = true", "question": "1994 was the year that dirk raudies recorded his second highest amount of race wins ."}, {"topic": "2002 - 03 hong kong first division league", "wiki": "https://en.wikipedia.org/wiki/2002%E2%80%9303_Hong_Kong_First_Division_League", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10661351-1.html.csv", "action": "comparative", "sent": "south china lost less games than xiangxue pharmaceutical in the 2002 - 03 hong kong first division league .", "annotation": {"row_1": "4", "row_2": "5", "col": "4", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "team", "south china"], "result": null, "ind": 0, "tointer": "select the rows whose team record fuzzily matches to south china .", "tostr": "filter_eq { all_rows ; team ; south china }"}, "loss"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; team ; south china } ; loss }", "tointer": "select the rows whose team record fuzzily matches to south china . take the loss record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "team", "xiangxue pharmaceutical"], "result": null, "ind": 1, "tointer": "select the rows whose team record fuzzily matches to xiangxue pharmaceutical .", "tostr": "filter_eq { all_rows ; team ; xiangxue pharmaceutical }"}, "loss"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; team ; xiangxue pharmaceutical } ; loss }", "tointer": "select the rows whose team record fuzzily matches to xiangxue pharmaceutical . take the loss record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; team ; south china } ; loss } ; hop { filter_eq { all_rows ; team ; xiangxue pharmaceutical } ; loss } } = true", "tointer": "select the rows whose team record fuzzily matches to south china . take the loss record of this row . select the rows whose team record fuzzily matches to xiangxue pharmaceutical . take the loss record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; team ; south china } ; loss } ; hop { filter_eq { all_rows ; team ; xiangxue pharmaceutical } ; loss } } = true", "interpret": "select the rows whose team record fuzzily matches to south china . take the loss record of this row . select the rows whose team record fuzzily matches to xiangxue pharmaceutical . take the loss record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "team_7": 7, "south china_8": 8, "loss_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "team_11": 11, "xiangxue pharmaceutical_12": 12, "loss_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "team_7": "team", "south china_8": "south china", "loss_9": "loss", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "team_11": "team", "xiangxue pharmaceutical_12": "xiangxue pharmaceutical", "loss_13": "loss"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "team_7": [0], "south china_8": [0], "loss_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "team_11": [1], "xiangxue pharmaceutical_12": [1], "loss_13": [3]}, "table_header": ["team", "game", "draw", "loss", "goal gain", "goal loss", "goal diff", "point"], "table_cont": [["happy valley", "14", "4", "1", "42", "16", "26", "31"], ["sun hei", "14", "6", "0", "40", "18", "22", "30"], ["buler rangers", "14", "4", "3", "24", "16", "8", "25"], ["south china", "14", "3", "4", "28", "17", "11", "24"], ["xiangxue pharmaceutical", "14", "2", "7", "14", "19", "- 5", "17"], ["fukien", "14", "2", "8", "17", "33", "- 16", "14"], ["double flower ( r )", "14", "0", "11", "10", "33", "- 23", "9"], ["hong kong fc ( r )", "14", "1", "11", "15", "38", "- 23", "7"]], "query": "less { hop { filter_eq { all_rows ; team ; south china } ; loss } ; hop { filter_eq { all_rows ; team ; xiangxue pharmaceutical } ; loss } } = true", "question": "south china lost less games than xiangxue pharmaceutical in the 2002 - 03 hong kong first division league ."}, {"topic": "claudia hoffmann", "wiki": "https://en.wikipedia.org/wiki/Claudia_Hoffmann", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11537397-1.html.csv", "action": "majority", "sent": "most of hoffmann 's performances took place in european championships .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "fuzzily_match", "value": "european championships", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "competition", "european championships"], "result": true, "ind": 0, "tointer": "for the competition records of all rows , most of them fuzzily match to european championships .", "tostr": "most_eq { all_rows ; competition ; european championships } = true"}, "logic_str": "most_eq { all_rows ; competition ; european championships } = true", "interpret": "for the competition records of all rows , most of them fuzzily match to european championships .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "competition_3": 3, "european championships_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "competition_3": "competition", "european championships_4": "european championships"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "competition_3": [0], "european championships_4": [0]}, "table_header": ["year", "competition", "venue", "position", "event"], "table_cont": [["2000", "world junior championships", "santiago , chile", "5th", "4 400 m relay"], ["2001", "european junior championships", "grosseto , italy", "4th", "400 m"], ["2005", "world championships", "helsinki , finland", "6th", "4 400 m relay"], ["2006", "european championships", "gothenburg , sweden", "5th", "4 400 m relay"], ["2007", "european indoor championships", "birmingham , united kingdom", "5th", "4 400 m relay"], ["2010", "european championships", "barcelona , spain", "2nd", "4 400 m relay"]], "query": "most_eq { all_rows ; competition ; european championships } = true", "question": "most of hoffmann 's performances took place in european championships ."}, {"topic": "conference carolinas", "wiki": "https://en.wikipedia.org/wiki/Conference_Carolinas", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11658094-3.html.csv", "action": "count", "sent": "there are 17 institutions which participated in the conference carolinas .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "17", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "institution"], "result": null, "ind": 0, "tointer": "select the rows whose institution record is arbitrary .", "tostr": "filter_all { all_rows ; institution }"}], "result": "17", "ind": 1, "tostr": "count { filter_all { all_rows ; institution } }", "tointer": "select the rows whose institution record is arbitrary . the number of such rows is 17 ."}, "17"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; institution } } ; 17 } = true", "tointer": "select the rows whose institution record is arbitrary . the number of such rows is 17 ."}, "logic_str": "eq { count { filter_all { all_rows ; institution } } ; 17 } = true", "interpret": "select the rows whose institution record is arbitrary . the number of such rows is 17 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "institution_5": 5, "17_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "institution_5": "institution", "17_6": "17"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "institution_5": [0], "17_6": [2]}, "table_header": ["institution", "location", "founded", "type", "enrollment", "nickname", "joined", "left", "current conference"], "table_cont": [["anderson university", "anderson , south carolina", "1911", "private", "2907", "trojans", "1998", "2010", "sac"], ["appalachian state university", "boone , north carolina", "1899", "public", "17589", "mountaineers", "1930", "1967", "socon ( sun belt in 2014 ) ( ncaa division i )"], ["catawba college", "salisbury , north carolina", "1851", "private", "1300", "indians", "1930", "1975", "sac"], ["coker college", "hartsville , south carolina", "1908", "private", "1200", "cobras", "1991", "2013", "sac"], ["east carolina university", "greenville , north carolina", "1907", "public", "27386", "pirates", "1947", "1962", "c - usa ( the american in 2014 ) ( ncaa division i )"], ["elon university", "elon , north carolina", "1889", "private", "6720", "phoenix", "1930", "1975", "socon ( caa in 2014 ) ( ncaa division i )"], ["guilford college", "greensboro , north carolina", "1837", "private", "2706", "quakers", "1930", "1988", "odac ( ncaa division iii )"], ["high point university", "high point , north carolina", "1924", "private", "4519", "panthers", "1930", "1997", "big south ( ncaa division i )"], ["lenoirrhyne university", "hickory , north carolina", "1891", "private", "1983", "bears", "1930", "1975", "sac"], ["longwood university", "farmville , virginia", "1839", "public", "4800", "lancers", "1995", "2003", "big south ( ncaa division i )"], ["mars hill college", "mars hill , north carolina", "1856", "private", "1370", "lions", "1973", "1975", "sac"], ["newberry college", "newberry , south carolina", "1856", "private", "949", "wolves", "1961", "1972", "sac"], ["university of north carolina at pembroke", "pembroke , north carolina", "1887", "public", "6433", "braves", "1976", "1992", "peach belt ( pbc )"], ["presbyterian college", "clinton , south carolina", "1880", "private", "1300", "blue hose", "1965", "1972", "big south ( ncaa division i )"], ["queens university of charlotte", "charlotte , north carolina", "1857", "private", "2386", "royals", "1995", "2013", "sac"], ["st andrews university", "laurinburg , north carolina", "1958", "private", "600", "knights", "1988", "2012", "aac ( naia )"], ["western carolina university", "cullowhee , north carolina", "1889", "public", "9608", "catamounts", "1933", "1975", "socon ( ncaa division i )"]], "query": "eq { count { filter_all { all_rows ; institution } } ; 17 } = true", "question": "there are 17 institutions which participated in the conference carolinas ."}, {"topic": "1996 - 97 european challenge cup", "wiki": "https://en.wikipedia.org/wiki/1996%E2%80%9397_European_Challenge_Cup", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16770037-3.html.csv", "action": "count", "sent": "2 teams in the 1996-97 european challenge cup had a tries against value of 6 .", "annotation": {"scope": "all", "criterion": "equal", "value": "6", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "tries against", "6"], "result": null, "ind": 0, "tointer": "select the rows whose tries against record is equal to 6 .", "tostr": "filter_eq { all_rows ; tries against ; 6 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; tries against ; 6 } }", "tointer": "select the rows whose tries against record is equal to 6 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; tries against ; 6 } } ; 2 } = true", "tointer": "select the rows whose tries against record is equal to 6 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; tries against ; 6 } } ; 2 } = true", "interpret": "select the rows whose tries against record is equal to 6 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "tries against_5": 5, "6_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "tries against_5": "tries against", "6_6": "6", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "tries against_5": [0], "6_6": [0], "2_7": [2]}, "table_header": ["team", "tries for", "tries against", "try diff", "points for", "points against", "points diff"], "table_cont": [["castres olympique", "29", "6", "+ 23", "207", "71", "+ 136"], ["narbonne", "21", "6", "+ 15", "161", "90", "+ 71"], ["dinamo - bucure\u015fti", "12", "32", "20", "109", "213", "104"], ["bridgend", "10", "14", "4", "94", "120", "26"], ["bristol shoguns", "11", "12", "1", "128", "99", "+ 29"], ["treorchy", "10", "23", "13", "72", "178", "106"]], "query": "eq { count { filter_eq { all_rows ; tries against ; 6 } } ; 2 } = true", "question": "2 teams in the 1996-97 european challenge cup had a tries against value of 6 ."}, {"topic": "thomas h\u00e4\u00dfler", "wiki": "https://en.wikipedia.org/wiki/Thomas_H%C3%A4%C3%9Fler", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1462547-3.html.csv", "action": "unique", "sent": "thomas h\u00e4\u00dfler played in a single qualifying game for the 1990 fifa world cup in 1989 .", "annotation": {"scope": "all", "row": "1", "col": "5", "col_other": "1", "criterion": "equal", "value": "fifa world cup 1990 qualifying", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "competition", "fifa world cup 1990 qualifying"], "result": null, "ind": 0, "tointer": "select the rows whose competition record fuzzily matches to fifa world cup 1990 qualifying .", "tostr": "filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } }", "tointer": "select the rows whose competition record fuzzily matches to fifa world cup 1990 qualifying . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "competition", "fifa world cup 1990 qualifying"], "result": null, "ind": 0, "tointer": "select the rows whose competition record fuzzily matches to fifa world cup 1990 qualifying .", "tostr": "filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying }"}, "date"], "result": "15 november 1989", "ind": 2, "tostr": "hop { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } ; date }"}, "15 november 1989"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } ; date } ; 15 november 1989 }", "tointer": "the date record of this unqiue row is 15 november 1989 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } } ; eq { hop { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } ; date } ; 15 november 1989 } } = true", "tointer": "select the rows whose competition record fuzzily matches to fifa world cup 1990 qualifying . there is only one such row in the table . the date record of this unqiue row is 15 november 1989 ."}, "logic_str": "and { only { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } } ; eq { hop { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } ; date } ; 15 november 1989 } } = true", "interpret": "select the rows whose competition record fuzzily matches to fifa world cup 1990 qualifying . there is only one such row in the table . the date record of this unqiue row is 15 november 1989 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "competition_7": 7, "fifa world cup 1990 qualifying_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "15 november 1989_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "competition_7": "competition", "fifa world cup 1990 qualifying_8": "fifa world cup 1990 qualifying", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "15 november 1989_10": "15 november 1989"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "competition_7": [0], "fifa world cup 1990 qualifying_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "15 november 1989_10": [3]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["15 november 1989", "m\u00fcngersdorfer stadion , cologne , germany", "2 - 1", "2 - 1", "fifa world cup 1990 qualifying"], ["18 december 1991", "ulrich - haberland - stadion , leverkusen , germany", "4 - 0", "4 - 0", "uefa euro 1992 qualifying"], ["22 april 1992", "stadion eden , prague , czechoslovakia", "1 - 0", "1 - 1", "friendly"], ["12 june 1992", "idrottsparken , norrk\u00f6ping , sweden", "1 - 1", "1 - 1", "uefa euro 1992"], ["21 june 1992", "r\u00e5sunda stadium , stockholm , sweden", "1 - 0", "3 - 2", "uefa euro 1992"], ["20 december 1992", "estadio centenario , montevideo , uruguay", "3 - 0", "4 - 1", "friendly"], ["23 june 1995", "wankdorf stadium , bern , switzerland", "1 - 0", "2 - 1", "friendly"], ["15 november 1995", "olympic stadium , berlin , germany", "2 - 1", "3 - 1", "uefa euro 1996 qualifying"], ["9 october 1996", "hrazdan stadium , yerevan , armenia", "1 - 0", "5 - 1", "fifa world cup 1998 qualifying"], ["9 october 1996", "hrazdan stadium , yerevan , armenia", "3 - 0", "5 - 1", "fifa world cup 1998 qualifying"], ["10 september 1997", "westfalenstadion , dortmund , germany", "3 - 0", "4 - 0", "fifa world cup 1998 qualifying"]], "query": "and { only { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } } ; eq { hop { filter_eq { all_rows ; competition ; fifa world cup 1990 qualifying } ; date } ; 15 november 1989 } } = true", "question": "thomas h\u00e4\u00dfler played in a single qualifying game for the 1990 fifa world cup in 1989 ."}, {"topic": "dave stockton", "wiki": "https://en.wikipedia.org/wiki/Dave_Stockton", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1586876-6.html.csv", "action": "count", "sent": "dave stockton has no wins in three of the major golf championship tournaments .", "annotation": {"scope": "all", "criterion": "equal", "value": "0", "result": "3", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "wins", "0"], "result": null, "ind": 0, "tointer": "select the rows whose wins record is equal to 0 .", "tostr": "filter_eq { all_rows ; wins ; 0 }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; wins ; 0 } }", "tointer": "select the rows whose wins record is equal to 0 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; wins ; 0 } } ; 3 } = true", "tointer": "select the rows whose wins record is equal to 0 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; wins ; 0 } } ; 3 } = true", "interpret": "select the rows whose wins record is equal to 0 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "wins_5": 5, "0_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "wins_5": "wins", "0_6": "0", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "wins_5": [0], "0_6": [0], "3_7": [2]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "2", "4", "6", "12", "10"], ["us open", "0", "1", "2", "3", "16", "9"], ["the open championship", "0", "0", "0", "1", "2", "2"], ["pga championship", "2", "2", "2", "5", "24", "17"], ["totals", "2", "5", "8", "15", "54", "38"]], "query": "eq { count { filter_eq { all_rows ; wins ; 0 } } ; 3 } = true", "question": "dave stockton has no wins in three of the major golf championship tournaments ."}, {"topic": "united states house of representatives elections , 1962", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1962", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341884-19.html.csv", "action": "ordinal", "sent": "william huston natcher was the third earliest elected incumbent in the 1962 united states house of representatives elections .", "annotation": {"row": "2", "col": "4", "order": "3", "col_other": "2", "max_or_min": "min_to_max", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmin", "args": ["all_rows", "first elected", "3"], "result": null, "ind": 0, "tostr": "nth_argmin { all_rows ; first elected ; 3 }"}, "incumbent"], "result": "william huston natcher", "ind": 1, "tostr": "hop { nth_argmin { all_rows ; first elected ; 3 } ; incumbent }"}, "william huston natcher"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmin { all_rows ; first elected ; 3 } ; incumbent } ; william huston natcher } = true", "tointer": "select the row whose first elected record of all rows is 3rd minimum . the incumbent record of this row is william huston natcher ."}, "logic_str": "eq { hop { nth_argmin { all_rows ; first elected ; 3 } ; incumbent } ; william huston natcher } = true", "interpret": "select the row whose first elected record of all rows is 3rd minimum . the incumbent record of this row is william huston natcher .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmin_0": 0, "all_rows_4": 4, "first elected_5": 5, "3_6": 6, "incumbent_7": 7, "william huston natcher_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmin_0": "nth_argmin", "all_rows_4": "all_rows", "first elected_5": "first elected", "3_6": "3", "incumbent_7": "incumbent", "william huston natcher_8": "william huston natcher"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmin_0": [1], "all_rows_4": [0], "first elected_5": [0], "3_6": [0], "incumbent_7": [1], "william huston natcher_8": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["kentucky 1", "frank stubblefield", "democratic", "1958", "re - elected", "frank stubblefield ( d ) unopposed"], ["kentucky 2", "william huston natcher", "democratic", "1953", "re - elected", "william huston natcher ( d ) unopposed"], ["kentucky 3", "frank w burke", "democratic", "1958", "lost re - election republican gain", "gene snyder ( r ) 50.8 % frank w burke ( d ) 49.2 %"], ["kentucky 4", "frank chelf", "democratic", "1944", "re - elected", "frank chelf ( d ) 52.9 % clyde middleton ( r ) 47.1 %"], ["kentucky 4", "brent spence redistricted from 5th", "democratic", "1930", "retired democratic loss", "frank chelf ( d ) 52.9 % clyde middleton ( r ) 47.1 %"], ["kentucky 5", "eugene siler redistricted from 8th", "republican", "1954", "re - elected", "eugene siler ( r ) unopposed"]], "query": "eq { hop { nth_argmin { all_rows ; first elected ; 3 } ; incumbent } ; william huston natcher } = true", "question": "william huston natcher was the third earliest elected incumbent in the 1962 united states house of representatives elections ."}, {"topic": "2008 manx grand prix", "wiki": "https://en.wikipedia.org/wiki/2008_Manx_Grand_Prix", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18649514-5.html.csv", "action": "count", "sent": "team honda was represented in 9 of the top 10 ranks .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "honda", "result": "9", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "team", "honda"], "result": null, "ind": 0, "tointer": "select the rows whose team record fuzzily matches to honda .", "tostr": "filter_eq { all_rows ; team ; honda }"}], "result": "9", "ind": 1, "tostr": "count { filter_eq { all_rows ; team ; honda } }", "tointer": "select the rows whose team record fuzzily matches to honda . the number of such rows is 9 ."}, "9"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; team ; honda } } ; 9 } = true", "tointer": "select the rows whose team record fuzzily matches to honda . the number of such rows is 9 ."}, "logic_str": "eq { count { filter_eq { all_rows ; team ; honda } } ; 9 } = true", "interpret": "select the rows whose team record fuzzily matches to honda . the number of such rows is 9 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "team_5": 5, "honda_6": 6, "9_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "team_5": "team", "honda_6": "honda", "9_7": "9"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "team_5": [0], "honda_6": [0], "9_7": [2]}, "table_header": ["rank", "rider", "team", "speed", "time"], "table_cont": [["1", "roy richardson", "349cc honda", "99.814 mph", "1:08.02.42"], ["2", "paul coward", "348cc k4 honda", "98.136 mph", "1:09.12.26"], ["3", "ryan farquhar", "347cc honda", "97.873 mph", "1:09.23.39"], ["4", "rich hawkins", "348cc k4 honda", "97.743 mph", "1:09.29.85"], ["5", "wattie brown", "350cc honda", "94.349 mph", "1:11.58.88"], ["6", "john burrows", "350cc honda", "93.929 mph", "1:12.18.19"], ["7", "bob price", "350cc honda", "93.537 mph", "1:12.36.41"], ["8", "paul dobbs", "350cc aermacchi", "93.161 mph", "1:12.53.99"], ["9", "dave madsen - mygdal", "349cc honda", "92.922 mph", "1:13.05.25"], ["10", "alec whitwell", "349cc honda", "92.234 mph", "1:13.37.95"]], "query": "eq { count { filter_eq { all_rows ; team ; honda } } ; 9 } = true", "question": "team honda was represented in 9 of the top 10 ranks ."}, {"topic": "1981 england rugby union tour of argentina", "wiki": "https://en.wikipedia.org/wiki/1981_England_rugby_union_tour_of_Argentina", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17007880-1.html.csv", "action": "ordinal", "sent": "litoral region xv was the opposing team that scored the second highest points against england 's rugby union team .", "annotation": {"row": "6", "col": "2", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "against", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; against ; 2 }"}, "opposing team"], "result": "litoral region xv", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; against ; 2 } ; opposing team }"}, "litoral region xv"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; against ; 2 } ; opposing team } ; litoral region xv } = true", "tointer": "select the row whose against record of all rows is 2nd maximum . the opposing team record of this row is litoral region xv ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; against ; 2 } ; opposing team } ; litoral region xv } = true", "interpret": "select the row whose against record of all rows is 2nd maximum . the opposing team record of this row is litoral region xv .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "against_5": 5, "2_6": 6, "opposing team_7": 7, "litoral region xv_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "against_5": "against", "2_6": "2", "opposing team_7": "opposing team", "litoral region xv_8": "litoral region xv"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "against_5": [0], "2_6": [0], "opposing team_7": [1], "litoral region xv_8": [2]}, "table_header": ["opposing team", "against", "date", "venue", "status"], "table_cont": [["san isidro club", "14", "16 / 05 / 1981", "buenos aires", "tour match"], ["northern region xv", "12", "19 / 05 / 1981", "c\u00e3 cubicrdoba", "tour match"], ["buenos aires selection", "25", "23 / 05 / 1981", "buenos aires", "tour match"], ["southern region xv", "3", "25 / 05 / 1981", "mar del plata", "tour match"], ["argentina", "19", "30 / 05 / 1981", "ferrocarril stadium , buenos aires", "first test"], ["litoral region xv", "21", "02 / 06 / 1981", "rosario", "tour match"], ["argentina", "6", "06 / 06 / 1981", "ferrocarril stadium , buenos aires", "second test"]], "query": "eq { hop { nth_argmax { all_rows ; against ; 2 } ; opposing team } ; litoral region xv } = true", "question": "litoral region xv was the opposing team that scored the second highest points against england 's rugby union team ."}, {"topic": "list of schools in the southland region", "wiki": "https://en.wikipedia.org/wiki/List_of_schools_in_the_Southland_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12375672-2.html.csv", "action": "count", "sent": "a total of seven schools in the southland region are in the gore area .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "gore", "result": "7", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "area", "gore"], "result": null, "ind": 0, "tointer": "select the rows whose area record fuzzily matches to gore .", "tostr": "filter_eq { all_rows ; area ; gore }"}], "result": "7", "ind": 1, "tostr": "count { filter_eq { all_rows ; area ; gore } }", "tointer": "select the rows whose area record fuzzily matches to gore . the number of such rows is 7 ."}, "7"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; area ; gore } } ; 7 } = true", "tointer": "select the rows whose area record fuzzily matches to gore . the number of such rows is 7 ."}, "logic_str": "eq { count { filter_eq { all_rows ; area ; gore } } ; 7 } = true", "interpret": "select the rows whose area record fuzzily matches to gore . the number of such rows is 7 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "area_5": 5, "gore_6": 6, "7_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "area_5": "area", "gore_6": "gore", "7_7": "7"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "area_5": [0], "gore_6": [0], "7_7": [2]}, "table_header": ["name", "years", "gender", "area", "authority", "decile", "roll"], "table_cont": [["east gore school", "1 - 6", "coed", "gore", "state", "3", "102"], ["gore high school", "9 - 15", "coed", "gore", "state", "6", "653"], ["gore main school", "1 - 6", "coed", "gore", "state", "6", "209"], ["knapdale school", "1 - 8", "coed", "knapdale", "state", "7", "37"], ["longford intermediate", "7 - 8", "coed", "gore", "state", "5", "250"], ["mataura school", "1 - 6", "coed", "mataura", "state", "1", "96"], ["otama school", "1 - 8", "coed", "otama", "state", "9", "29"], ["pukerau school", "1 - 6", "coed", "pukerau", "state", "8", "45"], ["st mary 's school", "1 - 6", "coed", "gore", "state integrated", "7", "182"], ["st peter 's college", "7 - 15", "coed", "gore", "state integrated", "8", "414"], ["waikaka school", "1 - 8", "coed", "waikaka", "state", "8", "39"], ["west gore school", "1 - 6", "coed", "gore", "state", "6", "241"], ["willowbank school", "1 - 6", "coed", "maitland", "state", "8", "9"]], "query": "eq { count { filter_eq { all_rows ; area ; gore } } ; 7 } = true", "question": "a total of seven schools in the southland region are in the gore area ."}, {"topic": "coast province", "wiki": "https://en.wikipedia.org/wiki/Coast_Province", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1404456-1.html.csv", "action": "superlative", "sent": "tana river is the county in coast province with the highest area in square kilometers .", "annotation": {"scope": "all", "col_superlative": "4", "row_superlative": "4", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "area ( km 2 )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; area ( km 2 ) }"}, "county"], "result": "tana river", "ind": 1, "tostr": "hop { argmax { all_rows ; area ( km 2 ) } ; county }"}, "tana river"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; area ( km 2 ) } ; county } ; tana river } = true", "tointer": "select the row whose area ( km 2 ) record of all rows is maximum . the county record of this row is tana river ."}, "logic_str": "eq { hop { argmax { all_rows ; area ( km 2 ) } ; county } ; tana river } = true", "interpret": "select the row whose area ( km 2 ) record of all rows is maximum . the county record of this row is tana river .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "area (km 2 )_5": 5, "county_6": 6, "tana river_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "area (km 2 )_5": "area ( km 2 )", "county_6": "county", "tana river_7": "tana river"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "area (km 2 )_5": [0], "county_6": [1], "tana river_7": [2]}, "table_header": ["code", "county", "former province", "area ( km 2 )", "population census 2009", "capital"], "table_cont": [["1", "mombasa", "coast", "212.5", "939370", "mombasa ( city )"], ["2", "kwale", "coast", "8270.3", "649931", "kwale"], ["3", "kilifi", "coast", "12245.9", "1109735", "kilifi"], ["4", "tana river", "coast", "35375.8", "240075", "hola"], ["5", "lamu", "coast", "6497.7", "101539", "lamu"], ["6", "taita - taveta", "coast", "17083.9", "284657", "voi"]], "query": "eq { hop { argmax { all_rows ; area ( km 2 ) } ; county } ; tana river } = true", "question": "tana river is the county in coast province with the highest area in square kilometers ."}, {"topic": "2005 houston astros season", "wiki": "https://en.wikipedia.org/wiki/2005_Houston_Astros_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-13710464-1.html.csv", "action": "ordinal", "sent": "houston astros ' game on june 25th recorded the highest attendance in the 2005 season .", "annotation": {"row": "5", "col": "6", "order": "1", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "1"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 1 }"}, "date"], "result": "june 25", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 1 } ; date }"}, "june 25"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; june 25 } = true", "tointer": "select the row whose attendance record of all rows is 1st maximum . the date record of this row is june 25 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; june 25 } = true", "interpret": "select the row whose attendance record of all rows is 1st maximum . the date record of this row is june 25 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "1_6": 6, "date_7": 7, "june 25_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "1_6": "1", "date_7": "date", "june 25_8": "june 25"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "1_6": [0], "date_7": [1], "june 25_8": [2]}, "table_header": ["date", "winning team", "score", "winning pitcher", "losing pitcher", "attendance", "location"], "table_cont": [["may 20", "texas", "7 - 3", "kenny rogers", "brandon backe", "38109", "arlington"], ["may 21", "texas", "18 - 3", "chris young", "ezequiel astacio", "35781", "arlington"], ["may 22", "texas", "2 - 0", "chan ho park", "roy oswalt", "40583", "arlington"], ["june 24", "houston", "5 - 2", "roy oswalt", "ricardo rodriguez", "36199", "houston"], ["june 25", "texas", "6 - 5", "chris young", "brandon backe", "41868", "houston"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 1 } ; date } ; june 25 } = true", "question": "houston astros ' game on june 25th recorded the highest attendance in the 2005 season ."}, {"topic": "fiba eurobasket 2007 squads", "wiki": "https://en.wikipedia.org/wiki/FIBA_EuroBasket_2007_squads", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-12962773-13.html.csv", "action": "superlative", "sent": "pape badiane had the most height in the fiba eurobasket 2007 squad .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "height"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; height }"}, "player"], "result": "pape badiane", "ind": 1, "tostr": "hop { argmax { all_rows ; height } ; player }"}, "pape badiane"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; height } ; player } ; pape badiane } = true", "tointer": "select the row whose height record of all rows is maximum . the player record of this row is pape badiane ."}, "logic_str": "eq { hop { argmax { all_rows ; height } ; player } ; pape badiane } = true", "interpret": "select the row whose height record of all rows is maximum . the player record of this row is pape badiane .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "height_5": 5, "player_6": 6, "pape badiane_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "height_5": "height", "player_6": "player", "pape badiane_7": "pape badiane"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "height_5": [0], "player_6": [1], "pape badiane_7": [2]}, "table_header": ["no", "player", "height", "position", "year born", "current club"], "table_cont": [["4", "joseph gomis", "1.80", "guard", "1978", "grupo capitol valladolid"], ["5", "pape badiane", "2.08", "center", "1980", "roanne"], ["6", "sacha giffa", "1.97", "forward", "1977", "strasbourg"], ["7", "yohann sangare", "1.92", "guard", "1983", "lyon - villeurbanne"], ["8", "yakhouba diawara", "2.01", "forward", "1982", "denver nuggets"], ["9", "tony parker", "1.86", "guard", "1982", "san antonio spurs"], ["10", "c\u00e9dric ferchaud", "1.94", "guard", "1980", "pau - orthez"], ["11", "florent pi\u00e9trus", "2.02", "forward", "1981", "unicaja m\u00e1laga"], ["12", "tariq kirksay", "1.98", "guard", "1978", "nancy"], ["13", "boris diaw", "2.03", "forward", "1982", "phoenix suns"], ["14", "ronny turiaf", "2.06", "center", "1983", "los angeles lakers"]], "query": "eq { hop { argmax { all_rows ; height } ; player } ; pape badiane } = true", "question": "pape badiane had the most height in the fiba eurobasket 2007 squad ."}, {"topic": "2007 u.s. women 's open golf championship", "wiki": "https://en.wikipedia.org/wiki/2007_U.S._Women%27s_Open_Golf_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18369370-4.html.csv", "action": "aggregation", "sent": "the average money won for a player in the 2007 u.s. women 's open golf championship was 153030 .", "annotation": {"scope": "all", "col": "6", "type": "average", "result": "153030", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "money"], "result": "153030", "ind": 0, "tostr": "avg { all_rows ; money }"}, "153030"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; money } ; 153030 } = true", "tointer": "the average of the money record of all rows is 153030 ."}, "logic_str": "round_eq { avg { all_rows ; money } ; 153030 } = true", "interpret": "the average of the money record of all rows is 153030 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "money_4": 4, "153030_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "money_4": "money", "153030_5": "153030"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "money_4": [0], "153030_5": [1]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["1", "cristie kerr", "united states", "71 + 72 + 66 + 70 = 279", "- 5", "560000"], ["t2", "angela park", "brazil", "68 + 69 + 74 + 70 = 281", "- 3", "271022"], ["t2", "lorena ochoa", "mexico", "71 + 71 + 68 + 71 = 281", "- 3", "271022"], ["t4", "se ri pak", "south korea", "74 + 72 + 68 + 68 = 282", "- 2", "130549"], ["t4", "inbee park", "south korea", "69 + 73 + 71 + 69 = 282", "- 2", "130549"], ["6", "jiyai shin", "south korea", "70 + 69 + 71 + 74 = 284", "e", "103581"], ["7", "jee young lee", "south korea", "72 + 71 + 71 + 71 = 285", "+ 1", "93031"], ["t8", "mi hyun kim", "south korea", "71 + 75 + 70 + 70 = 286", "+ 2", "82464"], ["t8", "jeong jang", "south korea", "72 + 71 + 70 + 73 = 286", "+ 2", "82464"], ["t10", "ai miyazato", "japan", "73 + 73 + 72 + 69 = 287", "+ 3", "66177"], ["t10", "kyeong bae", "south korea", "74 + 71 + 72 + 70 = 287", "+ 3", "66177"], ["t10", "julieta granada", "paraguay", "70 + 69 + 75 + 73 = 287", "+ 3", "66177"], ["t10", "morgan pressel", "united states", "71 + 70 + 69 + 77 = 287", "+ 3", "66177"]], "query": "round_eq { avg { all_rows ; money } ; 153030 } = true", "question": "the average money won for a player in the 2007 u.s. women 's open golf championship was 153030 ."}, {"topic": "lost ( season 6 )", "wiki": "https://en.wikipedia.org/wiki/Lost_%28season_6%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-11562149-1.html.csv", "action": "comparative", "sent": "more people watched the first episode of the sixth season of lost than the last episode .", "annotation": {"row_1": "1", "row_2": "15", "col": "8", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "no in season", "1 / 2"], "result": null, "ind": 0, "tointer": "select the rows whose no in season record fuzzily matches to 1 / 2 .", "tostr": "filter_eq { all_rows ; no in season ; 1 / 2 }"}, "us viewers ( million )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; no in season ; 1 / 2 } ; us viewers ( million ) }", "tointer": "select the rows whose no in season record fuzzily matches to 1 / 2 . take the us viewers ( million ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "no in season", "16"], "result": null, "ind": 1, "tointer": "select the rows whose no in season record fuzzily matches to 16 .", "tostr": "filter_eq { all_rows ; no in season ; 16 }"}, "us viewers ( million )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; no in season ; 16 } ; us viewers ( million ) }", "tointer": "select the rows whose no in season record fuzzily matches to 16 . take the us viewers ( million ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; no in season ; 1 / 2 } ; us viewers ( million ) } ; hop { filter_eq { all_rows ; no in season ; 16 } ; us viewers ( million ) } } = true", "tointer": "select the rows whose no in season record fuzzily matches to 1 / 2 . take the us viewers ( million ) record of this row . select the rows whose no in season record fuzzily matches to 16 . take the us viewers ( million ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; no in season ; 1 / 2 } ; us viewers ( million ) } ; hop { filter_eq { all_rows ; no in season ; 16 } ; us viewers ( million ) } } = true", "interpret": "select the rows whose no in season record fuzzily matches to 1 / 2 . take the us viewers ( million ) record of this row . select the rows whose no in season record fuzzily matches to 16 . take the us viewers ( million ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "no in season_7": 7, "1 / 2_8": 8, "us viewers (million)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "no in season_11": 11, "16_12": 12, "us viewers (million)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "no in season_7": "no in season", "1 / 2_8": "1 / 2", "us viewers (million)_9": "us viewers ( million )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "no in season_11": "no in season", "16_12": "16", "us viewers (million)_13": "us viewers ( million )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "no in season_7": [0], "1 / 2_8": [0], "us viewers (million)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "no in season_11": [1], "16_12": [1], "us viewers (million)_13": [3]}, "table_header": ["no in series", "no in season", "title", "directed by", "written by", "featured character ( s )", "original air date", "us viewers ( million )"], "table_cont": [["104 / 105", "1 / 2", "la x", "jack bender", "damon lindelof & carlton cuse", "various", "february 2 , 2010", "12.09"], ["106", "3", "what kate does", "paul edwards", "edward kitsis & adam horowitz", "kate", "february 9 , 2010", "11.05"], ["107", "4", "the substitute", "tucker gates", "elizabeth sarnoff & melinda hsu taylor", "locke", "february 16 , 2010", "9.82"], ["108", "5", "lighthouse", "jack bender", "carlton cuse & damon lindelof", "jack", "february 23 , 2010", "9.95"], ["109", "6", "sundown", "bobby roth", "paul zbyszewski & graham roland", "sayid", "march 2 , 2010", "9.29"], ["110", "7", "dr linus", "mario van peebles", "edward kitsis & adam horowitz", "ben", "march 9 , 2010", "9.49"], ["111", "8", "recon", "jack bender", "elizabeth sarnoff & jim galasso", "sawyer", "march 16 , 2010", "8.87"], ["112", "9", "ab aeterno", "tucker gates", "melinda hsu taylor & greggory nations", "richard", "march 23 , 2010", "9.31"], ["113", "10", "the package", "paul edwards", "paul zbyszewski & graham roland", "sun & jin", "march 30 , 2010", "10.13"], ["114", "11", "happily ever after", "jack bender", "carlton cuse & damon lindelof", "desmond", "april 6 , 2010", "9.55"], ["115", "12", "everybody loves hugo", "daniel attias", "edward kitsis & adam horowitz", "hurley", "april 13 , 2010", "9.48"], ["116", "13", "the last recruit", "stephen semel", "paul zbyszewski & graham roland", "various", "april 20 , 2010", "9.53"], ["117", "14", "the candidate", "jack bender", "elizabeth sarnoff & jim galasso", "jack & locke", "may 4 , 2010", "9.59"], ["118", "15", "across the sea", "tucker gates", "carlton cuse & damon lindelof", "jacob & man in black", "may 11 , 2010", "10.32"], ["119", "16", "what they died for", "paul edwards", "edward kitsis , adam horowitz & elizabeth sarnoff", "various", "may 18 , 2010", "10.47"]], "query": "greater { hop { filter_eq { all_rows ; no in season ; 1 / 2 } ; us viewers ( million ) } ; hop { filter_eq { all_rows ; no in season ; 16 } ; us viewers ( million ) } } = true", "question": "more people watched the first episode of the sixth season of lost than the last episode ."}, {"topic": "list of south asian television channels by country", "wiki": "https://en.wikipedia.org/wiki/List_of_South_Asian_television_channels_by_country", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10503963-5.html.csv", "action": "count", "sent": "a total of three south asian television channels on starhub have english as their language .", "annotation": {"scope": "all", "criterion": "equal", "value": "english", "result": "3", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "language", "english"], "result": null, "ind": 0, "tointer": "select the rows whose language record fuzzily matches to english .", "tostr": "filter_eq { all_rows ; language ; english }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; language ; english } }", "tointer": "select the rows whose language record fuzzily matches to english . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; language ; english } } ; 3 } = true", "tointer": "select the rows whose language record fuzzily matches to english . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; language ; english } } ; 3 } = true", "interpret": "select the rows whose language record fuzzily matches to english . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "language_5": 5, "english_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "language_5": "language", "english_6": "english", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "language_5": [0], "english_6": [0], "3_7": [2]}, "table_header": ["network", "origin of programming", "language", "genre", "service"], "table_cont": [["asianet", "india", "malayalam", "general", "starhub"], ["channel india", "india", "hindi", "music", "starhub"], ["channel i", "bangladesh", "bengali", "general", "starhub"], ["colors", "india", "hindi", "general", "starhub"], ["set max", "india", "hindi", "movies", "starhub"], ["sony entertainment television asia", "india", "hindi", "general", "starhub"], ["star cricket", "india", "english", "cricket", "starhub"], ["star cricket hd", "india", "english", "cricket", "starhub"], ["star gold", "india", "hindi", "movies", "starhub"], ["star plus", "india", "hindi", "general", "starhub"], ["sun music", "india", "tamil", "music", "starhub"], ["sun tv", "india", "tamil", "general", "starhub"], ["ten cricket", "india", "english", "cricket", "starhub"], ["vannathirai", "singapore", "tamil", "movies", "starhub"], ["vijay", "india", "tamil", "general", "starhub"], ["zee cinema", "india", "hindi", "movies", "starhub"], ["zee news", "india", "hindi", "news", "starhub"], ["zee tv", "india", "hindi", "general", "starhub"]], "query": "eq { count { filter_eq { all_rows ; language ; english } } ; 3 } = true", "question": "a total of three south asian television channels on starhub have english as their language ."}, {"topic": "2010 nba all - star game", "wiki": "https://en.wikipedia.org/wiki/2010_NBA_All-Star_Game", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15753220-17.html.csv", "action": "comparative", "sent": "in the 2010 nba all star game , diamon simpson weighed 20 pounds more than reggie williams .", "annotation": {"row_1": "11", "row_2": "12", "col": "5", "col_other": "2", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "20", "bigger": "row1"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "diamon simpson"], "result": null, "ind": 0, "tointer": "select the rows whose player record fuzzily matches to diamon simpson .", "tostr": "filter_eq { all_rows ; player ; diamon simpson }"}, "weight"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; player ; diamon simpson } ; weight }", "tointer": "select the rows whose player record fuzzily matches to diamon simpson . take the weight record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "player", "reggie williams"], "result": null, "ind": 1, "tointer": "select the rows whose player record fuzzily matches to reggie williams .", "tostr": "filter_eq { all_rows ; player ; reggie williams }"}, "weight"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; player ; reggie williams } ; weight }", "tointer": "select the rows whose player record fuzzily matches to reggie williams . take the weight record of this row ."}], "result": "20", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; player ; diamon simpson } ; weight } ; hop { filter_eq { all_rows ; player ; reggie williams } ; weight } }"}, "20"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; player ; diamon simpson } ; weight } ; hop { filter_eq { all_rows ; player ; reggie williams } ; weight } } ; 20 } = true", "tointer": "select the rows whose player record fuzzily matches to diamon simpson . take the weight record of this row . select the rows whose player record fuzzily matches to reggie williams . take the weight record of this row . the first record is 20 larger than the second record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; player ; diamon simpson } ; weight } ; hop { filter_eq { all_rows ; player ; reggie williams } ; weight } } ; 20 } = true", "interpret": "select the rows whose player record fuzzily matches to diamon simpson . take the weight record of this row . select the rows whose player record fuzzily matches to reggie williams . take the weight record of this row . the first record is 20 larger than the second record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "player_8": 8, "diamon simpson_9": 9, "weight_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "player_12": 12, "reggie williams_13": 13, "weight_14": 14, "20_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "player_8": "player", "diamon simpson_9": "diamon simpson", "weight_10": "weight", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "player_12": "player", "reggie williams_13": "reggie williams", "weight_14": "weight", "20_15": "20"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "player_8": [0], "diamon simpson_9": [0], "weight_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "player_12": [1], "reggie williams_13": [1], "weight_14": [3], "20_15": [5]}, "table_header": ["pos", "player", "team", "height", "weight"], "table_cont": [["g", "pat carroll", "iowa energy", "6 - 5", "190"], ["f", "trey gilder", "maine red claws", "6 - 9", "185"], ["f", "carlos powell", "albuquerque thunderbirds", "6 - 7", "225"], ["f", "romel beck", "dakota wizards", "6 - 8", "195"], ["f", "brian butch", "bakersfield jam", "6 - 11", "240"], ["f", "desmon farmer", "reno bighorns", "6 - 5", "210"], ["f", "mike harris", "rio grande valley vipers", "6 - 6", "235"], ["g", "donell taylor", "idaho stampede", "6 - 5", "215"], ["g", "curtis jerrells", "austin toros", "6 - 1", "195"], ["g", "mustafa shakur", "tulsa 66ers", "6 - 3", "190"], ["f", "diamon simpson", "los angeles d - fenders", "6 - 7", "230"], ["f", "reggie williams", "sioux falls skyforce", "6 - 6", "210"], ["g", "dontell jefferson", "utah flash", "6 - 5", "190"]], "query": "eq { diff { hop { filter_eq { all_rows ; player ; diamon simpson } ; weight } ; hop { filter_eq { all_rows ; player ; reggie williams } ; weight } } ; 20 } = true", "question": "in the 2010 nba all star game , diamon simpson weighed 20 pounds more than reggie williams ."}, {"topic": "manny ayulo", "wiki": "https://en.wikipedia.org/wiki/Manny_Ayulo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1236164-3.html.csv", "action": "majority", "sent": "manny ayulo earned 0 points in the majority of years listed .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "most_eq", "args": ["all_rows", "points", "0"], "result": true, "ind": 0, "tointer": "for the points records of all rows , most of them are equal to 0 .", "tostr": "most_eq { all_rows ; points ; 0 } = true"}, "logic_str": "most_eq { all_rows ; points ; 0 } = true", "interpret": "for the points records of all rows , most of them are equal to 0 .", "num_func": 1, "nid": 1, "g_ids": {"most_eq_0": 0, "result_1": 1, "all_rows_2": 2, "points_3": 3, "0_4": 4}, "g_ids_features": {"most_eq_0": "most_eq", "result_1": "true", "all_rows_2": "all_rows", "points_3": "points", "0_4": "0"}, "g_adj": {"most_eq_0": [1], "result_1": [], "all_rows_2": [0], "points_3": [0], "0_4": [0]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1950", "coast grain", "maserati 8ctf", "offenhauser l4", "0"], ["1951", "jack hinkle", "kurtis kraft 3000", "offenhauser l4", "2"], ["1952", "coast grain", "lesovsky", "offenhauser l4", "0"], ["1953", "peter schmidt", "kuzma indy roadster", "offenhauser l4", "0"], ["1954", "peter schmidt", "kuzma indy roadster", "offenhauser l4", "0"], ["1955", "peter schmidt", "kurtis kraft 500c", "offenhauser l4", "0"]], "query": "most_eq { all_rows ; points ; 0 } = true", "question": "manny ayulo earned 0 points in the majority of years listed ."}, {"topic": "greg mcelroy", "wiki": "https://en.wikipedia.org/wiki/Greg_McElroy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16337186-2.html.csv", "action": "ordinal", "sent": "greg mcelroy recorded the second highest number of yards in his career in the 2009 season .", "annotation": {"row": "4", "col": "5", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "yards", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; yards ; 2 }"}, "season"], "result": "2009", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; yards ; 2 } ; season }"}, "2009"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; yards ; 2 } ; season } ; 2009 } = true", "tointer": "select the row whose yards record of all rows is 2nd maximum . the season record of this row is 2009 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; yards ; 2 } ; season } ; 2009 } = true", "interpret": "select the row whose yards record of all rows is 2nd maximum . the season record of this row is 2009 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "yards_5": 5, "2_6": 6, "season_7": 7, "2009_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "yards_5": "yards", "2_6": "2", "season_7": "season", "2009_8": "2009"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "yards_5": [0], "2_6": [0], "season_7": [1], "2009_8": [2]}, "table_header": ["season", "gp - gs", "comp - att", "pct", "yards", "long", "avg / g"], "table_cont": [["2006", "redshirt", "redshirt", "redshirt", "redshirt", "redshirt", "redshirt"], ["2007", "2 - 0", "8 - 9", "88.9", "73", "32", "36.5"], ["2008", "6 - 0", "8 - 11", "72.7", "123", "34", "20.5"], ["2009", "14 - 14", "197 - 325", "60.6", "2508", "80", "179.1"], ["2010", "13 - 13", "222 - 313", "70.9", "2987", "85", "230.6"], ["total", "34 - 27", "436 - 658", "65.8", "5691", "85", "160.9"]], "query": "eq { hop { nth_argmax { all_rows ; yards ; 2 } ; season } ; 2009 } = true", "question": "greg mcelroy recorded the second highest number of yards in his career in the 2009 season ."}, {"topic": "eurovision song contest 1963", "wiki": "https://en.wikipedia.org/wiki/Eurovision_Song_Contest_1963", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-182845-1.html.csv", "action": "superlative", "sent": "the artist that had the most points was grethe & j\u00f8rgen ingmann .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "8", "value_mentioned": "no", "max_or_min": "max", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "artist"], "result": "grethe & j\u00f8rgen ingmann", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; artist }"}, "grethe & j\u00f8rgen ingmann"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; artist } ; grethe & j\u00f8rgen ingmann } = true", "tointer": "select the row whose points record of all rows is maximum . the artist record of this row is grethe & j\u00f8rgen ingmann ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; artist } ; grethe & j\u00f8rgen ingmann } = true", "interpret": "select the row whose points record of all rows is maximum . the artist record of this row is grethe & j\u00f8rgen ingmann .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "artist_6": 6, "grethe & j\u00f8rgen ingmann_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "artist_6": "artist", "grethe & j\u00f8rgen ingmann_7": "grethe & j\u00f8rgen ingmann"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "artist_6": [1], "grethe & j\u00f8rgen ingmann_7": [2]}, "table_header": ["draw", "language", "artist", "song", "english translation", "place", "points"], "table_cont": [["01", "english", "ronnie carroll", "say wonderful things", "-", "4", "28"], ["02", "dutch", "annie palmen", "een speeldoos", "a musical box", "13", "0"], ["03", "german", "heidi br\u00fchl", "marcel", "-", "9", "5"], ["04", "german , english", "carmela corren", "vielleicht geschieht ein wunder", "maybe a miracle will happen", "7", "16"], ["05", "norwegian", "anita thallaug", "solhverv", "solstice", "13", "0"], ["06", "italian", "emilio pericoli", "uno per tutte", "one for all", "3", "37"], ["07", "finnish", "laila halme", "muistojeni laulu", "the song of my memories", "13", "0"], ["08", "danish", "grethe & j\u00f8rgen ingmann", "dansevise", "dance ballad", "1", "42"], ["09", "croatian", "vice vukov", "brodovi", "ships", "11", "3"], ["10", "french", "esther ofarim", "t ' en va pas", "do n't go away", "2", "40"], ["11", "french", "alain barri\u00e8re", "elle \u00e9tait si jolie", "she was so pretty", "5", "25"], ["12", "spanish", "jos\u00e9 guardiola", "algo prodigioso", "something marvellous", "12", "2"], ["13", "swedish", "monica zetterlund", "en g\u00e5ng i stockholm", "once in stockholm", "13", "0"], ["14", "dutch", "jacques raymond", "waarom", "why", "10", "4"], ["15", "french", "fran\u00e7oise hardy", "l'amour s ' en va", "love goes away", "5", "25"], ["16", "french", "nana mouskouri", "\u00e0 force de prier", "by the might of prayer", "8", "13"]], "query": "eq { hop { argmax { all_rows ; points } ; artist } ; grethe & j\u00f8rgen ingmann } = true", "question": "the artist that had the most points was grethe & j\u00f8rgen ingmann ."}, {"topic": "marek ham\u0161\u00edk", "wiki": "https://en.wikipedia.org/wiki/Marek_Ham%C5%A1%C3%ADk", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11895475-1.html.csv", "action": "unique", "sent": "the competition on august 15 , 2012 is the only one where the result was 3-1 .", "annotation": {"scope": "all", "row": "9", "col": "4", "col_other": "1", "criterion": "equal", "value": "3-1", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "3-1"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to 3-1 .", "tostr": "filter_eq { all_rows ; result ; 3-1 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; result ; 3-1 } }", "tointer": "select the rows whose result record fuzzily matches to 3-1 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "result", "3-1"], "result": null, "ind": 0, "tointer": "select the rows whose result record fuzzily matches to 3-1 .", "tostr": "filter_eq { all_rows ; result ; 3-1 }"}, "date"], "result": "15 august 2012", "ind": 2, "tostr": "hop { filter_eq { all_rows ; result ; 3-1 } ; date }"}, "15 august 2012"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; result ; 3-1 } ; date } ; 15 august 2012 }", "tointer": "the date record of this unqiue row is 15 august 2012 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; result ; 3-1 } } ; eq { hop { filter_eq { all_rows ; result ; 3-1 } ; date } ; 15 august 2012 } } = true", "tointer": "select the rows whose result record fuzzily matches to 3-1 . there is only one such row in the table . the date record of this unqiue row is 15 august 2012 ."}, "logic_str": "and { only { filter_eq { all_rows ; result ; 3-1 } } ; eq { hop { filter_eq { all_rows ; result ; 3-1 } ; date } ; 15 august 2012 } } = true", "interpret": "select the rows whose result record fuzzily matches to 3-1 . there is only one such row in the table . the date record of this unqiue row is 15 august 2012 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "result_7": 7, "3-1_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "15 august 2012_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "result_7": "result", "3-1_8": "3-1", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "15 august 2012_10": "15 august 2012"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "result_7": [0], "3-1_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "15 august 2012_10": [3]}, "table_header": ["date", "venue", "score", "result", "competition"], "table_cont": [["13 october 2007", "\u0161tadi\u00f3n zimn\u00fd , dubnica , slovakia", "1 - 0", "7 - 0", "uefa euro 2008 qualifying"], ["21 november 2007", "stadio olimpico , serravalle , san marino", "3 - 0", "5 - 0", "uefa euro 2008 qualifying"], ["6 september 2008", "teheln\u00e9 pole , bratislava , slovakia", "2 - 0", "2 - 1", "2010 fifa world cup qualification"], ["19 november 2008", "stadium pod dub\u0148om , \u017eilina , slovakia", "1 - 0", "4 - 0", "friendly match"], ["19 november 2008", "stadium pod dub\u0148om , \u017eilina , slovakia", "2 - 0", "4 - 0", "friendly match"], ["10 february 2009", "tsirion stadium , limassol , cyprus", "2 - 0", "2 - 3", "friendly match"], ["5 september 2009", "teheln\u00e9 pole , bratislava , slovakia", "2 - 1", "2 - 2", "2010 fifa world cup qualification"], ["14 november 2009", "teheln\u00e9 pole , bratislava , slovakia", "1 - 0", "1 - 0", "friendly match"], ["15 august 2012", "tre - for park , odense , denmark", "2 - 1", "3 - 1", "friendly match"], ["12 october 2012", "\u0161tadi\u00f3n pasienky , bratislava , slovakia", "1 - 0", "2 - 1", "2014 fifa world cup qualification"], ["10 september 2013", "\u0161tadi\u00f3n pod dub\u0148om , \u017eilina , slovakia", "1 - 0", "1 - 2", "2014 fifa world cup qualification"]], "query": "and { only { filter_eq { all_rows ; result ; 3-1 } } ; eq { hop { filter_eq { all_rows ; result ; 3-1 } ; date } ; 15 august 2012 } } = true", "question": "the competition on august 15 , 2012 is the only one where the result was 3-1 ."}, {"topic": "list of the green green grass episodes", "wiki": "https://en.wikipedia.org/wiki/List_of_The_Green_Green_Grass_episodes", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-17641206-4.html.csv", "action": "superlative", "sent": "the testing times episode of the green green grass had the most viewers .", "annotation": {"scope": "all", "col_superlative": "7", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "viewership"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; viewership }"}, "original title"], "result": "testing times", "ind": 1, "tostr": "hop { argmax { all_rows ; viewership } ; original title }"}, "testing times"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; viewership } ; original title } ; testing times } = true", "tointer": "select the row whose viewership record of all rows is maximum . the original title record of this row is testing times ."}, "logic_str": "eq { hop { argmax { all_rows ; viewership } ; original title } ; testing times } = true", "interpret": "select the row whose viewership record of all rows is maximum . the original title record of this row is testing times .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "viewership_5": 5, "original title_6": 6, "testing times_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "viewership_5": "viewership", "original title_6": "original title", "testing times_7": "testing times"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "viewership_5": [0], "original title_6": [1], "testing times_7": [2]}, "table_header": ["episode", "original title", "directed by", "written by", "original airdate", "duration", "viewership"], "table_cont": [["8", "testing times", "dewi humphreys", "jim sullivan", "15 september 2006", "30 minutes", "5.04 million"], ["9", "here 's to you , mrs boyce", "dewi humphreys", "john sullivan", "22 september 2006", "30 minutes", "4.79 million"], ["10", "bothered and bewildered", "dewi humphreys", "derren litten and john sullivan", "29 september 2006", "30 minutes", "4.77 million"], ["11", "mother earth", "dewi humphreys", "jim sullivan", "6 october 2006", "30 minutes", "5.01 million"], ["12", "schoolboy french", "dewi humphreys", "james windett and john sullivan", "13 october 2006", "30 minutes", "4.96 million"], ["13", "more questions than answers", "dewi humphreys", "paul alexander and john sullivan", "20 october 2006", "30 minutes", "3.90 million"]], "query": "eq { hop { argmax { all_rows ; viewership } ; original title } ; testing times } = true", "question": "the testing times episode of the green green grass had the most viewers ."}, {"topic": "atlanta silverbacks", "wiki": "https://en.wikipedia.org/wiki/Atlanta_Silverbacks", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1032084-2.html.csv", "action": "majority", "sent": "during most years , the silverbacks did n't qualify to play in the playoffs .", "annotation": {"scope": "all", "col": "6", "most_or_all": "most", "criterion": "equal", "value": "did not qualify", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "open cup", "did not qualify"], "result": true, "ind": 0, "tointer": "for the open cup records of all rows , most of them fuzzily match to did not qualify .", "tostr": "most_eq { all_rows ; open cup ; did not qualify } = true"}, "logic_str": "most_eq { all_rows ; open cup ; did not qualify } = true", "interpret": "for the open cup records of all rows , most of them fuzzily match to did not qualify .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "open cup_3": 3, "did not qualify_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "open cup_3": "open cup", "did not qualify_4": "did not qualify"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "open cup_3": [0], "did not qualify_4": [0]}, "table_header": ["year", "division", "league", "reg season", "playoffs", "open cup", "avg attendance"], "table_cont": [["1995", "2", "a - league", "4th", "finalist", "2nd round", "2632"], ["1996", "2", "a - league", "7th", "did not qualify", "did not qualify", "4315"], ["1997", "2", "usisl a - league", "7th , central", "did not qualify", "did not qualify", "2406"], ["1998", "2", "usisl a - league", "6th , atlantic", "did not qualify", "did not qualify", "923"], ["1999", "2", "usl a - league", "5th , atlantic", "did not qualify", "did not qualify", "2703"], ["2000", "2", "usl a - league", "6th , atlantic", "did not qualify", "did not qualify", "3327"], ["2001", "2", "usl a - league", "5th , central", "did not qualify", "did not qualify", "1094"], ["2002", "2", "usl a - league", "3rd , southeast", "1st round", "3rd round", "1006"], ["2003", "2", "usl a - league", "5th , southeast", "did not qualify", "3rd round", "1200"], ["2004", "2", "usl a - league", "5th , eastern", "did not qualify", "4th round", "1662"], ["2005", "2", "usl first division", "8th", "did not qualify", "3rd round", "1724"], ["2006", "2", "usl first division", "8th", "did not qualify", "3rd round", "2298"], ["2007", "2", "usl first division", "4th", "finalist", "3rd round", "2372"], ["2008", "2", "usl first division", "9th", "did not qualify", "2nd round", "2281"], ["2009", "on hiatus", "on hiatus", "on hiatus", "on hiatus", "on hiatus", "on hiatus"], ["2010", "on hiatus", "on hiatus", "on hiatus", "on hiatus", "on hiatus", "on hiatus"], ["2011", "2", "nasl", "8th", "did not qualify", "denied entry", "2866"], ["2012", "2", "nasl", "7th", "did not qualify", "3rd round", "4505"], ["2013", "2", "nasl", "1st - spring 7th - fall", "hosting nasl soccer bowl", "3rd round", "5039"]], "query": "most_eq { all_rows ; open cup ; did not qualify } = true", "question": "during most years , the silverbacks did n't qualify to play in the playoffs ."}, {"topic": "media in fort mcmurray", "wiki": "https://en.wikipedia.org/wiki/Media_in_Fort_McMurray", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18410022-1.html.csv", "action": "count", "sent": "there are two stations that operate on a frequency of 91.1 .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "91.1", "result": "2", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "frequency", "91.1"], "result": null, "ind": 0, "tointer": "select the rows whose frequency record fuzzily matches to 91.1 .", "tostr": "filter_eq { all_rows ; frequency ; 91.1 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; frequency ; 91.1 } }", "tointer": "select the rows whose frequency record fuzzily matches to 91.1 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; frequency ; 91.1 } } ; 2 } = true", "tointer": "select the rows whose frequency record fuzzily matches to 91.1 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; frequency ; 91.1 } } ; 2 } = true", "interpret": "select the rows whose frequency record fuzzily matches to 91.1 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "frequency_5": 5, "91.1_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "frequency_5": "frequency", "91.1_6": "91.1", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "frequency_5": [0], "91.1_6": [0], "2_7": [2]}, "table_header": ["frequency", "call sign", "branding", "format", "owner"], "table_cont": [["00 91.1", "ckos - fm", "kaos 91.1", "christian", "kings kids promotions outreach ministries"], ["00 91.1", "cjok - fm", "country 93.3", "country", "rogers radio"], ["00 94.5", "cfwe - fm - 5", "cfwe radio network", "first nations community radio", "aboriginal multimedia society"], ["00 96.7", "ckua - fm - 11", "ckua radio network", "public broadcasting", "ckua radio foundation"], ["00 97.9", "ckyx - fm", "rock 97.9", "active rock", "rogers radio"], ["00 99.3", "cbxn - fm", "cbc radio one", "public news / talk", "canadian broadcasting corporation"], ["0 100.5", "chft - fm", "k - rock", "classic hits", "newcap radio"], ["0 101.5", "chfa - 6 - fm", "premi\u00e8re cha\u00eene", "public news / talk", "canadian broadcasting corporation"], ["0 103.7", "cfvr - fm", "mix 103.7", "contemporary hit radio", "harvard broadcasting"]], "query": "eq { count { filter_eq { all_rows ; frequency ; 91.1 } } ; 2 } = true", "question": "there are two stations that operate on a frequency of 91.1 ."}, {"topic": "meaghan francella", "wiki": "https://en.wikipedia.org/wiki/Meaghan_Francella", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10021158-3.html.csv", "action": "aggregation", "sent": "meaghan francella played in a total of 33 tournaments between 2011 and 2013 .", "annotation": {"scope": "subset", "col": "2", "type": "sum", "result": "33", "subset": {"col": "1", "criterion": "greater_than_eq", "value": "2011"}}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": [{"func": "filter_greater_eq", "args": ["all_rows", "year", "2011"], "result": null, "ind": 0, "tostr": "filter_greater_eq { all_rows ; year ; 2011 }", "tointer": "select the rows whose year record is greater than or equal to 2011 ."}, "tournaments played"], "result": "33", "ind": 1, "tostr": "sum { filter_greater_eq { all_rows ; year ; 2011 } ; tournaments played }"}, "33"], "result": true, "ind": 2, "tostr": "round_eq { sum { filter_greater_eq { all_rows ; year ; 2011 } ; tournaments played } ; 33 } = true", "tointer": "select the rows whose year record is greater than or equal to 2011 . the sum of the tournaments played record of these rows is 33 ."}, "logic_str": "round_eq { sum { filter_greater_eq { all_rows ; year ; 2011 } ; tournaments played } ; 33 } = true", "interpret": "select the rows whose year record is greater than or equal to 2011 . the sum of the tournaments played record of these rows is 33 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "sum_1": 1, "filter_greater_eq_0": 0, "all_rows_4": 4, "year_5": 5, "2011_6": 6, "tournaments played_7": 7, "33_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "sum_1": "sum", "filter_greater_eq_0": "filter_greater_eq", "all_rows_4": "all_rows", "year_5": "year", "2011_6": "2011", "tournaments played_7": "tournaments played", "33_8": "33"}, "g_adj": {"eq_2": [3], "result_3": [], "sum_1": [2], "filter_greater_eq_0": [1], "all_rows_4": [0], "year_5": [0], "2011_6": [0], "tournaments played_7": [1], "33_8": [2]}, "table_header": ["year", "tournaments played", "cuts made", "wins", "top 10s", "best finish", "earnings", "money list rank", "scoring average", "scoring rank"], "table_cont": [["2005", "1", "1", "0", "0", "t69", "2525", "n / a", "75.00", "n / a"], ["2006", "3", "1", "0", "0", "t39", "5 , 5554", "183", "73.75", "n / a"], ["2007", "25", "18", "1", "4", "1", "507292", "29", "73.09", "66"], ["2008", "24", "11", "0", "0", "t13", "117682", "88", "73.75", "131"], ["2009", "22", "16", "0", "2", "t5", "292266", "48", "72.51", "63"], ["2010", "21", "17", "0", "1", "t7", "168016", "57", "73.04", "77"], ["2011", "15", "8", "0", "0", "t22", "66813", "84", "74.23", "117"], ["2012", "15", "4", "0", "0", "t24", "28935", "116", "74.37", "121"], ["2013", "3", "1", "0", "0", "t71", "2977", "117", "74.25", "121"]], "query": "round_eq { sum { filter_greater_eq { all_rows ; year ; 2011 } ; tournaments played } ; 33 } = true", "question": "meaghan francella played in a total of 33 tournaments between 2011 and 2013 ."}, {"topic": "2004 buffalo bills season", "wiki": "https://en.wikipedia.org/wiki/2004_Buffalo_Bills_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18732289-1.html.csv", "action": "superlative", "sent": "lee evans had the earliest pick number of all these buffalo bills players .", "annotation": {"scope": "all", "col_superlative": "2", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "min", "other_col": "3", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmin", "args": ["all_rows", "pick"], "result": null, "ind": 0, "tostr": "argmin { all_rows ; pick }"}, "player"], "result": "lee evans", "ind": 1, "tostr": "hop { argmin { all_rows ; pick } ; player }"}, "lee evans"], "result": true, "ind": 2, "tostr": "eq { hop { argmin { all_rows ; pick } ; player } ; lee evans } = true", "tointer": "select the row whose pick record of all rows is minimum . the player record of this row is lee evans ."}, "logic_str": "eq { hop { argmin { all_rows ; pick } ; player } ; lee evans } = true", "interpret": "select the row whose pick record of all rows is minimum . the player record of this row is lee evans .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmin_0": 0, "all_rows_4": 4, "pick_5": 5, "player_6": 6, "lee evans_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmin_0": "argmin", "all_rows_4": "all_rows", "pick_5": "pick", "player_6": "player", "lee evans_7": "lee evans"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmin_0": [1], "all_rows_4": [0], "pick_5": [0], "player_6": [1], "lee evans_7": [2]}, "table_header": ["round", "pick", "player", "position", "college"], "table_cont": [["1", "13", "lee evans", "wide receiver", "wisconsin"], ["1", "22", "jp losman", "quarterback", "tulane"], ["3", "74", "tim anderson", "defensive tackle", "ohio state"], ["4", "109", "tim euhus", "tight end", "oregon state"], ["7", "207", "dylan mcfarland", "offensive tackle", "montana"], ["7", "214", "jonathan smith", "wide receiver", "georgia tech"]], "query": "eq { hop { argmin { all_rows ; pick } ; player } ; lee evans } = true", "question": "lee evans had the earliest pick number of all these buffalo bills players ."}, {"topic": "list of appalachian regional commission counties", "wiki": "https://en.wikipedia.org/wiki/List_of_Appalachian_Regional_Commission_counties", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22815568-6.html.csv", "action": "ordinal", "sent": "the county that has the second highest unemployment rate out of the appalachian counties is allegany .", "annotation": {"row": "1", "col": "3", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "unemployment rate", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; unemployment rate ; 2 }"}, "county"], "result": "allegany", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; unemployment rate ; 2 } ; county }"}, "allegany"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; unemployment rate ; 2 } ; county } ; allegany } = true", "tointer": "select the row whose unemployment rate record of all rows is 2nd maximum . the county record of this row is allegany ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; unemployment rate ; 2 } ; county } ; allegany } = true", "interpret": "select the row whose unemployment rate record of all rows is 2nd maximum . the county record of this row is allegany .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "unemployment rate_5": 5, "2_6": 6, "county_7": 7, "allegany_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "unemployment rate_5": "unemployment rate", "2_6": "2", "county_7": "county", "allegany_8": "allegany"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "unemployment rate_5": [0], "2_6": [0], "county_7": [1], "allegany_8": [2]}, "table_header": ["county", "population", "unemployment rate", "market income per capita", "poverty rate", "status"], "table_cont": [["allegany", "49927", "5.8 %", "16850", "15.5 %", "- risk"], ["broome", "200536", "5.0 %", "24199", "12.8 %", "transitional"], ["cattaraugus", "83955", "5.5 %", "21285", "13.7 %", "transitional"], ["chautauqua", "136409", "4.9 %", "19622", "13.8 %", "transitional"], ["chemung", "91070", "5.1 %", "22513", "13.0 %", "transitional"], ["chenango", "51401", "5.5 %", "20896", "14.4 %", "transitional"], ["cortland", "48599", "5.7 %", "21134", "15.5 %", "transitional"], ["delaware", "48055", "4.9 %", "21160", "12.9 %", "transitional"], ["otsego", "61676", "4.9 %", "21819", "14.9 %", "transitional"], ["schoharie", "31582", "6.0 %", "23145", "11.4 %", "transitional"], ["schuyler", "19224", "5.4 %", "21042", "11.8 %", "transitional"], ["steuben", "98726", "5.6 %", "28065", "13.2 %", "transitional"], ["tioga", "51784", "4.8 %", "24885", "8.4 %", "transitional"]], "query": "eq { hop { nth_argmax { all_rows ; unemployment rate ; 2 } ; county } ; allegany } = true", "question": "the county that has the second highest unemployment rate out of the appalachian counties is allegany ."}, {"topic": "powerade tigers all - time roster", "wiki": "https://en.wikipedia.org/wiki/Powerade_Tigers_all-time_roster", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15463188-2.html.csv", "action": "unique", "sent": "ronjay buenafe is the only player in the powerade tigers all - time roster who was acquired via a rookie draft .", "annotation": {"scope": "all", "row": "12", "col": "5", "col_other": "1", "criterion": "equal", "value": "rookie draft", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "acquisition via", "rookie draft"], "result": null, "ind": 0, "tointer": "select the rows whose acquisition via record fuzzily matches to rookie draft .", "tostr": "filter_eq { all_rows ; acquisition via ; rookie draft }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; acquisition via ; rookie draft } }", "tointer": "select the rows whose acquisition via record fuzzily matches to rookie draft . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "acquisition via", "rookie draft"], "result": null, "ind": 0, "tointer": "select the rows whose acquisition via record fuzzily matches to rookie draft .", "tostr": "filter_eq { all_rows ; acquisition via ; rookie draft }"}, "name"], "result": "ronjay buenafe", "ind": 2, "tostr": "hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name }"}, "ronjay buenafe"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; ronjay buenafe }", "tointer": "the name record of this unqiue row is ronjay buenafe ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; acquisition via ; rookie draft } } ; eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; ronjay buenafe } } = true", "tointer": "select the rows whose acquisition via record fuzzily matches to rookie draft . there is only one such row in the table . the name record of this unqiue row is ronjay buenafe ."}, "logic_str": "and { only { filter_eq { all_rows ; acquisition via ; rookie draft } } ; eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; ronjay buenafe } } = true", "interpret": "select the rows whose acquisition via record fuzzily matches to rookie draft . there is only one such row in the table . the name record of this unqiue row is ronjay buenafe .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "acquisition via_7": 7, "rookie draft_8": 8, "str_eq_3": 3, "str_hop_2": 2, "name_9": 9, "ronjay buenafe_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "acquisition via_7": "acquisition via", "rookie draft_8": "rookie draft", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "name_9": "name", "ronjay buenafe_10": "ronjay buenafe"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "acquisition via_7": [0], "rookie draft_8": [0], "str_eq_3": [4], "str_hop_2": [3], "name_9": [2], "ronjay buenafe_10": [3]}, "table_header": ["name", "position", "number", "season", "acquisition via"], "table_cont": [["edwin bacani", "guard", "88", "2006", "trade"], ["froilan baguion", "guard", "17", "2008", "free agency"], ["estong ballesteros", "forward", "16", "2002", "free agency"], ["bryant basemore", "guard", "8", "2002", "import"], ["nic belasco", "forward", "3 , 33", "2008 - 2009 , 2012", "trade , free agency"], ["rashard bell", "forward", "1 , 3", "2007 , 2010", "import"], ["chris bolado", "center", "24", "2002 - 2003", "free agency"], ["ken bono", "center", "7", "2009 - 2010", "trade"], ["lawrence bonus", "center", "10", "2008 - 2009", "free agency"], ["torraye braggs", "center", "50", "2002", "import"], ["lowell briones", "forward", "4", "2002", "free agency"], ["ronjay buenafe", "guard", "9", "2007 - 2009", "rookie draft"]], "query": "and { only { filter_eq { all_rows ; acquisition via ; rookie draft } } ; eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; ronjay buenafe } } = true", "question": "ronjay buenafe is the only player in the powerade tigers all - time roster who was acquired via a rookie draft ."}, {"topic": "1979 vfl season", "wiki": "https://en.wikipedia.org/wiki/1979_VFL_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10823719-15.html.csv", "action": "count", "sent": "there was a total of 5 matches on 14 july 1979 .", "annotation": {"scope": "all", "criterion": "equal", "value": "14 july 1979", "result": "5", "col": "7", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "date", "14 july 1979"], "result": null, "ind": 0, "tointer": "select the rows whose date record fuzzily matches to 14 july 1979 .", "tostr": "filter_eq { all_rows ; date ; 14 july 1979 }"}], "result": "5", "ind": 1, "tostr": "count { filter_eq { all_rows ; date ; 14 july 1979 } }", "tointer": "select the rows whose date record fuzzily matches to 14 july 1979 . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; date ; 14 july 1979 } } ; 5 } = true", "tointer": "select the rows whose date record fuzzily matches to 14 july 1979 . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_eq { all_rows ; date ; 14 july 1979 } } ; 5 } = true", "interpret": "select the rows whose date record fuzzily matches to 14 july 1979 . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "date_5": 5, "14 july 1979_6": 6, "5_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "date_5": "date", "14 july 1979_6": "14 july 1979", "5_7": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "date_5": [0], "14 july 1979_6": [0], "5_7": [2]}, "table_header": ["home team", "home team score", "away team", "away team score", "venue", "crowd", "date"], "table_cont": [["melbourne", "24.23 ( 167 )", "south melbourne", "24.10 ( 154 )", "mcg", "15039", "14 july 1979"], ["footscray", "24.16 ( 160 )", "st kilda", "11.15 ( 81 )", "western oval", "13386", "14 july 1979"], ["collingwood", "10.16 ( 76 )", "north melbourne", "20.13 ( 133 )", "victoria park", "30415", "14 july 1979"], ["carlton", "18.18 ( 126 )", "essendon", "12.11 ( 83 )", "princes park", "44661", "14 july 1979"], ["hawthorn", "11.13 ( 79 )", "geelong", "11.12 ( 78 )", "vfl park", "20777", "14 july 1979"], ["richmond", "22.20 ( 152 )", "fitzroy", "20.15 ( 135 )", "scg", "17140", "15 july 1979"]], "query": "eq { count { filter_eq { all_rows ; date ; 14 july 1979 } } ; 5 } = true", "question": "there was a total of 5 matches on 14 july 1979 ."}, {"topic": "2004 buffalo bills season", "wiki": "https://en.wikipedia.org/wiki/2004_Buffalo_Bills_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18732289-1.html.csv", "action": "aggregation", "sent": "the average round in which these players were picked is approximately 3.8 .", "annotation": {"scope": "all", "col": "1", "type": "average", "result": "3.8", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "avg", "args": ["all_rows", "round"], "result": "3.8", "ind": 0, "tostr": "avg { all_rows ; round }"}, "3.8"], "result": true, "ind": 1, "tostr": "round_eq { avg { all_rows ; round } ; 3.8 } = true", "tointer": "the average of the round record of all rows is 3.8 ."}, "logic_str": "round_eq { avg { all_rows ; round } ; 3.8 } = true", "interpret": "the average of the round record of all rows is 3.8 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "avg_0": 0, "all_rows_3": 3, "round_4": 4, "3.8_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "avg_0": "avg", "all_rows_3": "all_rows", "round_4": "round", "3.8_5": "3.8"}, "g_adj": {"eq_1": [2], "result_2": [], "avg_0": [1], "all_rows_3": [0], "round_4": [0], "3.8_5": [1]}, "table_header": ["round", "pick", "player", "position", "college"], "table_cont": [["1", "13", "lee evans", "wide receiver", "wisconsin"], ["1", "22", "jp losman", "quarterback", "tulane"], ["3", "74", "tim anderson", "defensive tackle", "ohio state"], ["4", "109", "tim euhus", "tight end", "oregon state"], ["7", "207", "dylan mcfarland", "offensive tackle", "montana"], ["7", "214", "jonathan smith", "wide receiver", "georgia tech"]], "query": "round_eq { avg { all_rows ; round } ; 3.8 } = true", "question": "the average round in which these players were picked is approximately 3.8 ."}, {"topic": "2008 nascar craftsman truck series", "wiki": "https://en.wikipedia.org/wiki/2008_NASCAR_Craftsman_Truck_Series", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14292964-22.html.csv", "action": "comparative", "sent": "kyle busch had a lower car number than matt crafton .", "annotation": {"row_1": "6", "row_2": "3", "col": "2", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "driver", "kyle busch"], "result": null, "ind": 0, "tointer": "select the rows whose driver record fuzzily matches to kyle busch .", "tostr": "filter_eq { all_rows ; driver ; kyle busch }"}, "car"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; driver ; kyle busch } ; car }", "tointer": "select the rows whose driver record fuzzily matches to kyle busch . take the car record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "driver", "matt crafton"], "result": null, "ind": 1, "tointer": "select the rows whose driver record fuzzily matches to matt crafton .", "tostr": "filter_eq { all_rows ; driver ; matt crafton }"}, "car"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; driver ; matt crafton } ; car }", "tointer": "select the rows whose driver record fuzzily matches to matt crafton . take the car record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; driver ; kyle busch } ; car } ; hop { filter_eq { all_rows ; driver ; matt crafton } ; car } } = true", "tointer": "select the rows whose driver record fuzzily matches to kyle busch . take the car record of this row . select the rows whose driver record fuzzily matches to matt crafton . take the car record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; driver ; kyle busch } ; car } ; hop { filter_eq { all_rows ; driver ; matt crafton } ; car } } = true", "interpret": "select the rows whose driver record fuzzily matches to kyle busch . take the car record of this row . select the rows whose driver record fuzzily matches to matt crafton . take the car record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "driver_7": 7, "kyle busch_8": 8, "car_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "driver_11": 11, "matt crafton_12": 12, "car_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "driver_7": "driver", "kyle busch_8": "kyle busch", "car_9": "car", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "driver_11": "driver", "matt crafton_12": "matt crafton", "car_13": "car"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "driver_7": [0], "kyle busch_8": [0], "car_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "driver_11": [1], "matt crafton_12": [1], "car_13": [3]}, "table_header": ["pos", "car", "driver", "make", "team"], "table_cont": [["1", "5", "mike skinner", "toyota", "bill davis racing"], ["2", "99", "erik darnell", "ford", "roush fenway racing"], ["3", "88", "matt crafton", "chevrolet", "thorsport racing"], ["4", "15", "john andretti", "toyota", "billy ballew motorsports"], ["5", "33", "ron hornaday", "chevrolet", "kevin harvick incorporated"], ["6", "51", "kyle busch", "toyota", "billy ballew motorsports"], ["7", "40", "jeff green", "chevrolet", "key motorsports"], ["8", "7", "t j bell", "chevrolet", "the racer 's group"], ["9", "30", "todd bodine", "toyota", "germain racing"], ["10", "81", "donny lia r", "chevrolet", "randy moss motorsports"]], "query": "less { hop { filter_eq { all_rows ; driver ; kyle busch } ; car } ; hop { filter_eq { all_rows ; driver ; matt crafton } ; car } } = true", "question": "kyle busch had a lower car number than matt crafton ."}, {"topic": "steam locomotives of ireland", "wiki": "https://en.wikipedia.org/wiki/Steam_locomotives_of_Ireland", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1290024-9.html.csv", "action": "majority", "sent": "most of the steam locomotives of ireland were manufactured by beyer , peacock & co .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "equal", "value": "beyer , peacock & co", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "manufacturer", "beyer , peacock & co"], "result": true, "ind": 0, "tointer": "for the manufacturer records of all rows , most of them fuzzily match to beyer , peacock & co .", "tostr": "most_eq { all_rows ; manufacturer ; beyer , peacock & co } = true"}, "logic_str": "most_eq { all_rows ; manufacturer ; beyer , peacock & co } = true", "interpret": "for the manufacturer records of all rows , most of them fuzzily match to beyer , peacock & co .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "manufacturer_3": 3, "beyer, peacock & co_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "manufacturer_3": "manufacturer", "beyer, peacock & co_4": "beyer , peacock & co"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "manufacturer_3": [0], "beyer, peacock & co_4": [0]}, "table_header": ["class", "type", "fleet numbers", "quantity made", "manufacturer", "date made", "1958 ci\u00e9", "1958 uta", "date withdrawn"], "table_cont": [["t", "4 - 4 - 2t", "185 - 189", "5", "beyer , peacock & co", "1913", "1", "4", "1959 - 1964"], ["sg2", "0 - 6 - 0", "180 - 184", "5", "beyer , peacock & co", "1915", "3", "2", "1961 - 1963"], ["s2", "4 - 4 - 0", "190 - 192", "3", "beyer , peacock & co", "1915", "1", "2", "1960 - 65"], ["u", "4 - 4 - 0", "196 - 200", "5", "beyer , peacock & co", "1915", "3", "2", "1959 - 1963"], ["sg3", "0 - 6 - 0", "6 - 8 , 13 - 14 , 20 , 47 - 49 , 96 - 97 , 117 - 118 , 201 - 202", "15", "beyer , peacock & co", "1920 - 1921", "7", "8", "1960 - 1967"], ["t2", "4 - 4 - 2t", "1 - 5", "5", "beyer , peacock & co", "1921", "2", "3", "1959 - 1964"], ["t2", "4 - 4 - 2t", "21 , 30 , 115 - 116 , 139 , 142 - 144 , 147 - 148", "10", "nasmyth , wilson & co", "1924", "6", "4", "1958 - 1963"], ["sg2", "0 - 6 - 0", "15 - 19", "5", "nasmyth , wilson & co", "1924 - 1926", "2", "3", "1959 - 1965"], ["crane", "0 - 6 - 0ct", "31", "1", "hawthorn leslie", "1928", "0", "0", "1963"], ["t2", "4 - 4 - 2t", "62 - 66", "5", "beyer , peacock & co", "1929 - 1930", "3", "2", "1959 - 1960"], ["v", "4 - 4 - 0", "83 - 87", "5", "beyer , peacock & co", "1932", "2", "3", "1959 - 1963"]], "query": "most_eq { all_rows ; manufacturer ; beyer , peacock & co } = true", "question": "most of the steam locomotives of ireland were manufactured by beyer , peacock & co ."}, {"topic": "2003 in paraguayan football", "wiki": "https://en.wikipedia.org/wiki/2003_in_Paraguayan_football", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14911550-1.html.csv", "action": "superlative", "sent": "the libertad team had the most points in the 2003 paraguayan football season .", "annotation": {"scope": "all", "col_superlative": "9", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "points"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; points }"}, "team"], "result": "libertad", "ind": 1, "tostr": "hop { argmax { all_rows ; points } ; team }"}, "libertad"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; points } ; team } ; libertad } = true", "tointer": "select the row whose points record of all rows is maximum . the team record of this row is libertad ."}, "logic_str": "eq { hop { argmax { all_rows ; points } ; team } ; libertad } = true", "interpret": "select the row whose points record of all rows is maximum . the team record of this row is libertad .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "points_5": 5, "team_6": 6, "libertad_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "points_5": "points", "team_6": "team", "libertad_7": "libertad"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "points_5": [0], "team_6": [1], "libertad_7": [2]}, "table_header": ["position", "team", "played", "wins", "draws", "losses", "scored", "conceded", "points"], "table_cont": [["1", "libertad", "9", "6", "3", "0", "13", "3", "21"], ["2", "cerro porte\u00f1o", "9", "5", "3", "1", "20", "8", "18"], ["3", "olimpia", "9", "4", "4", "1", "16", "11", "16"], ["4", "sol de am\u00e9rica", "9", "3", "4", "2", "12", "7", "13"], ["5", "tacuary", "9", "4", "1", "4", "15", "16", "13"], ["6", "guaran\u00ed", "9", "3", "3", "3", "18", "20", "12"], ["7", "sportivo luque\u00f1o", "9", "3", "2", "4", "14", "12", "11"], ["8", "sport colombia", "9", "2", "2", "5", "14", "20", "8"], ["9", "12 de octubre", "9", "1", "4", "4", "8", "18", "7"], ["10", "san lorenzo", "9", "1", "0", "8", "10", "25", "3"]], "query": "eq { hop { argmax { all_rows ; points } ; team } ; libertad } = true", "question": "the libertad team had the most points in the 2003 paraguayan football season ."}, {"topic": "rev. ( tv series )", "wiki": "https://en.wikipedia.org/wiki/Rev._%28TV_series%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27218002-2.html.csv", "action": "unique", "sent": "the first episode of rev. was the only episode of the first six with over 2 million viewers .", "annotation": {"scope": "all", "row": "1", "col": "6", "col_other": "1", "criterion": "greater_than", "value": "2.00 million", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_greater", "args": ["all_rows", "ratings", "2.00 million"], "result": null, "ind": 0, "tointer": "select the rows whose ratings record is greater than 2.00 million .", "tostr": "filter_greater { all_rows ; ratings ; 2.00 million }"}], "result": true, "ind": 1, "tostr": "only { filter_greater { all_rows ; ratings ; 2.00 million } }", "tointer": "select the rows whose ratings record is greater than 2.00 million . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_greater", "args": ["all_rows", "ratings", "2.00 million"], "result": null, "ind": 0, "tointer": "select the rows whose ratings record is greater than 2.00 million .", "tostr": "filter_greater { all_rows ; ratings ; 2.00 million }"}, "episode"], "result": "1", "ind": 2, "tostr": "hop { filter_greater { all_rows ; ratings ; 2.00 million } ; episode }"}, "1"], "result": true, "ind": 3, "tostr": "eq { hop { filter_greater { all_rows ; ratings ; 2.00 million } ; episode } ; 1 }", "tointer": "the episode record of this unqiue row is 1 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_greater { all_rows ; ratings ; 2.00 million } } ; eq { hop { filter_greater { all_rows ; ratings ; 2.00 million } ; episode } ; 1 } } = true", "tointer": "select the rows whose ratings record is greater than 2.00 million . there is only one such row in the table . the episode record of this unqiue row is 1 ."}, "logic_str": "and { only { filter_greater { all_rows ; ratings ; 2.00 million } } ; eq { hop { filter_greater { all_rows ; ratings ; 2.00 million } ; episode } ; 1 } } = true", "interpret": "select the rows whose ratings record is greater than 2.00 million . there is only one such row in the table . the episode record of this unqiue row is 1 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_greater_0": 0, "all_rows_6": 6, "ratings_7": 7, "2.00 million_8": 8, "eq_3": 3, "num_hop_2": 2, "episode_9": 9, "1_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_greater_0": "filter_greater", "all_rows_6": "all_rows", "ratings_7": "ratings", "2.00 million_8": "2.00 million", "eq_3": "eq", "num_hop_2": "num_hop", "episode_9": "episode", "1_10": "1"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_greater_0": [1, 2], "all_rows_6": [0], "ratings_7": [0], "2.00 million_8": [0], "eq_3": [4], "num_hop_2": [3], "episode_9": [2], "1_10": [3]}, "table_header": ["episode", "title", "directed by", "written by", "originalairdate", "ratings"], "table_cont": [["1", "episode 1", "peter cattaneo", "james wood", "10 november 2011", "2.29 million"], ["2", "episode 2", "peter cattaneo", "james wood", "17 november 2011", "1.63 million"], ["3", "episode 3", "peter cattaneo", "james wood", "24 november 2011", "1.37 million"], ["4", "episode 4", "peter cattaneo", "james wood", "1 december 2011", "1.24 million"], ["5", "episode 5", "peter cattaneo", "fintan ryan", "8 december 2011", "1.24 million"], ["6", "episode 6", "peter cattaneo", "james wood", "15 december 2011", "1.62 million"]], "query": "and { only { filter_greater { all_rows ; ratings ; 2.00 million } } ; eq { hop { filter_greater { all_rows ; ratings ; 2.00 million } ; episode } ; 1 } } = true", "question": "the first episode of rev. was the only episode of the first six with over 2 million viewers ."}, {"topic": "vissel kobe", "wiki": "https://en.wikipedia.org/wiki/Vissel_Kobe", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1082589-1.html.csv", "action": "superlative", "sent": "vissel kobe 's highest attendance per game was in the 2004 season .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "8", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance / g"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance / g }"}, "season"], "result": "2004", "ind": 1, "tostr": "hop { argmax { all_rows ; attendance / g } ; season }"}, "2004"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; attendance / g } ; season } ; 2004 } = true", "tointer": "select the row whose attendance / g record of all rows is maximum . the season record of this row is 2004 ."}, "logic_str": "eq { hop { argmax { all_rows ; attendance / g } ; season } ; 2004 } = true", "interpret": "select the row whose attendance / g record of all rows is maximum . the season record of this row is 2004 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "attendance / g_5": 5, "season_6": 6, "2004_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "attendance / g_5": "attendance / g", "season_6": "season", "2004_7": "2004"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "attendance / g_5": [0], "season_6": [1], "2004_7": [2]}, "table_header": ["season", "div", "tms", "pos", "attendance / g", "emperor 's cup"], "table_cont": [["1997", "j1", "17", "16", "6567", "4th round"], ["1998", "j1", "18", "17", "7686", "3rd round"], ["1999", "j1", "16", "10", "7691", "3rd round"], ["2000", "j1", "16", "13", "7512", "semi - final"], ["2001", "j1", "16", "12", "13872", "4th round"], ["2002", "j1", "16", "14", "10467", "3rd round"], ["2003", "j1", "16", "13", "11195", "quarter - final"], ["2004", "j1", "16", "11", "15735", "4th round"], ["2005", "j1", "18", "18", "14913", "4th round"], ["2006", "j2", "13", "3", "6910", "3rd round"], ["2007", "j1", "18", "10", "12460", "5th round"], ["2008", "j1", "18", "10", "12981", "5th round"], ["2009", "j1", "18", "14", "13068", "4th round"], ["2010", "j1", "18", "15", "12824", "3rd round"], ["2011", "j1", "18", "9", "13233", "3rd round"], ["2012", "j1", "18", "16", "14638", "2nd round"]], "query": "eq { hop { argmax { all_rows ; attendance / g } ; season } ; 2004 } = true", "question": "vissel kobe 's highest attendance per game was in the 2004 season ."}, {"topic": "list of hewitts and nuttalls in england", "wiki": "https://en.wikipedia.org/wiki/List_of_Hewitts_and_Nuttalls_in_England", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10814429-12.html.csv", "action": "count", "sent": "two of the hewitts and nuttalls in england belongs to the class of nutfall .", "annotation": {"scope": "all", "criterion": "equal", "value": "nuttall", "result": "2", "col": "4", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "class", "nuttall"], "result": null, "ind": 0, "tointer": "select the rows whose class record fuzzily matches to nuttall .", "tostr": "filter_eq { all_rows ; class ; nuttall }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; class ; nuttall } }", "tointer": "select the rows whose class record fuzzily matches to nuttall . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; class ; nuttall } } ; 2 } = true", "tointer": "select the rows whose class record fuzzily matches to nuttall . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; class ; nuttall } } ; 2 } = true", "interpret": "select the rows whose class record fuzzily matches to nuttall . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "class_5": 5, "nuttall_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "class_5": "class", "nuttall_6": "nuttall", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "class_5": [0], "nuttall_6": [0], "2_7": [2]}, "table_header": ["peak", "height ( m )", "prom ( m )", "class", "parent"], "table_cont": [["whernside", "736", "408", "marilyn", "cross fell"], ["ingleborough", "724", "428", "marilyn", "cross fell"], ["great whernside", "704", "288", "marilyn", "whernside"], ["buckden pike", "702", "207", "marilyn", "great whernside"], ["pen - y - ghent", "694", "306", "marilyn", "whernside"], ["great coum", "687", "221", "marilyn", "whernside"], ["plover hill", "680", "59", "hewitt", "pen - y - ghent"], ["great knoutberry hill", "672", "254", "marilyn", "great whernside"], ["dodd fell hill", "668", "230", "marilyn", "great knoutberry hill"], ["fountains fell", "668", "243", "marilyn", "pen - y - ghent"], ["fountains fell south top", "662", "15", "nuttall", "fountains fell"], ["simon fell", "650", "35", "hewitt", "ingleborough"], ["yockenthwaite moor", "643", "86", "hewitt", "dodd fell hill"], ["green hill", "628", "24", "nuttall", "great coum"], ["gragareth", "627", "30", "hewitt", "great coum"], ["darnbrook fell", "624", "40", "hewitt", "fountains fell"], ["drumaldrace", "614", "66", "hewitt", "dodd fell hill"], ["birks fell", "610", "158", "marilyn", "pen - y - ghent"]], "query": "eq { count { filter_eq { all_rows ; class ; nuttall } } ; 2 } = true", "question": "two of the hewitts and nuttalls in england belongs to the class of nutfall ."}, {"topic": "rt\u00e9 radio", "wiki": "https://en.wikipedia.org/wiki/RT%C3%89_Radio", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18475946-2.html.csv", "action": "comparative", "sent": "mullaghanish has a higher 2fm ( mhz ) than mount leinster .", "annotation": {"row_1": "6", "row_2": "5", "col": "4", "col_other": "1", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "transmitter", "mullaghanish"], "result": null, "ind": 0, "tointer": "select the rows whose transmitter record fuzzily matches to mullaghanish .", "tostr": "filter_eq { all_rows ; transmitter ; mullaghanish }"}, "2fm ( mhz )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; transmitter ; mullaghanish } ; 2fm ( mhz ) }", "tointer": "select the rows whose transmitter record fuzzily matches to mullaghanish . take the 2fm ( mhz ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "transmitter", "mount leinster"], "result": null, "ind": 1, "tointer": "select the rows whose transmitter record fuzzily matches to mount leinster .", "tostr": "filter_eq { all_rows ; transmitter ; mount leinster }"}, "2fm ( mhz )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; transmitter ; mount leinster } ; 2fm ( mhz ) }", "tointer": "select the rows whose transmitter record fuzzily matches to mount leinster . take the 2fm ( mhz ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; transmitter ; mullaghanish } ; 2fm ( mhz ) } ; hop { filter_eq { all_rows ; transmitter ; mount leinster } ; 2fm ( mhz ) } } = true", "tointer": "select the rows whose transmitter record fuzzily matches to mullaghanish . take the 2fm ( mhz ) record of this row . select the rows whose transmitter record fuzzily matches to mount leinster . take the 2fm ( mhz ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; transmitter ; mullaghanish } ; 2fm ( mhz ) } ; hop { filter_eq { all_rows ; transmitter ; mount leinster } ; 2fm ( mhz ) } } = true", "interpret": "select the rows whose transmitter record fuzzily matches to mullaghanish . take the 2fm ( mhz ) record of this row . select the rows whose transmitter record fuzzily matches to mount leinster . take the 2fm ( mhz ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "transmitter_7": 7, "mullaghanish_8": 8, "2fm (mhz)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "transmitter_11": 11, "mount leinster_12": 12, "2fm (mhz)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "transmitter_7": "transmitter", "mullaghanish_8": "mullaghanish", "2fm (mhz)_9": "2fm ( mhz )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "transmitter_11": "transmitter", "mount leinster_12": "mount leinster", "2fm (mhz)_13": "2fm ( mhz )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "transmitter_7": [0], "mullaghanish_8": [0], "2fm (mhz)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "transmitter_11": [1], "mount leinster_12": [1], "2fm (mhz)_13": [3]}, "table_header": ["transmitter", "service area", "radio 1 ( mhz )", "2fm ( mhz )", "rnag ( mhz )", "lyric fm ( mhz )", "erp ( kw )"], "table_cont": [["cairn hill", "the midlands", "89.8", "n / a", "n / a", "n / a", "16"], ["clermont carn", "ne ireland , northern ireland", "87.8", "97.0", "102.7", "95.2", "40"], ["kippure", "dublin , wicklow , se midlands", "89.1", "91.3", "93.5", "98.7", "40"], ["maghera", "west ireland", "88.8", "91.0", "93.2", "98.4", "160"], ["mount leinster", "se ireland", "89.6", "91.8", "94.0", "99.2", "100"], ["mullaghanish", "sw ireland", "90.0", "92.2", "94.4", "99.6", "160"], ["three rock", "dublin city and county", "88.5", "90.7", "92.9", "96.7", "12.5"], ["truskmore", "nw ireland", "88.2", "90.4", "92.6", "97.8", "160"]], "query": "greater { hop { filter_eq { all_rows ; transmitter ; mullaghanish } ; 2fm ( mhz ) } ; hop { filter_eq { all_rows ; transmitter ; mount leinster } ; 2fm ( mhz ) } } = true", "question": "mullaghanish has a higher 2fm ( mhz ) than mount leinster ."}, {"topic": "piers courage", "wiki": "https://en.wikipedia.org/wiki/Piers_Courage", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1226532-1.html.csv", "action": "count", "sent": "piers courage only received points in two of the formula one world championship races he entered .", "annotation": {"scope": "all", "criterion": "not_equal", "value": "0", "result": "2", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_not_eq", "args": ["all_rows", "points", "0"], "result": null, "ind": 0, "tointer": "select the rows whose points record is not equal to 0 .", "tostr": "filter_not_eq { all_rows ; points ; 0 }"}], "result": "2", "ind": 1, "tostr": "count { filter_not_eq { all_rows ; points ; 0 } }", "tointer": "select the rows whose points record is not equal to 0 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_not_eq { all_rows ; points ; 0 } } ; 2 } = true", "tointer": "select the rows whose points record is not equal to 0 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_not_eq { all_rows ; points ; 0 } } ; 2 } = true", "interpret": "select the rows whose points record is not equal to 0 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_not_eq_0": 0, "all_rows_4": 4, "points_5": 5, "0_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_not_eq_0": "filter_not_eq", "all_rows_4": "all_rows", "points_5": "points", "0_6": "0", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_not_eq_0": [1], "all_rows_4": [0], "points_5": [0], "0_6": [0], "2_7": [2]}, "table_header": ["year", "entrant", "chassis", "engine", "points"], "table_cont": [["1966", "ron harris / team lotus", "lotus 44 f2", "cosworth straight - 4", "0"], ["1967", "reg parnell racing", "lotus 25", "brm", "0"], ["1967", "reg parnell racing", "brm p261", "brm", "0"], ["1968", "reg parnell racing", "brm p126", "brm", "4"], ["1969", "frank williams racing cars", "brabham bt26a", "ford", "16"], ["1970", "frank williams racing cars", "de tomaso 505", "ford", "0"]], "query": "eq { count { filter_not_eq { all_rows ; points ; 0 } } ; 2 } = true", "question": "piers courage only received points in two of the formula one world championship races he entered ."}, {"topic": "2008 manx grand prix", "wiki": "https://en.wikipedia.org/wiki/2008_Manx_Grand_Prix", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18649514-5.html.csv", "action": "unique", "sent": "the only non honda team to rank was team 350cc aermacchi .", "annotation": {"scope": "all", "row": "8", "col": "3", "col_other": "n/a", "criterion": "fuzzily_match", "value": "aermacchi", "subset": null}, "logic": {"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "team", "aermacchi"], "result": null, "ind": 0, "tointer": "select the rows whose team record fuzzily matches to aermacchi .", "tostr": "filter_eq { all_rows ; team ; aermacchi }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; team ; aermacchi } } = true", "tointer": "select the rows whose team record fuzzily matches to aermacchi . there is only one such row in the table ."}, "logic_str": "only { filter_eq { all_rows ; team ; aermacchi } } = true", "interpret": "select the rows whose team record fuzzily matches to aermacchi . there is only one such row in the table .", "num_func": 2, "nid": 2, "g_ids": {"only_1": 1, "result_2": 2, "filter_str_eq_0": 0, "all_rows_3": 3, "team_4": 4, "aermacchi_5": 5}, "g_ids_features": {"only_1": "only", "result_2": "true", "filter_str_eq_0": "filter_str_eq", "all_rows_3": "all_rows", "team_4": "team", "aermacchi_5": "aermacchi"}, "g_adj": {"only_1": [2], "result_2": [], "filter_str_eq_0": [1], "all_rows_3": [0], "team_4": [0], "aermacchi_5": [0]}, "table_header": ["rank", "rider", "team", "speed", "time"], "table_cont": [["1", "roy richardson", "349cc honda", "99.814 mph", "1:08.02.42"], ["2", "paul coward", "348cc k4 honda", "98.136 mph", "1:09.12.26"], ["3", "ryan farquhar", "347cc honda", "97.873 mph", "1:09.23.39"], ["4", "rich hawkins", "348cc k4 honda", "97.743 mph", "1:09.29.85"], ["5", "wattie brown", "350cc honda", "94.349 mph", "1:11.58.88"], ["6", "john burrows", "350cc honda", "93.929 mph", "1:12.18.19"], ["7", "bob price", "350cc honda", "93.537 mph", "1:12.36.41"], ["8", "paul dobbs", "350cc aermacchi", "93.161 mph", "1:12.53.99"], ["9", "dave madsen - mygdal", "349cc honda", "92.922 mph", "1:13.05.25"], ["10", "alec whitwell", "349cc honda", "92.234 mph", "1:13.37.95"]], "query": "only { filter_eq { all_rows ; team ; aermacchi } } = true", "question": "the only non honda team to rank was team 350cc aermacchi ."}, {"topic": "k league challenge", "wiki": "https://en.wikipedia.org/wiki/K_League_Challenge", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15795426-1.html.csv", "action": "superlative", "sent": "the highest capacity in the k league challenge is when the home venue was gwangju world cup stadium .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "4", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "capacity"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; capacity }"}, "home venue"], "result": "gwangju world cup stadium", "ind": 1, "tostr": "hop { argmax { all_rows ; capacity } ; home venue }"}, "gwangju world cup stadium"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; capacity } ; home venue } ; gwangju world cup stadium } = true", "tointer": "select the row whose capacity record of all rows is maximum . the home venue record of this row is gwangju world cup stadium ."}, "logic_str": "eq { hop { argmax { all_rows ; capacity } ; home venue } ; gwangju world cup stadium } = true", "interpret": "select the row whose capacity record of all rows is maximum . the home venue record of this row is gwangju world cup stadium .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "capacity_5": 5, "home venue_6": 6, "gwangju world cup stadium_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "capacity_5": "capacity", "home venue_6": "home venue", "gwangju world cup stadium_7": "gwangju world cup stadium"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "capacity_5": [0], "home venue_6": [1], "gwangju world cup stadium_7": [2]}, "table_header": ["team", "city", "state", "home venue", "capacity"], "table_cont": [["fc anyang", "anyang", "gyeonggi", "anyang stadium", "17143"], ["bucheon fc 1995", "bucheon", "gyeonggi", "bucheon stadium", "34545"], ["chungju hummel fc", "chungju", "chungbuk", "chungju stadium", "15000"], ["goyang hi fc", "goyang", "gyeonggi", "goyang stadium", "41311"], ["gwangju fc", "gwangju", "jeolla", "gwangju world cup stadium", "44118"], ["police fc", "n / a", "n / a", "n / a", "n / a"], ["sangju sangmu", "sangju", "gyeongbuk", "sangju civic stadium", "15042"], ["suwon fc", "suwon", "gyeonggi", "suwon sports complex", "24670"]], "query": "eq { hop { argmax { all_rows ; capacity } ; home venue } ; gwangju world cup stadium } = true", "question": "the highest capacity in the k league challenge is when the home venue was gwangju world cup stadium ."}, {"topic": "ennio morricone", "wiki": "https://en.wikipedia.org/wiki/Ennio_Morricone", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10277-6.html.csv", "action": "majority", "sent": "the majority of ennio morricone 's nominations were for best original score .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "best original score", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "category", "best original score"], "result": true, "ind": 0, "tointer": "for the category records of all rows , most of them fuzzily match to best original score .", "tostr": "most_eq { all_rows ; category ; best original score } = true"}, "logic_str": "most_eq { all_rows ; category ; best original score } = true", "interpret": "for the category records of all rows , most of them fuzzily match to best original score .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "category_3": 3, "best original score_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "category_3": "category", "best original score_4": "best original score"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "category_3": [0], "best original score_4": [0]}, "table_header": ["year", "director", "project", "category", "result"], "table_cont": [["1988", "brian de palma", "the untouchables", "best original score", "won"], ["1995", "mike nichols", "wolf", "best original score", "nominated"], ["1997", "giuseppe tornatore", "the star maker", "best original score", "nominated"], ["1999", "warren beatty", "bulworth", "best original score", "nominated"], ["2007", "sergio leone", "once upon a time in the west", "best instrumental performance", "won"], ["2009", "sergio leone", "the good , the bad and the ugly", "grammy hall of fame award", "won"]], "query": "most_eq { all_rows ; category ; best original score } = true", "question": "the majority of ennio morricone 's nominations were for best original score ."}, {"topic": "2007 u.s. women 's open golf championship", "wiki": "https://en.wikipedia.org/wiki/2007_U.S._Women%27s_Open_Golf_Championship", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18369370-4.html.csv", "action": "unique", "sent": "angela park was the only player in the 2007 u.s. women 's open golf championship from brazil .", "annotation": {"scope": "all", "row": "2", "col": "3", "col_other": "2", "criterion": "equal", "value": "brazil", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "brazil"], "result": null, "ind": 0, "tointer": "select the rows whose country record fuzzily matches to brazil .", "tostr": "filter_eq { all_rows ; country ; brazil }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; country ; brazil } }", "tointer": "select the rows whose country record fuzzily matches to brazil . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "brazil"], "result": null, "ind": 0, "tointer": "select the rows whose country record fuzzily matches to brazil .", "tostr": "filter_eq { all_rows ; country ; brazil }"}, "player"], "result": "angela park", "ind": 2, "tostr": "hop { filter_eq { all_rows ; country ; brazil } ; player }"}, "angela park"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; country ; brazil } ; player } ; angela park }", "tointer": "the player record of this unqiue row is angela park ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; country ; brazil } } ; eq { hop { filter_eq { all_rows ; country ; brazil } ; player } ; angela park } } = true", "tointer": "select the rows whose country record fuzzily matches to brazil . there is only one such row in the table . the player record of this unqiue row is angela park ."}, "logic_str": "and { only { filter_eq { all_rows ; country ; brazil } } ; eq { hop { filter_eq { all_rows ; country ; brazil } ; player } ; angela park } } = true", "interpret": "select the rows whose country record fuzzily matches to brazil . there is only one such row in the table . the player record of this unqiue row is angela park .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "country_7": 7, "brazil_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "angela park_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "country_7": "country", "brazil_8": "brazil", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "angela park_10": "angela park"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "country_7": [0], "brazil_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "angela park_10": [3]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["1", "cristie kerr", "united states", "71 + 72 + 66 + 70 = 279", "- 5", "560000"], ["t2", "angela park", "brazil", "68 + 69 + 74 + 70 = 281", "- 3", "271022"], ["t2", "lorena ochoa", "mexico", "71 + 71 + 68 + 71 = 281", "- 3", "271022"], ["t4", "se ri pak", "south korea", "74 + 72 + 68 + 68 = 282", "- 2", "130549"], ["t4", "inbee park", "south korea", "69 + 73 + 71 + 69 = 282", "- 2", "130549"], ["6", "jiyai shin", "south korea", "70 + 69 + 71 + 74 = 284", "e", "103581"], ["7", "jee young lee", "south korea", "72 + 71 + 71 + 71 = 285", "+ 1", "93031"], ["t8", "mi hyun kim", "south korea", "71 + 75 + 70 + 70 = 286", "+ 2", "82464"], ["t8", "jeong jang", "south korea", "72 + 71 + 70 + 73 = 286", "+ 2", "82464"], ["t10", "ai miyazato", "japan", "73 + 73 + 72 + 69 = 287", "+ 3", "66177"], ["t10", "kyeong bae", "south korea", "74 + 71 + 72 + 70 = 287", "+ 3", "66177"], ["t10", "julieta granada", "paraguay", "70 + 69 + 75 + 73 = 287", "+ 3", "66177"], ["t10", "morgan pressel", "united states", "71 + 70 + 69 + 77 = 287", "+ 3", "66177"]], "query": "and { only { filter_eq { all_rows ; country ; brazil } } ; eq { hop { filter_eq { all_rows ; country ; brazil } ; player } ; angela park } } = true", "question": "angela park was the only player in the 2007 u.s. women 's open golf championship from brazil ."}, {"topic": "1979 philadelphia eagles season", "wiki": "https://en.wikipedia.org/wiki/1979_Philadelphia_Eagles_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16677963-2.html.csv", "action": "ordinal", "sent": "in the 1979 philadelphia eagles season , the 2nd highest crowd was in week 15 .", "annotation": {"row": "15", "col": "5", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "attendance", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; attendance ; 2 }"}, "week"], "result": "15", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; attendance ; 2 } ; week }"}, "15"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; week } ; 15 } = true", "tointer": "select the row whose attendance record of all rows is 2nd maximum . the week record of this row is 15 ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; week } ; 15 } = true", "interpret": "select the row whose attendance record of all rows is 2nd maximum . the week record of this row is 15 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "2_6": 6, "week_7": 7, "15_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "2_6": "2", "week_7": "week", "15_8": "15"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "2_6": [0], "week_7": [1], "15_8": [2]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 2 , 1979", "new york giants", "w 23 - 17", "67366"], ["2", "september 10 , 1979", "atlanta falcons", "l 14 - 10", "66935"], ["3", "september 16 , 1979", "new orleans saints", "w 26 - 14", "54212"], ["4", "september 23 , 1979", "new york giants", "w 17 - 13", "74265"], ["5", "september 30 , 1979", "pittsburgh steelers", "w 17 - 14", "70352"], ["6", "october 7 , 1979", "washington redskins", "w 28 - 17", "69142"], ["7", "october 14 , 1979", "st louis cardinals", "w 24 - 20", "48367"], ["8", "october 21 , 1979", "washington redskins", "l 17 - 7", "54442"], ["9", "october 28 , 1979", "cincinnati bengals", "l 37 - 13", "42036"], ["10", "november 4 , 1979", "cleveland browns", "l 24 - 19", "69019"], ["11", "november 12 , 1979", "dallas cowboys", "w 31 - 21", "62417"], ["12", "november 18 , 1979", "st louis cardinals", "w 16 - 13", "70235"], ["13", "november 25 , 1979", "green bay packers", "w 21 - 10", "50023"], ["14", "december 2 , 1979", "detroit lions", "w 44 - 7", "66128"], ["15", "december 8 , 1979", "dallas cowboys", "l 24 - 17", "71434"], ["16", "december 16 , 1979", "houston oilers", "w 26 - 20", "49407"]], "query": "eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; week } ; 15 } = true", "question": "in the 1979 philadelphia eagles season , the 2nd highest crowd was in week 15 ."}, {"topic": "1992 toronto blue jays season", "wiki": "https://en.wikipedia.org/wiki/1992_Toronto_Blue_Jays_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12206491-10.html.csv", "action": "unique", "sent": "the only game that reardon lost took place on october 18 .", "annotation": {"scope": "all", "row": "2", "col": "4", "col_other": "1", "criterion": "fuzzily_match", "value": "reardon", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "loss", "reardon"], "result": null, "ind": 0, "tointer": "select the rows whose loss record fuzzily matches to reardon .", "tostr": "filter_eq { all_rows ; loss ; reardon }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; loss ; reardon } }", "tointer": "select the rows whose loss record fuzzily matches to reardon . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "loss", "reardon"], "result": null, "ind": 0, "tointer": "select the rows whose loss record fuzzily matches to reardon .", "tostr": "filter_eq { all_rows ; loss ; reardon }"}, "date"], "result": "october 18", "ind": 2, "tostr": "hop { filter_eq { all_rows ; loss ; reardon } ; date }"}, "october 18"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; loss ; reardon } ; date } ; october 18 }", "tointer": "the date record of this unqiue row is october 18 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; loss ; reardon } } ; eq { hop { filter_eq { all_rows ; loss ; reardon } ; date } ; october 18 } } = true", "tointer": "select the rows whose loss record fuzzily matches to reardon . there is only one such row in the table . the date record of this unqiue row is october 18 ."}, "logic_str": "and { only { filter_eq { all_rows ; loss ; reardon } } ; eq { hop { filter_eq { all_rows ; loss ; reardon } ; date } ; october 18 } } = true", "interpret": "select the rows whose loss record fuzzily matches to reardon . there is only one such row in the table . the date record of this unqiue row is october 18 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "loss_7": 7, "reardon_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "october 18_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "loss_7": "loss", "reardon_8": "reardon", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "october 18_10": "october 18"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "loss_7": [0], "reardon_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "october 18_10": [3]}, "table_header": ["date", "opponent", "score", "loss", "attendance", "series"], "table_cont": [["october 17", "braves", "3 - 1", "morris ( 0 - 1 )", "51763", "0 - 1"], ["october 18", "braves", "5 - 4", "reardon ( 0 - 1 )", "51763", "1 - 1"], ["october 20", "braves", "3 - 2", "avery ( 0 - 1 )", "51813", "2 - 1"], ["october 21", "braves", "2 - 1", "glavine ( 1 - 1 )", "52090", "3 - 1"], ["october 22", "braves", "7 - 2", "morris ( 0 - 2 )", "52268", "3 - 2"], ["october 24", "braves", "4 - 3 ( 11 )", "leibrandt ( 0 - 1 )", "51763", "4 - 2"]], "query": "and { only { filter_eq { all_rows ; loss ; reardon } } ; eq { hop { filter_eq { all_rows ; loss ; reardon } ; date } ; october 18 } } = true", "question": "the only game that reardon lost took place on october 18 ."}, {"topic": "list of game of the year awards", "wiki": "https://en.wikipedia.org/wiki/List_of_Game_of_the_Year_awards", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1851722-32.html.csv", "action": "unique", "sent": "uncharted 2 : among thieves is the only third-person shooter on the list of game of the year awards .", "annotation": {"scope": "all", "row": "2", "col": "3", "col_other": "2", "criterion": "equal", "value": "third - person shooter", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "genre", "third - person shooter"], "result": null, "ind": 0, "tointer": "select the rows whose genre record fuzzily matches to third - person shooter .", "tostr": "filter_eq { all_rows ; genre ; third - person shooter }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; genre ; third - person shooter } }", "tointer": "select the rows whose genre record fuzzily matches to third - person shooter . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "genre", "third - person shooter"], "result": null, "ind": 0, "tointer": "select the rows whose genre record fuzzily matches to third - person shooter .", "tostr": "filter_eq { all_rows ; genre ; third - person shooter }"}, "game"], "result": "uncharted 2 : among thieves", "ind": 2, "tostr": "hop { filter_eq { all_rows ; genre ; third - person shooter } ; game }"}, "uncharted 2 : among thieves"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; genre ; third - person shooter } ; game } ; uncharted 2 : among thieves }", "tointer": "the game record of this unqiue row is uncharted 2 : among thieves ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; genre ; third - person shooter } } ; eq { hop { filter_eq { all_rows ; genre ; third - person shooter } ; game } ; uncharted 2 : among thieves } } = true", "tointer": "select the rows whose genre record fuzzily matches to third - person shooter . there is only one such row in the table . the game record of this unqiue row is uncharted 2 : among thieves ."}, "logic_str": "and { only { filter_eq { all_rows ; genre ; third - person shooter } } ; eq { hop { filter_eq { all_rows ; genre ; third - person shooter } ; game } ; uncharted 2 : among thieves } } = true", "interpret": "select the rows whose genre record fuzzily matches to third - person shooter . there is only one such row in the table . the game record of this unqiue row is uncharted 2 : among thieves .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "genre_7": 7, "third - person shooter_8": 8, "str_eq_3": 3, "str_hop_2": 2, "game_9": 9, "uncharted 2: among thieves_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "genre_7": "genre", "third - person shooter_8": "third - person shooter", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "game_9": "game", "uncharted 2: among thieves_10": "uncharted 2 : among thieves"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "genre_7": [0], "third - person shooter_8": [0], "str_eq_3": [4], "str_hop_2": [3], "game_9": [2], "uncharted 2: among thieves_10": [3]}, "table_header": ["year", "game", "genre", "platform ( s )", "developer ( s )"], "table_cont": [["2008", "grand theft auto iv", "open world action", "windows , playstation 3 , xbox 360", "rockstar north"], ["2009", "uncharted 2 : among thieves", "third - person shooter", "playstation 3", "naughty dog"], ["2010", "mass effect 2", "rpg", "xbox 360 , windows , playstation 3", "bioware"], ["2011", "the elder scrolls v : skyrim", "role - playing game", "windows , xbox 360", "bethesda game studios"], ["2012", "xcom : enemy unknown", "turn - based strategy", "windows , xbox 360 , playstation 3", "firaxis games"]], "query": "and { only { filter_eq { all_rows ; genre ; third - person shooter } } ; eq { hop { filter_eq { all_rows ; genre ; third - person shooter } ; game } ; uncharted 2 : among thieves } } = true", "question": "uncharted 2 : among thieves is the only third-person shooter on the list of game of the year awards ."}, {"topic": "list of bavarian locomotives and railbuses", "wiki": "https://en.wikipedia.org/wiki/List_of_Bavarian_locomotives_and_railbuses", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17941795-5.html.csv", "action": "superlative", "sent": "d iv was the class with the greatest number of bavarian locomotives and railbuses made .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "5", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "quantity"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; quantity }"}, "class"], "result": "d iv", "ind": 1, "tostr": "hop { argmax { all_rows ; quantity } ; class }"}, "d iv"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; quantity } ; class } ; d iv } = true", "tointer": "select the row whose quantity record of all rows is maximum . the class record of this row is d iv ."}, "logic_str": "eq { hop { argmax { all_rows ; quantity } ; class } ; d iv } = true", "interpret": "select the row whose quantity record of all rows is maximum . the class record of this row is d iv .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "quantity_5": 5, "class_6": 6, "d iv_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "quantity_5": "quantity", "class_6": "class", "d iv_7": "d iv"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "quantity_5": [0], "class_6": [1], "d iv_7": [2]}, "table_header": ["class", "number ( s )", "quantity", "year ( s ) of manufacture", "type"], "table_cont": [["d i", "names", "15", "1871 - 1875", "b n2t"], ["d ii ( old )", "names", "4", "1873", "b n2t"], ["d ii", "2400 - 2472", "73", "1898 - 1904", "c n2t"], ["d iii", "names", "6", "1873", "b n2t"], ["d iv", "names , 1701 - 1737", "132", "1875 - 1897", "b n2t"], ["d v", "names", "10", "1877 - 1878", "c n2t"], ["d ix", "names , 1931 - 1960 , 2101 - 2115", "55", "1888 - 1899", "1b n2t"], ["d xii", "2201 - 2296", "96", "1897 - 1904", "1 \u2032 b2 \u2032 n2t"], ["pt 2 / 3", "6001 - 6097", "97", "1909 - 1916", "1b h2t"], ["pt 2 / 4 n", "6501 - 6502", "2", "1909", "2 \u2032 b n2t"], ["pt 2 / 4 h", "5001 - 5012", "12", "1906 - 1909", "1 \u2032 b1 \u2032 h2t"], ["pt 2 / 5 n", "5202 - 5210", "9", "1907", "1 \u2032 b2 \u2032 n2t"], ["pt 2 / 5 h", "5201", "1", "1906", "1 \u2032 b2 \u2032 h2t"], ["pt 3 / 6", "6101 - 6110", "10", "1923", "1 \u2032 c2 \u2032 h2t"], ["gt 2x4 / 4", "5751 - 5765", "15", "1913 - 1914", "d \u2032 d h4vt"], ["gt 2x4 / 4", "5766 - 5775", "10", "1922 - 1923", "d \u2032 d h4vt"], ["r 3 / 3", "2473 - 2490", "18", "1906 - 1913", "c n2t"], ["r 3 / 3", "4701 - 4790", "90", "1921 - 1922", "c n2t"], ["r 4 / 4", "4151 - 4183", "33", "1918 - 1919", "d n2t"], ["r 4 / 4", "4184 - 4192", "9", "1924 - 1925", "d n2t"]], "query": "eq { hop { argmax { all_rows ; quantity } ; class } ; d iv } = true", "question": "d iv was the class with the greatest number of bavarian locomotives and railbuses made ."}, {"topic": "rex caldwell", "wiki": "https://en.wikipedia.org/wiki/Rex_Caldwell", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-13965339-3.html.csv", "action": "count", "sent": "rex caldwell had zero top-25 positions at two of the golf championship tournaments .", "annotation": {"scope": "all", "criterion": "equal", "value": "0", "result": "2", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "top - 25", "0"], "result": null, "ind": 0, "tointer": "select the rows whose top - 25 record is equal to 0 .", "tostr": "filter_eq { all_rows ; top - 25 ; 0 }"}], "result": "2", "ind": 1, "tostr": "count { filter_eq { all_rows ; top - 25 ; 0 } }", "tointer": "select the rows whose top - 25 record is equal to 0 . the number of such rows is 2 ."}, "2"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; top - 25 ; 0 } } ; 2 } = true", "tointer": "select the rows whose top - 25 record is equal to 0 . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { all_rows ; top - 25 ; 0 } } ; 2 } = true", "interpret": "select the rows whose top - 25 record is equal to 0 . the number of such rows is 2 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "top - 25_5": 5, "0_6": 6, "2_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "top - 25_5": "top - 25", "0_6": "0", "2_7": "2"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "top - 25_5": [0], "0_6": [0], "2_7": [2]}, "table_header": ["tournament", "wins", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "0", "1", "3", "3"], ["us open", "0", "0", "3", "0"], ["the open championship", "0", "0", "1", "0"], ["pga championship", "0", "3", "8", "6"], ["totals", "0", "4", "15", "9"]], "query": "eq { count { filter_eq { all_rows ; top - 25 ; 0 } } ; 2 } = true", "question": "rex caldwell had zero top-25 positions at two of the golf championship tournaments ."}, {"topic": "cusco province", "wiki": "https://en.wikipedia.org/wiki/Cusco_Province", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10877159-1.html.csv", "action": "superlative", "sent": "the city district in cusco province with the highest population is cusco .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "population 2007 census ( hab )"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; population 2007 census ( hab ) }"}, "city district"], "result": "cuzco", "ind": 1, "tostr": "hop { argmax { all_rows ; population 2007 census ( hab ) } ; city district }"}, "cuzco"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; population 2007 census ( hab ) } ; city district } ; cuzco } = true", "tointer": "select the row whose population 2007 census ( hab ) record of all rows is maximum . the city district record of this row is cuzco ."}, "logic_str": "eq { hop { argmax { all_rows ; population 2007 census ( hab ) } ; city district } ; cuzco } = true", "interpret": "select the row whose population 2007 census ( hab ) record of all rows is maximum . the city district record of this row is cuzco .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "population 2007 census (hab)_5": 5, "city district_6": 6, "cuzco_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "population 2007 census (hab)_5": "population 2007 census ( hab )", "city district_6": "city district", "cuzco_7": "cuzco"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "population 2007 census (hab)_5": [0], "city district_6": [1], "cuzco_7": [2]}, "table_header": ["city district", "area km square", "population 2007 census ( hab )", "housing ( 2007 )", "density ( hab / km square )", "elevation msl"], "table_cont": [["cuzco", "116.22 km square", "108798", "28476", "936.1", "3399 msl"], ["san jer\u00f3nimo", "103.34 km square", "28856", "8942", "279.2", "3244 msl"], ["san sebasti\u00e1n", "89.44 km square", "85472", "18109", "955.6", "3244 msl"], ["santiago", "69.72 km square", "66277", "21168", "950.6", "3400 msl"], ["wanchaq", "6.38 km square", "54524", "14690", "8546.1", "3366 msl"], ["total", "385.1 km square", "358052", "91385", "929.76", "-"]], "query": "eq { hop { argmax { all_rows ; population 2007 census ( hab ) } ; city district } ; cuzco } = true", "question": "the city district in cusco province with the highest population is cusco ."}, {"topic": "1984 u.s. open ( golf )", "wiki": "https://en.wikipedia.org/wiki/1984_U.S._Open_%28golf%29", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17231267-5.html.csv", "action": "count", "sent": "at the 1984 u.s. open , 4 players shot under par .", "annotation": {"scope": "all", "criterion": "less_than", "value": "0", "result": "4", "col": "5", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_less", "args": ["all_rows", "to par", "0"], "result": null, "ind": 0, "tointer": "select the rows whose to par record is less than 0 .", "tostr": "filter_less { all_rows ; to par ; 0 }"}], "result": "4", "ind": 1, "tostr": "count { filter_less { all_rows ; to par ; 0 } }", "tointer": "select the rows whose to par record is less than 0 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_less { all_rows ; to par ; 0 } } ; 4 } = true", "tointer": "select the rows whose to par record is less than 0 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_less { all_rows ; to par ; 0 } } ; 4 } = true", "interpret": "select the rows whose to par record is less than 0 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_less_0": 0, "all_rows_4": 4, "to par_5": 5, "0_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_less_0": "filter_less", "all_rows_4": "all_rows", "to par_5": "to par", "0_6": "0", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_less_0": [1], "all_rows_4": [0], "to par_5": [0], "0_6": [0], "4_7": [2]}, "table_header": ["place", "player", "country", "score", "to par"], "table_cont": [["1", "hale irwin", "united states", "68 + 68 + 69 = 205", "- 5"], ["2", "fuzzy zoeller", "united states", "71 + 66 + 69 = 206", "- 4"], ["3", "greg norman", "australia", "70 + 68 + 69 = 207", "- 3"], ["4", "jim thorpe", "united states", "68 + 71 + 70 = 209", "- 1"], ["5", "tim simpson", "united states", "72 + 71 + 68 = 211", "+ 1"], ["t6", "morris hatalsky", "united states", "70 + 73 + 69 = 212", "+ 2"], ["t6", "johnny miller", "united states", "74 + 68 + 70 = 212", "+ 2"], ["t6", "jack nicklaus", "united states", "71 + 71 + 70 = 212", "+ 2"], ["t6", "lee trevino", "united states", "71 + 72 + 69 = 212", "+ 2"], ["t10", "david graham", "australia", "71 + 72 + 70 = 213", "+ 3"], ["t10", "curtis strange", "united states", "69 + 66 + 77 = 213", "+ 3"], ["t10", "mike sullivan", "united states", "70 + 73 + 70 = 213", "+ 3"]], "query": "eq { count { filter_less { all_rows ; to par ; 0 } } ; 4 } = true", "question": "at the 1984 u.s. open , 4 players shot under par ."}, {"topic": "steam locomotives of ireland", "wiki": "https://en.wikipedia.org/wiki/Steam_locomotives_of_Ireland", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1290024-9.html.csv", "action": "count", "sent": "three of the locomotives of ireland were first made in the year 1915 .", "annotation": {"scope": "all", "criterion": "equal", "value": "1915", "result": "3", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "date made", "1915"], "result": null, "ind": 0, "tointer": "select the rows whose date made record is equal to 1915 .", "tostr": "filter_eq { all_rows ; date made ; 1915 }"}], "result": "3", "ind": 1, "tostr": "count { filter_eq { all_rows ; date made ; 1915 } }", "tointer": "select the rows whose date made record is equal to 1915 . the number of such rows is 3 ."}, "3"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; date made ; 1915 } } ; 3 } = true", "tointer": "select the rows whose date made record is equal to 1915 . the number of such rows is 3 ."}, "logic_str": "eq { count { filter_eq { all_rows ; date made ; 1915 } } ; 3 } = true", "interpret": "select the rows whose date made record is equal to 1915 . the number of such rows is 3 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "date made_5": 5, "1915_6": 6, "3_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "date made_5": "date made", "1915_6": "1915", "3_7": "3"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "date made_5": [0], "1915_6": [0], "3_7": [2]}, "table_header": ["class", "type", "fleet numbers", "quantity made", "manufacturer", "date made", "1958 ci\u00e9", "1958 uta", "date withdrawn"], "table_cont": [["t", "4 - 4 - 2t", "185 - 189", "5", "beyer , peacock & co", "1913", "1", "4", "1959 - 1964"], ["sg2", "0 - 6 - 0", "180 - 184", "5", "beyer , peacock & co", "1915", "3", "2", "1961 - 1963"], ["s2", "4 - 4 - 0", "190 - 192", "3", "beyer , peacock & co", "1915", "1", "2", "1960 - 65"], ["u", "4 - 4 - 0", "196 - 200", "5", "beyer , peacock & co", "1915", "3", "2", "1959 - 1963"], ["sg3", "0 - 6 - 0", "6 - 8 , 13 - 14 , 20 , 47 - 49 , 96 - 97 , 117 - 118 , 201 - 202", "15", "beyer , peacock & co", "1920 - 1921", "7", "8", "1960 - 1967"], ["t2", "4 - 4 - 2t", "1 - 5", "5", "beyer , peacock & co", "1921", "2", "3", "1959 - 1964"], ["t2", "4 - 4 - 2t", "21 , 30 , 115 - 116 , 139 , 142 - 144 , 147 - 148", "10", "nasmyth , wilson & co", "1924", "6", "4", "1958 - 1963"], ["sg2", "0 - 6 - 0", "15 - 19", "5", "nasmyth , wilson & co", "1924 - 1926", "2", "3", "1959 - 1965"], ["crane", "0 - 6 - 0ct", "31", "1", "hawthorn leslie", "1928", "0", "0", "1963"], ["t2", "4 - 4 - 2t", "62 - 66", "5", "beyer , peacock & co", "1929 - 1930", "3", "2", "1959 - 1960"], ["v", "4 - 4 - 0", "83 - 87", "5", "beyer , peacock & co", "1932", "2", "3", "1959 - 1963"]], "query": "eq { count { filter_eq { all_rows ; date made ; 1915 } } ; 3 } = true", "question": "three of the locomotives of ireland were first made in the year 1915 ."}, {"topic": "general motors", "wiki": "https://en.wikipedia.org/wiki/General_Motors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12102-3.html.csv", "action": "comparative", "sent": "of the general motors brands , gmc was founded 10 years before chevrolet .", "annotation": {"row_1": "5", "row_2": "4", "col": "2", "col_other": "1", "relation": "diff", "record_mentioned": "no", "diff_result": {"diff_value": "10", "bigger": "row2"}}, "logic": {"func": "eq", "args": [{"func": "diff", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "brand", "gmc"], "result": null, "ind": 0, "tointer": "select the rows whose brand record fuzzily matches to gmc .", "tostr": "filter_eq { all_rows ; brand ; gmc }"}, "year founded"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; brand ; gmc } ; year founded }", "tointer": "select the rows whose brand record fuzzily matches to gmc . take the year founded record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "brand", "chevrolet"], "result": null, "ind": 1, "tointer": "select the rows whose brand record fuzzily matches to chevrolet .", "tostr": "filter_eq { all_rows ; brand ; chevrolet }"}, "year founded"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; brand ; chevrolet } ; year founded }", "tointer": "select the rows whose brand record fuzzily matches to chevrolet . take the year founded record of this row ."}], "result": "-10", "ind": 4, "tostr": "diff { hop { filter_eq { all_rows ; brand ; gmc } ; year founded } ; hop { filter_eq { all_rows ; brand ; chevrolet } ; year founded } }"}, "-10"], "result": true, "ind": 5, "tostr": "eq { diff { hop { filter_eq { all_rows ; brand ; gmc } ; year founded } ; hop { filter_eq { all_rows ; brand ; chevrolet } ; year founded } } ; -10 } = true", "tointer": "select the rows whose brand record fuzzily matches to gmc . take the year founded record of this row . select the rows whose brand record fuzzily matches to chevrolet . take the year founded record of this row . the second record is 10 larger than the first record ."}, "logic_str": "eq { diff { hop { filter_eq { all_rows ; brand ; gmc } ; year founded } ; hop { filter_eq { all_rows ; brand ; chevrolet } ; year founded } } ; -10 } = true", "interpret": "select the rows whose brand record fuzzily matches to gmc . take the year founded record of this row . select the rows whose brand record fuzzily matches to chevrolet . take the year founded record of this row . the second record is 10 larger than the first record .", "num_func": 6, "nid": 6, "g_ids": {"eq_5": 5, "result_6": 6, "diff_4": 4, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_7": 7, "brand_8": 8, "gmc_9": 9, "year founded_10": 10, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_11": 11, "brand_12": 12, "chevrolet_13": 13, "year founded_14": 14, "-10_15": 15}, "g_ids_features": {"eq_5": "eq", "result_6": "true", "diff_4": "diff", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_7": "all_rows", "brand_8": "brand", "gmc_9": "gmc", "year founded_10": "year founded", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_11": "all_rows", "brand_12": "brand", "chevrolet_13": "chevrolet", "year founded_14": "year founded", "-10_15": "-10"}, "g_adj": {"eq_5": [6], "result_6": [], "diff_4": [5], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_7": [0], "brand_8": [0], "gmc_9": [0], "year founded_10": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_11": [1], "brand_12": [1], "chevrolet_13": [1], "year founded_14": [3], "-10_15": [5]}, "table_header": ["brand", "year founded", "year began making autos", "year joined gm", "markets served today"], "table_cont": [["baojun", "2010", "2010", "2010", "china"], ["buick", "1899", "1903", "1908", "north america , china , israel"], ["cadillac", "1902", "1902", "1909", "north america , europe , asia , middle east"], ["chevrolet", "1911", "1911", "1917", "global , except australia , new zealand"], ["gmc", "1901", "1901", "1909", "north america , middle east"], ["holden", "1856", "1908", "1931", "australia , new zealand"], ["jiefang", "2011", "2011", "2011", "china"], ["opel", "1862", "1899", "1929", "africa , asia , europe , south america"], ["wuling", "2002", "2002", "2002", "china"], ["vauxhall", "1857", "1903", "1925", "united kingdom"]], "query": "eq { diff { hop { filter_eq { all_rows ; brand ; gmc } ; year founded } ; hop { filter_eq { all_rows ; brand ; chevrolet } ; year founded } } ; -10 } = true", "question": "of the general motors brands , gmc was founded 10 years before chevrolet ."}, {"topic": "television in italy", "wiki": "https://en.wikipedia.org/wiki/Television_in_Italy", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-15887683-22.html.csv", "action": "superlative", "sent": "of the television channels in italy , the channel rai 1 had the highest viewership in 2010 .", "annotation": {"scope": "all", "col_superlative": "10", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "2", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "2010"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; 2010 }"}, "channel"], "result": "rai 1", "ind": 1, "tostr": "hop { argmax { all_rows ; 2010 } ; channel }"}, "rai 1"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; 2010 } ; channel } ; rai 1 } = true", "tointer": "select the row whose 2010 record of all rows is maximum . the channel record of this row is rai 1 ."}, "logic_str": "eq { hop { argmax { all_rows ; 2010 } ; channel } ; rai 1 } = true", "interpret": "select the row whose 2010 record of all rows is maximum . the channel record of this row is rai 1 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "2010_5": 5, "channel_6": 6, "rai 1_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "2010_5": "2010", "channel_6": "channel", "rai 1_7": "rai 1"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "2010_5": [0], "channel_6": [1], "rai 1_7": [2]}, "table_header": ["position", "channel", "launch date", "owner", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013 ( p )"], "table_cont": [["1", "rai 1", "1954", "rai", "22.86", "22.99", "22.33", "21.80", "20.63", "19.86", "18.1", "18.3", "19.12"], ["2", "canale 5", "1980", "mediaset", "21.82", "20.96", "20.67", "20.33", "20.50", "18.78", "17.0", "15.9", "15.25"], ["3", "rai 3", "1979", "rai", "9.11", "9.31", "9.06", "9.07", "8.46", "7.75", "8.5", "7.7", "7.93"], ["4", "rai 2", "1961", "rai", "11.29", "11.27", "10.38", "10.60", "8.90", "9.02", "8.3", "7.6", "6.81"], ["5", "italia 1", "1982", "mediaset", "11.48", "11.09", "11.18", "10.83", "10.68", "9.22", "8.3", "6.18", "6.48"], ["6", "rete 4", "1982", "mediaset", "8.63", "8.22", "8.68", "8.28", "7.47", "6.79", "6.7", "5.42", "5.26"], ["7", "la7", "2001", "cairo communication", "2.71", "3.02", "2.97", "3.08", "2.90", "3.67", "3.8", "3.68", "4.29"], ["8", "real time", "2005", "discovery networks", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.09", "1.4", "1.49"], ["9", "iris", "2007", "mediaset", "ne", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.1", "1.27"], ["10", "rai yoyo", "2006", "rai", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "0.90", "1.24"], ["11", "dmax", "2011", "discovery networks", "ne", "ne", "ne", "ne", "ne", "ne", "< 0.90", "< 0.90", "1.17"], ["12", "rai premium", "2003", "rai", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "1.25", "1.11"], ["13", "rai movie", "1999", "rai", "ne", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "< 0.90", "0.92", "0.93"], ["14", "rai 4", "2008", "rai", "ne", "ne", "ne", "< 0.90", "< 0.90", "< 0.90", "0.98", "1.1", "0.91"]], "query": "eq { hop { argmax { all_rows ; 2010 } ; channel } ; rai 1 } = true", "question": "of the television channels in italy , the channel rai 1 had the highest viewership in 2010 ."}, {"topic": "iowa corn cy - hawk series", "wiki": "https://en.wikipedia.org/wiki/Iowa_Corn_Cy-Hawk_Series", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14175075-3.html.csv", "action": "majority", "sent": "iowa state defeated iowa in most of their matchups against each other .", "annotation": {"scope": "all", "col": "4", "most_or_all": "most", "criterion": "equal", "value": "iowa state", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "winning team", "iowa state"], "result": true, "ind": 0, "tointer": "for the winning team records of all rows , most of them fuzzily match to iowa state .", "tostr": "most_eq { all_rows ; winning team ; iowa state } = true"}, "logic_str": "most_eq { all_rows ; winning team ; iowa state } = true", "interpret": "for the winning team records of all rows , most of them fuzzily match to iowa state .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "winning team_3": 3, "iowa state_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "winning team_3": "winning team", "iowa state_4": "iowa state"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "winning team_3": [0], "iowa state_4": [0]}, "table_header": ["date", "site", "sport", "winning team", "series"], "table_cont": [["september 7 , 2005", "iowa city", "w soccer", "iowa state", "iowa state 2 - 0"], ["september 10 , 2005", "ames", "football", "iowa state", "iowa state 5 - 0"], ["december 2 , 2005", "ames", "wrestling", "iowa", "iowa state 5 - 2"], ["december 8 , 2005", "ames", "w basketball", "iowa state", "iowa state 7 - 2"], ["december 9 , 2005", "ames", "m basketball", "iowa state", "iowa state 9 - 2"], ["december 9 , 2005", "ames", "w swimming", "iowa", "iowa state 9 - 4"], ["january 28 , 2006", "iowa city", "w gymnastics", "iowa state", "iowa state 11 - 4"], ["march 17 , 2006", "ames", "w gymnastics", "iowa state", "iowa state 13 - 4"], ["march 17 , 2006", "ames", "softball", "iowa", "iowa state 13 - 6"]], "query": "most_eq { all_rows ; winning team ; iowa state } = true", "question": "iowa state defeated iowa in most of their matchups against each other ."}, {"topic": "2009 volta a catalunya", "wiki": "https://en.wikipedia.org/wiki/2009_Volta_a_Catalunya", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-22713796-14.html.csv", "action": "majority", "sent": "alejandro valverde was awarded the general classification in the majority of stages of the 2009 volta a catalunya .", "annotation": {"scope": "all", "col": "3", "most_or_all": "most", "criterion": "equal", "value": "alejandro valverde", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "general classification", "alejandro valverde"], "result": true, "ind": 0, "tointer": "for the general classification records of all rows , most of them fuzzily match to alejandro valverde .", "tostr": "most_eq { all_rows ; general classification ; alejandro valverde } = true"}, "logic_str": "most_eq { all_rows ; general classification ; alejandro valverde } = true", "interpret": "for the general classification records of all rows , most of them fuzzily match to alejandro valverde .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "general classification_3": 3, "alejandro valverde_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "general classification_3": "general classification", "alejandro valverde_4": "alejandro valverde"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "general classification_3": [0], "alejandro valverde_4": [0]}, "table_header": ["stage", "winner", "general classification", "mountains classification", "sprint classification", "team classification"], "table_cont": [["1", "thor hushovd", "thor hushovd", "no award", "no award", "cerv\u00e9lo testteam"], ["2", "matti breschel", "alejandro valverde", "lloyd mondory", "samuel dumoulin", "cerv\u00e9lo testteam"], ["3", "alejandro valverde", "alejandro valverde", "xavier tond\u00f3", "samuel dumoulin", "euskaltel - euskadi"], ["4", "juli\u00e1n s\u00e1nchez", "alejandro valverde", "xavier tond\u00f3", "samuel dumoulin", "astana"], ["5", "nikolay trusov", "alejandro valverde", "xavier tond\u00f3", "samuel dumoulin", "astana"], ["6", "thor hushovd", "alejandro valverde", "juli\u00e1n s\u00e1nchez", "samuel dumoulin", "astana"], ["7", "greg henderson", "alejandro valverde", "juli\u00e1n s\u00e1nchez", "samuel dumoulin", "astana"]], "query": "most_eq { all_rows ; general classification ; alejandro valverde } = true", "question": "alejandro valverde was awarded the general classification in the majority of stages of the 2009 volta a catalunya ."}, {"topic": "1990 masters tournament", "wiki": "https://en.wikipedia.org/wiki/1990_Masters_Tournament", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16514275-1.html.csv", "action": "unique", "sent": "nick faldo is the only golfer from england in the 1990 masters tournament .", "annotation": {"scope": "all", "row": "1", "col": "3", "col_other": "2", "criterion": "equal", "value": "england", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "england"], "result": null, "ind": 0, "tointer": "select the rows whose country record fuzzily matches to england .", "tostr": "filter_eq { all_rows ; country ; england }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; country ; england } }", "tointer": "select the rows whose country record fuzzily matches to england . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "country", "england"], "result": null, "ind": 0, "tointer": "select the rows whose country record fuzzily matches to england .", "tostr": "filter_eq { all_rows ; country ; england }"}, "player"], "result": "nick faldo", "ind": 2, "tostr": "hop { filter_eq { all_rows ; country ; england } ; player }"}, "nick faldo"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; country ; england } ; player } ; nick faldo }", "tointer": "the player record of this unqiue row is nick faldo ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; country ; england } } ; eq { hop { filter_eq { all_rows ; country ; england } ; player } ; nick faldo } } = true", "tointer": "select the rows whose country record fuzzily matches to england . there is only one such row in the table . the player record of this unqiue row is nick faldo ."}, "logic_str": "and { only { filter_eq { all_rows ; country ; england } } ; eq { hop { filter_eq { all_rows ; country ; england } ; player } ; nick faldo } } = true", "interpret": "select the rows whose country record fuzzily matches to england . there is only one such row in the table . the player record of this unqiue row is nick faldo .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "country_7": 7, "england_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "nick faldo_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "country_7": "country", "england_8": "england", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "nick faldo_10": "nick faldo"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "country_7": [0], "england_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "nick faldo_10": [3]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["t1", "nick faldo", "england", "71 + 72 + 66 + 69 = 278", "- 10", "playoff"], ["t1", "raymond floyd", "united states", "70 + 68 + 68 + 72 = 278", "- 10", "playoff"], ["t3", "john huston", "united states", "66 + 74 + 68 + 75 = 283", "- 5", "72500"], ["t3", "lanny wadkins", "united states", "72 + 73 + 70 + 68 = 283", "- 5", "72500"], ["5", "fred couples", "united states", "74 + 69 + 72 + 69 = 284", "- 4", "50000"], ["6", "jack nicklaus", "united states", "72 + 70 + 69 + 74 = 285", "- 3", "45000"], ["t7", "seve ballesteros", "spain", "74 + 73 + 68 + 71 = 286", "- 2", "35150"], ["t7", "bill britton", "united states", "68 + 74 + 71 + 73 = 286", "- 2", "35150"], ["t7", "bernhard langer", "west germany", "70 + 73 + 69 + 74 = 286", "- 2", "35150"], ["t7", "scott simpson", "united states", "74 + 71 + 68 + 73 = 286", "- 2", "35150"], ["t7", "curtis strange", "united states", "70 + 73 + 71 + 72 = 286", "- 2", "35150"], ["t7", "tom watson", "united states", "77 + 71 + 67 + 71 = 286", "- 2", "35150"]], "query": "and { only { filter_eq { all_rows ; country ; england } } ; eq { hop { filter_eq { all_rows ; country ; england } ; player } ; nick faldo } } = true", "question": "nick faldo is the only golfer from england in the 1990 masters tournament ."}, {"topic": "united states house of representatives elections , 1988", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1988", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341577-36.html.csv", "action": "unique", "sent": "del latta was the only ohio republican in the united states house of representatives elections , 1988 that was elected in 1958 .", "annotation": {"scope": "all", "row": "5", "col": "4", "col_other": "2", "criterion": "equal", "value": "1958", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "first elected", "1958"], "result": null, "ind": 0, "tointer": "select the rows whose first elected record is equal to 1958 .", "tostr": "filter_eq { all_rows ; first elected ; 1958 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; first elected ; 1958 } }", "tointer": "select the rows whose first elected record is equal to 1958 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "first elected", "1958"], "result": null, "ind": 0, "tointer": "select the rows whose first elected record is equal to 1958 .", "tostr": "filter_eq { all_rows ; first elected ; 1958 }"}, "incumbent"], "result": "del latta", "ind": 2, "tostr": "hop { filter_eq { all_rows ; first elected ; 1958 } ; incumbent }"}, "del latta"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; first elected ; 1958 } ; incumbent } ; del latta }", "tointer": "the incumbent record of this unqiue row is del latta ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; first elected ; 1958 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1958 } ; incumbent } ; del latta } } = true", "tointer": "select the rows whose first elected record is equal to 1958 . there is only one such row in the table . the incumbent record of this unqiue row is del latta ."}, "logic_str": "and { only { filter_eq { all_rows ; first elected ; 1958 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1958 } ; incumbent } ; del latta } } = true", "interpret": "select the rows whose first elected record is equal to 1958 . there is only one such row in the table . the incumbent record of this unqiue row is del latta .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "first elected_7": 7, "1958_8": 8, "str_eq_3": 3, "str_hop_2": 2, "incumbent_9": 9, "del latta_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "first elected_7": "first elected", "1958_8": "1958", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "incumbent_9": "incumbent", "del latta_10": "del latta"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "first elected_7": [0], "1958_8": [0], "str_eq_3": [4], "str_hop_2": [3], "incumbent_9": [2], "del latta_10": [3]}, "table_header": ["district", "incumbent", "party", "first elected", "result", "candidates"], "table_cont": [["ohio 1", "tom luken", "democratic", "1976", "re - elected", "tom luken ( d ) 56.5 % steve chabot ( r ) 43.5 %"], ["ohio 2", "bill gradison", "republican", "1974", "re - elected", "bill gradison ( r ) 72.3 % chuck r stidham ( d ) 27.7 %"], ["ohio 3", "tony p hall", "democratic", "1978", "re - elected", "tony p hall ( d ) 76.9 % ron crutcher ( r ) 23.1 %"], ["ohio 4", "mike oxley", "republican", "1972", "re - elected", "mike oxley ( r ) unopposed"], ["ohio 5", "del latta", "republican", "1958", "retired republican hold", "paul gillmor ( r ) 60.6 % tom murray ( d ) 39.4 %"], ["ohio 6", "bob mcewen", "republican", "1980", "re - elected", "bob mcewen ( r ) 74.3 % gordon r roberts ( d ) 25.7 %"], ["ohio 7", "mike dewine", "republican", "1982", "re - elected", "mike dewine ( r ) 73.9 % jack schira ( d ) 26.1 %"], ["ohio 8", "buz lukens", "republican", "1986", "re - elected", "buz lukens ( r ) 75.9 % john w griffin ( d ) 24.1 %"], ["ohio 9", "marcy kaptur", "democratic", "1982", "re - elected", "marcy kaptur ( d ) 81.3 % al hawkins ( r ) 18.7 %"], ["ohio 12", "john kasich", "republican", "1982", "re - elected", "john kasich ( r ) 80.1 % mark p brown ( d ) 19.9 %"], ["ohio 13", "don pease", "democratic", "1976", "re - elected", "don pease ( d ) 69.8 % dwight brown ( r ) 30.2 %"], ["ohio 14", "thomas c sawyer", "democratic", "1986", "re - elected", "thomas c sawyer ( d ) 74.7 % loretta lang ( r ) 25.3 %"], ["ohio 16", "ralph regula", "republican", "1972", "re - elected", "ralph regula ( r ) 78.6 % melvin j gravely ( d ) 21.4 %"], ["ohio 19", "ed feighan", "democratic", "1982", "re - elected", "ed feighan ( d ) 70.5 % noel f roberts ( r ) 29.5 %"], ["ohio 20", "mary rose oakar", "democratic", "1976", "re - elected", "mary rose oakar ( d ) 82.6 % michael sajna ( r ) 17.4 %"]], "query": "and { only { filter_eq { all_rows ; first elected ; 1958 } } ; eq { hop { filter_eq { all_rows ; first elected ; 1958 } ; incumbent } ; del latta } } = true", "question": "del latta was the only ohio republican in the united states house of representatives elections , 1988 that was elected in 1958 ."}, {"topic": "seat toledo", "wiki": "https://en.wikipedia.org/wiki/SEAT_Toledo", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1176162-3.html.csv", "action": "unique", "sent": "for the seat toledo , the only model with a top speed under 175 km/h was the 1.4 16v .", "annotation": {"scope": "all", "row": "1", "col": "7", "col_other": "1", "criterion": "less_than", "value": "175", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_less", "args": ["all_rows", "top speed ( km / h )", "175"], "result": null, "ind": 0, "tointer": "select the rows whose top speed ( km / h ) record is less than 175 .", "tostr": "filter_less { all_rows ; top speed ( km / h ) ; 175 }"}], "result": true, "ind": 1, "tostr": "only { filter_less { all_rows ; top speed ( km / h ) ; 175 } }", "tointer": "select the rows whose top speed ( km / h ) record is less than 175 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_less", "args": ["all_rows", "top speed ( km / h )", "175"], "result": null, "ind": 0, "tointer": "select the rows whose top speed ( km / h ) record is less than 175 .", "tostr": "filter_less { all_rows ; top speed ( km / h ) ; 175 }"}, "model"], "result": "1.4 16v", "ind": 2, "tostr": "hop { filter_less { all_rows ; top speed ( km / h ) ; 175 } ; model }"}, "1.4 16v"], "result": true, "ind": 3, "tostr": "eq { hop { filter_less { all_rows ; top speed ( km / h ) ; 175 } ; model } ; 1.4 16v }", "tointer": "the model record of this unqiue row is 1.4 16v ."}], "result": true, "ind": 4, "tostr": "and { only { filter_less { all_rows ; top speed ( km / h ) ; 175 } } ; eq { hop { filter_less { all_rows ; top speed ( km / h ) ; 175 } ; model } ; 1.4 16v } } = true", "tointer": "select the rows whose top speed ( km / h ) record is less than 175 . there is only one such row in the table . the model record of this unqiue row is 1.4 16v ."}, "logic_str": "and { only { filter_less { all_rows ; top speed ( km / h ) ; 175 } } ; eq { hop { filter_less { all_rows ; top speed ( km / h ) ; 175 } ; model } ; 1.4 16v } } = true", "interpret": "select the rows whose top speed ( km / h ) record is less than 175 . there is only one such row in the table . the model record of this unqiue row is 1.4 16v .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_less_0": 0, "all_rows_6": 6, "top speed (km / h)_7": 7, "175_8": 8, "str_eq_3": 3, "str_hop_2": 2, "model_9": 9, "1.4 16v_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_less_0": "filter_less", "all_rows_6": "all_rows", "top speed (km / h)_7": "top speed ( km / h )", "175_8": "175", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "model_9": "model", "1.4 16v_10": "1.4 16v"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_less_0": [1, 2], "all_rows_6": [0], "top speed (km / h)_7": [0], "175_8": [0], "str_eq_3": [4], "str_hop_2": [3], "model_9": [2], "1.4 16v_10": [3]}, "table_header": ["model", "cylinders / valves", "displacement cc", "max power kw ( ps ) at rpm", "max torque ( nm ) at rpm", "engine code", "top speed ( km / h )", "production period"], "table_cont": [["1.4 16v", "r4 / 16", "1390", "55 ( 75 ) / 5000", "126 / 3800", "ahw / axp / akq / ape / aua / bca", "170", "1999 - 2004"], ["1.6", "r4 / 8", "1595", "74 ( 101 ) / 5600", "145 / 3800", "akl / aeh / apf", "188", "1999 - 2000"], ["1.6 16v", "r4 / 16", "1598", "77 ( 105 ) / 5700", "148 / 4500", "aus / azd / atn / bcb", "192", "2000 - 2004"], ["1.8 20v", "r4 / 20", "1781", "92 ( 125 ) / 6000", "170 / 4200", "agn / apg", "200", "1999 - 2003"], ["1.8 20v", "r4 / 20", "1781", "132 ( 180 ) / 5500", "235 / 1950 - 5000", "auq", "229", "2003 - 2004"], ["2.3 v5", "vr5 / 10", "2324", "110 ( 150 ) / 6000", "205 / 3200", "agz", "216", "1999 - 2000"], ["2.3 v5", "vr5 / 20", "2324", "125 ( 170 ) / 6200", "225 / 3300", "aqn", "225", "2000 - 2003"]], "query": "and { only { filter_less { all_rows ; top speed ( km / h ) ; 175 } } ; eq { hop { filter_less { all_rows ; top speed ( km / h ) ; 175 } ; model } ; 1.4 16v } } = true", "question": "for the seat toledo , the only model with a top speed under 175 km/h was the 1.4 16v ."}, {"topic": "charl schwartzel", "wiki": "https://en.wikipedia.org/wiki/Charl_Schwartzel", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1598164-9.html.csv", "action": "ordinal", "sent": "the pga championship golf tournament was the second most participated event for charl schwartzel .", "annotation": {"row": "4", "col": "6", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "events", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; events ; 2 }"}, "tournament"], "result": "pga championship", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; events ; 2 } ; tournament }"}, "pga championship"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; events ; 2 } ; tournament } ; pga championship } = true", "tointer": "select the row whose events record of all rows is 2nd maximum . the tournament record of this row is pga championship ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; events ; 2 } ; tournament } ; pga championship } = true", "interpret": "select the row whose events record of all rows is 2nd maximum . the tournament record of this row is pga championship .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "events_5": 5, "2_6": 6, "tournament_7": 7, "pga championship_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "events_5": "events", "2_6": "2", "tournament_7": "tournament", "pga championship_8": "pga championship"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "events_5": [0], "2_6": [0], "tournament_7": [1], "pga championship_8": [2]}, "table_header": ["tournament", "wins", "top - 5", "top - 10", "top - 25", "events", "cuts made"], "table_cont": [["masters tournament", "1", "1", "1", "2", "4", "4"], ["us open", "0", "0", "1", "3", "7", "6"], ["the open championship", "0", "0", "0", "4", "9", "4"], ["pga championship", "0", "0", "0", "2", "8", "5"], ["totals", "1", "1", "2", "11", "28", "19"]], "query": "eq { hop { nth_argmax { all_rows ; events ; 2 } ; tournament } ; pga championship } = true", "question": "the pga championship golf tournament was the second most participated event for charl schwartzel ."}, {"topic": "loftus road", "wiki": "https://en.wikipedia.org/wiki/Loftus_Road", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-1053247-1.html.csv", "action": "majority", "sent": "the majority of the sports were football , with only 2 being rugby league .", "annotation": {"scope": "all", "col": "2", "most_or_all": "most", "criterion": "equal", "value": "football", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "sport", "football"], "result": true, "ind": 0, "tointer": "for the sport records of all rows , most of them fuzzily match to football .", "tostr": "most_eq { all_rows ; sport ; football } = true"}, "logic_str": "most_eq { all_rows ; sport ; football } = true", "interpret": "for the sport records of all rows , most of them fuzzily match to football .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "sport_3": 3, "football_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "sport_3": "sport", "football_4": "football"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "sport_3": [0], "football_4": [0]}, "table_header": ["date", "sport", "winner", "score", "loser"], "table_cont": [["1992", "football", "england b", "3 - 0", "france b"], ["1998", "football", "england b", "4 - 1", "russia - 2"], ["2002", "football", "nigeria", "1 - 0", "jamaica"], ["2004", "rugby league", "australia", "32 - 16", "new zealand"], ["2005", "rugby league", "new zealand", "42 - 26", "great britain"], ["2006", "football", "australia", "1 - 1", "ghana"], ["2006", "football", "trinidad and tobago", "2 - 0", "iceland"], ["2007", "football", "denmark", "3 - 1", "australia"], ["2008", "football", "australia", "2 - 2", "south africa"], ["2010", "football", "south korea", "2 - 0", "c\u00f4te d'ivoire"]], "query": "most_eq { all_rows ; sport ; football } = true", "question": "the majority of the sports were football , with only 2 being rugby league ."}, {"topic": "moussa sow", "wiki": "https://en.wikipedia.org/wiki/Moussa_Sow", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12726056-3.html.csv", "action": "unique", "sent": "the game played on 23 march 2013 was the only game played for the 2014 fifa world cup qualification .", "annotation": {"scope": "all", "row": "8", "col": "6", "col_other": "2", "criterion": "equal", "value": "2014 fifa world cup qualification", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "competition", "2014 fifa world cup qualification"], "result": null, "ind": 0, "tointer": "select the rows whose competition record fuzzily matches to 2014 fifa world cup qualification .", "tostr": "filter_eq { all_rows ; competition ; 2014 fifa world cup qualification }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } }", "tointer": "select the rows whose competition record fuzzily matches to 2014 fifa world cup qualification . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "competition", "2014 fifa world cup qualification"], "result": null, "ind": 0, "tointer": "select the rows whose competition record fuzzily matches to 2014 fifa world cup qualification .", "tostr": "filter_eq { all_rows ; competition ; 2014 fifa world cup qualification }"}, "date"], "result": "23 march 2013", "ind": 2, "tostr": "hop { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } ; date }"}, "23 march 2013"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } ; date } ; 23 march 2013 }", "tointer": "the date record of this unqiue row is 23 march 2013 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } } ; eq { hop { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } ; date } ; 23 march 2013 } } = true", "tointer": "select the rows whose competition record fuzzily matches to 2014 fifa world cup qualification . there is only one such row in the table . the date record of this unqiue row is 23 march 2013 ."}, "logic_str": "and { only { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } } ; eq { hop { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } ; date } ; 23 march 2013 } } = true", "interpret": "select the rows whose competition record fuzzily matches to 2014 fifa world cup qualification . there is only one such row in the table . the date record of this unqiue row is 23 march 2013 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "competition_7": 7, "2014 fifa world cup qualification_8": 8, "str_eq_3": 3, "str_hop_2": 2, "date_9": 9, "23 march 2013_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "competition_7": "competition", "2014 fifa world cup qualification_8": "2014 fifa world cup qualification", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "date_9": "date", "23 march 2013_10": "23 march 2013"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "competition_7": [0], "2014 fifa world cup qualification_8": [0], "str_eq_3": [4], "str_hop_2": [3], "date_9": [2], "23 march 2013_10": [3]}, "table_header": ["goal", "date", "venue", "score", "result", "competition"], "table_cont": [["1", "5 september 2010", "lubumbashi , dr congo", "1 - 0", "4 - 0", "2012 africa cup of nations qualifying"], ["2", "9 october 2010", "dakar , senegal", "4 - 0", "7 - 0", "2012 africa cup of nations qualifying"], ["3", "9 february 2011", "dakar , senegal", "2 - 0", "3 - 0", "friendly"], ["4", "3 september 2011", "dakar , senegal", "1 - 0", "2 - 0", "2012 africa cup of nations qualifying"], ["5", "3 september 2011", "dakar , senegal", "2 - 0", "2 - 0", "2012 africa cup of nations qualifying"], ["6", "25 january 2012", "bata , equatorial guinea", "1 - 1", "2 - 1", "2012 africa cup of nations"], ["7", "5 february 2013", "paris , france", "1 - 0", "1 - 1", "friendly"], ["8", "23 march 2013", "conakry , guinea", "1 - 0", "1 - 1", "2014 fifa world cup qualification"]], "query": "and { only { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } } ; eq { hop { filter_eq { all_rows ; competition ; 2014 fifa world cup qualification } ; date } ; 23 march 2013 } } = true", "question": "the game played on 23 march 2013 was the only game played for the 2014 fifa world cup qualification ."}, {"topic": "weightlifting at the 2007 pan american games", "wiki": "https://en.wikipedia.org/wiki/Weightlifting_at_the_2007_Pan_American_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-17703223-7.html.csv", "action": "ordinal", "sent": "pedro stetsiuk ( arg ) had the 2nd highest total ( kg ) in weightlifting at the 2007 pan american games .", "annotation": {"row": "2", "col": "5", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "total ( kg )", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; total ( kg ) ; 2 }"}, "name"], "result": "pedro stetsiuk ( arg )", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; total ( kg ) ; 2 } ; name }"}, "pedro stetsiuk ( arg )"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; total ( kg ) ; 2 } ; name } ; pedro stetsiuk ( arg ) } = true", "tointer": "select the row whose total ( kg ) record of all rows is 2nd maximum . the name record of this row is pedro stetsiuk ( arg ) ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; total ( kg ) ; 2 } ; name } ; pedro stetsiuk ( arg ) } = true", "interpret": "select the row whose total ( kg ) record of all rows is 2nd maximum . the name record of this row is pedro stetsiuk ( arg ) .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "total (kg)_5": 5, "2_6": 6, "name_7": 7, "pedro stetsiuk ( arg )_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "total (kg)_5": "total ( kg )", "2_6": "2", "name_7": "name", "pedro stetsiuk ( arg )_8": "pedro stetsiuk ( arg )"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "total (kg)_5": [0], "2_6": [0], "name_7": [1], "pedro stetsiuk ( arg )_8": [2]}, "table_header": ["name", "bodyweight", "snatch", "clean & jerk", "total ( kg )"], "table_cont": [["jo\u00ebl mackenzie ( cub )", "101.40", "175.0", "205.0", "380.0"], ["pedro stetsiuk ( arg )", "102.45", "160.0", "180.0", "340.0"], ["damian abbiate ( arg )", "104.45", "150.0", "188.0", "338.0"], ["bruno brand\u00e3o ( bra )", "99.10", "157.0", "180.0", "337.0"], ["christian l\u00f3pez ( gua )", "104.70", "153.0", "182.0", "335.0"], ["v\u00edctor osorio ( chi )", "103.05", "140.0", "176.0", "316.0"], ["ivorn mcknee ( bar )", "103.25", "140.0", "-", "dnf"], ["jos\u00e9 espinoza ( nca )", "99.40", "-", "-", "dnf"], ["boris burov ( ecu )", "100.40", "-", "-", "dnf"], ["akos sandor ( can )", "104.95", "-", "-", "dnf"], ["fabr\u00edcio mafra ( bra )", "100.75", "151.0", "187.0", "dsq"]], "query": "eq { hop { nth_argmax { all_rows ; total ( kg ) ; 2 } ; name } ; pedro stetsiuk ( arg ) } = true", "question": "pedro stetsiuk ( arg ) had the 2nd highest total ( kg ) in weightlifting at the 2007 pan american games ."}, {"topic": "exercise mainbrace", "wiki": "https://en.wikipedia.org/wiki/Exercise_Mainbrace", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11599375-1.html.csv", "action": "superlative", "sent": "the largest number of craft participating in exercise mainbrace were provide by the united kingdom .", "annotation": {"scope": "all", "col_superlative": "9", "row_superlative": "2", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "grand total"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; grand total }"}, "nato member"], "result": "uk", "ind": 1, "tostr": "hop { argmax { all_rows ; grand total } ; nato member }"}, "uk"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; grand total } ; nato member } ; uk } = true", "tointer": "select the row whose grand total record of all rows is maximum . the nato member record of this row is uk ."}, "logic_str": "eq { hop { argmax { all_rows ; grand total } ; nato member } ; uk } = true", "interpret": "select the row whose grand total record of all rows is maximum . the nato member record of this row is uk .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "grand total_5": 5, "nato member_6": 6, "uk_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "grand total_5": "grand total", "nato member_6": "nato member", "uk_7": "uk"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "grand total_5": [0], "nato member_6": [1], "uk_7": [2]}, "table_header": ["nato member", "aircraft carriers", "battleships", "cruisers", "escorts", "submarines", "torpedo boat squadrons", "s motor ship / s naval trawler", "grand total"], "table_cont": [["united states", "6", "1", "3", "40", "9", "-", "-", "59"], ["uk", "3", "1", "2", "31", "17", "4", "8 + trawlers", "66"], ["canada", "1", "-", "1", "5", "-", "-", "-", "7"], ["france", "-", "-", "-", "7", "-", "-", "2", "20"], ["denmark", "-", "-", "-", "3", "2", "-", "-", "7"], ["norway", "-", "-", "-", "2", "2", "3", "3", "26"], ["portugal", "-", "-", "-", "3", "-", "-", "-", "3"], ["netherlands", "-", "-", "-", "5", "3", "-", "5", "13"], ["belgium", "-", "-", "-", "-", "-", "-", "-", "2"], ["totals :", "10", "2", "6", "96", "33", "7", "18", "203"]], "query": "eq { hop { argmax { all_rows ; grand total } ; nato member } ; uk } = true", "question": "the largest number of craft participating in exercise mainbrace were provide by the united kingdom ."}, {"topic": "1983 miami dolphins season", "wiki": "https://en.wikipedia.org/wiki/1983_Miami_Dolphins_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16023753-2.html.csv", "action": "superlative", "sent": "the game played on week 1 of the 1983 miami dolphins season drew the highest attendance .", "annotation": {"scope": "all", "col_superlative": "5", "row_superlative": "1", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "argmax", "args": ["all_rows", "attendance"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; attendance }"}, "week"], "result": "1", "ind": 1, "tostr": "hop { argmax { all_rows ; attendance } ; week }"}, "1"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; attendance } ; week } ; 1 } = true", "tointer": "select the row whose attendance record of all rows is maximum . the week record of this row is 1 ."}, "logic_str": "eq { hop { argmax { all_rows ; attendance } ; week } ; 1 } = true", "interpret": "select the row whose attendance record of all rows is maximum . the week record of this row is 1 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "num_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "attendance_5": 5, "week_6": 6, "1_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "num_hop_1": "num_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "attendance_5": "attendance", "week_6": "week", "1_7": "1"}, "g_adj": {"eq_2": [3], "result_3": [], "num_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "attendance_5": [0], "week_6": [1], "1_7": [2]}, "table_header": ["week", "date", "opponent", "result", "attendance"], "table_cont": [["1", "september 4 , 1983", "buffalo bills", "w 12 - 0", "78715"], ["2", "september 11 , 1983", "new england patriots", "w 34 - 24", "59343"], ["3", "september 19 , 1983", "los angeles raiders", "l 27 - 14", "57796"], ["4", "september 25 , 1983", "kansas city chiefs", "w 14 - 6", "50785"], ["5", "october 2 , 1983", "new orleans saints", "l 17 - 7", "66489"], ["6", "october 9 , 1983", "buffalo bills", "l 38 - 35", "59948"], ["7", "october 16 , 1983", "new york jets", "w 32 - 14", "58615"], ["8", "october 23 , 1983", "baltimore colts", "w 21 - 7", "32343"], ["9", "october 30 , 1983", "los angeles rams", "w 30 - 14", "72175"], ["10", "november 6 , 1983", "san francisco 49ers", "w 20 - 17", "57832"], ["11", "november 13 , 1983", "new england patriots", "l 17 - 6", "60771"], ["12", "november 20 , 1983", "baltimore colts", "w 37 - 0", "54482"], ["13", "november 28 , 1983", "cincinnati bengals", "w 38 - 14", "74506"], ["14", "december 4 , 1983", "houston oilers", "w 24 - 17", "39434"], ["15", "december 10 , 1983", "atlanta falcons", "w 31 - 24", "56725"], ["16", "december 16 , 1983", "new york jets", "w 34 - 14", "59975"]], "query": "eq { hop { argmax { all_rows ; attendance } ; week } ; 1 } = true", "question": "the game played on week 1 of the 1983 miami dolphins season drew the highest attendance ."}, {"topic": "list of amd mobile microprocessors", "wiki": "https://en.wikipedia.org/wiki/List_of_AMD_mobile_microprocessors", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27277284-8.html.csv", "action": "unique", "sent": "the mobile athlon 64 2700 + is the only amd mobile microprocessor with a 12 cache value of 512 kb .", "annotation": {"scope": "all", "row": "1", "col": "3", "col_other": "1", "criterion": "equal", "value": "512 kb", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "l2 cache", "512 kb"], "result": null, "ind": 0, "tointer": "select the rows whose l2 cache record fuzzily matches to 512 kb .", "tostr": "filter_eq { all_rows ; l2 cache ; 512 kb }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; l2 cache ; 512 kb } }", "tointer": "select the rows whose l2 cache record fuzzily matches to 512 kb . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "l2 cache", "512 kb"], "result": null, "ind": 0, "tointer": "select the rows whose l2 cache record fuzzily matches to 512 kb .", "tostr": "filter_eq { all_rows ; l2 cache ; 512 kb }"}, "model number"], "result": "mobile athlon 64 2700 +", "ind": 2, "tostr": "hop { filter_eq { all_rows ; l2 cache ; 512 kb } ; model number }"}, "mobile athlon 64 2700 +"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; l2 cache ; 512 kb } ; model number } ; mobile athlon 64 2700 + }", "tointer": "the model number record of this unqiue row is mobile athlon 64 2700 + ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; l2 cache ; 512 kb } } ; eq { hop { filter_eq { all_rows ; l2 cache ; 512 kb } ; model number } ; mobile athlon 64 2700 + } } = true", "tointer": "select the rows whose l2 cache record fuzzily matches to 512 kb . there is only one such row in the table . the model number record of this unqiue row is mobile athlon 64 2700 + ."}, "logic_str": "and { only { filter_eq { all_rows ; l2 cache ; 512 kb } } ; eq { hop { filter_eq { all_rows ; l2 cache ; 512 kb } ; model number } ; mobile athlon 64 2700 + } } = true", "interpret": "select the rows whose l2 cache record fuzzily matches to 512 kb . there is only one such row in the table . the model number record of this unqiue row is mobile athlon 64 2700 + .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "l2 cache_7": 7, "512 kb_8": 8, "str_eq_3": 3, "str_hop_2": 2, "model number_9": 9, "mobile athlon 64 2700 +_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "l2 cache_7": "l2 cache", "512 kb_8": "512 kb", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "model number_9": "model number", "mobile athlon 64 2700 +_10": "mobile athlon 64 2700 +"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "l2 cache_7": [0], "512 kb_8": [0], "str_eq_3": [4], "str_hop_2": [3], "model number_9": [2], "mobile athlon 64 2700 +_10": [3]}, "table_header": ["model number", "frequency", "l2 cache", "ht", "mult 1", "v core", "tdp", "socket", "release date", "part number ( s )"], "table_cont": [["mobile athlon 64 2700 +", "1600 mhz", "512 kb", "800 mhz", "8x", "1.50 v", "19 - 81.5 w", "socket754", "may 2004", "ama2700bey4ap ( c0 )"], ["mobile athlon 64 2800 +", "1600 mhz", "1024kb", "800 mhz", "8x", "1.50 v", "19 - 81.5 w", "socket 754", "february 2004", "ama2800bex5ap ( c0 ) ama2800bex5ar ( cg )"], ["mobile athlon 64 3000 +", "1800 mhz", "1024kb", "800 mhz", "9x", "1.50 v", "19 - 81.5 w", "socket 754", "september 2003", "ama3000bex5ap ( c0 ) ama3000bex5ar ( cg )"], ["mobile athlon 64 3200 +", "2000 mhz", "1024kb", "800 mhz", "10x", "1.50 v", "19 - 81.5 w", "socket 754", "september 2003", "ama3200bex5ap ( c0 ) ama3200bex5ar ( cg )"], ["mobile athlon 64 3400 +", "2200 mhz", "1024kb", "800 mhz", "11x", "1.50 v", "19 - 81.5 w", "socket 754", "september 2003", "ama3400bex5ap ( c0 ) ama3400bex5ar ( cg )"]], "query": "and { only { filter_eq { all_rows ; l2 cache ; 512 kb } } ; eq { hop { filter_eq { all_rows ; l2 cache ; 512 kb } ; model number } ; mobile athlon 64 2700 + } } = true", "question": "the mobile athlon 64 2700 + is the only amd mobile microprocessor with a 12 cache value of 512 kb ."}, {"topic": "list of schools in the southland region", "wiki": "https://en.wikipedia.org/wiki/List_of_schools_in_the_Southland_Region", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12375672-2.html.csv", "action": "majority", "sent": "all of the schools in the southland region are coed gendered schools .", "annotation": {"scope": "all", "col": "3", "most_or_all": "all", "criterion": "fuzzily_match", "value": "coed", "subset": null}, "logic": {"func": "all_str_eq", "args": ["all_rows", "gender", "coed"], "result": true, "ind": 0, "tointer": "for the gender records of all rows , all of them fuzzily match to coed .", "tostr": "all_eq { all_rows ; gender ; coed } = true"}, "logic_str": "all_eq { all_rows ; gender ; coed } = true", "interpret": "for the gender records of all rows , all of them fuzzily match to coed .", "num_func": 1, "nid": 1, "g_ids": {"all_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "gender_3": 3, "coed_4": 4}, "g_ids_features": {"all_str_eq_0": "all_str_eq", "result_1": "true", "all_rows_2": "all_rows", "gender_3": "gender", "coed_4": "coed"}, "g_adj": {"all_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "gender_3": [0], "coed_4": [0]}, "table_header": ["name", "years", "gender", "area", "authority", "decile", "roll"], "table_cont": [["east gore school", "1 - 6", "coed", "gore", "state", "3", "102"], ["gore high school", "9 - 15", "coed", "gore", "state", "6", "653"], ["gore main school", "1 - 6", "coed", "gore", "state", "6", "209"], ["knapdale school", "1 - 8", "coed", "knapdale", "state", "7", "37"], ["longford intermediate", "7 - 8", "coed", "gore", "state", "5", "250"], ["mataura school", "1 - 6", "coed", "mataura", "state", "1", "96"], ["otama school", "1 - 8", "coed", "otama", "state", "9", "29"], ["pukerau school", "1 - 6", "coed", "pukerau", "state", "8", "45"], ["st mary 's school", "1 - 6", "coed", "gore", "state integrated", "7", "182"], ["st peter 's college", "7 - 15", "coed", "gore", "state integrated", "8", "414"], ["waikaka school", "1 - 8", "coed", "waikaka", "state", "8", "39"], ["west gore school", "1 - 6", "coed", "gore", "state", "6", "241"], ["willowbank school", "1 - 6", "coed", "maitland", "state", "8", "9"]], "query": "all_eq { all_rows ; gender ; coed } = true", "question": "all of the schools in the southland region are coed gendered schools ."}, {"topic": "mission albany", "wiki": "https://en.wikipedia.org/wiki/Mission_Albany", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12026040-1.html.csv", "action": "count", "sent": "during mission albany , two of the pathfinders airborne units had a drop zone c.", "annotation": {"scope": "subset", "criterion": "equal", "value": "c", "result": "2", "col": "6", "subset": {"col": "2", "criterion": "equal", "value": "pathfinders"}}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": [{"func": "filter_str_eq", "args": ["all_rows", "airborne unit", "pathfinders"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; airborne unit ; pathfinders }", "tointer": "select the rows whose airborne unit record fuzzily matches to pathfinders ."}, "drop zone", "c"], "result": null, "ind": 1, "tointer": "select the rows whose airborne unit record fuzzily matches to pathfinders . among these rows , select the rows whose drop zone record fuzzily matches to c .", "tostr": "filter_eq { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone ; c }"}], "result": "2", "ind": 2, "tostr": "count { filter_eq { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone ; c } }", "tointer": "select the rows whose airborne unit record fuzzily matches to pathfinders . among these rows , select the rows whose drop zone record fuzzily matches to c . the number of such rows is 2 ."}, "2"], "result": true, "ind": 3, "tostr": "eq { count { filter_eq { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone ; c } } ; 2 } = true", "tointer": "select the rows whose airborne unit record fuzzily matches to pathfinders . among these rows , select the rows whose drop zone record fuzzily matches to c . the number of such rows is 2 ."}, "logic_str": "eq { count { filter_eq { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone ; c } } ; 2 } = true", "interpret": "select the rows whose airborne unit record fuzzily matches to pathfinders . among these rows , select the rows whose drop zone record fuzzily matches to c . the number of such rows is 2 .", "num_func": 4, "nid": 4, "g_ids": {"eq_3": 3, "result_4": 4, "count_2": 2, "filter_str_eq_1": 1, "filter_str_eq_0": 0, "all_rows_5": 5, "airborne unit_6": 6, "pathfinders_7": 7, "drop zone_8": 8, "c_9": 9, "2_10": 10}, "g_ids_features": {"eq_3": "eq", "result_4": "true", "count_2": "count", "filter_str_eq_1": "filter_str_eq", "filter_str_eq_0": "filter_str_eq", "all_rows_5": "all_rows", "airborne unit_6": "airborne unit", "pathfinders_7": "pathfinders", "drop zone_8": "drop zone", "c_9": "c", "2_10": "2"}, "g_adj": {"eq_3": [4], "result_4": [], "count_2": [3], "filter_str_eq_1": [2], "filter_str_eq_0": [1], "all_rows_5": [0], "airborne unit_6": [0], "pathfinders_7": [0], "drop zone_8": [1], "c_9": [1], "2_10": [3]}, "table_header": ["serial", "airborne unit", "troop carrier group", "of c - 47s", "uk base", "drop zone", "drop zone time"], "table_cont": [["1", "pathfinders", "1st pathfinder prov", "3", "raf north witham", "a", "0020"], ["2", "pathfinders", "1st pathfinder prov", "3", "raf north witham", "c", "0025"], ["6a", "pathfinders", "1st pathfinder prov", "2", "raf north witham", "c", "0027"], ["3", "pathfinders", "1st pathfinder prov", "3", "raf north witham", "d", "0035"], ["7", "2d bn 502d pir", "438th tcg", "36", "raf greenham common", "a", "0048"], ["8", "3rd bn 502d pir", "438th tcg", "45", "raf greenham common", "a", "0050"], ["9", "1st bn 502d pir", "436th tcg", "36", "raf membury", "a", "0055"], ["10", "377th para fa", "436th tcg", "54", "raf membury", "a", "0108"], ["11", "1st bn 506th pir", "439th tcg", "45", "raf upottery", "c", "0114"], ["12", "2nd bn 506th pir", "439th tcg", "36", "raf upottery", "c", "0120"], ["13", "3rd bn 501st pir div hq", "435th tcg", "45", "raf welford", "c", "0120"], ["14", "1st bn 501st pir", "441st tcg", "45", "raf merryfield", "d", "0126"], ["15", "2d bn 501st pir", "441st tcg", "45", "raf merryfield", "d", "0134"], ["16", "3rd bn 506th pir co c 326th engr bn", "440th tcg", "45", "raf exeter", "d", "0140"]], "query": "eq { count { filter_eq { filter_eq { all_rows ; airborne unit ; pathfinders } ; drop zone ; c } } ; 2 } = true", "question": "during mission albany , two of the pathfinders airborne units had a drop zone c."}, {"topic": "2003 - 04 toronto raptors season", "wiki": "https://en.wikipedia.org/wiki/2003%E2%80%9304_Toronto_Raptors_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-15869204-8.html.csv", "action": "majority", "sent": "most of the games played , vince carter was the leading scorer .", "annotation": {"scope": "all", "col": "5", "most_or_all": "most", "criterion": "fuzzily_match", "value": "vince carter", "subset": null}, "logic": {"func": "most_str_eq", "args": ["all_rows", "high points", "vince carter"], "result": true, "ind": 0, "tointer": "for the high points records of all rows , most of them fuzzily match to vince carter .", "tostr": "most_eq { all_rows ; high points ; vince carter } = true"}, "logic_str": "most_eq { all_rows ; high points ; vince carter } = true", "interpret": "for the high points records of all rows , most of them fuzzily match to vince carter .", "num_func": 1, "nid": 1, "g_ids": {"most_str_eq_0": 0, "result_1": 1, "all_rows_2": 2, "high points_3": 3, "vince carter_4": 4}, "g_ids_features": {"most_str_eq_0": "most_str_eq", "result_1": "true", "all_rows_2": "all_rows", "high points_3": "high points", "vince carter_4": "vince carter"}, "g_adj": {"most_str_eq_0": [1], "result_1": [], "all_rows_2": [0], "high points_3": [0], "vince carter_4": [0]}, "table_header": ["game", "date", "team", "score", "high points", "high rebounds", "high assists", "location attendance", "record"], "table_cont": [["60", "march 2", "miami", "w 89 - 86 ( ot )", "vince carter ( 27 )", "chris bosh ( 9 )", "vince carter ( 8 )", "american airlines arena 14178", "26 - 34"], ["61", "march 3", "washington", "l 70 - 84 ( ot )", "donyell marshall ( 22 )", "donyell marshall ( 10 )", "milt palacio ( 8 )", "mci center 13921", "26 - 35"], ["62", "march 5", "new york", "l 103 - 109 ( ot )", "vince carter ( 32 )", "donyell marshall ( 11 )", "vince carter ( 9 )", "air canada centre 19287", "26 - 36"], ["63", "march 7", "new orleans", "w 84 - 76 ( ot )", "vince carter ( 26 )", "donyell marshall ( 14 )", "vince carter ( 8 )", "air canada centre 17031", "27 - 36"], ["64", "march 9", "indiana", "l 84 - 94 ( ot )", "vince carter ( 28 )", "donyell marshall ( 13 )", "rod strickland ( 16 )", "conseco fieldhouse 15123", "27 - 37"], ["65", "march 10", "cleveland", "l 92 - 106 ( ot )", "vince carter ( 19 )", "donyell marshall ( 12 )", "rod strickland ( 6 )", "air canada centre 17459", "27 - 38"], ["66", "march 14", "atlanta", "w 101 - 84 ( ot )", "vince carter ( 32 )", "chris bosh ( 16 )", "vince carter , jalen rose ( 7 )", "air canada centre 17628", "28 - 38"], ["67", "march 17", "utah", "w 85 - 81 ( ot )", "vince carter ( 24 )", "vince carter ( 9 )", "jalen rose ( 6 )", "air canada centre 17875", "29 - 38"], ["68", "march 19", "chicago", "l 91 - 96 ( ot )", "vince carter ( 30 )", "chris bosh ( 14 )", "jalen rose ( 6 )", "air canada centre 19348", "29 - 39"], ["69", "march 21", "new orleans", "w 121 - 120 ( ot )", "vince carter ( 42 )", "donyell marshall ( 7 )", "vince carter ( 12 )", "new orleans arena 14307", "30 - 39"], ["70", "march 23", "memphis", "l 86 - 95 ( ot )", "vince carter ( 30 )", "donyell marshall ( 17 )", "jalen rose ( 5 )", "pyramid arena 13191", "30 - 40"], ["71", "march 24", "houston", "l 89 - 90 ( ot )", "vince carter ( 26 )", "vince carter ( 13 )", "jalen rose ( 7 )", "toyota center 14388", "30 - 41"], ["72", "march 26", "new york", "l 101 - 108 ( ot )", "vince carter ( 40 )", "chris bosh ( 9 )", "jalen rose ( 9 )", "madison square garden 19763", "30 - 42"], ["73", "march 28", "memphis", "l 88 - 94 ( ot )", "jalen rose ( 18 )", "donyell marshall ( 14 )", "vince carter ( 9 )", "air canada centre 19088", "30 - 43"]], "query": "most_eq { all_rows ; high points ; vince carter } = true", "question": "most of the games played , vince carter was the leading scorer ."}, {"topic": "united states house of representatives elections , 1994", "wiki": "https://en.wikipedia.org/wiki/United_States_House_of_Representatives_elections%2C_1994", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-1341522-41.html.csv", "action": "count", "sent": "4 of the incumbents for pennsylvania in the '94 us house of representatives elections are unopposed .", "annotation": {"scope": "all", "criterion": "fuzzily_match", "value": "unopposed", "result": "4", "col": "6", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_str_eq", "args": ["all_rows", "opponent", "unopposed"], "result": null, "ind": 0, "tointer": "select the rows whose opponent record fuzzily matches to unopposed .", "tostr": "filter_eq { all_rows ; opponent ; unopposed }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; opponent ; unopposed } }", "tointer": "select the rows whose opponent record fuzzily matches to unopposed . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; opponent ; unopposed } } ; 4 } = true", "tointer": "select the rows whose opponent record fuzzily matches to unopposed . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; opponent ; unopposed } } ; 4 } = true", "interpret": "select the rows whose opponent record fuzzily matches to unopposed . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "opponent_5": 5, "unopposed_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "opponent_5": "opponent", "unopposed_6": "unopposed", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "opponent_5": [0], "unopposed_6": [0], "4_7": [2]}, "table_header": ["district", "incumbent", "party", "first elected", "status", "opponent"], "table_cont": [["pennsylvania4", "ron klink", "democratic", "1992", "re - elected", "ron klink ( d ) 64.2 % ed peglow ( r ) 35.8 %"], ["pennsylvania5", "william f clinger , jr", "republican", "1978", "re - elected", "william f clinger , jr ( r ) unopposed"], ["pennsylvania7", "curt weldon", "republican", "1986", "re - elected", "curt weldon ( r ) 69.7 % sara r nichols ( d ) 30.3 %"], ["pennsylvania9", "bud shuster", "republican", "1972", "re - elected", "bud shuster ( r ) unopposed"], ["pennsylvania12", "john murtha", "democratic", "1974", "re - elected", "john murtha ( d ) 68.9 % bill choby ( r ) 31.1 %"], ["pennsylvania17", "george gekas", "republican", "1982", "re - elected", "george gekas ( r ) unopposed"], ["pennsylvania18", "rick santorum", "republican", "1990", "retired to run for us senate democratic gain", "michael f doyle ( d ) 54.8 % john mccarty ( r ) 45.2 %"], ["pennsylvania19", "william f goodling", "republican", "1974", "re - elected", "william f goodling ( r ) unopposed"]], "query": "eq { count { filter_eq { all_rows ; opponent ; unopposed } } ; 4 } = true", "question": "4 of the incumbents for pennsylvania in the '94 us house of representatives elections are unopposed ."}, {"topic": "swimming at the 2000 summer olympics - women 's 50 metre freestyle", "wiki": "https://en.wikipedia.org/wiki/Swimming_at_the_2000_Summer_Olympics_%E2%80%93_Women%27s_50_metre_freestyle", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-12385343-6.html.csv", "action": "comparative", "sent": "amy van dyken finished the race in less time than vivienne rignall .", "annotation": {"row_1": "2", "row_2": "6", "col": "5", "col_other": "3", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "amy van dyken"], "result": null, "ind": 0, "tointer": "select the rows whose name record fuzzily matches to amy van dyken .", "tostr": "filter_eq { all_rows ; name ; amy van dyken }"}, "time"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; name ; amy van dyken } ; time }", "tointer": "select the rows whose name record fuzzily matches to amy van dyken . take the time record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "name", "vivienne rignall"], "result": null, "ind": 1, "tointer": "select the rows whose name record fuzzily matches to vivienne rignall .", "tostr": "filter_eq { all_rows ; name ; vivienne rignall }"}, "time"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; name ; vivienne rignall } ; time }", "tointer": "select the rows whose name record fuzzily matches to vivienne rignall . take the time record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; name ; amy van dyken } ; time } ; hop { filter_eq { all_rows ; name ; vivienne rignall } ; time } } = true", "tointer": "select the rows whose name record fuzzily matches to amy van dyken . take the time record of this row . select the rows whose name record fuzzily matches to vivienne rignall . take the time record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; name ; amy van dyken } ; time } ; hop { filter_eq { all_rows ; name ; vivienne rignall } ; time } } = true", "interpret": "select the rows whose name record fuzzily matches to amy van dyken . take the time record of this row . select the rows whose name record fuzzily matches to vivienne rignall . take the time record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "name_7": 7, "amy van dyken_8": 8, "time_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "name_11": 11, "vivienne rignall_12": 12, "time_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "name_7": "name", "amy van dyken_8": "amy van dyken", "time_9": "time", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "name_11": "name", "vivienne rignall_12": "vivienne rignall", "time_13": "time"}, "g_adj": {"less_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "name_7": [0], "amy van dyken_8": [0], "time_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "name_11": [1], "vivienne rignall_12": [1], "time_13": [3]}, "table_header": ["rank", "lane", "name", "nationality", "time"], "table_cont": [["1", "4", "inge de bruijn", "netherlands", "24.13"], ["2", "5", "amy van dyken", "united states", "25.00"], ["3", "2", "alison sheppard", "great britain", "25.32"], ["4", "3", "martina moravcov\u00e3 \u00a1", "slovakia", "25.49"], ["5", "1", "anna - karin kammerling", "sweden", "25.61"], ["5", "6", "vivienne rignall", "new zealand", "25.61"], ["7", "7", "olga mukomol", "ukraine", "25.88"], ["8", "8", "rania elwani", "egypt", "25.95"]], "query": "less { hop { filter_eq { all_rows ; name ; amy van dyken } ; time } ; hop { filter_eq { all_rows ; name ; vivienne rignall } ; time } } = true", "question": "amy van dyken finished the race in less time than vivienne rignall ."}, {"topic": "manila", "wiki": "https://en.wikipedia.org/wiki/Manila", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-184334-2.html.csv", "action": "count", "sent": "there are 16 listed districts in the city of manila .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "16", "col": "1", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "district"], "result": null, "ind": 0, "tointer": "select the rows whose district record is arbitrary .", "tostr": "filter_all { all_rows ; district }"}], "result": "16", "ind": 1, "tostr": "count { filter_all { all_rows ; district } }", "tointer": "select the rows whose district record is arbitrary . the number of such rows is 16 ."}, "16"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; district } } ; 16 } = true", "tointer": "select the rows whose district record is arbitrary . the number of such rows is 16 ."}, "logic_str": "eq { count { filter_all { all_rows ; district } } ; 16 } = true", "interpret": "select the rows whose district record is arbitrary . the number of such rows is 16 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "district_5": 5, "16_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "district_5": "district", "16_6": "16"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "district_5": [0], "16_6": [2]}, "table_header": ["district", "s barangay", "population ( 2010 census )", "area ( has )", "pop density ( per km2 )"], "table_cont": [["binondo", "10", "12985", "66.11", "19641.5"], ["ermita", "13", "7143", "158.91", "4495.0"], ["intramuros", "5", "4925", "67.26", "7322.3"], ["malate", "57", "77513", "259.58", "29860.9"], ["paco", "43", "70978", "278.69", "25468.4"], ["pandacan", "38", "73895", "166.00", "44515.1"], ["port area", "5", "57405", "315.28", "18207.6"], ["quiapo", "16", "24886", "84.69", "29384.8"], ["sampaloc", "192", "241528", "513.71", "47016.4"], ["san andr\u00e3s", "65", "115942", "168.02", "69004.9"], ["san miguel", "12", "15992", "91.37", "17502.5"], ["san nicolas", "15", "44241", "163.85", "27000.9"], ["santa ana", "34", "60952", "169.42", "35976.9"], ["santa cruz", "82", "115747", "309.01", "37457.4"], ["santa mesa", "51", "99933", "261.01", "38287.0"], ["tondo", "259", "628106", "865.13", "72602.5"]], "query": "eq { count { filter_all { all_rows ; district } } ; 16 } = true", "question": "there are 16 listed districts in the city of manila ."}, {"topic": "2000 carolina panthers season", "wiki": "https://en.wikipedia.org/wiki/2000_Carolina_Panthers_season", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14094220-1.html.csv", "action": "ordinal", "sent": "alvin mckinley was the fourth highest draft pick of the carolina panthers in the 2000 season .", "annotation": {"row": "4", "col": "2", "order": "4", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "pick", "4"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; pick ; 4 }"}, "player"], "result": "alvin mckinley", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; pick ; 4 } ; player }"}, "alvin mckinley"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; pick ; 4 } ; player } ; alvin mckinley } = true", "tointer": "select the row whose pick record of all rows is 4th maximum . the player record of this row is alvin mckinley ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; pick ; 4 } ; player } ; alvin mckinley } = true", "interpret": "select the row whose pick record of all rows is 4th maximum . the player record of this row is alvin mckinley .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "pick_5": 5, "4_6": 6, "player_7": 7, "alvin mckinley_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "pick_5": "pick", "4_6": "4", "player_7": "player", "alvin mckinley_8": "alvin mckinley"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "pick_5": [0], "4_6": [0], "player_7": [1], "alvin mckinley_8": [2]}, "table_header": ["round", "pick", "player", "position", "college"], "table_cont": [["1", "23", "rashard anderson", "defensive back", "jackson state"], ["2", "57", "deon grant", "free safety", "tennessee"], ["3", "82", "leander jordan", "offensive tackle", "indiana university of pennsylvania"], ["4", "120", "alvin mckinley", "defensive end", "mississippi state"], ["5", "147", "gillis wilson", "defensive end", "southern u"], ["6", "182", "jeno james", "guard", "auburn"], ["7", "221", "lester towns", "middle linebacker", "washington"]], "query": "eq { hop { nth_argmax { all_rows ; pick ; 4 } ; player } ; alvin mckinley } = true", "question": "alvin mckinley was the fourth highest draft pick of the carolina panthers in the 2000 season ."}, {"topic": "list of tallest buildings in chile", "wiki": "https://en.wikipedia.org/wiki/List_of_tallest_buildings_in_Chile", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-27067379-1.html.csv", "action": "unique", "sent": "the torre entel is the only tallest building in chile with 0 floors .", "annotation": {"scope": "all", "row": "7", "col": "5", "col_other": "2", "criterion": "equal", "value": "0", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "number of floors", "0"], "result": null, "ind": 0, "tointer": "select the rows whose number of floors record is equal to 0 .", "tostr": "filter_eq { all_rows ; number of floors ; 0 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; number of floors ; 0 } }", "tointer": "select the rows whose number of floors record is equal to 0 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "number of floors", "0"], "result": null, "ind": 0, "tointer": "select the rows whose number of floors record is equal to 0 .", "tostr": "filter_eq { all_rows ; number of floors ; 0 }"}, "building"], "result": "torre entel", "ind": 2, "tostr": "hop { filter_eq { all_rows ; number of floors ; 0 } ; building }"}, "torre entel"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; number of floors ; 0 } ; building } ; torre entel }", "tointer": "the building record of this unqiue row is torre entel ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; number of floors ; 0 } } ; eq { hop { filter_eq { all_rows ; number of floors ; 0 } ; building } ; torre entel } } = true", "tointer": "select the rows whose number of floors record is equal to 0 . there is only one such row in the table . the building record of this unqiue row is torre entel ."}, "logic_str": "and { only { filter_eq { all_rows ; number of floors ; 0 } } ; eq { hop { filter_eq { all_rows ; number of floors ; 0 } ; building } ; torre entel } } = true", "interpret": "select the rows whose number of floors record is equal to 0 . there is only one such row in the table . the building record of this unqiue row is torre entel .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "number of floors_7": 7, "0_8": 8, "str_eq_3": 3, "str_hop_2": 2, "building_9": 9, "torre entel_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "number of floors_7": "number of floors", "0_8": "0", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "building_9": "building", "torre entel_10": "torre entel"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "number of floors_7": [0], "0_8": [0], "str_eq_3": [4], "str_hop_2": [3], "building_9": [2], "torre entel_10": [3]}, "table_header": ["position", "building", "city", "height", "number of floors", "completion"], "table_cont": [["1", "gran torre santiago", "santiago", "300 m", "70", "2012"], ["2", "titanium la portada", "santiago", "-", "55", "2010"], ["3", "costanera center torre 1", "santiago", "170 m", "41", "2012"], ["3", "costanera center torre 2", "santiago", "170 m", "41", "2012"], ["4", "boulevard kennedy ( marriot )", "santiago", "140 m", "40", "1999"], ["5", "torre telef\u00e3 cubicnica chile", "santiago", "132 m", "32", "1994"], ["6", "torre entel", "santiago", "127 m", "0", "1974"], ["7", "torre de la industria", "santiago", "120 m", "33", "1994"], ["8", "territoria 3000", "santiago", "118 m", "31", "2008"], ["9", "torre mall center", "concepci\u00e3 cubicn", "115 m", "31", "2009"], ["9", "torre centenario", "santiago", "115 m", "31", "2000"]], "query": "and { only { filter_eq { all_rows ; number of floors ; 0 } } ; eq { hop { filter_eq { all_rows ; number of floors ; 0 } ; building } ; torre entel } } = true", "question": "the torre entel is the only tallest building in chile with 0 floors ."}, {"topic": "taking chances", "wiki": "https://en.wikipedia.org/wiki/Taking_Chances", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11391762-5.html.csv", "action": "comparative", "sent": "taking chances was released in japan before it was released in australia .", "annotation": {"row_1": "1", "row_2": "4", "col": "2", "col_other": "1", "relation": "less", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "less", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "region", "japan"], "result": null, "ind": 0, "tointer": "select the rows whose region record fuzzily matches to japan .", "tostr": "filter_eq { all_rows ; region ; japan }"}, "date"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; region ; japan } ; date }", "tointer": "select the rows whose region record fuzzily matches to japan . take the date record of this row ."}, {"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "region", "australia"], "result": null, "ind": 1, "tointer": "select the rows whose region record fuzzily matches to australia .", "tostr": "filter_eq { all_rows ; region ; australia }"}, "date"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; region ; australia } ; date }", "tointer": "select the rows whose region record fuzzily matches to australia . take the date record of this row ."}], "result": true, "ind": 4, "tostr": "less { hop { filter_eq { all_rows ; region ; japan } ; date } ; hop { filter_eq { all_rows ; region ; australia } ; date } } = true", "tointer": "select the rows whose region record fuzzily matches to japan . take the date record of this row . select the rows whose region record fuzzily matches to australia . take the date record of this row . the first record is less than the second record ."}, "logic_str": "less { hop { filter_eq { all_rows ; region ; japan } ; date } ; hop { filter_eq { all_rows ; region ; australia } ; date } } = true", "interpret": "select the rows whose region record fuzzily matches to japan . take the date record of this row . select the rows whose region record fuzzily matches to australia . take the date record of this row . the first record is less than the second record .", "num_func": 5, "nid": 5, "g_ids": {"less_4": 4, "result_5": 5, "str_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "region_7": 7, "japan_8": 8, "date_9": 9, "str_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "region_11": 11, "australia_12": 12, "date_13": 13}, "g_ids_features": {"less_4": "less", "result_5": "true", "str_hop_2": "str_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "region_7": "region", "japan_8": "japan", "date_9": "date", "str_hop_3": "str_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "region_11": "region", "australia_12": "australia", "date_13": "date"}, "g_adj": {"less_4": [5], "result_5": [], "str_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "region_7": [0], "japan_8": [0], "date_9": [2], "str_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "region_11": [1], "australia_12": [1], "date_13": [3]}, "table_header": ["region", "date", "label", "format", "catalog"], "table_cont": [["japan", "november 7 , 2007", "sony", "cd", "eicp - 875"], ["europe", "november 9 , 2007", "columbia", "cd", "88697081142"], ["europe", "november 9 , 2007", "columbia", "cd / dvd", "88697147842"], ["australia", "november 10 , 2007", "epic", "cd", "88697081142"], ["australia", "november 10 , 2007", "epic", "cd / dvd", "88697147842"], ["united states", "november 13 , 2007", "columbia", "cd", "88697081142"], ["united states", "november 13 , 2007", "columbia", "cd / dvd", "88697147842"], ["united states", "december 11 , 2007", "columbia", "cd / dvd / perfume", "88697147862"], ["canada", "november 13 , 2007", "columbia", "cd", "88697081142"], ["canada", "november 13 , 2007", "columbia", "cd / dvd", "88697147842"], ["canada", "december 11 , 2007", "columbia", "cd / dvd / perfume", "88697147862"], ["europe", "february 8 , 2008", "columbia", "cd / dvd / perfume", "88697147862"]], "query": "less { hop { filter_eq { all_rows ; region ; japan } ; date } ; hop { filter_eq { all_rows ; region ; australia } ; date } } = true", "question": "taking chances was released in japan before it was released in australia ."}, {"topic": "le tour de filipinas", "wiki": "https://en.wikipedia.org/wiki/Le_Tour_de_Filipinas", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10694950-1.html.csv", "action": "superlative", "sent": "the year in which le tour de filipinas had the highest number of stages was in 1974 .", "annotation": {"scope": "all", "col_superlative": "3", "row_superlative": "18", "value_mentioned": "no", "max_or_min": "max", "other_col": "1", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "argmax", "args": ["all_rows", "stages"], "result": null, "ind": 0, "tostr": "argmax { all_rows ; stages }"}, "year"], "result": "1974", "ind": 1, "tostr": "hop { argmax { all_rows ; stages } ; year }"}, "1974"], "result": true, "ind": 2, "tostr": "eq { hop { argmax { all_rows ; stages } ; year } ; 1974 } = true", "tointer": "select the row whose stages record of all rows is maximum . the year record of this row is 1974 ."}, "logic_str": "eq { hop { argmax { all_rows ; stages } ; year } ; 1974 } = true", "interpret": "select the row whose stages record of all rows is maximum . the year record of this row is 1974 .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "argmax_0": 0, "all_rows_4": 4, "stages_5": 5, "year_6": 6, "1974_7": 7}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "argmax_0": "argmax", "all_rows_4": "all_rows", "stages_5": "stages", "year_6": "year", "1974_7": "1974"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "argmax_0": [1], "all_rows_4": [0], "stages_5": [0], "year_6": [1], "1974_7": [2]}, "table_header": ["year", "date", "stages", "distance", "winner"], "table_cont": [["1955", "28 april - 1 may", "4", "418 km", "antonio arzala ( phi )"], ["1956", "23 - 27 may", "5", "1057 km", "antonio arzala ( phi )"], ["1957", "28 may - 7 june", "6", "1155 km", "rufino gabot ( phi )"], ["1958", "14 - 20 april", "7", "1517 km", "mamerto eden ( phi )"], ["1959", "12 - 19 april", "8", "1634 km", "antonio arzala ( phi )"], ["1960", "14 - 22 may", "9", "1648 km", "rodrigo abaquita ( phi )"], ["1961", "25 april - 7 may", "12", "2167 km", "jose moring , jr ( phi )"], ["1962", "26 march - 8 april", "12", "1870.23 km", "edmundo de guzman ( phi )"], ["1963", "21 april - 5 may", "14", "2334.38 km", "gonzalo recodos ( phi )"], ["1964", "19 april - 3 may", "14", "1967.60 km", "jose sumalde ( phi )"], ["1965", "25 april - 9 may", "14", "2049.31 km", "jose sumalde ( phi )"], ["1966", "23 april - 8 may", "15", "1999.82 km", "cornelio padilla , jr ( phi )"], ["1967", "12 - 19 april", "8", "1634 km", "cornelio padilla , jr ( phi )"], ["1968", "cancelled", "cancelled", "cancelled", "cancelled"], ["1969", "18 - 27 april", "10", "1208.40 km", "domingo quilban ( phi )"], ["1970 - 1972", "cancelled", "cancelled", "cancelled", "cancelled"], ["1973", "11 - 20 may", "10", "1214 km", "jesus garcia , jr ( phi )"], ["1974", "23 april - 12 may", "18", "2540.95 km", "teodorico rimarim ( phi )"], ["1975", "19 april - 4 may", "15", "2207.87 km", "samson etrata ( phi )"], ["1976", "21 april - 9 may", "6", "2200 km", "modesto bonzo ( phi )"]], "query": "eq { hop { argmax { all_rows ; stages } ; year } ; 1974 } = true", "question": "the year in which le tour de filipinas had the highest number of stages was in 1974 ."}, {"topic": "list of awards and nominations received by the x - files", "wiki": "https://en.wikipedia.org/wiki/List_of_awards_and_nominations_received_by_The_X-Files", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-18552926-7.html.csv", "action": "superlative", "sent": "according to the list of awards and nominations received by the x - files , the first time the x-files was nominated in the best series - drama category was in 1994 .", "annotation": {"scope": "subset", "col_superlative": "1", "row_superlative": "1", "value_mentioned": "yes", "max_or_min": "min", "other_col": "2", "subset": {"col": "2", "criterion": "equal", "value": "best series - drama"}}, "logic": {"func": "eq", "args": [{"func": "min", "args": [{"func": "filter_str_eq", "args": ["all_rows", "category", "best series - drama"], "result": null, "ind": 0, "tostr": "filter_eq { all_rows ; category ; best series - drama }", "tointer": "select the rows whose category record fuzzily matches to best series - drama ."}, "year"], "result": "1994", "ind": 1, "tostr": "min { filter_eq { all_rows ; category ; best series - drama } ; year }", "tointer": "select the rows whose category record fuzzily matches to best series - drama . the minimum year record of these rows is 1994 ."}, "1994"], "result": true, "ind": 2, "tostr": "eq { min { filter_eq { all_rows ; category ; best series - drama } ; year } ; 1994 } = true", "tointer": "select the rows whose category record fuzzily matches to best series - drama . the minimum year record of these rows is 1994 ."}, "logic_str": "eq { min { filter_eq { all_rows ; category ; best series - drama } ; year } ; 1994 } = true", "interpret": "select the rows whose category record fuzzily matches to best series - drama . the minimum year record of these rows is 1994 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "min_1": 1, "filter_str_eq_0": 0, "all_rows_4": 4, "category_5": 5, "best series - drama_6": 6, "year_7": 7, "1994_8": 8}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "min_1": "min", "filter_str_eq_0": "filter_str_eq", "all_rows_4": "all_rows", "category_5": "category", "best series - drama_6": "best series - drama", "year_7": "year", "1994_8": "1994"}, "g_adj": {"eq_2": [3], "result_3": [], "min_1": [2], "filter_str_eq_0": [1], "all_rows_4": [0], "category_5": [0], "best series - drama_6": [0], "year_7": [1], "1994_8": [2]}, "table_header": ["year", "category", "recipients and nominees", "role / episode", "result"], "table_cont": [["1994", "best series - drama", "best series - drama", "best series - drama", "won"], ["1995", "best actor in leading role - drama series", "david duchovny", "fox mulder", "nominated"], ["1995", "best actress in a leading role - drama series", "gillian anderson", "dana scully", "nominated"], ["1996", "best actor in leading role - drama series", "david duchovny", "david duchovny", "won"], ["1996", "best actress in leading role - drama series", "gillian anderson", "gillian anderson", "won"], ["1996", "best series - drama", "best series - drama", "best series - drama", "won"], ["1997", "best actor in leading role - drama series", "david duchovny", "david duchovny", "nominated"], ["1997", "best actress in leading role - drama series", "gillian anderson", "gillian anderson", "nominated"], ["1997", "best series - drama", "best series - drama", "best series - drama", "won"], ["1998", "best actor in leading role - drama series", "david duchovny", "david duchovny", "nominated"], ["1998", "best actress in leading role - drama series", "gillian anderson", "gillian anderson", "nominated"], ["1998", "best series - drama", "best series - drama", "best series - drama", "nominated"]], "query": "eq { min { filter_eq { all_rows ; category ; best series - drama } ; year } ; 1994 } = true", "question": "according to the list of awards and nominations received by the x - files , the first time the x-files was nominated in the best series - drama category was in 1994 ."}, {"topic": "list of cities , towns and villages in vojvodina", "wiki": "https://en.wikipedia.org/wiki/List_of_cities%2C_towns_and_villages_in_Vojvodina", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-2562572-8.html.csv", "action": "ordinal", "sent": "the 2nd highest population for cities , towns , and villages in vojvodina is the urban settlement ruma .", "annotation": {"row": "4", "col": "7", "order": "2", "col_other": "1", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "population ( 2011 )", "2"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; population ( 2011 ) ; 2 }"}, "urban settlement"], "result": "ruma", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; population ( 2011 ) ; 2 } ; urban settlement }"}, "ruma"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; population ( 2011 ) ; 2 } ; urban settlement } ; ruma } = true", "tointer": "select the row whose population ( 2011 ) record of all rows is 2nd maximum . the urban settlement record of this row is ruma ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; population ( 2011 ) ; 2 } ; urban settlement } ; ruma } = true", "interpret": "select the row whose population ( 2011 ) record of all rows is 2nd maximum . the urban settlement record of this row is ruma .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "population (2011)_5": 5, "2_6": 6, "urban settlement_7": 7, "ruma_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "population (2011)_5": "population ( 2011 )", "2_6": "2", "urban settlement_7": "urban settlement", "ruma_8": "ruma"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "population (2011)_5": [0], "2_6": [0], "urban settlement_7": [1], "ruma_8": [2]}, "table_header": ["urban settlement", "cyrillic name", "city / municipality", "district", "population ( 1991 )", "population ( 2002 )", "population ( 2011 )"], "table_cont": [["in\u0111ija", "\u0438\u043d\u0452\u0438\u0458\u0430", "in\u0111ija", "srem", "23061", "26247", "26025"], ["irig", "\u0438\u0440\u0438\u0433", "irig", "srem", "4414", "4848", "4415"], ["ma\u010dvanska mitrovica", "\u043c\u0430\u0447\u0432\u0430\u043d\u0441\u043a\u0430 \u043c\u0438\u0442\u0440\u043e\u0432\u0438\u0446\u0430", "sremska mitrovica", "srem", "3788", "3896", "3873"], ["ruma", "\u0440\u0443\u043c\u0430", "ruma", "srem", "28582", "32229", "30076"], ["sremska mitrovica", "\u0441\u0440\u0435\u043c\u0441\u043a\u0430 \u043c\u0438\u0442\u0440\u043e\u0432\u0438\u0446\u0430", "sremska mitrovica", "srem", "38834", "39084", "37751"], ["stara pazova", "\u0441\u0442\u0430\u0440\u0430 \u043f\u0430\u0437\u043e\u0432\u0430", "stara pazova", "srem", "17110", "18645", "18602"]], "query": "eq { hop { nth_argmax { all_rows ; population ( 2011 ) ; 2 } ; urban settlement } ; ruma } = true", "question": "the 2nd highest population for cities , towns , and villages in vojvodina is the urban settlement ruma ."}, {"topic": "1989 masters tournament", "wiki": "https://en.wikipedia.org/wiki/1989_Masters_Tournament", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-16514242-7.html.csv", "action": "unique", "sent": "jodie mudd was the only player in the 1989 masters tournament with a par of - 1 .", "annotation": {"scope": "all", "row": "7", "col": "5", "col_other": "2", "criterion": "equal", "value": "-1", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_eq", "args": ["all_rows", "to par", "-1"], "result": null, "ind": 0, "tointer": "select the rows whose to par record is equal to -1 .", "tostr": "filter_eq { all_rows ; to par ; -1 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; to par ; -1 } }", "tointer": "select the rows whose to par record is equal to -1 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_eq", "args": ["all_rows", "to par", "-1"], "result": null, "ind": 0, "tointer": "select the rows whose to par record is equal to -1 .", "tostr": "filter_eq { all_rows ; to par ; -1 }"}, "player"], "result": "jodie mudd", "ind": 2, "tostr": "hop { filter_eq { all_rows ; to par ; -1 } ; player }"}, "jodie mudd"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; to par ; -1 } ; player } ; jodie mudd }", "tointer": "the player record of this unqiue row is jodie mudd ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; to par ; -1 } } ; eq { hop { filter_eq { all_rows ; to par ; -1 } ; player } ; jodie mudd } } = true", "tointer": "select the rows whose to par record is equal to -1 . there is only one such row in the table . the player record of this unqiue row is jodie mudd ."}, "logic_str": "and { only { filter_eq { all_rows ; to par ; -1 } } ; eq { hop { filter_eq { all_rows ; to par ; -1 } ; player } ; jodie mudd } } = true", "interpret": "select the rows whose to par record is equal to -1 . there is only one such row in the table . the player record of this unqiue row is jodie mudd .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_eq_0": 0, "all_rows_6": 6, "to par_7": 7, "-1_8": 8, "str_eq_3": 3, "str_hop_2": 2, "player_9": 9, "jodie mudd_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_eq_0": "filter_eq", "all_rows_6": "all_rows", "to par_7": "to par", "-1_8": "-1", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "player_9": "player", "jodie mudd_10": "jodie mudd"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_eq_0": [1, 2], "all_rows_6": [0], "to par_7": [0], "-1_8": [0], "str_eq_3": [4], "str_hop_2": [3], "player_9": [2], "jodie mudd_10": [3]}, "table_header": ["place", "player", "country", "score", "to par", "money"], "table_cont": [["t1", "nick faldo", "england", "68 + 73 + 77 + 65 = 283", "- 5", "playoff"], ["t1", "scott hoch", "united states", "69 + 74 + 71 + 69 = 283", "- 5", "playoff"], ["t3", "ben crenshaw", "united states", "71 + 72 + 70 + 71 = 284", "- 4", "64450"], ["t3", "greg norman", "australia", "74 + 75 + 68 + 67 = 284", "- 4", "64450"], ["5", "seve ballesteros", "spain", "71 + 72 + 73 + 69 = 285", "- 3", "44400"], ["6", "mike reid", "united states", "72 + 71 + 71 + 72 = 286", "- 2", "40000"], ["7", "jodie mudd", "united states", "73 + 76 + 72 + 66 = 287", "- 1", "37200"], ["t8", "chip beck", "united states", "74 + 76 + 70 + 68 = 288", "e", "32200"], ["t8", "jos\u00e9 mar\u00eda olaz\u00e1bal", "spain", "77 + 73 + 70 + 68 = 288", "e", "32200"], ["t8", "jeff sluman", "united states", "74 + 72 + 74 + 68 = 288", "e", "32200"]], "query": "and { only { filter_eq { all_rows ; to par ; -1 } } ; eq { hop { filter_eq { all_rows ; to par ; -1 } ; player } ; jodie mudd } } = true", "question": "jodie mudd was the only player in the 1989 masters tournament with a par of - 1 ."}, {"topic": "kings county , new brunswick", "wiki": "https://en.wikipedia.org/wiki/Kings_County%2C_New_Brunswick", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-171236-1.html.csv", "action": "aggregation", "sent": "the total population sum of kings county , new brunswick , is composed of 46350 habitants .", "annotation": {"scope": "all", "col": "4", "type": "sum", "result": "46350", "subset": null}, "logic": {"func": "round_eq", "args": [{"func": "sum", "args": ["all_rows", "population"], "result": "46350", "ind": 0, "tostr": "sum { all_rows ; population }"}, "46350"], "result": true, "ind": 1, "tostr": "round_eq { sum { all_rows ; population } ; 46350 } = true", "tointer": "the sum of the population record of all rows is 46350 ."}, "logic_str": "round_eq { sum { all_rows ; population } ; 46350 } = true", "interpret": "the sum of the population record of all rows is 46350 .", "num_func": 2, "nid": 2, "g_ids": {"eq_1": 1, "result_2": 2, "sum_0": 0, "all_rows_3": 3, "population_4": 4, "46350_5": 5}, "g_ids_features": {"eq_1": "eq", "result_2": "true", "sum_0": "sum", "all_rows_3": "all_rows", "population_4": "population", "46350_5": "46350"}, "g_adj": {"eq_1": [2], "result_2": [], "sum_0": [1], "all_rows_3": [0], "population_4": [0], "46350_5": [1]}, "table_header": ["official name", "status", "area km 2", "population", "census ranking"], "table_cont": [["quispamsis", "town", "57.06", "17886", "231 of 5008"], ["rothesay", "town", "34.73", "11947", "336 of 5008"], ["grand bay - westfield", "town", "59.73", "5117", "693 of 5008"], ["sussex", "town", "9.03", "4312", "780 of 5008"], ["hampton", "town", "21.00", "4292", "782 of 5008"], ["sussex corner", "village", "9.43", "1495", "1609 of 5008"], ["norton", "village", "75.35", "1301", "1757 of 5008"]], "query": "round_eq { sum { all_rows ; population } ; 46350 } = true", "question": "the total population sum of kings county , new brunswick , is composed of 46350 habitants ."}, {"topic": "athletics at the 1935 central american and caribbean games", "wiki": "https://en.wikipedia.org/wiki/Athletics_at_the_1935_Central_American_and_Caribbean_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10102961-2.html.csv", "action": "count", "sent": "5 nations were represented in athletics at the 1935 central american and caribbean games .", "annotation": {"scope": "all", "criterion": "all", "value": "n/a", "result": "5", "col": "2", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_all", "args": ["all_rows", "nation"], "result": null, "ind": 0, "tointer": "select the rows whose nation record is arbitrary .", "tostr": "filter_all { all_rows ; nation }"}], "result": "5", "ind": 1, "tostr": "count { filter_all { all_rows ; nation } }", "tointer": "select the rows whose nation record is arbitrary . the number of such rows is 5 ."}, "5"], "result": true, "ind": 2, "tostr": "eq { count { filter_all { all_rows ; nation } } ; 5 } = true", "tointer": "select the rows whose nation record is arbitrary . the number of such rows is 5 ."}, "logic_str": "eq { count { filter_all { all_rows ; nation } } ; 5 } = true", "interpret": "select the rows whose nation record is arbitrary . the number of such rows is 5 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_all_0": 0, "all_rows_4": 4, "nation_5": 5, "5_6": 6}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_all_0": "filter_all", "all_rows_4": "all_rows", "nation_5": "nation", "5_6": "5"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_all_0": [1], "all_rows_4": [0], "nation_5": [0], "5_6": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "cuba", "8", "9", "7", "24"], ["2", "mexico", "7", "6", "8", "21"], ["3", "puerto rico", "4", "4", "3", "11"], ["4", "guatemala", "1", "1", "1", "3"], ["5", "panama", "0", "0", "1", "1"]], "query": "eq { count { filter_all { all_rows ; nation } } ; 5 } = true", "question": "5 nations were represented in athletics at the 1935 central american and caribbean games ."}, {"topic": "judo at the 2001 east asian games", "wiki": "https://en.wikipedia.org/wiki/Judo_at_the_2001_East_Asian_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-14288427-3.html.csv", "action": "count", "sent": "4 nations received 0 gold medals in judo at the 2001 east asian games .", "annotation": {"scope": "all", "criterion": "equal", "value": "0", "result": "4", "col": "3", "subset": null}, "logic": {"func": "eq", "args": [{"func": "count", "args": [{"func": "filter_eq", "args": ["all_rows", "gold", "0"], "result": null, "ind": 0, "tointer": "select the rows whose gold record is equal to 0 .", "tostr": "filter_eq { all_rows ; gold ; 0 }"}], "result": "4", "ind": 1, "tostr": "count { filter_eq { all_rows ; gold ; 0 } }", "tointer": "select the rows whose gold record is equal to 0 . the number of such rows is 4 ."}, "4"], "result": true, "ind": 2, "tostr": "eq { count { filter_eq { all_rows ; gold ; 0 } } ; 4 } = true", "tointer": "select the rows whose gold record is equal to 0 . the number of such rows is 4 ."}, "logic_str": "eq { count { filter_eq { all_rows ; gold ; 0 } } ; 4 } = true", "interpret": "select the rows whose gold record is equal to 0 . the number of such rows is 4 .", "num_func": 3, "nid": 3, "g_ids": {"eq_2": 2, "result_3": 3, "count_1": 1, "filter_eq_0": 0, "all_rows_4": 4, "gold_5": 5, "0_6": 6, "4_7": 7}, "g_ids_features": {"eq_2": "eq", "result_3": "true", "count_1": "count", "filter_eq_0": "filter_eq", "all_rows_4": "all_rows", "gold_5": "gold", "0_6": "0", "4_7": "4"}, "g_adj": {"eq_2": [3], "result_3": [], "count_1": [2], "filter_eq_0": [1], "all_rows_4": [0], "gold_5": [0], "0_6": [0], "4_7": [2]}, "table_header": ["rank", "nation", "gold", "silver", "bronze", "total"], "table_cont": [["1", "japan", "6", "4", "4", "14"], ["2", "south korea", "5", "6", "4", "15"], ["3", "china", "5", "3", "5", "13"], ["4", "kazakhstan", "0", "2", "5", "7"], ["5", "chinese taipei", "0", "1", "4", "5"], ["6", "mongolia", "0", "0", "5", "5"], ["7", "australia", "0", "0", "4", "4"], ["total", "total", "16", "16", "31", "63"]], "query": "eq { count { filter_eq { all_rows ; gold ; 0 } } ; 4 } = true", "question": "4 nations received 0 gold medals in judo at the 2001 east asian games ."}, {"topic": "argentina at the 2011 pan american games", "wiki": "https://en.wikipedia.org/wiki/Argentina_at_the_2011_Pan_American_Games", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-29521180-35.html.csv", "action": "unique", "sent": "argentina 's only win in the 2011 pan american games for fencing was by alexander achten .", "annotation": {"scope": "all", "row": "4", "col": "4", "col_other": "1", "criterion": "equal", "value": "15-8", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "round of 16", "15-8"], "result": null, "ind": 0, "tointer": "select the rows whose round of 16 record fuzzily matches to 15-8 .", "tostr": "filter_eq { all_rows ; round of 16 ; 15-8 }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; round of 16 ; 15-8 } }", "tointer": "select the rows whose round of 16 record fuzzily matches to 15-8 . there is only one such row in the table ."}, {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "round of 16", "15-8"], "result": null, "ind": 0, "tointer": "select the rows whose round of 16 record fuzzily matches to 15-8 .", "tostr": "filter_eq { all_rows ; round of 16 ; 15-8 }"}, "athlete"], "result": "alexander achten", "ind": 2, "tostr": "hop { filter_eq { all_rows ; round of 16 ; 15-8 } ; athlete }"}, "alexander achten"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; round of 16 ; 15-8 } ; athlete } ; alexander achten }", "tointer": "the athlete record of this unqiue row is alexander achten ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; round of 16 ; 15-8 } } ; eq { hop { filter_eq { all_rows ; round of 16 ; 15-8 } ; athlete } ; alexander achten } } = true", "tointer": "select the rows whose round of 16 record fuzzily matches to 15-8 . there is only one such row in the table . the athlete record of this unqiue row is alexander achten ."}, "logic_str": "and { only { filter_eq { all_rows ; round of 16 ; 15-8 } } ; eq { hop { filter_eq { all_rows ; round of 16 ; 15-8 } ; athlete } ; alexander achten } } = true", "interpret": "select the rows whose round of 16 record fuzzily matches to 15-8 . there is only one such row in the table . the athlete record of this unqiue row is alexander achten .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "round of 16_7": 7, "15-8_8": 8, "str_eq_3": 3, "str_hop_2": 2, "athlete_9": 9, "alexander achten_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "round of 16_7": "round of 16", "15-8_8": "15-8", "str_eq_3": "str_eq", "str_hop_2": "str_hop", "athlete_9": "athlete", "alexander achten_10": "alexander achten"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "round of 16_7": [0], "15-8_8": [0], "str_eq_3": [4], "str_hop_2": [3], "athlete_9": [2], "alexander achten_10": [3]}, "table_header": ["athlete", "event", "elimination poule", "round of 16", "quarterfinals", "semifinals", "final"], "table_cont": [["jos\u00e9 dom\u00ednguez", "individual \u00e9p\u00e9e", "3 v - 2 d", "w kelsey ( usa ) l 8 - 15", "did not advance", "did not advance", "did not advance"], ["federico muller", "individual foil", "3 v - 2 d", "e turbide ( can ) l 8 - 15", "did not advance", "did not advance", "did not advance"], ["felipe saucedo", "individual foil", "1 v - 4 d", "d gomez ( mex ) l 4 - 15", "did not advance", "did not advance", "did not advance"], ["alexander achten", "individual sabre", "5 v - 0 d", "c valencia ( col ) w 15 - 8", "p beaudry ( can ) l 13 - 15", "did not advance", "did not advance"], ["ricardo bustamante", "individual sabre", "4 v - 1 d", "y iriarte ( cub ) l 8 - 15", "did not advance", "did not advance", "did not advance"]], "query": "and { only { filter_eq { all_rows ; round of 16 ; 15-8 } } ; eq { hop { filter_eq { all_rows ; round of 16 ; 15-8 } ; athlete } ; alexander achten } } = true", "question": "argentina 's only win in the 2011 pan american games for fencing was by alexander achten ."}, {"topic": "outline of denmark", "wiki": "https://en.wikipedia.org/wiki/Outline_of_Denmark", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/1-16278602-1.html.csv", "action": "comparative", "sent": "the capital region of denmark has a higher population than the region of southern denmark .", "annotation": {"row_1": "1", "row_2": "5", "col": "5", "col_other": "2", "relation": "greater", "record_mentioned": "no", "diff_result": null}, "logic": {"func": "greater", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "english name", "capital region of denmark"], "result": null, "ind": 0, "tointer": "select the rows whose english name record fuzzily matches to capital region of denmark .", "tostr": "filter_eq { all_rows ; english name ; capital region of denmark }"}, "population ( january 1 , 2008 )"], "result": null, "ind": 2, "tostr": "hop { filter_eq { all_rows ; english name ; capital region of denmark } ; population ( january 1 , 2008 ) }", "tointer": "select the rows whose english name record fuzzily matches to capital region of denmark . take the population ( january 1 , 2008 ) record of this row ."}, {"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "english name", "region of southern denmark"], "result": null, "ind": 1, "tointer": "select the rows whose english name record fuzzily matches to region of southern denmark .", "tostr": "filter_eq { all_rows ; english name ; region of southern denmark }"}, "population ( january 1 , 2008 )"], "result": null, "ind": 3, "tostr": "hop { filter_eq { all_rows ; english name ; region of southern denmark } ; population ( january 1 , 2008 ) }", "tointer": "select the rows whose english name record fuzzily matches to region of southern denmark . take the population ( january 1 , 2008 ) record of this row ."}], "result": true, "ind": 4, "tostr": "greater { hop { filter_eq { all_rows ; english name ; capital region of denmark } ; population ( january 1 , 2008 ) } ; hop { filter_eq { all_rows ; english name ; region of southern denmark } ; population ( january 1 , 2008 ) } } = true", "tointer": "select the rows whose english name record fuzzily matches to capital region of denmark . take the population ( january 1 , 2008 ) record of this row . select the rows whose english name record fuzzily matches to region of southern denmark . take the population ( january 1 , 2008 ) record of this row . the first record is greater than the second record ."}, "logic_str": "greater { hop { filter_eq { all_rows ; english name ; capital region of denmark } ; population ( january 1 , 2008 ) } ; hop { filter_eq { all_rows ; english name ; region of southern denmark } ; population ( january 1 , 2008 ) } } = true", "interpret": "select the rows whose english name record fuzzily matches to capital region of denmark . take the population ( january 1 , 2008 ) record of this row . select the rows whose english name record fuzzily matches to region of southern denmark . take the population ( january 1 , 2008 ) record of this row . the first record is greater than the second record .", "num_func": 5, "nid": 5, "g_ids": {"greater_4": 4, "result_5": 5, "num_hop_2": 2, "filter_str_eq_0": 0, "all_rows_6": 6, "english name_7": 7, "capital region of denmark_8": 8, "population (january 1 , 2008)_9": 9, "num_hop_3": 3, "filter_str_eq_1": 1, "all_rows_10": 10, "english name_11": 11, "region of southern denmark_12": 12, "population (january 1 , 2008)_13": 13}, "g_ids_features": {"greater_4": "greater", "result_5": "true", "num_hop_2": "num_hop", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "english name_7": "english name", "capital region of denmark_8": "capital region of denmark", "population (january 1 , 2008)_9": "population ( january 1 , 2008 )", "num_hop_3": "num_hop", "filter_str_eq_1": "filter_str_eq", "all_rows_10": "all_rows", "english name_11": "english name", "region of southern denmark_12": "region of southern denmark", "population (january 1 , 2008)_13": "population ( january 1 , 2008 )"}, "g_adj": {"greater_4": [5], "result_5": [], "num_hop_2": [4], "filter_str_eq_0": [2], "all_rows_6": [0], "english name_7": [0], "capital region of denmark_8": [0], "population (january 1 , 2008)_9": [2], "num_hop_3": [4], "filter_str_eq_1": [3], "all_rows_10": [1], "english name_11": [1], "region of southern denmark_12": [1], "population (january 1 , 2008)_13": [3]}, "table_header": ["danish name", "english name", "seat of administration", "largest city", "population ( january 1 , 2008 )", "area ( km square )", "pop density ( per km square )"], "table_cont": [["region hovedstaden", "capital region of denmark", "hiller\u00f8d", "copenhagen", "1645825", "2561", "642.6"], ["region midtjylland", "central denmark region", "viborg", "\u00e5rhus", "1237041", "13142", "94.2"], ["region nordjylland", "north denmark region", "aalborg", "aalborg", "578839", "7927", "73.2"], ["region sj\u00e6lland", "region zealand", "sor\u00f8", "roskilde", "819427", "7273", "112.7"], ["region syddanmark", "region of southern denmark", "vejle", "odense", "1194659", "12191", "97.99"]], "query": "greater { hop { filter_eq { all_rows ; english name ; capital region of denmark } ; population ( january 1 , 2008 ) } ; hop { filter_eq { all_rows ; english name ; region of southern denmark } ; population ( january 1 , 2008 ) } } = true", "question": "the capital region of denmark has a higher population than the region of southern denmark ."}, {"topic": "claudia hoffmann", "wiki": "https://en.wikipedia.org/wiki/Claudia_Hoffmann", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-11537397-1.html.csv", "action": "unique", "sent": "2005 was the only year in which claudia hoffmann finished 6th in her event .", "annotation": {"scope": "all", "row": "3", "col": "4", "col_other": "1", "criterion": "equal", "value": "6th", "subset": null}, "logic": {"func": "and", "args": [{"func": "only", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "6th"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to 6th .", "tostr": "filter_eq { all_rows ; position ; 6th }"}], "result": true, "ind": 1, "tostr": "only { filter_eq { all_rows ; position ; 6th } }", "tointer": "select the rows whose position record fuzzily matches to 6th . there is only one such row in the table ."}, {"func": "eq", "args": [{"func": "num_hop", "args": [{"func": "filter_str_eq", "args": ["all_rows", "position", "6th"], "result": null, "ind": 0, "tointer": "select the rows whose position record fuzzily matches to 6th .", "tostr": "filter_eq { all_rows ; position ; 6th }"}, "year"], "result": "2005", "ind": 2, "tostr": "hop { filter_eq { all_rows ; position ; 6th } ; year }"}, "2005"], "result": true, "ind": 3, "tostr": "eq { hop { filter_eq { all_rows ; position ; 6th } ; year } ; 2005 }", "tointer": "the year record of this unqiue row is 2005 ."}], "result": true, "ind": 4, "tostr": "and { only { filter_eq { all_rows ; position ; 6th } } ; eq { hop { filter_eq { all_rows ; position ; 6th } ; year } ; 2005 } } = true", "tointer": "select the rows whose position record fuzzily matches to 6th . there is only one such row in the table . the year record of this unqiue row is 2005 ."}, "logic_str": "and { only { filter_eq { all_rows ; position ; 6th } } ; eq { hop { filter_eq { all_rows ; position ; 6th } ; year } ; 2005 } } = true", "interpret": "select the rows whose position record fuzzily matches to 6th . there is only one such row in the table . the year record of this unqiue row is 2005 .", "num_func": 6, "nid": 5, "g_ids": {"and_4": 4, "result_5": 5, "only_1": 1, "filter_str_eq_0": 0, "all_rows_6": 6, "position_7": 7, "6th_8": 8, "eq_3": 3, "num_hop_2": 2, "year_9": 9, "2005_10": 10}, "g_ids_features": {"and_4": "and", "result_5": "true", "only_1": "only", "filter_str_eq_0": "filter_str_eq", "all_rows_6": "all_rows", "position_7": "position", "6th_8": "6th", "eq_3": "eq", "num_hop_2": "num_hop", "year_9": "year", "2005_10": "2005"}, "g_adj": {"and_4": [5], "result_5": [], "only_1": [4], "filter_str_eq_0": [1, 2], "all_rows_6": [0], "position_7": [0], "6th_8": [0], "eq_3": [4], "num_hop_2": [3], "year_9": [2], "2005_10": [3]}, "table_header": ["year", "competition", "venue", "position", "event"], "table_cont": [["2000", "world junior championships", "santiago , chile", "5th", "4 400 m relay"], ["2001", "european junior championships", "grosseto , italy", "4th", "400 m"], ["2005", "world championships", "helsinki , finland", "6th", "4 400 m relay"], ["2006", "european championships", "gothenburg , sweden", "5th", "4 400 m relay"], ["2007", "european indoor championships", "birmingham , united kingdom", "5th", "4 400 m relay"], ["2010", "european championships", "barcelona , spain", "2nd", "4 400 m relay"]], "query": "and { only { filter_eq { all_rows ; position ; 6th } } ; eq { hop { filter_eq { all_rows ; position ; 6th } ; year } ; 2005 } } = true", "question": "2005 was the only year in which claudia hoffmann finished 6th in her event ."}, {"topic": "2004 cfl draft", "wiki": "https://en.wikipedia.org/wiki/2004_CFL_Draft", "url": "https://raw.githubusercontent.com/wenhuchen/Table-Fact-Checking/master/data/all_csv/2-10975034-1.html.csv", "action": "ordinal", "sent": "in the 2004 cfl draft , the 3rd to last player picked was jean - fredric tremblay .", "annotation": {"row": "7", "col": "1", "order": "3", "col_other": "3", "max_or_min": "max_to_min", "value_mentioned": "no", "scope": "all", "subset": null}, "logic": {"func": "str_eq", "args": [{"func": "str_hop", "args": [{"func": "nth_argmax", "args": ["all_rows", "pick", "3"], "result": null, "ind": 0, "tostr": "nth_argmax { all_rows ; pick ; 3 }"}, "player"], "result": "jean - fredric tremblay", "ind": 1, "tostr": "hop { nth_argmax { all_rows ; pick ; 3 } ; player }"}, "jean - fredric tremblay"], "result": true, "ind": 2, "tostr": "eq { hop { nth_argmax { all_rows ; pick ; 3 } ; player } ; jean - fredric tremblay } = true", "tointer": "select the row whose pick record of all rows is 3rd maximum . the player record of this row is jean - fredric tremblay ."}, "logic_str": "eq { hop { nth_argmax { all_rows ; pick ; 3 } ; player } ; jean - fredric tremblay } = true", "interpret": "select the row whose pick record of all rows is 3rd maximum . the player record of this row is jean - fredric tremblay .", "num_func": 3, "nid": 3, "g_ids": {"str_eq_2": 2, "result_3": 3, "str_hop_1": 1, "nth_argmax_0": 0, "all_rows_4": 4, "pick_5": 5, "3_6": 6, "player_7": 7, "jean - fredric tremblay_8": 8}, "g_ids_features": {"str_eq_2": "str_eq", "result_3": "true", "str_hop_1": "str_hop", "nth_argmax_0": "nth_argmax", "all_rows_4": "all_rows", "pick_5": "pick", "3_6": "3", "player_7": "player", "jean - fredric tremblay_8": "jean - fredric tremblay"}, "g_adj": {"str_eq_2": [3], "result_3": [], "str_hop_1": [2], "nth_argmax_0": [1], "all_rows_4": [0], "pick_5": [0], "3_6": [0], "player_7": [1], "jean - fredric tremblay_8": [2]}, "table_header": ["pick", "cfl team", "player", "position", "college"], "table_cont": [["1", "hamilton tiger - cats", "wayne smith", "ol", "appalachian state"], ["2", "ottawa renegades", "ibrahim khan", "ol", "simon fraser"], ["3", "ottawa renegades", "david azzi", "wr", "ottawa"], ["4", "toronto argonauts", "mark moroz", "ol", "wake forest"], ["5", "bc lions", "oj atogwe", "s", "stanford"], ["6", "saskatchewan roughriders", "ducamel augustin", "fb", "villanova"], ["7", "toronto argonauts", "jean - fredric tremblay", "wr", "laval"], ["8", "montreal alouettes", "alain kashama", "dl", "michigan"], ["9", "edmonton eskimos", "amarpreet sanghera", "ol", "british columbia"]], "query": "eq { hop { nth_argmax { all_rows ; pick ; 3 } ; player } ; jean - fredric tremblay } = true", "question": "in the 2004 cfl draft , the 3rd to last player picked was jean - fredric tremblay ."}]