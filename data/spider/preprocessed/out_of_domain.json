{
    "SELECT lake_name FROM lake WHERE state_name  =  \"california\";": "( lake name ) that belongs to ( lake ) , that have ( ( state name ) equal to ( california ) )",
    "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"chi\";": "( distinct ( paperid of paper ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( venuename of venue ) equal to ( chi ) )",
    "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Alfred Hitchcock\";": "( title of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( alfred hitchcock ) )",
    "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"deep learning\" ORDER BY t4.year ASC;": "( distinct ( datasetid of venue ) ) , ( year of paper ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of movie ) equal to ( datasetid of venue ) ) ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of keyphrase ) ) ) ) , that have ( ( keyphrasename of keyphrase ) equal to ( deep learning ) ) , ordered by ( ( year of paper ) in ascending order )",
    "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;": "( house number of movie ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of movie ) ) ) ) , that have ( ( ( region of venue ) equal to ( yosemite and mono lake area ) ) and ( ( food type of paper ) equal to ( french ) ) and ( ( rating of paper ) greater than ( 5 of 2 ) ) )",
    "SELECT border FROM border_info WHERE state_name  =  \"kentucky\";": "( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( kentucky ) )",
    "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"syntactic parsing\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;": "( distinct ( the number of ( paperid of paper ) ) ) , ( authorid of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of venue ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( paperid of paper ) ) ) ) , that have ( ( keyphrasename of venue ) equal to ( syntactic parsing ) ) , grouped by ( authorid of movie ) , ordered by ( ( the number of ( paperid of paper ) ) in descending order )",
    "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Luke Zettlemoyer\";": "( distinct ( keyphraseid of paper ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of keyphrase ) ) ) ) , that have ( ( authorname of keyphrase ) equal to ( luke zettlemoyer ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"TAIL\" AND t4.venuename  =  \"NIPS\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( tail ) ) and ( ( venuename of paper ) equal to ( nips ) ) )",
    "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"colorado\" );": "( state name ) that belongs to ( highlow ) , that have ( ( highest elevation ) greater than ( highest elevation ) that belongs to ( highlow ) , that have ( ( state name ) equal to ( colorado ) ) )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( alameda ) ) and ( ( rating of paper ) greater than ( 5 of 2 ) ) )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( university of michigan ) )",
    "SELECT state_name FROM border_info WHERE border  =  \"texas\" AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 );": "( state name ) that belongs to ( border info ) , that have ( ( ( border ) equal to ( texas ) ) and ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( length ) greater than ( 750 ) ) ) ) )",
    "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;": "( year of venue ) , ( the sum of ( citation num of venue ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( pvldb ) ) , grouped by ( year of venue )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( city name of venue ) equal to ( alameda ) )",
    "SELECT title FROM publication WHERE YEAR  >  2000;": "( title ) that belongs to ( publication ) , that have ( ( year ) greater than ( 2000 ) )",
    "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;": "( distinct ( the number of ( paperid of movie ) ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( jamie callan ) ) , grouped by ( year of movie )",
    "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"kansas\";": "( city name ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 150000 ) ) and ( ( state name ) equal to ( kansas ) ) )",
    "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"springfield\";": "( the number of ( state name ) ) that belongs to ( city ) , that have ( ( city name ) equal to ( springfield ) )",
    "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );": "( river name ) that belongs to ( river ) , that have ( ( length ) equal to ( the minimum of ( length ) ) that belongs to ( river ) )",
    "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";": "( distinct ( authorid of paper ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of movie ) equal to ( authorid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of venue ) equal to ( noah a smith ) )",
    "SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR  >  2000;": "( the number of ( distinct ( title ) ) ) that belongs to ( publication ) , that have ( ( year ) greater than ( 2000 ) )",
    "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"french\";": "( house number of movie ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of movie ) ) ) ) , that have ( ( ( region of venue ) equal to ( bay area ) ) and ( ( food type of paper ) equal to ( french ) ) )",
    "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );": "( population ) that belongs to ( state ) , that have ( ( state_name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" AND t4.year  >  2000;": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( university of michigan ) ) and ( ( year of paper ) greater than ( 2000 ) ) )",
    "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  10;": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( h. v. jagadish ) ) , grouped by ( keyword of paper ) , that have ( ( the number of ( distinct ( title of movie ) ) ) greater than ( 10 ) )",
    "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"guadalupe peak\";": "( highest elevation ) that belongs to ( highlow ) , that have ( ( highest point ) equal to ( guadalupe peak ) )",
    "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"illinois\";": "( river name ) that belongs to ( river ) , that have ( ( ( length ) greater than ( 750 ) ) and ( ( traverse ) equal to ( illinois ) ) )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"wyoming\" ) AND state_name  =  \"wyoming\";": "( city name ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) equal to ( wyoming ) ) ) and ( ( state name ) equal to ( wyoming ) ) )",
    "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"David M. Blei\" AND t4.venuename  =  \"AISTATS\";": "( distinct ( the number of ( paperid of movie ) ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( david m. blei ) ) and ( ( venuename of paper ) equal to ( aistats ) ) )",
    "SELECT population FROM city WHERE city_name  =  \"boulder\";": "( population ) that belongs to ( city ) , that have ( ( city name ) equal to ( boulder ) )",
    "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"sharon goldwater\";": "( distinct ( paperid of venue ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( sharon goldwater ) )",
    "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"idaho\" );": "( state name ) that belongs to ( highlow ) , that have ( ( ( lowest elevation ) equal to ( the minimum of ( lowest elevation ) ) that belongs to ( highlow ) , that have ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( idaho ) ) ) ) ) and ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( idaho ) ) ) ) )",
    "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );": "( house number of movie ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of movie ) ) ) ) , that have ( ( ( region of venue ) equal to ( bay area ) ) and ( ( food type of paper ) equal to ( american ) ) and ( ( rating of paper ) equal to ( the maximum of ( rating of paper ) ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) ) , that have ( ( ( region of venue ) equal to ( bay area ) ) and ( ( food type of paper ) equal to ( american ) ) ) ) )",
    "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );": "( state name ) that belongs to ( highlow ) , that have ( ( lowest elevation ) equal to ( the minimum of ( lowest elevation ) ) that belongs to ( highlow ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christopher D. Manning\";": "( distinct ( the number of ( distinct ( paperid of venue ) ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( christopher d. manning ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\";": "( distinct ( the number of ( distinct ( paperid of movie ) ) ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( deep learning ) )",
    "SELECT COUNT ( t2.river_name ) FROM river AS t2 JOIN state AS t1 ON t1.state_name  =  t2.traverse WHERE t1.state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );": "( the number of ( river name of venue ) ) that belongs to ( ( river ) , and ( ( state ) satisfied that ( ( state name of paper ) equal to ( traverse of venue ) ) ) ) , that have ( ( state name of paper ) equal to ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( question answering ) ) and ( ( year of movie ) equal to ( 2016 ) ) )",
    "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Jim Jarmusch\" ORDER BY t3.release_year DESC LIMIT 1;": "( title of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( jim jarmusch ) ) , ordered by ( ( release year of movie ) in descending order ) , limited to the top ( 1 )",
    "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );": "( population ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) )",
    "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;": "( year of venue ) , ( the sum of ( citation num of venue ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( vldb ) ) , grouped by ( year of venue )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( bethel island ) ) and ( ( street name of venue ) equal to ( bethel island rd ) ) and ( ( rating of paper ) greater than ( 5 of 2 ) ) )",
    "SELECT DISTINCT paperid FROM paper WHERE title  =  \"machine networks for one shot learning\";": "( distinct ( paperid ) ) that belongs to ( paper ) , that have ( ( title ) equal to ( machine networks for one shot learning ) )",
    "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"China\" AND t3.title  =  \"Rush Hour 3\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of venue ) ) ) ) , that have ( ( ( nationality of paper ) equal to ( china ) ) and ( ( title of movie ) equal to ( rush hour 3 ) ) )",
    "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( the number of ( border ) ) that belongs to ( border info ) , that have ( ( state name ) equal to ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) )",
    "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;": "( name ) that belongs to ( actor ) , that have ( ( ( birth city ) equal to ( austin ) ) and ( ( birth year ) greater than ( 1980 ) ) )",
    "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\";": "( name of venue ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of movie ) equal to ( did of paper ) ) ) , and ( ( organization ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( name of movie ) equal to ( databases ) )",
    "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );": "( state name ) that belongs to ( state ) , that have ( ( density ) equal to ( the minimum of ( density ) ) that belongs to ( state ) )",
    "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";": "( title of keyphrase ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( name of paper ) equal to ( divesh srivastava ) ) )",
    "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;": "( distinct ( citedpaperid of paper ) ) , ( the number of ( citedpaperid of paper ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citedpaperid of paper ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( parsing ) ) , grouped by ( citedpaperid of paper ) , ordered by ( ( the number of ( citedpaperid of paper ) ) in descending order )",
    "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;": "( distinct ( keyphraseid of venue ) ) that belongs to ( ( paper ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( christof dallermassl ) ) and ( ( year of movie ) equal to ( 2000 ) ) )",
    "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );": "( state name ) that belongs to ( highlow ) , that have ( ( highest elevation ) equal to ( the maximum of ( highest elevation ) ) that belongs to ( highlow ) )",
    "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigcomm\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;": "( distinct ( citedpaperid of movie ) ) , ( the number of ( citingpaperid of movie ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of movie ) ) ) , and ( ( venue ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( venuename of venue ) equal to ( sigcomm ) ) , grouped by ( citedpaperid of movie ) , ordered by ( ( the number of ( citingpaperid of movie ) ) in descending order )",
    "SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t2.name  =  \"Cong Yu\" AND t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Yunyao Li\";": "( the number of ( distinct ( title of publication ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of publication ) ) ) , and ( ( writes ) satisfied that ( ( pid of keyphrase ) equal to ( pid of publication ) ) ) , and ( ( writes ) satisfied that ( ( pid of writes ) equal to ( pid of publication ) ) ) , and ( ( author ) satisfied that ( ( aid of keyphrase ) equal to ( aid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of writes ) equal to ( aid of movie ) ) ) ) , that have ( ( ( name of venue ) equal to ( cong yu ) ) and ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of movie ) equal to ( yunyao li ) ) )",
    "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );": "( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( state ) )",
    "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  <  2.5 AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";": "( neighbourhood name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of movie ) equal to ( business id of venue ) ) ) , and ( ( category ) satisfied that ( ( business id of paper ) equal to ( business id of venue ) ) ) , and ( ( neighbourhood ) satisfied that ( ( business id of paper ) equal to ( business id of venue ) ) ) ) , that have ( ( ( city of venue ) equal to ( madison ) ) and ( ( rating of venue ) less than ( 5 of 2 ) ) and ( ( category name of movie ) equal to ( italian ) ) and ( ( category name of paper ) equal to ( restaurant ) ) )",
    "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";": "( distinct ( datasetid of venue ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of movie ) equal to ( datasetid of venue ) ) ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of paper ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( semantic parsing ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Parsing\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( parsing ) ) and ( ( year of movie ) equal to ( 2012 ) ) and ( ( venuename of paper ) equal to ( acl ) ) )",
    "SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";": "( citation num of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( pvldb ) )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( san francisco ) ) and ( ( name of paper ) equal to ( jamerican cuisine ) ) )",
    "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";": "( distinct ( journalid of venue ) ) that belongs to ( ( paper ) , and ( ( journal ) satisfied that ( ( journalid of movie ) equal to ( journalid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( linda shapiro ) )",
    "SELECT traverse FROM river WHERE river_name  =  \"ohio\";": "( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( ohio ) )",
    "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Saving Private Ryan\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of venue ) ) ) ) , that have ( ( title of movie ) equal to ( saving private ryan ) )",
    "SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\";": "( distinct ( venueid of movie ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( datasetname of paper ) equal to ( imagenet ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( ( rating of paper ) greater than or equal to ( 3 ) ) and ( ( category name of venue ) equal to ( bars ) ) and ( ( name of paper ) equal to ( patrick ) ) )",
    "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;": "( distinct ( the number of ( citingpaperid of paper ) ) ) , ( authorid of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( cite ) satisfied that ( ( paperid of venue ) equal to ( citedpaperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( citingpaperid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( daniel a reed ) ) , grouped by ( authorid of movie ) , ordered by ( ( the number of ( citingpaperid of paper ) ) in descending order )",
    "SELECT highest_elevation FROM highlow WHERE state_name  =  \"delaware\";": "( highest elevation ) that belongs to ( highlow ) , that have ( ( state name ) equal to ( delaware ) )",
    "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );": "( state name ) that belongs to ( state ) , that have ( ( state_name ) not in ( ( traverse ) that belongs to ( river ) ) )",
    "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  >  750;": "( the number of ( distinct ( traverse ) ) ) that belongs to ( river ) , that have ( ( length ) greater than ( 750 ) )",
    "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );": "( mountain name ) that belongs to ( mountain ) , that have ( ( mountain altitude ) equal to ( the maximum of ( mountain altitude ) ) that belongs to ( mountain ) )",
    "SELECT abstract FROM publication WHERE title  =  \"Making database systems usable\";": "( abstract ) that belongs to ( publication ) , that have ( ( title ) equal to ( making database systems usable ) )",
    "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );": "( river name ) that belongs to ( river ) , that have ( ( traverse ) in ( ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) ) ) )",
    "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;": "( title of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( pvldb ) ) and ( ( citation num of venue ) greater than ( 200 ) ) and ( ( year of venue ) greater than ( 2000 ) ) )",
    "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );": "( state name ) that belongs to ( state ) , that have ( ( density ) equal to ( the maximum of ( density ) ) that belongs to ( state ) )",
    "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid GROUP BY t3.title ORDER BY COUNT ( DISTINCT t2.genre  ) DESC LIMIT 1;": "( title of movie ) that belongs to ( ( genre ) , and ( ( classification ) satisfied that ( ( gid of venue ) equal to ( gid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , grouped by ( title of movie ) , ordered by ( ( the number of ( distinct ( genre of venue ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2014 AND t4.venuename  =  \"ACL\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;": "( distinct ( the number of ( paperid of movie ) ) ) , ( keyphraseid of paper ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( year of movie ) equal to ( 2014 ) ) and ( ( venuename of paper ) equal to ( acl ) ) ) , grouped by ( keyphraseid of paper ) , ordered by ( ( the number of ( paperid of movie ) ) in descending order )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );": "( city name ) that belongs to ( city ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) )",
    "SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC;": "( distinct ( journalid of movie ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( donald e knuth ) ) , grouped by ( journalid of movie ) , ( year of movie ) , ordered by ( ( year of movie ) in descending order )",
    "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"University of Michigan\";": "( name of paper ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( university of michigan ) )",
    "SELECT LENGTH FROM river WHERE river_name  =  \"rio grande\";": "( length ) that belongs to ( river ) , that have ( ( river name ) equal to ( rio grande ) )",
    "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;": "( distinct ( citedpaperid of paper ) ) , ( the number of ( citedpaperid of paper ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citedpaperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( ohad shamir ) ) , grouped by ( citedpaperid of paper ) , ordered by ( ( the number of ( citedpaperid of paper ) ) in descending order )",
    "SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\";": "( distinct ( title of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( donald e knuth ) )",
    "SELECT COUNT ( DISTINCT t2.title  )  ,  t2.release_year FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Brad Pitt\" GROUP BY t2.release_year;": "( the number of ( distinct ( title of venue ) ) ) , ( release year of venue ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( brad pitt ) ) , grouped by ( release year of venue )",
    "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";": "( distinct ( year of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of keyphrase ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( michael stonebraker ) ) and ( ( keyphrasename of keyphrase ) equal to ( gis database ) ) )",
    "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;": "( distinct ( the number of ( paperid of movie ) ) ) , ( keyphraseid of paper ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( year of movie ) equal to ( 2015 ) ) and ( ( venuename of paper ) equal to ( nips ) ) ) , grouped by ( keyphraseid of paper ) , ordered by ( ( the number of ( paperid of movie ) ) in descending order )",
    "SELECT population FROM state WHERE state_name  =  \"california\";": "( population ) that belongs to ( state ) , that have ( ( state name ) equal to ( california ) )",
    "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";": "( title of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of keyphrase ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of paper ) equal to ( msid of keyphrase ) ) ) , and ( ( cast ) satisfied that ( ( mid of paper ) equal to ( msid of movie ) ) ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) ) , that have ( ( ( name of paper ) equal to ( woody strode ) ) and ( ( name of venue ) equal to ( jason robards ) ) )",
    "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;": "( distinct ( journalid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( takashi matsumoto ) ) , grouped by ( journalid of movie )",
    "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );": "( capital of paper ) that belongs to ( ( highlow ) , and ( ( state ) satisfied that ( ( state name of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( highest elevation of venue ) equal to ( the maximum of ( highest elevation ) ) that belongs to ( highlow ) )",
    "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );": "( state name ) that belongs to ( state ) , that have ( ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( california ) ) ) ) ) and ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( california ) ) ) ) )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( food type of paper ) equal to ( french ) ) and ( ( rating of paper ) greater than ( 5 of 2 ) ) )",
    "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );": "( length ) that belongs to ( river ) , that have ( ( length ) equal to ( the minimum of ( length ) ) that belongs to ( river ) )",
    "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";": "( population ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) equal to ( alaska ) ) ) and ( ( state name ) equal to ( alaska ) ) )",
    "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";": "( state name ) that belongs to ( mountain ) , that have ( ( mountain name ) equal to ( whitney ) )",
    "SELECT lowest_elevation FROM highlow WHERE lowest_point  =  \"death valley\";": "( lowest elevation ) that belongs to ( highlow ) , that have ( ( lowest point ) equal to ( death valley ) )",
    "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";": "( distinct ( the number of ( paperid of paper ) ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2015 ) ) and ( ( venuename of venue ) equal to ( nature communications ) ) )",
    "SELECT name FROM director WHERE nationality  =  \"Afghanistan\";": "( name ) that belongs to ( director ) , that have ( ( nationality ) equal to ( afghanistan ) )",
    "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";": "( title of venue ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( robin wright ) )",
    "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";": "( the number of ( all items ) ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) ) , that have ( ( ( region of venue ) equal to ( bay area ) ) and ( ( name of paper ) equal to ( denny ) ) )",
    "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;": "( river name ) that belongs to ( river ) , grouped by ( river name ) , ordered by ( ( the number of ( distinct ( traverse ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"idaho\";": "( the number of ( river name ) ) that belongs to ( river ) , that have ( ( traverse ) equal to ( idaho ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( madison ) ) and ( ( category name of venue ) equal to ( escape games ) ) )",
    "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Adrienne\";": "( the number of ( distinct ( text of paper ) ) ) that belongs to ( ( user ) , and ( ( review ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( name of venue ) equal to ( adrienne ) )",
    "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";": "( distinct ( journalid of movie ) ) , ( venueid of paper ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( peter mertens ) )",
    "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";": "( distinct ( paperid of movie ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( richard ladner ) ) and ( ( venuename of paper ) equal to ( chi ) ) )",
    "SELECT SUM ( area ) FROM state;": "( the sum of ( area ) ) that belongs to ( state )",
    "SELECT COUNT ( city_name ) FROM city;": "( the number of ( city name ) ) that belongs to ( city )",
    "SELECT area FROM state WHERE state_name  =  \"new mexico\";": "( area ) that belongs to ( state ) , that have ( ( state name ) equal to ( new mexico ) )",
    "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name WHERE t2.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );": "( border of paper ) that belongs to ( ( border info ) , and ( ( border info ) satisfied that ( ( border of venue ) equal to ( state name of paper ) ) ) ) , that have ( ( t2.state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) ) ) )",
    "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;": "( the number of ( distinct ( title of movie ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( year of movie ) greater than ( 2000 ) ) )",
    "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;": "( house number of venue ) , ( name of paper ) that belongs to ( ( location ) , and ( ( restaurant ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( t1.city name ) in ( ( city name ) that belongs to ( geographic ) , that have ( ( region ) equal to ( region0 ) ) ) ) and ( ( rating of paper ) greater than ( 5 of 2 ) ) )",
    "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";": "( capital of venue ) that belongs to ( ( state ) , and ( ( border info ) satisfied that ( ( state name of venue ) equal to ( border of paper ) ) ) ) , that have ( ( state name of paper ) equal to ( texas ) )",
    "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Liwen Xiong\" AND t3.year  =  2015;": "( distinct ( paperid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( liwen xiong ) ) and ( ( year of movie ) equal to ( 2015 ) ) )",
    "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );": "( river name ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) )",
    "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";": "( distinct ( authorid of paper ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( year of venue ) equal to ( 2016 ) ) and ( ( venuename of movie ) equal to ( acl ) ) )",
    "SELECT population FROM city WHERE city_name  =  \"seattle\" AND state_name  =  \"washington\";": "( population ) that belongs to ( city ) , that have ( ( ( city name ) equal to ( seattle ) ) and ( ( state name ) equal to ( washington ) ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Question Answering\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( question answering ) )",
    "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";": "( title of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( pvldb ) )",
    "SELECT highest_elevation FROM highlow;": "( highest elevation ) that belongs to ( highlow )",
    "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.citation_num  >  200;": "( title of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( vldb ) ) and ( ( citation num of paper ) greater than ( 200 ) ) )",
    "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.year  =  2015;": "( name of movie ) that belongs to ( ( tip ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( ( name of paper ) equal to ( barrio cafe ) ) and ( ( year of venue ) equal to ( 2015 ) ) )",
    "SELECT name FROM actor WHERE birth_year  =  1984;": "( name ) that belongs to ( actor ) , that have ( ( birth year ) equal to ( 1984 ) )",
    "SELECT DISTINCT paperid  ,  title FROM paper WHERE title LIKE \"the effects of juicing for cancer patients\" AND YEAR  >  2006;": "( distinct ( paperid ) ) , ( title ) that belongs to ( paper ) , that have ( ( ( title ) like ( the effects of juicing for cancer patients ) ) and ( ( year ) greater than ( 2006 ) ) )",
    "SELECT state_name FROM state WHERE capital  =  \"salem\";": "( state name ) that belongs to ( state ) , that have ( ( capital ) equal to ( salem ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"monte carlo simulation\" AND t3.year  >  2011;": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( monte carlo simulation ) ) and ( ( year of movie ) greater than ( 2011 ) ) )",
    "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2015 AND t2.name  =  \"Niloofar\";": "( the number of ( distinct ( text of paper ) ) ) that belongs to ( ( user ) , and ( ( review ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2015 ) ) and ( ( name of venue ) equal to ( niloofar ) ) )",
    "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";": "( distinct ( the number of ( citedpaperid of movie ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( cite ) satisfied that ( ( paperid of venue ) equal to ( citingpaperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( mirella lapata ) )",
    "SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t2.neighbourhood_name  =  \"Brighton Heights\";": "( the sum of ( count of movie ) ) that belongs to ( ( checkin ) , and ( ( business ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( neighbourhood ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( neighbourhood name of venue ) equal to ( brighton heights ) )",
    "SELECT COUNT ( t1.river_name ) FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );": "( the number of ( river name of paper ) ) that belongs to ( ( highlow ) , and ( ( river ) satisfied that ( ( traverse of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( highest elevation of venue ) equal to ( the maximum of ( highest elevation ) ) that belongs to ( highlow ) )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( san francisco ) ) and ( ( food type of paper ) equal to ( french ) ) and ( ( rating of paper ) equal to ( the maximum of ( rating of paper ) ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( san francisco ) ) and ( ( food type of paper ) equal to ( french ) ) ) ) )",
    "SELECT DISTINCT COUNT ( t4.citedpaperid )  ,  t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"luke zettlemoyer\" GROUP BY t3.year;": "( distinct ( the number of ( citedpaperid of paper ) ) ) , ( year of movie ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citedpaperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( luke zettlemoyer ) ) , grouped by ( year of movie )",
    "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";": "( distinct ( the number of ( distinct ( paperid of movie ) ) ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( t1.datasetname ) like ( imagenet ) )",
    "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );": "( length ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) )",
    "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  \"Niloofar\";": "( name of paper ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( name of movie ) equal to ( niloofar ) )",
    "SELECT highest_point FROM highlow WHERE state_name  =  \"texas\";": "( highest point ) that belongs to ( highlow ) , that have ( ( state name ) equal to ( texas ) )",
    "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );": "( traverse ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) )",
    "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";": "( the number of ( all items ) ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) ) , that have ( ( ( region of venue ) equal to ( bay area ) ) and ( ( food type of paper ) equal to ( chinese ) ) )",
    "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Peter Mertens\" AND t1.authorname  =  \"Dina Barbian\";": "( distinct ( paperid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of movie ) equal to ( authorid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of venue ) equal to ( peter mertens ) ) and ( ( authorname of paper ) equal to ( dina barbian ) ) )",
    "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\" AND t6.year  >  2005;": "( title of writes ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of writes ) equal to ( jid of paper ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of writes ) ) ) , and ( ( writes ) satisfied that ( ( pid of keyphrase ) equal to ( pid of writes ) ) ) , and ( ( author ) satisfied that ( ( aid of keyphrase ) equal to ( aid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( name of paper ) equal to ( yunyao li ) ) and ( ( name of paper ) equal to ( pvldb ) ) and ( ( year of writes ) greater than ( 2005 ) ) )",
    "SELECT DISTINCT capital FROM state;": "( distinct ( capital ) ) that belongs to ( state )",
    "SELECT COUNT ( state_name ) FROM state;": "( the number of ( state name ) ) that belongs to ( state )",
    "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.year  >  2000 ORDER BY t3.citation_num DESC LIMIT 1;": "( title of movie ) that belongs to ( ( domain ) , and ( ( domain publication ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( databases ) ) and ( ( year of movie ) greater than ( 2000 ) ) ) , ordered by ( ( citation num of movie ) in descending order ) , limited to the top ( 1 )",
    "SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";": "( birth year ) that belongs to ( actor ) , that have ( ( name ) equal to ( benedict cumberbatch ) )",
    "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"Canada\" AND t3.title  =  \"James Bond\";": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of venue ) ) ) ) , that have ( ( ( nationality of paper ) equal to ( canada ) ) and ( ( title of movie ) equal to ( james bond ) ) )",
    "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;": "( distinct ( the number of ( paperid of paper ) ) ) , ( year of paper ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( venuename of venue ) equal to ( nips ) ) , grouped by ( year of paper ) , ordered by ( ( the number of ( paperid of paper ) ) in descending order )",
    "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014;": "( distinct ( paperid of movie ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( datasetname of paper ) equal to ( imagenet ) ) and ( ( year of movie ) equal to ( 2014 ) ) )",
    "SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Ranjit Jhala\" AND t5.keyphrasename  =  \"Liquid Haskell\";": "( distinct ( title of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( t1.authorname ) like ( ranjit jhala ) ) and ( ( keyphrasename of keyphrase ) equal to ( liquid haskell ) ) )",
    "SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  \"South Summerlin\";": "( the number of ( distinct ( text of movie ) ) ) that belongs to ( ( neighbourhood ) , and ( ( business ) satisfied that ( ( business id of paper ) equal to ( business id of venue ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of venue ) ) ) ) , that have ( ( neighbourhood name of paper ) equal to ( south summerlin ) )",
    "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";": "( the number of ( distinct ( title of keyphrase ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( name of paper ) equal to ( divesh srivastava ) ) )",
    "SELECT river_name FROM river WHERE traverse  =  \"illinois\";": "( river name ) that belongs to ( river ) , that have ( ( traverse ) equal to ( illinois ) )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( mountain view ) ) and ( ( food type of paper ) equal to ( arabic ) ) and ( ( rating of paper ) greater than ( 5 of 2 ) ) )",
    "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"wisconsin\";": "( population ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 150000 ) ) and ( ( state name ) equal to ( wisconsin ) ) )",
    "SELECT state_name FROM city WHERE city_name  =  \"springfield\";": "( state name ) that belongs to ( city ) , that have ( ( city name ) equal to ( springfield ) )",
    "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";": "( distinct ( paperid of movie ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( ali farhadi ) ) and ( ( year of movie ) equal to ( 2016 ) ) and ( ( venuename of paper ) equal to ( eccv ) ) )",
    "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\";": "( the number of ( distinct ( title of movie ) ) ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( steven spielberg ) )",
    "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"des moines\" );": "( highest point ) that belongs to ( highlow ) , that have ( ( state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( capital ) equal to ( des moines ) ) ) )",
    "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;": "( name of venue ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( relational database ) ) , grouped by ( name of venue ) , ordered by ( ( the number of ( distinct ( title of movie ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";": "( distinct ( datasetid of venue ) ) that belongs to ( ( paper ) , and ( ( paperdataset ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( jitendra malik ) )",
    "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";": "( name of venue ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( title of movie ) equal to ( james bond ) )",
    "SELECT t2.citation_num FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";": "( citation num of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( vldb ) )",
    "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2000;": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( pvldb ) ) and ( ( year of venue ) less than ( 2000 ) ) )",
    "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.birth_city  =  \"Los Angeles\";": "( title of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( birth city of venue ) equal to ( los angeles ) )",
    "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";": "( the number of ( all items ) ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( palo alto ) ) and ( ( food type of paper ) equal to ( french ) ) )",
    "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );": "( traverse ) that belongs to ( river ) , that have ( ( length ) equal to ( the minimum of ( length ) ) that belongs to ( river ) )",
    "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"noah a smith\";": "( distinct ( the number of ( citedpaperid of paper ) ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citedpaperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( noah a smith ) )",
    "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"li dong\" AND t3.year  =  2016;": "( distinct ( venueid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( li dong ) ) and ( ( year of movie ) equal to ( 2016 ) ) )",
    "SELECT LENGTH FROM river WHERE river_name  =  \"colorado\" AND traverse  =  \"texas\";": "( length ) that belongs to ( river ) , that have ( ( ( river name ) equal to ( colorado ) ) and ( ( traverse ) equal to ( texas ) ) )",
    "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid GROUP BY t1.authorid HAVING COUNT ( t2.paperid )  >=  5;": "( distinct ( the number of ( paperid of venue ) ) ) , ( authorid of paper ) that belongs to ( ( writes ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , grouped by ( authorid of paper ) , that have ( ( the number of ( paperid of venue ) ) greater than or equal to ( 5 ) )",
    "SELECT name FROM actor WHERE birth_city  =  \"Tehran\";": "( name ) that belongs to ( actor ) , that have ( ( birth city ) equal to ( tehran ) )",
    "SELECT capital FROM state WHERE state_name  =  \"texas\";": "( capital ) that belongs to ( state ) , that have ( ( state name ) equal to ( texas ) )",
    "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  \"dan klein\" AND t4.venuename  =  \"emnlp\";": "( distinct ( keyphraseid of venue ) ) that belongs to ( ( paper ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of keyphrase ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of keyphrase ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( dan klein ) ) and ( ( venuename of paper ) equal to ( emnlp ) ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;": "( distinct ( the number of ( distinct ( citingpaperid of movie ) ) ) ) , ( paperid of paper ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of movie ) ) ) , and ( ( venue ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2014 ) ) and ( ( venuename of venue ) equal to ( tacl ) ) ) , grouped by ( paperid of paper ) , ordered by ( ( the number of ( distinct ( citingpaperid of movie ) ) ) in descending order )",
    "SELECT homepage FROM author WHERE name  =  \"H. V. Jagadish\";": "( homepage ) that belongs to ( author ) , that have ( ( name ) equal to ( h. v. jagadish ) )",
    "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";": "( distinct ( datasetid of paper ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( venuename of paper ) equal to ( acl ) )",
    "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";": "( distinct ( authorid of paper ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , that have ( ( venuename of movie ) equal to ( nips ) )",
    "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";": "( distinct ( authorname of paper ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( author ) satisfied that ( ( authorid of movie ) equal to ( authorid of paper ) ) ) ) , that have ( ( t4.keyphrasename ) like ( sensor fusion ) )",
    "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( datasetname of paper ) equal to ( webkb ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( los angeles ) ) and ( ( category name of venue ) equal to ( seafood ) ) and ( ( category name of movie ) equal to ( restaurant ) ) )",
    "SELECT t4.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Keyword search\";": "( title of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of venue ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of venue ) ) ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of movie ) ) ) ) , that have ( ( ( name of movie ) equal to ( pvldb ) ) and ( ( keyword of paper ) equal to ( keyword search ) ) )",
    "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"nuclear weapons\";": "( title of movie ) that belongs to ( ( tags ) , and ( ( keyword ) satisfied that ( ( kid of venue ) equal to ( id of paper ) ) ) , and ( ( movie ) satisfied that ( ( msid of venue ) equal to ( mid of movie ) ) ) ) , that have ( ( keyword of paper ) equal to ( nuclear weapons ) )",
    "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"santa cruz county\" AND t1.name  =  \"jamerican cuisine\";": "( the number of ( all items ) ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) ) , that have ( ( ( county of venue ) equal to ( santa cruz county ) ) and ( ( name of paper ) equal to ( jamerican cuisine ) ) )",
    "SELECT t3.genre FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN classification AS t1 ON t4.mid  =  t1.msid JOIN genre AS t3 ON t3.gid  =  t1.gid WHERE t5.name  =  \"Asghar Farhadi\";": "( genre of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of keyphrase ) equal to ( did of venue ) ) ) , and ( ( movie ) satisfied that ( ( mid of paper ) equal to ( msid of venue ) ) ) , and ( ( classification ) satisfied that ( ( mid of paper ) equal to ( msid of paper ) ) ) , and ( ( genre ) satisfied that ( ( gid of movie ) equal to ( gid of paper ) ) ) ) , that have ( ( name of keyphrase ) equal to ( asghar farhadi ) )",
    "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200;": "( title of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( pvldb ) ) and ( ( citation num of venue ) greater than ( 200 ) ) )",
    "SELECT user_id FROM USER WHERE name  =  \"Michelle\";": "( user id ) that belongs to ( user ) , that have ( ( name ) equal to ( michelle ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.year  =  2010 AND t3.name  =  \"Michelle\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( ( year of venue ) equal to ( 2010 ) ) and ( ( name of movie ) equal to ( michelle ) ) )",
    "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;": "( distinct ( keyphrasename of paper ) ) , ( the sum of ( numcitedby of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of keyphrase ) ) ) ) , that have ( ( authorname of keyphrase ) equal to ( brian derenzi ) ) , grouped by ( keyphrasename of paper ) , ordered by ( ( the sum of ( numcitedby of movie ) ) in descending order )",
    "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"kentucky\";": "( the number of ( border ) ) that belongs to ( border info ) , that have ( ( state name ) equal to ( kentucky ) )",
    "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;": "( distinct ( citingpaperid of movie ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of movie ) ) ) , and ( ( venue ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( venuename of venue ) equal to ( acl ) ) , grouped by ( citingpaperid of movie ) , that have ( ( the number of ( distinct ( citedpaperid of movie ) ) ) less than ( 5 ) )",
    "SELECT t2.title FROM producer AS t1 JOIN made_by AS t3 ON t1.pid  =  t3.pid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Shonda Rhimes\";": "( title of venue ) that belongs to ( ( producer ) , and ( ( made by ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( tv series ) satisfied that ( ( sid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( shonda rhimes ) )",
    "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );": "( house number of venue ) , ( name of paper ) that belongs to ( ( location ) , and ( ( restaurant ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( t1.city_name ) in ( ( city name ) that belongs to ( geographic ) , that have ( ( region ) equal to ( bay area ) ) ) )",
    "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( h. v. jagadish ) ) , grouped by ( keyword of paper ) , ordered by ( ( the number of ( distinct ( title of movie ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Vintner Grill\" AND t2.category_name  =  \"category_category_name0\" AND t3.year  =  2010;": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( vintner grill ) ) and ( ( category name of venue ) equal to ( category category name0 ) ) and ( ( year of movie ) equal to ( 2010 ) ) )",
    "SELECT COUNT ( DISTINCT t1.keyword ) FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Databases\";": "( the number of ( distinct ( keyword of paper ) ) ) that belongs to ( ( domain ) , and ( ( domain keyword ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of venue ) ) ) ) , that have ( ( name of movie ) equal to ( databases ) )",
    "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"buttercup kitchen\";": "( the number of ( all items ) ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( san francisco ) ) and ( ( name of paper ) equal to ( buttercup kitchen ) ) )",
    "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Daniella Coelho\";": "( distinct ( venueid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( daniella coelho ) )",
    "SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t4.venuename  =  \"VLDB\" ORDER BY t3.year;": "( distinct ( year of movie ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( michael stonebraker ) ) and ( ( venuename of paper ) equal to ( vldb ) ) ) , ordered by ( ( year of movie ) )",
    "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1;": "( name of paper ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( university of michigan ) ) , grouped by ( name of paper ) , ordered by ( ( the sum of ( citation num of paper ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT MAX ( highest_elevation ) FROM highlow;": "( the maximum of ( highest elevation ) ) that belongs to ( highlow )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"french\";": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( mountain view ) ) and ( ( food type of paper ) equal to ( french ) ) )",
    "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );": "( river name ) that belongs to ( river ) , that have ( ( traverse ) in ( ( state name ) that belongs to ( highlow ) , that have ( ( lowest elevation ) equal to ( the minimum of ( lowest elevation ) ) that belongs to ( highlow ) ) ) )",
    "SELECT SUM ( t4.citation_num ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";": "( the sum of ( citation num of paper ) ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( university of michigan ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"Ed Desmond\" AND t4.keyphrasename  =  \"Semantic Parsing\";": "( distinct ( the number of ( distinct ( paperid of movie ) ) ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( paperid of paper ) ) ) , and ( ( author ) satisfied that ( ( authorid of movie ) equal to ( authorid of venue ) ) ) ) , that have ( ( ( authorname of venue ) equal to ( ed desmond ) ) and ( ( keyphrasename of paper ) equal to ( semantic parsing ) ) )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( san francisco ) ) and ( ( street name of venue ) equal to ( buchanan ) ) and ( ( food type of paper ) equal to ( arabic ) ) and ( ( rating of paper ) greater than ( 5 of 2 ) ) )",
    "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Pennsylvania\" AND t2.year  =  2010;": "( text of venue ) that belongs to ( ( tip ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( cafe zinho ) ) and ( ( state of paper ) equal to ( pennsylvania ) ) and ( ( year of venue ) equal to ( 2010 ) ) )",
    "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";": "( river name ) that belongs to ( river ) , that have ( ( ( length ) equal to ( the minimum of ( length ) ) that belongs to ( river ) , that have ( ( traverse ) equal to ( texas ) ) ) and ( ( traverse ) equal to ( texas ) ) )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"california\" );": "( city name ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( california ) ) ) ) ) and ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( california ) ) ) ) )",
    "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.citation_num  >  200 AND t3.year  >  2000;": "( title of movie ) that belongs to ( ( domain ) , and ( ( domain publication ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( databases ) ) and ( ( citation num of movie ) greater than ( 200 ) ) and ( ( year of movie ) greater than ( 2000 ) ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;": "( distinct ( the number of ( distinct ( paperid of movie ) ) ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( t1.authorname ) like ( ye cao ) ) , grouped by ( year of movie ) , ordered by ( ( the number of ( distinct ( paperid of movie ) ) ) in descending order )",
    "SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );": "( population ) that belongs to ( state ) , that have ( ( density ) equal to ( the maximum of ( density ) ) that belongs to ( state ) )",
    "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;": "( distinct ( the number of ( paperid of venue ) ) ) , ( authorid of paper ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , that have ( ( venuename of movie ) equal to ( acl ) ) , grouped by ( authorid of paper )",
    "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";": "( title of paper ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( university of michigan ) )",
    "SELECT density FROM state WHERE capital  =  \"austin\";": "( density ) that belongs to ( state ) , that have ( ( capital ) equal to ( austin ) )",
    "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"colorado\";": "( the number of ( river name ) ) that belongs to ( river ) , that have ( ( river name ) equal to ( colorado ) )",
    "SELECT title FROM publication WHERE citation_num  >  200;": "( title ) that belongs to ( publication ) , that have ( ( citation num ) greater than ( 200 ) )",
    "SELECT city_name FROM city WHERE state_name  =  \"texas\";": "( city name ) that belongs to ( city ) , that have ( ( state name ) equal to ( texas ) )",
    "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"nebraska\" );": "( the number of ( city name ) ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 150000 ) ) and ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( nebraska ) ) ) ) )",
    "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;": "( distinct ( year of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( pedro domingos ) ) , grouped by ( year of movie )",
    "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of venue ) ) ) ) , that have ( ( ( role of venue ) equal to ( alan turing ) ) and ( ( title of movie ) equal to ( the imitation game ) ) )",
    "SELECT density FROM state WHERE state_name  =  \"wyoming\";": "( density ) that belongs to ( state ) , that have ( ( state name ) equal to ( wyoming ) )",
    "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;": "( distinct ( the number of ( paperid of venue ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( michael i. jordan ) ) and ( ( year of movie ) equal to ( 2016 ) ) )",
    "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );": "( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) )",
    "SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name IN ( SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"virginia\" ) );": "( city name ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 150000 ) ) and ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) in ( ( river name ) that belongs to ( river ) , that have ( ( ( length ) greater than ( 750 ) ) and ( ( traverse ) equal to ( virginia ) ) ) ) ) ) ) )",
    "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";": "( distinct ( authorname of paper ) ) , ( paperid of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of keyphrase ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) not equal to ( chris dyer ) ) and ( ( keyphrasename of keyphrase ) equal to ( syntactic parsing ) ) )",
    "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Bacterial Wilt\" AND t4.year  =  2016;": "( distinct ( authorid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of venue ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( paperid of paper ) ) ) , and ( ( author ) satisfied that ( ( authorid of movie ) equal to ( authorid of keyphrase ) ) ) ) , that have ( ( ( keyphrasename of venue ) equal to ( bacterial wilt ) ) and ( ( year of paper ) equal to ( 2016 ) ) )",
    "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"March\";": "( the number of ( distinct ( text ) ) ) that belongs to ( review ) , that have ( ( month ) equal to ( march ) )",
    "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.citation_num  >  200;": "( title of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( citation num of movie ) greater than ( 200 ) ) )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( pvldb ) ) )",
    "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citingpaperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( citedpaperid of paper ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( daniel jurafsky ) )",
    "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"rio grande\" );": "( state name ) that belongs to ( state ) , that have ( ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( rio grande ) ) ) ) ) and ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( rio grande ) ) ) ) )",
    "SELECT DISTINCT COUNT ( t2.keyphraseid )  ,  t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC;": "( distinct ( the number of ( keyphraseid of venue ) ) ) , ( keyphraseid of venue ) that belongs to ( ( paper ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( oren etzioni ) ) , grouped by ( keyphraseid of venue ) , ordered by ( ( the number of ( keyphraseid of venue ) ) in descending order )",
    "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"brian curless\" AND t5.keyphrasename  =  \"convolution\";": "( distinct ( authorid of paper ) ) , ( paperid of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of keyphrase ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( brian curless ) ) and ( ( keyphrasename of keyphrase ) equal to ( convolution ) ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"San Diego\" AND t2.year  =  2010 AND t3.name  =  \"Christine\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( ( city of paper ) equal to ( san diego ) ) and ( ( year of venue ) equal to ( 2010 ) ) and ( ( name of movie ) equal to ( christine ) ) )",
    "SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN writes AS t2 ON t2.aid  =  t1.aid JOIN publication AS t4 ON t2.pid  =  t4.pid WHERE t3.name  =  \"Databases\" AND t5.name  =  \"University of Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;": "( name of paper ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of writes ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of movie ) equal to ( did of writes ) ) ) , and ( ( organization ) satisfied that ( ( oid of keyphrase ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of paper ) ) ) ) , that have ( ( ( name of movie ) equal to ( databases ) ) and ( ( name of keyphrase ) equal to ( university of michigan ) ) ) , grouped by ( name of paper ) , that have ( ( the sum of ( citation num of paper ) ) greater than ( 5000 ) )",
    "SELECT homepage FROM conference WHERE name  =  \"VLDB\";": "( homepage ) that belongs to ( conference ) , that have ( ( name ) equal to ( vldb ) )",
    "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  60;": "( name of venue ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( conference ) satisfied that ( ( cid of movie ) equal to ( cid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( relational database ) ) , grouped by ( name of venue ) , that have ( ( the number of ( distinct ( title of movie ) ) ) greater than ( 60 ) )",
    "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";": "( the number of ( distinct ( name of venue ) ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT state_name FROM city WHERE city_name  =  \"austin\" AND population  >  150000;": "( state name ) that belongs to ( city ) , that have ( ( ( city name ) equal to ( austin ) ) and ( ( population ) greater than ( 150000 ) ) )",
    "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";": "( distinct ( paperid of paper ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2015 ) ) and ( ( venuename of venue ) equal to ( pldi ) ) )",
    "SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;": "( the number of ( traverse ) ) that belongs to ( river ) , that have ( ( length ) greater than ( 750 ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Making database systems usable\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( title of movie ) equal to ( making database systems usable ) )",
    "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );": "( the number of ( distinct ( traverse ) ) ) that belongs to ( river ) , that have ( ( length ) equal to ( the minimum of ( distinct ( length ) ) ) that belongs to ( river ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( los angeles ) ) and ( ( category name of venue ) equal to ( breweries ) ) )",
    "SELECT city_name FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );": "( city name ) that belongs to ( city ) , that have ( ( state_name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) )",
    "SELECT name FROM organization;": "( name ) that belongs to ( organization )",
    "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;": "( name of paper ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( university of michigan ) ) , grouped by ( name of paper ) , that have ( ( the sum of ( citation num of paper ) ) greater than ( 5000 ) )",
    "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;": "( distinct ( the number of ( paperid of venue ) ) ) , ( authorid of paper ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( year of venue ) equal to ( 2007 ) ) and ( ( venuename of movie ) equal to ( cvpr ) ) ) , grouped by ( authorid of paper ) , ordered by ( ( the number of ( paperid of venue ) ) in descending order )",
    "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";": "( river name ) that belongs to ( river ) , that have ( ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) , that have ( ( traverse ) equal to ( texas ) ) ) and ( ( traverse ) equal to ( texas ) ) )",
    "SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ORDER BY lowest_elevation LIMIT 1;": "( lowest point ) that belongs to ( highlow ) , that have ( ( state_name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) ) , ordered by ( ( lowest elevation ) ) , limited to the top ( 1 )",
    "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";": "( title of venue ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( tv series ) satisfied that ( ( sid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( scott foley ) )",
    "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\" AND t5.year  >  2000;": "( title of keyphrase ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( journal ) satisfied that ( ( jid of keyphrase ) equal to ( jid of movie ) ) ) ) , that have ( ( ( name of movie ) equal to ( pvldb ) ) and ( ( name of venue ) equal to ( university of michigan ) ) and ( ( year of keyphrase ) greater than ( 2000 ) ) )",
    "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );": "( river name ) that belongs to ( river ) , that have ( ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) , that have ( ( traverse ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) ) ) ) and ( ( traverse ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) ) ) )",
    "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );": "( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) )",
    "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;": "( distinct ( paperid of movie ) ) , ( year of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( deep learning ) ) , ordered by ( ( year of movie ) in descending order )",
    "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";": "( neighbourhood name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of movie ) equal to ( business id of venue ) ) ) , and ( ( category ) satisfied that ( ( business id of paper ) equal to ( business id of venue ) ) ) , and ( ( neighbourhood ) satisfied that ( ( business id of paper ) equal to ( business id of venue ) ) ) ) , that have ( ( ( city of venue ) equal to ( madison ) ) and ( ( category name of movie ) equal to ( italian ) ) and ( ( category name of paper ) equal to ( restaurant ) ) )",
    "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";": "( distinct ( paperid of venue ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of movie ) equal to ( datasetid of keyphrase ) ) ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( venue ) satisfied that ( ( venueid of writes ) equal to ( venueid of venue ) ) ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of paper ) ) ) ) , that have ( ( ( datasetname of keyphrase ) equal to ( jeopardy! questions ) ) and ( ( keyphrasename of paper ) equal to ( parsing ) ) and ( ( year of venue ) equal to ( 2014 ) ) and ( ( venuename of writes ) equal to ( acl ) ) )",
    "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Temporal Data\" GROUP BY t3.journalid;": "( distinct ( journalid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( temporal data ) ) , grouped by ( journalid of movie )",
    "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain WHERE state_name != \"alaska\" );": "( mountain name ) that belongs to ( mountain ) , that have ( ( mountain altitude ) equal to ( the maximum of ( mountain altitude ) ) that belongs to ( mountain ) , that have ( ( state name ) not equal to ( alaska ) ) )",
    "SELECT COUNT ( DISTINCT border ) FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );": "( the number of ( distinct ( border ) ) ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) )",
    "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;": "( title of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( vldb ) ) and ( ( year of paper ) greater than ( 2000 ) ) )",
    "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\" AND t3.year  =  2010;": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( ( category name of venue ) equal to ( restaurant ) ) and ( ( year of movie ) equal to ( 2010 ) ) )",
    "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"texas\" );": "( population ) that belongs to ( city ) , that have ( ( city name ) equal to ( capital ) that belongs to ( state ) , that have ( ( state name ) equal to ( texas ) ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( dallas ) ) and ( ( rating of paper ) greater than ( 5 of 3 ) ) and ( ( category name of venue ) equal to ( mexican ) ) and ( ( category name of movie ) equal to ( restaurant ) ) )",
    "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  \"Flat Top Grill\" AND t3.category_name  =  \"category_category_name0\";": "( neighbourhood name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of movie ) equal to ( business id of venue ) ) ) , and ( ( neighbourhood ) satisfied that ( ( business id of paper ) equal to ( business id of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( flat top grill ) ) and ( ( category name of movie ) equal to ( category category name0 ) ) )",
    "SELECT SUM ( t3.citation_num ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";": "( the sum of ( citation num of movie ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of venue ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( natural language ) )",
    "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";": "( text of paper ) that belongs to ( ( user ) , and ( ( review ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( name of venue ) equal to ( niloofar ) )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );": "( city name ) that belongs to ( city ) , that have ( ( population ) equal to ( the minimum of ( population of paper ) ) that belongs to ( ( state ) , and ( ( city ) satisfied that ( ( capital of venue ) equal to ( city name of paper ) ) ) ) )",
    "SELECT COUNT ( DISTINCT t5.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"User Study\";": "( the number of ( distinct ( title of keyphrase ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of movie ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of keyphrase ) equal to ( pid of movie ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( keyword of paper ) equal to ( user study ) ) )",
    "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.rating  =  5 AND t3.name  =  \"Niloofar\";": "( name of paper ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( ( rating of venue ) equal to ( 5 ) ) and ( ( name of movie ) equal to ( niloofar ) ) )",
    "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\";": "( text of venue ) that belongs to ( ( tip ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( cafe zinho ) ) and ( ( state of paper ) equal to ( texas ) ) )",
    "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;": "( distinct ( the number of ( paperid of movie ) ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( benjamin mako hill ) ) , grouped by ( year of movie ) , ordered by ( ( year of movie ) )",
    "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"oren etzioni\" ORDER BY t3.year DESC;": "( distinct ( paperid of venue ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( oren etzioni ) ) , ordered by ( ( year of movie ) in descending order )",
    "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );": "( state name ) that belongs to ( city ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) )",
    "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";": "( the sum of ( citation num of venue ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( vldb ) )",
    "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" );": "( traverse ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) , that have ( ( traverse ) equal to ( texas ) ) )",
    "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"tennessee\" );": "( river name ) that belongs to ( river ) , that have ( ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) , that have ( ( traverse ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( tennessee ) ) ) ) ) and ( ( traverse ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( tennessee ) ) ) ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.rating  =  5 AND t2.category_name  =  \"Italian\" AND t3.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( rating of paper ) equal to ( 5 ) ) and ( ( category name of venue ) equal to ( italian ) ) and ( ( category name of movie ) equal to ( restaurant ) ) )",
    "SELECT river_name FROM river WHERE country_name != \"usa\";": "( river name ) that belongs to ( river ) , that have ( ( country name ) not equal to ( usa ) )",
    "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"yolo county\" AND t1.food_type  =  \"italian\";": "( the number of ( all items ) ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) ) , that have ( ( ( county of venue ) equal to ( yolo county ) ) and ( ( food type of paper ) equal to ( italian ) ) )",
    "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.citation_num  >  200;": "( title of keyphrase ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( name of paper ) equal to ( divesh srivastava ) ) and ( ( citation num of keyphrase ) greater than ( 200 ) ) )",
    "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;": "( distinct ( the number of ( paperid of paper ) ) ) , ( authorid of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of venue ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( paperid of paper ) ) ) ) , that have ( ( ( keyphrasename of venue ) equal to ( semantic parsing ) ) and ( ( year of paper ) greater than ( 2005 ) ) ) , grouped by ( authorid of movie ) , ordered by ( ( the number of ( paperid of paper ) ) in descending order )",
    "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";": "( distinct ( the number of ( distinct ( paperid of paper ) ) ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2015 ) ) and ( ( venuename of venue ) equal to ( acl ) ) )",
    "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.name  =  \"Gabriele Ferzetti\" ORDER BY t3.release_year DESC LIMIT 1;": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of venue ) ) ) ) , that have ( ( name of paper ) equal to ( gabriele ferzetti ) ) , ordered by ( ( release year of movie ) in descending order ) , limited to the top ( 1 )",
    "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t4.venuename  =  \"cvpr\";": "( distinct ( the number of ( paperid of movie ) ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( datasetname of paper ) equal to ( imagenet ) ) and ( ( venuename of paper ) equal to ( cvpr ) ) )",
    "SELECT DISTINCT COUNT ( t3.citingpaperid )  ,  t1.keyphrasename FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT ( t3.citingpaperid ) DESC;": "( distinct ( the number of ( citingpaperid of movie ) ) ) , ( keyphrasename of paper ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( cite ) satisfied that ( ( paperid of venue ) equal to ( citedpaperid of movie ) ) ) ) , grouped by ( keyphrasename of paper ) , ordered by ( ( the number of ( citingpaperid of movie ) ) in descending order )",
    "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  =  2010;": "( name of paper ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( pvldb ) ) and ( ( year of paper ) equal to ( 2010 ) ) )",
    "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Pittsburgh\" AND t1.name  =  \"Sushi Too\";": "( the number of ( distinct ( name of movie ) ) ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( ( city of paper ) equal to ( pittsburgh ) ) and ( ( name of paper ) equal to ( sushi too ) ) )",
    "SELECT density FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );": "( density ) that belongs to ( state ) , that have ( ( state_name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) ) ) )",
    "SELECT MAX ( area ) FROM state;": "( the maximum of ( area ) ) that belongs to ( state )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Pittsburgh\" AND t1.rating  =  4.5 AND t2.category_name  =  \"restaurant\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( pittsburgh ) ) and ( ( rating of paper ) equal to ( 5 of 4 ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";": "( distinct ( the number of ( paperid of paper ) ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( venuename of venue ) equal to ( sigir ) )",
    "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Dallas\" AND name  =  \"Starbucks\" AND state  =  \"Texas\";": "( the number of ( distinct ( business id ) ) ) that belongs to ( business ) , that have ( ( ( city ) equal to ( dallas ) ) and ( ( name ) equal to ( starbucks ) ) and ( ( state ) equal to ( texas ) ) )",
    "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );": "( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) )",
    "SELECT density FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );": "( density ) that belongs to ( state ) , that have ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( state ) )",
    "SELECT DISTINCT ( t1.paperid )  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2012 AND t2.venuename  =  \"ACL\" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid )  >  7;": "( distinct ( paperid of paper ) ) , ( the number of ( citingpaperid of movie ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of movie ) ) ) , and ( ( venue ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2012 ) ) and ( ( venuename of venue ) equal to ( acl ) ) ) , grouped by ( paperid of paper ) , that have ( ( the number of ( citingpaperid of movie ) ) greater than ( 7 ) )",
    "SELECT capital FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );": "( capital ) that belongs to ( state ) , that have ( ( state_name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) ) ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.name  =  \"University of Michigan\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of movie ) equal to ( did of paper ) ) ) , and ( ( organization ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( ( name of movie ) equal to ( databases ) ) and ( ( name of venue ) equal to ( university of michigan ) ) )",
    "SELECT t3.name FROM DOMAIN AS t3 JOIN domain_journal AS t1 ON t3.did  =  t1.did JOIN journal AS t2 ON t2.jid  =  t1.jid WHERE t2.name  =  \"PVLDB\";": "( name of movie ) that belongs to ( ( domain ) , and ( ( domain journal ) satisfied that ( ( did of movie ) equal to ( did of paper ) ) ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( pvldb ) )",
    "SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );": "( capital ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( ( city name of venue ) equal to ( bethel island ) ) and ( ( street name of venue ) equal to ( bethel island rd ) ) )",
    "SELECT area FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );": "( area ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) )",
    "SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";": "( name of venue ) that belongs to ( ( publication ) , and ( ( cite ) satisfied that ( ( pid of publication ) equal to ( citing of keyphrase ) ) ) , and ( ( publication ) satisfied that ( ( pid of writes ) equal to ( cited of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of publication ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of writes ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;": "( distinct ( the number of ( paperid of paper ) ) ) , ( paperid of movie ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( paperid of paper ) ) ) ) , that have ( ( datasetname of paper ) equal to ( imagenet ) ) , grouped by ( paperid of movie ) , ordered by ( ( the number of ( paperid of paper ) ) in descending order )",
    "SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid  =  t1.journalid WHERE t1.journalname  =  \"Academic radiology\" AND t2.year  =  1995;": "( distinct ( paperid of venue ) ) that belongs to ( ( paper ) , and ( ( journal ) satisfied that ( ( journalid of venue ) equal to ( journalid of paper ) ) ) ) , that have ( ( ( journalname of paper ) equal to ( academic radiology ) ) and ( ( year of venue ) equal to ( 1995 ) ) )",
    "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mirella Lapata\" ORDER BY t3.year DESC LIMIT 5;": "( distinct ( paperid of movie ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( mirella lapata ) ) , ordered by ( ( year of movie ) in descending order ) , limited to the top ( 5 )",
    "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( vldb ) )",
    "SELECT COUNT ( border ) FROM border_info WHERE border IN ( SELECT border FROM border_info WHERE state_name  =  \"new mexico\" ) AND state_name  =  \"colorado\";": "( the number of ( border ) ) that belongs to ( border info ) , that have ( ( ( border ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( new mexico ) ) ) ) and ( ( state name ) equal to ( colorado ) ) )",
    "SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 AND river_name  =  \"mississippi\" );": "( city name ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 150000 ) ) and ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( ( length ) greater than ( 750 ) ) and ( ( river name ) equal to ( mississippi ) ) ) ) ) )",
    "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2016 AND t2.venuename  =  \"CVPR\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;": "( distinct ( citedpaperid of movie ) ) , ( the number of ( citingpaperid of movie ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of movie ) ) ) , and ( ( venue ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2016 ) ) and ( ( venuename of venue ) equal to ( cvpr ) ) ) , grouped by ( citedpaperid of movie ) , ordered by ( ( the number of ( citingpaperid of movie ) ) in descending order )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t1.rating  >  3 AND t1.review_count  >  30 AND t2.category_name  =  \"Bars\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( los angeles ) ) and ( ( rating of paper ) greater than ( 3 ) ) and ( ( review count of paper ) greater than ( 30 ) ) and ( ( category name of venue ) equal to ( bars ) ) )",
    "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;": "( distinct ( journalid ) ) that belongs to ( paper ) , that have ( ( year ) equal to ( 2011 ) ) , grouped by ( journalid )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name  =  \"alaska\" ) AND state_name  =  \"alaska\";": "( city name ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) equal to ( alaska ) ) ) and ( ( state name ) equal to ( alaska ) ) )",
    "SELECT business_id FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Apple Store\";": "( business id ) that belongs to ( business ) , that have ( ( ( city ) equal to ( los angeles ) ) and ( ( name ) equal to ( apple store ) ) )",
    "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";": "( city of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( mgm grand buffet ) ) and ( ( state of paper ) equal to ( texas ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );": "( state name ) that belongs to ( state ) , that have ( ( state_name ) not in ( ( state name ) that belongs to ( border info ) ) )",
    "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.state_name  =  t1.state_name WHERE t1.city_name  =  \"durham\";": "( capital of venue ) that belongs to ( ( state ) , and ( ( city ) satisfied that ( ( state name of venue ) equal to ( state name of paper ) ) ) ) , that have ( ( city name of paper ) equal to ( durham ) )",
    "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;": "( title of keyphrase ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( name of paper ) equal to ( divesh srivastava ) ) and ( ( year of keyphrase ) less than ( 2000 ) ) )",
    "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"semantic parsing\" GROUP BY t3.year ORDER BY t3.year DESC;": "( distinct ( the number of ( paperid of movie ) ) ) , ( year of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( semantic parsing ) ) , grouped by ( year of movie ) , ordered by ( ( year of movie ) in descending order )",
    "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;": "( distinct ( the number of ( paperid of movie ) ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( convolutional neural networks ) ) and ( ( year of movie ) equal to ( 2016 ) ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  4.5 AND t2.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( dallas ) ) and ( ( rating of paper ) greater than ( 5 of 4 ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN tv_series AS t3 ON t3.sid  =  t1.msid WHERE t3.release_year  =  2013 AND t3.title  =  \"House of Cards\";": "( name of venue ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( tv series ) satisfied that ( ( sid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( ( release year of movie ) equal to ( 2013 ) ) and ( ( title of movie ) equal to ( house of cards ) ) )",
    "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;": "( name of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( vldb ) ) , grouped by ( name of paper ) , ordered by ( ( the number of ( distinct ( title of paper ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";": "( the sum of ( likes of paper ) ) that belongs to ( ( user ) , and ( ( tip ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( name of venue ) equal to ( niloofar ) )",
    "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t3.name  =  \"Quentin Tarantino\" ORDER BY t5.release_year DESC LIMIT 1;": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of keyphrase ) equal to ( msid of paper ) ) ) , and ( ( directed by ) satisfied that ( ( mid of keyphrase ) equal to ( msid of venue ) ) ) , and ( ( director ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) ) , that have ( ( name of movie ) equal to ( quentin tarantino ) ) , ordered by ( ( release year of keyphrase ) in descending order ) , limited to the top ( 1 )",
    "SELECT t3.title FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN directed_by AS t1 ON t5.did  =  t1.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t4.title  =  \"Revolutionary Road\";": "( title of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of keyphrase ) equal to ( did of venue ) ) ) , and ( ( directed by ) satisfied that ( ( did of keyphrase ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of paper ) equal to ( msid of venue ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( title of paper ) equal to ( revolutionary road ) )",
    "SELECT name FROM business WHERE rating  <  2 AND state  =  \"Texas\";": "( name ) that belongs to ( business ) , that have ( ( ( rating ) less than ( 2 ) ) and ( ( state ) equal to ( texas ) ) )",
    "SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;": "( distinct ( paperid ) ) that belongs to ( paper ) , that have ( ( year ) not equal to ( 2015 ) )",
    "SELECT t2.highest_elevation FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MAX ( area ) FROM state );": "( highest elevation of venue ) that belongs to ( ( highlow ) , and ( ( state ) satisfied that ( ( state name of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( area of paper ) equal to ( the maximum of ( area ) ) that belongs to ( state ) )",
    "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Su-In Lee\" AND t3.year  <  2012;": "( distinct ( paperid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( su-in lee ) ) and ( ( year of movie ) less than ( 2012 ) ) )",
    "SELECT population FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"wyoming\" );": "( population ) that belongs to ( state ) , that have ( ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( wyoming ) ) ) ) ) and ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( wyoming ) ) ) ) )",
    "SELECT lowest_point FROM highlow WHERE state_name  =  \"iowa\";": "( lowest point ) that belongs to ( highlow ) , that have ( ( state name ) equal to ( iowa ) )",
    "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"texas\";": "( the number of ( city name ) ) that belongs to ( city ) , that have ( ( state name ) equal to ( texas ) )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );": "( city name ) that belongs to ( city ) , that have ( ( population ) equal to ( the maximum of ( population of paper ) ) that belongs to ( ( state ) , and ( ( city ) satisfied that ( ( capital of venue ) equal to ( city name of paper ) ) ) ) )",
    "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t2 ON t2.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t2.paperid;": "( distinct ( paperid of venue ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of movie ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of paper ) ) ) ) , that have ( ( datasetname of paper ) equal to ( imagenet ) ) , grouped by ( paperid of venue )",
    "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;": "( distinct ( the number of ( distinct ( paperid of venue ) ) ) ) , ( authorid of paper ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , that have ( ( venuename of movie ) equal to ( chi ) ) , grouped by ( authorid of paper ) , ordered by ( ( the number of ( distinct ( paperid of venue ) ) ) in descending order )",
    "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;": "( name of movie ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of paper ) ) ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of movie ) ) ) ) , that have ( ( keyword of paper ) equal to ( relational database ) ) , grouped by ( name of movie ) , ordered by ( ( the number of ( distinct ( title of venue ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"missouri\";": "( the number of ( traverse ) ) that belongs to ( river ) , that have ( ( river name ) equal to ( missouri ) )",
    "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";": "( the number of ( distinct ( title of movie ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating )  <  3;": "( name of venue ) that belongs to ( ( user ) , and ( ( review ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , grouped by ( name of venue ) , that have ( ( the average of ( rating of paper ) ) less than ( 3 ) )",
    "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title )  >  100;": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of paper ) ) ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of movie ) ) ) ) , that have ( ( name of movie ) equal to ( pvldb ) ) , grouped by ( keyword of paper ) , that have ( ( the number of ( distinct ( title of venue ) ) ) greater than ( 100 ) )",
    "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );": "( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) )",
    "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Persians\" AND t3.release_year  >  1990;": "( the number of ( distinct ( title of movie ) ) ) that belongs to ( ( tags ) , and ( ( keyword ) satisfied that ( ( kid of venue ) equal to ( id of paper ) ) ) , and ( ( movie ) satisfied that ( ( msid of venue ) equal to ( mid of movie ) ) ) ) , that have ( ( ( keyword of paper ) equal to ( persians ) ) and ( ( release year of movie ) greater than ( 1990 ) ) )",
    "SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );": "( density ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) )",
    "SELECT t1.keyword FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Making database systems usable\";": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of movie ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( title of venue ) equal to ( making database systems usable ) )",
    "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" ORDER BY t3.year;": "( distinct ( paperid of movie ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( jamie callan ) ) , ordered by ( ( year of movie ) )",
    "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  ( SELECT MAX ( YEAR ) FROM paper );": "( distinct ( paperid ) ) that belongs to ( paper ) , that have ( ( year ) equal to ( the maximum of ( year ) ) that belongs to ( paper ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"dependent types\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( dependent types ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;": "( distinct ( the number of ( distinct ( citingpaperid of paper ) ) ) ) , ( authorid of paper ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of paper ) ) ) ) , that have ( ( venuename of movie ) equal to ( cvpr ) ) , grouped by ( authorid of paper ) , ordered by ( ( the number of ( distinct ( citingpaperid of paper ) ) ) in descending order )",
    "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Samuel Madden\" AND t4.venuename != \"PVLDB\";": "( distinct ( the number of ( distinct ( paperid of movie ) ) ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( samuel madden ) ) and ( ( venuename of paper ) not equal to ( pvldb ) ) )",
    "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;": "( distinct ( paperid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( mohammad rastegari ) ) and ( ( journalid of movie ) greater than or equal to ( 0 ) ) )",
    "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( river name ) that belongs to ( river ) , that have ( ( traverse ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) )",
    "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;": "( name of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) ) , grouped by ( name of venue ) , that have ( ( the number of ( distinct ( title of paper ) ) ) greater than ( 10 ) )",
    "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( datasetname of paper ) equal to ( imagenet ) ) and ( ( year of movie ) equal to ( 2014 ) ) and ( ( venuename of paper ) equal to ( eccv ) ) )",
    "SELECT river_name FROM river;": "( river name ) that belongs to ( river )",
    "SELECT COUNT ( river_name ) FROM river WHERE LENGTH  >  750 AND traverse  =  \"ohio\";": "( the number of ( river name ) ) that belongs to ( river ) , that have ( ( ( length ) greater than ( 750 ) ) and ( ( traverse ) equal to ( ohio ) ) )",
    "SELECT COUNT ( DISTINCT keyword ) FROM keyword;": "( the number of ( distinct ( keyword ) ) ) that belongs to ( keyword )",
    "SELECT DISTINCT venueid FROM paper WHERE title  =  \"Fracture of acrylic bone cement\";": "( distinct ( venueid ) ) that belongs to ( paper ) , that have ( ( title ) equal to ( fracture of acrylic bone cement ) )",
    "SELECT COUNT ( river_name ) FROM river WHERE traverse NOT IN ( SELECT state_name FROM state WHERE capital  =  \"albany\" );": "( the number of ( river name ) ) that belongs to ( river ) , that have ( ( traverse ) not in ( ( state name ) that belongs to ( state ) , that have ( ( capital ) equal to ( albany ) ) ) )",
    "SELECT DISTINCT t3.year  ,  t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Michael Armstrong\" AND t3.year LIKE \"199\";": "( distinct ( year of movie ) ) , ( paperid of venue ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( ( t1.authorname ) like ( michael armstrong ) ) and ( ( t3.year ) like ( 199 ) ) )",
    "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"parsing\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";": "( distinct ( the number of ( paperid of movie ) ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( parsing ) ) and ( ( year of movie ) equal to ( 2014 ) ) and ( ( venuename of paper ) equal to ( acl ) ) )",
    "SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";": "( the number of ( distinct ( text of movie ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( cafe zinho ) ) and ( ( state of paper ) equal to ( texas ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT river_name FROM river WHERE traverse  =  ( SELECT state_name FROM city WHERE population  >  150000 GROUP BY state_name ORDER BY COUNT ( city_name ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1;": "( river name ) that belongs to ( river ) , that have ( ( traverse ) equal to ( state name ) that belongs to ( city ) , that have ( ( population ) greater than ( 150000 ) ) , grouped by ( state name ) , ordered by ( ( the number of ( city name ) ) in descending order ) , limited to the top ( 1 ) ) , ordered by ( ( length ) in descending order ) , limited to the top ( 1 )",
    "SELECT t2.role FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Daddy Long Legs\";": "( role of venue ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of venue ) ) ) ) , that have ( ( title of movie ) equal to ( daddy long legs ) )",
    "SELECT t1.title FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t2.name  =  \"Matt Damon\";": "( title of paper ) that belongs to ( ( written by ) , and ( ( movie ) satisfied that ( ( msid of movie ) equal to ( mid of paper ) ) ) , and ( ( writer ) satisfied that ( ( wid of movie ) equal to ( wid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( matt damon ) )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Information Retrieval\";": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of movie ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( vldb ) ) and ( ( keyword of paper ) equal to ( information retrieval ) ) )",
    "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"Los Angeles\" AND birth_year  >  2000;": "( the number of ( distinct ( name ) ) ) that belongs to ( actor ) , that have ( ( ( birth city ) equal to ( los angeles ) ) and ( ( birth year ) greater than ( 2000 ) ) )",
    "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"Divesh Srivastava\" AND t1.name  =  \"H. V. Jagadish\" ORDER BY t5.citation_num DESC LIMIT 1;": "( title of keyphrase ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( divesh srivastava ) ) and ( ( name of paper ) equal to ( h. v. jagadish ) ) ) , ordered by ( ( citation num of keyphrase ) in descending order ) , limited to the top ( 1 )",
    "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  =  2.5;": "( text of venue ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( rating of paper ) equal to ( 5 of 2 ) )",
    "SELECT t5.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"User Study\";": "( title of keyphrase ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of movie ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of keyphrase ) equal to ( pid of movie ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( keyword of paper ) equal to ( user study ) ) )",
    "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );": "( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) )",
    "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"sanjeev arora\" ORDER BY t3.year DESC;": "( distinct ( keyphrasename of paper ) ) , ( year of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of keyphrase ) ) ) ) , that have ( ( authorname of keyphrase ) equal to ( sanjeev arora ) ) , ordered by ( ( year of movie ) in descending order )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN domain_publication AS t2 ON t3.did  =  t2.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN publication AS t4 ON t4.pid  =  t2.pid WHERE t3.name  =  \"Databases\" AND t5.name  =  \"University of Michigan\";": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of writes ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of movie ) equal to ( did of writes ) ) ) , and ( ( domain publication ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) , and ( ( organization ) satisfied that ( ( oid of keyphrase ) equal to ( oid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of venue ) ) ) ) , that have ( ( ( name of movie ) equal to ( databases ) ) and ( ( name of keyphrase ) equal to ( university of michigan ) ) )",
    "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";": "( title of paper ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( pvldb ) ) )",
    "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Target\";": "( the number of ( distinct ( business id ) ) ) that belongs to ( business ) , that have ( ( ( city ) equal to ( los angeles ) ) and ( ( name ) equal to ( target ) ) )",
    "SELECT t1.state_name FROM state AS t1 JOIN highlow AS t2 ON t1.capital  =  t2.highest_point;": "( state name of paper ) that belongs to ( ( state ) , and ( ( highlow ) satisfied that ( ( capital of paper ) equal to ( highest point of venue ) ) ) )",
    "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;": "( distinct ( year of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( deep learning ) ) , grouped by ( year of movie ) , ordered by ( ( year of movie ) in ascending order )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( ( city of paper ) equal to ( dallas ) ) and ( ( category name of venue ) equal to ( restaurant ) ) and ( ( name of paper ) equal to ( patrick ) ) )",
    "SELECT state_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );": "( state name ) that belongs to ( city ) , that have ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( city ) )",
    "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2005;": "( the sum of ( citation num of venue ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( pvldb ) ) and ( ( year of venue ) less than ( 2005 ) ) )",
    "SELECT t2.text FROM USER AS t3 JOIN review AS t1 ON t3.user_id  =  t1.user_id JOIN tip AS t2 ON t3.user_id  =  t2.user_id WHERE t1.year  =  2012;": "( text of venue ) that belongs to ( ( user ) , and ( ( review ) satisfied that ( ( user id of movie ) equal to ( user id of paper ) ) ) , and ( ( tip ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( year of paper ) equal to ( 2012 ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( pvldb ) )",
    "SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" );": "( the number of ( river name ) ) that belongs to ( river ) , that have ( ( traverse ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( colorado ) ) ) )",
    "SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;": "( the number of ( distinct ( text ) ) ) , ( month ) that belongs to ( tip ) , grouped by ( month )",
    "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.nationality  =  \"China\" GROUP BY t2.title ORDER BY COUNT ( DISTINCT t1.name  ) DESC LIMIT 1;": "( title of venue ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( nationality of paper ) equal to ( china ) ) , grouped by ( title of venue ) , ordered by ( ( the number of ( distinct ( name of paper ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( rating of paper ) greater than ( 5 of 3 ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\";": "( name of venue ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( relational database ) )",
    "SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.review_count  >  100 AND t2.category_name  =  \"Pet Groomers\";": "( text of movie ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( review count of paper ) greater than ( 100 ) ) and ( ( category name of venue ) equal to ( pet groomers ) ) )",
    "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( shahab hosseini ) )",
    "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" );": "( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( colorado ) ) ) )",
    "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" ORDER BY t3.citation_num DESC LIMIT 1;": "( title of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) ) , ordered by ( ( citation num of movie ) in descending order ) , limited to the top ( 1 )",
    "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" AND t4.day  =  \"Friday\";": "( the sum of ( count of paper ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( checkin ) satisfied that ( ( business id of paper ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( los angeles ) ) and ( ( category name of venue ) equal to ( moroccan ) ) and ( ( category name of movie ) equal to ( restaurant ) ) and ( ( day of paper ) equal to ( friday ) ) )",
    "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;": "( title of movie ) that belongs to ( ( genre ) , and ( ( classification ) satisfied that ( ( gid of venue ) equal to ( gid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( ( genre of venue ) equal to ( sci-fi ) ) and ( ( release year of movie ) equal to ( 2010 ) ) )",
    "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.month  =  \"April\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;": "( name of paper ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( month of venue ) equal to ( april ) ) , grouped by ( name of paper ) , ordered by ( ( the number of ( distinct ( text of venue ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Jennifer Aniston\" AND t2.release_year  >  2010;": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( jennifer aniston ) ) and ( ( release year of venue ) greater than ( 2010 ) ) )",
    "SELECT name FROM business WHERE rating  >  4.5;": "( name ) that belongs to ( business ) , that have ( ( rating ) greater than ( 5 of 4 ) )",
    "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.gender  =  \"female\" AND t3.title  =  \"Saving Private Ryan\";": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of venue ) ) ) ) , that have ( ( ( gender of paper ) equal to ( female ) ) and ( ( title of movie ) equal to ( saving private ryan ) ) )",
    "SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  \"North America\";": "( the number of ( distinct ( name ) ) ) that belongs to ( organization ) , that have ( ( continent ) equal to ( north america ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.neighbourhood_name  =  \"Stone Meadows\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( neighbourhood ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( madison ) ) and ( ( neighbourhood name of venue ) equal to ( stone meadows ) ) )",
    "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"texas\";": "( the number of ( city name ) ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 150000 ) ) and ( ( state name ) equal to ( texas ) ) )",
    "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;": "( the number of ( distinct ( title of venue ) ) ) , ( year of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( vldb ) ) , grouped by ( year of venue )",
    "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );": "( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) ) )",
    "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year;": "( distinct ( year of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( luke s zettlemoyer ) ) , ordered by ( ( year of movie ) )",
    "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ;": "( capital of paper ) that belongs to ( ( highlow ) , and ( ( state ) satisfied that ( ( state name of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( lowest elevation of venue ) equal to ( the minimum of ( lowest elevation ) ) that belongs to ( highlow ) )",
    "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( highest point of venue ) that belongs to ( ( state ) , and ( ( highlow ) satisfied that ( ( state name of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( t1.state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) )",
    "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  \"boston\" );": "( the number of ( border ) ) that belongs to ( border info ) , that have ( ( state name ) equal to ( state name ) that belongs to ( state ) , that have ( ( capital ) equal to ( boston ) ) )",
    "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name JOIN border_info AS t3 ON t3.border  =  t2.state_name JOIN border_info AS t4 ON t4.border  =  t3.state_name WHERE t4.state_name  =  \"texas\";": "( border of paper ) that belongs to ( ( border info ) , and ( ( border info ) satisfied that ( ( border of venue ) equal to ( state name of paper ) ) ) , and ( ( border info ) satisfied that ( ( border of movie ) equal to ( state name of venue ) ) ) , and ( ( border info ) satisfied that ( ( border of paper ) equal to ( state name of movie ) ) ) ) , that have ( ( state name of paper ) equal to ( texas ) )",
    "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );": "( lowest point ) that belongs to ( highlow ) , that have ( ( lowest elevation ) equal to ( the minimum of ( lowest elevation ) ) that belongs to ( highlow ) )",
    "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Iraq war\" AND t3.release_year  =  2015;": "( the number of ( distinct ( title of movie ) ) ) that belongs to ( ( tags ) , and ( ( keyword ) satisfied that ( ( kid of venue ) equal to ( id of paper ) ) ) , and ( ( movie ) satisfied that ( ( msid of venue ) equal to ( mid of movie ) ) ) ) , that have ( ( ( keyword of paper ) equal to ( iraq war ) ) and ( ( release year of movie ) equal to ( 2015 ) ) )",
    "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  >  1980 AND gender  =  \"female\";": "( the number of ( distinct ( name ) ) ) that belongs to ( actor ) , that have ( ( ( birth city ) equal to ( new york city ) ) and ( ( birth year ) greater than ( 1980 ) ) and ( ( gender ) equal to ( female ) ) )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );": "( city name ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) ) ) ) and ( ( state name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) ) ) )",
    "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"texas\" ) AND traverse  =  \"texas\";": "( length ) that belongs to ( river ) , that have ( ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) , that have ( ( traverse ) equal to ( texas ) ) ) and ( ( traverse ) equal to ( texas ) ) )",
    "SELECT city_name FROM city WHERE population  >  150000;": "( city name ) that belongs to ( city ) , that have ( ( population ) greater than ( 150000 ) )",
    "SELECT area FROM state WHERE capital  =  \"albany\";": "( area ) that belongs to ( state ) , that have ( ( capital ) equal to ( albany ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"NLP\" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;": "( distinct ( the number of ( distinct ( citingpaperid of paper ) ) ) ) , ( venueid of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citedpaperid of paper ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( nlp ) ) , grouped by ( venueid of movie ) , ordered by ( ( the number of ( distinct ( citingpaperid of paper ) ) ) in descending order )",
    "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\" AND t3.year  =  2010 GROUP BY t3.journalid;": "( distinct ( journalid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( trophic cascade ) ) and ( ( year of movie ) equal to ( 2010 ) ) ) , grouped by ( journalid of movie )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( state of paper ) equal to ( pennsylvania ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT COUNT ( capital ) FROM state WHERE state_name  =  \"rhode island\";": "( the number of ( capital ) ) that belongs to ( state ) , that have ( ( state name ) equal to ( rhode island ) )",
    "SELECT name FROM business WHERE rating  =  3.5;": "( name ) that belongs to ( business ) , that have ( ( rating ) equal to ( 5 of 3 ) )",
    "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Camp X-Ray\";": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of venue ) ) ) ) , that have ( ( title of movie ) equal to ( camp x-ray ) )",
    "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );": "( highest point of venue ) that belongs to ( ( state ) , and ( ( highlow ) satisfied that ( ( state name of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( t1.state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( state ) ) ) )",
    "SELECT state_name FROM city GROUP BY state_name ORDER BY AVG ( population ) LIMIT 1;": "( state name ) that belongs to ( city ) , grouped by ( state name ) , ordered by ( ( the average of ( population ) ) ) , limited to the top ( 1 )",
    "SELECT COUNT ( river_name ) FROM river;": "( the number of ( river name ) ) that belongs to ( river )",
    "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  =  2005;": "( the sum of ( citation num of venue ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( pvldb ) ) and ( ( year of venue ) equal to ( 2005 ) ) )",
    "SELECT t1.name FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Making database systems usable\";": "( name of paper ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( title of movie ) equal to ( making database systems usable ) )",
    "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";": "( distinct ( venueid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( trophic cascade ) )",
    "SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";": "( name ) that belongs to ( actor ) , that have ( ( nationality ) equal to ( afghanistan ) )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( pvldb ) ) and ( ( year of paper ) greater than ( 2000 ) ) )",
    "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"University of Michigan\";": "( the number of ( distinct ( title of keyphrase ) ) ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of movie ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( conference ) satisfied that ( ( cid of keyphrase ) equal to ( cid of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( vldb ) ) and ( ( name of movie ) equal to ( university of michigan ) ) )",
    "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;": "( distinct ( paperid ) ) that belongs to ( paper ) , that have ( ( year ) equal to ( 2014 ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( rating of paper ) greater than ( 5 of 3 ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";": "( reference num ) that belongs to ( publication ) , that have ( ( title ) equal to ( making database systems usable ) )",
    "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";": "( title of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of keyphrase ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of paper ) equal to ( msid of keyphrase ) ) ) , and ( ( directed by ) satisfied that ( ( mid of paper ) equal to ( msid of venue ) ) ) , and ( ( director ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) ) , that have ( ( ( name of paper ) equal to ( taraneh alidoosti ) ) and ( ( name of movie ) equal to ( asghar farhadi ) ) )",
    "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" ORDER BY t2.citation_num DESC LIMIT 1;": "( title of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( pvldb ) ) , ordered by ( ( citation num of venue ) in descending order ) , limited to the top ( 1 )",
    "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.continent  =  \"North America\";": "( name of venue ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of movie ) equal to ( did of paper ) ) ) , and ( ( organization ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( ( name of movie ) equal to ( databases ) ) and ( ( continent of venue ) equal to ( north america ) ) )",
    "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;": "( name of venue ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( conference ) satisfied that ( ( cid of movie ) equal to ( cid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( relational database ) ) , grouped by ( name of venue ) , ordered by ( ( the number of ( distinct ( title of movie ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2000;": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vldb ) ) and ( ( year of venue ) less than ( 2000 ) ) )",
    "SELECT state_name FROM state;": "( state name ) that belongs to ( state )",
    "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";": "( release year ) that belongs to ( movie ) , that have ( ( title ) equal to ( the imitation game ) )",
    "SELECT t1.keyword FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"University of Michigan\";": "( keyword of paper ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of writes ) equal to ( oid of venue ) ) ) , and ( ( writes ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( publication keyword ) satisfied that ( ( pid of keyphrase ) equal to ( pid of movie ) ) ) , and ( ( keyword ) satisfied that ( ( kid of movie ) equal to ( kid of paper ) ) ) ) , that have ( ( name of writes ) equal to ( university of michigan ) )",
    "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";": "( title of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( vldb ) ) )",
    "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );": "( population ) that belongs to ( state ) , that have ( ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( texas ) ) ) ) ) and ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( texas ) ) ) ) )",
    "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";": "( name of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT t1.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid GROUP BY t1.name ORDER BY COUNT ( DISTINCT t3.name  ) DESC LIMIT 1;": "( name of paper ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) , and ( ( movie ) satisfied that ( ( mid of paper ) equal to ( msid of venue ) ) ) , and ( ( made by ) satisfied that ( ( mid of paper ) equal to ( msid of keyphrase ) ) ) , and ( ( producer ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) ) , grouped by ( name of paper ) , ordered by ( ( the number of ( distinct ( name of movie ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;": "( name of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) ) , grouped by ( name of venue ) , ordered by ( ( the number of ( distinct ( title of paper ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"alabama\" );": "( river name ) that belongs to ( river ) , that have ( ( traverse ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( alabama ) ) ) )",
    "SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) DESC LIMIT 1;": "( state name ) that belongs to ( city ) , grouped by ( state name ) , ordered by ( ( the sum of ( population ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );": "( city name ) that belongs to ( city ) , that have ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( city ) )",
    "SELECT t3.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN tags AS t5 ON t5.msid  =  t4.mid JOIN keyword AS t1 ON t5.kid  =  t1.id WHERE t1.keyword  =  \"nuclear weapons\";": "( name of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) , and ( ( movie ) satisfied that ( ( mid of paper ) equal to ( msid of venue ) ) ) , and ( ( tags ) satisfied that ( ( msid of keyphrase ) equal to ( mid of paper ) ) ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( id of paper ) ) ) ) , that have ( ( keyword of paper ) equal to ( nuclear weapons ) )",
    "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( h. v. jagadish ) )",
    "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002 AND t4.year  >  1995;": "( name of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( vldb ) ) and ( ( year of paper ) less than ( 2002 ) ) and ( ( year of paper ) greater than ( 1995 ) ) )",
    "SELECT title FROM movie WHERE release_year  =  2015;": "( title ) that belongs to ( movie ) , that have ( ( release year ) equal to ( 2015 ) )",
    "SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name  =  \"texas\";": "( the maximum of ( distinct ( highest elevation ) ) ) that belongs to ( highlow ) , that have ( ( state name ) equal to ( texas ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bars\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( dallas ) ) and ( ( rating of paper ) greater than ( 5 of 3 ) ) and ( ( category name of venue ) equal to ( bars ) ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Edinburgh\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Egyptian\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( edinburgh ) ) and ( ( category name of venue ) equal to ( restaurant ) ) and ( ( category name of movie ) equal to ( egyptian ) ) )",
    "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"mississippi\" );": "( highest point ) that belongs to ( highlow ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( mississippi ) ) ) )",
    "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\";": "( the sum of ( likes of venue ) ) that belongs to ( ( tip ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( name of paper ) equal to ( cafe zinho ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( vldb ) )",
    "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );": "( state name ) that belongs to ( mountain ) , that have ( ( mountain altitude ) equal to ( the maximum of ( mountain altitude ) ) that belongs to ( mountain ) )",
    "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";": "( name of paper ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( pvldb ) )",
    "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );": "( state name ) that belongs to ( state ) , that have ( ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) ) ) and ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) ) )",
    "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";": "( name of venue ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Taj Mahal\" AND t2.category_name  =  \"restaurant\";": "( city of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( taj mahal ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT budget FROM movie WHERE release_year  =  2007 AND title  =  \"Juno\";": "( budget ) that belongs to ( movie ) , that have ( ( ( release year ) equal to ( 2007 ) ) and ( ( title ) equal to ( juno ) ) )",
    "SELECT AVG ( population ) FROM state;": "( the average of ( population ) ) that belongs to ( state )",
    "SELECT COUNT ( DISTINCT t1.neighbourhood_name ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  =  5;": "( the number of ( distinct ( neighbourhood name of paper ) ) ) that belongs to ( ( neighbourhood ) , and ( ( business ) satisfied that ( ( business id of paper ) equal to ( business id of venue ) ) ) ) , that have ( ( ( city of venue ) equal to ( madison ) ) and ( ( rating of venue ) equal to ( 5 ) ) )",
    "SELECT COUNT ( DISTINCT t3.title  )  ,  t3.release_year FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Woody Allen\" GROUP BY t3.release_year;": "( the number of ( distinct ( title of movie ) ) ) , ( release year of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( woody allen ) ) , grouped by ( release year of movie )",
    "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\";": "( the number of ( distinct ( name of venue ) ) ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of movie ) equal to ( did of paper ) ) ) , and ( ( organization ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( name of movie ) equal to ( databases ) )",
    "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) ) ) AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );": "( state name ) that belongs to ( state ) , that have ( ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) ) ) ) ) and ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) ) ) ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , grouped by ( name of paper ) , ordered by ( ( the number of ( distinct ( category name of venue ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.nationality  =  \"Iran\" AND t3.name  =  \"Jim Jarmusch\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of keyphrase ) equal to ( msid of paper ) ) ) , and ( ( directed by ) satisfied that ( ( mid of keyphrase ) equal to ( msid of venue ) ) ) , and ( ( director ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) ) , that have ( ( ( nationality of paper ) equal to ( iran ) ) and ( ( name of movie ) equal to ( jim jarmusch ) ) )",
    "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;": "( name of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( vldb ) ) , grouped by ( name of paper ) , that have ( ( the number of ( distinct ( title of paper ) ) ) greater than ( 10 ) )",
    "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  >  2010;": "( name of paper ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( pvldb ) ) and ( ( year of paper ) greater than ( 2010 ) ) )",
    "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;": "( distinct ( citingpaperid of venue ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of venue ) ) ) ) , grouped by ( citingpaperid of venue ) , that have ( ( the number of ( distinct ( citedpaperid of venue ) ) ) greater than or equal to ( 5 ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != \"Noah Smith\" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Noah Smith\" );": "( distinct ( the number of ( distinct ( paperid of venue ) ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( ( authorname of paper ) not equal to ( noah smith ) ) and ( ( year of movie ) greater than ( 2009 ) ) and ( ( t2.paperid ) in ( ( paperid of venue ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( t1.authorname ) like ( noah smith ) ) ) ) )",
    "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;": "( the number of ( distinct ( text ) ) ) that belongs to ( tip ) , that have ( ( year ) equal to ( 2015 ) )",
    "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN CAST AS t3 ON t5.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"Tom Hanks\";": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of keyphrase ) equal to ( msid of paper ) ) ) , and ( ( cast ) satisfied that ( ( mid of keyphrase ) equal to ( msid of movie ) ) ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( tom hanks ) )",
    "SELECT city_name FROM city;": "( city name ) that belongs to ( city )",
    "SELECT birth_city FROM director WHERE name  =  \"director_name0\";": "( birth city ) that belongs to ( director ) , that have ( ( name ) equal to ( director name0 ) )",
    "SELECT t2.population FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";": "( population of venue ) that belongs to ( ( state ) , and ( ( border info ) satisfied that ( ( state name of venue ) equal to ( border of paper ) ) ) ) , that have ( ( state name of paper ) equal to ( texas ) )",
    "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";": "( distinct ( the number of ( citingpaperid of keyphrase ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of movie ) equal to ( authorid of venue ) ) ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citedpaperid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( citingpaperid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of venue ) equal to ( michael i. jordan ) ) and ( ( authorname of paper ) equal to ( dan klein ) ) )",
    "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );": "( state name ) that belongs to ( state ) , that have ( ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( texas ) ) ) ) ) and ( ( state name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( texas ) ) ) ) )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( city name ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) ) ) and ( ( state name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) ) )",
    "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vldb ) ) and ( ( year of venue ) greater than ( 2000 ) ) )",
    "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"oklahoma\" ) ORDER BY population DESC LIMIT 1;": "( state name ) that belongs to ( state ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( oklahoma ) ) ) ) , ordered by ( ( population ) in descending order ) , limited to the top ( 1 )",
    "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" ORDER BY t3.citation_num DESC LIMIT 1;": "( title of movie ) that belongs to ( ( domain ) , and ( ( domain publication ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( databases ) ) , ordered by ( ( citation num of movie ) in descending order ) , limited to the top ( 1 )",
    "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );": "( capital ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) )",
    "SELECT state_name FROM mountain;": "( state name ) that belongs to ( mountain )",
    "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( river name ) that belongs to ( river ) , that have ( ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) , that have ( ( traverse ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) ) ) and ( ( traverse ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) ) )",
    "SELECT density FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );": "( density ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) )",
    "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";": "( the number of ( distinct ( keyword of paper ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( conference ) satisfied that ( ( cid of movie ) equal to ( cid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( vldb ) )",
    "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;": "( title of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vldb ) ) and ( ( year of venue ) greater than ( 2000 ) ) ) , ordered by ( ( citation num of venue ) in descending order ) , limited to the top ( 1 )",
    "SELECT nationality FROM director WHERE name  =  \"director_name0\";": "( nationality ) that belongs to ( director ) , that have ( ( name ) equal to ( director name0 ) )",
    "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Humphrey Bogart\" AND t2.release_year  <  1942;": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( humphrey bogart ) ) and ( ( release year of venue ) less than ( 1942 ) ) )",
    "SELECT DISTINCT t1.authorname  ,  COUNT ( t3.citingpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.authorname ORDER BY COUNT ( t3.citingpaperid ) DESC;": "( distinct ( authorname of paper ) ) , ( the number of ( citingpaperid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( cite ) satisfied that ( ( paperid of venue ) equal to ( citedpaperid of movie ) ) ) ) , grouped by ( authorname of paper ) , ordered by ( ( the number of ( citingpaperid of movie ) ) in descending order )",
    "SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );": "( distinct ( traverse ) ) that belongs to ( river ) , that have ( ( length ) equal to ( the minimum of ( distinct ( length ) ) ) that belongs to ( river ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( character recognition ) ) and ( ( year of movie ) less than ( 2010 ) ) )",
    "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" );": "( state name ) that belongs to ( state ) , that have ( ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) ) ) and ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"Valet Service\" AND t3.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( dallas ) ) and ( ( state of paper ) equal to ( texas ) ) and ( ( category name of venue ) equal to ( valet service ) ) and ( ( category name of movie ) equal to ( restaurant ) ) )",
    "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;": "( the number of ( distinct ( title ) ) ) that belongs to ( movie ) , that have ( ( release year ) equal to ( 2013 ) )",
    "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( pvldb ) ) and ( ( year of venue ) greater than ( 2000 ) ) )",
    "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) );": "( river name ) that belongs to ( river ) , that have ( ( traverse ) in ( ( state name ) that belongs to ( city ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) ) ) )",
    "SELECT COUNT ( DISTINCT t3.title )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t3.year;": "( the number of ( distinct ( title of movie ) ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) ) , grouped by ( year of movie )",
    "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2005;": "( the sum of ( citation num of venue ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vldb ) ) and ( ( year of venue ) less than ( 2005 ) ) )",
    "SELECT t1.state  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"Delis\" AND t4.day  =  \"Sunday\" GROUP BY t1.state;": "( state of paper ) , ( the sum of ( count of paper ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( checkin ) satisfied that ( ( business id of paper ) equal to ( business id of paper ) ) ) ) , that have ( ( ( category name of venue ) equal to ( italian ) ) and ( ( category name of movie ) equal to ( delis ) ) and ( ( day of paper ) equal to ( sunday ) ) ) , grouped by ( state of paper )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"University of Michigan\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( university of michigan ) )",
    "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";": "( the sum of ( citation num of venue ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( pvldb ) )",
    "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );": "( population ) that belongs to ( city ) , that have ( ( city name ) equal to ( capital ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) )",
    "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) ) ) AND state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );": "( state name ) that belongs to ( state ) , that have ( ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( state name ) that belongs to ( border info ) , that have ( ( border ) in ( ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) ) ) ) ) ) ) and ( ( state name ) in ( ( state name ) that belongs to ( border info ) , that have ( ( border ) in ( ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) ) ) ) ) ) )",
    "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"subhasis chaudhuri\";": "( distinct ( paperid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( subhasis chaudhuri ) )",
    "SELECT highest_point  ,  state_name FROM highlow WHERE lowest_elevation  =  0;": "( highest point ) , ( state name ) that belongs to ( highlow ) , that have ( ( lowest elevation ) equal to ( 0 ) )",
    "SELECT name FROM actor WHERE birth_year  >  1980 AND nationality  =  \"Italy\";": "( name ) that belongs to ( actor ) , that have ( ( ( birth year ) greater than ( 1980 ) ) and ( ( nationality ) equal to ( italy ) ) )",
    "SELECT mountain_name FROM mountain WHERE state_name  =  \"alaska\";": "( mountain name ) that belongs to ( mountain ) , that have ( ( state name ) equal to ( alaska ) )",
    "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;": "( title of paper ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( pvldb ) ) and ( ( year of paper ) greater than ( 2000 ) ) )",
    "SELECT keyword FROM keyword;": "( keyword ) that belongs to ( keyword )",
    "SELECT city FROM business WHERE rating  <  1.5;": "( city ) that belongs to ( business ) , that have ( ( rating ) less than ( 5 of 1 ) )",
    "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";": "( the number of ( distinct ( city ) ) ) that belongs to ( business ) , that have ( ( name ) equal to ( panda express ) )",
    "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND gender  =  \"female\";": "( name ) that belongs to ( actor ) , that have ( ( ( birth city ) equal to ( austin ) ) and ( ( gender ) equal to ( female ) ) )",
    "SELECT COUNT ( city_name ) FROM city WHERE city_name  =  \"austin\";": "( the number of ( city name ) ) that belongs to ( city ) , that have ( ( city name ) equal to ( austin ) )",
    "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of paper ) ) ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of movie ) ) ) ) , that have ( ( name of movie ) equal to ( pvldb ) )",
    "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Moroccan\";": "( the sum of ( count of paper ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( checkin ) satisfied that ( ( business id of paper ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( los angeles ) ) and ( ( category name of venue ) equal to ( restaurant ) ) and ( ( category name of movie ) equal to ( moroccan ) ) )",
    "SELECT DISTINCT COUNT ( t3.paperid )  ,  t2.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mirella lapata\" AND t3.year  =  2016 GROUP BY t2.authorid;": "( distinct ( the number of ( paperid of movie ) ) ) , ( authorid of venue ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( mirella lapata ) ) and ( ( year of movie ) equal to ( 2016 ) ) ) , grouped by ( authorid of venue )",
    "SELECT t2.genre FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"Jurassic Park\";": "( genre of venue ) that belongs to ( ( genre ) , and ( ( classification ) satisfied that ( ( gid of venue ) equal to ( gid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( title of movie ) equal to ( jurassic park ) )",
    "SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" ) );": "( capital ) that belongs to ( state ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( texas ) ) ) ) ) )",
    "SELECT DISTINCT t3.venueid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"sergey levine\" GROUP BY t3.venueid  ,  t3.year ORDER BY t3.year DESC;": "( distinct ( venueid of movie ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( sergey levine ) ) , grouped by ( venueid of movie ) , ( year of movie ) , ordered by ( ( year of movie ) in descending order )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t3.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Hazelwood\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( neighbourhood ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( dallas ) ) and ( ( category name of movie ) equal to ( restaurant ) ) and ( ( neighbourhood name of venue ) equal to ( hazelwood ) ) )",
    "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state ) );": "( highest point ) that belongs to ( highlow ) , that have ( ( state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( density ) equal to ( the minimum of ( density ) ) that belongs to ( state ) ) ) )",
    "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  <  2010;": "( the number of ( distinct ( title of movie ) ) ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( quentin tarantino ) ) and ( ( release year of movie ) less than ( 2010 ) ) )",
    "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"florida\" ) );": "( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( florida ) ) ) ) ) )",
    "SELECT name FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  =  1984;": "( name ) that belongs to ( actor ) , that have ( ( ( birth city ) equal to ( new york city ) ) and ( ( birth year ) equal to ( 1984 ) ) )",
    "SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;": "( neighbourhood name of paper ) that belongs to ( ( neighbourhood ) , and ( ( business ) satisfied that ( ( business id of paper ) equal to ( business id of venue ) ) ) ) , that have ( ( city of venue ) equal to ( madison ) ) , grouped by ( neighbourhood name of paper ) , ordered by ( ( the number of ( distinct ( name of venue ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT DISTINCT venueid FROM venue WHERE venuename  =  \"Neuroscience\";": "( distinct ( venueid ) ) that belongs to ( venue ) , that have ( ( venuename ) equal to ( neuroscience ) )",
    "SELECT AVG ( t3.count )  ,  t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN checkin AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.category_name  =  \"restaurant\" GROUP BY t3.day;": "( the average of ( count of movie ) ) , ( day of movie ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( checkin ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( barrio cafe ) ) and ( ( category name of venue ) equal to ( restaurant ) ) ) , grouped by ( day of movie )",
    "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Artificial Intelligence\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;": "( distinct ( citedpaperid of paper ) ) , ( the number of ( citingpaperid of paper ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citedpaperid of paper ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( artificial intelligence ) ) , grouped by ( citedpaperid of paper ) , ordered by ( ( the number of ( citingpaperid of paper ) ) in descending order )",
    "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >  10;": "( distinct ( citingpaperid of venue ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of venue ) ) ) ) , grouped by ( citingpaperid of venue ) , that have ( ( the number of ( distinct ( citedpaperid of venue ) ) ) greater than ( 10 ) )",
    "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );": "( city name ) that belongs to ( city ) , that have ( ( state_name ) in ( ( state name ) that belongs to ( highlow ) , that have ( ( highest elevation ) equal to ( the maximum of ( highest elevation ) ) that belongs to ( highlow ) ) ) )",
    "SELECT t1.state_name FROM highlow AS t3 JOIN border_info AS t1 ON t3.state_name  =  t1.border JOIN state AS t2 ON t2.state_name  =  t1.border WHERE t3.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ORDER BY t2.area DESC LIMIT 1;": "( state name of paper ) that belongs to ( ( highlow ) , and ( ( border info ) satisfied that ( ( state name of movie ) equal to ( border of paper ) ) ) , and ( ( state ) satisfied that ( ( state name of venue ) equal to ( border of paper ) ) ) ) , that have ( ( lowest elevation of movie ) equal to ( the minimum of ( lowest elevation ) ) that belongs to ( highlow ) ) , ordered by ( ( area of venue ) in descending order ) , limited to the top ( 1 )",
    "SELECT full_address FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Walmart\";": "( full address ) that belongs to ( business ) , that have ( ( ( city ) equal to ( los angeles ) ) and ( ( name ) equal to ( walmart ) ) )",
    "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( city name ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 150000 ) ) and ( ( state name ) equal to ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) )",
    "SELECT budget FROM movie WHERE title  =  \"Finding Nemo\";": "( budget ) that belongs to ( movie ) , that have ( ( title ) equal to ( finding nemo ) )",
    "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\" AND t5.year  >  2000;": "( the number of ( distinct ( title of keyphrase ) ) ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( journal ) satisfied that ( ( jid of keyphrase ) equal to ( jid of movie ) ) ) ) , that have ( ( ( name of movie ) equal to ( pvldb ) ) and ( ( name of venue ) equal to ( university of michigan ) ) and ( ( year of keyphrase ) greater than ( 2000 ) ) )",
    "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;": "( title of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( pvldb ) ) and ( ( year of venue ) greater than ( 2000 ) ) ) , ordered by ( ( citation num of venue ) in descending order ) , limited to the top ( 1 )",
    "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Dan Makumbi\" AND t3.keyphrasename  =  \"Genetic Identity\";": "( distinct ( the number of ( citingpaperid of keyphrase ) ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( dan makumbi ) ) and ( ( keyphrasename of movie ) equal to ( genetic identity ) ) )",
    "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  100;": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( conference ) satisfied that ( ( cid of movie ) equal to ( cid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( vldb ) ) , grouped by ( keyword of paper ) , that have ( ( the number of ( distinct ( title of movie ) ) ) greater than ( 100 ) )",
    "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( conference ) satisfied that ( ( cid of movie ) equal to ( cid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( vldb ) ) , grouped by ( keyword of paper ) , ordered by ( ( the number of ( distinct ( title of movie ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;": "( name of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) ) , grouped by ( name of venue ) , ordered by ( ( the number of ( distinct ( title of paper ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );": "( highest point ) that belongs to ( highlow ) , that have ( ( highest elevation ) equal to ( the maximum of ( highest elevation ) ) that belongs to ( highlow ) )",
    "SELECT traverse FROM river;": "( traverse ) that belongs to ( river )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( ( category name of venue ) equal to ( bars ) ) and ( ( name of paper ) equal to ( patrick ) ) )",
    "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );": "( city name ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 150000 ) ) and ( ( state name ) equal to ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) ) )",
    "SELECT COUNT ( DISTINCT t4.title  ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid WHERE t3.name  =  \"Quentin Tarantino\" AND t4.release_year  <  2010 AND t4.release_year  >  2002;": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) , and ( ( movie ) satisfied that ( ( mid of paper ) equal to ( msid of venue ) ) ) , and ( ( made by ) satisfied that ( ( mid of paper ) equal to ( msid of keyphrase ) ) ) , and ( ( producer ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) ) , that have ( ( ( name of movie ) equal to ( quentin tarantino ) ) and ( ( release year of paper ) less than ( 2010 ) ) and ( ( release year of paper ) greater than ( 2002 ) ) )",
    "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  >=  2011;": "( distinct ( the number of ( paperid of movie ) ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( question answering ) ) and ( ( year of movie ) greater than or equal to ( 2011 ) ) )",
    "SELECT DISTINCT t2.keyphraseid  ,  t3.year FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year  ,  t2.keyphraseid;": "( distinct ( keyphraseid of venue ) ) , ( year of movie ) that belongs to ( ( paper ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( luke s zettlemoyer ) ) , ordered by ( ( year of movie ),( keyphraseid of venue ) )",
    "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( category name of venue ) equal to ( restaurant ) )",
    "SELECT COUNT ( DISTINCT t2.name ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\";": "( the number of ( distinct ( name of venue ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( relational database ) )",
    "SELECT DISTINCT capital FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );": "( distinct ( capital ) ) that belongs to ( state ) , that have ( ( density ) equal to ( the maximum of ( density ) ) that belongs to ( state ) )",
    "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Bistro Di Napoli\" AND t2.year  =  2015;": "( the number of ( distinct ( name of movie ) ) ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( ( name of paper ) equal to ( bistro di napoli ) ) and ( ( year of venue ) equal to ( 2015 ) ) )",
    "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsing\";": "( distinct ( citedpaperid of paper ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citingpaperid of paper ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( parsing ) )",
    "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Rowan Atkinson\" AND t3.role  =  \"Mr. Bean\";": "( title of venue ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( rowan atkinson ) ) and ( ( role of movie ) equal to ( mr. bean ) ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"instance segmentation\" AND t3.journalid  >=  0;": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( instance segmentation ) ) and ( ( journalid of movie ) greater than or equal to ( 0 ) ) )",
    "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  \"jamerican cuisine\";": "( house number of venue ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of venue ) ) ) ) , that have ( ( name of paper ) equal to ( jamerican cuisine ) )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( vldb ) ) )",
    "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";": "( year ) that belongs to ( publication ) , that have ( ( title ) equal to ( making database systems usable ) )",
    "SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN category AS t4 ON t4.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Meadowood\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of paper ) equal to ( business id of paper ) ) ) , and ( ( neighbourhood ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( madison ) ) and ( ( category name of movie ) equal to ( italian ) ) and ( ( category name of paper ) equal to ( restaurant ) ) and ( ( neighbourhood name of venue ) equal to ( meadowood ) ) )",
    "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name HAVING COUNT ( DISTINCT t2.title )  >  60;": "( name of movie ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of paper ) ) ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of movie ) ) ) ) , that have ( ( keyword of paper ) equal to ( relational database ) ) , grouped by ( name of movie ) , that have ( ( the number of ( distinct ( title of venue ) ) ) greater than ( 60 ) )",
    "SELECT area FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );": "( area ) that belongs to ( state ) , that have ( ( density ) equal to ( the minimum of ( density ) ) that belongs to ( state ) )",
    "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.citation_num  >  200;": "( title of movie ) that belongs to ( ( domain ) , and ( ( domain publication ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( databases ) ) and ( ( citation num of movie ) greater than ( 200 ) ) )",
    "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN tip AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Pet Groomers\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( tip ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( category name of venue ) equal to ( pet groomers ) )",
    "SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Ameet Soni\" AND t1.authorname  =  \"Ras Bodik\";": "( distinct ( authorid of keyphrase ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of movie ) equal to ( authorid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of keyphrase ) equal to ( paperid of paper ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of venue ) equal to ( ameet soni ) ) and ( ( authorname of paper ) equal to ( ras bodik ) ) )",
    "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"balakrishnan prabhakaran\";": "( distinct ( paperid of movie ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( balakrishnan prabhakaran ) )",
    "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );": "( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( length ) ) that belongs to ( river ) ) ) )",
    "SELECT DISTINCT COUNT ( DISTINCT paperid ) FROM paper;": "( distinct ( the number of ( distinct ( paperid ) ) ) ) that belongs to ( paper )",
    "SELECT COUNT ( DISTINCT t1.keyword ) FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"University of Michigan\";": "( the number of ( distinct ( keyword of paper ) ) ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of writes ) equal to ( oid of venue ) ) ) , and ( ( writes ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( publication keyword ) satisfied that ( ( pid of keyphrase ) equal to ( pid of movie ) ) ) , and ( ( keyword ) satisfied that ( ( kid of movie ) equal to ( kid of paper ) ) ) ) , that have ( ( name of writes ) equal to ( university of michigan ) )",
    "SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname LIKE \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Liquid\" AND t6.venuename  =  \"Automatica\";": "( distinct ( title of venue ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of keyphrase ) equal to ( keyphraseid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of keyphrase ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) , and ( ( venue ) satisfied that ( ( venueid of writes ) equal to ( venueid of venue ) ) ) ) , that have ( ( ( t1.authorname ) like ( eric c. kerrigan ) ) and ( ( keyphrasename of movie ) equal to ( liquid ) ) and ( ( venuename of writes ) equal to ( automatica ) ) )",
    "SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MIN ( area ) FROM state );": "( highest point of venue ) that belongs to ( ( highlow ) , and ( ( state ) satisfied that ( ( state name of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( area of paper ) equal to ( the minimum of ( area ) ) that belongs to ( state ) )",
    "SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;": "( name of paper ) that belongs to ( ( checkin ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , grouped by ( name of paper ) , ordered by ( ( the sum of ( count of venue ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( DISTINCT LENGTH ) FROM river );": "( distinct ( traverse ) ) that belongs to ( river ) , that have ( ( length ) equal to ( the maximum of ( distinct ( length ) ) ) that belongs to ( river ) )",
    "SELECT YEAR  ,  SUM ( citation_num ) FROM publication WHERE title  =  \"Making database systems usable\" GROUP BY YEAR;": "( year ) , ( the sum of ( citation num ) ) that belongs to ( publication ) , that have ( ( title ) equal to ( making database systems usable ) ) , grouped by ( year )",
    "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid WHERE t1.datasetname  =  \"YAGO\" AND t4.keyphrasename  =  \"Semantic Data\";": "( distinct ( paperid of venue ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of movie ) equal to ( datasetid of paper ) ) ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) ) , that have ( ( ( datasetname of paper ) equal to ( yago ) ) and ( ( keyphrasename of paper ) equal to ( semantic data ) ) )",
    "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name WHERE t1.population  <=  150000;": "( capital of venue ) that belongs to ( ( state ) , and ( ( city ) satisfied that ( ( capital of venue ) equal to ( city name of paper ) ) ) ) , that have ( ( population of paper ) less than or equal to ( 150000 ) )",
    "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"March\" AND t1.year  =  2014 AND t2.name  =  \"Michelle\";": "( the number of ( distinct ( text of paper ) ) ) that belongs to ( ( user ) , and ( ( review ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( ( month of paper ) equal to ( march ) ) and ( ( year of paper ) equal to ( 2014 ) ) and ( ( name of venue ) equal to ( michelle ) ) )",
    "SELECT title FROM publication WHERE citation_num  >  200 AND YEAR  >  2000;": "( title ) that belongs to ( publication ) , that have ( ( ( citation num ) greater than ( 200 ) ) and ( ( year ) greater than ( 2000 ) ) )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( vldb ) ) and ( ( year of paper ) greater than ( 2000 ) ) )",
    "SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"tennessee\" );": "( river name ) that belongs to ( river ) , that have ( ( river_name ) not in ( ( river name ) that belongs to ( river ) , that have ( ( traverse ) equal to ( tennessee ) ) ) )",
    "SELECT COUNT ( state_name ) FROM highlow WHERE lowest_elevation  <  ( SELECT lowest_elevation FROM highlow WHERE state_name  =  \"alabama\" );": "( the number of ( state name ) ) that belongs to ( highlow ) , that have ( ( lowest elevation ) less than ( lowest elevation ) that belongs to ( highlow ) , that have ( ( state name ) equal to ( alabama ) ) )",
    "SELECT highest_point FROM highlow;": "( highest point ) that belongs to ( highlow )",
    "SELECT t4.day  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" GROUP BY t4.day;": "( day of paper ) , ( the sum of ( count of paper ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( checkin ) satisfied that ( ( business id of paper ) equal to ( business id of paper ) ) ) ) , that have ( ( ( city of paper ) equal to ( los angeles ) ) and ( ( category name of venue ) equal to ( moroccan ) ) and ( ( category name of movie ) equal to ( restaurant ) ) ) , grouped by ( day of paper )",
    "SELECT density FROM state;": "( density ) that belongs to ( state )",
    "SELECT t2.name FROM domain_author AS t3 JOIN author AS t1 ON t3.aid  =  t1.aid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"H. V. Jagadish\";": "( name of venue ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of venue ) equal to ( did of movie ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT DISTINCT COUNT ( t3.paperid )  ,  t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC;": "( distinct ( the number of ( paperid of movie ) ) ) , ( venueid of paper ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( deep learning ) ) , grouped by ( venueid of paper ) , ordered by ( ( the number of ( paperid of movie ) ) in descending order )",
    "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"atlanta\" ) );": "( river name ) that belongs to ( river ) , that have ( ( traverse ) in ( ( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( capital ) equal to ( atlanta ) ) ) ) ) )",
    "SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );": "( capital ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) )",
    "SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";": "( birth year ) that belongs to ( actor ) , that have ( ( name ) equal to ( actor name0 ) )",
    "SELECT lake_name FROM lake WHERE area  >  750 AND state_name  =  \"michigan\";": "( lake name ) that belongs to ( lake ) , that have ( ( ( area ) greater than ( 750 ) ) and ( ( state name ) equal to ( michigan ) ) )",
    "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"zachary tatlock\";": "( distinct ( paperid of movie ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( zachary tatlock ) )",
    "SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mary Crainie\";": "( distinct ( the maximum of ( year of movie ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( mary crainie ) )",
    "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";": "( name of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT t1.keyword FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Databases\";": "( keyword of paper ) that belongs to ( ( domain ) , and ( ( domain keyword ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of venue ) ) ) ) , that have ( ( name of movie ) equal to ( databases ) )",
    "SELECT text FROM review WHERE rating  <  1;": "( text ) that belongs to ( review ) , that have ( ( rating ) less than ( 1 ) )",
    "SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) LIMIT 1;": "( state name ) that belongs to ( city ) , grouped by ( state name ) , ordered by ( ( the sum of ( population ) ) ) , limited to the top ( 1 )",
    "SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  ( SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) ) ) );": "( the number of ( state name ) ) that belongs to ( highlow ) , that have ( ( highest elevation ) greater than ( highest elevation ) that belongs to ( highlow ) , that have ( ( state name ) equal to ( state name ) that belongs to ( state ) , that have ( ( capital ) equal to ( city name ) that belongs to ( city ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) ) ) ) )",
    "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";": "( the number of ( distinct ( name of venue ) ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT DISTINCT title  ,  YEAR FROM paper WHERE title  =  \"A Switching Architecture For ISDN\";": "( distinct ( title ) ) , ( year ) that belongs to ( paper ) , that have ( ( title ) equal to ( a switching architecture for isdn ) )",
    "SELECT homepage FROM organization WHERE name  =  \"University of Michigan\";": "( homepage ) that belongs to ( organization ) , that have ( ( name ) equal to ( university of michigan ) )",
    "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000;": "( the number of ( city name ) ) that belongs to ( city ) , that have ( ( population ) greater than ( 150000 ) )",
    "SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";": "( nationality ) that belongs to ( actor ) , that have ( ( name ) equal to ( christoph waltz ) )",
    "SELECT t1.river_name FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ORDER BY t1.length DESC LIMIT 1;": "( river name of paper ) that belongs to ( ( highlow ) , and ( ( river ) satisfied that ( ( traverse of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( highest elevation of venue ) equal to ( the maximum of ( highest elevation ) ) that belongs to ( highlow ) ) , ordered by ( ( length of paper ) in descending order ) , limited to the top ( 1 )",
    "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"deep reinforcement learning\" AND t4.venuename  =  \"nips\";": "( distinct ( the number of ( paperid of movie ) ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( deep reinforcement learning ) ) and ( ( venuename of paper ) equal to ( nips ) ) )",
    "SELECT COUNT ( t3.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ras bodik\";": "( the number of ( paperid of movie ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( ras bodik ) )",
    "SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2010 AND t3.venuename  =  \"sigcse\";": "( distinct ( the number of ( paperid of venue ) ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( year of venue ) equal to ( 2010 ) ) and ( ( venuename of movie ) equal to ( sigcse ) ) )",
    "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;": "( name of paper ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( pvldb ) ) , grouped by ( name of paper ) , that have ( ( the number of ( distinct ( title of paper ) ) ) greater than ( 10 ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.category_name  =  \"restaurant\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( category name of venue ) equal to ( restaurant ) )",
    "SELECT SUM ( LENGTH ) FROM river;": "( the sum of ( length ) ) that belongs to ( river )",
    "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );": "( state name ) that belongs to ( city ) , that have ( ( population ) equal to ( the maximum of ( population of paper ) ) that belongs to ( ( state ) , and ( ( city ) satisfied that ( ( capital of venue ) equal to ( city name of paper ) ) ) ) )",
    "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  =  2005;": "( the sum of ( citation num of venue ) ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vldb ) ) and ( ( year of venue ) equal to ( 2005 ) ) )",
    "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) AND area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"mississippi\" ) ) ) ORDER BY population DESC LIMIT 1;": "( city name ) that belongs to ( city ) , that have ( ( state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) ) and ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) , that have ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( mississippi ) ) ) ) ) ) ) ) , ordered by ( ( population ) in descending order ) , limited to the top ( 1 )",
    "SELECT population / area FROM state WHERE state_name  =  \"pennsylvania\";": "( ( population ) / ( area ) ) that belongs to ( state ) , that have ( ( state name ) equal to ( pennsylvania ) )",
    "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( population ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) ) ) and ( ( state name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) ) )",
    "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  >  2010;": "( the number of ( distinct ( title of movie ) ) ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( quentin tarantino ) ) and ( ( release year of movie ) greater than ( 2010 ) ) )",
    "SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t2.day  =  \"Friday\";": "( count of venue ) that belongs to ( ( checkin ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( cafe zinho ) ) and ( ( day of venue ) equal to ( friday ) ) )",
    "SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";": "( review count ) that belongs to ( business ) , that have ( ( name ) equal to ( acacia cafe ) )",
    "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\";": "( the number of ( distinct ( title of keyphrase ) ) ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( journal ) satisfied that ( ( jid of keyphrase ) equal to ( jid of movie ) ) ) ) , that have ( ( ( name of movie ) equal to ( pvldb ) ) and ( ( name of venue ) equal to ( university of michigan ) ) )",
    "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( state of paper ) equal to ( texas ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";": "( citation num ) that belongs to ( publication ) , that have ( ( title ) equal to ( making database systems usable ) )",
    "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Keyword search\";": "( the number of ( distinct ( title of paper ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of venue ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of venue ) ) ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of movie ) ) ) ) , that have ( ( ( name of movie ) equal to ( pvldb ) ) and ( ( keyword of paper ) equal to ( keyword search ) ) )",
    "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  10;": "( name of venue ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( relational database ) ) , grouped by ( name of venue ) , that have ( ( the number of ( distinct ( title of movie ) ) ) greater than ( 10 ) )",
    "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\";": "( title of keyphrase ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( journal ) satisfied that ( ( jid of keyphrase ) equal to ( jid of movie ) ) ) ) , that have ( ( ( name of movie ) equal to ( pvldb ) ) and ( ( name of venue ) equal to ( university of michigan ) ) )",
    "SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;": "( title ) that belongs to ( publication ) , ordered by ( ( citation num ) in descending order ) , limited to the top ( 1 )",
    "SELECT t2.lowest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( lowest point of venue ) that belongs to ( ( state ) , and ( ( highlow ) satisfied that ( ( state name of paper ) equal to ( state name of venue ) ) ) ) , that have ( ( t1.state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) ) )",
    "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"uist\";": "( distinct ( keyphraseid of paper ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( venuename of paper ) equal to ( uist ) )",
    "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;": "( distinct ( authorid of paper ) ) that belongs to ( ( writes ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , that have ( ( year of venue ) equal to ( 2015 ) )",
    "SELECT t5.title FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"University of Michigan\";": "( title of keyphrase ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of movie ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( conference ) satisfied that ( ( cid of keyphrase ) equal to ( cid of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( vldb ) ) and ( ( name of movie ) equal to ( university of michigan ) ) )",
    "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"Irish Pub\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( ( city of paper ) equal to ( dallas ) ) and ( ( category name of venue ) equal to ( irish pub ) ) )",
    "SELECT lake_name FROM lake WHERE area  >  750;": "( lake name ) that belongs to ( lake ) , that have ( ( area ) greater than ( 750 ) )",
    "SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Divesh Srivastava\";": "( name of venue ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of publication ) ) ) , and ( ( writes ) satisfied that ( ( pid of keyphrase ) equal to ( pid of publication ) ) ) , and ( ( writes ) satisfied that ( ( pid of writes ) equal to ( pid of publication ) ) ) , and ( ( author ) satisfied that ( ( aid of keyphrase ) equal to ( aid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of writes ) equal to ( aid of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of movie ) equal to ( divesh srivastava ) ) )",
    "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );": "( river name ) that belongs to ( river ) , that have ( ( traverse ) in ( ( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) ) ) ) ) )",
    "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;": "( title of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vldb ) ) and ( ( citation num of venue ) greater than ( 200 ) ) and ( ( year of venue ) greater than ( 2000 ) ) )",
    "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;": "( distinct ( citedpaperid of movie ) ) , ( the number of ( citedpaperid of movie ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of movie ) ) ) , and ( ( venue ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2010 ) ) and ( ( venuename of venue ) equal to ( emnlp ) ) ) , grouped by ( citedpaperid of movie ) , ordered by ( ( the number of ( citedpaperid of movie ) ) in descending order )",
    "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Cell\" AND t3.year  =  2015;": "( distinct ( the number of ( paperid of movie ) ) ) that belongs to ( ( paper ) , and ( ( journal ) satisfied that ( ( journalid of movie ) equal to ( journalid of venue ) ) ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of movie ) equal to ( paperid of paper ) ) ) ) , that have ( ( ( journalname of venue ) equal to ( cell ) ) and ( ( year of movie ) equal to ( 2015 ) ) )",
    "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN paper AS t2 ON t2.paperid  =  t5.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"li dong\" AND t3.keyphrasename  =  \"semantic parsing\" AND t2.year  =  2016 AND t6.venuename  =  \"acl\";": "( distinct ( paperid of venue ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of keyphrase ) equal to ( keyphraseid of movie ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of keyphrase ) ) ) , and ( ( venue ) satisfied that ( ( venueid of writes ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( li dong ) ) and ( ( keyphrasename of movie ) equal to ( semantic parsing ) ) and ( ( year of venue ) equal to ( 2016 ) ) and ( ( venuename of writes ) equal to ( acl ) ) )",
    "SELECT t3.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";": "( title of movie ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of venue ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( natural language ) )",
    "SELECT traverse FROM river WHERE LENGTH  >  750;": "( traverse ) that belongs to ( river ) , that have ( ( length ) greater than ( 750 ) )",
    "SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );": "( population ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) )",
    "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( conference ) satisfied that ( ( cid of movie ) equal to ( cid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( vldb ) )",
    "SELECT country_name FROM state WHERE state_name  =  \"massachusetts\";": "( country name ) that belongs to ( state ) , that have ( ( state name ) equal to ( massachusetts ) )",
    "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t1.name  =  \"Texas de Brazil\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";": "( the number of ( distinct ( name of paper ) ) ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( ( city of paper ) equal to ( dallas ) ) and ( ( name of paper ) equal to ( texas de brazil ) ) and ( ( state of paper ) equal to ( texas ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT t1.name FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t2.title  =  \"Making database systems usable\";": "( name of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( title of venue ) equal to ( making database systems usable ) )",
    "SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t6.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid JOIN author AS t2 ON t4.authorid  =  t2.authorid WHERE t2.authorname  =  \"Philipp Koehn\" AND t3.keyphrasename  =  \"Machine Translation Output\";": "( distinct ( authorid of paper ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of writes ) equal to ( keyphraseid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of writes ) ) ) , and ( ( writes ) satisfied that ( ( paperid of keyphrase ) equal to ( paperid of paper ) ) ) , and ( ( author ) satisfied that ( ( authorid of keyphrase ) equal to ( authorid of paper ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of venue ) ) ) ) , that have ( ( ( authorname of venue ) equal to ( philipp koehn ) ) and ( ( keyphrasename of movie ) equal to ( machine translation output ) ) )",
    "SELECT SUM ( t2.population ) FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"texas\";": "( the sum of ( population of venue ) ) that belongs to ( ( state ) , and ( ( border info ) satisfied that ( ( state name of venue ) equal to ( border of paper ) ) ) ) , that have ( ( state name of paper ) equal to ( texas ) )",
    "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.release_year  =  2015 AND t3.title  =  \"Joy\";": "( name of venue ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( ( release year of movie ) equal to ( 2015 ) ) and ( ( title of movie ) equal to ( joy ) ) )",
    "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename  =  \"Machine Learning\" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;": "( distinct ( authorname of paper ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( author ) satisfied that ( ( authorid of movie ) equal to ( authorid of paper ) ) ) ) , that have ( ( keyphrasename of paper ) equal to ( machine learning ) ) , grouped by ( authorname of paper ) , ordered by ( ( the number of ( distinct ( paperid of movie ) ) ) in descending order )",
    "SELECT area FROM state;": "( area ) that belongs to ( state )",
    "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";": "( the number of ( distinct ( keyword of paper ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of keyphrase ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of venue ) ) ) ) , that have ( ( name of venue ) equal to ( h. v. jagadish ) )",
    "SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;": "( the average of ( rating ) ) that belongs to ( review ) , that have ( ( year ) equal to ( 2014 ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  \"EMNLP-CoNLL\" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;": "( distinct ( the number of ( distinct ( citingpaperid of paper ) ) ) ) , ( keyphraseid of paper ) , ( paperid of venue ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of venue ) equal to ( citedpaperid of paper ) ) ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of venue ) equal to ( paperid of paper ) ) ) , and ( ( venue ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) ) , that have ( ( ( year of venue ) equal to ( 2012 ) ) and ( ( venuename of movie ) equal to ( emnlp-conll ) ) ) , grouped by ( paperid of venue ) , ( keyphraseid of paper ) , ordered by ( ( the number of ( distinct ( citingpaperid of paper ) ) ) in descending order )",
    "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"Neutralizing Antibody\" AND t4.year  =  2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;": "( distinct ( the number of ( paperid of paper ) ) ) , ( authorid of movie ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of venue ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of movie ) equal to ( paperid of paper ) ) ) ) , that have ( ( ( keyphrasename of venue ) equal to ( neutralizing antibody ) ) and ( ( year of paper ) equal to ( 2012 ) ) ) , grouped by ( authorid of movie ) , ordered by ( ( the number of ( paperid of paper ) ) in descending order )",
    "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of movie ) equal to ( citingpaperid of paper ) ) ) , and ( ( writes ) satisfied that ( ( paperid of venue ) equal to ( citedpaperid of paper ) ) ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( oren etzioni ) )",
    "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";": "( the number of ( distinct ( text of paper ) ) ) that belongs to ( ( user ) , and ( ( tip ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( ( year of paper ) equal to ( 2010 ) ) and ( ( name of venue ) equal to ( michelle ) ) )",
    "SELECT DISTINCT t2.paperid  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\";": "( distinct ( paperid of venue ) ) , ( authorid of paper ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of movie ) equal to ( venueid of venue ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) ) , that have ( ( venuename of movie ) equal to ( acl ) )",
    "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Mesa Grill\" AND t2.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of paper ) equal to ( user id of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( mesa grill ) ) and ( ( category name of venue ) equal to ( restaurant ) ) )",
    "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"colorado\" ) ORDER BY highest_elevation DESC LIMIT 1;": "( highest point ) that belongs to ( highlow ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( colorado ) ) ) ) , ordered by ( ( highest elevation ) in descending order ) , limited to the top ( 1 )",
    "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.title LIKE \"neural attention\" AND t1.year  =  2016 AND t2.venuename  =  \"ACL\";": "( distinct ( paperid of paper ) ) that belongs to ( ( venue ) , and ( ( paper ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( ( t1.title ) like ( neural attention ) ) and ( ( year of paper ) equal to ( 2016 ) ) and ( ( venuename of venue ) equal to ( acl ) ) )",
    "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";": "( the number of ( distinct ( name of venue ) ) ) that belongs to ( ( publication ) , and ( ( cite ) satisfied that ( ( pid of publication ) equal to ( citing of keyphrase ) ) ) , and ( ( publication ) satisfied that ( ( pid of writes ) equal to ( cited of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of publication ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of writes ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200;": "( title of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vldb ) ) and ( ( citation num of venue ) greater than ( 200 ) ) )",
    "SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );": "( border ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( state ) ) ) )",
    "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"The Truman Show\";": "( name of venue ) that belongs to ( ( written by ) , and ( ( movie ) satisfied that ( ( msid of movie ) equal to ( mid of paper ) ) ) , and ( ( writer ) satisfied that ( ( wid of movie ) equal to ( wid of venue ) ) ) ) , that have ( ( title of paper ) equal to ( the truman show ) )",
    "SELECT t2.name FROM domain_conference AS t3 JOIN conference AS t1 ON t3.cid  =  t1.cid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"VLDB\";": "( name of venue ) that belongs to ( ( domain conference ) , and ( ( conference ) satisfied that ( ( cid of movie ) equal to ( cid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of venue ) equal to ( did of movie ) ) ) ) , that have ( ( name of paper ) equal to ( vldb ) )",
    "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;": "( name of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) ) , grouped by ( name of venue ) , that have ( ( the number of ( distinct ( title of paper ) ) ) greater than ( 10 ) )",
    "SELECT name FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  >  1980 AND gender  =  \"female\";": "( name ) that belongs to ( actor ) , that have ( ( ( birth city ) equal to ( new york city ) ) and ( ( birth year ) greater than ( 1980 ) ) and ( ( gender ) equal to ( female ) ) )",
    "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;": "( title of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( pvldb ) ) and ( ( year of venue ) greater than ( 2000 ) ) )",
    "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  =  2002;": "( name of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( vldb ) ) and ( ( year of paper ) equal to ( 2002 ) ) )",
    "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t5.year  >  2005;": "( title of keyphrase ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( name of paper ) equal to ( yunyao li ) ) and ( ( year of keyphrase ) greater than ( 2005 ) ) )",
    "SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;": "( title ) that belongs to ( publication ) , that have ( ( year ) greater than ( 2000 ) ) , ordered by ( ( citation num ) in descending order ) , limited to the top ( 1 )",
    "SELECT COUNT ( DISTINCT state_name ) FROM border_info;": "( the number of ( distinct ( state name ) ) ) that belongs to ( border info )",
    "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid  =  t1.cited JOIN publication AS t2 ON t2.pid  =  t1.citing WHERE t3.title  =  \"Making database systems usable\" AND t2.year  <  2010;": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( publication ) , and ( ( cite ) satisfied that ( ( pid of movie ) equal to ( cited of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( citing of paper ) ) ) ) , that have ( ( ( title of movie ) equal to ( making database systems usable ) ) and ( ( year of venue ) less than ( 2010 ) ) )",
    "SELECT SUM ( population ) FROM state;": "( the sum of ( population ) ) that belongs to ( state )",
    "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( t1.area ) FROM state AS t1 JOIN river AS t2 ON t1.state_name  =  t2.traverse WHERE t2.river_name  =  \"mississippi\" ) );": "( population ) that belongs to ( city ) , that have ( ( city name ) equal to ( capital ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area of paper ) ) that belongs to ( ( state ) , and ( ( river ) satisfied that ( ( state name of paper ) equal to ( traverse of venue ) ) ) ) , that have ( ( river name of venue ) equal to ( mississippi ) ) ) )",
    "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );": "( state name ) that belongs to ( state ) , that have ( ( state_name ) not in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( texas ) ) ) )",
    "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Vintner Grill\" AND t2.likes  >  9;": "( text of venue ) that belongs to ( ( tip ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vintner grill ) ) and ( ( likes of venue ) greater than ( 9 ) ) )",
    "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";": "( the number of ( distinct ( text of paper ) ) ) that belongs to ( ( user ) , and ( ( tip ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( name of venue ) equal to ( michelle ) )",
    "SELECT lake_name FROM lake WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"texas\" );": "( lake name ) that belongs to ( lake ) , that have ( ( state_name ) in ( ( border ) that belongs to ( border info ) , that have ( ( state name ) equal to ( texas ) ) ) )",
    "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.citation_num  >  200;": "( title of paper ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( name of venue ) equal to ( pvldb ) ) and ( ( citation num of paper ) greater than ( 200 ) ) )",
    "SELECT DISTINCT COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  >  2;": "( distinct ( the number of ( citingpaperid of movie ) ) ) that belongs to ( ( paper ) , and ( ( cite ) satisfied that ( ( paperid of paper ) equal to ( citedpaperid of movie ) ) ) , and ( ( venue ) satisfied that ( ( venueid of venue ) equal to ( venueid of paper ) ) ) ) , that have ( ( venuename of venue ) equal to ( acl ) ) , grouped by ( citingpaperid of movie ) , that have ( ( the number of ( distinct ( citedpaperid of movie ) ) ) greater than ( 2 ) )",
    "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );": "( population ) that belongs to ( city ) , that have ( ( city name ) equal to ( capital ) that belongs to ( state ) , that have ( ( area ) equal to ( the maximum of ( area ) ) that belongs to ( state ) ) )",
    "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\" AND t3.release_year  >  2006;": "( title of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( steven spielberg ) ) and ( ( release year of movie ) greater than ( 2006 ) ) )",
    "SELECT DISTINCT t1.city_name FROM city AS t1 JOIN river AS t2 ON t2.traverse  =  t1.state_name WHERE t1.population  =  ( SELECT MAX ( t1.population ) FROM river AS t2 JOIN city AS t1 ON t2.traverse  =  t1.state_name );": "( distinct ( city name of paper ) ) that belongs to ( ( city ) , and ( ( river ) satisfied that ( ( traverse of venue ) equal to ( state name of paper ) ) ) ) , that have ( ( population of paper ) equal to ( the maximum of ( population of paper ) ) that belongs to ( ( river ) , and ( ( city ) satisfied that ( ( traverse of venue ) equal to ( state name of paper ) ) ) ) )",
    "SELECT DISTINCT COUNT ( t4.paperid ) FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN paperkeyphrase AS t1 ON t4.paperid  =  t1.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t2.datasetname  =  \"ImageNet\" AND t5.keyphrasename  =  \"deep learning\";": "( distinct ( the number of ( paperid of paper ) ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of movie ) equal to ( datasetid of venue ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of movie ) ) ) , and ( ( paperkeyphrase ) satisfied that ( ( paperid of paper ) equal to ( paperid of paper ) ) ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of paper ) equal to ( keyphraseid of keyphrase ) ) ) ) , that have ( ( ( datasetname of venue ) equal to ( imagenet ) ) and ( ( keyphrasename of keyphrase ) equal to ( deep learning ) ) )",
    "SELECT t2.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t1.name  =  \"H. V. Jagadish\";": "( name of venue ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t5.year  >  2000;": "( name of venue ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( year of keyphrase ) greater than ( 2000 ) ) )",
    "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );": "( population ) that belongs to ( city ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) )",
    "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;": "( the number of ( distinct ( title of keyphrase ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( name of paper ) equal to ( divesh srivastava ) ) and ( ( year of keyphrase ) less than ( 2000 ) ) )",
    "SELECT t1.title FROM movie AS t1 JOIN CAST AS t2 ON t1.mid  =  t2.msid WHERE t2.role  =  \"Daffy Duck\";": "( title of paper ) that belongs to ( ( movie ) , and ( ( cast ) satisfied that ( ( mid of paper ) equal to ( msid of venue ) ) ) ) , that have ( ( role of venue ) equal to ( daffy duck ) )",
    "SELECT city FROM business WHERE name  =  \"Taj Mahal\";": "( city ) that belongs to ( business ) , that have ( ( name ) equal to ( taj mahal ) )",
    "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"April\" AND t2.name  =  \"Michelle\";": "( the number of ( distinct ( text of paper ) ) ) that belongs to ( ( user ) , and ( ( tip ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( ( month of paper ) equal to ( april ) ) and ( ( name of venue ) equal to ( michelle ) ) )",
    "SELECT t3.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Kate Winslet\";": "( name of movie ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of keyphrase ) equal to ( msid of paper ) ) ) , and ( ( directed by ) satisfied that ( ( mid of keyphrase ) equal to ( msid of venue ) ) ) , and ( ( director ) satisfied that ( ( did of movie ) equal to ( did of venue ) ) ) ) , that have ( ( name of paper ) equal to ( kate winslet ) )",
    "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Dallas\";": "( name of movie ) that belongs to ( ( tip ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( city of paper ) equal to ( dallas ) )",
    "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"colorado\" ) );": "( state name ) that belongs to ( highlow ) , that have ( ( highest elevation ) equal to ( the maximum of ( highest elevation ) ) that belongs to ( highlow ) , that have ( ( state name ) in ( ( traverse ) that belongs to ( river ) , that have ( ( river name ) equal to ( colorado ) ) ) ) )",
    "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Kabob Palace\" AND t2.year  =  2014;": "( text of venue ) that belongs to ( ( review ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( kabob palace ) ) and ( ( year of venue ) equal to ( 2014 ) ) )",
    "SELECT AVG ( t1.rating ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";": "( the average of ( rating of paper ) ) that belongs to ( ( user ) , and ( ( review ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( name of venue ) equal to ( michelle ) )",
    "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"montana\" ) AND state_name  =  \"montana\";": "( state name ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) equal to ( montana ) ) ) and ( ( state name ) equal to ( montana ) ) )",
    "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );": "( city name ) that belongs to ( city ) , that have ( ( ( population ) equal to ( the minimum of ( population ) ) that belongs to ( city ) , that have ( ( state name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) ) ) ) and ( ( state name ) in ( ( state name ) that belongs to ( state ) , that have ( ( area ) equal to ( the minimum of ( area ) ) that belongs to ( state ) ) ) ) )",
    "SELECT t1.name FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t3.role  =  \"Olivia Pope\" AND t2.title  =  \"Scandal\";": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( tv series ) satisfied that ( ( sid of venue ) equal to ( msid of movie ) ) ) ) , that have ( ( ( role of movie ) equal to ( olivia pope ) ) and ( ( title of venue ) equal to ( scandal ) ) )",
    "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;": "( title of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( ( name of paper ) equal to ( h. v. jagadish ) ) and ( ( year of movie ) greater than ( 2000 ) ) )",
    "SELECT lowest_elevation FROM highlow WHERE state_name  =  \"pennsylvania\";": "( lowest elevation ) that belongs to ( highlow ) , that have ( ( state name ) equal to ( pennsylvania ) )",
    "SELECT COUNT ( DISTINCT name ) FROM organization;": "( the number of ( distinct ( name ) ) ) that belongs to ( organization )",
    "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Cafe Zinho\" AND t3.name  =  \"Niloofar\";": "( the sum of ( likes of venue ) ) that belongs to ( ( tip ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of movie ) equal to ( user id of venue ) ) ) ) , that have ( ( ( name of paper ) equal to ( cafe zinho ) ) and ( ( name of movie ) equal to ( niloofar ) ) )",
    "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";": "( the number of ( distinct ( title of venue ) ) ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( pvldb ) )",
    "SELECT t1.name FROM CAST AS t3 JOIN actor AS t2 ON t3.aid  =  t2.aid JOIN movie AS t5 ON t5.mid  =  t3.msid JOIN made_by AS t4 ON t5.mid  =  t4.msid JOIN producer AS t1 ON t1.pid  =  t4.pid WHERE t2.name  =  \"Kate Winslet\";": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( movie ) satisfied that ( ( mid of keyphrase ) equal to ( msid of movie ) ) ) , and ( ( made by ) satisfied that ( ( mid of keyphrase ) equal to ( msid of paper ) ) ) , and ( ( producer ) satisfied that ( ( pid of paper ) equal to ( pid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( kate winslet ) )",
    "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;": "( title of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( vldb ) ) and ( ( year of venue ) greater than ( 2000 ) ) )",
    "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";": "( title of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid  =  t3.msid JOIN producer AS t1 ON t1.pid  =  t3.pid JOIN written_by AS t5 ON t5.msid  =  t2.mid JOIN writer AS t4 ON t5.wid  =  t4.wid WHERE t1.name  =  \"Woody Allen\" AND t4.name  =  \"Woody Allen\";": "( title of venue ) that belongs to ( ( movie ) , and ( ( made by ) satisfied that ( ( mid of venue ) equal to ( msid of movie ) ) ) , and ( ( producer ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( written by ) satisfied that ( ( msid of keyphrase ) equal to ( mid of venue ) ) ) , and ( ( writer ) satisfied that ( ( wid of keyphrase ) equal to ( wid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( woody allen ) ) and ( ( name of paper ) equal to ( woody allen ) ) )",
    "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Multiuser Receiver in the Decision Feedback\" AND t3.year  =  2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename )  >  1;": "( distinct ( paperid of movie ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( multiuser receiver in the decision feedback ) ) and ( ( year of movie ) equal to ( 2016 ) ) ) , grouped by ( paperid of movie ) , that have ( ( the number of ( distinct ( keyphrasename of paper ) ) ) greater than ( 1 ) )",
    "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";": "( title of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( vldb ) )",
    "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid WHERE t2.role  =  \"Mr. Bean\";": "( name of paper ) that belongs to ( ( cast ) , and ( ( actor ) satisfied that ( ( aid of venue ) equal to ( aid of paper ) ) ) ) , that have ( ( role of venue ) equal to ( mr. bean ) )",
    "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\";": "( name of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) ) , that have ( ( ( state of paper ) equal to ( texas ) ) and ( ( category name of venue ) equal to ( moroccan ) ) and ( ( category name of movie ) equal to ( restaurant ) ) )",
    "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;": "( name of paper ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of paper ) equal to ( jid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( pvldb ) ) , grouped by ( name of paper ) , ordered by ( ( the number of ( distinct ( title of paper ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT name FROM organization WHERE continent  =  \"North America\";": "( name ) that belongs to ( organization ) , that have ( ( continent ) equal to ( north america ) )",
    "SELECT t2.birth_city FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"The Past\";": "( birth city of venue ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( title of movie ) equal to ( the past ) )",
    "SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.name  =  \"University of Michigan\";": "( name of paper ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of movie ) equal to ( did of paper ) ) ) , and ( ( organization ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( ( name of movie ) equal to ( databases ) ) and ( ( name of venue ) equal to ( university of michigan ) ) )",
    "SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Euclidean Distance\" AND t4.venuename  =  \"NIPS\";": "( distinct ( citingpaperid of keyphrase ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of venue ) equal to ( keyphraseid of paper ) ) ) , and ( ( cite ) satisfied that ( ( paperid of venue ) equal to ( citingpaperid of keyphrase ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( citedpaperid of keyphrase ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( keyphrasename of paper ) equal to ( euclidean distance ) ) and ( ( venuename of paper ) equal to ( nips ) ) )",
    "SELECT lake_name FROM lake;": "( lake name ) that belongs to ( lake )",
    "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;": "( the number of ( distinct ( title of venue ) ) ) , ( year of venue ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( pvldb ) ) , grouped by ( year of venue )",
    "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";": "( house number of movie ) , ( name of paper ) that belongs to ( ( restaurant ) , and ( ( geographic ) satisfied that ( ( city name of paper ) equal to ( city name of venue ) ) ) , and ( ( location ) satisfied that ( ( id of paper ) equal to ( restaurant id of movie ) ) ) ) , that have ( ( ( region of venue ) equal to ( bay area ) ) and ( ( name of paper ) equal to ( denny ) ) )",
    "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ameet soni\" GROUP BY t3.year ORDER BY t3.year;": "( distinct ( the number of ( paperid of movie ) ) ) , ( year of movie ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of venue ) equal to ( paperid of movie ) ) ) ) , that have ( ( authorname of paper ) equal to ( ameet soni ) ) , grouped by ( year of movie ) , ordered by ( ( year of movie ) )",
    "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Liquid\" AND t6.venuename  =  \"Automatica\";": "( distinct ( paperid of venue ) ) that belongs to ( ( paperkeyphrase ) , and ( ( keyphrase ) satisfied that ( ( keyphraseid of keyphrase ) equal to ( keyphraseid of movie ) ) ) , and ( ( writes ) satisfied that ( ( paperid of paper ) equal to ( paperid of keyphrase ) ) ) , and ( ( paper ) satisfied that ( ( paperid of paper ) equal to ( paperid of venue ) ) ) , and ( ( author ) satisfied that ( ( authorid of paper ) equal to ( authorid of paper ) ) ) , and ( ( venue ) satisfied that ( ( venueid of writes ) equal to ( venueid of venue ) ) ) ) , that have ( ( ( authorname of paper ) equal to ( eric c. kerrigan ) ) and ( ( keyphrasename of movie ) equal to ( liquid ) ) and ( ( venuename of writes ) equal to ( automatica ) ) )",
    "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"Michelle\";": "( the number of ( distinct ( name ) ) ) that belongs to ( user ) , that have ( ( name ) equal to ( michelle ) )",
    "SELECT COUNT ( DISTINCT state_name ) FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );": "( the number of ( distinct ( state name ) ) ) that belongs to ( state ) , that have ( ( state_name ) not in ( ( traverse ) that belongs to ( river ) ) )",
    "SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN review AS t4 ON t4.business_id  =  t1.business_id JOIN USER AS t5 ON t5.user_id  =  t4.user_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"category_category_name1\" AND t5.name  =  \"Michelle\";": "( text of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) , and ( ( category ) satisfied that ( ( business id of movie ) equal to ( business id of paper ) ) ) , and ( ( review ) satisfied that ( ( business id of paper ) equal to ( business id of paper ) ) ) , and ( ( user ) satisfied that ( ( user id of keyphrase ) equal to ( user id of paper ) ) ) ) , that have ( ( ( category name of venue ) equal to ( italian ) ) and ( ( category name of movie ) equal to ( category category name1 ) ) and ( ( name of keyphrase ) equal to ( michelle ) ) )",
    "SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did  =  t2.did JOIN publication AS t5 ON t5.pid  =  t2.pid JOIN writes AS t3 ON t3.pid  =  t5.pid JOIN author AS t1 ON t3.aid  =  t1.aid JOIN organization AS t6 ON t6.oid  =  t1.oid WHERE t4.name  =  \"Databases\" AND t6.name  =  \"University of Michigan\" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1;": "( name of paper ) that belongs to ( ( domain ) , and ( ( domain publication ) satisfied that ( ( did of paper ) equal to ( did of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of keyphrase ) equal to ( pid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( organization ) satisfied that ( ( oid of writes ) equal to ( oid of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( databases ) ) and ( ( name of writes ) equal to ( university of michigan ) ) ) , grouped by ( name of paper ) , ordered by ( ( the sum of ( citation num of keyphrase ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT t3.budget  ,  t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" ORDER BY t3.release_year DESC LIMIT 1;": "( budget of movie ) , ( title of movie ) that belongs to ( ( director ) , and ( ( directed by ) satisfied that ( ( did of venue ) equal to ( did of paper ) ) ) , and ( ( movie ) satisfied that ( ( mid of movie ) equal to ( msid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( quentin tarantino ) ) , ordered by ( ( release year of movie ) in descending order ) , limited to the top ( 1 )",
    "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";": "( name of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( name of venue ) equal to ( vldb ) )",
    "SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname != \"Mark Steedman\" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Mark Steedman\" );": "( distinct ( the number of ( distinct ( authorid of paper ) ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( ( authorname of paper ) not equal to ( mark steedman ) ) and ( ( t2.paperid ) in ( ( paperid of venue ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( authorid of venue ) equal to ( authorid of paper ) ) ) ) , that have ( ( authorname of paper ) equal to ( mark steedman ) ) ) ) )",
    "SELECT state FROM business WHERE name  =  \"Whataburger\";": "( state ) that belongs to ( business ) , that have ( ( name ) equal to ( whataburger ) )",
    "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.continent  =  \"North America\";": "( the number of ( distinct ( name of venue ) ) ) that belongs to ( ( domain author ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) , and ( ( domain ) satisfied that ( ( did of movie ) equal to ( did of paper ) ) ) , and ( ( organization ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) ) , that have ( ( ( name of movie ) equal to ( databases ) ) and ( ( continent of venue ) equal to ( north america ) ) )",
    "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"RGB-D Object Dataset\" AND t3.title  =  \"Class consistent multi-modal fusion with binary features\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";": "( distinct ( paperid of movie ) ) that belongs to ( ( paperdataset ) , and ( ( dataset ) satisfied that ( ( datasetid of venue ) equal to ( datasetid of paper ) ) ) , and ( ( paper ) satisfied that ( ( paperid of movie ) equal to ( paperid of venue ) ) ) , and ( ( venue ) satisfied that ( ( venueid of paper ) equal to ( venueid of movie ) ) ) ) , that have ( ( ( datasetname of paper ) equal to ( rgb-d object dataset ) ) and ( ( title of movie ) equal to ( class consistent multi-modal fusion with binary features ) ) and ( ( year of movie ) equal to ( 2016 ) ) and ( ( venuename of paper ) equal to ( cvpr ) ) )",
    "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";": "( the number of ( distinct ( keyword of paper ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of paper ) ) ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of movie ) ) ) ) , that have ( ( name of movie ) equal to ( pvldb ) )",
    "SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );": "( the number of ( border ) ) that belongs to ( border info ) , that have ( ( state_name ) in ( ( state name ) that belongs to ( state ) , that have ( ( population ) equal to ( the maximum of ( population ) ) that belongs to ( state ) ) ) )",
    "SELECT mountain_altitude FROM mountain WHERE mountain_name  =  \"mckinley\";": "( mountain altitude ) that belongs to ( mountain ) , that have ( ( mountain name ) equal to ( mckinley ) )",
    "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;": "( keyword of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of paper ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of paper ) ) ) , and ( ( journal ) satisfied that ( ( jid of venue ) equal to ( jid of movie ) ) ) ) , that have ( ( name of movie ) equal to ( pvldb ) ) , grouped by ( keyword of paper ) , ordered by ( ( the number of ( distinct ( title of venue ) ) ) in descending order ) , limited to the top ( 1 )",
    "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t2.category_name  =  \"category_category_name0\";": "( city of paper ) that belongs to ( ( category ) , and ( ( business ) satisfied that ( ( business id of venue ) equal to ( business id of paper ) ) ) ) , that have ( ( ( name of paper ) equal to ( mgm grand buffet ) ) and ( ( category name of venue ) equal to ( category category name0 ) ) )",
    "SELECT COUNT ( DISTINCT t2.name ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";": "( the number of ( distinct ( name of venue ) ) ) that belongs to ( ( writes ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of keyphrase ) ) ) , and ( ( writes ) satisfied that ( ( pid of paper ) equal to ( pid of keyphrase ) ) ) , and ( ( author ) satisfied that ( ( aid of paper ) equal to ( aid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( h. v. jagadish ) )",
    "SELECT homepage FROM journal WHERE name  =  \"PVLDB\";": "( homepage ) that belongs to ( journal ) , that have ( ( name ) equal to ( pvldb ) )",
    "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" AND t4.year  >  2000;": "( title of paper ) that belongs to ( ( organization ) , and ( ( author ) satisfied that ( ( oid of venue ) equal to ( oid of paper ) ) ) , and ( ( writes ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( university of michigan ) ) and ( ( year of paper ) greater than ( 2000 ) ) )",
    "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\";": "( title of writes ) that belongs to ( ( publication ) , and ( ( journal ) satisfied that ( ( jid of writes ) equal to ( jid of paper ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of writes ) ) ) , and ( ( writes ) satisfied that ( ( pid of keyphrase ) equal to ( pid of writes ) ) ) , and ( ( author ) satisfied that ( ( aid of keyphrase ) equal to ( aid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( h. v. jagadish ) ) and ( ( name of paper ) equal to ( yunyao li ) ) and ( ( name of paper ) equal to ( pvldb ) ) )",
    "SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;": "( distinct ( venueid ) ) that belongs to ( paper ) , that have ( ( year ) equal to ( 2013 ) )",
    "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" ORDER BY t2.citation_num DESC LIMIT 1;": "( title of venue ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of venue ) equal to ( cid of paper ) ) ) ) , that have ( ( name of paper ) equal to ( vldb ) ) , ordered by ( ( citation num of venue ) in descending order ) , limited to the top ( 1 )",
    "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002;": "( name of paper ) that belongs to ( ( publication ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) , and ( ( writes ) satisfied that ( ( pid of movie ) equal to ( pid of paper ) ) ) , and ( ( author ) satisfied that ( ( aid of movie ) equal to ( aid of paper ) ) ) ) , that have ( ( ( name of venue ) equal to ( vldb ) ) and ( ( year of paper ) less than ( 2002 ) ) )",
    "SELECT COUNT ( DISTINCT t3.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";": "( the number of ( distinct ( title of movie ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of venue ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of movie ) equal to ( pid of venue ) ) ) ) , that have ( ( keyword of paper ) equal to ( natural language ) )",
    "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Making database systems usable\";": "( the number of ( distinct ( keyword of paper ) ) ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of movie ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of venue ) equal to ( pid of movie ) ) ) ) , that have ( ( title of venue ) equal to ( making database systems usable ) )",
    "SELECT t4.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Information Retrieval\";": "( title of paper ) that belongs to ( ( publication keyword ) , and ( ( keyword ) satisfied that ( ( kid of movie ) equal to ( kid of paper ) ) ) , and ( ( publication ) satisfied that ( ( pid of paper ) equal to ( pid of movie ) ) ) , and ( ( conference ) satisfied that ( ( cid of paper ) equal to ( cid of venue ) ) ) ) , that have ( ( ( name of venue ) equal to ( vldb ) ) and ( ( keyword of paper ) equal to ( information retrieval ) ) )",
    "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.rating  >  4 AND t2.name  =  \"Patrick\";": "( text of paper ) that belongs to ( ( user ) , and ( ( review ) satisfied that ( ( user id of venue ) equal to ( user id of paper ) ) ) ) , that have ( ( ( rating of paper ) greater than ( 4 ) ) and ( ( name of venue ) equal to ( patrick ) ) )"
}